{
    "filename": "theories/Word.v",
    "coq_project": "bbv",
    "vernac_cmds": [
        [
            "Require Import Coq.Arith.Arith Coq.Arith.Div2 Coq.NArith.NArith Coq.Bool.Bool Coq.ZArith.ZArith.",
            "VernacRequire",
            "e2e89939b391cf39d63f1dc1353c7ab3b92a37d4"
        ],
        [
            "Require Import Coq.Logic.Eqdep_dec Coq.Logic.EqdepFacts.",
            "VernacRequire",
            "8da19c621776206c8fa7e87472d6af839ab0257c"
        ],
        [
            "Require Import Coq.Program.Tactics Coq.Program.Equality.",
            "VernacRequire",
            "fab5b00d04c5443bd9c41b50d51df3fc61b85915"
        ],
        [
            "Require Import Coq.setoid_ring.Ring.",
            "VernacRequire",
            "149ec95b29ce21620e60070e52aed2564ef46a5e"
        ],
        [
            "Require Import Coq.setoid_ring.Ring_polynom.",
            "VernacRequire",
            "85d34fad2806ef4ab5691964dd2a2edda6d3d137"
        ],
        [
            "Require Import bbv.Nomega.",
            "VernacRequire",
            "1f5520a389f0b05d450186b528ef9c305abc28a4"
        ],
        [
            "Require Export bbv.ZLib bbv.NatLib bbv.NLib.",
            "VernacRequire",
            "82998a1483081784ee7b7bf7289ca556175a3cdf"
        ],
        [
            "Require Export bbv.N_Z_nat_conversions.",
            "VernacRequire",
            "b70de057e837aea21c1ce12479c3feab2ad772fa"
        ],
        [
            "Require Export bbv.DepEq bbv.DepEqNat.",
            "VernacRequire",
            "e02df9a802e4b971535e84158d4590e400ac7a10"
        ],
        [
            "Require Import bbv.ReservedNotations.",
            "VernacRequire",
            "1c24e9703d14f8d7ceebc5c9f418fdbb3ca6fecd"
        ],
        [
            "Require Import Coq.micromega.Lia.",
            "VernacRequire",
            "8a247e19771e4c9d7901b2c1dd634e22292da4a8"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Inductive word : nat -> Set := | WO : word O | WS : bool -> forall n, word n -> word (S n).",
            "VernacInductive",
            "708bc6b848c264e5e1d0be2fc9daf6e289bdd5d7"
        ],
        [
            "Delimit Scope word_scope with word.",
            "VernacDelimiters",
            "6d09ecb328c8f6529b18fcd7c4fd8cbdff9d9b47"
        ],
        [
            "Bind Scope word_scope with word.",
            "VernacBindScope",
            "563a3d8c1d718b45a9766285f5964f32cab6b39c"
        ],
        [
            "Open Scope word_scope.",
            "VernacOpenCloseScope",
            "33ebe2b2bab479a4d524cc7a730c70ae08cdc0f3"
        ],
        [
            "Fixpoint wordToNat sz (w : word sz) : nat := match w with | WO => O | WS false w' => (wordToNat w') * 2 | WS true w' => S (wordToNat w' * 2) end.",
            "VernacFixpoint",
            "bab509c40ac5adcfbc3872ded2e251a1a86841e6"
        ],
        [
            "Fixpoint wordToNat' sz (w : word sz) : nat := match w with | WO => O | WS false w' => 2 * wordToNat w' | WS true w' => S (2 * wordToNat w') end.",
            "VernacFixpoint",
            "4cc9f46fd017b57d8e76774fbd0ec4728ec5aabd"
        ],
        [
            "Fixpoint natToWord (sz n : nat) : word sz := match sz with | O => WO | S sz' => WS (mod2 n) (natToWord sz' (div2 n)) end.",
            "VernacFixpoint",
            "1b1078b6a70b7b7c22c5d79541ac166e431df33d"
        ],
        [
            "Fixpoint wordToN sz (w : word sz) : N := match w with | WO => 0 | WS false w' => 2 * wordToN w' | WS true w' => N.succ (2 * wordToN w') end%N.",
            "VernacFixpoint",
            "fa0225b6ed73b4e96a56499d4b326e76ab7bcb87"
        ],
        [
            "Definition wzero sz := natToWord sz 0.",
            "VernacDefinition",
            "dee3e6f1de1a3801e8effbe260f4434f9f01ae6a"
        ],
        [
            "Fixpoint wzero' (sz : nat) : word sz := match sz with | O => WO | S sz' => WS false (wzero' sz') end.",
            "VernacFixpoint",
            "a6a3ed672f25ed62224c781838801bb548d16c43"
        ],
        [
            "Fixpoint posToWord (sz : nat) (p : positive) {struct p} : word sz := match sz with | O => WO | S sz' => match p with | xI p' => WS true (posToWord sz' p') | xO p' => WS false (posToWord sz' p') | xH => WS true (wzero' sz') end end.",
            "VernacFixpoint",
            "084405ef3476407ea378e117b4fbfaba6dba6839"
        ],
        [
            "Definition NToWord (sz : nat) (n : N) : word sz := match n with | N0 => wzero' sz | Npos p => posToWord sz p end.",
            "VernacDefinition",
            "fcffc804ec84a1df64ead7918e99de9278336bb4"
        ],
        [
            "Definition wone sz := natToWord sz 1.",
            "VernacDefinition",
            "e06350ec3fcc63a20893fc2b6aab8cb8dfeae0ec"
        ],
        [
            "Fixpoint wones (sz : nat) : word sz := match sz with | O => WO | S sz' => WS true (wones sz') end.",
            "VernacFixpoint",
            "ec86635637c18dcff2b6c85b9ecccf4f68bd3b96"
        ],
        [
            "Fixpoint wmsb sz (w : word sz) (a : bool) : bool := match w with | WO => a | WS b x => wmsb x b end.",
            "VernacFixpoint",
            "3ab5b48739d191580c64967b081aa94fd654e4a5"
        ],
        [
            "Definition wlsb sz (w: word (S sz)) := match w with | WO => idProp | WS b _ => b end.",
            "VernacDefinition",
            "3991be75adba43afbcf7da15133bc4d85579d37c"
        ],
        [
            "Definition whd sz (w : word (S sz)) : bool := match w in word sz' return match sz' with | O => unit | S _ => bool end with | WO => tt | WS b _ => b end.",
            "VernacDefinition",
            "0ebc78583737fd78628798ab0efcb5af678e3e78"
        ],
        [
            "Definition wtl sz (w : word (S sz)) : word sz := match w in word sz' return match sz' with | O => unit | S sz'' => word sz'' end with | WO => tt | WS _ w' => w' end.",
            "VernacDefinition",
            "5aaccfc87d80c0f72c223796fbd74014a40a175a"
        ],
        [
            "Fixpoint rep_bit (n : nat) (b : word 1) : word n := match n as n0 return (word n0) with | 0 => WO | S n0 => WS (whd b) (rep_bit n0 b) end.",
            "VernacFixpoint",
            "a9b6f8f7c71681026d672e4f2a8be5a9b950dd75"
        ],
        [
            "Lemma shatter_word : forall n (a : word n), match n return word n -> Prop with | O => fun a => a = WO | S _ => fun a => a = WS (whd a) (wtl a) end a.",
            "VernacStartTheoremProof",
            "6e8d4ea1d22bc1c60ed4ceef4892bf82f4961169"
        ],
        [
            "destruct a; eauto.",
            "VernacExtend",
            "00f083951347a10010e279bb27981b630eaafae9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shatter_word_S : forall n (a : word (S n)), exists b, exists c, a = WS b c.",
            "VernacStartTheoremProof",
            "64e2338067962633c04162bfb9f81df8888dd20c"
        ],
        [
            "intros n a; repeat eexists; apply (shatter_word a).",
            "VernacExtend",
            "2ddd21fc0c2c276982b13c9927449bddea7993d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shatter_word_0 : forall a : word 0, a = WO.",
            "VernacStartTheoremProof",
            "5d18caeafec8a18a50c774438c2a3be0544505ab"
        ],
        [
            "intros a; apply (shatter_word a).",
            "VernacExtend",
            "14cac8b9308f29138237b9368bc3b418259f92f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve shatter_word_0.",
            "VernacHints",
            "f520b6fbd4cccef0d2d551dbb1e0b8de2314a1be"
        ],
        [
            "Definition weq : forall sz (x y : word sz), {x = y} + {x <> y}.",
            "VernacDefinition",
            "288089f344555e77bb3e730b6a5131351605692a"
        ],
        [
            "refine (fix weq sz (x : word sz) : forall y : word sz, {x = y} + {x <> y} := match x in word sz return forall y : word sz, {x = y} + {x <> y} with | WO => fun _ => left _ _ | WS b x' => fun y => if bool_dec b (whd y) then if weq _ x' (wtl y) then left _ _ else right _ _ else right _ _ end); clear weq.",
            "VernacExtend",
            "a575905b0886cf9eff2ef493f0185f5f5407dfd6"
        ],
        [
            "abstract (symmetry; apply shatter_word_0).",
            "VernacExtend",
            "5ac83f729a5dc8399876d661219cec14052df340"
        ],
        [
            "abstract (subst; symmetry; apply (shatter_word (n:=S _) _)).",
            "VernacExtend",
            "4acce6c1e599ed48e330ac73c8c80e32c5d9807a"
        ],
        [
            "let y' := y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, eq_nat_dec).",
            "VernacExtend",
            "96859e333d9a31fe185171572a53d9915d8f126a"
        ],
        [
            "let y' := y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto).",
            "VernacExtend",
            "b0a97b1e6d84e4c225bce3b9717ccf3852756dec"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint weqb sz (x : word sz) : word sz -> bool := match x in word sz return word sz -> bool with | WO => fun _ => true | WS b x' => fun y => if eqb b (whd y) then if @weqb _ x' (wtl y) then true else false else false end.",
            "VernacFixpoint",
            "9fc9cbae1e48913b56109a542f23f89c7ace3deb"
        ],
        [
            "Fixpoint combine (sz1 : nat) (w : word sz1) : forall sz2, word sz2 -> word (sz1 + sz2) := match w in word sz1 return forall sz2, word sz2 -> word (sz1 + sz2) with | WO => fun _ w' => w' | WS b w' => fun _ w'' => WS b (combine w' w'') end.",
            "VernacFixpoint",
            "df397830d3bfbbec86105db3c1c0dd325975a2e9"
        ],
        [
            "Fixpoint split1 (sz1 sz2 : nat) : word (sz1 + sz2) -> word sz1 := match sz1 with | O => fun _ => WO | S sz1' => fun w => WS (whd w) (split1 sz1' sz2 (wtl w)) end.",
            "VernacFixpoint",
            "70fa900b33cf12d65e23dc6abb4db56c22ead06c"
        ],
        [
            "Fixpoint split2 (sz1 sz2 : nat) : word (sz1 + sz2) -> word sz2 := match sz1 with | O => fun w => w | S sz1' => fun w => split2 sz1' sz2 (wtl w) end.",
            "VernacFixpoint",
            "160044654c65116f337b007600b34c7bafc92df6"
        ],
        [
            "Definition sext (sz : nat) (w : word sz) (sz' : nat) : word (sz + sz') := if wmsb w false then combine w (wones sz') else combine w (wzero sz').",
            "VernacDefinition",
            "2de6c177035c4d4f602f67b61ac38ec1646b6ee5"
        ],
        [
            "Definition zext (sz : nat) (w : word sz) (sz' : nat) : word (sz + sz') := combine w (wzero sz').",
            "VernacDefinition",
            "9670bf102b88596100a76d241da6d75010c30345"
        ],
        [
            "Definition wneg sz (x : word sz) : word sz := NToWord sz (Npow2 sz - wordToN x).",
            "VernacDefinition",
            "9ee72350b09bc9faded7499af13d6e0b61de4a14"
        ],
        [
            "Definition wordBin (f : N -> N -> N) sz (x y : word sz) : word sz := NToWord sz (f (wordToN x) (wordToN y)).",
            "VernacDefinition",
            "e68ad4bc6a6fb8ec573dfae794b42c4fcdb683ee"
        ],
        [
            "Definition wplus := wordBin Nplus.",
            "VernacDefinition",
            "6bdeec3f9742856a7582d9296d42cd4dad8e3b6f"
        ],
        [
            "Definition wmult := wordBin Nmult.",
            "VernacDefinition",
            "0e36e9590efa7590393ad21953326e06515b0ad3"
        ],
        [
            "Definition wdiv := wordBin N.div.",
            "VernacDefinition",
            "c0bdb1897d30223da0eb336b47fe5eb1f490b73e"
        ],
        [
            "Definition wmod := wordBin Nmod.",
            "VernacDefinition",
            "61f44301019545e5aba0178f865bf46d4ba9fa6c"
        ],
        [
            "Definition wmult' sz (x y : word sz) : word sz := split2 sz sz (NToWord (sz + sz) (Nmult (wordToN x) (wordToN y))).",
            "VernacDefinition",
            "f9b99ba876d854f26bddf8cb9a38c1a35be05481"
        ],
        [
            "Definition wminus sz (x y : word sz) : word sz := wplus x (wneg y).",
            "VernacDefinition",
            "291ba502c5800a3fdc0a1a14d7f61aeda0217dfa"
        ],
        [
            "Definition wnegN sz (x : word sz) : word sz := natToWord sz (pow2 sz - wordToNat x).",
            "VernacDefinition",
            "2118725b0d7de86ab517fb4827a2f92b56dd52f4"
        ],
        [
            "Definition wordBinN (f : nat -> nat -> nat) sz (x y : word sz) : word sz := natToWord sz (f (wordToNat x) (wordToNat y)).",
            "VernacDefinition",
            "587067041a19f2a804acbab5227dd269f2af7477"
        ],
        [
            "Definition wplusN := wordBinN plus.",
            "VernacDefinition",
            "ad0864a54d6564a3f8347a692e77a8f9f7e20706"
        ],
        [
            "Definition wmultN := wordBinN mult.",
            "VernacDefinition",
            "41c12ead2f8d2bcd94ca4a5f200fcbaef0860889"
        ],
        [
            "Definition wmultN' sz (x y : word sz) : word sz := split2 sz sz (natToWord (sz + sz) (mult (wordToNat x) (wordToNat y))).",
            "VernacDefinition",
            "7fcd63e7452a3ecb7e1409222139a9e759205ac9"
        ],
        [
            "Definition wminusN sz (x y : word sz) : word sz := wplusN x (wnegN y).",
            "VernacDefinition",
            "049dcc0b2c42e141705a5cdea69f213409b9cfa8"
        ],
        [
            "Module Import ArithmeticNotations.",
            "VernacDefineModule",
            "f9aea09cdfea91c731bd8ec9126c03783b9f2167"
        ],
        [
            "Notation \"w ~ 1\" := (WS true w) : word_scope.",
            "VernacNotation",
            "601fcb8d076ff51f5f8db89280e34804914febf9"
        ],
        [
            "Notation \"w ~ 0\" := (WS false w) : word_scope.",
            "VernacNotation",
            "46bd3acff95f2f4d7a7cab2fe2d6933236032d4b"
        ],
        [
            "Notation \"^~\" := wneg : word_scope.",
            "VernacNotation",
            "be2ede8d63bde8f8355e32340785c7b17f6d2dee"
        ],
        [
            "Notation \"l ^+ r\" := (@wplus _ l%word r%word) : word_scope.",
            "VernacNotation",
            "956cbb55643f778a1c9988c70902066f12b2887a"
        ],
        [
            "Notation \"l ^* r\" := (@wmult _ l%word r%word) : word_scope.",
            "VernacNotation",
            "7c97a3324b7e611f4d677a0a0d625ff277dd0231"
        ],
        [
            "Notation \"l ^- r\" := (@wminus _ l%word r%word) : word_scope.",
            "VernacNotation",
            "085bb4903bf8906b3020f8b22c5fdb490d5dc145"
        ],
        [
            "Notation \"l ^/ r\" := (@wdiv _ l%word r%word) : word_scope.",
            "VernacNotation",
            "944762ccf0df397ec8b4e2c538156ba44e07245d"
        ],
        [
            "Notation \"l ^% r\" := (@wmod _ l%word r%word) : word_scope.",
            "VernacNotation",
            "785a344b5bc7184cbb045fb18c81d26a2c5abd94"
        ],
        [
            "End ArithmeticNotations.",
            "VernacEndSegment",
            "f798cc8547183bbffe3ffd11e23d37992a0ad9af"
        ],
        [
            "Fixpoint wnot sz (w : word sz) : word sz := match w with | WO => WO | WS b w' => WS (negb b) (wnot w') end.",
            "VernacFixpoint",
            "81dc1ce7934087e3262e35f9d4be659f0e7124c4"
        ],
        [
            "Fixpoint bitwp (f : bool -> bool -> bool) sz (w1 : word sz) : word sz -> word sz := match w1 with | WO => fun _ => WO | WS b w1' => fun w2 => WS (f b (whd w2)) (bitwp f w1' (wtl w2)) end.",
            "VernacFixpoint",
            "e7383986b804c2d2eb2e6fd09fc3ef83bc9b9da6"
        ],
        [
            "Definition wnot' sz := bitwp xorb (wones sz).",
            "VernacDefinition",
            "34b76e2f89ffe72fa19820dd35db4dfa6ccd5af5"
        ],
        [
            "Definition wor := bitwp orb.",
            "VernacDefinition",
            "d5c7d417c5c1e5bb1a7feac2f86572469c98dc40"
        ],
        [
            "Definition wand := bitwp andb.",
            "VernacDefinition",
            "a04e65ad76f50adc3983c8a0ece59948663384d7"
        ],
        [
            "Definition wxor := bitwp xorb.",
            "VernacDefinition",
            "dbd2abcd3ae3c683e028b70bf930278bf01ac2db"
        ],
        [
            "Module Import BitwiseNotations.",
            "VernacDefineModule",
            "8f9e7a21ee176bbd6a9296c44993cfa19807fc3c"
        ],
        [
            "Notation \"l ^| r\" := (@wor _ l%word r%word) : word_scope.",
            "VernacNotation",
            "d985ea96165af92a5390cf857ef3a985904f4bb1"
        ],
        [
            "Notation \"l ^& r\" := (@wand _ l%word r%word) : word_scope.",
            "VernacNotation",
            "382eba3b02faf0dee3652218bf4e75264106610d"
        ],
        [
            "End BitwiseNotations.",
            "VernacEndSegment",
            "28bf5ca6b3649e35a0b5ce1b41d53008fb6820a5"
        ],
        [
            "Definition wordToZ sz (w : word sz) : Z := if wmsb w false then match wordToN (wneg w) with | N0 => 0%Z | Npos x => Zneg x end else match wordToN w with | N0 => 0%Z | Npos x => Zpos x end.",
            "VernacDefinition",
            "31d1f4e984d0b25fb046bb454e6e0fd56a072125"
        ],
        [
            "Definition uwordToZ sz (w : word sz) : Z := Z.of_N (wordToN w).",
            "VernacDefinition",
            "4416185045d4c42905e3f323b3a032bcaa018889"
        ],
        [
            "Definition ZToWord (sz : nat) (z : Z) : word sz := match z with | Z0 => wzero' sz | Zpos x => posToWord sz x | Zneg x => wneg (posToWord sz x) end.",
            "VernacDefinition",
            "9a0ad57b76c5d2d5d4b55186303b3ab3848a09f8"
        ],
        [
            "Definition wordBinZ (f : Z -> Z -> Z) sz (x y : word sz) : word sz := ZToWord sz (f (wordToZ x) (wordToZ y)).",
            "VernacDefinition",
            "1056bc8a02d2058ea083633ed4186e5eb4fd1e62"
        ],
        [
            "Definition wplusZ := wordBinZ Z.add.",
            "VernacDefinition",
            "40f35f2e889995d87f5a1c17443b6046c88437f3"
        ],
        [
            "Definition wminusZ := wordBinZ Z.sub.",
            "VernacDefinition",
            "fe3425c86ea3f056bf0f98101673c4628c17ec78"
        ],
        [
            "Definition wmultZ := wordBinZ Z.mul.",
            "VernacDefinition",
            "6c51ed66948ffdfa052d4b1378a7c1bb70679268"
        ],
        [
            "Definition wmultZsu sz (x y : word sz) := ZToWord sz (Z.mul (wordToZ x) (Z.of_N (wordToN y))).",
            "VernacDefinition",
            "90eb529a171affaea545e34903c41eeae84c1278"
        ],
        [
            "Definition wdivZ := wordBinZ Z.quot.",
            "VernacDefinition",
            "ac0865024fcadafa8177d5159f19bf0da006ea7e"
        ],
        [
            "Definition wdivZsu sz (x y : word sz) := ZToWord sz (Z.div (wordToZ x) (Z.of_N (wordToN y))).",
            "VernacDefinition",
            "c34176157cb352817769059f57d51c7192347bb1"
        ],
        [
            "Definition wremZ := wordBinZ Z.rem.",
            "VernacDefinition",
            "91bcdfb6df9130b778a70306760e3fff1a68946b"
        ],
        [
            "Definition wremZsu sz (x y : word sz) := ZToWord sz (Z.modulo (wordToZ x) (Z.of_N (wordToN y))).",
            "VernacDefinition",
            "dc3c6be01dfb48d452104b6a25fb43b0a745599a"
        ],
        [
            "Definition wlt sz (l r : word sz) : Prop := N.lt (wordToN l) (wordToN r).",
            "VernacDefinition",
            "9f3c51ba089113f137fa080eea87db6ba01eec60"
        ],
        [
            "Definition wslt sz (l r : word sz) : Prop := Z.lt (wordToZ l) (wordToZ r).",
            "VernacDefinition",
            "6a8926b3f6267e9aebf347869fcf257eaf67f31a"
        ],
        [
            "Module Import ComparisonNotations.",
            "VernacDefineModule",
            "24d82cb5b78738f03d4aa264ebd23f59ee2deca0"
        ],
        [
            "Notation \"w1 > w2\" := (@wlt _ w2%word w1%word) : word_scope.",
            "VernacNotation",
            "ed44352784cb5a7287f035e951e98a7518c3669f"
        ],
        [
            "Notation \"w1 >= w2\" := (~(@wlt _ w1%word w2%word)) : word_scope.",
            "VernacNotation",
            "c6ef0a62173f83a4b5fb4ec655f4e57604103559"
        ],
        [
            "Notation \"w1 < w2\" := (@wlt _ w1%word w2%word) : word_scope.",
            "VernacNotation",
            "0b32234fe82d5454b5500449fa1e1612e77d4ae6"
        ],
        [
            "Notation \"w1 <= w2\" := (~(@wlt _ w2%word w1%word)) : word_scope.",
            "VernacNotation",
            "199f23c4d3b1b0dc6fa610e4b67722396c3925db"
        ],
        [
            "Notation \"w1 '>s' w2\" := (@wslt _ w2%word w1%word) : word_scope.",
            "VernacNotation",
            "7044e78ddbaf6305c70fb80c27aaf8956bee77ce"
        ],
        [
            "Notation \"w1 '>s=' w2\" := (~(@wslt _ w1%word w2%word)) : word_scope.",
            "VernacNotation",
            "63d7f07282bb2d2267e3baeb60960a4136f5454b"
        ],
        [
            "Notation \"w1 '<s' w2\" := (@wslt _ w1%word w2%word) : word_scope.",
            "VernacNotation",
            "6001ecb80a9589b80d35e1a7fc4dcce69b3c7e49"
        ],
        [
            "Notation \"w1 '<s=' w2\" := (~(@wslt _ w2%word w1%word)) : word_scope.",
            "VernacNotation",
            "552394f6534e379ee2a3c68b12dc5a9d764f397d"
        ],
        [
            "End ComparisonNotations.",
            "VernacEndSegment",
            "33e1adac487b092ca4367ad4fb35133776463e78"
        ],
        [
            "Definition wlt_dec : forall sz (l r : word sz), {l < r} + {l >= r}.",
            "VernacDefinition",
            "4254ac83e6c625b152e0babd547b700e31b976f4"
        ],
        [
            "refine (fun sz l r => match N.compare (wordToN l) (wordToN r) as k return N.compare (wordToN l) (wordToN r) = k -> _ with | Lt => fun pf => left _ _ | _ => fun pf => right _ _ end (refl_equal _)); abstract congruence.",
            "VernacExtend",
            "7740cf1ab74ef56b5d54d5c0e47198fe65c92a5e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wslt_dec : forall sz (l r : word sz), {l <s r} + {l >s= r}.",
            "VernacDefinition",
            "e03da81dcf80854c12524a9b040ab498fe8ce4ea"
        ],
        [
            "refine (fun sz l r => match Z.compare (wordToZ l) (wordToZ r) as c return Z.compare (wordToZ l) (wordToZ r) = c -> _ with | Lt => fun pf => left _ _ | _ => fun pf => right _ _ end (refl_equal _)); abstract congruence.",
            "VernacExtend",
            "6f2acbb0300573d0d7f66e4f0e94009606bdbf9b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wltb{sz: nat}(l r: word sz): bool := BinNat.N.ltb (wordToN l) (wordToN r).",
            "VernacDefinition",
            "c757c9675461ab1133d1d2d9b431e991212d2d1b"
        ],
        [
            "Definition wsltb{sz: nat}(l r: word sz): bool := Z.ltb (wordToZ l) (wordToZ r).",
            "VernacDefinition",
            "d2082056d148dfaefd175c903d9f07ac6194a94a"
        ],
        [
            "Module Import ConversionNotations.",
            "VernacDefineModule",
            "8a43b4275196c522ea33576b1eb3ee666101a198"
        ],
        [
            "Notation \"$ n\" := (natToWord _ n) : word_scope.",
            "VernacNotation",
            "423d823725742b610741fe9eef4b7701bd424cba"
        ],
        [
            "Notation \"# n\" := (wordToNat n).",
            "VernacNotation",
            "95cc47a1b671edd99d3547af8d2dc2a649e5fe45"
        ],
        [
            "End ConversionNotations.",
            "VernacEndSegment",
            "7ee5c65123580e7ee732b72e14ea34d573e75e5d"
        ],
        [
            "Fact sz_minus_nshift : forall sz nshift, (nshift < sz)%nat -> sz = sz - nshift + nshift.",
            "VernacStartTheoremProof",
            "23c4c027ce27f9abe1140e6040399a098b6f42e4"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact nshift_plus_nkeep : forall sz nshift, (nshift < sz)%nat -> nshift + (sz - nshift) = sz.",
            "VernacStartTheoremProof",
            "63eb31220b1922c1965f86260b48b7d807965462"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition wlshift (sz : nat) (w : word sz) (n : nat) : word sz.",
            "VernacDefinition",
            "096829186b5be40bf0c3966a175038f41dbaab2c"
        ],
        [
            "refine (split1 sz n _).",
            "VernacExtend",
            "ba0f98657af017c212a212bd5cf86eea0c5fae35"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "exact (combine (wzero n) w).",
            "VernacExtend",
            "8e7404571691a171fb76d5c48f9f1d09d2b4bd9e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wrshift (sz : nat) (w : word sz) (n : nat) : word sz.",
            "VernacDefinition",
            "7ac9f57c9352a6ffe3554892be24bb0c45cabfe6"
        ],
        [
            "refine (split2 n sz _).",
            "VernacExtend",
            "5f5612e72554f90ac11d46a295f29f531d31a9ad"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "exact (combine w (wzero n)).",
            "VernacExtend",
            "5da17d588a6eed56ac0284b940e8dc84adcb59b9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wrshifta (sz : nat) (w : word sz) (n : nat) : word sz.",
            "VernacDefinition",
            "ad56acef6ba30551e01b2d6f001ce526d02223fb"
        ],
        [
            "refine (split2 n sz _).",
            "VernacExtend",
            "5f5612e72554f90ac11d46a295f29f531d31a9ad"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "exact (sext w _).",
            "VernacExtend",
            "06c39ad66b61a7541027350a87e52177c1cef8ce"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wlshift' {sz : nat} (w : word sz) (n : nat) : word sz.",
            "VernacDefinition",
            "293ce1196db5e6ef7e91a530b60fa277ed0499df"
        ],
        [
            "refine (split1 sz n (nat_cast _ _ _)).",
            "VernacExtend",
            "82475061bd7f7f03369118fabaf73143c78dd98a"
        ],
        [
            "apply PeanoNat.Nat.add_comm.",
            "VernacExtend",
            "4e30eed61fdd9e84a28791fd6dc5e71a7ccd9508"
        ],
        [
            "exact (combine (wzero n) w).",
            "VernacExtend",
            "8e7404571691a171fb76d5c48f9f1d09d2b4bd9e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wrshift' {sz : nat} (w : word sz) (n : nat) : word sz.",
            "VernacDefinition",
            "32a152ebfebeeb44fada03096f0caeb9f1bdd838"
        ],
        [
            "refine (split2 n sz (nat_cast _ _ _)).",
            "VernacExtend",
            "ec92732b1e1eae8ae71a1ae195f1005dfdb58bc6"
        ],
        [
            "apply PeanoNat.Nat.add_comm.",
            "VernacExtend",
            "4e30eed61fdd9e84a28791fd6dc5e71a7ccd9508"
        ],
        [
            "exact (combine w (wzero n)).",
            "VernacExtend",
            "5da17d588a6eed56ac0284b940e8dc84adcb59b9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition wrshifta' {sz : nat} (w : word sz) (n : nat) : word sz.",
            "VernacDefinition",
            "119771731381b3907ae7f837f658627e2768eb7c"
        ],
        [
            "refine (split2 n sz (nat_cast _ _ _)).",
            "VernacExtend",
            "ec92732b1e1eae8ae71a1ae195f1005dfdb58bc6"
        ],
        [
            "apply PeanoNat.Nat.add_comm.",
            "VernacExtend",
            "4e30eed61fdd9e84a28791fd6dc5e71a7ccd9508"
        ],
        [
            "exact (sext w _).",
            "VernacExtend",
            "06c39ad66b61a7541027350a87e52177c1cef8ce"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition extz {sz} (w: word sz) (n: nat) := combine (wzero n) w.",
            "VernacDefinition",
            "2256241c0ee5e58e7f13992865094763a7b4b27f"
        ],
        [
            "Fixpoint wpow2 sz: word (S sz) := match sz with | O => WO~1 | S sz' => (wpow2 sz')~0 end.",
            "VernacFixpoint",
            "1c36c036d0995a53ec7b2e86c299aac7509cd685"
        ],
        [
            "Module Import ShiftNotations.",
            "VernacDefineModule",
            "192c675e860c1baefb3b3476b43b9d5e0e78efb3"
        ],
        [
            "Notation \"l ^<< r\" := (@wlshift' _ l%word r) : word_scope.",
            "VernacNotation",
            "8bec839dd3ff6add65a6a0e535e2c03b42ea32fa"
        ],
        [
            "Notation \"l ^>> r\" := (@wrshift' _ l%word r) : word_scope.",
            "VernacNotation",
            "5db5be7357d8beb39b73b685897ae88fba570ea6"
        ],
        [
            "End ShiftNotations.",
            "VernacEndSegment",
            "3013dbf33359c9dd5037476a5ce1f21153cd5138"
        ],
        [
            "Definition wbit sz sz' (n : word sz') := natToWord sz (pow2 (wordToNat n)).",
            "VernacDefinition",
            "0983aa57469b0ad39cb78eac6c8c8d03ddb10814"
        ],
        [
            "Hint Rewrite div2_double div2_S_double: div2.",
            "VernacExtend",
            "5b501e9277ce3d75f247c41c9d1cc559060bcd38"
        ],
        [
            "Local Hint Resolve mod2_S_double mod2_double.",
            "VernacHints",
            "11344c25b8d37bc85ad1a0ef4c6fa345d9541845"
        ],
        [
            "Theorem eq_rect_word_offset : forall n n' offset w Heq, eq_rect n (fun n => word (offset + n)) w n' Heq = eq_rect (offset + n) (fun n => word n) w (offset + n') (eq_rect_word_offset_helper _ _ _ Heq).",
            "VernacStartTheoremProof",
            "912e3d1bbc58b3e7d66c56180c2813573cd464e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct Heq.",
            "VernacExtend",
            "3b8e12e11cf958dd231fcb030bea62009fc87c27"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec (eq_rect_word_offset_helper _ _ offset eq_refl) eq_refl).",
            "VernacExtend",
            "49d29e505483d577362812aa1fc165f64935fe33"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_word_mult : forall n n' scale w Heq, eq_rect n (fun n => word (n * scale)) w n' Heq = eq_rect (n * scale) (fun n => word n) w (n' * scale) (eq_rect_word_mult_helper _ _ _ Heq).",
            "VernacStartTheoremProof",
            "7cdbe8f7710dd34bd6ecc34cda47b173cfa52c53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct Heq.",
            "VernacExtend",
            "3b8e12e11cf958dd231fcb030bea62009fc87c27"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec (eq_rect_word_mult_helper _ _ scale eq_refl) eq_refl).",
            "VernacExtend",
            "dc718000de5c31cdbf7e84984c84fc86b8ae2195"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_word_match : forall n n' (w : word n) (H : n = n'), match H in (_ = N) return (word N) with | eq_refl => w end = eq_rect n (fun n => word n) w n' H.",
            "VernacStartTheoremProof",
            "6eead1ac86ecf0416380f0b6e75f4c55aa9ef97f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem whd_match : forall n n' (w : word (S n)) (Heq : S n = S n'), whd w = whd (match Heq in (_ = N) return (word N) with | eq_refl => w end).",
            "VernacStartTheoremProof",
            "88fa46ddf1fc1c933efe1566797987671f4197fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_rect_word_match.",
            "VernacExtend",
            "5a06cbd9c403f74dcaaf26d4905b81dc3a820e68"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "remember Heq as Heq'.",
            "VernacExtend",
            "812144796aaa075fb1be0c64a1077958e6d347e6"
        ],
        [
            "clear HeqHeq'.",
            "VernacExtend",
            "1537528a26d1ddba36cd2e5e114fde548e9ffde0"
        ],
        [
            "generalize dependent Heq'.",
            "VernacExtend",
            "55ac3ca05d6ef9e371f80aa83839e81ae58f8691"
        ],
        [
            "replace (n') with (n) by omega.",
            "VernacExtend",
            "fcb2d425aaffdcadbe610568ea6938db4acbf929"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wtl_match : forall n n' (w : word (S n)) (Heq : S n = S n') (Heq' : n = n'), (match Heq' in (_ = N) return (word N) with | eq_refl => wtl w end) = wtl (match Heq in (_ = N) return (word N) with | eq_refl => w end).",
            "VernacStartTheoremProof",
            "a4d138551d717c52f6c94259015b6b044084c1c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat match goal with | [ |- context[match ?pf with refl_equal => _ end] ] => generalize pf end.",
            "VernacExtend",
            "c339d6270fdc4e0a9e7e1548ced5601426baa1f7"
        ],
        [
            "generalize dependent w; clear.",
            "VernacExtend",
            "032b9133c0d8ba7ec08f5366da18e7acbb8309a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize Heq Heq'.",
            "VernacExtend",
            "2303cd4dc8fa71242ae0adcfb00c3a051d36c13c"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq' (refl_equal _)).",
            "VernacExtend",
            "ee3e9cf96ca582ea2cf6606d53df6ac6d5dbabea"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq0 (refl_equal _)).",
            "VernacExtend",
            "4c43d3a71b09e309883bdb56f4f97e1eb39355dd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem word0: forall (w : word 0), w = WO.",
            "VernacStartTheoremProof",
            "747cf1fa30d5d3d1314e94eed6401f4b77e86fa6"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wordToNat_wordToNat' : forall sz (w : word sz), wordToNat w = wordToNat' w.",
            "VernacStartTheoremProof",
            "f1530928c3a69fa6b7b080f812f99fcc2c98209c"
        ],
        [
            "induction w.",
            "VernacExtend",
            "00a39f78c1958c5075f30e53ba2c016aabba0f9e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold wordToNat.",
            "VernacExtend",
            "4bb4a488c7d297d2d797b404d6ead07a604d0ef6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem natToWord_wordToNat : forall sz w, natToWord sz (wordToNat w) = w.",
            "VernacStartTheoremProof",
            "5ef35b9210038ec439f45152bb6981b604c4ee16"
        ],
        [
            "induction w as [|b]; rewrite wordToNat_wordToNat'; intuition; f_equal; unfold natToWord, wordToNat'; fold natToWord; fold wordToNat'; destruct b; f_equal; autorewrite with div2; intuition.",
            "VernacExtend",
            "23106098644145d34c7ac77b880da0c542eb307b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem roundTrip_0 : forall sz, wordToNat (natToWord sz 0) = 0.",
            "VernacStartTheoremProof",
            "640641a35d794fc79143147a2c732d891ad84743"
        ],
        [
            "induction sz; simpl; intuition.",
            "VernacExtend",
            "73389c09d9fb7a1a50f087f9cf44d848ce646b41"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite roundTrip_0 : wordToNat.",
            "VernacExtend",
            "483f1970fd05f227f8a83a82aae8b9a2b324d616"
        ],
        [
            "Lemma wordToNat_natToWord' : forall sz w, exists k, wordToNat (natToWord sz w) + k * pow2 sz = w.",
            "VernacStartTheoremProof",
            "d0908ed8211637db267b0e11470f2ed969639316"
        ],
        [
            "induction sz as [|sz IHsz]; simpl; intro w; intuition; repeat rewrite untimes2.",
            "VernacExtend",
            "b10f0df1928ff0b4e64247f1980505eda2ce3e2e"
        ],
        [
            "exists w; intuition.",
            "VernacExtend",
            "9c98da04d7b1a42e62676f2d72efaabd729a8036"
        ],
        [
            "case_eq (mod2 w); intro Hmw.",
            "VernacExtend",
            "385f0112354348d8a2a3973ea1d36213e0c0e861"
        ],
        [
            "specialize (IHsz (div2 w)); firstorder.",
            "VernacExtend",
            "1a8f711889b011efc018be69e16d70a4bb127c00"
        ],
        [
            "rewrite wordToNat_wordToNat' in *.",
            "VernacExtend",
            "ecbeac4aecd539f9d3ed09fa9c8d831f0328c081"
        ],
        [
            "let x' := match goal with H : _ + ?x * _ = _ |- _ => x end in rename x' into x.",
            "VernacExtend",
            "5ef5b98122f52214a7bc0fc968df14d92eccb33b"
        ],
        [
            "exists x; intuition.",
            "VernacExtend",
            "5265b0752ff2ed4bffe4b91b951e6ea4268a5bda"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm x 2).",
            "VernacExtend",
            "d2921fb8f4befe7fd50e9765456717b57aa0f1cb"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "simpl mult at 1.",
            "VernacExtend",
            "22e8291e572e62d9ca0c95523f5356b94b1cbcd9"
        ],
        [
            "rewrite (plus_Sn_m (2 * wordToNat' (natToWord sz (div2 w)))).",
            "VernacExtend",
            "81f7ba1496b17cbf0a0abf970974c2df6bd81f14"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "rewrite <- mult_plus_distr_l.",
            "VernacExtend",
            "cd8d003acfa92ac557996591020b39f7404e807a"
        ],
        [
            "rewrite H; clear H.",
            "VernacExtend",
            "a60de8fe6903e17bd74acece0951cbb10e6ef842"
        ],
        [
            "symmetry; apply div2_odd; auto.",
            "VernacExtend",
            "672bc4e5c0ace242f14c1aff5ce5b8748d3240b6"
        ],
        [
            "specialize (IHsz (div2 w)); firstorder.",
            "VernacExtend",
            "1a8f711889b011efc018be69e16d70a4bb127c00"
        ],
        [
            "let x' := match goal with H : _ + ?x * _ = _ |- _ => x end in rename x' into x.",
            "VernacExtend",
            "5ef5b98122f52214a7bc0fc968df14d92eccb33b"
        ],
        [
            "exists x; intuition.",
            "VernacExtend",
            "5265b0752ff2ed4bffe4b91b951e6ea4268a5bda"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm x 2).",
            "VernacExtend",
            "d2921fb8f4befe7fd50e9765456717b57aa0f1cb"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "rewrite <- mult_plus_distr_l.",
            "VernacExtend",
            "cd8d003acfa92ac557996591020b39f7404e807a"
        ],
        [
            "match goal with H : _ |- _ => rewrite H; clear H end.",
            "VernacExtend",
            "7111cebf93d66fbc7af50b1846ba09e2e945c1d8"
        ],
        [
            "symmetry; apply div2_even; auto.",
            "VernacExtend",
            "7994a5df130cde0507b052b440a1c83e45c67042"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wordToNat_natToWord: forall sz w, exists k, wordToNat (natToWord sz w) = w - k * pow2 sz /\\ (k * pow2 sz <= w)%nat.",
            "VernacStartTheoremProof",
            "463aefa67ffb5c402c35cfed47f0c1b783474c73"
        ],
        [
            "intros sz w; destruct (wordToNat_natToWord' sz w) as [k]; exists k; intuition.",
            "VernacExtend",
            "bd4945b1c620df4c14196618f402e2cae59910ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_2: forall sz w : nat, (w < pow2 sz)%nat -> wordToNat (natToWord sz w) = w.",
            "VernacStartTheoremProof",
            "88c61610b3a78fed49ac3421559d6f889f4da128"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wordToNat_natToWord sz w).",
            "VernacExtend",
            "14ce217364111197dfba9e9f15d35493d0c97fe7"
        ],
        [
            "destruct H0; destruct H0.",
            "VernacExtend",
            "21d5a3dd09b17117201ee446055b76e72487326a"
        ],
        [
            "rewrite H0 in *; clear H0.",
            "VernacExtend",
            "9a299ddcfa3f1ae3d6d642f1a77f90341d0457ad"
        ],
        [
            "destruct x; try omega.",
            "VernacExtend",
            "c25aa8c1b2bd42f9ea820f653f9b2647d234156b"
        ],
        [
            "exfalso; simpl in H1.",
            "VernacExtend",
            "346a1d788a2af25833d9009fd1f70c652baf722b"
        ],
        [
            "pose proof (Lt.le_lt_trans _ _ _ H1 H).",
            "VernacExtend",
            "1669c10e67188aaae2aa06988f21baf8f20dc505"
        ],
        [
            "pose proof (Plus.le_plus_l (pow2 sz) (x * pow2 sz)).",
            "VernacExtend",
            "75a8e73cb7b803b8302a61e89dc3c76d80e3f331"
        ],
        [
            "pose proof (Lt.le_lt_trans _ _ _ H2 H0).",
            "VernacExtend",
            "870212939222e91a54afca27200168e3956fa7b3"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_times2: forall sz x, ((natToWord sz x)~0)%word = natToWord (S sz) (2 * x).",
            "VernacStartTheoremProof",
            "d910420048f43527c9b41cbad8468300f980e1c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold natToWord.",
            "VernacExtend",
            "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply mod2_double.",
            "VernacExtend",
            "fa5cd794e13c3033b437966ded19ffe4e55e6da4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite div2_double.",
            "VernacExtend",
            "7e84b499d7e1354df8c54c84bcf9fcdb1e34ca64"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem WS_neq : forall b1 b2 sz (w1 w2 : word sz), (b1 <> b2 \\/ w1 <> w2) -> WS b1 w1 <> WS b2 w2.",
            "VernacStartTheoremProof",
            "1570a06913598868cd289d858a5c658458272376"
        ],
        [
            "intros b1 b2 sz w1 w2 ? H0; intuition.",
            "VernacExtend",
            "0c67306b7d5ecbfc3ebf1560e9ee326121ebbeb1"
        ],
        [
            "apply (f_equal (@whd _)) in H0; tauto.",
            "VernacExtend",
            "8cba6c21f7a444a1adbb0e5f8f10aebb6b6285da"
        ],
        [
            "apply (f_equal (@wtl _)) in H0; tauto.",
            "VernacExtend",
            "77863ddca9b256eea64cd7a99fd0311643c428d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem weqb_true_iff : forall sz x y, @weqb sz x y = true <-> x = y.",
            "VernacStartTheoremProof",
            "d146bce3c641cba9a14a13e01efa53bc29707973"
        ],
        [
            "induction x as [|b ? x IHx]; simpl; intros y.",
            "VernacExtend",
            "c6abd2da1ecca4f6a5a098f2757444c5e4a2c7ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite (shatter_word y) in *.",
            "VernacExtend",
            "abe3aa95ca7a6cca52f06319242ad1303e4563e9"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "case_eq (eqb b (whd y)); intros H.",
            "VernacExtend",
            "6743b40258afe9908f5dbb61fb40ad318b6675fd"
        ],
        [
            "case_eq (weqb x (wtl y)); intros H0.",
            "VernacExtend",
            "d0de69627a2846fe597df7016b8dff39c9658d1c"
        ],
        [
            "split; auto; intros.",
            "VernacExtend",
            "071b2d5320c62b0d7036f5e3029996f2613ea63b"
        ],
        [
            "rewrite eqb_true_iff in H.",
            "VernacExtend",
            "db8d41ac70aeeb9ee18de22b61ed64d223c4bcd1"
        ],
        [
            "f_equal; eauto.",
            "VernacExtend",
            "0aaae116840c77af05ab473518cd728dcb792af6"
        ],
        [
            "eapply IHx; eauto.",
            "VernacExtend",
            "66aba64d0184acaca89da36f38b71030a7f406d6"
        ],
        [
            "split; intros H1; try congruence.",
            "VernacExtend",
            "37ef0ba1f90b571eaf375ed49f80419b71108918"
        ],
        [
            "inversion H1; clear H1; subst.",
            "VernacExtend",
            "dc7c0a9281e0286a6c40198265c2b895af17e7ac"
        ],
        [
            "eapply inj_pair2_eq_dec in H4.",
            "VernacExtend",
            "440e4df99b96b1e1b0376e6ec4ae1da1e8739e8e"
        ],
        [
            "eapply IHx in H4.",
            "VernacExtend",
            "69869ca7a42fd37237110fc2bf0d568b1c1c2497"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "eapply Peano_dec.eq_nat_dec.",
            "VernacExtend",
            "c462a3e6cf381cd89b505e5df1b002d76bbd5015"
        ],
        [
            "split; intros; try congruence.",
            "VernacExtend",
            "7ec554827c1515bbec6752aff4a6955b6dd01fb8"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "apply eqb_false_iff in H.",
            "VernacExtend",
            "66e2423530aefff85f9daa7797db4465f3eca552"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac shatterer := simpl; intuition; match goal with | [ w : _ |- _ ] => rewrite (shatter_word w); simpl end; f_equal; auto.",
            "VernacExtend",
            "59034b84ae3bba32f9077e5738f6aa156e161703"
        ],
        [
            "Theorem combine_split : forall sz1 sz2 (w : word (sz1 + sz2)), combine (split1 sz1 sz2 w) (split2 sz1 sz2 w) = w.",
            "VernacStartTheoremProof",
            "d644de928ea6c9c21f00f357a49235b2b310a552"
        ],
        [
            "induction sz1; shatterer.",
            "VernacExtend",
            "ecb0c1daa8d071c5c120f56b19333162bfa61286"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split1_combine : forall sz1 sz2 (w : word sz1) (z : word sz2), split1 sz1 sz2 (combine w z) = w.",
            "VernacStartTheoremProof",
            "2eb852f7a6de55cb86226ea10c5602f17902e98c"
        ],
        [
            "induction sz1; shatterer.",
            "VernacExtend",
            "ecb0c1daa8d071c5c120f56b19333162bfa61286"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split2_combine : forall sz1 sz2 (w : word sz1) (z : word sz2), split2 sz1 sz2 (combine w z) = z.",
            "VernacStartTheoremProof",
            "810355a16a5db0144874dea0921d15b02ccaa9a2"
        ],
        [
            "induction sz1; shatterer.",
            "VernacExtend",
            "ecb0c1daa8d071c5c120f56b19333162bfa61286"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite combine_split.",
            "VernacExtend",
            "d0a911bf54ba229501593ad7aa930f5b352c667c"
        ],
        [
            "Hint Rewrite split1_combine.",
            "VernacExtend",
            "9f21c41a4087d93c3283e965ce3e9bd60c11b23c"
        ],
        [
            "Hint Rewrite split2_combine.",
            "VernacExtend",
            "6be5e8199d27eb6e6add57925f1e4640876f3a33"
        ],
        [
            "Theorem combine_assoc : forall n1 (w1 : word n1) n2 n3 (w2 : word n2) (w3 : word n3) Heq, combine (combine w1 w2) w3 = match Heq in _ = N return word N with | refl_equal => combine w1 (combine w2 w3) end.",
            "VernacStartTheoremProof",
            "69e9aa34d6c444176de85f8ab2d0aca38ec00c10"
        ],
        [
            "induction w1 as [|?? w1 IHw1]; simpl; intros n2 n3 w2 w3 Heq; intuition.",
            "VernacExtend",
            "4ca519763c29c09ab06cf25508ef78d9068779a4"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)); reflexivity.",
            "VernacExtend",
            "160f1aceb926fc10596936adc172c1a5179f73d8"
        ],
        [
            "rewrite (IHw1 _ _ _ _ (plus_assoc _ _ _)); clear IHw1.",
            "VernacExtend",
            "b9368d0d3755753caa5f1c9aa2d4a38d76762b2b"
        ],
        [
            "repeat match goal with | [ |- context[match ?pf with refl_equal => _ end] ] => generalize pf end.",
            "VernacExtend",
            "c339d6270fdc4e0a9e7e1548ced5601426baa1f7"
        ],
        [
            "generalize dependent (combine w1 (combine w2 w3)).",
            "VernacExtend",
            "d65a8529a291e8857e33577d072bc2e3672a63db"
        ],
        [
            "rewrite plus_assoc; intros w Heq0 e.",
            "VernacExtend",
            "2d965d84ceb86aaaeff8ab5e08f2e487aca07ae0"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec e (refl_equal _)).",
            "VernacExtend",
            "d764646eada1ef8bcbae9ee1a897882dab8b9f0c"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq0 (refl_equal _)).",
            "VernacExtend",
            "4c43d3a71b09e309883bdb56f4f97e1eb39355dd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split1_iter : forall n1 n2 n3 Heq w, split1 n1 n2 (split1 (n1 + n2) n3 w) = split1 n1 (n2 + n3) (match Heq in _ = N return word N with | refl_equal => w end).",
            "VernacStartTheoremProof",
            "e9deeaeee151f0035a8cee149513f9bd4712445f"
        ],
        [
            "induction n1; simpl; intuition.",
            "VernacExtend",
            "d5f2b66b08a5ecfc0d2181ac124f57ce22ea2ad6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply whd_match.",
            "VernacExtend",
            "a80f65e088f4be665bb72f461f355045d8b9154b"
        ],
        [
            "assert (n1 + n2 + n3 = n1 + (n2 + n3)) as Heq' by omega.",
            "VernacExtend",
            "fa0399220dabf588877c1428636f80aafa59021b"
        ],
        [
            "rewrite IHn1 with (Heq:=Heq').",
            "VernacExtend",
            "5e5cfd14326bbf1b567e1bc188ab4c4e996c0f38"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply wtl_match.",
            "VernacExtend",
            "3f9462ecd705af72d8b8ff1b24beaf43fa08e445"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split2_iter : forall n1 n2 n3 Heq w, split2 n2 n3 (split2 n1 (n2 + n3) w) = split2 (n1 + n2) n3 (match Heq in _ = N return word N with | refl_equal => w end).",
            "VernacStartTheoremProof",
            "9b96c082c7ac2489fbc1557cd3350973d733cce1"
        ],
        [
            "induction n1 as [|n1 IHn1]; simpl; intros n2 n3 Heq w; intuition.",
            "VernacExtend",
            "0a377b2f16d666a02fe99c1d0491ae2415471e5f"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)); reflexivity.",
            "VernacExtend",
            "160f1aceb926fc10596936adc172c1a5179f73d8"
        ],
        [
            "rewrite (IHn1 _ _ (plus_assoc _ _ _)).",
            "VernacExtend",
            "234e28bf40366d881fd039847982c8d70cc5b213"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply wtl_match.",
            "VernacExtend",
            "3f9462ecd705af72d8b8ff1b24beaf43fa08e445"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split1_split2 : forall n1 n2 n3 Heq w, split1 n2 n3 (split2 n1 (n2 + n3) w) = split2 n1 n2 (split1 (n1 + n2) n3 (match Heq in _ = N return word N with | refl_equal => w end)).",
            "VernacStartTheoremProof",
            "1ecfa5d83c1cca0919761c4eb2791a14d877ff6c"
        ],
        [
            "induction n1; simpl; intros.",
            "VernacExtend",
            "ade29ec7cb3de8335305ff27a24c4e53d7f64522"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)).",
            "VernacExtend",
            "84ecc87d9c01d4ca432ec5aa5e5157536c402aba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite (shatter_word w).",
            "VernacExtend",
            "d0a7048396156cb8e9b6bd37d78a6a1eaaf01429"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (n1 + (n2 + n3) = n1 + n2 + n3) as Heq' by omega.",
            "VernacExtend",
            "17f51547b3687e057122e2486c2c65a58cf9577a"
        ],
        [
            "rewrite <- wtl_match with (Heq':=Heq').",
            "VernacExtend",
            "95c2f2733fc120a5b9ace3b929527bd8e9acc93f"
        ],
        [
            "rewrite <- IHn1.",
            "VernacExtend",
            "abfe7ccd7face4d03406ae54d424e1133bf2bc86"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split2_split1 : forall n1 n2 n3 Heq w, split2 n1 n2 (split1 (n1+n2) n3 w) = split1 n2 n3 (split2 n1 (n2+n3) (match Heq in _ = N return word N with | refl_equal => w end)).",
            "VernacStartTheoremProof",
            "70e0f6f3aca65b417889316476ad0ba91c2f463b"
        ],
        [
            "induction n1; simpl; intros.",
            "VernacExtend",
            "ade29ec7cb3de8335305ff27a24c4e53d7f64522"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)).",
            "VernacExtend",
            "84ecc87d9c01d4ca432ec5aa5e5157536c402aba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite (shatter_word w).",
            "VernacExtend",
            "d0a7048396156cb8e9b6bd37d78a6a1eaaf01429"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (n1 + n2 + n3 = n1 + (n2 + n3)) as Heq' by omega.",
            "VernacExtend",
            "fa0399220dabf588877c1428636f80aafa59021b"
        ],
        [
            "rewrite <- wtl_match with (Heq':=Heq').",
            "VernacExtend",
            "95c2f2733fc120a5b9ace3b929527bd8e9acc93f"
        ],
        [
            "rewrite <- IHn1.",
            "VernacExtend",
            "abfe7ccd7face4d03406ae54d424e1133bf2bc86"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_0_n : forall sz2 (w: word 0) (v: word sz2), combine w v = v.",
            "VernacStartTheoremProof",
            "efb4da60625fe757cd3d5ce7b4c7fb676e6665aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace w with WO.",
            "VernacExtend",
            "60c4f447bf54f932f7caa17ee151b31fa3f08a32"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite word0; auto.",
            "VernacExtend",
            "aea4b2fec4bdb8c1ca7792135f35e5a733d42689"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma WS_eq_rect : forall b n (w: word n) n' H H', eq_rect _ word (@WS b n w) _ H = @WS b n' (eq_rect _ word w _ H').",
            "VernacStartTheoremProof",
            "47f855581224cb1f8ab9980ab728f01f2b37c925"
        ],
        [
            "destruct n; intros; subst; eq_rect_simpl; auto.",
            "VernacExtend",
            "40ca0394aa29c96b39d27e93e5567b60f43fc044"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_eq_rect2 : forall sz n n' (H: n = n') H' (a: word sz) (b: word n), combine a b = eq_rect _ word (combine a (eq_rect _ word b _ H)) _ H'.",
            "VernacStartTheoremProof",
            "9ca7f492999f88935231f4bece1742c5d20b9134"
        ],
        [
            "induction a; simpl; intros.",
            "VernacExtend",
            "651d671a1d9148684b6a564fbcd0e8bdc7318584"
        ],
        [
            "eq_rect_simpl; auto.",
            "VernacExtend",
            "b097303733b0a33e715b23246a0d9032edf3f966"
        ],
        [
            "erewrite WS_eq_rect.",
            "VernacExtend",
            "c8bb2664fe7a4dbdd28ef9eefe97ab1866831079"
        ],
        [
            "erewrite IHa.",
            "VernacExtend",
            "3a9890f58af3f0e9686bbd25a0fba0563bc99729"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Grab Existential Variables.",
            "VernacExtend",
            "a9968e33a690f26a4ac2e78a24b14c2da25a6000"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_n_0 : forall sz1 (w : word sz1) (v : word 0), combine w v = eq_rect _ word w _ (plus_n_O sz1).",
            "VernacStartTheoremProof",
            "46838608b8d80ab3f6aac482f4219ee9dc9e1dec"
        ],
        [
            "induction w; intros.",
            "VernacExtend",
            "8f3d456cd69a38200a93ba9307da2f308c58d29e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace v with WO; auto.",
            "VernacExtend",
            "711c2a76aa35e009be6dd33c074644394fc6eec9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite IHw.",
            "VernacExtend",
            "e117972bb7a3af174a9068dfd3e441e867a69487"
        ],
        [
            "erewrite WS_eq_rect.",
            "VernacExtend",
            "c8bb2664fe7a4dbdd28ef9eefe97ab1866831079"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma whd_eq_rect : forall n w Heq, whd (eq_rect (S n) word w (S (n + 0)) Heq) = whd w.",
            "VernacStartTheoremProof",
            "ec3ff3b29e85167378fa6f7ce70a1f15721c2f3e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize Heq.",
            "VernacExtend",
            "3c2369a3a4536041709218c74a096214582a1306"
        ],
        [
            "replace (n + 0) with n by omega.",
            "VernacExtend",
            "43af792abdb54c76b496331e4c251b406d51e5c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wtl_eq_rect : forall n w Heq Heq', wtl (eq_rect (S n) word w (S (n + 0)) Heq) = eq_rect n word (wtl w) (n + 0) Heq'.",
            "VernacStartTheoremProof",
            "0748ed25a0b87b60904a86032aa6686384638866"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "rewrite <- Heq'; simpl; intros.",
            "VernacExtend",
            "f7cdbe28a8c2347e979ab74dd9f40e40d766ef68"
        ],
        [
            "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma whd_eq_rect_mul : forall n w Heq, whd (eq_rect (S n) word w (S (n * 1)) Heq) = whd w.",
            "VernacStartTheoremProof",
            "949032834443dd13979017732fd8b6d35d65d5ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize Heq.",
            "VernacExtend",
            "3c2369a3a4536041709218c74a096214582a1306"
        ],
        [
            "replace (n * 1) with n by auto.",
            "VernacExtend",
            "c799b52a2333263dabd99f365a385b9d6b34e9e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wtl_eq_rect_mul : forall n w b Heq Heq', wtl (eq_rect (S n) word (WS b w) (S (n * 1)) Heq) = eq_rect _ word w _ Heq'.",
            "VernacStartTheoremProof",
            "4995261a81c13872189753f9a92107e6de3fca79"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize Heq.",
            "VernacExtend",
            "3c2369a3a4536041709218c74a096214582a1306"
        ],
        [
            "rewrite <- Heq'.",
            "VernacExtend",
            "0c2901409f5bc9b450cb6e95f2d235a1f50f700d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split1_0 : forall n w Heq, split1 n 0 (eq_rect _ word w _ Heq) = w.",
            "VernacStartTheoremProof",
            "51594643c7c1cbf09dfe6113a916ad72b69414c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "shatterer.",
            "VernacExtend",
            "f951dddd3876ce739d9bcc70c03a8fe74800dd2e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "erewrite wtl_eq_rect.",
            "VernacExtend",
            "8382fb549c07f507bcc3e2ece6e550cee9138486"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "rewrite whd_eq_rect.",
            "VernacExtend",
            "cce80addbfcb87906ff5a5d7ebe36c0ee7cac9a5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "shatterer.",
            "VernacExtend",
            "f951dddd3876ce739d9bcc70c03a8fe74800dd2e"
        ],
        [
            "Grab Existential Variables.",
            "VernacExtend",
            "a9968e33a690f26a4ac2e78a24b14c2da25a6000"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split2_0 : forall n w Heq, split2 0 n (eq_rect _ word w _ Heq) = w.",
            "VernacStartTheoremProof",
            "db22d3fe25a2508dba3d43e33253270737efae09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_end : forall n1 n2 n3 Heq w, combine (split1 n2 n3 (split2 n1 (n2 + n3) w)) (split2 (n1 + n2) n3 (match Heq in _ = N return word N with | refl_equal => w end)) = split2 n1 (n2 + n3) w.",
            "VernacStartTheoremProof",
            "2e4bc9cf35b4fc1b459679bc276ffc01b1aecb7c"
        ],
        [
            "induction n1 as [|n1 IHn1]; simpl; intros n2 n3 Heq w.",
            "VernacExtend",
            "35c5a6fa71bd42f87be3a1c13a204ce084f45fb4"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)).",
            "VernacExtend",
            "84ecc87d9c01d4ca432ec5aa5e5157536c402aba"
        ],
        [
            "apply combine_split.",
            "VernacExtend",
            "d0ccd5a6c55c97f3310115aabc2049862d3f1bc1"
        ],
        [
            "rewrite (shatter_word w) in *.",
            "VernacExtend",
            "7cd7af3cd3017e274dd1737309084bc92ed27b89"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply trans_eq; [ | apply IHn1 with (Heq := plus_assoc _ _ _) ]; clear IHn1.",
            "VernacExtend",
            "d5245e79331cd2e9e980a37ddddaf3e75a858e66"
        ],
        [
            "repeat f_equal.",
            "VernacExtend",
            "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
        ],
        [
            "repeat match goal with | [ |- context[match ?pf with refl_equal => _ end] ] => generalize pf end.",
            "VernacExtend",
            "c339d6270fdc4e0a9e7e1548ced5601426baa1f7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "rewrite plus_assoc.",
            "VernacExtend",
            "3bacd64a87549657845fdfa6170cde8d727d12ef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec e (refl_equal _)).",
            "VernacExtend",
            "d764646eada1ef8bcbae9ee1a897882dab8b9f0c"
        ],
        [
            "rewrite (UIP_dec eq_nat_dec Heq0 (refl_equal _)).",
            "VernacExtend",
            "4c43d3a71b09e309883bdb56f4f97e1eb39355dd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_combine : forall n1 n2 n2' (w1 : word n1) (w2 : word n2') Heq, eq_rect (n1 + n2') (fun n => word n) (combine w1 w2) (n1 + n2) Heq = combine w1 (eq_rect n2' (fun n => word n) w2 n2 (plus_reg_l _ _ _ Heq)).",
            "VernacStartTheoremProof",
            "74ed3e1cc37aa5cf4af0f4e5fc46bc31fbbee26b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (plus_reg_l n2' n2 n1 Heq); intros.",
            "VernacExtend",
            "b47671b7cbbe60737a3287e74311e66e8f543b92"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "generalize dependent w2.",
            "VernacExtend",
            "f3247d591b5b338ed303552b744dbfacfad48dcd"
        ],
        [
            "rewrite e; intros.",
            "VernacExtend",
            "9cae54c3b7be5376176f295ef7b83b77d47f36a0"
        ],
        [
            "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_combine_assoc' : forall a b c H wa wb wc, eq_rect (a + (b + c)) word (combine wa (combine wb wc)) _ H = combine (combine wa wb) wc.",
            "VernacStartTheoremProof",
            "f3568557f745dd17a235e4e95b52bfbb25f3ecfb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite combine_assoc, eq_rect_word_match.",
            "VernacExtend",
            "244c69a34ef8bd77030ae25ee09ba01da8f31cc7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_split2_helper : forall a b c, a = b -> c + a = c + b.",
            "VernacStartTheoremProof",
            "82286a8d82f0e56251c294e43ff6029d3cc8c2e2"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_split2 : forall n1 n2 n2' (w : word (n1 + n2')) Heq, eq_rect n2' (fun n => word n) (split2 n1 n2' w) n2 Heq = split2 n1 n2 (eq_rect (n1+n2') (fun n => word n) w (n1+n2) (eq_rect_split2_helper _ Heq)).",
            "VernacStartTheoremProof",
            "d6a3238f2d8416686535aed263a84b5079e0e8ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (eq_rect_split2_helper n1 Heq); intros.",
            "VernacExtend",
            "113c146a2e5a5172dbaa42785d1f12c49ebb2a35"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "assert (n2' = n2) as H' by omega.",
            "VernacExtend",
            "ab6ce2819dc8bbc38d62af60ae91401d7cc25962"
        ],
        [
            "generalize dependent e.",
            "VernacExtend",
            "05fb6399e464307f7f4e729f62b091cb74c27cfe"
        ],
        [
            "rewrite H'; intros.",
            "VernacExtend",
            "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
        ],
        [
            "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_split2_eq2 : forall n1 n2 n2' (w : word (n1 + n2)) Heq Heq2, eq_rect n2 (fun n => word n) (split2 n1 n2 w) n2' Heq = split2 n1 n2' (eq_rect (n1+n2) (fun n => word n) w (n1+n2') Heq2).",
            "VernacStartTheoremProof",
            "fa83b212f068f3fd26dad26a9b9cb5afcc26ee0d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H' := Heq).",
            "VernacExtend",
            "87f83ed372978da8f237637b0696f5b7bda40637"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "generalize dependent Heq2.",
            "VernacExtend",
            "5302c0669bbd2012bd9d43c58088c45ecb3a89eb"
        ],
        [
            "rewrite H'; intros.",
            "VernacExtend",
            "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
        ],
        [
            "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_split2_eq1 : forall n1 n1' n2 (w: word (n1 + n2)) Heq, split2 n1 n2 w = split2 n1' n2 (eq_rect (n1 + n2) (fun y : nat => word y) w (n1' + n2) Heq).",
            "VernacStartTheoremProof",
            "c5cb65453d5bfccc2d67fcf82c85e8bdd9e57e62"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (n1 = n1') as H' by omega.",
            "VernacExtend",
            "67508f7c7c1c2fde61ef67bda1ed64c565aa69af"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "rewrite H'; intros.",
            "VernacExtend",
            "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
        ],
        [
            "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_split_eq_rect2 : forall n1 n2 n2' (w : word (n1 + n2)) Heq, combine (split1 n1 n2 w) (eq_rect n2 (fun n => word n) (split2 n1 n2 w) n2' Heq) = eq_rect (n1 + n2) (fun n => word n) w (n1 + n2') (eq_rect_split2_helper _ Heq).",
            "VernacStartTheoremProof",
            "56374e9b4c923bee9e9d866a9f45160d8f2d68f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (n2 = n2') by omega.",
            "VernacExtend",
            "2ed05ba0e9f57ed0e6c1c71444fd99397c822f03"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "rewrite <- H; intros.",
            "VernacExtend",
            "c66ed4cb13e49cc4bc575260a36827acf2460d43"
        ],
        [
            "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
        ],
        [
            "apply combine_split.",
            "VernacExtend",
            "d0ccd5a6c55c97f3310115aabc2049862d3f1bc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_split1_helper : forall a b c, a = b -> a + c = b + c.",
            "VernacStartTheoremProof",
            "ef6226359d80f15b95baccd06313b65a02e4de8c"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_split1_eq2_helper : forall a b c, a = b -> c + a = c + b.",
            "VernacStartTheoremProof",
            "f4e7d6f151cf555222d4d0dec956a9f3f81aeac1"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_split1 : forall n1 n1' n2 (w : word (n1' + n2)) Heq, eq_rect n1' (fun n => word n) (split1 n1' n2 w) n1 Heq = split1 n1 n2 (eq_rect (n1'+n2) (fun n => word n) w (n1+n2) (eq_rect_split1_helper _ Heq)).",
            "VernacStartTheoremProof",
            "a3c76181475e3ccfc71da8bec59545b5abb80394"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (eq_rect_split1_helper n2 Heq); intros.",
            "VernacExtend",
            "96d6c401c974df119770cfdf13eea85d34f37773"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "assert (n1' = n1) as H' by omega.",
            "VernacExtend",
            "cf96cb3e4ed5879a285a6900044073f9cd5e6809"
        ],
        [
            "generalize dependent e.",
            "VernacExtend",
            "05fb6399e464307f7f4e729f62b091cb74c27cfe"
        ],
        [
            "rewrite H'; intros.",
            "VernacExtend",
            "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
        ],
        [
            "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_split1_eq1 : forall n1 n1' n2 (w : word (n1 + n2)) Heq Heq1, eq_rect n1 (fun n => word n) (split1 n1 n2 w) n1' Heq = split1 n1' n2 (eq_rect (n1+n2) (fun n => word n) w (n1'+n2) Heq1).",
            "VernacStartTheoremProof",
            "9d00ee34af5aedfb9258eb5485d1cfaa5054c895"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "generalize dependent Heq1.",
            "VernacExtend",
            "9f175caffb21ae882eabbf189e293585b4b8383b"
        ],
        [
            "rewrite Heq; intros.",
            "VernacExtend",
            "d2fdddd036e093db61290689ded9114071c3a7a2"
        ],
        [
            "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1_eq_rect_eq1_helper : forall a b c, b = a -> a + c = b + c.",
            "VernacStartTheoremProof",
            "3cabce2af80d1e868e9f1a3fe662372112184df5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem split1_eq_rect_eq1 : forall a a' b H w, split1 a b w = eq_rect _ word (split1 a' b (eq_rect _ word w _ (split1_eq_rect_eq1_helper b H))) _ H.",
            "VernacStartTheoremProof",
            "05184fdfe8dfc0c7ab5fc3ac45d2453adda044a4"
        ],
        [
            "intros a a' b H.",
            "VernacExtend",
            "ac1d9bbed88100e48edf8e75f3a6a7c416fc8159"
        ],
        [
            "subst a'; intros; eq_rect_simpl; auto.",
            "VernacExtend",
            "39926a1279fc32171f388ddd6e56aa98102fdec2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_split1_eq2 : forall n1 n2 n2' (w: word (n1 + n2)) Heq, split1 n1 n2 w = split1 n1 n2' (eq_rect (n1 + n2) (fun y : nat => word y) w (n1 + n2') Heq).",
            "VernacStartTheoremProof",
            "b0fb896883c3b40300b76759f986f8573648b738"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (n2 = n2') as H' by omega.",
            "VernacExtend",
            "b98d9ae43a921f2dca70d983702c823f027e59d9"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "generalize dependent Heq.",
            "VernacExtend",
            "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
        ],
        [
            "rewrite H'; intros.",
            "VernacExtend",
            "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
        ],
        [
            "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact eq_rect_combine_dist_helper1 : forall a b c d, b * c = d -> (a + b) * c = a * c + d.",
            "VernacStartTheoremProof",
            "ed8b29888863340715c0fa955c6e7c6e3d6d6915"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "apply Nat.mul_add_distr_r.",
            "VernacExtend",
            "a00a2f4a37571ba5bb9e1181dc65208b1ec817dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact eq_rect_combine_dist_helper2 : forall a b c d, b * c = d -> a * c + d = (a + b) * c.",
            "VernacStartTheoremProof",
            "db233fa2b98abcf82a08aaf0b14fcabcee95ccc9"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "symmetry; apply Nat.mul_add_distr_r.",
            "VernacExtend",
            "5566691f01c0d520441c2e356cb8eb14e7f932f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_rect_combine_dist : forall a b c d (w : word ((a + b) * c)) (H : b * c = d), b * c = d -> let H1 := (eq_rect_combine_dist_helper1 a b c H) in let H2 := (eq_rect_combine_dist_helper2 a b c H) in let w' := eq_rec ((a + b) * c) word w _ H1 in w = eq_rec _ word (combine (split1 (a * c) d w') (split2 (a * c) d w')) _ H2.",
            "VernacStartTheoremProof",
            "7ff0ee765a5a1a9278fa5e04d6857fc60bdb1b80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst d.",
            "VernacExtend",
            "e8dba9bc12dc5275eeee88dd88c6c51b887d332a"
        ],
        [
            "rewrite combine_split.",
            "VernacExtend",
            "990e1a0ee6918789baa80ad4e1863b16dc6e236c"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "generalize dependent H2.",
            "VernacExtend",
            "c7ac0604a164cfaff40656704aeed27281644463"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eq_rect_simpl; auto.",
            "VernacExtend",
            "b097303733b0a33e715b23246a0d9032edf3f966"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wzero_dist : forall a b c H, wzero ((a + b) * c) = eq_rect _ word (wzero (a * c + b * c)) _ H.",
            "VernacStartTheoremProof",
            "f5f458b6bfaab03ebec02f11107745ebcbab30fe"
        ],
        [
            "intros a b c H.",
            "VernacExtend",
            "e3f356cea74ce96065a7b57ffbf7be590e8d7db1"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wzero_rev : forall (a b : nat) H, wzero (a + b) = eq_rect _ word (wzero (b + a)) _ H.",
            "VernacStartTheoremProof",
            "68cd0113293c98f85a9c61c242a391ce7ea722b7"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1_zero : forall sz1 sz2, split1 sz1 sz2 (natToWord _ O) = natToWord _ O.",
            "VernacStartTheoremProof",
            "7d980ecc3741e2d9558f47bd22ce14e22e22ae0f"
        ],
        [
            "induction sz1; auto; simpl; intros.",
            "VernacExtend",
            "a5ecbab64e636df10d5d27361dd64468c27f8c80"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split2_zero : forall sz1 sz2, split2 sz1 sz2 (natToWord _ O) = natToWord _ O.",
            "VernacStartTheoremProof",
            "3621b31daedd61dc5cb05f435b23a07c4b0e2d7b"
        ],
        [
            "induction sz1; auto.",
            "VernacExtend",
            "625d41ba593fec1e9985e34136c21e3f0ea93560"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_inj : forall sz1 sz2 a b c d, @combine sz1 a sz2 b = @combine sz1 c sz2 d -> a = c /\\ b = d.",
            "VernacStartTheoremProof",
            "8a7dc0dcf6c6c4087bf3a57d08c119c1426a3ca7"
        ],
        [
            "induction sz1; simpl; intros.",
            "VernacExtend",
            "5bda912832677eb6fd52883de1edee0d03fe3716"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (word0 a) in *.",
            "VernacExtend",
            "7fd695e090a62798acbf93ebb9a764fe6bb4a8ff"
        ],
        [
            "rewrite (word0 c) in *.",
            "VernacExtend",
            "29bc5d0c074f1e34e527056203f1f748e91efa1e"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (shatter_word a) in *.",
            "VernacExtend",
            "bc9e327fab596389f661eab00b1de6946330fdd0"
        ],
        [
            "rewrite (shatter_word c) in *.",
            "VernacExtend",
            "8cc9518b21780cb6708a1d670fe0eabe8b8a09ff"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "apply (inj_pair2_eq_dec _ eq_nat_dec) in H2.",
            "VernacExtend",
            "f589ba6e44b6a70c23ec1040d92bb67300fb2bde"
        ],
        [
            "destruct (IHsz1 _ _ _ _ _ H2).",
            "VernacExtend",
            "0a5c82f94fd3fe6b95bcb33f449b1f173e5c684d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_wzero : forall sz1 sz2, combine (wzero sz1) (wzero sz2) = wzero (sz1 + sz2).",
            "VernacStartTheoremProof",
            "44c9d7d2afe47c04c4765cd2fa89fb30510cceb5"
        ],
        [
            "induction sz1; auto.",
            "VernacExtend",
            "625d41ba593fec1e9985e34136c21e3f0ea93560"
        ],
        [
            "unfold wzero in *.",
            "VernacExtend",
            "5f87248675ee5f0c0a1e123968016fd5c18baff3"
        ],
        [
            "intros; simpl; f_equal; auto.",
            "VernacExtend",
            "630649ecb99331eb6164832a1e91e77c39188d36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem combine_wones : forall sz1 sz2, combine (wones sz1) (wones sz2) = wones (sz1 + sz2).",
            "VernacStartTheoremProof",
            "20067453726c808328bc8f8611e5269609cd93bd"
        ],
        [
            "induction sz1; auto.",
            "VernacExtend",
            "625d41ba593fec1e9985e34136c21e3f0ea93560"
        ],
        [
            "intros; simpl; f_equal; auto.",
            "VernacExtend",
            "630649ecb99331eb6164832a1e91e77c39188d36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wordToN_nat : forall sz (w : word sz), wordToN w = N_of_nat (wordToNat w).",
            "VernacStartTheoremProof",
            "e18887c08234e66f46fa05a5c7afc53704106a5c"
        ],
        [
            "induction w; intuition.",
            "VernacExtend",
            "46681a2c386e090b0dae655b312b4d5578894077"
        ],
        [
            "destruct b; unfold wordToN, wordToNat; fold wordToN; fold wordToNat.",
            "VernacExtend",
            "9f7c400207508c3686a2c76599586e4acf576090"
        ],
        [
            "rewrite N_of_S.",
            "VernacExtend",
            "8573d0a916f723a563b4e0d4174d50871e76aca1"
        ],
        [
            "rewrite N_of_mult.",
            "VernacExtend",
            "5f994441446d16cdffdab909a8a622840de3c142"
        ],
        [
            "rewrite <- IHw.",
            "VernacExtend",
            "d1ccfed6bfc9d2e1fe307831ec6897cfc05a798d"
        ],
        [
            "rewrite Nmult_comm.",
            "VernacExtend",
            "8ca75f5ebfe5850130695c4b867ee44a8f247681"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite N_of_mult.",
            "VernacExtend",
            "5f994441446d16cdffdab909a8a622840de3c142"
        ],
        [
            "rewrite <- IHw.",
            "VernacExtend",
            "d1ccfed6bfc9d2e1fe307831ec6897cfc05a798d"
        ],
        [
            "rewrite Nmult_comm.",
            "VernacExtend",
            "8ca75f5ebfe5850130695c4b867ee44a8f247681"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_to_nat sz: forall (w: word sz), BinNat.N.to_nat (wordToN w) = wordToNat w.",
            "VernacStartTheoremProof",
            "ff69fb0f5e8bbe2297576a80bf7084faa4d1db24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "rewrite Nnat.Nat2N.id.",
            "VernacExtend",
            "ad09c0668c750a398aae16300d1da16cd4f9358d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Extern 1 (@eq nat _ _) => omega.",
            "VernacHints",
            "8a5ae6e104e775cfa23aecac71576feac2f4bfb8"
        ],
        [
            "Theorem mod2_S : forall n k, 2 * k = S n -> mod2 n = true.",
            "VernacStartTheoremProof",
            "c6388b18082494ca14202ab46a7e870114c31242"
        ],
        [
            "induction n as [n] using strong; intros.",
            "VernacExtend",
            "f3c1adabc0cb8efff2fc712391e9c33c909d3a2e"
        ],
        [
            "destruct n; simpl in *.",
            "VernacExtend",
            "f8eee26b639ce04d1ada21443f84607b09037299"
        ],
        [
            "elimtype False; omega.",
            "VernacExtend",
            "528b630f62bf971d3e6394d60b9ec83d551b6f98"
        ],
        [
            "destruct n; simpl in *; auto.",
            "VernacExtend",
            "0a573d6292da33edc97b77b12297d8f66fbe0849"
        ],
        [
            "destruct k as [|k]; simpl in *.",
            "VernacExtend",
            "a3c37fa9eb230a98aeb1d83edfce01e11dc57f1d"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply H with k; auto.",
            "VernacExtend",
            "068195622768acb8a35eb2447309f33090487ad9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wzero'_def : forall sz, wzero' sz = wzero sz.",
            "VernacStartTheoremProof",
            "7bf5787df86cf38fe6476ffdda7a4bb2539b5317"
        ],
        [
            "unfold wzero; induction sz; simpl; intuition.",
            "VernacExtend",
            "690b49ac58eb631d7baac3c890d60a07bdbcf58b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem posToWord_nat : forall p sz, posToWord sz p = natToWord sz (nat_of_P p).",
            "VernacStartTheoremProof",
            "c634e9f8d67d181d35893e4ddefd1dced20c5e1e"
        ],
        [
            "induction p as [ p IHp | p IHp | ]; destruct sz; simpl; intuition; f_equal; try rewrite wzero'_def in *.",
            "VernacExtend",
            "7939e6fedfc28e443346cbca30a96a0bb264f498"
        ],
        [
            "rewrite ZL6.",
            "VernacExtend",
            "de7a610f888c22651fe638ebfde6e863c2bf13ce"
        ],
        [
            "destruct (ZL4 p) as [x Heq]; rewrite Heq; simpl.",
            "VernacExtend",
            "1bed8ee6c2f5dc9ef256ca96176a93fe7ac31af6"
        ],
        [
            "replace (x + S x) with (S (2 * x)) by omega.",
            "VernacExtend",
            "65d762051f4e57822d6e8d794ba59fc51176ac2c"
        ],
        [
            "symmetry; apply mod2_S_double.",
            "VernacExtend",
            "a94223f182316d81e62095cde2aabd4b9bf522b5"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "rewrite ZL6.",
            "VernacExtend",
            "de7a610f888c22651fe638ebfde6e863c2bf13ce"
        ],
        [
            "destruct (nat_of_P p); simpl; intuition.",
            "VernacExtend",
            "b7ac1e1198eb4a7070add902511521255612d19a"
        ],
        [
            "replace (n + S n) with (S (2 * n)) by omega.",
            "VernacExtend",
            "e5522a38d87998fe116102528501f90c3054cf83"
        ],
        [
            "rewrite div2_S_double; auto.",
            "VernacExtend",
            "90f190349730943670a11fbc36cb7f8f1fecf0f7"
        ],
        [
            "unfold nat_of_P; simpl.",
            "VernacExtend",
            "6fc4a069e63358338cf7f7965be32be1e7657440"
        ],
        [
            "rewrite ZL6.",
            "VernacExtend",
            "de7a610f888c22651fe638ebfde6e863c2bf13ce"
        ],
        [
            "replace (nat_of_P p + nat_of_P p) with (2 * nat_of_P p) by omega.",
            "VernacExtend",
            "ce61ebe33c7c62933295a7c8b3165d3c9eae4786"
        ],
        [
            "symmetry; apply mod2_double.",
            "VernacExtend",
            "6722b77888faf5fc56392ea864a86d6ff4038334"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "unfold nat_of_P; simpl.",
            "VernacExtend",
            "6fc4a069e63358338cf7f7965be32be1e7657440"
        ],
        [
            "rewrite ZL6.",
            "VernacExtend",
            "de7a610f888c22651fe638ebfde6e863c2bf13ce"
        ],
        [
            "replace (nat_of_P p + nat_of_P p) with (2 * nat_of_P p) by omega.",
            "VernacExtend",
            "ce61ebe33c7c62933295a7c8b3165d3c9eae4786"
        ],
        [
            "rewrite div2_double.",
            "VernacExtend",
            "7e84b499d7e1354df8c54c84bcf9fcdb1e34ca64"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma posToWord_sz0: forall p, posToWord 0 p = $0.",
            "VernacStartTheoremProof",
            "bd683a0a93e63ec8bd0e64bce2ae0de2ff67af41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold posToWord.",
            "VernacExtend",
            "5198da205a7d193b027d9fa4366283a217f2d3be"
        ],
        [
            "destruct p; reflexivity.",
            "VernacExtend",
            "df120dd8b9b654682ce0d9f597aa32f128d53706"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem NToWord_nat : forall sz n, NToWord sz n = natToWord sz (nat_of_N n).",
            "VernacStartTheoremProof",
            "06f2abb146381d156794f0763ab554df374b619a"
        ],
        [
            "destruct n; simpl; intuition; try rewrite wzero'_def in *.",
            "VernacExtend",
            "707584080a1383c99e17f2c4e924de5d8bb10585"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply posToWord_nat.",
            "VernacExtend",
            "308175a558470bdcdc6ff67192c6e67c6160b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wplus_alt : forall sz (x y : word sz), wplus x y = wplusN x y.",
            "VernacStartTheoremProof",
            "0e121a76e3c68585dd845faa81f5e03f9376059d"
        ],
        [
            "unfold wplusN, wplus, wordBinN, wordBin; intros.",
            "VernacExtend",
            "7e5b73bc77b6dfb004fb9171a31804da10ef741b"
        ],
        [
            "repeat rewrite wordToN_nat; repeat rewrite NToWord_nat.",
            "VernacExtend",
            "e1694c8d0fae4c015020865b974c7bafd50b2bdb"
        ],
        [
            "rewrite nat_of_Nplus.",
            "VernacExtend",
            "1e9855ea5abf27539d6d070cdcae9fd1accb898e"
        ],
        [
            "repeat rewrite nat_of_N_of_nat.",
            "VernacExtend",
            "21b2f147cfbe288ac56143b8db2103fe7465de98"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wmult_alt : forall sz (x y : word sz), wmult x y = wmultN x y.",
            "VernacStartTheoremProof",
            "b2d1bba892976f50c8369c954f8c2d997770ac11"
        ],
        [
            "unfold wmultN, wmult, wordBinN, wordBin; intros.",
            "VernacExtend",
            "a0efe845e8f6838e8d8c7bb2e158e9bc77badd19"
        ],
        [
            "repeat rewrite wordToN_nat; repeat rewrite NToWord_nat.",
            "VernacExtend",
            "e1694c8d0fae4c015020865b974c7bafd50b2bdb"
        ],
        [
            "rewrite nat_of_Nmult.",
            "VernacExtend",
            "8c755c1b306b3f3e8ff845c39cf5d9fcb6dcea96"
        ],
        [
            "repeat rewrite nat_of_N_of_nat.",
            "VernacExtend",
            "21b2f147cfbe288ac56143b8db2103fe7465de98"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wneg_alt : forall sz (x : word sz), wneg x = wnegN x.",
            "VernacStartTheoremProof",
            "4228f84b203bac8d8f393821a20be0abcd0d3f2e"
        ],
        [
            "unfold wnegN, wneg; intros.",
            "VernacExtend",
            "2879b86dab26cd16e3a7994794879ba99b186f4f"
        ],
        [
            "repeat rewrite wordToN_nat; repeat rewrite NToWord_nat.",
            "VernacExtend",
            "e1694c8d0fae4c015020865b974c7bafd50b2bdb"
        ],
        [
            "rewrite nat_of_Nminus.",
            "VernacExtend",
            "95ffe10a8cf8c7bfe03f2545d22d328b7d52fcb7"
        ],
        [
            "do 2 f_equal.",
            "VernacExtend",
            "74f83f01290e37153981e2e772bf9a265f1f15d0"
        ],
        [
            "apply Npow2_nat.",
            "VernacExtend",
            "2fd388ea212eac2abc27974a7797379f93784b81"
        ],
        [
            "apply nat_of_N_of_nat.",
            "VernacExtend",
            "4f8242f92f228a8666621044eadcdcef47308cad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wminus_Alt : forall sz (x y : word sz), wminus x y = wminusN x y.",
            "VernacStartTheoremProof",
            "725c8a620cf7f82bf46aed2dd4f62deccf854f01"
        ],
        [
            "intros; unfold wminusN, wminus; rewrite wneg_alt; apply wplus_alt.",
            "VernacExtend",
            "5af7169df99bcc6555556e1652f8dd189171c490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wplus_unit : forall sz (x : word sz), natToWord sz 0 ^+ x = x.",
            "VernacStartTheoremProof",
            "6d14ca9563042ec840e4992c98bbb219b640847d"
        ],
        [
            "intros; rewrite wplus_alt; unfold wplusN, wordBinN; intros.",
            "VernacExtend",
            "f6b4958e148312fbce4c9ac604aec2d87fc8fb39"
        ],
        [
            "rewrite roundTrip_0; apply natToWord_wordToNat.",
            "VernacExtend",
            "ddd3b77e498a46ef67694d3ce10e782443ad3896"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wplus_comm : forall sz (x y : word sz), x ^+ y = y ^+ x.",
            "VernacStartTheoremProof",
            "51953277c16c525d67b44387530aa6c759886c18"
        ],
        [
            "intros; repeat rewrite wplus_alt; unfold wplusN, wordBinN; f_equal; auto.",
            "VernacExtend",
            "84788152d4e800de178fdcdddac79e3241b0e7d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem drop_sub : forall sz n k, (k * pow2 sz <= n)%nat -> natToWord sz (n - k * pow2 sz) = natToWord sz n.",
            "VernacStartTheoremProof",
            "0be2678947e74efe45ee9e7cbaa10a6268d9b329"
        ],
        [
            "induction sz as [|sz IHsz]; simpl; intros n k *; intuition; repeat rewrite untimes2 in *; f_equal.",
            "VernacExtend",
            "954857fe7ab6a5b61442062a36367ead5c368a78"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm k).",
            "VernacExtend",
            "42537c4d181fc78b4c21a04d4574890dd05c8d41"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "apply drop_mod2.",
            "VernacExtend",
            "21bc54569e69257ecffb9fd770de0b733a16bace"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm 2).",
            "VernacExtend",
            "70c21d51e3ec758a40c7190f4176e699686328b3"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- (IHsz (div2 n) k).",
            "VernacExtend",
            "a93ae5040aa339b107dc9f3d9324674c26284054"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm k).",
            "VernacExtend",
            "42537c4d181fc78b4c21a04d4574890dd05c8d41"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "rewrite div2_minus_2.",
            "VernacExtend",
            "b9425e98b9a025cfbdd3b63e61d20527a939a03c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm 2).",
            "VernacExtend",
            "70c21d51e3ec758a40c7190f4176e699686328b3"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply div2_bound.",
            "VernacExtend",
            "2e5e0201059878e04620dab8c2163fb8a4e076af"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm 2).",
            "VernacExtend",
            "70c21d51e3ec758a40c7190f4176e699686328b3"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Extern 1 (_ <= _)%nat => omega.",
            "VernacHints",
            "e4ef5c6b7f89a7983294f533652993b7708d2bb5"
        ],
        [
            "Theorem wplus_assoc : forall sz (x y z : word sz), x ^+ (y ^+ z) = x ^+ y ^+ z.",
            "VernacStartTheoremProof",
            "b704b798fa8f42134b7e64107cc0bbe2a5cb81fb"
        ],
        [
            "intros sz x y z *; repeat rewrite wplus_alt; unfold wplusN, wordBinN; intros.",
            "VernacExtend",
            "f3f5406526c9e19fc8edc1abe7a991cfd9e63fdd"
        ],
        [
            "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
            "VernacExtend",
            "58b2cd4f5c1460557c818d426e2865f2aace1fce"
        ],
        [
            "match goal with | [ |- context[wordToNat ?x + wordToNat ?y - ?x1 * pow2 ?sz + wordToNat ?z] ] => replace (wordToNat x + wordToNat y - x1 * pow2 sz + wordToNat z) with (wordToNat x + wordToNat y + wordToNat z - x1 * pow2 sz) by auto end.",
            "VernacExtend",
            "d21fe97998adefbc3fafa94f31013c2e68c8f284"
        ],
        [
            "match goal with | [ |- context[wordToNat ?x + (wordToNat ?y + wordToNat ?z - ?x0 * pow2 ?sz)] ] => replace (wordToNat x + (wordToNat y + wordToNat z - x0 * pow2 sz)) with (wordToNat x + wordToNat y + wordToNat z - x0 * pow2 sz) by auto end.",
            "VernacExtend",
            "703fbc4edfcfe54b9313439fe40d05708b5ba0af"
        ],
        [
            "repeat rewrite drop_sub; auto.",
            "VernacExtend",
            "e955ee27e29d732fd04990cf883698c18bf99beb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem roundTrip_1 : forall sz, wordToNat (natToWord (S sz) 1) = 1.",
            "VernacStartTheoremProof",
            "ffd6a3d91c33d75a6ceab273ea5b652a46d3922f"
        ],
        [
            "induction sz; simpl in *; intuition.",
            "VernacExtend",
            "6e87326fbed62efb28a41f990d48c3f37714a805"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem roundTrip_1': forall sz, sz <> 0 -> wordToNat (natToWord sz 1) = 1.",
            "VernacStartTheoremProof",
            "8e7d83bf0b6a2bced57c3e71a653d981b803bf7c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply roundTrip_1.",
            "VernacExtend",
            "825e83748f3bd5f182111da59911df09c45fcaea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mod2_WS : forall sz (x : word sz) b, mod2 (wordToNat (WS b x)) = b.",
            "VernacStartTheoremProof",
            "6ac1b5bd2cb8aa3445550f1893047b5b2ad456f2"
        ],
        [
            "intros sz x b.",
            "VernacExtend",
            "c42949e5e506a84272a1f1d804e0228b2694731d"
        ],
        [
            "rewrite wordToNat_wordToNat'.",
            "VernacExtend",
            "4a3b9b31f83b37ac6b20182d6a3d179c7ce0b5c5"
        ],
        [
            "destruct b; simpl.",
            "VernacExtend",
            "bc673f83b7fadb69a2678507bb22b8ff82ac3809"
        ],
        [
            "rewrite untimes2.",
            "VernacExtend",
            "5251470b7e5ac86b65a19fb703cf1376d8aa626a"
        ],
        [
            "case_eq (2 * wordToNat x); intuition.",
            "VernacExtend",
            "06a7a0d502cecf6a6048901764e1db85da4f77b0"
        ],
        [
            "eapply mod2_S; eauto.",
            "VernacExtend",
            "376a428d8813ba7fbc80ce3ceefdd7e9e26b67bc"
        ],
        [
            "rewrite <- (mod2_double (wordToNat x)); f_equal; omega.",
            "VernacExtend",
            "67eb2bdd812e2f2f965104c1be218b7d72d2ab35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem div2_WS : forall sz (x : word sz) b, div2 (wordToNat (WS b x)) = wordToNat x.",
            "VernacStartTheoremProof",
            "80183892dceb1bbb70bccba8ff8efb544f94317a"
        ],
        [
            "destruct b; rewrite wordToNat_wordToNat'; unfold wordToNat'; fold wordToNat'.",
            "VernacExtend",
            "7866f3d346af0fdf09fbb7a72c32fbfe6aa960fc"
        ],
        [
            "apply div2_S_double.",
            "VernacExtend",
            "46902306ebbfe1d6df02868cb622f055944e10a0"
        ],
        [
            "apply div2_double.",
            "VernacExtend",
            "d5708d52336bbbad206207bd8230f7591c160031"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wmult_unit : forall sz (x : word sz), natToWord sz 1 ^* x = x.",
            "VernacStartTheoremProof",
            "4200e2587515b9d82261da40e4f43cbfbc6c5ffe"
        ],
        [
            "intros sz x; rewrite wmult_alt; unfold wmultN, wordBinN; intros.",
            "VernacExtend",
            "261703c2b0d345849e1ac471c86ce56b77740285"
        ],
        [
            "destruct sz; simpl.",
            "VernacExtend",
            "cfbcf15e50674e874a01288e275368d7741d6bf7"
        ],
        [
            "rewrite (shatter_word x); reflexivity.",
            "VernacExtend",
            "7f561fd48414895fb421288aa001f0c8ac44248c"
        ],
        [
            "rewrite roundTrip_0; simpl.",
            "VernacExtend",
            "ae389c38d714f9a28a446eea60398f8df43af9a3"
        ],
        [
            "rewrite plus_0_r.",
            "VernacExtend",
            "d05263a401ad993feef5d443fed22d6f6d6bec5a"
        ],
        [
            "rewrite (shatter_word x).",
            "VernacExtend",
            "77d2fc71117698980a8b280c28b334b16d41763d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply mod2_WS.",
            "VernacExtend",
            "090fb853ff3a53bc3e0b743118ffba33a6e62bba"
        ],
        [
            "rewrite div2_WS.",
            "VernacExtend",
            "e0850797d8fdbf1f8c42d2998a16d4e721e24675"
        ],
        [
            "apply natToWord_wordToNat.",
            "VernacExtend",
            "6965d8129ca01f4ec46c0570dbca7760168b1b82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wmult_comm : forall sz (x y : word sz), x ^* y = y ^* x.",
            "VernacStartTheoremProof",
            "eb5b3c995da1ec176e71fcb6374783e521c88604"
        ],
        [
            "intros; repeat rewrite wmult_alt; unfold wmultN, wordBinN; auto with arith.",
            "VernacExtend",
            "51df791e612f40a383b3fa846bf2ed47fd20ace3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wmult_unit_r : forall sz (x : word sz), x ^* natToWord sz 1 = x.",
            "VernacStartTheoremProof",
            "5f199769981acdffccdeba1d44a58603fcbad99d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wmult_comm.",
            "VernacExtend",
            "87afb7750b98ee4139c0c98bf19e3c1ca3594dd2"
        ],
        [
            "apply wmult_unit.",
            "VernacExtend",
            "ab831856504e372e0a974b0f4cb0ed5f97052385"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmult_neut_l: forall (sz : nat) (x : word sz), $0 ^* x = $0.",
            "VernacStartTheoremProof",
            "d918ff56dcd7c350291be0e34bd9bb9868cb9f06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wmult.",
            "VernacExtend",
            "2bd7e2aaa0aecca5b25c44c7e009ed4476b95793"
        ],
        [
            "unfold wordBin.",
            "VernacExtend",
            "cb419c8e700e95f8d32e75d19ca10dd20615b40a"
        ],
        [
            "do 2 rewrite wordToN_nat.",
            "VernacExtend",
            "cfa7fe1ca5b1e3a792f0c24c8e15aaa5409e845c"
        ],
        [
            "rewrite <- Nnat.Nat2N.inj_mul.",
            "VernacExtend",
            "b24a0a95e0f0dbc9b384fe9ea192c593ccaa8c3f"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "rewrite Nat.mul_0_l.",
            "VernacExtend",
            "d10e13c54c0a4adfc40a8c0fd6d084fd4a3dc9d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite wzero'_def.",
            "VernacExtend",
            "6ad764d3d264b9860886e858fa77585126f1f754"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmult_neut_r: forall (sz : nat) (x : word sz), x ^* $0 = $0.",
            "VernacStartTheoremProof",
            "184f0e255e29799b0c0a7aae12f82e5247b50630"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wmult.",
            "VernacExtend",
            "2bd7e2aaa0aecca5b25c44c7e009ed4476b95793"
        ],
        [
            "unfold wordBin.",
            "VernacExtend",
            "cb419c8e700e95f8d32e75d19ca10dd20615b40a"
        ],
        [
            "do 2 rewrite wordToN_nat.",
            "VernacExtend",
            "cfa7fe1ca5b1e3a792f0c24c8e15aaa5409e845c"
        ],
        [
            "rewrite <- Nnat.Nat2N.inj_mul.",
            "VernacExtend",
            "b24a0a95e0f0dbc9b384fe9ea192c593ccaa8c3f"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "rewrite Nat.mul_0_r.",
            "VernacExtend",
            "b0c342e42232568149a672c331046fa4df1777ff"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite wzero'_def.",
            "VernacExtend",
            "6ad764d3d264b9860886e858fa77585126f1f754"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wmult_assoc : forall sz (x y z : word sz), x ^* (y ^* z) = x ^* y ^* z.",
            "VernacStartTheoremProof",
            "a9f7e0c22b6642136bc5e2691acd8ed1ee0a9ec9"
        ],
        [
            "intros sz x y z; repeat rewrite wmult_alt; unfold wmultN, wordBinN; intros.",
            "VernacExtend",
            "39beb2f34e206d66842ed7eadc5c3c20b6f55d06"
        ],
        [
            "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
            "VernacExtend",
            "58b2cd4f5c1460557c818d426e2865f2aace1fce"
        ],
        [
            "rewrite mult_minus_distr_l.",
            "VernacExtend",
            "a07b40043dcf59cb9fb1e47cef029f79dc9fca17"
        ],
        [
            "rewrite mult_minus_distr_r.",
            "VernacExtend",
            "8affc1e7492a03e77da168a254c8278b756311fb"
        ],
        [
            "match goal with | [ |- natToWord _ (_ - _ * (?x0' * _)) = natToWord _ (_ - ?x1' * _ * _) ] => rename x0' into x0, x1' into x1 end.",
            "VernacExtend",
            "bfb1204bffd24555034baa08cb1faeb9bb78c508"
        ],
        [
            "rewrite (mult_assoc (wordToNat x) x0).",
            "VernacExtend",
            "997f048c0de560e439293941c80d5589c8b1bda8"
        ],
        [
            "rewrite <- (mult_assoc x1).",
            "VernacExtend",
            "c8cc066b3a58911cadf3399232bf22af96889147"
        ],
        [
            "rewrite (mult_comm (pow2 sz)).",
            "VernacExtend",
            "17d46143b27e9e00e4d211b453ba20d8957138d8"
        ],
        [
            "rewrite (mult_assoc x1).",
            "VernacExtend",
            "8a3f9a5275a3a1fbc37512f19837dc96d1ca26cd"
        ],
        [
            "repeat rewrite drop_sub; auto with arith.",
            "VernacExtend",
            "c99e7619566f82a0be1a292d9965d79902d7ee30"
        ],
        [
            "rewrite (mult_comm x1).",
            "VernacExtend",
            "2de48433856fa7f410543093ba483bc9d0bd5e27"
        ],
        [
            "rewrite <- (mult_assoc (wordToNat x)).",
            "VernacExtend",
            "b1967a260a95b5e502fdc4ec0e895e8f1253a32b"
        ],
        [
            "rewrite (mult_comm (wordToNat y)).",
            "VernacExtend",
            "f64c6601a1da9232c001170d9ad434341507592e"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm (wordToNat x)).",
            "VernacExtend",
            "8aa82979ab2dc96bfa664f0382e660ee3c0bc612"
        ],
        [
            "repeat rewrite <- mult_assoc.",
            "VernacExtend",
            "2252311238b6c07ad14a166981d63a2404857515"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "repeat rewrite <- mult_assoc.",
            "VernacExtend",
            "2252311238b6c07ad14a166981d63a2404857515"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wmult_plus_distr : forall sz (x y z : word sz), (x ^+ y) ^* z = (x ^* z) ^+ (y ^* z).",
            "VernacStartTheoremProof",
            "4ced5faa3e1d561fa10d14156e1432d9e18d192e"
        ],
        [
            "intros sz x y z; repeat rewrite wmult_alt; repeat rewrite wplus_alt; unfold wmultN, wplusN, wordBinN; intros.",
            "VernacExtend",
            "769e69bc374d84d1d8187d8b5eabc4f634ecd9b1"
        ],
        [
            "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
            "VernacExtend",
            "58b2cd4f5c1460557c818d426e2865f2aace1fce"
        ],
        [
            "rewrite mult_minus_distr_r.",
            "VernacExtend",
            "8affc1e7492a03e77da168a254c8278b756311fb"
        ],
        [
            "match goal with | [ |- natToWord _ (_ - ?x0' * _ * _) = natToWord _ (_ - ?x1' * _ + (_ - ?x2' * _)) ] => rename x0' into x0, x1' into x1, x2' into x2 end.",
            "VernacExtend",
            "a0573749cdbb25bf290610435e6c7ae0d269fb2f"
        ],
        [
            "rewrite <- (mult_assoc x0).",
            "VernacExtend",
            "b5164a7b0dae436ea7759f88f43bcfd412ac11bb"
        ],
        [
            "rewrite (mult_comm (pow2 sz)).",
            "VernacExtend",
            "17d46143b27e9e00e4d211b453ba20d8957138d8"
        ],
        [
            "rewrite (mult_assoc x0).",
            "VernacExtend",
            "c9cf190e5c807572e54a0d4e9cfad08b21183ee1"
        ],
        [
            "replace (wordToNat x * wordToNat z - x1 * pow2 sz + (wordToNat y * wordToNat z - x2 * pow2 sz)) with (wordToNat x * wordToNat z + wordToNat y * wordToNat z - x1 * pow2 sz - x2 * pow2 sz).",
            "VernacExtend",
            "e3ad2117b135700f119e9e13ffb2c02fe6305df4"
        ],
        [
            "repeat rewrite drop_sub; auto with arith.",
            "VernacExtend",
            "c99e7619566f82a0be1a292d9965d79902d7ee30"
        ],
        [
            "rewrite (mult_comm x0).",
            "VernacExtend",
            "cdb25154847bdd5a3ceb5720855a863f50b1cad8"
        ],
        [
            "rewrite (mult_comm (wordToNat x + wordToNat y)).",
            "VernacExtend",
            "5610b531218e2c3b7b7b6e0f2dabf6eba27b57b6"
        ],
        [
            "rewrite <- (mult_assoc (wordToNat z)).",
            "VernacExtend",
            "fb69ced828f384d9a7335270bdadebb252d7fde5"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "generalize dependent (wordToNat x * wordToNat z).",
            "VernacExtend",
            "3e2167928c7536791d031cdedc43281cb9cf3a84"
        ],
        [
            "generalize dependent (wordToNat y * wordToNat z).",
            "VernacExtend",
            "cdab1a349e6f5f172da5f323297d204224481c2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wminus_def : forall sz (x y : word sz), x ^- y = x ^+ ^~ y.",
            "VernacStartTheoremProof",
            "6920c1bf5e48e9d3eec3fb272a5c068db352a2af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wordToNat_bound : forall sz (w : word sz), (wordToNat w < pow2 sz)%nat.",
            "VernacStartTheoremProof",
            "4e64e2780f8cbc9b50407f1dce04714b52ce246c"
        ],
        [
            "induction w as [|b]; simpl; intuition.",
            "VernacExtend",
            "a08108fe6e9713ceb90a42c47f8295640acc10b1"
        ],
        [
            "destruct b; simpl; omega.",
            "VernacExtend",
            "08c325857e0dff64fc2c5e6662bcd69100d06816"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem natToWord_pow2 : forall sz, natToWord sz (pow2 sz) = natToWord sz 0.",
            "VernacStartTheoremProof",
            "815e778563b35f75b52b4a321e8ee95873f6c357"
        ],
        [
            "induction sz as [|sz]; simpl; intuition.",
            "VernacExtend",
            "9491aeb9bbc2f07a599994ac0e78a67b9dc196b0"
        ],
        [
            "generalize (div2_double (pow2 sz)); simpl; intro Hr; rewrite Hr; clear Hr.",
            "VernacExtend",
            "c260f3dfa6f329adba85ffbfe33bc3585fcc2095"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "generalize (mod2_double (pow2 sz)); auto.",
            "VernacExtend",
            "25e989fc5a496e50fa33ef5a491dc414752f1b35"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wminus_inv : forall sz (x : word sz), x ^+ ^~ x = wzero sz.",
            "VernacStartTheoremProof",
            "429ff790a3343387ffb68a7f3cf143e6051697f1"
        ],
        [
            "intros sz x; rewrite wneg_alt; rewrite wplus_alt; unfold wnegN, wplusN, wzero, wordBinN; intros.",
            "VernacExtend",
            "2acc24e066d0ecaa3cc2f6ae03431dddf392dda5"
        ],
        [
            "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
            "VernacExtend",
            "58b2cd4f5c1460557c818d426e2865f2aace1fce"
        ],
        [
            "match goal with | [ |- context[wordToNat ?x + (pow2 ?sz - wordToNat ?x - ?x0 * pow2 ?sz)] ] => replace (wordToNat x + (pow2 sz - wordToNat x - x0 * pow2 sz)) with (pow2 sz - x0 * pow2 sz) end.",
            "VernacExtend",
            "fb60e8b03efa11734fe1c944ab84a1826f579598"
        ],
        [
            "rewrite drop_sub; auto with arith.",
            "VernacExtend",
            "47106be870e968fa352dcfd42a4d2b637ce6976f"
        ],
        [
            "apply natToWord_pow2.",
            "VernacExtend",
            "d9370b48e147fd7328b9f33d0210ef64db6e54ac"
        ],
        [
            "generalize (wordToNat_bound x).",
            "VernacExtend",
            "cbc13c359f9a1bdfec107bd83f5e939b44af2e86"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_diag: forall sz (w: word sz), w ^- w = $0.",
            "VernacStartTheoremProof",
            "a4bec43e296efb01b4ba031162bdeb559b1338c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wminus.",
            "VernacExtend",
            "a28ef9ea5c70771d0ae63cebccd34e92e0b01900"
        ],
        [
            "apply wminus_inv.",
            "VernacExtend",
            "241405d0972142f7bf23dcfba249372a4f214964"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_0_wminus: forall {sz: nat} (x: word sz), ^~ x = $0 ^- x.",
            "VernacStartTheoremProof",
            "6be2935cc9fcdb2051cdc074edde09333ff8f996"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- wplus_unit at 1.",
            "VernacExtend",
            "29f3af32a03cced04faa3b93cc59323213d1ef76"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition wring (sz : nat) : ring_theory (wzero sz) (wone sz) (@wplus sz) (@wmult sz) (@wminus sz) (@wneg sz) (@eq _) := mk_rt _ _ _ _ _ _ _ (@wplus_unit _) (@wplus_comm _) (@wplus_assoc _) (@wmult_unit _) (@wmult_comm _) (@wmult_assoc _) (@wmult_plus_distr _) (@wminus_def _) (@wminus_inv _).",
            "VernacDefinition",
            "19da2394aeadd8abcdc29ece88658e134910a712"
        ],
        [
            "Theorem weqb_sound : forall sz (x y : word sz), weqb x y = true -> x = y.",
            "VernacStartTheoremProof",
            "ce144d88c91b61d8e02befd5c85d5dbb73dd493d"
        ],
        [
            "eapply weqb_true_iff.",
            "VernacExtend",
            "a379a67e6ed6f0fa2113d6af118f69e5e26b9759"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments weqb_sound : clear implicits.",
            "VernacArguments",
            "88ba5b7c0f1ba0640d3f99c9faef294e9c18ad9c"
        ],
        [
            "Lemma weqb_eq: forall sz (a b: word sz), a = b -> weqb a b = true.",
            "VernacStartTheoremProof",
            "8001774ef0b2b336ce4fc2b6cddab9d636027c16"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite weqb_true_iff.",
            "VernacExtend",
            "8349edd28c5583f498faad5c6cc02b39d5033885"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weqb_ne: forall sz (a b: word sz), a <> b -> weqb a b = false.",
            "VernacStartTheoremProof",
            "a13fc7cd0d2c5bfe0d48cce622cfd3bae7b74bcf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (weqb a b) eqn: E.",
            "VernacExtend",
            "8363f8f1a818532a622c0d56bdc4fa9c9bb1a82e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite weqb_true_iff in E.",
            "VernacExtend",
            "06b84e2c48086be44f0d5e667727d66de6bd532c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weqb_false: forall sz (a b: word sz), weqb a b = false -> a <> b.",
            "VernacStartTheoremProof",
            "ff5a4f61fc015003ac099fe7a24dfa37324b0565"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (weqb a b) eqn: E.",
            "VernacExtend",
            "8363f8f1a818532a622c0d56bdc4fa9c9bb1a82e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite weqb_eq in E; congruence.",
            "VernacExtend",
            "b53e9478877da7f8c4b205fbe37e931cf0edae66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac is_nat_cst n := match eval hnf in n with | O => constr:(true) | S ?n' => is_nat_cst n' | _ => constr:(false) end.",
            "VernacExtend",
            "8cc58a239a66e1850f97d81b988b10dd02566067"
        ],
        [
            "Ltac isWcst w := match eval hnf in w with | WO => constr:(true) | WS ?b ?w' => match eval hnf in b with | true => isWcst w' | false => isWcst w' | _ => constr:(false) end | natToWord _ ?n => is_nat_cst n | _ => constr:(false) end.",
            "VernacExtend",
            "6b9be183110c7665710e118729ce1d1ef18b66ee"
        ],
        [
            "Ltac wcst w := let b := isWcst w in match b with | true => w | _ => constr:(NotConstant) end.",
            "VernacExtend",
            "6eff854176f3abdcf23144c4a685a5263b6e6417"
        ],
        [
            "Ltac noptac x := idtac.",
            "VernacExtend",
            "2affc35ba3a11240c59e45cda774bf69d27caefc"
        ],
        [
            "Ltac PackWring sz F := let RNG := (fun proj => proj inv_morph_nothing inv_morph_nothing noptac noptac (word sz) (@eq (word sz)) (wzero sz) (wone sz) (@wplus sz) (@wmult sz) (@wminus sz) (@wneg sz) (BinNums.Z) (BinNums.N) (id_phi_N) (pow_N (wone sz) (@wmult sz)) (ring_correct (@Eqsth (word sz)) (Eq_ext _ _ _) (Rth_ARth (@Eqsth (word sz)) (Eq_ext _ _ _) (wring sz)) (gen_phiZ_morph (@Eqsth (word sz)) (Eq_ext _ _ _) (wring sz)) (pow_N_th _ _ (@Eqsth (word sz))) (triv_div_th (@Eqsth (word sz)) (Eq_ext _ _ _) (Rth_ARth (@Eqsth (word sz)) (Eq_ext _ _ _) (wring sz)) (gen_phiZ_morph (@Eqsth (word sz)) (Eq_ext _ _ _) (wring sz))) ) tt) in F RNG (@nil (word sz)) (@nil (word sz)).",
            "VernacExtend",
            "dbd395d2f429bffbfab7e53ac297aacdbd6dfba8"
        ],
        [
            "Ltac ring_sz sz := PackWring sz Ring_gen.",
            "VernacExtend",
            "118c62f57c414f710a56744391bfc10c784380e7"
        ],
        [
            "Fact bitwp_wtl : forall sz (w w' : word (S sz)) op, bitwp op (wtl w) (wtl w') = wtl (bitwp op w w').",
            "VernacStartTheoremProof",
            "48ff9109b8035ef7803091d5ecf21e2ff60cbd19"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (shatter_word w), (shatter_word w').",
            "VernacExtend",
            "fdf8e93031256523e29d32bbcd386d403a6d35e7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1_bitwp_dist : forall sz1 sz2 w w' op, split1 sz1 sz2 (bitwp op w w') = bitwp op (split1 sz1 sz2 w) (split1 sz1 sz2 w').",
            "VernacStartTheoremProof",
            "ad6b78217ac6c04d1280d0a2dcd162463022d668"
        ],
        [
            "induction sz1; intros; auto.",
            "VernacExtend",
            "3a05187e6631e1e9d571704f8bd6a33c0d7d4f5a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite (shatter_word w), (shatter_word w'); auto.",
            "VernacExtend",
            "4d7f660018867cdfdfaebb83988997dacefcc091"
        ],
        [
            "rewrite <- IHsz1, bitwp_wtl.",
            "VernacExtend",
            "9caa0128e30231beec4e2983bf19d9a87175bd64"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split2_bitwp_dist : forall sz1 sz2 w w' op, split2 sz1 sz2 (bitwp op w w') = bitwp op (split2 sz1 sz2 w) (split2 sz1 sz2 w').",
            "VernacStartTheoremProof",
            "cd28bf7948653116b660a73879ee557006821452"
        ],
        [
            "induction sz1; intros; auto.",
            "VernacExtend",
            "3a05187e6631e1e9d571704f8bd6a33c0d7d4f5a"
        ],
        [
            "simpl; rewrite <- IHsz1, bitwp_wtl.",
            "VernacExtend",
            "7a8458f4c6d0ff2cff4901381bcb0f6378925afc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_bitwp : forall sz1 sz2 (wa wa' : word sz1) (wb wb' : word sz2) op, combine (bitwp op wa wa') (bitwp op wb wb') = bitwp op (combine wa wb) (combine wa' wb').",
            "VernacStartTheoremProof",
            "535fd147d1e910629f8fcbf4f3381e1df32f4831"
        ],
        [
            "induction sz1; intros; rewrite (shatter_word wa), (shatter_word wa'); simpl; f_equal; auto.",
            "VernacExtend",
            "8d9037701f5f238d9b6ef2705380685f22c555ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_bitwp : forall a b Heq f w1 w2, bitwp f w1 w2 = eq_rect a word ( bitwp f (eq_rect b word w1 a Heq) (eq_rect b word w2 a Heq)) b (eq_sym Heq).",
            "VernacStartTheoremProof",
            "b0f48bd293eecc672135c9b84ef07e9a3bbed85b"
        ],
        [
            "intros a b H; subst a.",
            "VernacExtend",
            "a8a453d7d56b7ad7c08d84a5b3bfbf74213b1a34"
        ],
        [
            "intros; eq_rect_simpl; reflexivity.",
            "VernacExtend",
            "2f7e0f467fef4eb62cf84e9aa78c27b9c4d70679"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact eq_rect_bitwp' : forall a b Heq f w1 w2, eq_rect b word (bitwp f w1 w2) a Heq = bitwp f (eq_rect b word w1 a Heq) (eq_rect b word w2 a Heq).",
            "VernacStartTheoremProof",
            "d96f7e0192bfded267e99581c8190eb9a856e4f4"
        ],
        [
            "intros a b H1; subst a.",
            "VernacExtend",
            "d7632e597ec8559b72e9b4b01d0f42c4e3bbcfff"
        ],
        [
            "intros; eq_rect_simpl; reflexivity.",
            "VernacExtend",
            "2f7e0f467fef4eb62cf84e9aa78c27b9c4d70679"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact eq_rect_bitwp_1 : forall a b Heq f w1 w2, bitwp f (eq_rect a word w1 b Heq) w2 = eq_rect a word (bitwp f w1 (eq_rect b word w2 a (eq_sym Heq))) b Heq.",
            "VernacStartTheoremProof",
            "3319eeb1bda206995b32b42ef2d86ff47e8b6c0a"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "subst a; intros; eq_rect_simpl; auto.",
            "VernacExtend",
            "40d3e26ac710bd2b8a4551b8544b0a4e90e1daab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_wnot'_equiv : forall sz (w : word sz), wnot w = wnot' w.",
            "VernacStartTheoremProof",
            "c971f78e6abd76af4ecc7de41be724ccb6e6f8e9"
        ],
        [
            "unfold wnot'.",
            "VernacExtend",
            "42cd7bd1101bd527ee2a1ee14af2a979c9c70ab6"
        ],
        [
            "induction sz; intros w; shatterer.",
            "VernacExtend",
            "7546af763af78a66ebfe8e63b90d68ac5549b6b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_split1 : forall sz1 sz2 w, wnot (split1 sz1 sz2 w) = split1 sz1 sz2 (wnot w).",
            "VernacStartTheoremProof",
            "8fe41d22092ae2d876806533058cfafbac38b0f8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite wnot_wnot'_equiv.",
            "VernacExtend",
            "8e13c39ee679ee642b7dead8aeeb5dcc0469951e"
        ],
        [
            "unfold wnot'.",
            "VernacExtend",
            "42cd7bd1101bd527ee2a1ee14af2a979c9c70ab6"
        ],
        [
            "erewrite <- split1_combine with (w := wones _).",
            "VernacExtend",
            "255a5997c70678ae8713de9c75bfd3afb62ca5e6"
        ],
        [
            "rewrite <- split1_bitwp_dist, combine_wones.",
            "VernacExtend",
            "a647b6c9fd681e0f11ebc509c31090e82ba7dde7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_split2 : forall sz1 sz2 w, wnot (split2 sz1 sz2 w) = split2 sz1 sz2 (wnot w).",
            "VernacStartTheoremProof",
            "9dd49551a55ca11422b8e15c230718b5382d04fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite wnot_wnot'_equiv.",
            "VernacExtend",
            "8e13c39ee679ee642b7dead8aeeb5dcc0469951e"
        ],
        [
            "unfold wnot'.",
            "VernacExtend",
            "42cd7bd1101bd527ee2a1ee14af2a979c9c70ab6"
        ],
        [
            "erewrite <- split2_combine with (z := wones _).",
            "VernacExtend",
            "2dd03f127e33128fa6db254c7ff6a8c24c589fe5"
        ],
        [
            "rewrite <- split2_bitwp_dist, combine_wones.",
            "VernacExtend",
            "a0a2ee33215a90f768ac72e8e7c0dd0469079460"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_combine : forall sz1 sz2 (w1 : word sz1) (w2 : word sz2), wnot (combine w1 w2) = combine (wnot w1) (wnot w2).",
            "VernacStartTheoremProof",
            "ebc6bc6f2c699deb7821b0b75f65b62cdd9dde23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite wnot_wnot'_equiv.",
            "VernacExtend",
            "8e13c39ee679ee642b7dead8aeeb5dcc0469951e"
        ],
        [
            "unfold wnot'.",
            "VernacExtend",
            "42cd7bd1101bd527ee2a1ee14af2a979c9c70ab6"
        ],
        [
            "rewrite <- combine_wones, combine_bitwp.",
            "VernacExtend",
            "378e3ea7a28687932da35c28123d110bdb30b1ef"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_zero: forall sz, wnot (wzero sz) = wones sz.",
            "VernacStartTheoremProof",
            "79c466bcc6099ac01a69635b1095ec77bbf1ae6c"
        ],
        [
            "induction sz; simpl; f_equal; eauto.",
            "VernacExtend",
            "2551d783de35cd872bb0cb1abaa2f78b81ad78c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_ones : forall sz, wnot (wones sz) = wzero sz.",
            "VernacStartTheoremProof",
            "54ec7c52288fcd2ef2f866495c1cc6d234e4dc10"
        ],
        [
            "induction sz; simpl; f_equal; try rewrite IHsz; eauto.",
            "VernacExtend",
            "5c221b84b5ab0937617168990ea349e78b09029f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_eq_rect : forall a b H (w : word a), wnot (eq_rect a word w b H) = eq_rect a word (wnot w) b H.",
            "VernacStartTheoremProof",
            "14ade8815eacf0daea22d612173944f691ee6f23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst b; eq_rect_simpl; auto.",
            "VernacExtend",
            "2a6c0cad3dee028e7fd9e7a14db4f16ecb11af70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wor_unit : forall sz (x : word sz), wzero sz ^| x = x.",
            "VernacStartTheoremProof",
            "f5e3c60b6732e0e0d50819601e9860ce280928d1"
        ],
        [
            "unfold wzero, wor; induction x; simpl; intuition congruence.",
            "VernacExtend",
            "aa0b5b3ffc24c83cf0f051f8ca5523a143039761"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wor_comm : forall sz (x y : word sz), x ^| y = y ^| x.",
            "VernacStartTheoremProof",
            "e576a7630043cf4bf9bbf10db9ff4d9f8fcccb88"
        ],
        [
            "unfold wor; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
            "VernacExtend",
            "e4768cf5167cad7fd0c7c0c255253c986d27874f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wor_assoc : forall sz (x y z : word sz), x ^| (y ^| z) = x ^| y ^| z.",
            "VernacStartTheoremProof",
            "099d08e6f2d77bf649e4dc749f44b04c4c43cb02"
        ],
        [
            "unfold wor; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
            "VernacExtend",
            "e4768cf5167cad7fd0c7c0c255253c986d27874f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wand_unit : forall sz (x : word sz), wones sz ^& x = x.",
            "VernacStartTheoremProof",
            "f0544269fdbb2d02f240d05b70ebced9abd2997f"
        ],
        [
            "unfold wand; induction x; simpl; intuition congruence.",
            "VernacExtend",
            "131b13ea74d2fdc67dc895ef97e29b184a32dea6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wand_kill : forall sz (x : word sz), wzero sz ^& x = wzero sz.",
            "VernacStartTheoremProof",
            "bf84f7428d48cb0a3aab566bac293f47e1fa7dd7"
        ],
        [
            "unfold wzero, wand; induction x; simpl; intuition congruence.",
            "VernacExtend",
            "4c546c2066da46980201736e09b5f6e19d92ef78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wand_comm : forall sz (x y : word sz), x ^& y = y ^& x.",
            "VernacStartTheoremProof",
            "5735c9d72a15dbbb17d4970e96a9a809cc07e379"
        ],
        [
            "unfold wand; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
            "VernacExtend",
            "cb660963253cf8f7fb305973374e142520554144"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wand_assoc : forall sz (x y z : word sz), x ^& (y ^& z) = x ^& y ^& z.",
            "VernacStartTheoremProof",
            "43383c23e0bcb4604e46518ada37484e4762df84"
        ],
        [
            "unfold wand; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
            "VernacExtend",
            "cb660963253cf8f7fb305973374e142520554144"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wand_or_distr : forall sz (x y z : word sz), (x ^| y) ^& z = (x ^& z) ^| (y ^& z).",
            "VernacStartTheoremProof",
            "d7078b7efff583a62eab7d8fe587949d31e5a21d"
        ],
        [
            "unfold wand, wor; induction x; intro y; rewrite (shatter_word y); intro z; rewrite (shatter_word z); simpl; intuition; f_equal; auto with bool.",
            "VernacExtend",
            "90e0b7191a94426a6263352b9bd29e56771cc52c"
        ],
        [
            "destruct (whd y); destruct (whd z); destruct b; reflexivity.",
            "VernacExtend",
            "d3f68bca99abaa1e6415c2d42ba5af83ceff3752"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wor_wones : forall sz w, wones sz ^| w = wones sz.",
            "VernacStartTheoremProof",
            "573cc0243c5d1a7a23dd33433e07333fafcabb2a"
        ],
        [
            "unfold wor; induction sz; intros; simpl; auto.",
            "VernacExtend",
            "79a82d4b7bc40373321625d2f154793a0a5cd2d7"
        ],
        [
            "rewrite IHsz; auto.",
            "VernacExtend",
            "2973f5a0da9cb6e1e18def41b71f6cc10f0e68c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wor_wzero : forall sz w, wzero sz ^| w = w.",
            "VernacStartTheoremProof",
            "8b91adc0951daab11dd0b6fbc5430084a8c3a51f"
        ],
        [
            "unfold wor; induction sz; shatterer.",
            "VernacExtend",
            "5735e2f33f6fcfc5a9ea9de723ae5fb7aee80335"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_wones : forall sz w, wones sz ^& w = w.",
            "VernacStartTheoremProof",
            "270ef739ccd0b1f1e025cfebbb63edb46bbe17c3"
        ],
        [
            "unfold wand; induction sz; shatterer.",
            "VernacExtend",
            "e14c7fec12eef78edf19a38f5c103bac0da72991"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_wzero : forall sz w, wzero sz ^& w = wzero sz.",
            "VernacStartTheoremProof",
            "38daaa247f76bfa367b06a269d4076442b85284b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- wzero'_def.",
            "VernacExtend",
            "fa9016326a1619c52f176541f311be8cee8dee47"
        ],
        [
            "unfold wand; induction sz; shatterer.",
            "VernacExtend",
            "e14c7fec12eef78edf19a38f5c103bac0da72991"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wxor_wones : forall sz w, wxor (wones sz) w = wnot w.",
            "VernacStartTheoremProof",
            "31c4e0baff1f66a41c1dfe2df42a985b0f4a394b"
        ],
        [
            "unfold wxor; induction sz; shatterer.",
            "VernacExtend",
            "ae9bdee79a409f3c649e67ef2df879989ead1e92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wxor_wzero : forall sz w, wxor (wzero sz) w = w.",
            "VernacStartTheoremProof",
            "9d773416310dcb365e13359f61f6690a95049e7d"
        ],
        [
            "unfold wxor; induction sz; shatterer; destruct (whd w); auto.",
            "VernacExtend",
            "507ef2c3566ef985ed8c71638c21bd7f88506357"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wxor_comm : forall sz (w1 w2 : word sz), wxor w1 w2 = wxor w2 w1.",
            "VernacStartTheoremProof",
            "b338fc1081d0ea3c0eaa5817a6765837d7b9bc11"
        ],
        [
            "unfold wxor; induction sz.",
            "VernacExtend",
            "11cc001408eb5958becdb8fb98356a6a47d16bcc"
        ],
        [
            "shatterer.",
            "VernacExtend",
            "f951dddd3876ce739d9bcc70c03a8fe74800dd2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (shatter_word w1), (shatter_word w2).",
            "VernacExtend",
            "4041679cc6f792563e98cc1bbf78fef9d62308d7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite xorb_comm, IHsz.",
            "VernacExtend",
            "d4fec4682589ca56e8b0c9de01199a8fade7b3fd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wxor_assoc : forall sz (w1 w2 w3 : word sz), wxor w1 (wxor w2 w3) = wxor (wxor w1 w2) w3.",
            "VernacStartTheoremProof",
            "453bb83d64ab4679d0787520e8890866542dc8f9"
        ],
        [
            "unfold wxor.",
            "VernacExtend",
            "ac78a1b872f35f74b306160ffd6e0158641d1fc0"
        ],
        [
            "induction sz; intros; rewrite (shatter_word w1), (shatter_word w2), (shatter_word w3); auto.",
            "VernacExtend",
            "b8c03870292cc2ff759b0d136c9946c129fa30fd"
        ],
        [
            "simpl; f_equal.",
            "VernacExtend",
            "e1a8d9221cffa231af353a6224974ce2a7f11d21"
        ],
        [
            "rewrite xorb_assoc_reverse; auto.",
            "VernacExtend",
            "cadfb7b3ff8171ee1da279581be7c2ebe6592165"
        ],
        [
            "rewrite IHsz.",
            "VernacExtend",
            "0e7c5794acb2a369001382a34376ab478b933f3b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wor_wone : forall sz (w : word sz) b, WS b w ^| wone _ = WS true w.",
            "VernacStartTheoremProof",
            "5a50e353f7425503cb7ba26b749743268ddceb47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "compute [wone natToWord wor].",
            "VernacExtend",
            "d8deecba0d18100f9ccab3f3a9a9d07b96a7c39c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "change (natToWord sz 0) with (wzero sz).",
            "VernacExtend",
            "acc4eac2675d845118ea2e972f2e06ce101ec66c"
        ],
        [
            "rewrite orb_true_r.",
            "VernacExtend",
            "5d7ee48d247b7cf18db132babe96cc889f4123e4"
        ],
        [
            "rewrite wor_comm, wor_wzero.",
            "VernacExtend",
            "6575fc4d3316014c5f670ac263ea5257e61620c1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wand_wone : forall sz (w : word sz) b, WS b w ^& wone _ = WS b (wzero _).",
            "VernacStartTheoremProof",
            "05d6773ed795f3c4463d25e39be41487cc9f1f53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "compute [wone natToWord wand].",
            "VernacExtend",
            "9b57d1d162d7c74550501ef9f8e9e53ab02223b4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "change (natToWord sz 0) with (wzero sz).",
            "VernacExtend",
            "acc4eac2675d845118ea2e972f2e06ce101ec66c"
        ],
        [
            "rewrite andb_true_r.",
            "VernacExtend",
            "230918acbe37788580429f7b57db0df199d9fbfd"
        ],
        [
            "rewrite wand_comm, wand_wzero.",
            "VernacExtend",
            "e3889d499a14f385e892d4b64dd0a65cf885e3c4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wxor_wone : forall sz (w : word sz) b, wxor (WS b w) (wone _) = WS (negb b) w.",
            "VernacStartTheoremProof",
            "12702a631e7d9f3c1fe9f93db607d5e126363352"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "compute [wone natToWord wxor].",
            "VernacExtend",
            "ab3409d90f742f044b44ee973dc37f1997fcf27a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "change (natToWord sz 0) with (wzero sz).",
            "VernacExtend",
            "acc4eac2675d845118ea2e972f2e06ce101ec66c"
        ],
        [
            "rewrite xorb_true_r.",
            "VernacExtend",
            "35e388fcf66b7ea68e9461933ceb03c5db842b84"
        ],
        [
            "rewrite wxor_comm, wxor_wzero.",
            "VernacExtend",
            "97f27afc02a907c62156af35c43d43e8da0f051f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition wbring (sz : nat) : semi_ring_theory (wzero sz) (wones sz) (@wor sz) (@wand sz) (@eq _) := mk_srt _ _ _ _ _ (@wor_unit _) (@wor_comm _) (@wor_assoc _) (@wand_unit _) (@wand_kill _) (@wand_comm _) (@wand_assoc _) (@wand_or_distr _).",
            "VernacDefinition",
            "a2c28ebab5db4336def62736504c05669b9609e9"
        ],
        [
            "Ltac word_simpl := unfold sext, zext, wzero in *; simpl in *.",
            "VernacExtend",
            "88f3004323d64a8716c0aa8429c1403a4e266cec"
        ],
        [
            "Ltac word_eq := ring.",
            "VernacExtend",
            "366994f55b34051ee9aa3298a6f4b324226fd542"
        ],
        [
            "Ltac word_eq1 := match goal with | _ => ring | [ H : _ = _ |- _ ] => ring [H] end.",
            "VernacExtend",
            "e4d9eaadf011ae06e7ffd417b4b3fb8c2171a384"
        ],
        [
            "Theorem word_neq : forall sz (w1 w2 : word sz), w1 ^- w2 <> wzero sz -> w1 <> w2.",
            "VernacStartTheoremProof",
            "38d18bea23cd989e53431b0da5fb0d0147bbc737"
        ],
        [
            "intros; intro; subst.",
            "VernacExtend",
            "bb88b894a931be6b9c02a9f3f8052c3c917ad73f"
        ],
        [
            "unfold wminus in H.",
            "VernacExtend",
            "1ab886acfe129521871f9daf16024cbefbc7cbdf"
        ],
        [
            "rewrite wminus_inv in H.",
            "VernacExtend",
            "53535337410eebd3132a2f06371ebe70afda2ce5"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac word_neq := apply word_neq; let H := fresh \"H\" in intro H; simpl in H; ring_simplify in H; try discriminate.",
            "VernacExtend",
            "1bafa2771eb11c5dd53d61942872e6c95e221fb0"
        ],
        [
            "Ltac word_contra := match goal with | [ H : _ <> _ |- False ] => apply H; ring end.",
            "VernacExtend",
            "c5c4ea69f20634087bbb7cbb2e338e5e3356dd5c"
        ],
        [
            "Ltac word_contra1 := match goal with | [ H : _ <> _ |- False ] => apply H; match goal with | _ => ring | [ H' : _ = _ |- _ ] => ring [H'] end end.",
            "VernacExtend",
            "ed876e5f04a7cc045426e4861f1b8f678f93ce11"
        ],
        [
            "Lemma not_wlt_ge : forall sz (l r : word sz), ((l < r) -> False) -> (r <= l).",
            "VernacStartTheoremProof",
            "a9b8780c4a6c61e197e25a2caac6c1d7345048b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (wlt_dec l r); intros; try contradiction; auto.",
            "VernacExtend",
            "f6b04577ca3d1e83f6a391710ba69e7fc59453ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_wle_gt : forall sz (l r : word sz), ((l <= r) -> False) -> (r < l).",
            "VernacStartTheoremProof",
            "2bccb8f9fe9a5aaa6e7fc64042d5970b40fa1e5b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (wlt_dec r l); intros; try contradiction; auto.",
            "VernacExtend",
            "f4f9c57ada943b9f0950deafc78afc1d8f6ac45a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_le : forall sz (a b : word sz), a < b -> a <= b.",
            "VernacStartTheoremProof",
            "8a496233a72229af8666923db7ca641b3595e2fd"
        ],
        [
            "unfold wlt, N.lt.",
            "VernacExtend",
            "d85542bf066dc3053641170609efe08d394ce0f6"
        ],
        [
            "intros sz a b H H0.",
            "VernacExtend",
            "6410221b570e8958036824c96545212945ce8b63"
        ],
        [
            "rewrite N.compare_antisym in H0.",
            "VernacExtend",
            "5eb844b00dc30656d2c380ef625197bc63e65f5b"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_le : forall sz (a b : word sz), a = b -> a <= b.",
            "VernacStartTheoremProof",
            "56511b48ad80a55f27a049b75720afaeac723467"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "unfold wlt, N.lt.",
            "VernacExtend",
            "d85542bf066dc3053641170609efe08d394ce0f6"
        ],
        [
            "rewrite N.compare_refl.",
            "VernacExtend",
            "b043aa88736e73eaa1d7e16e1a785d554a475edd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_inj : forall sz (a b : word sz), wordToN a = wordToN b -> a = b.",
            "VernacStartTheoremProof",
            "15cedab00284a29fa4823c30792e1e0b3b2f8504"
        ],
        [
            "induction a; intro b0; rewrite (shatter_word b0); intuition.",
            "VernacExtend",
            "74de0e591bd36cf8468a173ffd1f4266a759c437"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct b; destruct (whd b0); intros.",
            "VernacExtend",
            "e42194a67214963cc9e54ace6be670fcf569cafe"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply IHa.",
            "VernacExtend",
            "ff07a44ba6b03024fc599c1524cd9014dcc0312e"
        ],
        [
            "eapply N.succ_inj in H.",
            "VernacExtend",
            "5b6b4472a4bfd647a25dd08afa3edd89320ddcb1"
        ],
        [
            "destruct (wordToN a); destruct (wordToN (wtl b0)); try congruence.",
            "VernacExtend",
            "c2e48522a4acb6556c95b9f52463df47dd99593d"
        ],
        [
            "destruct (wordToN (wtl b0)); destruct (wordToN a); inversion H.",
            "VernacExtend",
            "285ca11a350b491fd68d3c1e4c9d69fa10a56211"
        ],
        [
            "destruct (wordToN (wtl b0)); destruct (wordToN a); inversion H.",
            "VernacExtend",
            "285ca11a350b491fd68d3c1e4c9d69fa10a56211"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply IHa.",
            "VernacExtend",
            "ff07a44ba6b03024fc599c1524cd9014dcc0312e"
        ],
        [
            "destruct (wordToN a); destruct (wordToN (wtl b0)); try congruence.",
            "VernacExtend",
            "c2e48522a4acb6556c95b9f52463df47dd99593d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_inj : forall sz (a b : word sz), wordToNat a = wordToNat b -> a = b.",
            "VernacStartTheoremProof",
            "ad120bf47bbcb490e4bd882bc8595243f079912c"
        ],
        [
            "intros; apply wordToN_inj.",
            "VernacExtend",
            "ca08e8fe41d9710c477de2754dacf2aa76bac071"
        ],
        [
            "repeat rewrite wordToN_nat.",
            "VernacExtend",
            "626b77cc5ebf261e9a5062d6e0331d3275614af4"
        ],
        [
            "apply Nat2N.inj_iff; auto.",
            "VernacExtend",
            "baaeab4257f2ecd6c90d920f90f4e973150a23cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unique_inverse : forall sz (a b1 b2 : word sz), a ^+ b1 = wzero _ -> a ^+ b2 = wzero _ -> b1 = b2.",
            "VernacStartTheoremProof",
            "9a4cfbf61f93181a74d46220ad2f718b6aaa72b0"
        ],
        [
            "intros sz a b1 b2 H *.",
            "VernacExtend",
            "1edc44120254145187c6c4e6c70922c44df60926"
        ],
        [
            "transitivity (b1 ^+ wzero _).",
            "VernacExtend",
            "d3c76f77c07847aecbcb6dccfd8f45fb689a550e"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "rewrite wplus_unit.",
            "VernacExtend",
            "456c00b381d30e8e1bb3920c2d3ad65db8963760"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "transitivity (b1 ^+ (a ^+ b2)).",
            "VernacExtend",
            "abd08e781d1a433b2f10f9f2f8a3e3a70cdc09ca"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite wplus_assoc.",
            "VernacExtend",
            "63aed3418c40f5877e819fbf2cdc524389fd0436"
        ],
        [
            "rewrite (wplus_comm b1).",
            "VernacExtend",
            "bc5332480f654ff6d43641b2ec179fccdf22e7cd"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite wplus_unit.",
            "VernacExtend",
            "456c00b381d30e8e1bb3920c2d3ad65db8963760"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_0_eq : forall sz (a b : word sz), a ^- b = wzero _ -> a = b.",
            "VernacStartTheoremProof",
            "f9088130d3542b103610f388882b69ce1dd70d24"
        ],
        [
            "intros sz a b H.",
            "VernacExtend",
            "b32952d1251716004d110845125bcab55136c68e"
        ],
        [
            "destruct (weq (wneg b) (wneg a)) as [e|n].",
            "VernacExtend",
            "b6b303ae88cdb8df3618a4b8b29a8417b94d58e7"
        ],
        [
            "transitivity (a ^+ (^~ b ^+ b)).",
            "VernacExtend",
            "68131e276b5dc2396ed4a6f2bfd17d3153cb93f3"
        ],
        [
            "rewrite (wplus_comm (^~ b)).",
            "VernacExtend",
            "8981c5eda0befdc909545ece072a5feaa1853144"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "rewrite wplus_unit.",
            "VernacExtend",
            "456c00b381d30e8e1bb3920c2d3ad65db8963760"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite wplus_assoc.",
            "VernacExtend",
            "63aed3418c40f5877e819fbf2cdc524389fd0436"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_unit.",
            "VernacExtend",
            "456c00b381d30e8e1bb3920c2d3ad65db8963760"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold wminus in H.",
            "VernacExtend",
            "1ab886acfe129521871f9daf16024cbefbc7cbdf"
        ],
        [
            "generalize (unique_inverse a (wneg a) (^~ b)).",
            "VernacExtend",
            "1fe82fe76b082cb0c21571b5964d7b02071e8c76"
        ],
        [
            "intro H0.",
            "VernacExtend",
            "33135fa360f1c5b700715c0dfac0804c96d2fa77"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply n.",
            "VernacExtend",
            "ed7192228e57856197020582fd87949160a69557"
        ],
        [
            "symmetry; apply H0.",
            "VernacExtend",
            "a1b7e9db0d44a14fb0db391e5bb1565d3ca029e2"
        ],
        [
            "apply wminus_inv.",
            "VernacExtend",
            "241405d0972142f7bf23dcfba249372a4f214964"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_neq_lt : forall sz (a b : word sz), b <= a -> a <> b -> b < a.",
            "VernacStartTheoremProof",
            "d90a6a21d69937f6c54679ef3e1f8b807be9de94"
        ],
        [
            "intros sz a b H H0; destruct (wlt_dec b a) as [?|n]; auto.",
            "VernacExtend",
            "4fba63f881ca597480a86e48949594dfb405e3ac"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold wlt, N.lt in *.",
            "VernacExtend",
            "9cc4077fc04a7bf1b2171141cbad643e962838d3"
        ],
        [
            "eapply wordToN_inj.",
            "VernacExtend",
            "7a730e660ef6caa16004fa0148858c2d09d67544"
        ],
        [
            "eapply Ncompare_eq_correct.",
            "VernacExtend",
            "0de12ae85290a4fef79b236ff7f3b51f329f7f92"
        ],
        [
            "case_eq ((wordToN a ?= wordToN b)%N); auto; try congruence.",
            "VernacExtend",
            "a7b19faaa94bce303c132427a5b80d401a8310ac"
        ],
        [
            "intros H1.",
            "VernacExtend",
            "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
        ],
        [
            "rewrite N.compare_antisym in n.",
            "VernacExtend",
            "53cfef1b8ab5aba096791c67b2a56f5d07abd6e8"
        ],
        [
            "rewrite H1 in n.",
            "VernacExtend",
            "d7f78a6cd5da803cd29801b79d0bd1d3280b0aac"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve word_neq lt_le eq_le sub_0_eq le_neq_lt : worder.",
            "VernacHints",
            "effeefd9dca458955af726247dba4ae4c1cf0bc1"
        ],
        [
            "Ltac shatter_word x := match type of x with | word 0 => try rewrite (shatter_word_0 x) in * | word (S ?N) => let x' := fresh in let H := fresh in destruct (@shatter_word_S N x) as [ ? [ x' H ] ]; rewrite H in *; clear H; shatter_word x' end.",
            "VernacExtend",
            "501bc9207e911c42ac2489c27b2553a34ba89bcb"
        ],
        [
            "Lemma rewrite_weq : forall sz (a b : word sz) (pf : a = b), weq a b = left _ pf.",
            "VernacStartTheoremProof",
            "667c606129a0ed44e95cad942bc1cc9a10013e0d"
        ],
        [
            "intros sz a b *; destruct (weq a b); try solve [ elimtype False; auto ].",
            "VernacExtend",
            "1e1902bbbb68712780adc7a8da7618667a4e3f79"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply UIP_dec.",
            "VernacExtend",
            "649d9c9ae2aa9532e55ac3efeb9211e8afaf26d5"
        ],
        [
            "eapply weq.",
            "VernacExtend",
            "64d139cd0b892b11eb048f77543c31c87bf341b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_plus : forall sz n m, natToWord sz (n + m) = natToWord _ n ^+ natToWord _ m.",
            "VernacStartTheoremProof",
            "efa386a7269c63404b2673c91b69f60fa29f4271"
        ],
        [
            "destruct sz as [|sz]; intros n m; intuition.",
            "VernacExtend",
            "d5819b557d68b2f07bacc03b19c3a42ebb0ac3a2"
        ],
        [
            "rewrite wplus_alt.",
            "VernacExtend",
            "9fe1f9104e7019dccb279513e21891a45c7e62bd"
        ],
        [
            "unfold wplusN, wordBinN.",
            "VernacExtend",
            "4c1430197ff76152cf0e8c13ae14fd2a32ae9454"
        ],
        [
            "destruct (wordToNat_natToWord (S sz) n); intuition.",
            "VernacExtend",
            "8caec19c0c078334ec060d0dff5a35dcf4440cdd"
        ],
        [
            "destruct (wordToNat_natToWord (S sz) m); intuition.",
            "VernacExtend",
            "72ef25ac736fb3011fd567a9afc8773a9dbf867b"
        ],
        [
            "do 2 match goal with H : _ |- _ => rewrite H; clear H end.",
            "VernacExtend",
            "f67fe95a46d3409abbbb1cd19e90ac94b68c384d"
        ],
        [
            "match goal with | [ |- context[?n - ?x * pow2 (S ?sz) + (?m - ?x0 * pow2 (S ?sz))] ] => replace (n - x * pow2 (S sz) + (m - x0 * pow2 (S sz))) with (n + m - x * pow2 (S sz) - x0 * pow2 (S sz)) by omega end.",
            "VernacExtend",
            "7b23cdfd51e4470172a56ca860ad23c5b3e8c420"
        ],
        [
            "repeat rewrite drop_sub; auto; omega.",
            "VernacExtend",
            "2743250128faacdaff934a10184c106f26a55bb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_S : forall sz n, natToWord sz (S n) = natToWord _ 1 ^+ natToWord _ n.",
            "VernacStartTheoremProof",
            "16b940f36d9aa4bcd3d5b9d01bc214a252eb03fe"
        ],
        [
            "intros sz n; change (S n) with (1 + n); apply natToWord_plus.",
            "VernacExtend",
            "2670c9a07e08b43a42f25c0efa7941ffb0cdbe3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem natToWord_inj : forall sz n m, natToWord sz n = natToWord sz m -> (n < pow2 sz)%nat -> (m < pow2 sz)%nat -> n = m.",
            "VernacStartTheoremProof",
            "ab52aad78970582b8d57406930255bd64c4d4a86"
        ],
        [
            "intros sz n m H H0 H1.",
            "VernacExtend",
            "dcce613d2b87b82670209bc0120e7ef24f928a9f"
        ],
        [
            "apply (f_equal (@wordToNat _)) in H.",
            "VernacExtend",
            "1ad0baf838a5670b683b9a56f02da40a5cff8d5e"
        ],
        [
            "destruct (wordToNat_natToWord sz n) as [x H2].",
            "VernacExtend",
            "ec3e4ad018999aac30c38937548757dddf3947ca"
        ],
        [
            "destruct (wordToNat_natToWord sz m) as [x0 H3].",
            "VernacExtend",
            "8282ba0432452d6f05f7b18df81be6f55f397da8"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "match goal with | [ H : wordToNat ?x = wordToNat ?y, H' : wordToNat ?x = ?a, H'' : wordToNat ?y = ?b |- _ ] => let H0 := fresh in assert (H0 : a = b) by congruence; clear H H' H''; rename H0 into H end.",
            "VernacExtend",
            "ac7d1b1e0b68efa185bda15bac49f0a12396b3a6"
        ],
        [
            "assert (x = 0).",
            "VernacExtend",
            "54ce22268b19db903e0a07e52ae81a67c949b684"
        ],
        [
            "destruct x; auto.",
            "VernacExtend",
            "e693b97b98b28f6f305ce1b2e3d77ebaa690911c"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "generalize dependent (x * pow2 sz).",
            "VernacExtend",
            "67d13c334feb2f324209bd6a0a15d85ad952b85c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "assert (x0 = 0).",
            "VernacExtend",
            "186be3fc8723549aaecb70540145d4e2e63d56c2"
        ],
        [
            "destruct x0; auto.",
            "VernacExtend",
            "c415072357f269beb86f75085c32b450d3533053"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "generalize dependent (x0 * pow2 sz).",
            "VernacExtend",
            "369c7a1aab41a57d72c3a74a3279b290ce1a0d9f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "subst; simpl in *; omega.",
            "VernacExtend",
            "de85f670a8fae410909f208f9e2465de4e43ba2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_idempotent : forall sz n, (N.of_nat n < Npow2 sz)%N -> wordToNat (natToWord sz n) = n.",
            "VernacStartTheoremProof",
            "628a017a60559841f9669a7879ad458cd58a43da"
        ],
        [
            "intros sz n H.",
            "VernacExtend",
            "1d0a6fa7fb73b8edf037aad168255ac06dc0af60"
        ],
        [
            "destruct (wordToNat_natToWord sz n) as [x]; intuition.",
            "VernacExtend",
            "8a7c6499a3cb9a09710e4566ef9c66cec2b0ac9a"
        ],
        [
            "destruct x as [|x].",
            "VernacExtend",
            "40ce266278119398d8f73344d5c3093194c076c0"
        ],
        [
            "simpl in *; omega.",
            "VernacExtend",
            "2e505872d892cb5022bef5b246ceb26cdd84b133"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply Nlt_out in H.",
            "VernacExtend",
            "9bc0b4be958c1e2b580f5187547cb981d735d212"
        ],
        [
            "autorewrite with N in *.",
            "VernacExtend",
            "d277b2abbf9b0a5d41e533329e1f20e4c7039ece"
        ],
        [
            "rewrite Npow2_nat in *.",
            "VernacExtend",
            "830a9b4549b4462812725c505d92580a4edec34e"
        ],
        [
            "generalize dependent (x * pow2 sz).",
            "VernacExtend",
            "67d13c334feb2f324209bd6a0a15d85ad952b85c"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_cancel : forall sz (a b c : word sz), a ^+ c = b ^+ c -> a = b.",
            "VernacStartTheoremProof",
            "163114d4900315b45e568ca7b89f75aacd926f9a"
        ],
        [
            "intros sz a b c H.",
            "VernacExtend",
            "9da274ac83b5aeacf7f1f387a382c094515ae151"
        ],
        [
            "apply (f_equal (fun x => x ^+ ^~ c)) in H.",
            "VernacExtend",
            "c793751c4c28ad2f4394809831eb1b1956f5c863"
        ],
        [
            "repeat rewrite <- wplus_assoc in H.",
            "VernacExtend",
            "2b3268bc8a8936676a6a6c439aabb47f982d2e97"
        ],
        [
            "rewrite wminus_inv in H.",
            "VernacExtend",
            "53535337410eebd3132a2f06371ebe70afda2ce5"
        ],
        [
            "repeat rewrite (wplus_comm _ (wzero sz)) in H.",
            "VernacExtend",
            "e20442a8baa553d897ce3ac2567ffaaf34319bce"
        ],
        [
            "repeat rewrite wplus_unit in H.",
            "VernacExtend",
            "ef221915d4a5243bd46e69f279198a34f24f1891"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_plus_distr: forall {sz} (x y z: word sz), x ^- (y ^+ z) = x ^- y ^- z.",
            "VernacStartTheoremProof",
            "3605aeb59b3fc1ebe16afb0c8716430221caee3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wplus_cancel with (c:= y ^+ z).",
            "VernacExtend",
            "6d7a009d7de757b8a4e0f870f72d652df808cdbc"
        ],
        [
            "rewrite wminus_def, <-wplus_assoc.",
            "VernacExtend",
            "15160da0d158a247b4376964caabe1d0845db1ad"
        ],
        [
            "rewrite wplus_comm with (y:= y ^+ z), wminus_inv.",
            "VernacExtend",
            "c172d27b5c0b6d79c91d8b3b6ce7575a2b559c69"
        ],
        [
            "rewrite wplus_comm with (x:= x), wplus_unit.",
            "VernacExtend",
            "2b4a0ce0a05721515fa003cd038ca32a9b7baf2f"
        ],
        [
            "rewrite !wminus_def, <-wplus_assoc.",
            "VernacExtend",
            "28f6b366bd004304f4b797bfcc5ea57225988b83"
        ],
        [
            "rewrite wplus_assoc with (x:= ^~ z).",
            "VernacExtend",
            "019786ba34187cbf6397cc10784973047af2918b"
        ],
        [
            "rewrite wplus_comm with (x:= ^~ z).",
            "VernacExtend",
            "dd78348467daa3c7ab7405869b0058095c2eaef4"
        ],
        [
            "rewrite <-wplus_assoc with (x:= y).",
            "VernacExtend",
            "cf0a9e00b0109a707d6910d78e825a3716d6bf4a"
        ],
        [
            "rewrite wplus_comm with (x:= ^~ z), wminus_inv.",
            "VernacExtend",
            "c3902671d9e1e07ee2914e4795ee6a3928a9ebb4"
        ],
        [
            "rewrite wplus_comm with (x:= y), wplus_unit.",
            "VernacExtend",
            "c3d7e96096599da5411e3973db0b389282a7880b"
        ],
        [
            "rewrite <-wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite wplus_comm with (x:= ^~ y), wminus_inv.",
            "VernacExtend",
            "06b724b7dfb46c058555c12e2ba3bed3f7190db4"
        ],
        [
            "rewrite wplus_comm, wplus_unit.",
            "VernacExtend",
            "6fd34c4f9a8a346e2ac00268c42dce9a63169a66"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_wplus_undo: forall sz (a b: word sz), a ^- b ^+ b = a.",
            "VernacStartTheoremProof",
            "48cca226fc875d8f236a1bf2092e5103cf283392"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wminus_def.",
            "VernacExtend",
            "64ef6058e93b8fe0347972aae7557c0b702029aa"
        ],
        [
            "rewrite <- wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite (wplus_comm (^~ b)).",
            "VernacExtend",
            "8981c5eda0befdc909545ece072a5feaa1853144"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "rewrite wplus_unit.",
            "VernacExtend",
            "456c00b381d30e8e1bb3920c2d3ad65db8963760"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_zero: forall {sz} (w: word sz), ^~ w = (natToWord sz 0) -> w = natToWord sz 0.",
            "VernacStartTheoremProof",
            "57b6810f7136a1361f69424060177deb8d556f21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wplus_cancel with (c:= ^~ w).",
            "VernacExtend",
            "f1dbb9823a2afbe5eec16a627870372e7a085741"
        ],
        [
            "rewrite wminus_inv, wplus_unit; auto.",
            "VernacExtend",
            "ab65f455f43f875005bec1bae9e78929df83f72b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_idempotent: forall {sz} (w: word sz), ^~ (^~ w) = w.",
            "VernacStartTheoremProof",
            "643433c9e346936ae60d7cc9dc98d8377e6bf0c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sub_0_eq.",
            "VernacExtend",
            "bc6031e71b20c7e7c7943cdd602d2b29f77edaa6"
        ],
        [
            "rewrite wminus_def.",
            "VernacExtend",
            "64ef6058e93b8fe0347972aae7557c0b702029aa"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "apply wminus_inv.",
            "VernacExtend",
            "241405d0972142f7bf23dcfba249372a4f214964"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_zero': forall sz, wneg (natToWord sz 0) = natToWord sz 0.",
            "VernacStartTheoremProof",
            "34c555723e6cb064a43b1d02688bf564b4ddac8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wneg_zero.",
            "VernacExtend",
            "a1478cf8b3efe6c0dd3c713b2476bbac71f174c5"
        ],
        [
            "apply wneg_idempotent.",
            "VernacExtend",
            "226d87019339cbb07f47ca7c4f3b0e97db1ce243"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_one_neq: forall {sz} (w: word (S sz)), w ^+ (natToWord (S sz) 1) <> w.",
            "VernacStartTheoremProof",
            "9ee4fe2487c4112b3f8adf08b74435b7d4cabe2b"
        ],
        [
            "intros; intro Hx.",
            "VernacExtend",
            "6b318a051acd70dfeec02bfd22d4c639911c9814"
        ],
        [
            "rewrite wplus_comm in Hx.",
            "VernacExtend",
            "366f82e4417bbf4eb3ff92e250564da2ea54b871"
        ],
        [
            "assert ((natToWord (S sz) 1) ^+ w ^- w = w ^- w) by (rewrite Hx; reflexivity).",
            "VernacExtend",
            "4600563b15335d29d8cdaa5dbfd9d3922b60dd28"
        ],
        [
            "clear Hx.",
            "VernacExtend",
            "314f2dd08c56e12784d701709c171b860f652dc1"
        ],
        [
            "do 2 rewrite wminus_def in H.",
            "VernacExtend",
            "d135b1978756dd0df46dbd0f27f920936f0d10c2"
        ],
        [
            "rewrite <-wplus_assoc in H.",
            "VernacExtend",
            "59c5f7a1d709342fe291f9e785eda0b31332e999"
        ],
        [
            "rewrite wminus_inv in H.",
            "VernacExtend",
            "53535337410eebd3132a2f06371ebe70afda2ce5"
        ],
        [
            "rewrite wplus_comm, wplus_unit in H.",
            "VernacExtend",
            "cd15a6ad763c813aa58644b3a3cbae027378969b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_one_pow2_minus_one: forall {sz}, wordToNat (^~ (natToWord sz 1)) = pow2 sz - 1.",
            "VernacStartTheoremProof",
            "f6b081085d9245c854f59ba35f391f73b2788fc7"
        ],
        [
            "destruct sz; auto.",
            "VernacExtend",
            "bd607d653ffeb13048d70722aef47b5473b32198"
        ],
        [
            "unfold wneg; intros.",
            "VernacExtend",
            "a34976f5b901ec32494372ac0b8676bd0840c605"
        ],
        [
            "rewrite wordToN_nat, roundTrip_1.",
            "VernacExtend",
            "943e93cbbb63791b7170899ad9124de935c34ed4"
        ],
        [
            "simpl BinNat.N.of_nat.",
            "VernacExtend",
            "63f01aa8deea37d21348abe76f6f823cc65d7f93"
        ],
        [
            "rewrite NToWord_nat, Nnat.N2Nat.inj_sub, Npow2_nat.",
            "VernacExtend",
            "7f44e6de25984d5680137cf6337fc0b62408d8aa"
        ],
        [
            "apply wordToNat_natToWord_2.",
            "VernacExtend",
            "cf960e331fe434f22110eb2c216c16194e942718"
        ],
        [
            "pose (pow2_zero (S sz)).",
            "VernacExtend",
            "cfccaa860f5695ef501f89cd84c6d5b6f6570962"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wones_pow2_minus_one: forall {sz}, wordToNat (wones sz) = pow2 sz - 1.",
            "VernacStartTheoremProof",
            "d6c7a3bfca110ed640aa3b84b576bc87c1276bde"
        ],
        [
            "induction sz; simpl; auto.",
            "VernacExtend",
            "3c5ff83bd018a1bdf50844a8045b7bb97567268f"
        ],
        [
            "rewrite IHsz; pose (pow2_zero sz).",
            "VernacExtend",
            "b890e9b05cd4b4f2ec0d9c5a322768817299ebac"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow2_minus_one_wones: forall {sz} (w: word sz), wordToNat w = pow2 sz - 1 -> w = wones sz.",
            "VernacStartTheoremProof",
            "ef0adad90f0b7da30fd4e1a2be851af7cc9fb33e"
        ],
        [
            "intros; rewrite <-wones_pow2_minus_one in H.",
            "VernacExtend",
            "e40ad40d0b9cae61fa095b64be6939de2f2ac025"
        ],
        [
            "apply wordToNat_inj; auto.",
            "VernacExtend",
            "4dff691f1e8f89d959122102cb3a14c03067913d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wones_natToWord: forall sz, wones sz = $ (pow2 sz - 1).",
            "VernacStartTheoremProof",
            "f1644168feea86e96b1902ef60fc09dc14366c41"
        ],
        [
            "induction sz.",
            "VernacExtend",
            "f0dd08ea79213d276af44d6a53e7f263ac45a85a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold wones.",
            "VernacExtend",
            "93da55cab520c3d48d795155675659cd5368dde3"
        ],
        [
            "fold wones.",
            "VernacExtend",
            "7d4154b95e860e35590760891ee0a8fd693178fd"
        ],
        [
            "rewrite IHsz.",
            "VernacExtend",
            "0e7c5794acb2a369001382a34376ab478b933f3b"
        ],
        [
            "unfold natToWord at 2.",
            "VernacExtend",
            "79dbad4be28a06ee0616167d0815d383777425cf"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite mod2sub.",
            "VernacExtend",
            "861860d58c5e0bde6ff21a59f77cf97a27393184"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite mod2_pow2_twice.",
            "VernacExtend",
            "70eecf0d2941bcb68f67afeda9d285828b35d418"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (zero_lt_pow2 (S sz)).",
            "VernacExtend",
            "8d7a96ea110baced66451942f5753a89547d51af"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold pow2 at 2.",
            "VernacExtend",
            "094863b2a618787e2975a57e3a1a7d1092d5b3eb"
        ],
        [
            "fold pow2.",
            "VernacExtend",
            "3d9edde2a7643697a0e2e03bafa1afe001049eb8"
        ],
        [
            "rewrite <- (div2_S_double (pow2 sz - 1)).",
            "VernacExtend",
            "23df72b0f1c5da8a38b776661e7d613bda808b90"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "pose proof (zero_lt_pow2 sz).",
            "VernacExtend",
            "396ae7ca3d9bce18175c967280dd2d544ee8e976"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wones_wneg_one: forall {sz}, wones sz = ^~ (natToWord sz 1).",
            "VernacStartTheoremProof",
            "f79671b2ef4f4539abdf52aeb84ed213f441074f"
        ],
        [
            "intros; apply wordToNat_inj.",
            "VernacExtend",
            "4c2dd34202139df48911d6659080537a6e360949"
        ],
        [
            "rewrite wneg_one_pow2_minus_one.",
            "VernacExtend",
            "dd1c546ca3a7ad3cc66f3aefb22c20ba2a29da2c"
        ],
        [
            "rewrite wones_pow2_minus_one.",
            "VernacExtend",
            "7f2d7a4a7429310a6fc575b57d4f5f4d63197882"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_pred: forall {sz} (w: word sz), w <> wzero sz -> pred (wordToNat w) = wordToNat (w ^- (natToWord sz 1)).",
            "VernacStartTheoremProof",
            "2bf65720773402843ec86bf433bba651a9d5b4d1"
        ],
        [
            "intros; remember (wordToNat w) as wn; destruct wn; simpl in *.",
            "VernacExtend",
            "105be4c89aa6798c3111582e9bf8c2fff923c3c1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "rewrite roundTrip_0; auto.",
            "VernacExtend",
            "bb8a23542e356dceec156ba02149ad653766ed45"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply natToWord_inj with (sz:= sz).",
            "VernacExtend",
            "1e198ee31f38c0dbfe81812649b004a1b1a67172"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite natToWord_wordToNat.",
            "VernacExtend",
            "aaa0e6520fb9e253ce2e9e3acc4f387b9be39db6"
        ],
        [
            "apply wplus_cancel with (c:= (natToWord sz 1)).",
            "VernacExtend",
            "6c4c9ae5a5896dadce5ac4bfec180204f5208e74"
        ],
        [
            "rewrite wminus_def, <-wplus_assoc.",
            "VernacExtend",
            "15160da0d158a247b4376964caabe1d0845db1ad"
        ],
        [
            "rewrite wplus_comm with (x:= ^~ (natToWord sz 1)).",
            "VernacExtend",
            "6b17d89b7a5435f6d319480c0ba66d7e0cee4c3c"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_comm with (x:= w).",
            "VernacExtend",
            "9fab9cde5a079b60901f1e5c04457d8a80133fd7"
        ],
        [
            "rewrite wplus_unit.",
            "VernacExtend",
            "456c00b381d30e8e1bb3920c2d3ad65db8963760"
        ],
        [
            "rewrite wplus_comm, <-natToWord_S.",
            "VernacExtend",
            "dd6b85bea3c63d48f773be37f55ab6995ea7c83e"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "rewrite wordToNat_natToWord_2; auto.",
            "VernacExtend",
            "871a53d10139c0e0123eeeb55a817cd324c83fd0"
        ],
        [
            "rewrite Heqwn.",
            "VernacExtend",
            "75a3dc5841afe1e4a6a842b3b67da5b522387f4f"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (wordToNat_bound w); omega.",
            "VernacExtend",
            "bfd245fc07481a3398602b297e9fb658065f24dd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_mult : forall sz n m, natToWord sz (n * m) = natToWord _ n ^* natToWord _ m.",
            "VernacStartTheoremProof",
            "83816e7e3ffc3432c0d8a633594133793cfab476"
        ],
        [
            "destruct sz; intuition.",
            "VernacExtend",
            "8eca65b19a74eb587d4232ca316d67f995f9bc17"
        ],
        [
            "rewrite wmult_alt.",
            "VernacExtend",
            "2d70d5d5e837dcbc5599440f63f2339ae84000e1"
        ],
        [
            "unfold wmultN, wordBinN.",
            "VernacExtend",
            "704661b5e7570878adaa60d4a3241683842aa7e7"
        ],
        [
            "destruct (wordToNat_natToWord (S sz) n); intuition.",
            "VernacExtend",
            "8caec19c0c078334ec060d0dff5a35dcf4440cdd"
        ],
        [
            "destruct (wordToNat_natToWord (S sz) m); intuition.",
            "VernacExtend",
            "72ef25ac736fb3011fd567a9afc8773a9dbf867b"
        ],
        [
            "rewrite H0; rewrite H2; clear H0 H2.",
            "VernacExtend",
            "3bb6a57227e0799ec4afaed2989d4a9d1305b70d"
        ],
        [
            "replace ((n - x * pow2 (S sz)) * (m - x0 * pow2 (S sz))) with ((n - x * pow2 (S sz)) * m - (n - x * pow2 (S sz)) * (x0 * pow2 (S sz))) by (rewrite Nat.mul_sub_distr_l; auto).",
            "VernacExtend",
            "bbe98780ecef6e550726128e9546dc11f4165c52"
        ],
        [
            "rewrite mult_assoc; rewrite drop_sub.",
            "VernacExtend",
            "ed665a6817f86d69411771653ab92df836de2f78"
        ],
        [
            "repeat rewrite mult_comm with (m:=m).",
            "VernacExtend",
            "1a8021853a66231bd13847e28a429f00a76ec574"
        ],
        [
            "replace (m * (n - x * pow2 (S sz))) with (m * n - m * (x * pow2 (S sz))) by (rewrite Nat.mul_sub_distr_l; auto).",
            "VernacExtend",
            "a8b3de82c33754ba4b89f7a39dae9373510d93fc"
        ],
        [
            "rewrite mult_assoc; rewrite drop_sub.",
            "VernacExtend",
            "ed665a6817f86d69411771653ab92df836de2f78"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- mult_assoc; apply Nat.mul_le_mono_l; auto.",
            "VernacExtend",
            "7b2d0f77b398a3ff1fade15430150287aa6088e7"
        ],
        [
            "rewrite <- mult_assoc; apply Nat.mul_le_mono_l; auto.",
            "VernacExtend",
            "7b2d0f77b398a3ff1fade15430150287aa6088e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlt_lt: forall sz (a b : word sz), a < b -> (wordToNat a < wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "45153b4e74a1b607a6c2b828ae12a9e554064728"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlt in H.",
            "VernacExtend",
            "7d5a67b17938fd641d929fa423ad38c7e6b84bb2"
        ],
        [
            "repeat rewrite wordToN_nat in *.",
            "VernacExtend",
            "85bf3a02c416415ba10de396529e91a53976c4ba"
        ],
        [
            "apply Nlt_out in H.",
            "VernacExtend",
            "9bc0b4be958c1e2b580f5187547cb981d735d212"
        ],
        [
            "repeat rewrite Nat2N.id in *.",
            "VernacExtend",
            "021676f52f69df1d30d93c24db3e5e65f2944627"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wle_le: forall sz (a b : word sz), (a <= b)%word -> (wordToNat a <= wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "c48c932e8f1b0b244e7913fc553818caca77707d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlt in H.",
            "VernacExtend",
            "7d5a67b17938fd641d929fa423ad38c7e6b84bb2"
        ],
        [
            "repeat rewrite wordToN_nat in *.",
            "VernacExtend",
            "85bf3a02c416415ba10de396529e91a53976c4ba"
        ],
        [
            "apply Nge_out in H.",
            "VernacExtend",
            "0d52353e66a6729554e5cbbc81c67aed21c0f84f"
        ],
        [
            "repeat rewrite Nat2N.id in *.",
            "VernacExtend",
            "021676f52f69df1d30d93c24db3e5e65f2944627"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlt_lt': forall sz a b, (a < pow2 sz)%nat -> natToWord sz a < b -> (wordToNat (natToWord sz a) < wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "44cd8231484bcd95edf516da18b217de2f64b76e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wlt_lt.",
            "VernacExtend",
            "7220994bfebe053b045266072346b763ea04ca2f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_word_lt_nat : forall (sz:nat) (n:word sz) (m:nat), (n < (natToWord sz m))%word -> (wordToNat n < m)%nat.",
            "VernacStartTheoremProof",
            "ffed57fea00407ca1a75cd1ddaa2961893b349af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wlt_lt in H.",
            "VernacExtend",
            "eb25d699e131c5a049ddc78b1a43c7040abfd346"
        ],
        [
            "destruct (wordToNat_natToWord' sz m).",
            "VernacExtend",
            "25b03423da42685efb67da244d319ac68b6ca030"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply lt_plus_trans with (p := x * pow2 sz).",
            "VernacExtend",
            "249d8e02f6271bcc76b60487b626f783885d99f0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_word_le_nat : forall (sz:nat) (n:word sz) (m:nat), (n <= (natToWord sz m))%word -> (wordToNat n <= m)%nat.",
            "VernacStartTheoremProof",
            "864c0f23cec0615ab0d0c309ccd93e320d3c1d5d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wle_le in H.",
            "VernacExtend",
            "1763fac2ac50cd2d67b8068e90cee5d368237a90"
        ],
        [
            "destruct (wordToNat_natToWord' sz m).",
            "VernacExtend",
            "25b03423da42685efb67da244d319ac68b6ca030"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply le_plus_trans with (p := x * pow2 sz).",
            "VernacExtend",
            "2d97374c46a024a2cc7394be5982b7d283f7abc3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_word_le_nat : forall (sz:nat) (n:word sz) (m:nat), (n < (natToWord sz m))%word -> (wordToNat n <= m)%nat.",
            "VernacStartTheoremProof",
            "31f611cf7f7ee38c9e8cc05d737c37333796da00"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_word_lt_nat in H.",
            "VernacExtend",
            "fa18025fb3169e15736ded60ee86803879b98bcb"
        ],
        [
            "apply Nat.lt_le_incl.",
            "VernacExtend",
            "b396323bb8ea38a4010bad6f73434c8918e15ef5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_word_le_nat.",
            "VernacHints",
            "994676bb6fbf881344b5b7d1667a3941ef3f57f4"
        ],
        [
            "Lemma wordToNat_natToWord_idempotent' : forall sz n, (n < pow2 sz)%nat -> wordToNat (natToWord sz n) = n.",
            "VernacStartTheoremProof",
            "80d6876be1e21862ec81c5940f8a60f9904d4ed1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (wordToNat_natToWord sz n); intuition.",
            "VernacExtend",
            "9ad1f712f49764412f5643bf21ecb69e9dda388e"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "simpl in *; omega.",
            "VernacExtend",
            "2e505872d892cb5022bef5b246ceb26cdd84b133"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "generalize dependent (x * pow2 sz).",
            "VernacExtend",
            "67d13c334feb2f324209bd6a0a15d85ad952b85c"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_word_le_nat': forall (sz:nat) n m, (n < pow2 sz)%nat -> (natToWord sz n <= m)%word -> (n <= wordToNat m)%nat.",
            "VernacStartTheoremProof",
            "dba3318fca69bbea2b7c84236fdbd4727c0d25cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wle_le in H0.",
            "VernacExtend",
            "159c4d4b10f46e3b8fc5f4ac0261942bcc6c6c2c"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' in H0; auto.",
            "VernacExtend",
            "a1ef5c0211b4a862c11ff740b0b4afef8a61c945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_bound : forall sz n (bound : word sz), (n <= wordToNat bound)%nat -> wordToNat (natToWord sz n) = n.",
            "VernacStartTheoremProof",
            "f8bc1b787f6351c33f67f4d25c09ae39a49b4840"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToNat_natToWord_idempotent'.",
            "VernacExtend",
            "bb788bb51f277d6c6ad28976b1712cac128223be"
        ],
        [
            "eapply le_lt_trans; eauto.",
            "VernacExtend",
            "4e0fbe353635a53315229c43ec48f249789188c8"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_le : forall sz n, (wordToNat (natToWord sz n) <= n)%nat.",
            "VernacStartTheoremProof",
            "edba092077595df38d9abba1584dea1d5cca23be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (lt_dec n (pow2 sz)); intros.",
            "VernacExtend",
            "5ba793d7c949d0f61eb46e8bd933a61e758bae2d"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; auto.",
            "VernacExtend",
            "7021426b5c52fd17e286edce6f583953565113a4"
        ],
        [
            "eapply le_trans.",
            "VernacExtend",
            "fb859396e58c41e60ce972d076db09f2f51f5b44"
        ],
        [
            "apply Nat.lt_le_incl.",
            "VernacExtend",
            "b396323bb8ea38a4010bad6f73434c8918e15ef5"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_lt : forall sz n b, (n < b -> wordToNat (natToWord sz n) < b)%nat.",
            "VernacStartTheoremProof",
            "33332999de5d34ae26ddcbb362def5bd7bf09a15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply le_lt_trans.",
            "VernacExtend",
            "60bcd6ce718d6396ed7e9217398f9f6dc800e8b4"
        ],
        [
            "apply wordToNat_natToWord_le.",
            "VernacExtend",
            "478db72990441fa7e285b2915d884ab1d6f46b18"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_eq_natToWord : forall sz (w : word sz) n, wordToNat w = n -> w = natToWord sz n.",
            "VernacStartTheoremProof",
            "da25c60de7740482468af841fbed8a4099c217ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite natToWord_wordToNat.",
            "VernacExtend",
            "aaa0e6520fb9e253ce2e9e3acc4f387b9be39db6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlt_lt_bound: forall sz (a : word sz) (b bound : nat), (a < natToWord sz b)%word -> (b <= wordToNat (natToWord sz bound))%nat -> (wordToNat a < b)%nat.",
            "VernacStartTheoremProof",
            "391c50b5f7c827320b6a9c91724f81c5fe7bef0c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wlt_lt in H.",
            "VernacExtend",
            "eb25d699e131c5a049ddc78b1a43c7040abfd346"
        ],
        [
            "erewrite wordToNat_natToWord_bound in H; eauto.",
            "VernacExtend",
            "3b0978b9aad37f08de139513029a9c5494527fa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natplus1_wordplus1_eq: forall sz (a bound : word sz), (0 < sz)%nat -> (a < bound)%word -> (wordToNat a) + 1 = wordToNat (a ^+ (natToWord sz 1)).",
            "VernacStartTheoremProof",
            "301f0de23f3835944ce8b7567a767337d74f94c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wplus_alt.",
            "VernacExtend",
            "9fe1f9104e7019dccb279513e21891a45c7e62bd"
        ],
        [
            "unfold wplusN, wordBinN.",
            "VernacExtend",
            "4c1430197ff76152cf0e8c13ae14fd2a32ae9454"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert ((1 < pow2 sz)%nat).",
            "VernacExtend",
            "a9017171f0923a43ef3c0c5a32101a61bb938e6e"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "apply one_lt_pow2.",
            "VernacExtend",
            "4a5396935f18a373cf150a4b0368bdb4cfcef9bf"
        ],
        [
            "erewrite wordToNat_natToWord_bound.",
            "VernacExtend",
            "4c870384c04d2fa4a0843c868f6282e55430ec68"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' by auto.",
            "VernacExtend",
            "682733277833523767e9a51b9ef5423caa94f106"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply wlt_lt in H0.",
            "VernacExtend",
            "1c4045f8263b2f1d3dc76440ed2bddc0027fff13"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' by auto.",
            "VernacExtend",
            "682733277833523767e9a51b9ef5423caa94f106"
        ],
        [
            "instantiate (1:=bound).",
            "VernacExtend",
            "9c803261d23a1bd24bb5bd12b1950c77079c3134"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_wlt: forall sz (n : word sz) m, (wordToNat n < wordToNat m)%nat -> n < m.",
            "VernacStartTheoremProof",
            "b9c70a4f0285a617aef7edb804a7a1593d597cf2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlt.",
            "VernacExtend",
            "dfcf4de18e6a6d6794b3aed5787c9664c88a3826"
        ],
        [
            "repeat rewrite wordToN_nat.",
            "VernacExtend",
            "626b77cc5ebf261e9a5062d6e0331d3275614af4"
        ],
        [
            "apply Nlt_in.",
            "VernacExtend",
            "8b9ae7df6e078b1e67815929f5d406d636411e23"
        ],
        [
            "repeat rewrite Nat2N.id.",
            "VernacExtend",
            "890e04acefbcc7b3ba736d626291947f75fb63ee"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_wle: forall sz (n : word sz) m, (wordToNat n <= wordToNat m)%nat -> n <= m.",
            "VernacStartTheoremProof",
            "2ed9864a9bd58d66d3c4ea134bbd1591acbb2dd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlt.",
            "VernacExtend",
            "dfcf4de18e6a6d6794b3aed5787c9664c88a3826"
        ],
        [
            "repeat rewrite wordToN_nat.",
            "VernacExtend",
            "626b77cc5ebf261e9a5062d6e0331d3275614af4"
        ],
        [
            "apply N.le_ngt.",
            "VernacExtend",
            "da398065e081cc6af34d1f813825a01628088772"
        ],
        [
            "apply N.ge_le.",
            "VernacExtend",
            "cdba355fbd8a2d3e59601ed933138985ce437849"
        ],
        [
            "apply Nge_in.",
            "VernacExtend",
            "8622a807eccc8a645330f05acac94bf7bbdd3db7"
        ],
        [
            "repeat rewrite Nat2N.id.",
            "VernacExtend",
            "890e04acefbcc7b3ba736d626291947f75fb63ee"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlt_wle_incl : forall sz (a b : word sz), (a < b)%word -> (a <= b)%word.",
            "VernacStartTheoremProof",
            "74999145f34ea41219fc49f4ef1432a6d6d5eeb5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wlt_lt in H.",
            "VernacExtend",
            "eb25d699e131c5a049ddc78b1a43c7040abfd346"
        ],
        [
            "apply le_wle.",
            "VernacExtend",
            "248758de3fbfd6f99a1d377af96bf9c1a8f98a96"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_Alt2: forall sz x y, y <= x -> @wminusN sz x y = wordBinN minus x y.",
            "VernacStartTheoremProof",
            "a24f084f25bc01c7ea345f5b36ae94abe615f3c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wminusN, wplusN, wnegN, wordBinN.",
            "VernacExtend",
            "50ee56fc06fd4394ad61927bc201bf79e9437576"
        ],
        [
            "destruct (weq y (natToWord sz 0)); subst.",
            "VernacExtend",
            "8c367a3ce47c2f088b6066724a3da9a8ea41f6c5"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "repeat rewrite <- minus_n_O.",
            "VernacExtend",
            "6619d86ebb49ad545da3b8e8ce90de793b9e676f"
        ],
        [
            "rewrite <- drop_sub with (k:=1) (n:=pow2 sz); try omega.",
            "VernacExtend",
            "29b5d80fbdb5c2212800d7e5aa01403aa47a4777"
        ],
        [
            "replace (pow2 sz - 1 * pow2 sz) with (0) by omega.",
            "VernacExtend",
            "f98a513fb9b97c743cf8217184b61741819cf8e8"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "rewrite <- plus_n_O.",
            "VernacExtend",
            "82e76fe4a7447040940c37f8f7935de7fb153db6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' with (n:=pow2 sz - wordToNat y).",
            "VernacExtend",
            "6c86c7c453a3e04732096539e7b32dd376f894b2"
        ],
        [
            "rewrite <- drop_sub with (k:=1).",
            "VernacExtend",
            "85b7de624597a1e7be0a474d70931b6d8254b827"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- plus_n_O.",
            "VernacExtend",
            "82e76fe4a7447040940c37f8f7935de7fb153db6"
        ],
        [
            "replace (wordToNat x + (pow2 sz - wordToNat y) - pow2 sz) with (wordToNat x - wordToNat y).",
            "VernacExtend",
            "5da82dd208fdcd6b178af265cd5dd94b47f32c7d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite Nat.add_sub_assoc.",
            "VernacExtend",
            "73a2527ad0fbcebea3251eb6c00ead6c791d0d8d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "remember (wordToNat_bound y); omega.",
            "VernacExtend",
            "8bff3404c4b3cbb89fa9cb87659d5c2e1ab90d8d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- plus_n_O.",
            "VernacExtend",
            "82e76fe4a7447040940c37f8f7935de7fb153db6"
        ],
        [
            "rewrite Nat.add_sub_assoc; [| remember (wordToNat_bound y); omega ].",
            "VernacExtend",
            "31be7d70802adf804af98ddd00e66dd520732cbb"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "rewrite <- Nat.add_sub_assoc.",
            "VernacExtend",
            "c62f75e663ede8a5328ac7127b0c3c521e7b1d88"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Nat.nlt_ge.",
            "VernacExtend",
            "c008901b7dc2bffa6c2d8181d0932990b0f0a5f3"
        ],
        [
            "unfold not in *; intros.",
            "VernacExtend",
            "85e2e313807dfbe3840e1372ee46318228903893"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply lt_wlt; auto.",
            "VernacExtend",
            "e2f327eeb4a035eaa914ca6a331613582e91d8e1"
        ],
        [
            "apply Nat.sub_lt.",
            "VernacExtend",
            "0b240643e3750275fa1d0fc160dc9620b5e62495"
        ],
        [
            "remember (wordToNat_bound y); omega.",
            "VernacExtend",
            "8bff3404c4b3cbb89fa9cb87659d5c2e1ab90d8d"
        ],
        [
            "assert (wordToNat y <> 0); try omega.",
            "VernacExtend",
            "425038264dfc6a7f12f4bea24e0286dab3ce7f1a"
        ],
        [
            "assert (wordToN y <> wordToN (natToWord sz 0)).",
            "VernacExtend",
            "ed147033033c1281032f4ee290ea8355faf45681"
        ],
        [
            "unfold not in *.",
            "VernacExtend",
            "e992d731987459002424cdefea553f6182b3a61b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply n.",
            "VernacExtend",
            "ed7192228e57856197020582fd87949160a69557"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat rewrite wordToN_nat in H0.",
            "VernacExtend",
            "3ed0c7dc0b64d238e7978b07bfb8b682df7f61fb"
        ],
        [
            "unfold not in *.",
            "VernacExtend",
            "e992d731987459002424cdefea553f6182b3a61b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply N2Nat.inj.",
            "VernacExtend",
            "2423f651761c208bffa88c3ae2702e3349593bea"
        ],
        [
            "repeat rewrite Nat2N.id.",
            "VernacExtend",
            "890e04acefbcc7b3ba736d626291947f75fb63ee"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wlt_wf: forall sz, well_founded (@wlt sz).",
            "VernacStartTheoremProof",
            "160308eabfcfd9e5b5c47fa7b48eb29dbf2cf694"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply well_founded_lt_compat with (f:=@wordToNat sz).",
            "VernacExtend",
            "565dc901ff21e75c5956b9207fb7b07125f96fb0"
        ],
        [
            "apply wlt_lt.",
            "VernacExtend",
            "7220994bfebe053b045266072346b763ea04ca2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac wlt_ind := match goal with | [ |- forall (n: word ?len), ?P ] => refine (well_founded_ind (@wlt_wf len) (fun n => P) _) end.",
            "VernacExtend",
            "b39019d2189809cfc019197a066952895244f8b4"
        ],
        [
            "Theorem wordToNat_plusone: forall sz w w', w < w' -> wordToNat (w ^+ natToWord sz 1) = S (wordToNat w).",
            "VernacStartTheoremProof",
            "d994dadc34838802cac1a1800c207dbcd8a2b24f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "rewrite word0 with (w:=w') in H.",
            "VernacExtend",
            "0a7ed93c07acd2c74d3a15346d35571be8c1beae"
        ],
        [
            "rewrite word0 with (w:=w) in H.",
            "VernacExtend",
            "d493b10fbc71705bad7b21115ca63c1061229e43"
        ],
        [
            "apply wlt_lt in H.",
            "VernacExtend",
            "eb25d699e131c5a049ddc78b1a43c7040abfd346"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite wplus_alt.",
            "VernacExtend",
            "9fe1f9104e7019dccb279513e21891a45c7e62bd"
        ],
        [
            "unfold wplusN, wordBinN.",
            "VernacExtend",
            "4c1430197ff76152cf0e8c13ae14fd2a32ae9454"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'.",
            "VernacExtend",
            "86b283e15eea7025d62b98862b2d3f7c6de916d7"
        ],
        [
            "rewrite roundTrip_1.",
            "VernacExtend",
            "63a56ca1beaee854c748ed5f2bb1ce44fb38a504"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "eapply Nat.le_lt_trans; [| apply wordToNat_bound ].",
            "VernacExtend",
            "4d1171dae93adfa0efee55f521af4750d335dcff"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; [| erewrite <- roundTrip_1 at 1; apply wordToNat_bound ].",
            "VernacExtend",
            "852fecc8c268c1f3ea997e9961b219cd0e80439c"
        ],
        [
            "apply wlt_lt in H.",
            "VernacExtend",
            "eb25d699e131c5a049ddc78b1a43c7040abfd346"
        ],
        [
            "instantiate (1:=w').",
            "VernacExtend",
            "250abd5f5e8a1d835b906cfe342c47a838ccd2b0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wordToNat_minus_one': forall sz n, n <> natToWord sz 0 -> S (wordToNat (n ^- natToWord sz 1)) = wordToNat n.",
            "VernacStartTheoremProof",
            "238f65f487583619590a1471dd911508c48c159e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "rewrite word0 with (w:=n) in H.",
            "VernacExtend",
            "d1ad073f2f8618f9f93cb95e516842c9f95850ff"
        ],
        [
            "rewrite word0 with (w:=natToWord 0 0) in H.",
            "VernacExtend",
            "0d0fcbb586220ebab95a9ade9cda110ff9cd70bc"
        ],
        [
            "exfalso; auto.",
            "VernacExtend",
            "b98513ca75f1ac3b571db016be59d6856c455305"
        ],
        [
            "destruct (weq n (natToWord (S sz) 0)); intuition.",
            "VernacExtend",
            "9d8adacb7c27eeb3e311db77140d516fd968ff67"
        ],
        [
            "rewrite wminus_Alt.",
            "VernacExtend",
            "09e0d096079192ab7d82fa071115736a4f313666"
        ],
        [
            "rewrite wminus_Alt2.",
            "VernacExtend",
            "fce7ac4f1fc5316b3e9d3e18ab1064d8675e226e"
        ],
        [
            "unfold wordBinN.",
            "VernacExtend",
            "259bbf7aeaef361391fd511f478d4eca2384f62d"
        ],
        [
            "rewrite roundTrip_1.",
            "VernacExtend",
            "63a56ca1beaee854c748ed5f2bb1ce44fb38a504"
        ],
        [
            "erewrite wordToNat_natToWord_bound with (bound:=n); try omega.",
            "VernacExtend",
            "ac155d8b24cad00e4cc0e7dac634b3a2b402c15b"
        ],
        [
            "assert (wordToNat n <> 0); try omega.",
            "VernacExtend",
            "65ab49bf5a121571cf582f5f1a85e0448ac43a73"
        ],
        [
            "unfold not; intros; apply n0; clear n0.",
            "VernacExtend",
            "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
        ],
        [
            "rewrite <- H0; rewrite natToWord_wordToNat; auto.",
            "VernacExtend",
            "823c5b0a2c3e21d16ec19fee786aa38d034c8600"
        ],
        [
            "unfold not; intros; apply n0; clear n0.",
            "VernacExtend",
            "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
        ],
        [
            "apply wlt_lt in H0.",
            "VernacExtend",
            "1c4045f8263b2f1d3dc76440ed2bddc0027fff13"
        ],
        [
            "replace n with (natToWord (S sz) (wordToNat n)) by (rewrite natToWord_wordToNat; auto).",
            "VernacExtend",
            "0f20dba534e50827fde67460c7deba1d7906719f"
        ],
        [
            "f_equal; rewrite roundTrip_1 in *.",
            "VernacExtend",
            "483169d6c5ae07403db823a27474cd78ce593586"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wordToNat_minus_one: forall sz n, n <> natToWord sz 0 -> wordToNat (n ^- natToWord sz 1) = wordToNat n - 1.",
            "VernacStartTheoremProof",
            "cfbde89a9a6f4068499ada972d8ebb1ce07705db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite Nat.succ_inj with (n2 := wordToNat (n ^- (natToWord sz 1))); auto.",
            "VernacExtend",
            "29a5c1d1c7b8d03ea32cce35e44f368ffe974e00"
        ],
        [
            "rewrite wordToNat_minus_one'; auto.",
            "VernacExtend",
            "07770e536f0f7ac397a02126c593e99718bf6796"
        ],
        [
            "assert (wordToNat n <> 0).",
            "VernacExtend",
            "bf3b682d91ec1dc200b85014e03b0a1638db2d69"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "erewrite <- roundTrip_0 with (sz := sz) in H0.",
            "VernacExtend",
            "fd5daaa18afdd41ad7bbc1aeb85c6f7f28be802e"
        ],
        [
            "apply wordToNat_inj in H0; tauto.",
            "VernacExtend",
            "f42d461781cd84e96019d3dbb9cf5e939c2301fa"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_minus : forall a b c, (b <= a -> b < c -> a < c -> a - b < c)%nat.",
            "VernacStartTheoremProof",
            "dd6a47f28cc021494aa86d22c92242cacceefc37"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_minus : forall sz (a b : word sz), b <= a -> wordToNat (a ^- b) = wordToNat a - wordToNat b.",
            "VernacStartTheoremProof",
            "f0bf376273b81a1b965fc67458905f403565178e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wminus_Alt.",
            "VernacExtend",
            "09e0d096079192ab7d82fa071115736a4f313666"
        ],
        [
            "rewrite wminus_Alt2; auto.",
            "VernacExtend",
            "582554ac42090804aa322ed3cea82fa783d477e0"
        ],
        [
            "unfold wordBinN.",
            "VernacExtend",
            "259bbf7aeaef361391fd511f478d4eca2384f62d"
        ],
        [
            "eapply wordToNat_natToWord_idempotent'.",
            "VernacExtend",
            "3645d81635b4dbbddd6423e4ffd87d9de013a52e"
        ],
        [
            "apply lt_minus.",
            "VernacExtend",
            "c3124db31ceac1e42c0f8ec06c469740c831ce45"
        ],
        [
            "apply wle_le; auto.",
            "VernacExtend",
            "e8864300b174d135c1eaabfda866eb489432449d"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_minus': forall (sz : nat) (a b : word sz), (#b <= #a)%nat -> #(a ^- b) = #a - #b.",
            "VernacStartTheoremProof",
            "1b39098e0128997727417b547a56141a3c9b3f9d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wminus_minus.",
            "VernacExtend",
            "1c0f14953ee9d693e2eea17d8c0dd5a1e258c1a2"
        ],
        [
            "unfold wlt.",
            "VernacExtend",
            "dfcf4de18e6a6d6794b3aed5787c9664c88a3826"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "apply Nlt_out in C.",
            "VernacExtend",
            "91373df64bfc198bd48837ee50eb157f9b37aade"
        ],
        [
            "rewrite! wordToN_to_nat in *.",
            "VernacExtend",
            "a3a0de13d518df40ef8f105cb86ec0aa72d68165"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_neq_inj: forall sz (a b : word sz), a <> b <-> wordToNat a <> wordToNat b.",
            "VernacStartTheoremProof",
            "aa9f87cadb4bb6c48c159590d990a0bd5910a278"
        ],
        [
            "split; intuition.",
            "VernacExtend",
            "ad92f41c7c6120efbfc528c4c895eac1600e6297"
        ],
        [
            "apply wordToNat_inj in H0; auto.",
            "VernacExtend",
            "5ce5e0a2f127842b3bb35cbaa6fbfa1b564e6947"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_discriminate: forall sz, (sz > 0)%nat -> natToWord sz 0 <> natToWord sz 1.",
            "VernacStartTheoremProof",
            "2f2c26a0b7626fb52d7d30b6a84d30be51817731"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction sz.",
            "VernacExtend",
            "f0dd08ea79213d276af44d6a53e7f263ac45a85a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "unfold natToWord in H0; fold natToWord in H0.",
            "VernacExtend",
            "ad22452f17622928cfab17a010eb5616f8908bda"
        ],
        [
            "discriminate H0.",
            "VernacExtend",
            "cd7043143d6a4e1505f0ccbc30dbfce403162dec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bit_dec : forall (a : word 1), {a = $0} + {a = $1}.",
            "VernacDefinition",
            "5d02e45ca67ec93f645e37972cd270a62574e834"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite (shatter_word a).",
            "VernacExtend",
            "9310357bd7abfc292399f456ff240f9324cb4ea4"
        ],
        [
            "replace (wtl a) with WO by auto.",
            "VernacExtend",
            "a814a5f5c099735b3fe43a99b63c2e4e5711e11d"
        ],
        [
            "destruct (whd a).",
            "VernacExtend",
            "45461cb20132eb3734863d47400ddf7d080fde93"
        ],
        [
            "right; apply eq_refl.",
            "VernacExtend",
            "08a538bc6244c82bcb92e6ddd9e94d9f84231950"
        ],
        [
            "left; apply eq_refl.",
            "VernacExtend",
            "4376963f317300556a259be0f6a6705fd2abafe8"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma neq0_wneq0: forall sz (n : word sz), wordToNat n <> 0 <-> n <> $0.",
            "VernacStartTheoremProof",
            "c852fc37e85c7228973131d523798247eb63481a"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply wordToNat_neq_inj.",
            "VernacExtend",
            "746c76c8de51eec68b9a63e4eb9a656329d73a23"
        ],
        [
            "rewrite roundTrip_0; auto.",
            "VernacExtend",
            "bb8a23542e356dceec156ba02149ad653766ed45"
        ],
        [
            "apply wordToNat_neq_inj in H.",
            "VernacExtend",
            "3e7042166cea3499d0a6aeb63a12f3cabfc154da"
        ],
        [
            "rewrite roundTrip_0 in H; auto.",
            "VernacExtend",
            "0b1605c79c77bccd8425449b5688598c86c6cf87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt0_wneq0: forall sz (n : word sz), (wordToNat n > 0)%nat <-> n <> $0.",
            "VernacStartTheoremProof",
            "303cf56ae942531655238f6a732a4c854922029d"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply neq0_wneq0; omega.",
            "VernacExtend",
            "9583df49bd288c1e489343159533e57a582942ef"
        ],
        [
            "apply wordToNat_neq_inj in H.",
            "VernacExtend",
            "3e7042166cea3499d0a6aeb63a12f3cabfc154da"
        ],
        [
            "rewrite roundTrip_0 in H; omega.",
            "VernacExtend",
            "0810cb2baabe1b1fdcb7fb2fd136829b8f7e742f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weq_minus1_wlt: forall sz (a b : word sz), (a <> $0 -> a ^- $1 = b -> a > b)%word.",
            "VernacStartTheoremProof",
            "7c48eed6fe976292721364b9b1de9ebe53ed1f63"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_wlt; subst.",
            "VernacExtend",
            "5c84400bbda323ee237bd6e3ece3fdc35192a9e0"
        ],
        [
            "rewrite wordToNat_minus_one; auto.",
            "VernacExtend",
            "913e98549af1966c9398096383723290bcdd3a3b"
        ],
        [
            "apply gt0_wneq0 in H.",
            "VernacExtend",
            "4b7b189b61eb08f31389734088741c1ee2b5e992"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordnat_minus1_eq : forall sz n (w : word sz), (n > 0)%nat -> n = wordToNat w -> n - 1 = wordToNat (w ^- $1).",
            "VernacStartTheoremProof",
            "d6f3b753f6823828a04999d899a012713779a581"
        ],
        [
            "intros; rewrite wordToNat_minus_one; auto.",
            "VernacExtend",
            "eb88a5ab7080ee280d59e703fae6efe0c16c532f"
        ],
        [
            "apply gt0_wneq0; subst; auto.",
            "VernacExtend",
            "e3722dccd4fb0a6a06281581a4044c4cbc684949"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wlshift_0 : forall sz (w : word sz), @wlshift sz w 0 = w.",
            "VernacStartTheoremProof",
            "5241c013a28dcd9ef3d0ceae1487991555fa7b26"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlshift.",
            "VernacExtend",
            "66c7242d1a44cdfa4c18889456412e0d393666ac"
        ],
        [
            "eapply split1_0.",
            "VernacExtend",
            "b9526e96265815dfeacefb8c31afdf8675bc0161"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wrshift_0 : forall sz (w : word sz), @wrshift sz w 0 = w.",
            "VernacStartTheoremProof",
            "6d08d96cab05324f9cc1e9dba72ba03224f20920"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wrshift.",
            "VernacExtend",
            "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite combine_n_0.",
            "VernacExtend",
            "434a961f7faf0cbb094519f34483fc1dc6a8c8c9"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wlshift_gt : forall sz n (w : word sz), (n > sz)%nat -> wlshift w n = wzero sz.",
            "VernacStartTheoremProof",
            "00e91b7de8932219db4457629f3e4aab445781c2"
        ],
        [
            "intros sz n w H.",
            "VernacExtend",
            "a534b9ef2b8d8f49dcf06c0e5343cefa5505bc7b"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "remember (n - sz) as e.",
            "VernacExtend",
            "cfcd6e539b47b107157d8312e3faacba5bfcf877"
        ],
        [
            "assert (n = sz + e) by omega; subst n.",
            "VernacExtend",
            "97ed726206376fd7baa9d8545fc6f2f9666ecf84"
        ],
        [
            "intros w.",
            "VernacExtend",
            "dc4d28ea6a966d58808cc6f9e5cb47dc57f33793"
        ],
        [
            "unfold wlshift.",
            "VernacExtend",
            "66c7242d1a44cdfa4c18889456412e0d393666ac"
        ],
        [
            "rewrite <- combine_wzero.",
            "VernacExtend",
            "d4609a22fd762d5b7c28611f74db688dd641b8d3"
        ],
        [
            "erewrite combine_assoc, eq_rect_word_match.",
            "VernacExtend",
            "244c69a34ef8bd77030ae25ee09ba01da8f31cc7"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "rewrite eq_rect_combine.",
            "VernacExtend",
            "480922cac4fa494c10a50e172b93474b7645a08c"
        ],
        [
            "apply split1_combine.",
            "VernacExtend",
            "4e5a1daf819da5758c6e4696bcf2de7c9cee61c9"
        ],
        [
            "Grab Existential Variables.",
            "VernacExtend",
            "a9968e33a690f26a4ac2e78a24b14c2da25a6000"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wrshift_gt : forall sz n (w : word sz), (n > sz)%nat -> wrshift w n = wzero sz.",
            "VernacStartTheoremProof",
            "2c1e4d9e2ce6c3f1f2e2956c81537e0657e57508"
        ],
        [
            "intros sz n w H.",
            "VernacExtend",
            "a534b9ef2b8d8f49dcf06c0e5343cefa5505bc7b"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "remember (n - sz) as e.",
            "VernacExtend",
            "cfcd6e539b47b107157d8312e3faacba5bfcf877"
        ],
        [
            "assert (n = sz + e) by omega; subst n.",
            "VernacExtend",
            "97ed726206376fd7baa9d8545fc6f2f9666ecf84"
        ],
        [
            "intros w.",
            "VernacExtend",
            "dc4d28ea6a966d58808cc6f9e5cb47dc57f33793"
        ],
        [
            "unfold wrshift.",
            "VernacExtend",
            "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
        ],
        [
            "erewrite wzero_rev, <- combine_wzero.",
            "VernacExtend",
            "e7db75613063c04beeac9759392f4ff5076014a6"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "rewrite <- eq_rect_word_match, <- eq_rect_combine, eq_rect_word_match.",
            "VernacExtend",
            "ac257c051f2f6273e1807f9285e1dbd38affc236"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "rewrite eq_rect_combine_assoc', split2_combine.",
            "VernacExtend",
            "57bb72f4e01f7c38fa42d3cd2d63b7a421f81e73"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Grab Existential Variables.",
            "VernacExtend",
            "a9968e33a690f26a4ac2e78a24b14c2da25a6000"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wlshift_bitwp : forall sz (w1 w2 : word sz) f n, wlshift (bitwp f w1 w2) n = split1 sz n ( eq_rec _ word (combine (wzero n) (bitwp f w1 w2)) _ (eq_sym (Nat.add_comm sz n))).",
            "VernacStartTheoremProof",
            "60930f2aac8067d67528e7c79dabd0b197f82dea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlshift.",
            "VernacExtend",
            "66c7242d1a44cdfa4c18889456412e0d393666ac"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wrshift_bitwp : forall sz (w1 w2 : word sz) f n, wrshift (bitwp f w1 w2) n = split2 n sz ( eq_rect _ word (combine (bitwp f w1 w2) (wzero n)) _ (eq_sym (Nat.add_comm n sz))).",
            "VernacStartTheoremProof",
            "8430677155b13bad11c3af9624c22e04256636f7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wrshift.",
            "VernacExtend",
            "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_wlshift : forall sz (w : word sz) n, wnot (wlshift w n) = split1 sz n (eq_rect _ word (combine (wones n) (wnot w)) _ (eq_sym (Nat.add_comm sz n))).",
            "VernacStartTheoremProof",
            "242567bb67d20b696e50c4185b03f1c5e74eeddb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlshift.",
            "VernacExtend",
            "66c7242d1a44cdfa4c18889456412e0d393666ac"
        ],
        [
            "rewrite wnot_split1.",
            "VernacExtend",
            "28f2954e63b64ae0f72a3ef91d5053ebfc0a90ea"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "rewrite wnot_eq_rect.",
            "VernacExtend",
            "322ece9bbc4ce7d1b1005ec4af79b774ae89e95f"
        ],
        [
            "rewrite wnot_combine.",
            "VernacExtend",
            "2e90e95fe8ba302b7ecb648076c850d7a6b6b7dc"
        ],
        [
            "rewrite wnot_zero.",
            "VernacExtend",
            "62951154169bd7f777a65b1e843b9ad696843a34"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wnot_wrshift : forall sz (w : word sz) n, wnot (wrshift w n) = split2 n sz (eq_rect _ word (combine (wnot w) (wones n)) _ (eq_sym (Nat.add_comm n sz))).",
            "VernacStartTheoremProof",
            "9a422983f06fcfccfac46f70423d5ea6464af127"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wrshift.",
            "VernacExtend",
            "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
        ],
        [
            "rewrite wnot_split2.",
            "VernacExtend",
            "5c8fa006082415ea523d40395a339f2af6289329"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "rewrite wnot_eq_rect.",
            "VernacExtend",
            "322ece9bbc4ce7d1b1005ec4af79b774ae89e95f"
        ],
        [
            "rewrite wnot_combine.",
            "VernacExtend",
            "2e90e95fe8ba302b7ecb648076c850d7a6b6b7dc"
        ],
        [
            "rewrite wnot_zero.",
            "VernacExtend",
            "62951154169bd7f777a65b1e843b9ad696843a34"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_alt: forall sz n (a: word sz), wlshift' a n = wlshift a n.",
            "VernacStartTheoremProof",
            "19107c485c1523df518f8957f80833c1e6c48ae4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wlshift, wlshift'.",
            "VernacExtend",
            "70f59227f7a658c254000c967ba9e8c2b6e38c79"
        ],
        [
            "unfold eq_rec_r.",
            "VernacExtend",
            "1330690db714fb97c190795ab86cc109b8b1765d"
        ],
        [
            "unfold eq_rec.",
            "VernacExtend",
            "0594649fad6fca8cab89abaadc8d2188da19d2fb"
        ],
        [
            "erewrite nat_cast_proof_irrel.",
            "VernacExtend",
            "b2dafe0b5fb06a148ab8c95b4573425f3e03d4c1"
        ],
        [
            "rewrite nat_cast_eq_rect.",
            "VernacExtend",
            "f7a284c511a8161c46bf856ee7a45522c014617a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem div2_pow2_twice: forall n, Nat.div2 (pow2 n + (pow2 n + 0)) = pow2 n.",
            "VernacStartTheoremProof",
            "0a2e6225b5db9a34df1fc7f7fae495851962087a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (pow2 n + (pow2 n + 0)) with (2 * pow2 n) by omega.",
            "VernacExtend",
            "7dc24672faa54188a0adccbdf595add11a19b841"
        ],
        [
            "rewrite Nat.div2_double.",
            "VernacExtend",
            "130a75bd67b711537ca5456b5be2e6ba6301d35e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zero_or_wordToNat_S: forall sz (n : word sz), n = $0 \\/ exists nn, wordToNat n = S nn /\\ wordToNat (n ^- $1) = nn.",
            "VernacStartTheoremProof",
            "a862a89afe035360414219373f18ddca14c92451"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite (word0 n).",
            "VernacExtend",
            "ef833d5e9afc8c185350dbbc2ddad0af601ced2b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (weq n $0); intuition.",
            "VernacExtend",
            "d2a8d68dbda5fc2bef0ea2789d6a69a3f921a199"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists (wordToNat (n ^- $1)); intuition.",
            "VernacExtend",
            "d02771de7813e899690265712b1a995a124fac1c"
        ],
        [
            "rewrite wminus_Alt.",
            "VernacExtend",
            "09e0d096079192ab7d82fa071115736a4f313666"
        ],
        [
            "rewrite wminus_Alt2.",
            "VernacExtend",
            "fce7ac4f1fc5316b3e9d3e18ab1064d8675e226e"
        ],
        [
            "unfold wordBinN.",
            "VernacExtend",
            "259bbf7aeaef361391fd511f478d4eca2384f62d"
        ],
        [
            "rewrite roundTrip_1.",
            "VernacExtend",
            "63a56ca1beaee854c748ed5f2bb1ce44fb38a504"
        ],
        [
            "erewrite wordToNat_natToWord_bound with (bound:=n); try omega.",
            "VernacExtend",
            "ac155d8b24cad00e4cc0e7dac634b3a2b402c15b"
        ],
        [
            "assert (wordToNat n <> 0); try omega.",
            "VernacExtend",
            "65ab49bf5a121571cf582f5f1a85e0448ac43a73"
        ],
        [
            "unfold not; intros; apply n0; clear n0.",
            "VernacExtend",
            "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite natToWord_wordToNat; auto.",
            "VernacExtend",
            "adb80867dd45dba4f4c5828a7a9ac6cc141aa99b"
        ],
        [
            "unfold not; intros; apply n0; clear n0.",
            "VernacExtend",
            "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
        ],
        [
            "apply wlt_lt in H.",
            "VernacExtend",
            "eb25d699e131c5a049ddc78b1a43c7040abfd346"
        ],
        [
            "replace n with (natToWord (S sz) (wordToNat n)) by (rewrite natToWord_wordToNat; auto).",
            "VernacExtend",
            "0f20dba534e50827fde67460c7deba1d7906719f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite roundTrip_1 in *.",
            "VernacExtend",
            "7ad7339c8a2754d8c189fe9d9612cf51a66b0c4d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wbit_or_same : forall sz sz' (n : word sz'), (wordToNat n < sz)%nat -> (wbit sz n) ^| (wbit sz n) <> wzero sz.",
            "VernacStartTheoremProof",
            "767c5750d656197117bbac4a9d7783778e0f1958"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "induction sz; intros; try omega.",
            "VernacExtend",
            "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
        ],
        [
            "unfold wbit, wzero, wor in *.",
            "VernacExtend",
            "caaeff76cfd4c150af82be5d64159e4ab4d9d7a4"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct (zero_or_wordToNat_S n).",
            "VernacExtend",
            "e07808f438638d3a200f7fdec4885f3b21928da5"
        ],
        [
            "subst; rewrite roundTrip_0 in *.",
            "VernacExtend",
            "934e547dbf6c042ce77b16dc1eb322b1610eea6e"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "rewrite H1 in *.",
            "VernacExtend",
            "6efc0fda494639e9bce9f9de4bc64aa53e239e85"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "apply (inj_pair2_eq_dec _ eq_nat_dec) in H5.",
            "VernacExtend",
            "5f64d4119b592f379e6615784ecdd7376f0018c2"
        ],
        [
            "rewrite div2_pow2_twice in H5.",
            "VernacExtend",
            "e963b911d9243aed3313cd7a2a2506a11dc1faa8"
        ],
        [
            "repeat rewrite <- H2 in H5.",
            "VernacExtend",
            "82cb912108c1fb4442dd45aac7ed3ad4240fe075"
        ],
        [
            "eapply IHsz; eauto.",
            "VernacExtend",
            "d1143a6557f3df6f00ff9a87a50eea2d8944fb85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wbit_or_other : forall sz sz' (n1 n2 : word sz'), (wordToNat n1 < sz)%nat -> (wordToNat n2 < sz)%nat -> (n1 <> n2) -> (wbit sz n1) ^& (wbit sz n2) = wzero sz.",
            "VernacStartTheoremProof",
            "1f7cc6f5d50f765d65d4a6d8bdbe95096bea1249"
        ],
        [
            "induction sz; intros; try omega.",
            "VernacExtend",
            "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
        ],
        [
            "unfold wbit, wzero, wand.",
            "VernacExtend",
            "a51afcc3bd190105af2cc3bf6d41b6dedd7e3e25"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (zero_or_wordToNat_S n1); destruct (zero_or_wordToNat_S n2); try congruence; destruct_conjs; subst; try rewrite roundTrip_0.",
            "VernacExtend",
            "0e13e576e9255f896995d9e60b9a01cf7b1ba01d"
        ],
        [
            "repeat rewrite H4; simpl; repeat rewrite mod2_pow2_twice; f_equal.",
            "VernacExtend",
            "8d70f4ed6ad71b529aa284fd717913098e6b6ebb"
        ],
        [
            "rewrite wand_kill; auto.",
            "VernacExtend",
            "ceab42e92a4305e972cb68b429595e7f8ba7fc87"
        ],
        [
            "repeat rewrite H4; simpl; repeat rewrite mod2_pow2_twice; f_equal.",
            "VernacExtend",
            "8d70f4ed6ad71b529aa284fd717913098e6b6ebb"
        ],
        [
            "rewrite wand_comm; rewrite wand_kill; auto.",
            "VernacExtend",
            "e5ca676e911b156430791a9a94df4e15e8cebd78"
        ],
        [
            "repeat rewrite H4; repeat rewrite H6; simpl.",
            "VernacExtend",
            "a264b12c625ec024c0c10daa91eab84d52967061"
        ],
        [
            "repeat rewrite mod2_pow2_twice; f_equal.",
            "VernacExtend",
            "5177a7e41f3ccae700e220c155a51bb05161620e"
        ],
        [
            "repeat rewrite div2_pow2_twice.",
            "VernacExtend",
            "505c83fae0a8983028476799afbc4cc73662d991"
        ],
        [
            "eapply IHsz; try omega.",
            "VernacExtend",
            "dbfadd0942fad9179fd1b0471740111e7811261f"
        ],
        [
            "apply word_neq.",
            "VernacExtend",
            "bb2a1c86988d2ae89afa9c3390ed9b2553f0eea2"
        ],
        [
            "unfold not in *; intros; apply H1; clear H1.",
            "VernacExtend",
            "2b773177ffc4bc851485016ebeb89d5143ec8dbe"
        ],
        [
            "apply sub_0_eq; rewrite <- H2.",
            "VernacExtend",
            "441b6e799348b32890a894a6f9678329996e9155"
        ],
        [
            "ring_sz sz'.",
            "VernacExtend",
            "1caaf6d9e050e53be25f56980d38356557d17528"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wbit_and_not: forall sz sz' (n : word sz'), (wordToNat n < sz)%nat -> (wbit sz n) ^& wnot (wbit sz n) = wzero sz.",
            "VernacStartTheoremProof",
            "99a855351a84f5444420d0be592963fd239ee25d"
        ],
        [
            "induction sz; intros; try omega.",
            "VernacExtend",
            "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
        ],
        [
            "unfold wbit, wzero, wand, wnot.",
            "VernacExtend",
            "60fcacdcf1302da0587f4ee814034e26165c9d1a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply andb_negb_r.",
            "VernacExtend",
            "e7932e8c665f0635946d0ad9e61d348bbfeafa6c"
        ],
        [
            "destruct (zero_or_wordToNat_S n); subst.",
            "VernacExtend",
            "b27654e83788e0fd791391c7228057f68fc17473"
        ],
        [
            "rewrite roundTrip_0; simpl.",
            "VernacExtend",
            "ae389c38d714f9a28a446eea60398f8df43af9a3"
        ],
        [
            "apply wand_kill.",
            "VernacExtend",
            "a55b81da257aa07dbaaa2ddd6785d057ed94681e"
        ],
        [
            "do 2 destruct H0.",
            "VernacExtend",
            "5b82514099331ad1eb615c0965f056f51574e42c"
        ],
        [
            "rewrite H0; simpl.",
            "VernacExtend",
            "2523d8787e2d3d9372387c776fdd44c2630b7972"
        ],
        [
            "rewrite div2_pow2_twice.",
            "VernacExtend",
            "f74ee52ddd10a6af2cb0ec4c710f6f0fbfa2ec65"
        ],
        [
            "fold wnot.",
            "VernacExtend",
            "9893ab1e4d97b2577d280ea129a441d383a01784"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "eapply IHsz.",
            "VernacExtend",
            "c77a1c64bec605d6cf47fa90f84a68dd9e62897a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wbit_and_not_other: forall sz sz' (n1 n2 : word sz'), (wordToNat n1 < sz)%nat -> (wordToNat n2 < sz)%nat -> n1 <> n2 -> (wbit sz n1) ^& wnot (wbit sz n2) = wbit sz n1.",
            "VernacStartTheoremProof",
            "b05d7cd30fa4fc747c130b532fcd956d8ffb62bb"
        ],
        [
            "induction sz; intros; try omega.",
            "VernacExtend",
            "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
        ],
        [
            "unfold wbit, wzero, wand, wnot.",
            "VernacExtend",
            "60fcacdcf1302da0587f4ee814034e26165c9d1a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (zero_or_wordToNat_S n1); destruct (zero_or_wordToNat_S n2); try congruence; destruct_conjs; subst; fold wnot; try rewrite roundTrip_0; simpl; f_equal.",
            "VernacExtend",
            "36d098c53ae71f863eaabd0fb8fa65247cb4412f"
        ],
        [
            "rewrite H4; simpl; rewrite mod2_pow2_twice; auto.",
            "VernacExtend",
            "15ad68671d905bdd2273239ba2c0c66fbd3d9613"
        ],
        [
            "rewrite H4; simpl; rewrite div2_pow2_twice; apply wand_kill.",
            "VernacExtend",
            "9564fc389bfdeca1df6630d017845f1549a68ba6"
        ],
        [
            "rewrite H4; simpl; rewrite mod2_pow2_twice; auto.",
            "VernacExtend",
            "15ad68671d905bdd2273239ba2c0c66fbd3d9613"
        ],
        [
            "rewrite H4; simpl; rewrite div2_pow2_twice.",
            "VernacExtend",
            "2df3c380405d095a232b273bb3f8e3cc29bb00ca"
        ],
        [
            "rewrite wnot_zero.",
            "VernacExtend",
            "62951154169bd7f777a65b1e843b9ad696843a34"
        ],
        [
            "rewrite wand_comm.",
            "VernacExtend",
            "d8e33a2f0f64979fb3e314c8b1e921efc5ea3f8b"
        ],
        [
            "apply wand_unit.",
            "VernacExtend",
            "dcf57125c3b7530a5fa678c0c0f7555ab06e9634"
        ],
        [
            "rewrite H4; simpl; rewrite mod2_pow2_twice; simpl; apply andb_true_r.",
            "VernacExtend",
            "d49fa95834add41d3bed29860adadce11bb4027b"
        ],
        [
            "rewrite H4; rewrite H6; simpl.",
            "VernacExtend",
            "2aaccd17c382982dd2cc5b3021779caf16bf2e75"
        ],
        [
            "repeat rewrite div2_pow2_twice.",
            "VernacExtend",
            "505c83fae0a8983028476799afbc4cc73662d991"
        ],
        [
            "apply IHsz; try omega.",
            "VernacExtend",
            "570fbe6cca2a362a8996e029cb95a1aba8b7b8d4"
        ],
        [
            "apply word_neq.",
            "VernacExtend",
            "bb2a1c86988d2ae89afa9c3390ed9b2553f0eea2"
        ],
        [
            "unfold not in *; intros; apply H1.",
            "VernacExtend",
            "2257138525a56eee45353ca8c2b77c7b01bff2c4"
        ],
        [
            "apply sub_0_eq.",
            "VernacExtend",
            "bc6031e71b20c7e7c7943cdd602d2b29f77edaa6"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "ring_sz sz'.",
            "VernacExtend",
            "1caaf6d9e050e53be25f56980d38356557d17528"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wzero: forall sz, wordToNat (wzero sz) = 0.",
            "VernacStartTheoremProof",
            "b67ace9afe06cb36ef53533ee0c9abae74a380f9"
        ],
        [
            "unfold wzero; intros.",
            "VernacExtend",
            "c9e1a629c7316fee17f86df617542cc791b1fdc0"
        ],
        [
            "apply roundTrip_0.",
            "VernacExtend",
            "919cd0ef158865677a5554cf8e7a6e207da79ba7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_wzero: forall sz, wordToN (wzero sz) = 0%N.",
            "VernacStartTheoremProof",
            "f821b3fcff56718ebae19121e1789110dabc4d11"
        ],
        [
            "intros; rewrite wordToN_nat.",
            "VernacExtend",
            "a82843214b793af92031f988b5c273ccefbd0b79"
        ],
        [
            "rewrite wordToNat_wzero.",
            "VernacExtend",
            "fe66869aedb7ca996577b7cf47bb140834751f8c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_zero: forall n m, combine (natToWord n 0) (natToWord m 0) = natToWord _ 0.",
            "VernacStartTheoremProof",
            "da58c612f0502490067bc05b665dbf3e8ef8c9c4"
        ],
        [
            "induction n; simpl; intros; [reflexivity|].",
            "VernacExtend",
            "275daf5016aad17ab51e741d3b998c23ca5736e4"
        ],
        [
            "rewrite IHn; reflexivity.",
            "VernacExtend",
            "fde488caf9f19fc208eb1e560bb8947537ecb28e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_one: forall n m, combine (natToWord (S n) 1) (natToWord m 0) = natToWord _ 1.",
            "VernacStartTheoremProof",
            "eb3255670f663ba410ffc921e52a90bcd8078ffa"
        ],
        [
            "cbn; intros.",
            "VernacExtend",
            "65f7b8255187eba349f5fe5e27535a24d94499db"
        ],
        [
            "rewrite combine_zero; reflexivity.",
            "VernacExtend",
            "8b6eed1b45482ab19f633679e91369b2baec6489"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wzero': forall sz, wmsb (wzero' sz) false = false.",
            "VernacStartTheoremProof",
            "7f6c48eb2dbc811a501a9bbf785308758dacea6f"
        ],
        [
            "induction sz; auto.",
            "VernacExtend",
            "3e45bf00406d7518482edf33532df9d33ff94496"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wzero: forall sz, wmsb (wzero sz) false = false.",
            "VernacStartTheoremProof",
            "3f2d179a8f0363ae172db81754c7b0985fdff459"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-wzero'_def.",
            "VernacExtend",
            "fa9016326a1619c52f176541f311be8cee8dee47"
        ],
        [
            "apply wmsb_wzero'.",
            "VernacExtend",
            "390d24f5b9afa9062872ab7c50b2d09a16a957e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wones: forall sz, wmsb (wones (S sz)) false = true.",
            "VernacStartTheoremProof",
            "aba05098c66bd503f2a1c58f98961b57b54280c3"
        ],
        [
            "induction sz; cbn; auto.",
            "VernacExtend",
            "ed58935e80aa44984337cd162fbfb076e2a6933b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_0: forall sz (m: word (S sz)) default, (# m < pow2 sz)%nat -> @wmsb (S sz) m default = false.",
            "VernacStartTheoremProof",
            "36fbc4c0813fd249fb9a57520a1df89310a3c670"
        ],
        [
            "induction sz; intros.",
            "VernacExtend",
            "ace8bc7c60d9dbfbf7275dd19134bb0f32243d41"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "assert (#m = 0) as N by omega.",
            "VernacExtend",
            "9ae29333db1451b704a1c0deb9c5296a40a44291"
        ],
        [
            "rewrite <- (roundTrip_0 1) in N.",
            "VernacExtend",
            "a0ba84f5df72ad5b56bebfa75f2e278a57f0732f"
        ],
        [
            "apply wordToNat_inj in N.",
            "VernacExtend",
            "ec4e9b7ed7b6d88782374b6db75a1f78dc254c8a"
        ],
        [
            "subst m.",
            "VernacExtend",
            "9ba78b8037512180a4349842defa7f5fabdd6010"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (shatter_word_S m) as P.",
            "VernacExtend",
            "3c9b5af598a6e14615adf31acab6fa10c6cca511"
        ],
        [
            "destruct P as [b [m0 E]].",
            "VernacExtend",
            "59a936a35ae0e7195dca33fbdf8d4a7b47461143"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold wmsb.",
            "VernacExtend",
            "b27176a777c0e891aa47258a735b2be72891446e"
        ],
        [
            "fold wmsb.",
            "VernacExtend",
            "efcd6474f0fdede5cb57524ece537c6123340cc3"
        ],
        [
            "apply IHsz.",
            "VernacExtend",
            "51b897054dae4c2b5297e41069e63149b8a50ec5"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct b; omega.",
            "VernacExtend",
            "ac52b71115edcaea4a9f2a4ee8649c7fd2091283"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_1: forall sz (m: word (S sz)) default, pow2 sz <= # m < 2 * pow2 sz -> @wmsb (S sz) m default = true.",
            "VernacStartTheoremProof",
            "0a4b706856e5c96bc3bd15a974c64582b0bef71e"
        ],
        [
            "induction sz; intros.",
            "VernacExtend",
            "ace8bc7c60d9dbfbf7275dd19134bb0f32243d41"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "assert (#m = 1) as N by omega.",
            "VernacExtend",
            "13ed2cedb11d2f510d91da35b33460e561e5f71d"
        ],
        [
            "rewrite <- (roundTrip_1 1) in N.",
            "VernacExtend",
            "213afa97689d687f9fa928c44370c2a706abebc9"
        ],
        [
            "apply (wordToNat_inj m ($ 1)) in N.",
            "VernacExtend",
            "4c84d8c54922c1b4c826a9d5cfcbb6a5403db2db"
        ],
        [
            "subst m.",
            "VernacExtend",
            "9ba78b8037512180a4349842defa7f5fabdd6010"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (shatter_word_S m) as P.",
            "VernacExtend",
            "3c9b5af598a6e14615adf31acab6fa10c6cca511"
        ],
        [
            "destruct P as [b [m0 E]].",
            "VernacExtend",
            "59a936a35ae0e7195dca33fbdf8d4a7b47461143"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold wmsb.",
            "VernacExtend",
            "b27176a777c0e891aa47258a735b2be72891446e"
        ],
        [
            "fold wmsb.",
            "VernacExtend",
            "efcd6474f0fdede5cb57524ece537c6123340cc3"
        ],
        [
            "apply IHsz.",
            "VernacExtend",
            "51b897054dae4c2b5297e41069e63149b8a50ec5"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct b; omega.",
            "VernacExtend",
            "ac52b71115edcaea4a9f2a4ee8649c7fd2091283"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_0_natToWord: forall sz n default, (2 * n < pow2 (S sz))%nat -> @wmsb (S sz) (natToWord (S sz) n) default = false.",
            "VernacStartTheoremProof",
            "2e2e541a09da16e3fe034a9f6d4ade30fd5b7946"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wmsb_0.",
            "VernacExtend",
            "652a23f7a41e8aaa93928bba7137945d2aadb333"
        ],
        [
            "pose proof (wordToNat_natToWord_le (S sz) n).",
            "VernacExtend",
            "52342b3d1f01e2a73f5387a8c0fbc70b52c929fa"
        ],
        [
            "unfold pow2 in H.",
            "VernacExtend",
            "5d91c35e36aa786cb67a130ba2bb686b3092e917"
        ],
        [
            "fold pow2 in H.",
            "VernacExtend",
            "babb70152eeb448d4910e3d0f27f0f3ac348e870"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_1_natToWord: forall sz n default, pow2 sz <= n < 2 * pow2 sz -> @wmsb (S sz) (natToWord (S sz) n) default = true.",
            "VernacStartTheoremProof",
            "aab55470be6033b4e024edd4d3a86a17801984f8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wmsb_1.",
            "VernacExtend",
            "a6c729fa6587be197091ff6b60f7f19cb846614c"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; simpl; omega.",
            "VernacExtend",
            "857392608265795e5a5f2a0aa24b00e70d521f92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_wzero': forall sz, wordToN (wzero' sz) = 0%N.",
            "VernacStartTheoremProof",
            "9174fca8f07c1fe991709e8b742b70b4b101e206"
        ],
        [
            "induction sz; simpl; auto.",
            "VernacExtend",
            "3c5ff83bd018a1bdf50844a8045b7bb97567268f"
        ],
        [
            "rewrite IHsz; auto.",
            "VernacExtend",
            "2973f5a0da9cb6e1e18def41b71f6cc10f0e68c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wzero': forall sz, wordToZ (wzero' sz) = 0%Z.",
            "VernacStartTheoremProof",
            "696861f60290ac94f7fce7e443b7f79e6217d4dd"
        ],
        [
            "unfold wordToZ; intros.",
            "VernacExtend",
            "5714496e388c686b08c1c9ac23abf2832594244a"
        ],
        [
            "rewrite wmsb_wzero'.",
            "VernacExtend",
            "a18eead29dbcb06a4526e699bbff8c001860f19c"
        ],
        [
            "rewrite wordToN_wzero'.",
            "VernacExtend",
            "468227fdef3c667dd15cf8a3d2a2f8463bc667d3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wzero: forall sz, wordToZ (wzero sz) = 0%Z.",
            "VernacStartTheoremProof",
            "68a9182b2a219a12736e811a52c4ddf09ca454a3"
        ],
        [
            "unfold wordToZ; intros.",
            "VernacExtend",
            "5714496e388c686b08c1c9ac23abf2832594244a"
        ],
        [
            "rewrite wmsb_wzero.",
            "VernacExtend",
            "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
        ],
        [
            "rewrite wordToN_wzero.",
            "VernacExtend",
            "7b8e4359d7bad177e9ca2f5e3fcd37b5b8eb97c5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_existT: forall sz1 (w1: word sz1) sz2 (w2: word sz2), existT word _ w1 = existT word _ w2 -> forall b, wmsb w1 b = wmsb w2 b.",
            "VernacStartTheoremProof",
            "183c46df32ac5a9b3768457b83c3ee04b7200e4e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (sz1 = sz2) by (apply eq_sigT_fst in H; auto); subst.",
            "VernacExtend",
            "ccb067a413781da4d5c55e0706cc4dbb501a23ea"
        ],
        [
            "destruct_existT; reflexivity.",
            "VernacExtend",
            "60030bd161e378ea07846bdbd7e38e88972bf1cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma destruct_word_S: forall sz (w: word (S sz)), exists v b, w = WS b v.",
            "VernacStartTheoremProof",
            "b672edf0110704ecacc75e647b9452f276e55a02"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "refine (match w with | WO => _ | WS b v => _ end); unfold IDProp; eauto.",
            "VernacExtend",
            "2d8766a56600ae3d86bdd706d5c025536c596395"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma induct_word_S: forall (P : forall n : nat, word (S n) -> Prop), (forall b, P 0 (WS b WO)) -> (forall b b0 n (w : word n), P n (WS b0 w) -> P (S n) (WS b (WS b0 w))) -> forall (n : nat) (w : word (S n)), P n w.",
            "VernacStartTheoremProof",
            "ce1a9db18acf5b9bf703bc041a17adeea061bdb6"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (destruct_word_S w) as [v [b E]].",
            "VernacExtend",
            "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
        ],
        [
            "subst w.",
            "VernacExtend",
            "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
        ],
        [
            "rewrite (word0 v).",
            "VernacExtend",
            "3ef0992b1a5054242ed6834b204f196742764e97"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (destruct_word_S w) as [v [b E]].",
            "VernacExtend",
            "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
        ],
        [
            "subst w.",
            "VernacExtend",
            "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
        ],
        [
            "destruct (destruct_word_S v) as [w [b0 E]].",
            "VernacExtend",
            "a1fbcd25746f4756a0840da6ac1aee47560f3c66"
        ],
        [
            "subst v.",
            "VernacExtend",
            "a1d4af197c860364e3e3c9b734079b6e191cf10c"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_ws: forall sz (w: word (S sz)) b a, wmsb (WS b w) a = wmsb w a.",
            "VernacStartTheoremProof",
            "7d0c6363641d480c9a94e10fd00bc6a4262bc049"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cbn.",
            "VernacExtend",
            "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
        ],
        [
            "destruct (destruct_word_S w) as [v [c E]].",
            "VernacExtend",
            "0478bb6398650102e54df9e9cabc86707dff430d"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_extz: forall sz (w: word sz) n, wmsb (extz w n) false = wmsb w false.",
            "VernacStartTheoremProof",
            "1c551484f19b66927081c6dd3f0e18091b286465"
        ],
        [
            "induction n; intros; auto.",
            "VernacExtend",
            "8a5f09706e663dcf641b10d753ca85dbe7b5e8ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_default: forall sz (w: word sz) b1 b2, sz <> 0 -> wmsb w b1 = wmsb w b2.",
            "VernacStartTheoremProof",
            "a076cf82320d1b29adcb6860c3c43456741e3de2"
        ],
        [
            "dependent induction w; intros; intuition idtac.",
            "VernacExtend",
            "16d51d893184c7a16e7bec071eb35ae84ed90822"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_nat_cast: forall sz1 (w: word sz1) sz2 (Hsz: sz1 = sz2) b, wmsb w b = wmsb (nat_cast word Hsz w) b.",
            "VernacStartTheoremProof",
            "6f60c65dae616ef400fdd6711b86c6e5fdc2a677"
        ],
        [
            "destruct sz1; intros.",
            "VernacExtend",
            "d5b5c46d2b35efb424feaad3d0ab173d25adfc70"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst sz2.",
            "VernacExtend",
            "7f96ab5f0d7c2453297ae69f261351aea49ad2a3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct sz2; [discriminate|].",
            "VernacExtend",
            "9f992bac9df18f89dc25a0e4a30c5aac791b8d28"
        ],
        [
            "destruct (destruct_word_S w) as [v [b0 E]].",
            "VernacExtend",
            "7b9334c8c5a4d085249976a5057706630463cf90"
        ],
        [
            "subst w.",
            "VernacExtend",
            "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
        ],
        [
            "pose proof (eq_add_S sz1 sz2 Hsz) as Hsz'.",
            "VernacExtend",
            "a3cc9a16531e8a11100bea385a018847c98bcbfd"
        ],
        [
            "subst sz2.",
            "VernacExtend",
            "7f96ab5f0d7c2453297ae69f261351aea49ad2a3"
        ],
        [
            "rewrite nat_cast_eq_rect.",
            "VernacExtend",
            "f7a284c511a8161c46bf856ee7a45522c014617a"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "erewrite (WS_eq_rect _ _ _ eq_refl).",
            "VernacExtend",
            "a7da482b82c2bf37cdd724f1ccecb438d810639b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_eq_rect: forall sz1 (w: word sz1) sz2 (Hsz: sz1 = sz2) b, wmsb w b = wmsb (eq_rect _ word w _ Hsz) b.",
            "VernacStartTheoremProof",
            "b071ac39a78c892bc8625e25dc04a9d864907849"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- nat_cast_eq_rect.",
            "VernacExtend",
            "1f0c0d497c4263046e33d54fd544f63b906b9c43"
        ],
        [
            "apply wmsb_nat_cast.",
            "VernacExtend",
            "f27a11415ff1561b06d79948b035c38a9280f61f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Arguments nat_cast: simpl never.",
            "VernacArguments",
            "9488ac76f674d3b43c4eeb87c912615579fc1f32"
        ],
        [
            "Lemma nat_cast_inj: forall sz sz' (p: sz = sz') (w1 w2: word sz), nat_cast word p w1 = nat_cast word p w2 -> w1 = w2.",
            "VernacStartTheoremProof",
            "fc4849279a237713805baa4fc5a1d9ccb9c2dcb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "rewrite? nat_cast_same in H.",
            "VernacExtend",
            "08834847b154693bb260b28324937b2e43dfa024"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wtl_nat_cast_WS: forall n m (q: n = m) (p: S n = S m) (w: word n) (b: bool), wtl (nat_cast word p (WS b w)) = nat_cast word q w.",
            "VernacStartTheoremProof",
            "2abea5ddfb052e866395b8e2b3e8015d19b702a1"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "destruct q.",
            "VernacExtend",
            "b624c9d13a802d76a1bc8238bf4bfd9fc55bd69d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nat_cast_same.",
            "VernacExtend",
            "f958b239cae308ba1ec53366d7a92e0d5b581610"
        ],
        [
            "transitivity (wtl (WS b w)); [|reflexivity].",
            "VernacExtend",
            "b3df713d2cf8ef28aefb20b2e7bb8e8c5db3e6ff"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite <- nat_cast_same.",
            "VernacExtend",
            "9198e28bbc35616cd6455998a0888f058a0ad50e"
        ],
        [
            "apply nat_cast_proof_irrel.",
            "VernacExtend",
            "aff08d88f0bf2cff2901d4a587f118dd91274171"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_split2': forall sz (w: word (S sz)) b, wmsb w b = negb (weqb (split2 sz 1 (nat_cast _ (eq_sym (Nat.add_1_r sz)) w)) (natToWord _ 0)).",
            "VernacStartTheoremProof",
            "599f7e618baa5b68d0b77fec8b94299a97c706c3"
        ],
        [
            "apply (induct_word_S (fun sz w => forall b, wmsb w b = negb (weqb (split2 sz 1 (nat_cast _ (eq_sym (Nat.add_1_r sz)) w)) (natToWord _ 0)))); intros.",
            "VernacExtend",
            "bdbefd958a66bca4c9063063b54258b999bc9020"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct b; reflexivity.",
            "VernacExtend",
            "68c1e6848f79c7f8d4a1f0411f2c0cfa9e39efbf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cbn in *.",
            "VernacExtend",
            "37f5b5a6925d866566f6474e86b3c2d0a6a5ef5a"
        ],
        [
            "rewrite (H false).",
            "VernacExtend",
            "892786e9bf6e5dd5a02602396ee9483e56710a5b"
        ],
        [
            "repeat f_equal.",
            "VernacExtend",
            "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply (nat_cast_inj (Nat.add_1_r n)).",
            "VernacExtend",
            "0634a54e5a29db8ab71959b761942f2251e034d7"
        ],
        [
            "erewrite wtl_nat_cast_WS.",
            "VernacExtend",
            "1ee0226cf29a07376796aff62eec34aa6201fe15"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_split2: forall sz (w: word (sz + 1)) b, wmsb w b = if weq (split2 _ 1 w) (natToWord _ 0) then false else true.",
            "VernacStartTheoremProof",
            "e429aa517db83360d38522bd02ea1658f34624e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (@wmsb_split2' sz).",
            "VernacExtend",
            "e676610fabdb593bcc1cd70aff058e55f27928e2"
        ],
        [
            "specialize (H (nat_cast _ (Nat.add_1_r sz) w) b).",
            "VernacExtend",
            "f2bdc73c95d4b0e0aef902726f407dd56d33b781"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite nat_cast_fuse in H.",
            "VernacExtend",
            "d1ea1646a8b4d32c88dc68582245a82745ac4b82"
        ],
        [
            "rewrite <- (nat_cast_proof_irrel word _ _ eq_refl) in H.",
            "VernacExtend",
            "22fd3831cb8d796f41f92ffba3781bf725f09ef7"
        ],
        [
            "rewrite nat_cast_same in H.",
            "VernacExtend",
            "aa6fc3ad7f35d89c7b78a8137aa0b36d05040210"
        ],
        [
            "destruct (weq (split2 sz 1 w) $ (0)).",
            "VernacExtend",
            "edddb8260b97a3d77615c123047aa91a4db5affb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite e in H.",
            "VernacExtend",
            "3cced324f66c706c063fed120eb850f59f4df0d4"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply wmsb_nat_cast.",
            "VernacExtend",
            "f27a11415ff1561b06d79948b035c38a9280f61f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in n.",
            "VernacExtend",
            "950037a81d91f1ad97b7f1e8cec014bbd95db506"
        ],
        [
            "apply weqb_ne in n.",
            "VernacExtend",
            "c8c19c0a49859f043ab25b98e961521f6851b896"
        ],
        [
            "rewrite n in H.",
            "VernacExtend",
            "fe009077408b11551eb2ddb1d46b49a32d373c0a"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "apply wmsb_nat_cast.",
            "VernacExtend",
            "f27a11415ff1561b06d79948b035c38a9280f61f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_true_split2_wones: forall sz (w: word (sz + 1)) b, wmsb w b = true -> wones 1 = split2 sz 1 w.",
            "VernacStartTheoremProof",
            "13948d4e1da151a3c25c7f22e87c22459fa3c223"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wmsb_split2 _ w b).",
            "VernacExtend",
            "0867624c9e5a36f6ba70929750c2272cbbdbc240"
        ],
        [
            "destruct (weq _ _).",
            "VernacExtend",
            "91a978205ba184aa2a04a7b9c2d990bd2bccbd5a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H in H0; discriminate.",
            "VernacExtend",
            "91d62f529d1ef1434058d28a4103101190912bbf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear -n.",
            "VernacExtend",
            "dba3a0d51422f97b7ce2c4622304c94095b6610d"
        ],
        [
            "remember (split2 sz 1 w) as ww; clear Heqww w.",
            "VernacExtend",
            "f9b5980b90f6f6b694a1462eb7657f7c7079bf4f"
        ],
        [
            "destruct (destruct_word_S ww) as [w [b E]].",
            "VernacExtend",
            "1c20811a2c9e47e89f278b038a3a6cca3a48c184"
        ],
        [
            "subst ww.",
            "VernacExtend",
            "78df3c3cb04bd1e994dd7bfbc3ff7eed0b3e3473"
        ],
        [
            "rewrite (word0 w) in *.",
            "VernacExtend",
            "e9a835e02d82fd030cb9ffec12286df39646630b"
        ],
        [
            "clear w.",
            "VernacExtend",
            "d2e1687c87c6d9e7a7b4532ffe9ec9506f85281e"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct b; congruence.",
            "VernacExtend",
            "5907f77d111c662a8f238bfc85dd638c3591b2fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_false_split2_wzero: forall sz (w: word (sz + 1)) b, wmsb w b = false -> wzero 1 = split2 sz 1 w.",
            "VernacStartTheoremProof",
            "1ec5c51b639624682121f02864fb070aa92941a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wmsb_split2 _ w b).",
            "VernacExtend",
            "0867624c9e5a36f6ba70929750c2272cbbdbc240"
        ],
        [
            "destruct (weq _ _); auto.",
            "VernacExtend",
            "60cf116bc64d9f88158487e5ef8ca788b00dd7d6"
        ],
        [
            "rewrite H in H0; discriminate.",
            "VernacExtend",
            "91d62f529d1ef1434058d28a4103101190912bbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_split1_sext: forall sz (w: word (sz + 1)), wmsb w false = wmsb (split1 _ 1 w) false -> exists sw, sext sw 1 = w.",
            "VernacStartTheoremProof",
            "0a100a471364d9742683873f0e382fcbee326e28"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "pose proof (combine_split _ _ w) as Hw.",
            "VernacExtend",
            "204db3532c96eb007c6b64debacef1bcf6a2d417"
        ],
        [
            "rewrite <-Hw; rewrite <-Hw in H at 2; clear Hw.",
            "VernacExtend",
            "a39c504fe62cf2353d40bca50fe0d9557ad6670d"
        ],
        [
            "rewrite split1_combine in H.",
            "VernacExtend",
            "8cd4a67d7447f0851cdad66504b652534e12c8b1"
        ],
        [
            "exists (split1 sz 1 w).",
            "VernacExtend",
            "0a91c860055529b9c2ad38d223c0a9b60e291503"
        ],
        [
            "destruct (wmsb (split1 sz 1 w) false).",
            "VernacExtend",
            "3cb3eaa1ff36feb339c3c74f1a4b4752f7cdd7a6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-wmsb_true_split2_wones with (b:= false) by assumption.",
            "VernacExtend",
            "b4085047b56e410200e9a44129fda35d8ea88502"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-wmsb_false_split2_wzero with (b:= false) by assumption.",
            "VernacExtend",
            "a02851dc0ba32f33d6b352f1e1057514437b80bf"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_combine_WO: forall sz (w: word sz) b, wmsb (combine w WO) b = wmsb w b.",
            "VernacStartTheoremProof",
            "73a14200fb5d24cf0fd960817c8cea5fc33ea0d4"
        ],
        [
            "dependent induction w; cbn; intros; auto.",
            "VernacExtend",
            "520c7f5ab065a4744cb5c5f701ac759e3e82243d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_combine: forall sz1 sz2 (w1: word sz1) (w2: word sz2) b1 b2, sz2 <> 0 -> wmsb (combine w1 w2) b1 = wmsb w2 b2.",
            "VernacStartTheoremProof",
            "6386dfd3917f858043d441a091a0f4f4e8fa689a"
        ],
        [
            "dependent induction w1; cbn; intros.",
            "VernacExtend",
            "bc72feaea29eff021ac6e7397c10c59afe09b9e4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using wmsb_default.",
            "VernacExtend",
            "1acacbcb6ca4fc876dd50e5fbd5c59aff31bac68"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using IHw1.",
            "VernacExtend",
            "e00d440276c453922c3cf21b57813a4768b0c0be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_combine_existT: forall sz (w: word sz) sz1 (w1: word sz1) sz2 (w2: word sz2) b1 b2, sz2 <> 0 -> existT word _ w = existT word _ (combine w1 w2) -> wmsb w b1 = wmsb w2 b2.",
            "VernacStartTheoremProof",
            "aa5deedb43b85eaaf825357bb9063bc502ff7c6e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (eq_sigT_fst H0); subst.",
            "VernacExtend",
            "6b3e35c515ada3235fc395d96c45c79e18c3177a"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "auto using wmsb_combine.",
            "VernacExtend",
            "64ab3f31aada14eccc69b17bece45d89824769d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_zext: forall sz (w: word sz) b n, n <> 0 -> wmsb (zext w n) b = false.",
            "VernacStartTheoremProof",
            "45b91789f1be61ad3b7c09391a95183fd5374c7a"
        ],
        [
            "destruct n; cbn; intros; [elim H; reflexivity|].",
            "VernacExtend",
            "91cdfa0e7539c95fa3ae9efdc0380b62c31c9ee8"
        ],
        [
            "unfold zext.",
            "VernacExtend",
            "571ac6df8d3bc3ed55381645bbbf7621a485ec4e"
        ],
        [
            "erewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "d9d31c7929bb98bd58ab1a26c4fa8fb82edd72c5"
        ],
        [
            "apply wmsb_wzero.",
            "VernacExtend",
            "29c90bef29908498aab686c92dce72de91018123"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_zext: forall sz (w: word sz) n, wordToN (zext w n) = wordToN w.",
            "VernacStartTheoremProof",
            "e764afbb982a4c503942d78517027b28a7a4ca88"
        ],
        [
            "dependent induction w; cbn; intros.",
            "VernacExtend",
            "d3bdf7ad6a00734b4fa7ca4334ce87bacfdb26bc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction n; cbn; intros; [reflexivity|].",
            "VernacExtend",
            "e9df3b94ea723018f297b0cc4e67526c12f2c646"
        ],
        [
            "unfold wzero in IHn; rewrite IHn; reflexivity.",
            "VernacExtend",
            "645d8b7622273838979c14b766510c82e6b23446"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHw; reflexivity.",
            "VernacExtend",
            "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_zext: forall sz (w: word sz) n, wordToNat (zext w n) = wordToNat w.",
            "VernacStartTheoremProof",
            "f5c4ed2b4daf7f9e3d12e0d83a4b796dd05cfdbe"
        ],
        [
            "dependent induction w; cbn; intros.",
            "VernacExtend",
            "d3bdf7ad6a00734b4fa7ca4334ce87bacfdb26bc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction n; cbn; intros; [reflexivity|].",
            "VernacExtend",
            "e9df3b94ea723018f297b0cc4e67526c12f2c646"
        ],
        [
            "unfold wzero in IHn; rewrite IHn; reflexivity.",
            "VernacExtend",
            "645d8b7622273838979c14b766510c82e6b23446"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHw; reflexivity.",
            "VernacExtend",
            "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zext_wordToNat_equal_Z: forall sz (w: word sz) n, n <> 0 -> wordToZ (zext w n) = Z.of_nat (wordToNat w).",
            "VernacStartTheoremProof",
            "e0778e00e46772dcec06d485b1976b9644ae866b"
        ],
        [
            "unfold wordToZ, zext; intros.",
            "VernacExtend",
            "f595b5d5bab0900212c6ca19ad88b7c363065ab8"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by assumption.",
            "VernacExtend",
            "cc042a56701f5b9f99e12cd145913839360b6dbc"
        ],
        [
            "rewrite wmsb_wzero.",
            "VernacExtend",
            "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
        ],
        [
            "replace (combine w (wzero n)) with (zext w n) by reflexivity.",
            "VernacExtend",
            "f3923ae9aa329bebde3f49a3331892b8d81b4954"
        ],
        [
            "rewrite wordToN_zext.",
            "VernacExtend",
            "42b75cda903b37c0d20d1c09583fbb18eb5ce342"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "rewrite <-nat_N_Z.",
            "VernacExtend",
            "2299e058450bb33bd2122bac1e7332da5959ff64"
        ],
        [
            "unfold Z.of_N; reflexivity.",
            "VernacExtend",
            "4b1e2d68dd2783cd980d2adba85c402adeb71828"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_WS_0: forall sz (w: word sz), wordToN w~0 = (2 * wordToN w)%N.",
            "VernacStartTheoremProof",
            "383d868494343c2d9469edc402dedcf0629db960"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_WS_1: forall sz (w: word sz), wordToN w~1 = (2 * wordToN w + 1)%N.",
            "VernacStartTheoremProof",
            "3911d8e9738b6559ab61acbb80a020977a6e26c9"
        ],
        [
            "intros; cbn.",
            "VernacExtend",
            "ddc6fde6fb08b39450a614e6863558c92134d30a"
        ],
        [
            "unfold N.succ_double.",
            "VernacExtend",
            "c1a873a66d8701fb8999e67bf821e2401009a7d4"
        ],
        [
            "destruct (wordToN w); reflexivity.",
            "VernacExtend",
            "dd15b9861f38ee6dad5810baaa7be1cdcf729efd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NToWord_WS_0: forall sz n, NToWord (S sz) (2 * n) = (NToWord sz n)~0.",
            "VernacStartTheoremProof",
            "f58e45e2d11098de481f272b8be9e31b05823821"
        ],
        [
            "destruct n; intros; [reflexivity|].",
            "VernacExtend",
            "8eea9d637276bdd587a4575bfa547c73778ddce9"
        ],
        [
            "replace (2 * N.pos p)%N with (N.pos (p~0)) by reflexivity.",
            "VernacExtend",
            "940588bf8398b074424c4b69974ada41daf8e486"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NToWord_WS_1: forall sz n, NToWord (S sz) (2 * n + 1) = (NToWord sz n)~1.",
            "VernacStartTheoremProof",
            "7931043f17c44c4858a0d3bcd581f9ef5d62411c"
        ],
        [
            "destruct n; intros; [reflexivity|].",
            "VernacExtend",
            "8eea9d637276bdd587a4575bfa547c73778ddce9"
        ],
        [
            "replace (2 * N.pos p)%N with (N.pos (p~0)) by reflexivity.",
            "VernacExtend",
            "940588bf8398b074424c4b69974ada41daf8e486"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_WS_0: forall sz (w: word sz), wneg w~0 = (wneg w)~0.",
            "VernacStartTheoremProof",
            "406afd212f1eae45f302f519249249e76ad5b2ff"
        ],
        [
            "unfold wneg; intros.",
            "VernacExtend",
            "a34976f5b901ec32494372ac0b8676bd0840c605"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "replace (Npow2 (S sz)) with (2 * Npow2 sz)%N by reflexivity.",
            "VernacExtend",
            "ff734bebd5594920846aa4be4a6a7929782a3b68"
        ],
        [
            "rewrite <-N.mul_sub_distr_l.",
            "VernacExtend",
            "0e83b06bd6900357c0f21a744c9a19e1c407dde3"
        ],
        [
            "apply NToWord_WS_0.",
            "VernacExtend",
            "8c09f82ac87f67ed3c46a7285415ef8174f90d20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NToWord_wordToN: forall sz (w: word sz), NToWord sz (wordToN w) = w.",
            "VernacStartTheoremProof",
            "c52a44a34955973525a2e331fb9c4583c6ede980"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToN_nat, NToWord_nat.",
            "VernacExtend",
            "77eb04f0019f0f8cf8472964839b7119e3ad1864"
        ],
        [
            "rewrite Nat2N.id.",
            "VernacExtend",
            "3e2c35edb80f3387d3351ff0bbe84c34f3a354ad"
        ],
        [
            "apply natToWord_wordToNat.",
            "VernacExtend",
            "6965d8129ca01f4ec46c0570dbca7760168b1b82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma roundTripN_0: forall sz, wordToN (NToWord sz 0) = 0%N.",
            "VernacStartTheoremProof",
            "e5a9b511dd23e8a8882f55a6c57e69f6ecd23719"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToN_nat, NToWord_nat.",
            "VernacExtend",
            "77eb04f0019f0f8cf8472964839b7119e3ad1864"
        ],
        [
            "rewrite roundTrip_0; reflexivity.",
            "VernacExtend",
            "fd0359da5b64fdfb7da55d0e8503e1801e5703f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_NToWord: forall sz n, exists k, wordToN (NToWord sz n) = (n - k * Npow2 sz)%N /\\ (k * Npow2 sz <= n)%N.",
            "VernacStartTheoremProof",
            "00a7eebe507b98476b1b7d475bd69e72257912a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToN_nat, NToWord_nat.",
            "VernacExtend",
            "77eb04f0019f0f8cf8472964839b7119e3ad1864"
        ],
        [
            "pose proof (wordToNat_natToWord sz (N.to_nat n)).",
            "VernacExtend",
            "43e714eb2610c9b8803a5c191c6735e8816ab627"
        ],
        [
            "destruct H as [k [? ?]].",
            "VernacExtend",
            "08ee928c6a9755251ee2d3d31e9a4e452ee95766"
        ],
        [
            "exists (N.of_nat k).",
            "VernacExtend",
            "20809018c906360b42c049257c59675839355381"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply N2Nat.inj.",
            "VernacExtend",
            "2423f651761c208bffa88c3ae2702e3349593bea"
        ],
        [
            "rewrite Nat2N.id, N2Nat.inj_sub, N2Nat.inj_mul.",
            "VernacExtend",
            "5c268e80df67821736e6a809dfbdefef31eb22f9"
        ],
        [
            "rewrite Nat2N.id.",
            "VernacExtend",
            "3e2c35edb80f3387d3351ff0bbe84c34f3a354ad"
        ],
        [
            "rewrite Npow2_nat.",
            "VernacExtend",
            "6b8f2867595074592501d9adb63ec571503d7aa8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nat_compare_le, Nat2N.inj_compare in H0.",
            "VernacExtend",
            "57f2fbc0dae61a6f46aa8469e17ecfac270b3b90"
        ],
        [
            "rewrite Nat2N.inj_mul, <-Npow2_nat in H0.",
            "VernacExtend",
            "d8d2462406ac1d74ae3aef335b8961b12737a24d"
        ],
        [
            "do 2 rewrite N2Nat.id in H0.",
            "VernacExtend",
            "1c2e8839dc878e9958922827d3598bccd4dff71a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_NToWord_2: forall sz n, (n < Npow2 sz)%N -> wordToN (NToWord sz n) = n.",
            "VernacStartTheoremProof",
            "6c0b1b364080ae2eefd1fba3a31751aa88e8d1de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToN_nat, NToWord_nat.",
            "VernacExtend",
            "77eb04f0019f0f8cf8472964839b7119e3ad1864"
        ],
        [
            "rewrite wordToNat_natToWord_2.",
            "VernacExtend",
            "c5e890b4b0bfb2920190a0f45fce0fa541e67542"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply N2Nat.id.",
            "VernacExtend",
            "731a9df7a7e4a13d8bf5eaf0ebda6ad343358761"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "apply Nlt_out; auto.",
            "VernacExtend",
            "a52e8d4bf88f283293b55b0378f2629d38562577"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_bound: forall sz (w: word sz), (wordToN w < Npow2 sz)%N.",
            "VernacStartTheoremProof",
            "785136014ea183bde9d695327d87b6ab4d8b27e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "apply Nlt_in.",
            "VernacExtend",
            "8b9ae7df6e078b1e67815929f5d406d636411e23"
        ],
        [
            "rewrite Npow2_nat, Nat2N.id.",
            "VernacExtend",
            "46d6e56f1ffe4e1a5688d672c1fa91ec335b2683"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_plus: forall sz (a b: word sz), (wordToN a + wordToN b < Npow2 sz)%N -> wordToN (a ^+ b) = (wordToN a + wordToN b)%N.",
            "VernacStartTheoremProof",
            "fc81eb9b6b108a74997dc38fb92a449853f36ad0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wplus, wordBin.",
            "VernacExtend",
            "477d7ffde8bb49f3ad10f9f97a5d56659efc6e9e"
        ],
        [
            "rewrite wordToN_NToWord_2 by assumption.",
            "VernacExtend",
            "9e72a0cedf3e5f8899ed6e49969173337a09de45"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_mult: forall sz (a b: word sz), (wordToN a * wordToN b < Npow2 sz)%N -> wordToN (a ^* b) = (wordToN a * wordToN b)%N.",
            "VernacStartTheoremProof",
            "8336a74c060d334000d988dfc5ab90282d742c96"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wmult, wordBin.",
            "VernacExtend",
            "9919dbca0e97e950b0e084c6ad6207668611441e"
        ],
        [
            "rewrite wordToN_NToWord_2 by assumption.",
            "VernacExtend",
            "9e72a0cedf3e5f8899ed6e49969173337a09de45"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wnot_def: forall sz (w: word sz), wnot w = NToWord sz (Npow2 sz - wordToN w - 1).",
            "VernacStartTheoremProof",
            "e24f21cc5fe7ed394a7b954e8fcf12ce12a8f48b"
        ],
        [
            "dependent induction w; cbn; [reflexivity|].",
            "VernacExtend",
            "45709d4900cd541390572daf954849dbb329579a"
        ],
        [
            "destruct b; cbn.",
            "VernacExtend",
            "231d5e6930cbe4fda915b0eb9398e7c98ad12bd1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHw; clear IHw.",
            "VernacExtend",
            "79e29c631028774a8197e34f5779e98b28a15080"
        ],
        [
            "rewrite <-NToWord_WS_0.",
            "VernacExtend",
            "bed813501f9e3524bfbc4e0137522daedec486b8"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct (Npow2 n); [reflexivity|].",
            "VernacExtend",
            "7c7d8206a555760d6564907cb714a3586b2f57d8"
        ],
        [
            "destruct (wordToN w).",
            "VernacExtend",
            "b7401fd0746e5def72bf414abc1e4789daf36c50"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (N.pos p~0) with (2 * N.pos p)%N.",
            "VernacExtend",
            "b256f8f81106a3d7ff193a28186de09b1b653b86"
        ],
        [
            "do 2 rewrite N.mul_sub_distr_l.",
            "VernacExtend",
            "e9504e0824f2889ebde41e6e6b35fe2ddfa52a61"
        ],
        [
            "do 2 rewrite <-N.sub_add_distr.",
            "VernacExtend",
            "68c8683cb876c680440d4e7a9c763fad4702570f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (N.pos p~0) with (2 * N.pos p)%N.",
            "VernacExtend",
            "b256f8f81106a3d7ff193a28186de09b1b653b86"
        ],
        [
            "change (N.pos p0~0) with (2 * N.pos p0)%N.",
            "VernacExtend",
            "21a308cec7f39f18c39430206c39ff46b29958c5"
        ],
        [
            "rewrite <-N.add_1_l.",
            "VernacExtend",
            "95287c56a92451f30199843f1523dc61b1c32bab"
        ],
        [
            "do 2 rewrite N.mul_sub_distr_l.",
            "VernacExtend",
            "e9504e0824f2889ebde41e6e6b35fe2ddfa52a61"
        ],
        [
            "do 2 rewrite <-N.sub_add_distr.",
            "VernacExtend",
            "68c8683cb876c680440d4e7a9c763fad4702570f"
        ],
        [
            "rewrite N.add_comm with (n:= 1%N).",
            "VernacExtend",
            "19710a878310b92f8b97fb7d0594518630ebf269"
        ],
        [
            "rewrite <-N.add_assoc.",
            "VernacExtend",
            "49b6984f4c7c7e7230d5bce1d0a51588765a81e3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHw; clear IHw.",
            "VernacExtend",
            "79e29c631028774a8197e34f5779e98b28a15080"
        ],
        [
            "rewrite <-NToWord_WS_1.",
            "VernacExtend",
            "825aae9e310c959ab58fc3c29b33ea767136e69d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "pose proof (wordToN_bound w).",
            "VernacExtend",
            "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
        ],
        [
            "remember (Npow2 n) as pn; destruct pn; [exfalso; eapply Npow2_not_zero; eauto|clear Heqpn].",
            "VernacExtend",
            "223c22db2c604f3e411d6919ece584f44c65a72c"
        ],
        [
            "destruct (wordToN w).",
            "VernacExtend",
            "b7401fd0746e5def72bf414abc1e4789daf36c50"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (N.pos p~0) with (2 * N.pos p)%N.",
            "VernacExtend",
            "b256f8f81106a3d7ff193a28186de09b1b653b86"
        ],
        [
            "do 2 rewrite N.mul_sub_distr_l.",
            "VernacExtend",
            "e9504e0824f2889ebde41e6e6b35fe2ddfa52a61"
        ],
        [
            "do 2 rewrite <-N.sub_add_distr.",
            "VernacExtend",
            "68c8683cb876c680440d4e7a9c763fad4702570f"
        ],
        [
            "destruct p; cbn; reflexivity.",
            "VernacExtend",
            "8e35d5b5717f0ec24a7e8d692d6c815f5828f8b7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (N.pos p~0) with (2 * N.pos p)%N.",
            "VernacExtend",
            "b256f8f81106a3d7ff193a28186de09b1b653b86"
        ],
        [
            "change (N.pos p0~0) with (2 * N.pos p0)%N.",
            "VernacExtend",
            "21a308cec7f39f18c39430206c39ff46b29958c5"
        ],
        [
            "rewrite N.mul_sub_distr_l.",
            "VernacExtend",
            "e2bce9870552ce59d4c388e25aacb9952d5be843"
        ],
        [
            "rewrite <-N.mul_sub_distr_l with (n:= N.pos p).",
            "VernacExtend",
            "6634acd25b2a395d356cb7b23bfc7f9037340fe0"
        ],
        [
            "assert (exists pp, N.pos p - N.pos p0 = N.pos pp)%N.",
            "VernacExtend",
            "75498c73296ed65230b25aace705f57ccf7a5859"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply N.sub_gt in H.",
            "VernacExtend",
            "9c997563cf965a0feec2efbf1d951e105ba07b53"
        ],
        [
            "destruct (N.pos p - N.pos p0)%N; [intuition idtac|].",
            "VernacExtend",
            "fcb97f2e546c7ffd384a92946a1c3b9ff86c2c56"
        ],
        [
            "eexists; reflexivity.",
            "VernacExtend",
            "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct H0; rewrite H0.",
            "VernacExtend",
            "45739089db606426c7e36a56dec2fa9212603aa7"
        ],
        [
            "destruct x; cbn; reflexivity.",
            "VernacExtend",
            "40a6bb8adb76338a2574862330e4964ba78cf1b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_wnot: forall sz (w: word sz), wnot w = wneg w ^- (natToWord _ 1).",
            "VernacStartTheoremProof",
            "d936fce4512ac9f5e12f60f5fc46d5ea4c752899"
        ],
        [
            "unfold wneg; intros.",
            "VernacExtend",
            "a34976f5b901ec32494372ac0b8676bd0840c605"
        ],
        [
            "rewrite wnot_def.",
            "VernacExtend",
            "5c9f2844d84a6d3da105a633efecf13782dd6b4e"
        ],
        [
            "destruct (weq w (wzero _)); subst.",
            "VernacExtend",
            "096f477f313fb46c31298f6b0f4d30ce84a6c078"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "unfold wzero; rewrite roundTrip_0; cbn.",
            "VernacExtend",
            "5c97433f3c45751a919a27f7131cb1c7a1315440"
        ],
        [
            "rewrite N.sub_0_r.",
            "VernacExtend",
            "64465c02f18656eb03a73685b3b400b2a94fd873"
        ],
        [
            "do 2 rewrite NToWord_nat.",
            "VernacExtend",
            "384c7473c4802862f10e60ec32aa8828b55b5f88"
        ],
        [
            "rewrite Npow2_nat, natToWord_pow2, N2Nat.inj_sub.",
            "VernacExtend",
            "12c82cc759fe5edfecc0243e7568bf23a3eaa548"
        ],
        [
            "change (N.to_nat 1%N) with 1.",
            "VernacExtend",
            "37fb71f7726de412152f155ca99377bb1b72869b"
        ],
        [
            "rewrite Npow2_nat.",
            "VernacExtend",
            "6b8f2867595074592501d9adb63ec571503d7aa8"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "rewrite wordToNat_natToWord_2 by (pose proof (zero_lt_pow2 sz); omega).",
            "VernacExtend",
            "7c5c1d7d5a2b10af72ebbbae823cbe79b5ba6056"
        ],
        [
            "unfold wminus.",
            "VernacExtend",
            "a28ef9ea5c70771d0ae63cebccd34e92e0b01900"
        ],
        [
            "rewrite wplus_unit, <-wones_wneg_one.",
            "VernacExtend",
            "4e6f1c57fe8988590bb9738fefb0d82cc02b317b"
        ],
        [
            "apply eq_sym, wones_pow2_minus_one.",
            "VernacExtend",
            "317d7f9a1bcb839a6cbc6ec931fe84103f61bc2b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (wordToN_bound w).",
            "VernacExtend",
            "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
        ],
        [
            "assert (Npow2 sz - wordToN w < Npow2 sz)%N.",
            "VernacExtend",
            "c5de1ab2779ece3d6ea3f96157e92a9f544de0f0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply N.sub_lt.",
            "VernacExtend",
            "a6f491fd9c011d4ea365fe3b7460fecf3dd303a2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply N.lt_le_incl; auto.",
            "VernacExtend",
            "fb383be90749717a61195c79509d0c83b3f6094b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (wordToN w <> 0)%N.",
            "VernacExtend",
            "9a00a450195afd89011196776f9ef7fc6385cce1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "replace 0%N with (wordToN (wzero sz)).",
            "VernacExtend",
            "56984e4e923916e5ffc3ace78fead8aa5641fcdc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro Hx; elim n.",
            "VernacExtend",
            "915806f47814685ab14b8c9acfe6e8a39c067a18"
        ],
        [
            "apply wordToN_inj; auto.",
            "VernacExtend",
            "39c7ad60e30523bd41ad4eb9903d0412a29322c8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "unfold wzero; rewrite roundTrip_0; reflexivity.",
            "VernacExtend",
            "740657d6fd2e47352bc80eba3b5a39b295d4a6c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "nomega.",
            "VernacExtend",
            "172a67512b5be7cabf23ff79ed79dc00750b182b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply N.sub_gt in H.",
            "VernacExtend",
            "9c997563cf965a0feec2efbf1d951e105ba07b53"
        ],
        [
            "remember (Npow2 sz - wordToN w)%N as p; clear Heqp.",
            "VernacExtend",
            "cdb582e4c5e876762a494fc879d69258f58f33ae"
        ],
        [
            "do 2 rewrite NToWord_nat.",
            "VernacExtend",
            "384c7473c4802862f10e60ec32aa8828b55b5f88"
        ],
        [
            "rewrite N2Nat.inj_sub.",
            "VernacExtend",
            "2edb5075c047fed620e497792e2ced03ce6b420e"
        ],
        [
            "change (N.to_nat 1%N) with 1.",
            "VernacExtend",
            "37fb71f7726de412152f155ca99377bb1b72869b"
        ],
        [
            "assert (N.to_nat p < pow2 sz)%nat by (rewrite <-Npow2_nat; apply Nlt_out; auto); clear H0.",
            "VernacExtend",
            "862c29efe7ead65ede70ab932c906e5227186fb2"
        ],
        [
            "assert (N.to_nat p <> 0) by (change 0 with (N.to_nat 0%N); intro Hx; elim H; apply N2Nat.inj; auto); clear H.",
            "VernacExtend",
            "bb2b062129834fd3abc705b95343b511f4b0075a"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "rewrite <-wordToNat_natToWord_pred.",
            "VernacExtend",
            "9ac215162a960424ac9cdf0c5b0d703392744586"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 rewrite wordToNat_natToWord_2 by omega.",
            "VernacExtend",
            "cde37a38feb8f949fccae153df74e7d1e3caa0f6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro Hx; elim H0.",
            "VernacExtend",
            "4f1e7b020653b55d191f60c2d719a52f86d93a16"
        ],
        [
            "apply natToWord_inj with (sz:= sz); try omega.",
            "VernacExtend",
            "bfa8ef1841a5e330601cf7d57af543808ae37a74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wzero_wneg: forall n, wneg (wzero n) = wzero n.",
            "VernacStartTheoremProof",
            "09c8a5b4e5feb6d352f3b47a2664082a9220e055"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wminus_inv (wzero n)).",
            "VernacExtend",
            "db187446aaaef463e32bf52e8de80a43e846e5f7"
        ],
        [
            "rewrite wplus_unit in H; auto.",
            "VernacExtend",
            "8ee32708889b7da150cdf2eee3f0e7f65727bcfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow2_wneg: forall sz, wneg (natToWord (S sz) (pow2 sz)) = natToWord (S sz) (pow2 sz).",
            "VernacStartTheoremProof",
            "a9140fd086ec483577adba143ea18e70bc727bd3"
        ],
        [
            "unfold wneg; intros.",
            "VernacExtend",
            "a34976f5b901ec32494372ac0b8676bd0840c605"
        ],
        [
            "rewrite <-Npow2_nat, <-NToWord_nat.",
            "VernacExtend",
            "3908d228ba8c128f1fa652bafed203ea21fcced9"
        ],
        [
            "rewrite wordToN_NToWord_2 by (apply Nlt_in; do 2 rewrite Npow2_nat; pose proof (zero_lt_pow2 sz); simpl; omega).",
            "VernacExtend",
            "607465486c6c30165c58487225be7748d6e710a7"
        ],
        [
            "rewrite Npow2_S.",
            "VernacExtend",
            "22081864f5a4d1297cc38f49898f7c4dbb66763b"
        ],
        [
            "f_equal; nomega.",
            "VernacExtend",
            "c2fb3c7c6a86db8b2503d10db738ddb86c4a4fad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_WS_1: forall sz (w: word sz), wneg w~1 = (wnot w)~1.",
            "VernacStartTheoremProof",
            "b7be0c22334311b7fe426bad04bf91edf0f91a39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "simpl; rewrite wnot_def.",
            "VernacExtend",
            "e510976779d939f10fdf1350f608a7eb602326be"
        ],
        [
            "unfold wneg.",
            "VernacExtend",
            "1f90be984b445475c1039b32ac87878d29f0f71e"
        ],
        [
            "rewrite wordToN_NToWord_2 by (apply N.sub_lt; [apply N.lt_le_incl, wordToN_bound|nomega]).",
            "VernacExtend",
            "72d77af3dfc6139cd6fb586a41dfbff02ba9357d"
        ],
        [
            "rewrite wordToN_NToWord_2.",
            "VernacExtend",
            "8a0683d8ddcae6b07999f79e8a371bc3b1f8be5b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_1.",
            "VernacExtend",
            "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
        ],
        [
            "change (Npow2 (S sz)) with (2 * Npow2 sz)%N.",
            "VernacExtend",
            "92b6c777a2a60ab193e69e45fe8d392e96dda78d"
        ],
        [
            "rewrite N.sub_add_distr.",
            "VernacExtend",
            "d6ce7c379be6d2fc7e84cd7a851cb34e0aaea624"
        ],
        [
            "rewrite <-N.mul_sub_distr_l.",
            "VernacExtend",
            "0e83b06bd6900357c0f21a744c9a19e1c407dde3"
        ],
        [
            "assert (Npow2 sz - wordToN w <> 0)%N by (pose proof (wordToN_bound w); nomega).",
            "VernacExtend",
            "9e5570787c167efeb46527da999635dbef480055"
        ],
        [
            "remember (Npow2 sz - wordToN w)%N as n; clear Heqn.",
            "VernacExtend",
            "3994dd7e862d38b2339af73bccfe62b7c73fdc53"
        ],
        [
            "destruct n; [intuition idtac|].",
            "VernacExtend",
            "10a5c90d374c7c9e85cc0ad3ba67274372d00cd5"
        ],
        [
            "remember (N.pos p - 1)%N as pp; destruct pp.",
            "VernacExtend",
            "7d3ca771c2535147981d5993704459a7e2cb6e92"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply eq_sym, N.sub_0_le in Heqpp.",
            "VernacExtend",
            "eb42557c2afb780b7c0efa11c547cf6bf3d52f1f"
        ],
        [
            "apply N.le_1_r in Heqpp; destruct Heqpp; [discriminate|].",
            "VernacExtend",
            "bbd98b2596392f5d7159e1e259395cec39d36381"
        ],
        [
            "rewrite H0; reflexivity.",
            "VernacExtend",
            "cd5b756ada779c32b8ad69248fcdcefea6ce8479"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (N.pos p0~0) with (2 * N.pos p0)%N.",
            "VernacExtend",
            "21a308cec7f39f18c39430206c39ff46b29958c5"
        ],
        [
            "rewrite Heqpp.",
            "VernacExtend",
            "d5c36802f6107aeed430a0c0febd5b49de7a1acb"
        ],
        [
            "rewrite <-N.add_1_r.",
            "VernacExtend",
            "f3a7260973f96c79821815720771deae822134e6"
        ],
        [
            "rewrite N.mul_sub_distr_l.",
            "VernacExtend",
            "e2bce9870552ce59d4c388e25aacb9952d5be843"
        ],
        [
            "clear; destruct p; cbn; reflexivity.",
            "VernacExtend",
            "161a656827910b84ca2ed991bf0641bdf9e5991f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-N.sub_add_distr.",
            "VernacExtend",
            "7b4dc0907cea8f89a186717eba15842d5e3107e8"
        ],
        [
            "apply N.sub_lt; [|nomega].",
            "VernacExtend",
            "a9bb2cf5fc13d8c190b8c81ebe5ef4be279858a4"
        ],
        [
            "pose proof (wordToN_bound w).",
            "VernacExtend",
            "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
        ],
        [
            "apply N.le_succ_l in H.",
            "VernacExtend",
            "924c5a9f46abd141344e545f5e51aff20c172513"
        ],
        [
            "rewrite N.add_1_r; assumption.",
            "VernacExtend",
            "d588d3a9c3cdedf753bc6a574f30cd5d05152f35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_WS_0: forall sz (w: word sz), wordToZ w~0 = (2 * wordToZ w)%Z.",
            "VernacStartTheoremProof",
            "c5efcee5a64504a52b2e0c2ded6fe0154aef7d6b"
        ],
        [
            "dependent destruction w; [reflexivity|].",
            "VernacExtend",
            "f150f52d120182c9ddb5372540cd783155225074"
        ],
        [
            "unfold wordToZ.",
            "VernacExtend",
            "d3dfb452747490cdd93b9c608b345d2115d7c1be"
        ],
        [
            "rewrite wmsb_ws.",
            "VernacExtend",
            "9135f0a4891d22b6e41858e48d163ecc1869a774"
        ],
        [
            "destruct (wmsb (WS b w) false).",
            "VernacExtend",
            "11ba91bfefe11ab57d7f36aa2e1330c844190b03"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_WS_0.",
            "VernacExtend",
            "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "destruct (wordToN (wneg (WS b w))); cbn; omega.",
            "VernacExtend",
            "3170f8abc5f120d84e57464dfbd707c3e4a49f32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "destruct (wordToN (WS b w)); cbn; omega.",
            "VernacExtend",
            "f9a40b0490d98b79d1b22714638253db5e388f4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_WS_1: forall sz (w: word (S sz)), wordToZ w~1 = (2 * wordToZ w + 1)%Z.",
            "VernacStartTheoremProof",
            "2010ff0b82b4b8adf1dc0cea4dc8b43a833a3589"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (destruct_word_S w) as [v [b E]].",
            "VernacExtend",
            "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "clear w E.",
            "VernacExtend",
            "fbba53cd087ddf99bbb31f221ab32033a8413ff2"
        ],
        [
            "rename v into w.",
            "VernacExtend",
            "79df5d37f4de91d7ebed57c9e4514bde3bcb5690"
        ],
        [
            "unfold wordToZ.",
            "VernacExtend",
            "d3dfb452747490cdd93b9c608b345d2115d7c1be"
        ],
        [
            "rewrite wmsb_ws.",
            "VernacExtend",
            "9135f0a4891d22b6e41858e48d163ecc1869a774"
        ],
        [
            "remember (wmsb (WS b w) false) as msb.",
            "VernacExtend",
            "427137ce919293a3a1f1f746476879f78a924386"
        ],
        [
            "destruct msb.",
            "VernacExtend",
            "1a6440c8926b5b29bcb81c8744f032766a165f1c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_WS_1.",
            "VernacExtend",
            "0131b8bca0f56fd7f5b311285693c0cc0ec80969"
        ],
        [
            "rewrite wordToN_WS_1.",
            "VernacExtend",
            "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
        ],
        [
            "rewrite wnot_def.",
            "VernacExtend",
            "5c9f2844d84a6d3da105a633efecf13782dd6b4e"
        ],
        [
            "unfold wneg.",
            "VernacExtend",
            "1f90be984b445475c1039b32ac87878d29f0f71e"
        ],
        [
            "assert (Npow2 (S sz) - wordToN (WS b w) <> 0)%N.",
            "VernacExtend",
            "a90f8ad4040bb273f2e269410d4eafcc392076f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "pose proof (wordToN_bound (WS b w)); nomega.",
            "VernacExtend",
            "0bbc42eeabf7fb48cddba4eda18c47cc21e9fded"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Npow2 (S sz) - wordToN (WS b w) < Npow2 (S sz))%N.",
            "VernacExtend",
            "cc3fc1738f411492e06080dd1e4d325ae7b37eaa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply N.sub_lt.",
            "VernacExtend",
            "a6f491fd9c011d4ea365fe3b7460fecf3dd303a2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply N.lt_le_incl, wordToN_bound.",
            "VernacExtend",
            "486d2ba2f92305a4ec7267d6ea6487f68850f112"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (wordToN (WS b w) <> 0)%N.",
            "VernacExtend",
            "143eea745cd1302f9f927d8da62633d227b436a7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "replace 0%N with (wordToN (wzero (S sz))).",
            "VernacExtend",
            "c7b0438b20b0554b3841496e1888ef783a9b04fc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro Hx.",
            "VernacExtend",
            "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
        ],
        [
            "apply wordToN_inj in Hx.",
            "VernacExtend",
            "dd91158414736fa4862b9f03a516b8cb7842642a"
        ],
        [
            "rewrite Hx in Heqmsb.",
            "VernacExtend",
            "f197e073a0b94fcfae2db4e02fea7c007b6bbfa1"
        ],
        [
            "rewrite wmsb_wzero in Heqmsb; discriminate.",
            "VernacExtend",
            "86d16c66c8d029d2f12db94b5ca58621bc53d421"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "unfold wzero; rewrite roundTrip_0; reflexivity.",
            "VernacExtend",
            "740657d6fd2e47352bc80eba3b5a39b295d4a6c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "nomega.",
            "VernacExtend",
            "172a67512b5be7cabf23ff79ed79dc00750b182b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "remember (Npow2 (S sz) - wordToN (WS b w))%N as n; clear Heqn.",
            "VernacExtend",
            "d4dc34dc67e898b0b93d02d48d7b3d7839a94d8c"
        ],
        [
            "rewrite wordToN_NToWord_2 by nomega.",
            "VernacExtend",
            "1dd50baefedbab3d0dc81dd9b225893ab83b84dd"
        ],
        [
            "rewrite wordToN_NToWord_2 by nomega.",
            "VernacExtend",
            "1dd50baefedbab3d0dc81dd9b225893ab83b84dd"
        ],
        [
            "destruct n; [intuition idtac|].",
            "VernacExtend",
            "10a5c90d374c7c9e85cc0ad3ba67274372d00cd5"
        ],
        [
            "destruct p; cbn; reflexivity.",
            "VernacExtend",
            "8e35d5b5717f0ec24a7e8d692d6c815f5828f8b7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_1.",
            "VernacExtend",
            "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
        ],
        [
            "destruct (wordToN (WS b w)); cbn; omega.",
            "VernacExtend",
            "f9a40b0490d98b79d1b22714638253db5e388f4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_WS_1': forall sz (w: word (sz + 1)), wordToZ w~1 = (2 * wordToZ w + 1)%Z.",
            "VernacStartTheoremProof",
            "26069b4e6ced85073044d04ca259f037cc45fe76"
        ],
        [
            "intro sz.",
            "VernacExtend",
            "e2490ae282e79bfff6a60941b63f56558206c907"
        ],
        [
            "replace (sz + 1) with (S sz) by omega.",
            "VernacExtend",
            "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToZ_WS_1.",
            "VernacExtend",
            "509ff8f812d3db9713d743d3b9462b775b6f7876"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_inj: forall sz (w1 w2: word sz), wordToZ w1 = wordToZ w2 -> w1 = w2.",
            "VernacStartTheoremProof",
            "6ead3abda4419ba555ddb80393f85c5a4e4562aa"
        ],
        [
            "unfold wordToZ; intros.",
            "VernacExtend",
            "5714496e388c686b08c1c9ac23abf2832594244a"
        ],
        [
            "remember (wmsb w1 false) as msb1.",
            "VernacExtend",
            "34dc423c16e49fca956d11884559a12585145fcb"
        ],
        [
            "remember (wmsb w2 false) as msb2.",
            "VernacExtend",
            "cc78f9ae2d5470cd25330ae1998804c720ef0ad6"
        ],
        [
            "destruct msb1, msb2.",
            "VernacExtend",
            "c63494d956bec7c8f4545eda8e35d8bb5297bef0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wordToN (wneg w1)) as wn1.",
            "VernacExtend",
            "acb37b0ba39b804447c76dcfa07c5539894a24a6"
        ],
        [
            "remember (wordToN (wneg w2)) as wn2.",
            "VernacExtend",
            "92cabf7724204fa8eb1153a26b485ea8ebd758b8"
        ],
        [
            "destruct wn1, wn2; try discriminate.",
            "VernacExtend",
            "bda18f6d4da544e69b21362651b18c52b3214359"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (wneg w1 = wneg w2).",
            "VernacExtend",
            "4e5dd35d098323c5988d6fa10b40894462de4aba"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "rewrite <-Heqwn1, <-Heqwn2; reflexivity.",
            "VernacExtend",
            "2f0445cd373deed225898122d78bc9a1a437b9e4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w1).",
            "VernacExtend",
            "8e8adbcd68cc6d4ada0f0f028949eb00c1773018"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w2).",
            "VernacExtend",
            "7e035fdddc2c245d9ecd2fb4240d613e18fc0119"
        ],
        [
            "rewrite H0; reflexivity.",
            "VernacExtend",
            "cd5b756ada779c32b8ad69248fcdcefea6ce8479"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "assert (wneg w1 = wneg w2).",
            "VernacExtend",
            "4e5dd35d098323c5988d6fa10b40894462de4aba"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "rewrite <-Heqwn1, <-Heqwn2; reflexivity.",
            "VernacExtend",
            "2f0445cd373deed225898122d78bc9a1a437b9e4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w1).",
            "VernacExtend",
            "8e8adbcd68cc6d4ada0f0f028949eb00c1773018"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w2).",
            "VernacExtend",
            "7e035fdddc2c245d9ecd2fb4240d613e18fc0119"
        ],
        [
            "rewrite H; reflexivity.",
            "VernacExtend",
            "1eef9b63d851b99cfa44117acf0ddd958095123d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wordToN (wneg w1)) as wn1.",
            "VernacExtend",
            "acb37b0ba39b804447c76dcfa07c5539894a24a6"
        ],
        [
            "remember (wordToN w2) as wn2.",
            "VernacExtend",
            "06b6e60e67a8cc5c2ec72b0f47820477b86bb0fb"
        ],
        [
            "destruct wn1, wn2; try discriminate.",
            "VernacExtend",
            "bda18f6d4da544e69b21362651b18c52b3214359"
        ],
        [
            "rewrite <-wordToN_wzero with (sz:= sz) in Heqwn1, Heqwn2.",
            "VernacExtend",
            "833be3970f96e315ce87d3941a81904028611476"
        ],
        [
            "apply wordToN_inj in Heqwn1.",
            "VernacExtend",
            "2ba6e7656c7e80e336aa6d28a02073af1b53990e"
        ],
        [
            "apply wordToN_inj in Heqwn2.",
            "VernacExtend",
            "ebfc2ffb00f915504c64ac3aa556d9dcf13e79e4"
        ],
        [
            "assert (w1 = wzero sz).",
            "VernacExtend",
            "e7e8bd59cf70644813d7d4dda5445e2a2becb072"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w1), <-Heqwn1.",
            "VernacExtend",
            "1844a66ff832f5233fa61a6cc5fd23958991f756"
        ],
        [
            "apply wzero_wneg.",
            "VernacExtend",
            "2f52d885d4ae512968b68e969a55b4469c2aad87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst; reflexivity.",
            "VernacExtend",
            "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wordToN w1) as wn1.",
            "VernacExtend",
            "4f027bfa8ea113ff2002b1c7d8c546bd02752164"
        ],
        [
            "remember (wordToN (wneg w2)) as wn2.",
            "VernacExtend",
            "92cabf7724204fa8eb1153a26b485ea8ebd758b8"
        ],
        [
            "destruct wn1, wn2; try discriminate.",
            "VernacExtend",
            "bda18f6d4da544e69b21362651b18c52b3214359"
        ],
        [
            "rewrite <-wordToN_wzero with (sz:= sz) in Heqwn1, Heqwn2.",
            "VernacExtend",
            "833be3970f96e315ce87d3941a81904028611476"
        ],
        [
            "apply wordToN_inj in Heqwn1.",
            "VernacExtend",
            "2ba6e7656c7e80e336aa6d28a02073af1b53990e"
        ],
        [
            "apply wordToN_inj in Heqwn2.",
            "VernacExtend",
            "ebfc2ffb00f915504c64ac3aa556d9dcf13e79e4"
        ],
        [
            "assert (w2 = wzero sz).",
            "VernacExtend",
            "fa63030447c66887ccfb144838b1940a0418c133"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w2), <-Heqwn2.",
            "VernacExtend",
            "5a30a805ea5ec7bfc1f04bf8daa5bf3f39b25771"
        ],
        [
            "apply wzero_wneg.",
            "VernacExtend",
            "2f52d885d4ae512968b68e969a55b4469c2aad87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst; reflexivity.",
            "VernacExtend",
            "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wordToN w1) as wn1.",
            "VernacExtend",
            "4f027bfa8ea113ff2002b1c7d8c546bd02752164"
        ],
        [
            "remember (wordToN w2) as wn2.",
            "VernacExtend",
            "06b6e60e67a8cc5c2ec72b0f47820477b86bb0fb"
        ],
        [
            "destruct wn1, wn2; try discriminate.",
            "VernacExtend",
            "bda18f6d4da544e69b21362651b18c52b3214359"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <-wordToN_wzero with (sz:= sz) in Heqwn1, Heqwn2.",
            "VernacExtend",
            "833be3970f96e315ce87d3941a81904028611476"
        ],
        [
            "rewrite Heqwn1 in Heqwn2.",
            "VernacExtend",
            "19844dfe9827d08f2467c947e172da455c3114b8"
        ],
        [
            "apply wordToN_inj in Heqwn2; auto.",
            "VernacExtend",
            "e301f8a942c454bcbafeb1039fa154f9544c1c50"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "rewrite Heqwn1 in Heqwn2.",
            "VernacExtend",
            "19844dfe9827d08f2467c947e172da455c3114b8"
        ],
        [
            "apply wordToN_inj in Heqwn2; auto.",
            "VernacExtend",
            "e301f8a942c454bcbafeb1039fa154f9544c1c50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wones: forall sz, sz <> 0 -> wordToZ (wones sz) = (-1)%Z.",
            "VernacStartTheoremProof",
            "ccb6e993d36bb7f1bf7da0c46a90f544d8f3738b"
        ],
        [
            "induction sz; intros; [elim H; reflexivity|].",
            "VernacExtend",
            "5e719296056aa947b3ea3d9fd8dc4df8f5591002"
        ],
        [
            "simpl; destruct sz; [reflexivity|].",
            "VernacExtend",
            "85ce619743ae4f1cc58f8f60c15fe146c2fa84be"
        ],
        [
            "rewrite wordToZ_WS_1.",
            "VernacExtend",
            "04936b6b8b315f8e86736a056f7243fe08688616"
        ],
        [
            "rewrite IHsz by discriminate.",
            "VernacExtend",
            "3424668523b4c2cb174ccf97aa23d14206ce50ab"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_eq_rect: forall sz (w: word sz) nsz Hsz, wordToNat (eq_rect _ word w nsz Hsz) = wordToNat w.",
            "VernacStartTheoremProof",
            "96b1465276ba8bd4d269413eade13f38db786aa9"
        ],
        [
            "intros; subst; simpl; reflexivity.",
            "VernacExtend",
            "31544af7523b6fbff9496892fbf01c24e408519e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_existT: forall sz1 (w1: word sz1) sz2 (w2: word sz2) (Hsz: sz1 = sz2), wordToNat w1 = wordToNat w2 -> existT word _ w1 = existT word _ w2.",
            "VernacStartTheoremProof",
            "bb72cf4438bfd4fcd0e489c8d41241546f0146fa"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "apply wordToNat_inj in H; subst.",
            "VernacExtend",
            "6d5bfba5e0d078f2750710b7d04c9ccec0e1d33e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_wordToNat: forall sz1 (w1: word sz1) sz2 (w2: word sz2), existT word _ w1 = existT word _ w2 -> wordToNat w1 = wordToNat w2.",
            "VernacStartTheoremProof",
            "31949822d704b74e5cc3b170c49912bbd72df756"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (eq_sigT_fst H); subst.",
            "VernacExtend",
            "fa8321e6ab568aa2d486b53db19befb41b83277b"
        ],
        [
            "destruct_existT; reflexivity.",
            "VernacExtend",
            "60030bd161e378ea07846bdbd7e38e88972bf1cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_eq_rect: forall sz (w: word sz) nsz Hsz, wordToZ (eq_rect _ word w nsz Hsz) = wordToZ w.",
            "VernacStartTheoremProof",
            "69b9d86b85140a4a05cca6f427479aecf9f068f2"
        ],
        [
            "intros; subst; simpl; reflexivity.",
            "VernacExtend",
            "31544af7523b6fbff9496892fbf01c24e408519e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_existT: forall sz1 (w1: word sz1) sz2 (w2: word sz2) (Hsz: sz1 = sz2), wordToZ w1 = wordToZ w2 -> existT word _ w1 = existT word _ w2.",
            "VernacStartTheoremProof",
            "54bedfff02af1c4325bf74287b02fda7b77ef30c"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "apply wordToZ_inj in H; subst.",
            "VernacExtend",
            "7d44589d5b62fd4ad3fa8bccd575272f9aedaa33"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_wordToZ: forall sz1 (w1: word sz1) sz2 (w2: word sz2), existT word _ w1 = existT word _ w2 -> wordToZ w1 = wordToZ w2.",
            "VernacStartTheoremProof",
            "6a6b03190d32892814b8b8a9ce35ceb5b4c459cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (eq_sigT_fst H); subst.",
            "VernacExtend",
            "fa8321e6ab568aa2d486b53db19befb41b83277b"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_WS_0: forall sz (w1 w2: word sz) b, WS b (w1 ^+ w2) = WS b w1 ^+ w2~0.",
            "VernacStartTheoremProof",
            "ace0376e7c82707c48a6acea7feaf1ccd7de1090"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wplus, wordBin; intros.",
            "VernacExtend",
            "34379b67bf5442bfb5e6baf50720b54b801e8214"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_1.",
            "VernacExtend",
            "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
        ],
        [
            "rewrite <-N.add_assoc.",
            "VernacExtend",
            "49b6984f4c7c7e7230d5bce1d0a51588765a81e3"
        ],
        [
            "rewrite N.add_comm with (n:= 1%N).",
            "VernacExtend",
            "19710a878310b92f8b97fb7d0594518630ebf269"
        ],
        [
            "rewrite N.add_assoc.",
            "VernacExtend",
            "ac79df063d11045f3f6af6d562f2a0abed616f8c"
        ],
        [
            "rewrite <-N.mul_add_distr_l.",
            "VernacExtend",
            "d36d1aa42754388f4c3687fffb61407746993e6c"
        ],
        [
            "apply eq_sym, NToWord_WS_1.",
            "VernacExtend",
            "b4749234363925b517123040be0edf455a7388b1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "rewrite <-N.mul_add_distr_l.",
            "VernacExtend",
            "d36d1aa42754388f4c3687fffb61407746993e6c"
        ],
        [
            "apply eq_sym, NToWord_WS_0.",
            "VernacExtend",
            "1baffa8f4d445d8efa719ddce43b12d952783808"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary wplus_WS_0': forall sz (w1 w2: word sz) b, WS b (w1 ^+ w2) = w1~0 ^+ WS b w2.",
            "VernacStartTheoremProof",
            "6f672b259652e82cb432daed719fa676d7684391"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wplus_comm with (x:= w1).",
            "VernacExtend",
            "3d7eb3241bdfca1b1958eb2163f070a03cb1b00c"
        ],
        [
            "rewrite wplus_comm with (x:= w1~0).",
            "VernacExtend",
            "669373c0850b939ea7675f611aca37765bb8867c"
        ],
        [
            "apply wplus_WS_0.",
            "VernacExtend",
            "ab1f348bf0d4b5fd7e8f8a8a7465e0ecccd4e0e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wpow2_pow2: forall sz, wordToNat (wpow2 sz) = pow2 sz.",
            "VernacStartTheoremProof",
            "80b0efddfc516fd391f174b20ae0ef6aa8b30e34"
        ],
        [
            "induction sz; simpl; intros; [reflexivity|].",
            "VernacExtend",
            "69a9af99e3fa932a05a7cfd9b6e3c7e2ef26a7f3"
        ],
        [
            "rewrite IHsz.",
            "VernacExtend",
            "0e7c5794acb2a369001382a34376ab478b933f3b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wpow2_Npow2: forall sz, wordToN (wpow2 sz) = Npow2 sz.",
            "VernacStartTheoremProof",
            "e341f41acb7e4bf5a1f57ed3c5cffa3b198e4d90"
        ],
        [
            "induction sz; simpl; intros; [reflexivity|].",
            "VernacExtend",
            "69a9af99e3fa932a05a7cfd9b6e3c7e2ef26a7f3"
        ],
        [
            "rewrite IHsz; reflexivity.",
            "VernacExtend",
            "d654f2fa62b1e7aec65001720dcb37e012f653ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wpow2_wneg: forall sz, wneg (wpow2 sz) = wpow2 sz.",
            "VernacStartTheoremProof",
            "f0b9079803bbcd129cca574d7f45f9722a3f0c55"
        ],
        [
            "induction sz; simpl; intros; [reflexivity|].",
            "VernacExtend",
            "69a9af99e3fa932a05a7cfd9b6e3c7e2ef26a7f3"
        ],
        [
            "rewrite wneg_WS_0.",
            "VernacExtend",
            "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
        ],
        [
            "rewrite IHsz; reflexivity.",
            "VernacExtend",
            "d654f2fa62b1e7aec65001720dcb37e012f653ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wpow2_wmsb: forall sz, wmsb (wpow2 sz) false = true.",
            "VernacStartTheoremProof",
            "738556241fcba45987092fd334f109d9e24d34a3"
        ],
        [
            "induction sz; simpl; intros; auto.",
            "VernacExtend",
            "cebce3cb22dd8ae2bf6d054226e70917f46557ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wnot: forall sz (w: word (S sz)) b1 b2, wmsb (wnot w) b1 = negb (wmsb w b2).",
            "VernacStartTheoremProof",
            "06b50f074467f40e5d63983977893d4506ed69df"
        ],
        [
            "apply (induct_word_S (fun sz w => forall b1 b2, wmsb (wnot w) b1 = negb (wmsb w b2))); intros.",
            "VernacExtend",
            "170afabbb9a17cc055333f8a7f35daabe152675e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (H true true).",
            "VernacExtend",
            "7ae24e821480c319f87d4ead7efa91c51a5d9701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wneg_true: forall sz (w: word (S sz)), w <> wpow2 sz -> forall b1 b2, wmsb w b1 = true -> wmsb (wneg w) b2 = false.",
            "VernacStartTheoremProof",
            "20b6931b4103b745a5e27ed8c0126fe76b91c0b8"
        ],
        [
            "apply (induct_word_S (fun sz w => w <> wpow2 sz -> forall b1 b2, wmsb w b1 = true -> wmsb (^~ w) b2 = false)); intros; [simpl in *; subst; elim H; reflexivity|].",
            "VernacExtend",
            "9ebe21d5c3b21d21bc44f563ba5b3f1fd4d7a7f3"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_WS_1.",
            "VernacExtend",
            "0131b8bca0f56fd7f5b311285693c0cc0ec80969"
        ],
        [
            "rewrite wmsb_ws.",
            "VernacExtend",
            "9135f0a4891d22b6e41858e48d163ecc1869a774"
        ],
        [
            "rewrite wmsb_wnot with (b2:= false).",
            "VernacExtend",
            "39ae7ce40dba75d7f4c01e2265e6bfdd1dff6587"
        ],
        [
            "simpl; apply negb_false_iff; assumption.",
            "VernacExtend",
            "97791a0e9fe7d85ff3bd9f887759bc6f69187447"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_WS_0.",
            "VernacExtend",
            "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
        ],
        [
            "eapply H with (b1 := false); eauto.",
            "VernacExtend",
            "7278f3a1925413c3133883e67b3e93d81d0cd9f6"
        ],
        [
            "intro Hx.",
            "VernacExtend",
            "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "clear -Hx.",
            "VernacExtend",
            "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
        ],
        [
            "simpl; rewrite Hx; reflexivity.",
            "VernacExtend",
            "f755a921abd23fbd85cf0bde35e3625fb5a4c04a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wneg_false: forall sz (w: word (S sz)), wordToNat w <> 0 -> forall b1 b2, wmsb w b1 = false -> wmsb (wneg w) b2 = true.",
            "VernacStartTheoremProof",
            "87cc6809dc2f30aad6612e5bdad4b13b940a4044"
        ],
        [
            "apply (induct_word_S (fun sz w => #w <> 0 -> forall b1 b2, wmsb w b1 = false -> wmsb (^~ w) b2 = true)); intros; [simpl in *; subst; elim H; reflexivity|].",
            "VernacExtend",
            "71114773207c297128567d394b8a9fdce1fbbf6c"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_WS_1.",
            "VernacExtend",
            "0131b8bca0f56fd7f5b311285693c0cc0ec80969"
        ],
        [
            "rewrite wmsb_ws.",
            "VernacExtend",
            "9135f0a4891d22b6e41858e48d163ecc1869a774"
        ],
        [
            "rewrite wmsb_ws in H1.",
            "VernacExtend",
            "f5841de688ee5ce33eb7864ab7a5f1d71384d493"
        ],
        [
            "rewrite wmsb_wnot with (b2:= false).",
            "VernacExtend",
            "39ae7ce40dba75d7f4c01e2265e6bfdd1dff6587"
        ],
        [
            "apply negb_true_iff; assumption.",
            "VernacExtend",
            "8d426d86f3be46c97c23bb8249e19ed2198334a2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_WS_0.",
            "VernacExtend",
            "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
        ],
        [
            "eapply H with (b1:= false); eauto.",
            "VernacExtend",
            "7278f3a1925413c3133883e67b3e93d81d0cd9f6"
        ],
        [
            "intro Hx; elim H0.",
            "VernacExtend",
            "4f1e7b020653b55d191f60c2d719a52f86d93a16"
        ],
        [
            "clear -Hx.",
            "VernacExtend",
            "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
        ],
        [
            "simpl in *; omega.",
            "VernacExtend",
            "2e505872d892cb5022bef5b246ceb26cdd84b133"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zext_WO_wzero: forall n, zext WO n = wzero n.",
            "VernacStartTheoremProof",
            "8d946abadfa82c85836de700f43c3ee9dd7808f9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wneg_zext: forall sz (w: word sz) b n, n <> 0 -> wordToNat w <> 0 -> wmsb (wneg (zext w n)) b = true.",
            "VernacStartTheoremProof",
            "182809e1670370fe29e19540beb36506c4032102"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "dependent destruction w; [elim H0; reflexivity|].",
            "VernacExtend",
            "f07c7a70de7d2fd7ea0572863eb7f3d8e6ef733a"
        ],
        [
            "apply wmsb_wneg_false with (b1:= false).",
            "VernacExtend",
            "a62b7dd61bb4ab6312211e02904aede2e4201421"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-wordToNat_zext with (n:= n0) in H0.",
            "VernacExtend",
            "513742b16149f3e2f904e42e89832a29ba721221"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply wmsb_zext; assumption.",
            "VernacExtend",
            "88ee81d191eb3696ab0fa6ef82e0b621e12d28ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_WS_pos: forall sz (w1 w2: word (S sz)), wordToZ (WS true w1 ^- WS false w2) = (2 * wordToZ (w1 ^- w2) + 1)%Z.",
            "VernacStartTheoremProof",
            "0c9ac0e90d3f17529e47526eec70278fbad94f69"
        ],
        [
            "unfold wminus; intros.",
            "VernacExtend",
            "ccd4a9370a1dc5e4eece2050c4ea534430fd00e5"
        ],
        [
            "cbn.",
            "VernacExtend",
            "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
        ],
        [
            "rewrite wneg_WS_0.",
            "VernacExtend",
            "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
        ],
        [
            "rewrite <-wplus_WS_0.",
            "VernacExtend",
            "4d64bafedd170a092af801e82da7b8dadd5bb58d"
        ],
        [
            "rewrite wordToZ_WS_1.",
            "VernacExtend",
            "04936b6b8b315f8e86736a056f7243fe08688616"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_WS_pos': forall sz (w1 w2: word (sz + 1)), wordToZ (WS true w1 ^- WS false w2) = (2 * wordToZ (w1 ^- w2) + 1)%Z.",
            "VernacStartTheoremProof",
            "7d185be98b9eb7e27cbdca130fd48d3de8555d84"
        ],
        [
            "intro sz.",
            "VernacExtend",
            "e2490ae282e79bfff6a60941b63f56558206c907"
        ],
        [
            "replace (sz + 1) with (S sz) by omega.",
            "VernacExtend",
            "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wminus_WS_pos.",
            "VernacExtend",
            "4bc11850bf9d35888c5896e463f626571e4bdcb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wtl_combine: forall (x: word 1) sz (y: word sz), wtl (combine x y) = y.",
            "VernacStartTheoremProof",
            "63230e2bab098bd88c34430132d051e4ad899912"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (destruct_word_S x) as [v [b E]].",
            "VernacExtend",
            "659ab9fba21576e0e2382ac071d7604f3f89fc18"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "rewrite (word0 v).",
            "VernacExtend",
            "3ef0992b1a5054242ed6834b204f196742764e97"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_combine: forall sz (w: word sz) n, extz w n = combine (natToWord n 0) w.",
            "VernacStartTheoremProof",
            "9467668f5e19693da633a592931542d85f6922c0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_assoc_existT: forall sz1 (w1: word sz1) sz2 (w2: word sz2) sz3 (w3: word sz3), existT word (sz1 + (sz2 + sz3)) (combine w1 (combine w2 w3)) = existT word (sz1 + sz2 + sz3) (combine (combine w1 w2) w3).",
            "VernacStartTheoremProof",
            "86433c18415fa962ebf66aa69171d5f8ab6d8ddb"
        ],
        [
            "intros; apply EqdepFacts.eq_sigT_sig_eq.",
            "VernacExtend",
            "3e8eceb8b1be88c2013d8c9cc910828dac4e9156"
        ],
        [
            "assert (Hsz: sz1 + (sz2 + sz3) = sz1 + sz2 + sz3) by omega.",
            "VernacExtend",
            "2bf803d98af146088ed961c4bd1a76d987631092"
        ],
        [
            "exists Hsz.",
            "VernacExtend",
            "e5e4482605fd6275eb1a9ff7e72d0fe79c6d92f9"
        ],
        [
            "rewrite (combine_assoc w1 w2 w3 Hsz).",
            "VernacExtend",
            "56fb1e860ede3b198441adf70e04be0ee1c6ecf7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_combine: forall sz n (w: word (sz + n)) sz1 (w1: word sz1) sz2 (Hsz2: sz2 <> 0) (w2: word sz2), existT word _ w = existT word _ (combine w1 (sext w2 n)) -> exists sw, w = sext sw n /\\ existT word _ sw = existT word _ (combine w1 w2).",
            "VernacStartTheoremProof",
            "4c921d696013ece2c61cf1aafb4c51d68ee53b11"
        ],
        [
            "intros; unfold sext in H.",
            "VernacExtend",
            "4d08a7595b289c21c71b936c62e52c6191df0239"
        ],
        [
            "remember (wmsb w2 false) as msb2; destruct msb2.",
            "VernacExtend",
            "de8ba94a45ecc30a0f06f43a63b4969e67b3f940"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite combine_assoc_existT in H.",
            "VernacExtend",
            "4d3cab5c74743e853767caab0ce6bf6496e548e8"
        ],
        [
            "assert (sz = sz1 + sz2) by (apply eq_sigT_fst in H; omega); subst.",
            "VernacExtend",
            "63e5a221340ff25384b0c519521bcb228ff6f7b6"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "exists (combine w1 w2).",
            "VernacExtend",
            "3626fabf4df6578475f3d563128cd23ed61ed674"
        ],
        [
            "split; [|reflexivity].",
            "VernacExtend",
            "b3b2ab28272d17bbd288e5c714b27165f96106d4"
        ],
        [
            "unfold sext.",
            "VernacExtend",
            "ea29e31ffab3e16a195127c35ddcf3653db63da7"
        ],
        [
            "dependent destruction w2; [discriminate|].",
            "VernacExtend",
            "87b462961c5b3ae83798a474861b119a47c9fe38"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "a190410c0f1b732818f7223cefc841743c6d7653"
        ],
        [
            "rewrite <-Heqmsb2.",
            "VernacExtend",
            "8992a373740b1f747bf87349fd07fe17536202e5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite combine_assoc_existT in H.",
            "VernacExtend",
            "4d3cab5c74743e853767caab0ce6bf6496e548e8"
        ],
        [
            "assert (sz = sz1 + sz2) by (apply eq_sigT_fst in H; omega); subst.",
            "VernacExtend",
            "63e5a221340ff25384b0c519521bcb228ff6f7b6"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "exists (combine w1 w2).",
            "VernacExtend",
            "3626fabf4df6578475f3d563128cd23ed61ed674"
        ],
        [
            "split; [|reflexivity].",
            "VernacExtend",
            "b3b2ab28272d17bbd288e5c714b27165f96106d4"
        ],
        [
            "unfold sext.",
            "VernacExtend",
            "ea29e31ffab3e16a195127c35ddcf3653db63da7"
        ],
        [
            "dependent destruction w2; [intuition idtac|].",
            "VernacExtend",
            "1edefbce5052ae8d6759b857789092b22c2e1a4e"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "a190410c0f1b732818f7223cefc841743c6d7653"
        ],
        [
            "rewrite <-Heqmsb2.",
            "VernacExtend",
            "8992a373740b1f747bf87349fd07fe17536202e5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_wzero_1: forall sz (w: word sz), w ^+ (wzero _) = w.",
            "VernacStartTheoremProof",
            "2fd8f45b939ca9b0bd60c344f8980a33ad6c54f6"
        ],
        [
            "unfold wplus, wordBin; intros.",
            "VernacExtend",
            "34379b67bf5442bfb5e6baf50720b54b801e8214"
        ],
        [
            "rewrite wordToN_wzero.",
            "VernacExtend",
            "7b8e4359d7bad177e9ca2f5e3fcd37b5b8eb97c5"
        ],
        [
            "rewrite N.add_0_r.",
            "VernacExtend",
            "31ef32ec251b5183692456c19ac03de334243982"
        ],
        [
            "apply NToWord_wordToN.",
            "VernacExtend",
            "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_wzero_2: forall sz (w: word sz), (wzero _) ^+ w = w.",
            "VernacStartTheoremProof",
            "5d329fae23eceabea9f18f383c22b18897bb8f6e"
        ],
        [
            "unfold wplus, wordBin; intros.",
            "VernacExtend",
            "34379b67bf5442bfb5e6baf50720b54b801e8214"
        ],
        [
            "rewrite wordToN_wzero.",
            "VernacExtend",
            "7b8e4359d7bad177e9ca2f5e3fcd37b5b8eb97c5"
        ],
        [
            "rewrite N.add_0_l.",
            "VernacExtend",
            "b301335810d78277ebbcf87be1f982742e5bab6a"
        ],
        [
            "apply NToWord_wordToN.",
            "VernacExtend",
            "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_wplus_1: forall sl (w1: word sl) su (w2 w3: word su), combine w1 (w2 ^+ w3) = combine w1 w2 ^+ extz w3 sl.",
            "VernacStartTheoremProof",
            "32fdb75835469a85fef8fc5b670d18a1940b262e"
        ],
        [
            "dependent induction w1; intros; [reflexivity|].",
            "VernacExtend",
            "db9dacaed5a08a11851eaaf5232e0ae67552c255"
        ],
        [
            "cbn; rewrite IHw1.",
            "VernacExtend",
            "16ac707336c1769cf0707b92a8bcba2bed03eb4a"
        ],
        [
            "rewrite <-wplus_WS_0.",
            "VernacExtend",
            "4d64bafedd170a092af801e82da7b8dadd5bb58d"
        ],
        [
            "rewrite extz_combine; reflexivity.",
            "VernacExtend",
            "892f2756055fead743bb33b97f8868be728988bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_wplus_2: forall sl (w1: word sl) su (w2 w3: word su), combine w1 (w2 ^+ w3) = extz w2 sl ^+ combine w1 w3.",
            "VernacStartTheoremProof",
            "53372db874e36e9c98973fa0a102b0bd657e36c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "rewrite combine_wplus_1.",
            "VernacExtend",
            "50217a649570bf796cae7da324d92c0ced8259a3"
        ],
        [
            "apply wplus_comm.",
            "VernacExtend",
            "4c5cd5fd7e2282219ab0a46a005540f291ac01ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_wplus: forall sz (w1 w2: word sz) sz' (w3 w4: word sz'), existT word _ w1 = existT word _ w3 -> existT word _ w2 = existT word _ w4 -> existT word _ (w1 ^+ w2) = existT word _ (w3 ^+ w4).",
            "VernacStartTheoremProof",
            "3db6e087c31a2ba4d809b2e6b143641be1dce06f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_sigT_sig_eq in H; destruct H as [Hsz1 ?].",
            "VernacExtend",
            "d4b527a8c2d2cd3c8f855870366a1bcb31b90e9f"
        ],
        [
            "rewrite eq_sigT_sig_eq in H0; destruct H0 as [Hsz2 ?].",
            "VernacExtend",
            "3991c65393a8adf1f8e1084086636edb86a5447d"
        ],
        [
            "subst; do 2 rewrite <-(eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "9a88c1722ef2a4c9b5445daf03396372477366a9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_wminus: forall sz (w1 w2: word sz) sz' (w3 w4: word sz'), existT word _ w1 = existT word _ w3 -> existT word _ w2 = existT word _ w4 -> existT word _ (w1 ^- w2) = existT word _ (w3 ^- w4).",
            "VernacStartTheoremProof",
            "024a5de83ca111b671fd594acbe1c850a45c8380"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_sigT_sig_eq in H; destruct H as [Hsz1 ?].",
            "VernacExtend",
            "d4b527a8c2d2cd3c8f855870366a1bcb31b90e9f"
        ],
        [
            "rewrite eq_sigT_sig_eq in H0; destruct H0 as [Hsz2 ?].",
            "VernacExtend",
            "3991c65393a8adf1f8e1084086636edb86a5447d"
        ],
        [
            "subst; do 2 rewrite <-(eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "9a88c1722ef2a4c9b5445daf03396372477366a9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_sext: forall sz1 (w1: word sz1) sz2 (w2: word sz2) n, existT word _ w1 = existT word _ w2 -> existT word _ (sext w1 n) = existT word _ (sext w2 n).",
            "VernacStartTheoremProof",
            "94e5d880726cbf903ef10a90c2d8a6820e774ef5"
        ],
        [
            "intros; inversion H; reflexivity.",
            "VernacExtend",
            "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_extz: forall sz1 (w1: word sz1) sz2 (w2: word sz2) n, existT word _ w1 = existT word _ w2 -> existT word _ (extz w1 n) = existT word _ (extz w2 n).",
            "VernacStartTheoremProof",
            "1f46229cb597304c4435152a38eae9f3e8e6abfc"
        ],
        [
            "intros; inversion H; reflexivity.",
            "VernacExtend",
            "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_wrshifta: forall sz1 (w1: word sz1) sz2 (w2: word sz2) n, existT word _ w1 = existT word _ w2 -> existT word _ (wrshifta w1 n) = existT word _ (wrshifta w2 n).",
            "VernacStartTheoremProof",
            "516fe561a8764dca69bb35f29a286a6883ec72b5"
        ],
        [
            "intros; inversion H; reflexivity.",
            "VernacExtend",
            "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma existT_wlshift: forall sz1 (w1: word sz1) sz2 (w2: word sz2) n, existT word _ w1 = existT word _ w2 -> existT word _ (wlshift w1 n) = existT word _ (wlshift w2 n).",
            "VernacStartTheoremProof",
            "2a15645133878f65d7c373d0bffaafbcef35e6f0"
        ],
        [
            "intros; inversion H; reflexivity.",
            "VernacExtend",
            "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_wplus: forall sz (w1 w2: word sz) sz' Hsz, eq_rect sz word (w1 ^+ w2) sz' Hsz = (eq_rect sz word w1 sz' Hsz) ^+ (eq_rect sz word w2 sz' Hsz).",
            "VernacStartTheoremProof",
            "e57ade486b81be5681969553fb388bcb0b19bd1d"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "eq_rect_simpl; reflexivity.",
            "VernacExtend",
            "f76723ed59021faed58ff475960c670fa7d7d243"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_rect_2: forall sz (pa: word sz) sz' Heq1 Heq2, eq_rect sz' word (eq_rect sz word pa sz' Heq1) sz Heq2 = pa.",
            "VernacStartTheoremProof",
            "849f22692fd9ce36d7ee324b729c3e6454a52b89"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "do 2 rewrite <-(eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "13ff164e7db4527978bc9d7f0ccd0c5ee662715d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wzero_eq_rect: forall sz1 sz2 Heq, eq_rect sz1 word (wzero sz1) sz2 Heq = wzero sz2.",
            "VernacStartTheoremProof",
            "822ccbc7b83fd7451907ac04c6e0346653063b68"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "apply eq_sym, (eq_rect_eq_dec eq_nat_dec).",
            "VernacExtend",
            "ed0af8f709290eac156d3298fbd315155773bfc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wrshifta_0: forall sz (w: word sz), wrshifta w 0 = w.",
            "VernacStartTheoremProof",
            "6c4d0e7006cdd5fb17d5f07b4a526619f8c221da"
        ],
        [
            "unfold wrshifta; intros; simpl.",
            "VernacExtend",
            "baaaeb169fb3737b92e284a47ffb0df06988b625"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "unfold sext.",
            "VernacExtend",
            "ea29e31ffab3e16a195127c35ddcf3653db63da7"
        ],
        [
            "destruct (wmsb w false).",
            "VernacExtend",
            "763f4943d539becec101168a69806c6be1073ac4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cbn; rewrite combine_n_0.",
            "VernacExtend",
            "a81de83411f0eba8cc049138963fd6f655faf10e"
        ],
        [
            "rewrite eq_rect_2; reflexivity.",
            "VernacExtend",
            "83a431fcffcb0c321b4bfcd7ebc60dc1b0469607"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cbn; rewrite combine_n_0.",
            "VernacExtend",
            "a81de83411f0eba8cc049138963fd6f655faf10e"
        ],
        [
            "rewrite eq_rect_2; reflexivity.",
            "VernacExtend",
            "83a431fcffcb0c321b4bfcd7ebc60dc1b0469607"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wrshifta_WO: forall n, wrshifta WO n = WO.",
            "VernacStartTheoremProof",
            "83763422830bb86ff0bb561032862e44f73dea29"
        ],
        [
            "unfold wrshifta; cbn; intros.",
            "VernacExtend",
            "48022af252b997210dc5d53a0a9f4b6f32fbfe71"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "rewrite wzero_eq_rect.",
            "VernacExtend",
            "69f90daeb8542626592fa38581cbc378925fa919"
        ],
        [
            "rewrite <-combine_wzero.",
            "VernacExtend",
            "d4609a22fd762d5b7c28611f74db688dd641b8d3"
        ],
        [
            "rewrite split2_combine.",
            "VernacExtend",
            "ddb532b3064265508525b59c8dfed7a03e699505"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split2_WO: forall n w, split2 n 0 w = WO.",
            "VernacStartTheoremProof",
            "03a657efc843f8f96c751cda6c4f3635fe6c014b"
        ],
        [
            "induction n; cbn; intros; auto.",
            "VernacExtend",
            "7bfcd82df77e167ffbd29b4a7eed57cbc640ecd7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wzero: forall sz n, sext (wzero sz) n = wzero (sz + n).",
            "VernacStartTheoremProof",
            "e03be1a165dfbc6dffd1215546acb5d8eb6d821d"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "rewrite wmsb_wzero.",
            "VernacExtend",
            "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
        ],
        [
            "apply combine_wzero.",
            "VernacExtend",
            "7e3dab931111bac34769153c85b3550b0bf263fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wrshifta_wzero: forall sz n, wrshifta (wzero sz) n = wzero _.",
            "VernacStartTheoremProof",
            "89741fbe943f6f3c0cd4eb6ad84bc5f991009134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wrshifta; cbn.",
            "VernacExtend",
            "cc10977d2d406a027e9d9c5ec45b8c262254cbaa"
        ],
        [
            "rewrite sext_wzero.",
            "VernacExtend",
            "8a8454aaea78a13520d8e1ac9572ac469c51a632"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "rewrite wzero_eq_rect.",
            "VernacExtend",
            "69f90daeb8542626592fa38581cbc378925fa919"
        ],
        [
            "rewrite <-combine_wzero.",
            "VernacExtend",
            "d4609a22fd762d5b7c28611f74db688dd641b8d3"
        ],
        [
            "rewrite split2_combine.",
            "VernacExtend",
            "ddb532b3064265508525b59c8dfed7a03e699505"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_sext: forall sz (w: word sz) n1 n2, existT word _ (extz (sext w n1) n2) = existT word _ (sext (extz w n2) n1).",
            "VernacStartTheoremProof",
            "1abdc31aed9d96147fd23f5467aa1f6512b36210"
        ],
        [
            "dependent destruction w; cbn; intros.",
            "VernacExtend",
            "8908316b67bf5f4989a09f209acd8a3324d2038e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold wzero, extz, sext.",
            "VernacExtend",
            "fa484eb63008191679f3669cbb4c5d87c78ba060"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "rewrite wmsb_wzero.",
            "VernacExtend",
            "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "replace (n2 + 0 + n1) with (n2 + n1) by omega.",
            "VernacExtend",
            "f9509024304ca3412c1f7500bb11f1a3fa379e77"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold wzero, extz, sext.",
            "VernacExtend",
            "fa484eb63008191679f3669cbb4c5d87c78ba060"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "a190410c0f1b732818f7223cefc841743c6d7653"
        ],
        [
            "destruct (wmsb (WS b w) false); try (rewrite <-combine_assoc_existT; reflexivity).",
            "VernacExtend",
            "fa2a2399d45e2fc16176a064601f328cf32c83e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_WS: forall sz (w: word (S sz)) b n, sext (WS b w) n = WS b (sext w n).",
            "VernacStartTheoremProof",
            "9f82e47d1745c3f80ade13f8f0848ca84c28751e"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "rewrite wmsb_ws.",
            "VernacExtend",
            "9135f0a4891d22b6e41858e48d163ecc1869a774"
        ],
        [
            "destruct (wmsb w false); reflexivity.",
            "VernacExtend",
            "37d2aa0417c46ee5cb0d20812fcc8aaea3944767"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wordToZ: forall sz n (w: word sz), wordToZ (sext w n) = wordToZ w.",
            "VernacStartTheoremProof",
            "43c3c61fe7a0ec5da0193d171ae94f154434c518"
        ],
        [
            "dependent induction w; cbn; intros; [apply wordToZ_wzero|].",
            "VernacExtend",
            "1eb12e16b4a098188621e5201bd6d52b6d371b17"
        ],
        [
            "dependent destruction w.",
            "VernacExtend",
            "76b4278ba93897ad508bb4d055f40024276791e7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sext; simpl.",
            "VernacExtend",
            "d17bc310ea9aa805334f4643a96b197a5152aae9"
        ],
        [
            "destruct b; cbn.",
            "VernacExtend",
            "231d5e6930cbe4fda915b0eb9398e7c98ad12bd1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wordToZ_wones by discriminate.",
            "VernacExtend",
            "c00127a207885677095dd87bf0f8315b36685f44"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wordToZ_wzero; reflexivity.",
            "VernacExtend",
            "dc112ea6cc969a05ea7b9569963d647c3b4d59d5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (WS b0 w) as ww; clear Heqww.",
            "VernacExtend",
            "0ba9f9812a4da8d06654d54f386c4ac7b549754d"
        ],
        [
            "rewrite sext_WS.",
            "VernacExtend",
            "7efa2b23aae586446b98940a32a96bf5ef7cc750"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (S n0 + n) with (S (n0 + n)) in *.",
            "VernacExtend",
            "ee6ffef6700eaf121b9e59e0de58d2d5b2924fa8"
        ],
        [
            "repeat rewrite wordToZ_WS_1.",
            "VernacExtend",
            "a6ec9a422ad3446d782577bb7d9f1349ad53c36a"
        ],
        [
            "rewrite IHw.",
            "VernacExtend",
            "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "change (S n0 + n) with (S (n0 + n)) in *.",
            "VernacExtend",
            "ee6ffef6700eaf121b9e59e0de58d2d5b2924fa8"
        ],
        [
            "repeat rewrite wordToZ_WS_0.",
            "VernacExtend",
            "4cb65b2e1b5ed7685a13c7e09cb8d4abae752ba5"
        ],
        [
            "rewrite IHw.",
            "VernacExtend",
            "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_natToWord': forall sz1 sz2 n, (2 * n < pow2 sz1)%nat -> sext (natToWord sz1 n) sz2 = natToWord (sz1 + sz2) n.",
            "VernacStartTheoremProof",
            "c677af410959c087f04ac73f8d8d24113ebbf81e"
        ],
        [
            "induction sz1; intros.",
            "VernacExtend",
            "e50b54523129cadb933ac770554446631835d938"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold sext.",
            "VernacExtend",
            "ea29e31ffab3e16a195127c35ddcf3653db63da7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold wzero.",
            "VernacExtend",
            "f6faf8379fd9fcb6a9242f23372adf39cf200158"
        ],
        [
            "unfold pow2 in *.",
            "VernacExtend",
            "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
        ],
        [
            "assert (n=0) by omega.",
            "VernacExtend",
            "1215ca1d1fc848ba4b3ec6982b2ebb8d9ab4b9fc"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sext in *.",
            "VernacExtend",
            "d270a57639004cb0e6bc6de842daaf348ed10e41"
        ],
        [
            "assert (@wmsb (S sz1) (natToWord (S sz1) n) false = false) as E by (apply wmsb_0_natToWord; assumption).",
            "VernacExtend",
            "47fba4af11a8e6cc42ea8c4dcab03b6338f28cf7"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "clear E.",
            "VernacExtend",
            "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold natToWord.",
            "VernacExtend",
            "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "specialize (IHsz1 sz2 (Nat.div2 n)).",
            "VernacExtend",
            "fc9c72c24566c335b64b2f51c138d92d3c35045d"
        ],
        [
            "rewrite <- IHsz1.",
            "VernacExtend",
            "e28714245a5e63d6263062249c010f2c00516f0d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (@wmsb sz1 (natToWord sz1 (Nat.div2 n)) false = false) as E.",
            "VernacExtend",
            "e50ee8673d469ede80272761595bfae552e39f61"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct sz1.",
            "VernacExtend",
            "4ce462e00fffde2423ea53c338bcf0342d721a4d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply wmsb_0_natToWord.",
            "VernacExtend",
            "43484af5421c814146f06acbf36252108acb30a6"
        ],
        [
            "unfold pow2 in *.",
            "VernacExtend",
            "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
        ],
        [
            "fold pow2 in *.",
            "VernacExtend",
            "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
        ],
        [
            "assert ((2 * Nat.div2 n <= n)%nat) by apply two_times_div2_bound.",
            "VernacExtend",
            "a8fd1671fc476ad2e51adec144b613361f0e5771"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "clear E.",
            "VernacExtend",
            "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace (pow2 (S sz1)) with (2 * (pow2 sz1)) in H.",
            "VernacExtend",
            "cdcdca2eb9cfc45c45be404f014b8181e7d884c7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert ((2 * Nat.div2 n <= n)%nat) by apply two_times_div2_bound.",
            "VernacExtend",
            "a8fd1671fc476ad2e51adec144b613361f0e5771"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_natToWord: forall sz2 sz1 sz n (e: sz1 + sz2 = sz), (2 * n < pow2 sz1)%nat -> eq_rect (sz1 + sz2) word (sext (natToWord sz1 n) sz2) sz e = natToWord sz n.",
            "VernacStartTheoremProof",
            "fa15e63fefa22c0c0f323d15d9b748d6b342e742"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sext_natToWord' by assumption.",
            "VernacExtend",
            "b6ed329459ab6507af70b3f33de29d28313d1d9f"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wneg_natToWord'': forall sz1 sz2 n, pow2 sz1 <= 2 * n < pow2 (S sz1) -> sext (natToWord sz1 n) sz2 = natToWord (sz1 + sz2) (pow2 (sz1+sz2) - (pow2 sz1 - n)).",
            "VernacStartTheoremProof",
            "2e189f80f0563fda10c9bf4f668f6b5ffaa81c49"
        ],
        [
            "induction sz1; intros.",
            "VernacExtend",
            "e50b54523129cadb933ac770554446631835d938"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold pow2 in H.",
            "VernacExtend",
            "5d91c35e36aa786cb67a130ba2bb686b3092e917"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold sext in *.",
            "VernacExtend",
            "d270a57639004cb0e6bc6de842daaf348ed10e41"
        ],
        [
            "assert (@wmsb (S sz1) (natToWord (S sz1) n) false = true) as E.",
            "VernacExtend",
            "3584bebe5dfe62a890980e792bb32bdaeecd99c9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wmsb_1.",
            "VernacExtend",
            "a6c729fa6587be197091ff6b60f7f19cb846614c"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; (unfold pow2 in *; fold pow2 in *; omega).",
            "VernacExtend",
            "a4775352935b19db7ca84d3864940fd5d3673d33"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "match goal with | |- _ = $ ?a => remember a as b end.",
            "VernacExtend",
            "4d472c79eef00e9dea3ce49f344ee282ad8b387c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold natToWord.",
            "VernacExtend",
            "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "rewrite mod2sub.",
            "VernacExtend",
            "861860d58c5e0bde6ff21a59f77cf97a27393184"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite mod2sub.",
            "VernacExtend",
            "861860d58c5e0bde6ff21a59f77cf97a27393184"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "replace (S sz1 + sz2) with (S (sz1 + sz2)) by omega.",
            "VernacExtend",
            "9fe8ba2ca4d656604827912143061be6e689e0fc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "do 2 rewrite mod2_pow2_twice.",
            "VernacExtend",
            "b530b9653d80bdd887314190a522a14c3f46e959"
        ],
        [
            "do 2 rewrite Bool.xorb_false_l.",
            "VernacExtend",
            "72a4274dbacfccc0bd36b9da7236871438421547"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite pow2_add_mul in *.",
            "VernacExtend",
            "d8c4ce83bc3e3204438112796d00eaa3ea9b2d7b"
        ],
        [
            "unfold pow2 in *.",
            "VernacExtend",
            "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
        ],
        [
            "fold pow2 in *.",
            "VernacExtend",
            "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
        ],
        [
            "apply Nat.le_trans with (m := 2 * pow2 sz1); [omega|].",
            "VernacExtend",
            "ec25ebe4d9c67a3835a766fb7c55f41a92abf11d"
        ],
        [
            "rewrite <- mult_assoc.",
            "VernacExtend",
            "49b103377d085e1bf8c6d549842521c605529f0c"
        ],
        [
            "apply mult_le_compat_l.",
            "VernacExtend",
            "860320f2310b2899875ecffa50638026b4192d2f"
        ],
        [
            "rewrite <- Nat.mul_1_r at 1.",
            "VernacExtend",
            "3cd94cec3be4b205471b1e9ed864cda97923c975"
        ],
        [
            "apply mult_le_compat_l.",
            "VernacExtend",
            "860320f2310b2899875ecffa50638026b4192d2f"
        ],
        [
            "apply one_le_pow2.",
            "VernacExtend",
            "c89a7e759205d186045d7043bd30d2801408080b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "specialize (IHsz1 sz2 (Nat.div2 n)).",
            "VernacExtend",
            "fc9c72c24566c335b64b2f51c138d92d3c35045d"
        ],
        [
            "assert (Nat.div2 b = pow2 (sz1 + sz2) - (pow2 sz1 - (Nat.div2 n))) as D2.",
            "VernacExtend",
            "75257326b4342504f318cd37964005f8dca82450"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite minus_minus.",
            "VernacExtend",
            "3c630b50e0940d15e41184864124fe0843681dba"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "replace (S sz1 + sz2) with (S (sz1 + sz2)) by omega.",
            "VernacExtend",
            "9fe8ba2ca4d656604827912143061be6e689e0fc"
        ],
        [
            "unfold pow2.",
            "VernacExtend",
            "a5d7329d3a3012fd90168d18f09965ebd740e405"
        ],
        [
            "fold pow2.",
            "VernacExtend",
            "3d9edde2a7643697a0e2e03bafa1afe001049eb8"
        ],
        [
            "rewrite minus_minus.",
            "VernacExtend",
            "3c630b50e0940d15e41184864124fe0843681dba"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <- Nat.mul_sub_distr_l.",
            "VernacExtend",
            "e6b3c49d2bfa963328dc49414b293c6f009590a7"
        ],
        [
            "rewrite <- (Nat.add_comm n).",
            "VernacExtend",
            "10e2547cc653a860536311c263d05d3345c804b9"
        ],
        [
            "rewrite div2_plus_2.",
            "VernacExtend",
            "f0e85168af2a0e3ca823338e5804ece875e527a4"
        ],
        [
            "apply Nat.add_comm.",
            "VernacExtend",
            "d0b5c25a1ea370d88e82b01af30963a76e4f87ca"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite pow2_add_mul.",
            "VernacExtend",
            "89b567861ac3267c5a76978eda4fa001fbf43b0d"
        ],
        [
            "clear IHsz1.",
            "VernacExtend",
            "008aeccf7e1907e00521e19a08e9a6616f3ba80c"
        ],
        [
            "unfold pow2 in *.",
            "VernacExtend",
            "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
        ],
        [
            "fold pow2 in *.",
            "VernacExtend",
            "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
        ],
        [
            "split; [omega|].",
            "VernacExtend",
            "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
        ],
        [
            "apply mult_le_compat_l.",
            "VernacExtend",
            "860320f2310b2899875ecffa50638026b4192d2f"
        ],
        [
            "rewrite <- Nat.mul_1_r at 1.",
            "VernacExtend",
            "3cd94cec3be4b205471b1e9ed864cda97923c975"
        ],
        [
            "apply mult_le_compat_l.",
            "VernacExtend",
            "860320f2310b2899875ecffa50638026b4192d2f"
        ],
        [
            "apply one_le_pow2.",
            "VernacExtend",
            "c89a7e759205d186045d7043bd30d2801408080b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold pow2 in H.",
            "VernacExtend",
            "5d91c35e36aa786cb67a130ba2bb686b3092e917"
        ],
        [
            "fold pow2 in H.",
            "VernacExtend",
            "babb70152eeb448d4910e3d0f27f0f3ac348e870"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (@div2_compat_lt_l (pow2 sz1) n) as P.",
            "VernacExtend",
            "b687e53e17e3ddbb9320b97b663c15ece6dd6a5a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite pow2_add_mul.",
            "VernacExtend",
            "89b567861ac3267c5a76978eda4fa001fbf43b0d"
        ],
        [
            "clear IHsz1.",
            "VernacExtend",
            "008aeccf7e1907e00521e19a08e9a6616f3ba80c"
        ],
        [
            "rewrite <- Nat.mul_1_r at 1.",
            "VernacExtend",
            "3cd94cec3be4b205471b1e9ed864cda97923c975"
        ],
        [
            "apply mult_le_compat_l.",
            "VernacExtend",
            "860320f2310b2899875ecffa50638026b4192d2f"
        ],
        [
            "apply one_le_pow2.",
            "VernacExtend",
            "c89a7e759205d186045d7043bd30d2801408080b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite D2.",
            "VernacExtend",
            "d9d165826b523a60d59c9cb1ae758a130a1aca96"
        ],
        [
            "destruct sz1 as [|sz1'].",
            "VernacExtend",
            "8265291374b089b48f58d63adf3294dd322d2a3b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assert (n=1) by omega.",
            "VernacExtend",
            "62f23ef4ec7bb1651acdc4be935385b9b41a89a6"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "simpl in D2.",
            "VernacExtend",
            "05130699fff13c592ef0ed95ab0e2515f668e0cb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply wones_natToWord.",
            "VernacExtend",
            "5306b8595fb682674b43bebcd41d00b8d4433954"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (n <= S (2 * Nat.div2 n))%nat.",
            "VernacExtend",
            "91930989f157ed4ec500bc3964577334869c6c88"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (even_odd_destruct n) as [[m C]|[m C]]; subst n.",
            "VernacExtend",
            "3e8768cc20cd158cf7d50bf85375d17516554327"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Nat.div2_double.",
            "VernacExtend",
            "130a75bd67b711537ca5456b5be2e6ba6301d35e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (2 * m + 1) with (S (2 * m)) by omega.",
            "VernacExtend",
            "e35c14a9c8c83407a8bfd6a9b15c89a2872f2f27"
        ],
        [
            "rewrite Nat.div2_succ_double.",
            "VernacExtend",
            "81b6beb81b8b8f17aa22a78e8a94dd1c064052fd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- IHsz1.",
            "VernacExtend",
            "e28714245a5e63d6263062249c010f2c00516f0d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (@wmsb (S sz1') (natToWord (S sz1') (Nat.div2 n)) false = true) as F.",
            "VernacExtend",
            "6e0b6e65aea0663d8762d6aa63ff628096a23a03"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wmsb_1_natToWord.",
            "VernacExtend",
            "e1099db05b4907ec68fa63a529fa1e2b4194e203"
        ],
        [
            "unfold pow2 in *.",
            "VernacExtend",
            "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
        ],
        [
            "fold pow2 in *.",
            "VernacExtend",
            "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
        ],
        [
            "assert (2 * Nat.div2 n <= n)%nat by apply two_times_div2_bound.",
            "VernacExtend",
            "a8fd1671fc476ad2e51adec144b613361f0e5771"
        ],
        [
            "clear -H H0 H1.",
            "VernacExtend",
            "32b2a5f259c3cb9803935526af9c7758e3cd3dac"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite F.",
            "VernacExtend",
            "6df8c10c25971db82981aba92c1e0c52d940c7f9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (2 * Nat.div2 n <= n)%nat by apply two_times_div2_bound.",
            "VernacExtend",
            "a8fd1671fc476ad2e51adec144b613361f0e5771"
        ],
        [
            "clear -H H0 H1.",
            "VernacExtend",
            "32b2a5f259c3cb9803935526af9c7758e3cd3dac"
        ],
        [
            "unfold pow2 in *.",
            "VernacExtend",
            "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
        ],
        [
            "fold pow2 in *.",
            "VernacExtend",
            "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wneg_natToWord': forall sz1 sz2 n, (2 * n < pow2 sz1)%nat -> sext (wneg (natToWord sz1 n)) sz2 = wneg (natToWord (sz1 + sz2) n).",
            "VernacStartTheoremProof",
            "63f6ee686326f3154008254f0e857cc958dce47f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wneg_alt.",
            "VernacExtend",
            "694dd81c7967f4b51a30fb785be1257ef34b9ac8"
        ],
        [
            "unfold wnegN.",
            "VernacExtend",
            "21e8a4c0da4be4855f7e77403db37f02b7c6a4b8"
        ],
        [
            "destruct n as [|n].",
            "VernacExtend",
            "e9a6c38314370079277fe54649bef28abc1a6c0c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "rewrite Nat.sub_0_r.",
            "VernacExtend",
            "5b98063e5ed2e2470f00a8793f5a5d7ccafde326"
        ],
        [
            "rewrite natToWord_pow2.",
            "VernacExtend",
            "b17b4b2dd18651bb320463211340f92fcee41b4a"
        ],
        [
            "unfold sext.",
            "VernacExtend",
            "ea29e31ffab3e16a195127c35ddcf3653db63da7"
        ],
        [
            "assert (wmsb (natToWord sz1 0) false = false) as W.",
            "VernacExtend",
            "902612dd16f53bff32dd5fda56974fead643a674"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct sz1.",
            "VernacExtend",
            "4ce462e00fffde2423ea53c338bcf0342d721a4d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply wmsb_0_natToWord.",
            "VernacExtend",
            "43484af5421c814146f06acbf36252108acb30a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite W.",
            "VernacExtend",
            "753cc9ba504835b36b9686849069ebc489a66305"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply wneg_zero'.",
            "VernacExtend",
            "23d0a175210a7f840ae6851bb6c345462a6897e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite sext_wneg_natToWord''.",
            "VernacExtend",
            "09ba9298c9cd58582baa5d4f11042bbe21dc9aab"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wneg_alt.",
            "VernacExtend",
            "694dd81c7967f4b51a30fb785be1257ef34b9ac8"
        ],
        [
            "unfold wnegN.",
            "VernacExtend",
            "21e8a4c0da4be4855f7e77403db37f02b7c6a4b8"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' by omega.",
            "VernacExtend",
            "e035ff438f8e437a579e4ef18bb01cfec7ec24f5"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'.",
            "VernacExtend",
            "86b283e15eea7025d62b98862b2d3f7c6de916d7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "replace (pow2 sz1 - (pow2 sz1 - S n)) with (S n) by omega.",
            "VernacExtend",
            "bdcef9b6e9ffe4f47fcc4428a0cc107e3877c973"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite pow2_add_mul.",
            "VernacExtend",
            "89b567861ac3267c5a76978eda4fa001fbf43b0d"
        ],
        [
            "apply Nat.le_trans with (m := pow2 sz1); [omega|].",
            "VernacExtend",
            "cd7023e5f1763ff75eb9a129f9c56de118bd7fc0"
        ],
        [
            "rewrite <- Nat.mul_1_r at 1.",
            "VernacExtend",
            "3cd94cec3be4b205471b1e9ed864cda97923c975"
        ],
        [
            "apply mult_le_compat_l.",
            "VernacExtend",
            "860320f2310b2899875ecffa50638026b4192d2f"
        ],
        [
            "apply one_le_pow2.",
            "VernacExtend",
            "c89a7e759205d186045d7043bd30d2801408080b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' by omega.",
            "VernacExtend",
            "e035ff438f8e437a579e4ef18bb01cfec7ec24f5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wneg_natToWord: forall sz2 sz1 sz n (e: sz1 + sz2 = sz), (2 * n < pow2 sz1)%nat -> eq_rect (sz1 + sz2) word (sext (wneg (natToWord sz1 n)) sz2) sz e = wneg (natToWord sz n).",
            "VernacStartTheoremProof",
            "3f7e89c2efa29e0e7a2e14b2c75295a0dbabbc06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite sext_wneg_natToWord' by assumption.",
            "VernacExtend",
            "d747403838d95183d72713a813bbff76ac7faaf5"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_split1: forall sz1 sz2 (w: word (sz1 + sz2)), wordToNat (split1 _ _ w) = Nat.modulo (wordToNat w) (pow2 sz1).",
            "VernacStartTheoremProof",
            "68bebbe26686cd5e8dd9d77e05ee74145cce268b"
        ],
        [
            "induction sz1; intros; [reflexivity|].",
            "VernacExtend",
            "a98c35c5de52833ee215bd5efe641ae90e37a44d"
        ],
        [
            "destruct (destruct_word_S w) as [v [b E]].",
            "VernacExtend",
            "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
        ],
        [
            "match type of v with | word ?x => change x with (sz1 + sz2) in * end.",
            "VernacExtend",
            "17829c8288a8c63f558ae42716d14a879868cd4e"
        ],
        [
            "subst w.",
            "VernacExtend",
            "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
        ],
        [
            "rename v into w.",
            "VernacExtend",
            "79df5d37f4de91d7ebed57c9e4514bde3bcb5690"
        ],
        [
            "simpl; rewrite IHsz1.",
            "VernacExtend",
            "ea2e154863aaf887b945ec04d4afbe258715bcab"
        ],
        [
            "pose proof (zero_lt_pow2 sz1).",
            "VernacExtend",
            "91abf3166c455ec2988cd4c4f5e3e1446742a975"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (pow2 sz1 + (pow2 sz1 + 0)) with (2 * pow2 sz1).",
            "VernacExtend",
            "933e6c62979656d3a31702a273b5e772ae3cfd39"
        ],
        [
            "replace (S (wordToNat w * 2)) with (1 + 2 * wordToNat w) by omega.",
            "VernacExtend",
            "bf27cc96f86d9daeb120b74d8328f08e968dc173"
        ],
        [
            "rewrite Nat.add_mod by omega.",
            "VernacExtend",
            "5ed62949fb7f7eecb131734622c531267be880b6"
        ],
        [
            "rewrite Nat.mul_mod_distr_l; [|omega|discriminate].",
            "VernacExtend",
            "419fdb2cb73c576e9c310009b871ec55e0d7f3e9"
        ],
        [
            "rewrite Nat.mod_1_l by omega.",
            "VernacExtend",
            "19eaf796909f20617a98dd803e45bdae2dfb73bb"
        ],
        [
            "rewrite Nat.mul_comm with (n:= 2).",
            "VernacExtend",
            "b122e9804e353ccf6ef4451b3d898fcad411e2f5"
        ],
        [
            "change (1 + wordToNat w mod pow2 sz1 * 2) with (S (wordToNat w mod pow2 sz1 * 2)).",
            "VernacExtend",
            "c84d779670f8b6033ccf6922438847616504cecb"
        ],
        [
            "apply eq_sym, Nat.mod_small.",
            "VernacExtend",
            "c053abb7b4320e810a8be95c378f0f00848a1cf6"
        ],
        [
            "assert (pow2 sz1 <> 0) by omega.",
            "VernacExtend",
            "6bd15074edb9504f1ab29d639cb1f6ca1cbbd1b9"
        ],
        [
            "pose proof (Nat.mod_upper_bound (wordToNat w) (pow2 sz1) H0).",
            "VernacExtend",
            "ee392f7d5c2e7d3f79610e73b763ef58ea60c068"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (pow2 sz1 + (pow2 sz1 + 0)) with (2 * pow2 sz1).",
            "VernacExtend",
            "933e6c62979656d3a31702a273b5e772ae3cfd39"
        ],
        [
            "rewrite Nat.mul_comm with (n:= 2).",
            "VernacExtend",
            "b122e9804e353ccf6ef4451b3d898fcad411e2f5"
        ],
        [
            "rewrite Nat.mul_mod_distr_r; [|omega|discriminate].",
            "VernacExtend",
            "f60035370c1a1520d898774d367d521c51dea849"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_split2: forall sz1 sz2 (w: word (sz1 + sz2)), wordToNat (split2 _ _ w) = Nat.div (wordToNat w) (pow2 sz1).",
            "VernacStartTheoremProof",
            "80f2b77d90fb08899d2cc71a2f6d2015e474a1ad"
        ],
        [
            "induction sz1; intros; [rewrite Nat.div_1_r; reflexivity|].",
            "VernacExtend",
            "c58ef99081a7b692d06bde822301f2efaebc9529"
        ],
        [
            "destruct (destruct_word_S w) as [v [b E]].",
            "VernacExtend",
            "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
        ],
        [
            "match type of v with | word ?x => change x with (sz1 + sz2) in * end.",
            "VernacExtend",
            "17829c8288a8c63f558ae42716d14a879868cd4e"
        ],
        [
            "subst w.",
            "VernacExtend",
            "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
        ],
        [
            "rename v into w.",
            "VernacExtend",
            "79df5d37f4de91d7ebed57c9e4514bde3bcb5690"
        ],
        [
            "change (split2 (S sz1) sz2 (WS b w)) with (split2 sz1 sz2 w).",
            "VernacExtend",
            "655d23f0fe443c48fbc90d137bf65fafca1ab25f"
        ],
        [
            "rewrite IHsz1.",
            "VernacExtend",
            "71611415cf3253af956417dd206feb6f7470f1e5"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold pow2; fold pow2.",
            "VernacExtend",
            "21cc9cbb645a00ebed1b972aeba0f9a7eb4785e7"
        ],
        [
            "replace (@wordToNat (S sz1 + sz2) w~1) with (1 + 2 * wordToNat w) by (simpl; omega).",
            "VernacExtend",
            "647f0cb6b6c449ad43a1e2b9cdd37708499f596e"
        ],
        [
            "rewrite <-Nat.div_div; [|discriminate|pose proof (zero_lt_pow2 sz1); omega].",
            "VernacExtend",
            "6e1695487e1ba3de991d0ac76386617a276f8f40"
        ],
        [
            "rewrite Nat.mul_comm, Nat.div_add by discriminate.",
            "VernacExtend",
            "888106ae1cfae2c63b6b33cdf3e2b531026e3f86"
        ],
        [
            "rewrite Nat.div_small with (b := 2) by omega.",
            "VernacExtend",
            "6b50e1158e305d4f888fa51d93ff54d8dae40ea0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold pow2; fold pow2.",
            "VernacExtend",
            "21cc9cbb645a00ebed1b972aeba0f9a7eb4785e7"
        ],
        [
            "replace (@wordToNat (S sz1 + sz2) w~0) with (2 * wordToNat w) by (simpl; omega).",
            "VernacExtend",
            "3e4f544874743aefeb54e3abd030e8130925c770"
        ],
        [
            "rewrite Nat.div_mul_cancel_l; [|pose proof (zero_lt_pow2 sz1); omega|discriminate].",
            "VernacExtend",
            "9a54bf541f08dc69fa409dbfbd3165eb19263e16"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wrshifta: forall sz (w: word sz) n, wordToNat (wrshifta w n) = Nat.div (wordToNat (sext w n)) (pow2 n).",
            "VernacStartTheoremProof",
            "cdc053ea6d13a6299fb68e6c69a79a926b201ddb"
        ],
        [
            "unfold wrshifta; intros.",
            "VernacExtend",
            "5eb70a21b984fabe60f13bf6550e58b540f297e5"
        ],
        [
            "rewrite wordToNat_split2.",
            "VernacExtend",
            "66b6701827bac5bb6bdf69f21799464daf32b48c"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "rewrite wordToNat_eq_rect.",
            "VernacExtend",
            "4ac23d5eb5e06e08334f4d1976abb31867f4e71b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_combine: forall sz1 (w1: word sz1) sz2 (w2: word sz2), wordToNat (combine w1 w2) = wordToNat w1 + pow2 sz1 * wordToNat w2.",
            "VernacStartTheoremProof",
            "16415b4c9f0213735504c3fbe86bb65bf78bc208"
        ],
        [
            "dependent induction w1; intros; [simpl; omega|].",
            "VernacExtend",
            "c71b20212b669d63c901624a01a2d4a808d0d624"
        ],
        [
            "unfold pow2; fold pow2.",
            "VernacExtend",
            "21cc9cbb645a00ebed1b972aeba0f9a7eb4785e7"
        ],
        [
            "rewrite Nat.mul_comm with (n:= 2).",
            "VernacExtend",
            "b122e9804e353ccf6ef4451b3d898fcad411e2f5"
        ],
        [
            "simpl; destruct b.",
            "VernacExtend",
            "756a0c142fcb184705c9c90f018f7e739a37ff9e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHw1; simpl.",
            "VernacExtend",
            "ca8b37c6585fbde86ae887f0729a3db61a355287"
        ],
        [
            "rewrite Nat.mul_comm with (n:= pow2 n * 2).",
            "VernacExtend",
            "ef8b48c3dfe5c3c32c8413e3396c65dbb679d068"
        ],
        [
            "rewrite Nat.mul_assoc.",
            "VernacExtend",
            "54edfe37f64593a13f4d1e6aed2f06b08f8fdddf"
        ],
        [
            "rewrite <-Nat.mul_add_distr_r.",
            "VernacExtend",
            "771462b77f0fe3b847f28f1e65abd82fb3aff50a"
        ],
        [
            "rewrite Nat.mul_comm with (n:= pow2 n).",
            "VernacExtend",
            "b1c37cb5eea012c5ce3b551d8787012be5cd5d94"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHw1.",
            "VernacExtend",
            "97f091a8813b860dd86732c6349b3175ee6bb64f"
        ],
        [
            "rewrite Nat.mul_comm with (n:= pow2 n * 2).",
            "VernacExtend",
            "ef8b48c3dfe5c3c32c8413e3396c65dbb679d068"
        ],
        [
            "rewrite Nat.mul_assoc.",
            "VernacExtend",
            "54edfe37f64593a13f4d1e6aed2f06b08f8fdddf"
        ],
        [
            "rewrite <-Nat.mul_add_distr_r.",
            "VernacExtend",
            "771462b77f0fe3b847f28f1e65abd82fb3aff50a"
        ],
        [
            "rewrite Nat.mul_comm with (n:= pow2 n).",
            "VernacExtend",
            "b1c37cb5eea012c5ce3b551d8787012be5cd5d94"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wlshift: forall sz (w: word sz) n, wordToNat (wlshift w n) = Nat.mul (Nat.modulo (wordToNat w) (pow2 (sz - n))) (pow2 n).",
            "VernacStartTheoremProof",
            "4baa8eb4426b3207bc9eb2263eed59cb43a769e1"
        ],
        [
            "intros; destruct (le_dec n sz).",
            "VernacExtend",
            "7198be0cfbfe02ae88c056343ec8f4c5e7b05f91"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold wlshift; intros.",
            "VernacExtend",
            "7201f29d809f9511d745fb0e925683cdbb0895d8"
        ],
        [
            "rewrite wordToNat_split1.",
            "VernacExtend",
            "f90c956693f21e8e6d64780a7ce5d59bca0a2b07"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "rewrite wordToNat_eq_rect.",
            "VernacExtend",
            "4ac23d5eb5e06e08334f4d1976abb31867f4e71b"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite wordToNat_wzero; simpl.",
            "VernacExtend",
            "8419530b351a82d20df5ebb93e4dc5540a848fef"
        ],
        [
            "replace (pow2 sz) with (pow2 (sz - n + n)) by (f_equal; omega).",
            "VernacExtend",
            "5af8aa787f35e7c38aa8eaa29a47c11616bb3a43"
        ],
        [
            "rewrite pow2_add_mul.",
            "VernacExtend",
            "89b567861ac3267c5a76978eda4fa001fbf43b0d"
        ],
        [
            "rewrite Nat.mul_comm with (n:= pow2 (sz - n)).",
            "VernacExtend",
            "90c8305257757e90c0b49302b39bcaeb3f7458cf"
        ],
        [
            "rewrite Nat.mul_mod_distr_l; [|pose proof (zero_lt_pow2 (sz - n)); omega |pose proof (zero_lt_pow2 n); omega].",
            "VernacExtend",
            "f0029f94f771358aeb24d4df3cf1fe3b05daebea"
        ],
        [
            "apply Nat.mul_comm.",
            "VernacExtend",
            "214d963e611595db803e36923a88df4e49be12c2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (n > sz)%nat by omega.",
            "VernacExtend",
            "79218e19359946e9e529e5b69ce579afeb530cd1"
        ],
        [
            "rewrite wlshift_gt by assumption.",
            "VernacExtend",
            "7ec12ac2736e5c5ad86471c46707053f32191df8"
        ],
        [
            "replace (sz - n) with 0 by omega.",
            "VernacExtend",
            "2f48b5a042ec65730d43359c71c89341ecd02607"
        ],
        [
            "rewrite wordToNat_wzero; simpl; reflexivity.",
            "VernacExtend",
            "c6f26561029f8159dfbf9d67b6fe52444285eb94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_extz: forall sz (w: word sz) n, wordToNat (extz w n) = pow2 n * wordToNat w.",
            "VernacStartTheoremProof",
            "b5d2085c4a11bc7ca50adf31199557f9618e3e11"
        ],
        [
            "unfold extz; intros.",
            "VernacExtend",
            "13baf4df4df2e43a3563b1c5a161d5177e8e8931"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite wordToNat_wzero.",
            "VernacExtend",
            "fe66869aedb7ca996577b7cf47bb140834751f8c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_is_mult_pow2: forall sz n d, extz (natToWord sz n) d = natToWord (d + sz) (pow2 d * n).",
            "VernacStartTheoremProof",
            "cb73ac41201450a221954979496771dc569a1752"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction d.",
            "VernacExtend",
            "30af4961cbf357f172c140eb2d6733caae90c485"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold extz.",
            "VernacExtend",
            "557e799e1818c83507658b6ee36d3f0ffe426031"
        ],
        [
            "rewrite combine_0_n.",
            "VernacExtend",
            "69cbd1406bab80314c63fed43dd4b54a3895596d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold extz in *.",
            "VernacExtend",
            "b1401d49de156d4181be7257294eea68d0be68c0"
        ],
        [
            "change (pow2 (S d) * n) with (2 * pow2 d * n).",
            "VernacExtend",
            "ac2a0b5955586b298da3d4dd25a4ac5e54558b08"
        ],
        [
            "rewrite <- Nat.mul_assoc.",
            "VernacExtend",
            "6ff349e2fd7aeb46fe9a4a4aec284624f4329bfc"
        ],
        [
            "change ((S d) + sz) with (S (d + sz)) in *.",
            "VernacExtend",
            "3d3cf05f664950f0e61dec33c0c264299df16065"
        ],
        [
            "rewrite <- natToWord_times2.",
            "VernacExtend",
            "d4b50e3e72c3eef73d2b861784b9dea673ffa3e8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "exact IHd.",
            "VernacExtend",
            "854770f0db23dfec442fd6a8cd5e067e8a62b618"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_is_mult_pow2_neg: forall sz n d, extz (wneg (natToWord sz n)) d = wneg (natToWord (d + sz) (pow2 d * n)).",
            "VernacStartTheoremProof",
            "47c6779d5274dd562b0f7ee3a93adda90ceff217"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction d.",
            "VernacExtend",
            "30af4961cbf357f172c140eb2d6733caae90c485"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold extz.",
            "VernacExtend",
            "557e799e1818c83507658b6ee36d3f0ffe426031"
        ],
        [
            "rewrite combine_0_n.",
            "VernacExtend",
            "69cbd1406bab80314c63fed43dd4b54a3895596d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold extz in *.",
            "VernacExtend",
            "b1401d49de156d4181be7257294eea68d0be68c0"
        ],
        [
            "change (pow2 (S d) * n) with (2 * pow2 d * n).",
            "VernacExtend",
            "ac2a0b5955586b298da3d4dd25a4ac5e54558b08"
        ],
        [
            "rewrite <- Nat.mul_assoc.",
            "VernacExtend",
            "6ff349e2fd7aeb46fe9a4a4aec284624f4329bfc"
        ],
        [
            "change ((S d) + sz) with (S (d + sz)) in *.",
            "VernacExtend",
            "3d3cf05f664950f0e61dec33c0c264299df16065"
        ],
        [
            "rewrite <- natToWord_times2.",
            "VernacExtend",
            "d4b50e3e72c3eef73d2b861784b9dea673ffa3e8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold natToWord.",
            "VernacExtend",
            "7c24b25f9685650de6a2471a566b4cac12e1c422"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite wneg_WS_0.",
            "VernacExtend",
            "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "exact IHd.",
            "VernacExtend",
            "854770f0db23dfec442fd6a8cd5e067e8a62b618"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_sext_bypass: forall sz1 (w1: word sz1) sz2 (w2: word sz2) (Hsz: sz1 = sz2) n, wordToNat w1 = wordToNat w2 -> wordToNat (sext w1 n) = wordToNat (sext w2 n).",
            "VernacStartTheoremProof",
            "9d84ce99c689b4385d6b6d8a2b0b217c79c48ef0"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "apply wordToNat_inj in H; subst.",
            "VernacExtend",
            "6d5bfba5e0d078f2750710b7d04c9ccec0e1d33e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_sext: forall sz1 (w1: word sz1) sz2 (w2: word (S sz2)) n, existT word _ (combine w1 (sext w2 n)) = existT word _ (sext (combine w1 w2) n).",
            "VernacStartTheoremProof",
            "11b020cc5a9d8476c58451735ae005bc319f99d4"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "a190410c0f1b732818f7223cefc841743c6d7653"
        ],
        [
            "destruct (wmsb w2 false); apply combine_assoc_existT.",
            "VernacExtend",
            "146ca665b5d2313de7c4d8902b8408ddd6f78794"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_extz: forall sz (w: word sz) n1 n2, existT word _ (extz (extz w n1) n2) = existT word _ (extz w (n2 + n1)).",
            "VernacStartTheoremProof",
            "b81c680c2184bf4c66f09113884c8b89ebb083c8"
        ],
        [
            "unfold extz; cbn; intros.",
            "VernacExtend",
            "8f16003bf57d2f047d220c751f0b5c58e9aaa515"
        ],
        [
            "rewrite combine_assoc_existT.",
            "VernacExtend",
            "47676e3e24cbd55df0fe9c296955eb45478ae02e"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wrshifta_extz_sext: forall sz (w: word sz) n1 n2, existT word _ (wrshifta (extz w (n1 + n2)) n1) = existT word _ (sext (extz w n2) n1).",
            "VernacStartTheoremProof",
            "aedffbba133938c4297d2b5603cd6daa54918976"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-extz_sext.",
            "VernacExtend",
            "c637ab14664cb7e1a92cffbd7283f7357a16434f"
        ],
        [
            "apply wordToNat_existT; [omega|].",
            "VernacExtend",
            "0d25de651ad70381c184ac960c04c4ef342d9c8a"
        ],
        [
            "rewrite wordToNat_wrshifta.",
            "VernacExtend",
            "0c8f6fdcd9773c6180caf6db8f7ba2f2f78d4022"
        ],
        [
            "replace (wordToNat (sext (extz w (n1 + n2)) n1)) with (wordToNat (sext (extz (extz w n2) n1) n1)).",
            "VernacExtend",
            "1461b699b70fa5d2a2d60594c8c4a6b9e6741306"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (wordToNat (sext (extz (extz w n2) n1) n1)) with (wordToNat (extz (sext (extz w n2) n1) n1)) by apply existT_wordToNat, extz_sext.",
            "VernacExtend",
            "dee1c6215a451b9264468c9dee69add4b187dbc5"
        ],
        [
            "do 2 rewrite wordToNat_extz.",
            "VernacExtend",
            "fed11d69260d0a8053d2f9b924fa4f8ffd4cea13"
        ],
        [
            "rewrite Nat.mul_comm, Nat.div_mul by (pose proof (zero_lt_pow2 n1); omega).",
            "VernacExtend",
            "34f57831ba91997e630784a1ac8a8d58a740a187"
        ],
        [
            "replace (wordToNat (sext (extz w n2) n1)) with (wordToNat (extz (sext w n1) n2)) by apply existT_wordToNat, extz_sext.",
            "VernacExtend",
            "1bb9f651cbbd9a7185f938119393764026b45a69"
        ],
        [
            "rewrite wordToNat_extz.",
            "VernacExtend",
            "dbcfb82d4c5d966c4a501d7ea65e700ede276cf7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply wordToNat_sext_bypass; [omega|].",
            "VernacExtend",
            "66e41f1b6dd7d83a4ef95dadf82cc8a6656fc252"
        ],
        [
            "apply existT_wordToNat.",
            "VernacExtend",
            "127855e4d547043815f97c99db3feee340f204c1"
        ],
        [
            "apply extz_extz.",
            "VernacExtend",
            "a25e754a9dd6ae1bae86c9e0e4305e3376b19b70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_sext_modulo: forall sz (w: word sz) n, Nat.modulo (wordToNat (sext w n)) (pow2 sz) = wordToNat w.",
            "VernacStartTheoremProof",
            "4651c3b51d4a1a6b49a992c4dcb6775a51d3a10a"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "pose proof (zero_lt_pow2 sz).",
            "VernacExtend",
            "396ae7ca3d9bce18175c967280dd2d544ee8e976"
        ],
        [
            "destruct (wmsb w false).",
            "VernacExtend",
            "763f4943d539becec101168a69806c6be1073ac4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite Nat.mul_comm, Nat.mod_add by omega.",
            "VernacExtend",
            "525be3cc058d33a4e4785f1c2f215172bd12d8d5"
        ],
        [
            "apply Nat.mod_small.",
            "VernacExtend",
            "400866177b35e26a3bfab5760ab5c841610bd82b"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite Nat.mul_comm, Nat.mod_add by omega.",
            "VernacExtend",
            "525be3cc058d33a4e4785f1c2f215172bd12d8d5"
        ],
        [
            "apply Nat.mod_small.",
            "VernacExtend",
            "400866177b35e26a3bfab5760ab5c841610bd82b"
        ],
        [
            "apply wordToNat_bound.",
            "VernacExtend",
            "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_sext_extz: forall sz (w: word sz) n, existT word _ (wlshift (sext w n) n) = existT word _ (extz w n).",
            "VernacStartTheoremProof",
            "50428cd167b997cc61a39f275b82aee29f33953b"
        ],
        [
            "intros; apply wordToNat_existT; [omega|].",
            "VernacExtend",
            "7e94d6af91e130c129212b476b2052208bf8f05f"
        ],
        [
            "rewrite wordToNat_wlshift.",
            "VernacExtend",
            "f79d604619df9d26aa489e2a1d4123006396df76"
        ],
        [
            "rewrite wordToNat_extz.",
            "VernacExtend",
            "dbcfb82d4c5d966c4a501d7ea65e700ede276cf7"
        ],
        [
            "replace (sz + n - n) with sz by omega.",
            "VernacExtend",
            "403083154dce5527bc7e37dc79362991be83c596"
        ],
        [
            "rewrite wordToNat_sext_modulo.",
            "VernacExtend",
            "8a5f918485d20f126b86b6e08e4d8a7f42bc0b6b"
        ],
        [
            "apply Nat.mul_comm.",
            "VernacExtend",
            "214d963e611595db803e36923a88df4e49be12c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_combine_extz: forall sn sl (wl: word sl) ssu (wu: word (ssu + sn)), existT word (sl + (ssu + sn)) (wlshift (combine wl wu) sn) = existT word (sn + (sl + ssu)) (extz (combine wl (split1 ssu _ wu)) sn).",
            "VernacStartTheoremProof",
            "5ff0589f085b55fabc47c865fd32effca102fcd2"
        ],
        [
            "intros; apply wordToNat_existT; [omega|].",
            "VernacExtend",
            "7e94d6af91e130c129212b476b2052208bf8f05f"
        ],
        [
            "rewrite wordToNat_wlshift.",
            "VernacExtend",
            "f79d604619df9d26aa489e2a1d4123006396df76"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite wordToNat_extz.",
            "VernacExtend",
            "dbcfb82d4c5d966c4a501d7ea65e700ede276cf7"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite wordToNat_split1.",
            "VernacExtend",
            "f90c956693f21e8e6d64780a7ce5d59bca0a2b07"
        ],
        [
            "replace (sl + (ssu + sn) - sn) with (sl + ssu) by omega.",
            "VernacExtend",
            "1fbb053f083a441feb864a3ce28f0929006c2b3a"
        ],
        [
            "rewrite Nat.mul_comm; f_equal.",
            "VernacExtend",
            "2f6853302d3037f368fbecb788fce4983edd07a1"
        ],
        [
            "rewrite pow2_add_mul.",
            "VernacExtend",
            "89b567861ac3267c5a76978eda4fa001fbf43b0d"
        ],
        [
            "pose proof (zero_lt_pow2 sl).",
            "VernacExtend",
            "16b643be8a569343c126c46a2fb83dad3b840ef2"
        ],
        [
            "pose proof (zero_lt_pow2 ssu).",
            "VernacExtend",
            "6d1cdb3332801b091adb82c8fe1652babfa9d1c0"
        ],
        [
            "rewrite Nat.mod_mul_r; try omega.",
            "VernacExtend",
            "d5d659966d2e9d2a099d5f04e91195d8c5839456"
        ],
        [
            "rewrite Nat.mul_comm with (n:= pow2 sl) at 1.",
            "VernacExtend",
            "19e8c209443303abd3049cb7f9d292c097f4b32b"
        ],
        [
            "rewrite Nat.mod_add; [|omega].",
            "VernacExtend",
            "f8cbc4aca8b16eb72fe071ac7775b589bac2d844"
        ],
        [
            "rewrite Nat.mod_small by apply wordToNat_bound.",
            "VernacExtend",
            "f72acd44583909d880108e0eb4a97f89d4ffef4d"
        ],
        [
            "do 3 f_equal.",
            "VernacExtend",
            "c21e62c3422d6abf491307169ebac9e492ad6aba"
        ],
        [
            "rewrite Nat.mul_comm, Nat.div_add; [|omega].",
            "VernacExtend",
            "e3f78d4d5aa00f5617ad586a5bb9bba0261de773"
        ],
        [
            "rewrite Nat.div_small by apply wordToNat_bound.",
            "VernacExtend",
            "75843c0218ffdf6d65eedec907f0ed8d5ed6f23b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_sext_eq_rect: forall sz (w: word sz) n1 n2 nsz Hnsz1, exists Hnsz2, eq_rect (n2 + (sz + n1)) word (extz (sext w n1) n2) nsz Hnsz1 = eq_rect (n2 + sz + n1) word (sext (extz w n2) n1) nsz Hnsz2.",
            "VernacStartTheoremProof",
            "28effc0db6e8b1d90e20c6722b99f674ece3e6f0"
        ],
        [
            "intros; subst; simpl.",
            "VernacExtend",
            "569be4cc36a0d66a8d9913bff76c710f10f29f2a"
        ],
        [
            "assert (Hsz: n2 + sz + n1 = n2 + (sz + n1)) by omega.",
            "VernacExtend",
            "52dc199052d493f0e95d54c2f0755d8787ce0f89"
        ],
        [
            "exists Hsz.",
            "VernacExtend",
            "e5e4482605fd6275eb1a9ff7e72d0fe79c6d92f9"
        ],
        [
            "pose proof (extz_sext w n1 n2).",
            "VernacExtend",
            "6ce93571c3eec57fe6893f373acee351ed3fa056"
        ],
        [
            "pose proof (eq_sigT_snd H).",
            "VernacExtend",
            "53ffe62035bdd930720a6684af3513d178a823b0"
        ],
        [
            "rewrite <-H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_zero: forall n m, sext (natToWord n 0) m = natToWord _ 0.",
            "VernacStartTheoremProof",
            "a2f7af9a0200769dcbe3a9bd89c782d655cb05b2"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "rewrite wmsb_wzero.",
            "VernacExtend",
            "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_split1: forall sz (w: word sz) n, split1 sz _ (sext w n) = w.",
            "VernacStartTheoremProof",
            "6a52078567a7d52afc105b83bc8ebc99d7ec8524"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "destruct (wmsb w false); apply split1_combine.",
            "VernacExtend",
            "0b871ea42d31e36b2f421fb2b8acc45eeeeb0724"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_sext: forall sz (w: word sz) n1 n2, existT word _ (sext w (n1 + n2)) = existT word _ (sext (sext w n1) n2).",
            "VernacStartTheoremProof",
            "851e93ef5eeb3ae2675a72ed9570339b31ac51d7"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "remember (wmsb w false) as wmsb; destruct wmsb.",
            "VernacExtend",
            "eb6e4662af011ff1ca00926eb10909e90de5cf4d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n1 as [|n1].",
            "VernacExtend",
            "fd4ea1a0f514cfd39c5064952f5c9bc5968c314f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "cbn; rewrite wmsb_combine_WO, <-Heqwmsb.",
            "VernacExtend",
            "bc7183950deabcc3ab5aba0295d33d8636cfaf19"
        ],
        [
            "rewrite <-combine_assoc_existT.",
            "VernacExtend",
            "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "a190410c0f1b732818f7223cefc841743c6d7653"
        ],
        [
            "rewrite wmsb_wones.",
            "VernacExtend",
            "4bdba525c12215d90626bdff07da39d98979a807"
        ],
        [
            "rewrite <-combine_assoc_existT.",
            "VernacExtend",
            "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
        ],
        [
            "rewrite combine_wones.",
            "VernacExtend",
            "c71455d1a32d11d6a5944fdadbee7ac5ded01f81"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n1 as [|n1].",
            "VernacExtend",
            "fd4ea1a0f514cfd39c5064952f5c9bc5968c314f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "cbn; rewrite wmsb_combine_WO, <-Heqwmsb.",
            "VernacExtend",
            "bc7183950deabcc3ab5aba0295d33d8636cfaf19"
        ],
        [
            "rewrite <-combine_assoc_existT.",
            "VernacExtend",
            "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate.",
            "VernacExtend",
            "a190410c0f1b732818f7223cefc841743c6d7653"
        ],
        [
            "rewrite wmsb_wzero.",
            "VernacExtend",
            "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
        ],
        [
            "rewrite <-combine_assoc_existT.",
            "VernacExtend",
            "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
        ],
        [
            "rewrite combine_wzero.",
            "VernacExtend",
            "9b69687f82823b16ba7fa86fbad0927da583d5a8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_wordToN: forall sz (w: word sz), wordToN w <> 0%N -> wordToN (wneg w) = (Npow2 sz - wordToN w)%N.",
            "VernacStartTheoremProof",
            "6d5cfaa991980a6b049f08a13a3c7a838a905c9e"
        ],
        [
            "unfold wneg; intros.",
            "VernacExtend",
            "a34976f5b901ec32494372ac0b8676bd0840c605"
        ],
        [
            "rewrite wordToN_NToWord_2.",
            "VernacExtend",
            "8a0683d8ddcae6b07999f79e8a371bc3b1f8be5b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (wordToN_bound w).",
            "VernacExtend",
            "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
        ],
        [
            "nomega.",
            "VernacExtend",
            "172a67512b5be7cabf23ff79ed79dc00750b182b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nmul_two: forall n, (n + n = 2 * n)%N.",
            "VernacStartTheoremProof",
            "7a7a662661f3f7d55a6bbd3246be789b2b9f4233"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; simpl; auto.",
            "VernacExtend",
            "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
        ],
        [
            "rewrite Pos.add_diag.",
            "VernacExtend",
            "b82cadf05fca2fdc0563f6d5cb2a2cda97045685"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_false_bound: forall sz (w: word (S sz)), wmsb w false = false -> (wordToN w < Npow2 sz)%N.",
            "VernacStartTheoremProof",
            "14b027a3e7a563fb26dfe8530606566ee52ece70"
        ],
        [
            "apply (induct_word_S (fun sz w => wmsb w false = false -> (wordToN w < Npow2 sz)%N)); [simpl; intros; subst; nomega|].",
            "VernacExtend",
            "d77ac3ccbd7b141ce0245072ea7e296151d1671e"
        ],
        [
            "intros; rewrite Npow2_S, Nmul_two.",
            "VernacExtend",
            "466597bfcb74dfe77f14926ba1c6d644ad178f34"
        ],
        [
            "specialize (H H0).",
            "VernacExtend",
            "c54bab77619d44044b341734ba5cf8906d22a6cc"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_1.",
            "VernacExtend",
            "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
        ],
        [
            "rewrite N.add_comm.",
            "VernacExtend",
            "d287d4917158c2c272464d1c50d3a66590eb41e5"
        ],
        [
            "apply N.mul_2_mono_l; auto.",
            "VernacExtend",
            "058e79a942994d8ec0d6478cf2ab47c6cd0f5b8f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "apply N.mul_lt_mono_pos_l; [nomega|].",
            "VernacExtend",
            "6d40299a36054db989050e014199b7aa07253543"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_true_bound: forall sz (w: word (S sz)), wmsb w false = true -> (Npow2 sz <= wordToN w)%N.",
            "VernacStartTheoremProof",
            "cda5b792eedb7f7631b786a9c7807e4815e2cc10"
        ],
        [
            "apply (induct_word_S (fun sz w => wmsb w false = true -> (Npow2 sz <= wordToN w)%N)); [simpl; intros; subst; reflexivity|].",
            "VernacExtend",
            "2e53d42b4ea9d43a9ad8ee58497d2f6c91bd4f6e"
        ],
        [
            "intros; rewrite Npow2_S, Nmul_two.",
            "VernacExtend",
            "466597bfcb74dfe77f14926ba1c6d644ad178f34"
        ],
        [
            "specialize (H H0).",
            "VernacExtend",
            "c54bab77619d44044b341734ba5cf8906d22a6cc"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_1.",
            "VernacExtend",
            "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
        ],
        [
            "apply N.mul_le_mono_nonneg_l with (p:= 2%N) in H; [|compute; discriminate].",
            "VernacExtend",
            "fb3c8ab2aa999e9fa0546c0bd1736848249322b7"
        ],
        [
            "rewrite N.add_1_r.",
            "VernacExtend",
            "d4178f221d827a2b0453b807fc1a68ff0b94c2c0"
        ],
        [
            "apply N.le_le_succ_r.",
            "VernacExtend",
            "8b21c1c9da8e6f93517d8d318b45311100097a53"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_WS_0.",
            "VernacExtend",
            "53bbce6f30fafa0f2706e68b739561a4608a5c17"
        ],
        [
            "apply N.mul_le_mono_nonneg_l; [compute; discriminate|].",
            "VernacExtend",
            "f76ff76bfd149443174fb1408bf90b237543845f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_wordToZ: forall sz (w: word sz), ZToWord sz (wordToZ w) = w.",
            "VernacStartTheoremProof",
            "9228657bcc756b64ca6d6504b2d0298324509850"
        ],
        [
            "unfold ZToWord, wordToZ; intros.",
            "VernacExtend",
            "5927b6c2cc654c1356ea7d14aa99904da785395f"
        ],
        [
            "remember (wmsb w false) as msb; destruct msb.",
            "VernacExtend",
            "0dad806b701c260963ec8676142ca43e0383d8f0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wordToN (wneg w)) as ww.",
            "VernacExtend",
            "93a9dc0b82c12437edae4280cca5afcf28404d99"
        ],
        [
            "destruct ww.",
            "VernacExtend",
            "a765301088684f68a5f1f380c9a983c7fd801cf5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (wneg w = wzero _).",
            "VernacExtend",
            "d7b99d2bbff91b8eca2fddea73efbe5d35c38579"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wordToN_inj; rewrite <-Heqww.",
            "VernacExtend",
            "6d62310475a5d8047b75ab4ac6887b2de7b9344e"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite wzero'_def.",
            "VernacExtend",
            "6ad764d3d264b9860886e858fa77585126f1f754"
        ],
        [
            "rewrite <-wneg_idempotent, H.",
            "VernacExtend",
            "fed49e1349839aca94832b0e73a1006adcca9ae2"
        ],
        [
            "apply eq_sym, wzero_wneg.",
            "VernacExtend",
            "95e313871457f6890c62f2109bf3f7bc6f8b1b68"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (wneg w = NToWord _ (N.pos p)).",
            "VernacExtend",
            "2b10f0bec1c415a5d1374e866eb458749144d4b3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wordToN_inj; rewrite Heqww.",
            "VernacExtend",
            "0c62f831466c7d0aa093e387076ba377433cea0c"
        ],
        [
            "rewrite NToWord_wordToN.",
            "VernacExtend",
            "3ac8cf6e7f7b47b4dc9d3f0a7e8b7423c95ebfb5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <-wneg_idempotent, H.",
            "VernacExtend",
            "fed49e1349839aca94832b0e73a1006adcca9ae2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wordToN w) as ww.",
            "VernacExtend",
            "48dc9c8c0363f4c7d65fd81834d3528efdd73372"
        ],
        [
            "destruct ww.",
            "VernacExtend",
            "a765301088684f68a5f1f380c9a983c7fd801cf5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (w = wzero _); subst.",
            "VernacExtend",
            "b7511495bbe0a6cb5c1063745274436032d3fbb1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wordToN_inj; rewrite <-Heqww.",
            "VernacExtend",
            "6d62310475a5d8047b75ab4ac6887b2de7b9344e"
        ],
        [
            "rewrite wordToN_nat.",
            "VernacExtend",
            "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
        ],
        [
            "rewrite roundTrip_0.",
            "VernacExtend",
            "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply wzero'_def.",
            "VernacExtend",
            "d0eed840ac797e0f5b653ce1627ea6830629f26f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (w = NToWord _ (N.pos p)); subst.",
            "VernacExtend",
            "16671be0c1e69e10e1cc36f2f7cd4727e8b4ac0a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wordToN_inj; rewrite Heqww.",
            "VernacExtend",
            "0c62f831466c7d0aa093e387076ba377433cea0c"
        ],
        [
            "rewrite NToWord_wordToN.",
            "VernacExtend",
            "3ac8cf6e7f7b47b4dc9d3f0a7e8b7423c95ebfb5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_ZToWord: forall z sz, (- Z.of_nat (pow2 sz) <= z < Z.of_nat (pow2 sz))%Z -> wordToZ (ZToWord (S sz) z) = z.",
            "VernacStartTheoremProof",
            "26e3bb764059d599ebd58281a9916c9ac6e2f53f"
        ],
        [
            "unfold wordToZ, ZToWord; intros.",
            "VernacExtend",
            "73cfb00827b3e7cabb79ffdf5f7b1a4dfbe3d58e"
        ],
        [
            "destruct z.",
            "VernacExtend",
            "7ad6537de6adc4973a413756c31bffcd5e25902c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wmsb_wzero'.",
            "VernacExtend",
            "a18eead29dbcb06a4526e699bbff8c001860f19c"
        ],
        [
            "rewrite wordToN_wzero'.",
            "VernacExtend",
            "468227fdef3c667dd15cf8a3d2a2f8463bc667d3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite posToWord_nat.",
            "VernacExtend",
            "d56d1090b2a96dd459a96fe0f5abca0dbbe9c925"
        ],
        [
            "remember (wmsb (natToWord (S sz) (Pos.to_nat p)) false) as msb.",
            "VernacExtend",
            "fd4a5f79c20a53899d8c6e2ee078a2b2c9a367e2"
        ],
        [
            "destruct msb.",
            "VernacExtend",
            "1a6440c8926b5b29bcb81c8744f032766a165f1c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "simpl in H; destruct H.",
            "VernacExtend",
            "38eef4331a212505c35fb3217ab7baa59eb700da"
        ],
        [
            "apply eq_sym, wmsb_true_bound in Heqmsb.",
            "VernacExtend",
            "85f0c1a7ec18d46c3c8a11a37c5a84862eca1d4e"
        ],
        [
            "rewrite <-positive_N_nat, <-NToWord_nat in Heqmsb.",
            "VernacExtend",
            "74cc62bb46e5e40b99855cee49e2bb88132c347c"
        ],
        [
            "rewrite <-positive_nat_Z in H0.",
            "VernacExtend",
            "55a5b68fd102fed3e7eead47d87aea7acb873bdf"
        ],
        [
            "apply Nat2Z.inj_lt in H0.",
            "VernacExtend",
            "9487a8ae5ebc63c2bd615bdb1fb7a5594721df8f"
        ],
        [
            "rewrite <-positive_N_nat, <-Npow2_nat in H0.",
            "VernacExtend",
            "ca99e48a05823bbe10ca9fff66f7778c6fdceea7"
        ],
        [
            "apply Nlt_in in H0.",
            "VernacExtend",
            "45f2d4cdcda0c3667e2932c1b795e61268ef7192"
        ],
        [
            "pose proof (wordToN_NToWord (S sz) (N.pos p)).",
            "VernacExtend",
            "03fbb4f2a7e8cccce28e929cb60e7a729cacb778"
        ],
        [
            "destruct H1 as [k [? ?]].",
            "VernacExtend",
            "bb0527511e5d939a3e433c2eae09dadaaeaa0df1"
        ],
        [
            "rewrite H1 in Heqmsb.",
            "VernacExtend",
            "63c7832330a1850e985cc8a3f0f3008ed60fed67"
        ],
        [
            "assert (N.pos p - k * Npow2 (S sz) <= N.pos p)%N by apply N.le_sub_l.",
            "VernacExtend",
            "16d31cc3d424575792710a3c8075647c9a7bb76b"
        ],
        [
            "assert (Npow2 sz <= N.pos p)%N by (etransitivity; eassumption).",
            "VernacExtend",
            "daa7dc840cbe72145485b40aacbc9f41208d738b"
        ],
        [
            "apply N.le_ngt in H4; auto.",
            "VernacExtend",
            "7dcd3b19428c2e8db7d29b7dd55625f8857341ee"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wordToN_nat, wordToNat_natToWord_2.",
            "VernacExtend",
            "1823c79972fdefa857261ac2b607cc5befec620c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite positive_nat_N; reflexivity.",
            "VernacExtend",
            "1c508527ca1a0ca9d2c0f9b27694ed5fd8964a88"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <-Npow2_nat, <-positive_N_nat.",
            "VernacExtend",
            "d80822e9c1ea3670d6fb52570167aa007f51a832"
        ],
        [
            "apply Nlt_out.",
            "VernacExtend",
            "88011e98490d3cb838470918eccbf2398241c2dd"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite <-N2Z.inj_pos, <-N_nat_Z in H0.",
            "VernacExtend",
            "6de2c55dac4a578800b093680eed673b6ae1e3f7"
        ],
        [
            "apply Nat2Z.inj_lt in H0.",
            "VernacExtend",
            "9487a8ae5ebc63c2bd615bdb1fb7a5594721df8f"
        ],
        [
            "rewrite <-Npow2_nat in H0.",
            "VernacExtend",
            "2add03ccc004f50a19c28095cf7a57bf5604b4da"
        ],
        [
            "apply Nlt_in.",
            "VernacExtend",
            "8b9ae7df6e078b1e67815929f5d406d636411e23"
        ],
        [
            "rewrite Npow2_S, N2Nat.inj_add.",
            "VernacExtend",
            "3c1ef5197252d1a3b4212651674b7698d2945f41"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wneg_idempotent.",
            "VernacExtend",
            "82aa980f27698353e1fb8f23ab935a5c8f29c35e"
        ],
        [
            "rewrite posToWord_nat.",
            "VernacExtend",
            "d56d1090b2a96dd459a96fe0f5abca0dbbe9c925"
        ],
        [
            "remember (wmsb (wneg (natToWord (S sz) (Pos.to_nat p))) false) as msb.",
            "VernacExtend",
            "5edf388e0477918871735240bc46c9be6e23ba38"
        ],
        [
            "destruct msb.",
            "VernacExtend",
            "1a6440c8926b5b29bcb81c8744f032766a165f1c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wordToN_nat, wordToNat_natToWord_2.",
            "VernacExtend",
            "1823c79972fdefa857261ac2b607cc5befec620c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite positive_nat_N; reflexivity.",
            "VernacExtend",
            "1c508527ca1a0ca9d2c0f9b27694ed5fd8964a88"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <-Npow2_nat, <-positive_N_nat.",
            "VernacExtend",
            "d80822e9c1ea3670d6fb52570167aa007f51a832"
        ],
        [
            "apply Nlt_out.",
            "VernacExtend",
            "88011e98490d3cb838470918eccbf2398241c2dd"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Z.opp_le_mono in H.",
            "VernacExtend",
            "74c4d2ee684dafa27b6ff2f2b8dae34d7aced47d"
        ],
        [
            "rewrite Pos2Z.opp_neg, Z.opp_involutive in H.",
            "VernacExtend",
            "1c2bf86608607b452c980a92dcfe0b6253870bf2"
        ],
        [
            "rewrite <-N2Z.inj_pos, <-N_nat_Z in H.",
            "VernacExtend",
            "23ef81fdd37ee4ab30353edf2e1c8078cc488382"
        ],
        [
            "apply Nat2Z.inj_le in H.",
            "VernacExtend",
            "1d720e158e20baaf32a47584ff1ac16989b4b922"
        ],
        [
            "rewrite <-Npow2_nat in H.",
            "VernacExtend",
            "34e8d7b6540a165234f52e4e3856cc325df28adb"
        ],
        [
            "apply Nlt_in.",
            "VernacExtend",
            "8b9ae7df6e078b1e67815929f5d406d636411e23"
        ],
        [
            "rewrite Npow2_S, N2Nat.inj_add.",
            "VernacExtend",
            "3c1ef5197252d1a3b4212651674b7698d2945f41"
        ],
        [
            "assert (N.to_nat (Npow2 sz) > 0)%nat by (rewrite Npow2_nat; apply pow2_zero).",
            "VernacExtend",
            "6c614b7440e22e3c86afe7b0ef4f38290c0493a6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply eq_sym, wmsb_false_bound in Heqmsb.",
            "VernacExtend",
            "20dc52ac728193d528a5e213d276ee577d9139fa"
        ],
        [
            "rewrite wneg_wordToN in Heqmsb.",
            "VernacExtend",
            "b6841d75f1786807dcc5cdc1272b9d992309e33c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite Npow2_S in Heqmsb.",
            "VernacExtend",
            "0ac7619e81615fe56435feff01302ec3a0e23ff5"
        ],
        [
            "rewrite <-N.add_0_r in Heqmsb.",
            "VernacExtend",
            "765774d04bbf25c929d2a0ab6afb5b4fd2fbd1cd"
        ],
        [
            "rewrite <-N.add_sub_assoc in Heqmsb.",
            "VernacExtend",
            "906b0696f0210fb711210b011f406b7fa634121e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply N.add_lt_mono_l in Heqmsb.",
            "VernacExtend",
            "891b7ed9af820691fb8da43847fd000b11dcd126"
        ],
        [
            "exfalso; eapply N.nlt_0_r; eauto.",
            "VernacExtend",
            "2938b645de35ddb19c19bf3b56c1a54cbd6b173a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Z.opp_le_mono in H.",
            "VernacExtend",
            "74c4d2ee684dafa27b6ff2f2b8dae34d7aced47d"
        ],
        [
            "rewrite Pos2Z.opp_neg, Z.opp_involutive in H.",
            "VernacExtend",
            "1c2bf86608607b452c980a92dcfe0b6253870bf2"
        ],
        [
            "rewrite <-N2Z.inj_pos, <-N_nat_Z in H.",
            "VernacExtend",
            "23ef81fdd37ee4ab30353edf2e1c8078cc488382"
        ],
        [
            "apply Nat2Z.inj_le in H.",
            "VernacExtend",
            "1d720e158e20baaf32a47584ff1ac16989b4b922"
        ],
        [
            "rewrite positive_N_nat in H.",
            "VernacExtend",
            "43a3ffef3fe69c292de6d8feee5ec6136f253de4"
        ],
        [
            "rewrite <-positive_N_nat, <-NToWord_nat.",
            "VernacExtend",
            "ce6cbfcb0e38621e0d2836d1aed1da8be8e5b3e6"
        ],
        [
            "pose proof (wordToN_NToWord (S sz) (N.pos p)).",
            "VernacExtend",
            "03fbb4f2a7e8cccce28e929cb60e7a729cacb778"
        ],
        [
            "destruct H1 as [k [? ?]]; rewrite H1.",
            "VernacExtend",
            "c9d99325140babc1a34bf0511063aa05b7ff7611"
        ],
        [
            "etransitivity; [apply N.le_sub_l|].",
            "VernacExtend",
            "f25350b93dc8363368f645c31d3007169f9e9698"
        ],
        [
            "rewrite <-Npow2_nat in H.",
            "VernacExtend",
            "34e8d7b6540a165234f52e4e3856cc325df28adb"
        ],
        [
            "rewrite <-positive_N_nat in H.",
            "VernacExtend",
            "17004268777e3bef4aa4ea277613d0c38ece2616"
        ],
        [
            "unfold N.le; rewrite N2Nat.inj_compare.",
            "VernacExtend",
            "864cfe3f759cb66af1ea9d102270cc4bf2b79fac"
        ],
        [
            "apply nat_compare_le; auto.",
            "VernacExtend",
            "46f383ad2fe40ed3ca9b6fc1060cc0b808e4946f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro Hx.",
            "VernacExtend",
            "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
        ],
        [
            "replace 0%N with (wordToN (wzero (S sz))) in Hx by apply wordToN_wzero.",
            "VernacExtend",
            "a0f971b77a234d3a0e05aba3d0a7c9b08caf60cc"
        ],
        [
            "apply wordToN_inj in Hx.",
            "VernacExtend",
            "dd91158414736fa4862b9f03a516b8cb7842642a"
        ],
        [
            "assert (wordToNat (natToWord (S sz) (Pos.to_nat p)) = 0) by (rewrite Hx; apply wordToNat_wzero).",
            "VernacExtend",
            "4da89bb3cbc0ad1ece34bb283d1e78d1d70bcb30"
        ],
        [
            "rewrite wordToNat_natToWord_2 in H0.",
            "VernacExtend",
            "c9c1e643cc6b861025e5cec103f86375bb640e6a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear -H0.",
            "VernacExtend",
            "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
        ],
        [
            "induction p; simpl in H0; try discriminate.",
            "VernacExtend",
            "4153a51cf1fef2b178b77504c33ca554b384bd55"
        ],
        [
            "elim IHp; rewrite Pos2Nat.inj_xO in H0; omega.",
            "VernacExtend",
            "585fe33df813a5ff667df8be52eac153e598ca03"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Z.opp_le_mono in H.",
            "VernacExtend",
            "74c4d2ee684dafa27b6ff2f2b8dae34d7aced47d"
        ],
        [
            "rewrite Pos2Z.opp_neg, Z.opp_involutive in H.",
            "VernacExtend",
            "1c2bf86608607b452c980a92dcfe0b6253870bf2"
        ],
        [
            "rewrite <-N2Z.inj_pos, <-N_nat_Z in H.",
            "VernacExtend",
            "23ef81fdd37ee4ab30353edf2e1c8078cc488382"
        ],
        [
            "apply Nat2Z.inj_le in H.",
            "VernacExtend",
            "1d720e158e20baaf32a47584ff1ac16989b4b922"
        ],
        [
            "rewrite positive_N_nat in H.",
            "VernacExtend",
            "43a3ffef3fe69c292de6d8feee5ec6136f253de4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "pose proof (pow2_zero sz).",
            "VernacExtend",
            "8e403dfcd800041cdb84d22c1a85359689fe52e0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_ZToWord'': forall (sz: nat), (0 < sz)%nat -> forall n: Z, (- 2 ^ (Z.of_nat sz - 1) <= n < 2 ^ (Z.of_nat sz - 1))%Z -> wordToZ (ZToWord sz n) = n.",
            "VernacStartTheoremProof",
            "ffe20d850897e0886db41465b6bb132bfe98b3bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz; [lia|].",
            "VernacExtend",
            "3be13f79e98d713dff6e8fe54d3ef0749064e447"
        ],
        [
            "apply wordToZ_ZToWord.",
            "VernacExtend",
            "02f7b5a69f71618baca1cd90f55330e5fc2ca3d5"
        ],
        [
            "replace (Z.of_nat (S sz) - 1)%Z with (Z.of_nat sz) in * by lia.",
            "VernacExtend",
            "5f029fedb869bff2916e08325e92899687e99c03"
        ],
        [
            "rewrite Nat2Z.inj_pow.",
            "VernacExtend",
            "11733059196123552663bf15a965a45731d238ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wordToN: forall sz (w: word sz), wordToZ w = (Z.of_N (wordToN w) - Z.of_N (if wmsb w false then Npow2 sz else 0))%Z.",
            "VernacStartTheoremProof",
            "2ab51774d55071555bcf86d7439589a0f235bc74"
        ],
        [
            "unfold wordToZ; intros.",
            "VernacExtend",
            "5714496e388c686b08c1c9ac23abf2832594244a"
        ],
        [
            "remember (wmsb w false) as msb; destruct msb; [|simpl; rewrite Z.sub_0_r; reflexivity].",
            "VernacExtend",
            "13b885078b1a7bfeeb3a72c8df0ee8e0a5e49b09"
        ],
        [
            "destruct (weq w (wzero _)); subst; [rewrite wmsb_wzero in Heqmsb; discriminate|].",
            "VernacExtend",
            "934faa0da6b8a08037f15622543d76be89443528"
        ],
        [
            "rewrite wneg_wordToN.",
            "VernacExtend",
            "5488a0a6e7fd1c4e9a521a0a1bc6ee446a672968"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (wordToN_bound w).",
            "VernacExtend",
            "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
        ],
        [
            "replace (Z.of_N (wordToN w) - Z.of_N (Npow2 sz))%Z with (- (Z.of_N (Npow2 sz) - Z.of_N (wordToN w)))%Z by omega.",
            "VernacExtend",
            "6d9b2051b94d343ad691687f9f184c1b3d2cbdfe"
        ],
        [
            "rewrite <-N2Z.inj_sub by (apply N.lt_le_incl; assumption).",
            "VernacExtend",
            "b01cf5dc64697a3a4b1a044f5a0e136691bc7325"
        ],
        [
            "clear; destruct (Npow2 sz - wordToN w)%N; reflexivity.",
            "VernacExtend",
            "654c84d1781912a53924b71d62398812b6f0cc8c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Hx; elim n.",
            "VernacExtend",
            "915806f47814685ab14b8c9acfe6e8a39c067a18"
        ],
        [
            "rewrite <-wordToN_wzero with (sz:= sz) in Hx.",
            "VernacExtend",
            "0cf8694f8df189b63e9c1f5bb0f6efa3b63d9864"
        ],
        [
            "apply wordToN_inj in Hx; auto.",
            "VernacExtend",
            "56c404883d859012d292fa5faf97379f6df6cce3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Z_of_N: forall sz n, ZToWord sz (Z.of_N n) = NToWord sz n.",
            "VernacStartTheoremProof",
            "d7be81ecb44762a0e9094899c06b2f6fab111375"
        ],
        [
            "unfold ZToWord, NToWord; intros.",
            "VernacExtend",
            "94f0ecc841d26567d708ab52508c05f77e551ae4"
        ],
        [
            "destruct n; reflexivity.",
            "VernacExtend",
            "a209e41a5051b9c3a7517e74f2df52e0f78433d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Z_of_nat: forall sz x, ZToWord sz (Z.of_nat x) = natToWord sz x.",
            "VernacStartTheoremProof",
            "7c1189d612ffb3568a4a1efd6dc12233a6f61874"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- nat_N_Z.",
            "VernacExtend",
            "2299e058450bb33bd2122bac1e7332da5959ff64"
        ],
        [
            "rewrite ZToWord_Z_of_N.",
            "VernacExtend",
            "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
        ],
        [
            "rewrite NToWord_nat.",
            "VernacExtend",
            "82c69b222e8a48623d92c2012d17c715a559d381"
        ],
        [
            "rewrite Nnat.Nat2N.id.",
            "VernacExtend",
            "ad09c0668c750a398aae16300d1da16cd4f9358d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_Z_to_nat: forall sz n, (0 <= n)%Z -> natToWord sz (Z.to_nat n) = ZToWord sz n.",
            "VernacStartTheoremProof",
            "8a6cb0effc99277a4d854dd55e59d9efaa901ef9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- ZToWord_Z_of_nat.",
            "VernacExtend",
            "8a824e45a356817942186602fc7d46d24d7f7845"
        ],
        [
            "rewrite Z2Nat.id by assumption.",
            "VernacExtend",
            "7cc01b6cabdbea3c43f68c44782d4bb75bbfaba4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_sz0: forall z, ZToWord 0 z = $0.",
            "VernacStartTheoremProof",
            "2c4db0b1547794e1f5f97d5622ef54e139fb1789"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ZToWord.",
            "VernacExtend",
            "cc9d9b08f7af8a7f73a535a746831817fe09a583"
        ],
        [
            "destruct z; try rewrite posToWord_sz0; reflexivity.",
            "VernacExtend",
            "b17afd75c4d191f7ce2dab0aa590efc01ca8c05b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_0: forall sz, ZToWord sz 0 = wzero sz.",
            "VernacStartTheoremProof",
            "cef968e483e7179f7d5efeef9a6c15bff2c1e82e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ZToWord.",
            "VernacExtend",
            "cc9d9b08f7af8a7f73a535a746831817fe09a583"
        ],
        [
            "apply wzero'_def.",
            "VernacExtend",
            "d0eed840ac797e0f5b653ce1627ea6830629f26f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_1{sz : nat}: ZToWord sz 1 = wone sz.",
            "VernacStartTheoremProof",
            "e9a1eb458e9d627befe90ca41afa5984477c7e60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- natToWord_Z_to_nat by (cbv; discriminate).",
            "VernacExtend",
            "4af57af04b7f762f30a8a80e9e8146f7a67e84b5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_pow2_add: forall sz n, natToWord sz (n + pow2 sz) = natToWord sz n.",
            "VernacStartTheoremProof",
            "edbc9c9f63424872b4dc0c0907af0f0b1321f4f1"
        ],
        [
            "induction sz; intros; [reflexivity|].",
            "VernacExtend",
            "302029c931ef2cabb8020b132ac404d347597c62"
        ],
        [
            "unfold natToWord, pow2; fold natToWord pow2.",
            "VernacExtend",
            "9c224194d5614db22163bb390684c3e44b19df2f"
        ],
        [
            "rewrite drop_mod2_add, div2_plus_2, IHsz.",
            "VernacExtend",
            "e08a18e490e6e46ca0d84cc4ccc379d577e5272c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_add_pow2_wzero: forall sz n1 n2, n1 + n2 = pow2 sz -> natToWord sz n1 ^+ natToWord sz n2 = wzero sz.",
            "VernacStartTheoremProof",
            "36206dcff81a443d3889470deee99bfd857b389f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-natToWord_plus, H.",
            "VernacExtend",
            "566e312269347003d5b81b1357f76e978ca270dd"
        ],
        [
            "rewrite natToWord_pow2.",
            "VernacExtend",
            "b17b4b2dd18651bb320463211340f92fcee41b4a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Npos_Npow2_wzero: forall sz p1 p2, N.pos (p1 + p2) = Npow2 sz -> posToWord sz p1 ^+ posToWord sz p2 = wzero sz.",
            "VernacStartTheoremProof",
            "87f0073bc09c1097cae376c452137920c7c674af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite posToWord_nat.",
            "VernacExtend",
            "7755ebbe9e977ba4d5df2e1d2f1a78d6b7f1780a"
        ],
        [
            "assert (Pos.to_nat p1 + Pos.to_nat p2 = pow2 sz).",
            "VernacExtend",
            "75cc7ffae96d055a37035f97a654868227070c1d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-Pos2Nat.inj_add, <-Npow2_nat.",
            "VernacExtend",
            "2879fbe6b2df222b59a85a9622b578ff78e2b56f"
        ],
        [
            "rewrite <-positive_N_nat.",
            "VernacExtend",
            "6c5f55c5247ddb07cb641852613d0b7c812466d0"
        ],
        [
            "rewrite H; reflexivity.",
            "VernacExtend",
            "1eef9b63d851b99cfa44117acf0ddd958095123d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply nat_add_pow2_wzero; auto.",
            "VernacExtend",
            "e83e03b8cc449f555ca5861ccedb31152d7297ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Npow2_sub: forall sz z, ZToWord sz (z - Z.of_N (Npow2 sz)) = ZToWord sz z.",
            "VernacStartTheoremProof",
            "4ec5d02c4cede7d4183d47a1eb149cc0bffe8211"
        ],
        [
            "unfold ZToWord; intros.",
            "VernacExtend",
            "b353b26a016c3571c12372cb0acfe8ff5356c08f"
        ],
        [
            "remember (z - Z.of_N (Npow2 sz))%Z as zz.",
            "VernacExtend",
            "bd0dbea49151a43b32a5e46937d027c9b32946ad"
        ],
        [
            "destruct z.",
            "VernacExtend",
            "7ad6537de6adc4973a413756c31bffcd5e25902c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct zz.",
            "VernacExtend",
            "fafc270993ab724a0ec39a59754f4ed8b8662652"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.of_N (Npow2 sz) = 0)%Z by omega.",
            "VernacExtend",
            "3bf8c3c643a9c4a2da12d57f5a3c700a5b359cc3"
        ],
        [
            "change 0%Z with (Z.of_N 0%N) in H.",
            "VernacExtend",
            "43a66a9a631e16e89a7dac3209bc00dbd08d8c1e"
        ],
        [
            "apply N2Z.inj in H.",
            "VernacExtend",
            "8a800fd4b9409ff56f4f5f2f86def4ed5fa7e87f"
        ],
        [
            "exfalso; eapply Npow2_not_zero; eauto.",
            "VernacExtend",
            "6c55c711ba05dd90e4c03d6a2ecc2410cccda85c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (N2Z.is_nonneg (Npow2 sz)).",
            "VernacExtend",
            "263bddf6679fef23dfe0d3a5c6001bc942ea0388"
        ],
        [
            "destruct (Z.of_N (Npow2 sz)); simpl in Heqzz, H; try discriminate.",
            "VernacExtend",
            "8008f18821023ffb19af02d0d1eb246b35ff57d2"
        ],
        [
            "pose proof (Pos2Z.neg_is_neg p0); omega.",
            "VernacExtend",
            "bdf100d19696072afdd640c120aa947bc75a23d6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.of_N (Npow2 sz) = Z.pos p).",
            "VernacExtend",
            "71e3f0c81e4a836dd91715a185b5d74c04b6315a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite Z.sub_0_l, <-Pos2Z.opp_pos in Heqzz.",
            "VernacExtend",
            "2d9125101ec51c5a0240e2d7d1c593d78010c83e"
        ],
        [
            "apply Z.opp_inj in Heqzz; auto.",
            "VernacExtend",
            "ad0ef39063aa30d813fa3b764d07d3284441f365"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <-N2Z.inj_pos in H.",
            "VernacExtend",
            "2a4ea78feadde97dce7cb93af50e33e9e6f2517c"
        ],
        [
            "apply N2Z.inj in H.",
            "VernacExtend",
            "8a800fd4b9409ff56f4f5f2f86def4ed5fa7e87f"
        ],
        [
            "rewrite posToWord_nat, <-positive_N_nat, <-H.",
            "VernacExtend",
            "3ac1b4b174cd415437e8af56b77ee86061b01911"
        ],
        [
            "rewrite Npow2_nat, natToWord_pow2.",
            "VernacExtend",
            "f4793ba8560d7e1388eb92171faf5454d3be4486"
        ],
        [
            "rewrite wzero_wneg.",
            "VernacExtend",
            "38aee4a6efa8749b49e0e0e3566ee506ffed3515"
        ],
        [
            "apply eq_sym, wzero'_def.",
            "VernacExtend",
            "30b6743d279033bbdd16e5b9f77eeaa6774a2cec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct zz.",
            "VernacExtend",
            "fafc270993ab724a0ec39a59754f4ed8b8662652"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.of_N (Npow2 sz) = Z.pos p) by omega.",
            "VernacExtend",
            "9fae4c6073f920afe99982c8a62819b510063d01"
        ],
        [
            "rewrite <-N2Z.inj_pos in H.",
            "VernacExtend",
            "2a4ea78feadde97dce7cb93af50e33e9e6f2517c"
        ],
        [
            "apply N2Z.inj in H.",
            "VernacExtend",
            "8a800fd4b9409ff56f4f5f2f86def4ed5fa7e87f"
        ],
        [
            "rewrite posToWord_nat, <-positive_N_nat, <-H.",
            "VernacExtend",
            "3ac1b4b174cd415437e8af56b77ee86061b01911"
        ],
        [
            "rewrite Npow2_nat, natToWord_pow2.",
            "VernacExtend",
            "f4793ba8560d7e1388eb92171faf5454d3be4486"
        ],
        [
            "apply wzero'_def.",
            "VernacExtend",
            "d0eed840ac797e0f5b653ce1627ea6830629f26f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.pos p = Z.pos p0 + Z.of_N (Npow2 sz))%Z by omega.",
            "VernacExtend",
            "7e44596ea87b29a931cf41ca9d56c98e4442b315"
        ],
        [
            "do 2 rewrite <-N2Z.inj_pos in H.",
            "VernacExtend",
            "bb0bf5334c1c67d72b94455050546b052bf46ff2"
        ],
        [
            "rewrite <-N2Z.inj_add in H.",
            "VernacExtend",
            "b8185983d0f6cea0ec1cc5a26d15d41ca86487a3"
        ],
        [
            "apply N2Z.inj in H.",
            "VernacExtend",
            "8a800fd4b9409ff56f4f5f2f86def4ed5fa7e87f"
        ],
        [
            "apply eq_sym.",
            "VernacExtend",
            "313410cb7bcb68dc243125f00e91764f51d94be6"
        ],
        [
            "do 2 rewrite posToWord_nat, <-positive_N_nat.",
            "VernacExtend",
            "33366b0c0422c42febdbb8882006c4f06124e0ad"
        ],
        [
            "rewrite H, N2Nat.inj_add, Npow2_nat.",
            "VernacExtend",
            "ccae0c8c62ad72ef1932b850c3a94aeaf2b419dc"
        ],
        [
            "apply natToWord_pow2_add.",
            "VernacExtend",
            "9c71de35752e1bf3058688d1cad9acd89a5a2596"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.pos p - Z.neg p0 = Z.of_N (Npow2 sz))%Z by omega.",
            "VernacExtend",
            "6da36904124666e160676ddada42a78bfca0e071"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "remember (Npow2 sz) as n; destruct n; [exfalso; eapply Npow2_not_zero; eauto|].",
            "VernacExtend",
            "cbb62a363911eaf8ff3e0b6b1bb55bc05049f242"
        ],
        [
            "rewrite N2Z.inj_pos in H; inversion H; subst; clear H.",
            "VernacExtend",
            "180442d0e651ef5aae5a48b55e68a32444b6b40b"
        ],
        [
            "apply eq_sym, sub_0_eq.",
            "VernacExtend",
            "f8fd28dbd7292e2000e22266ed629084094cdfdf"
        ],
        [
            "rewrite wminus_def, wneg_idempotent.",
            "VernacExtend",
            "7aee5318518c995167c455aa386959ac1018fa40"
        ],
        [
            "apply Npos_Npow2_wzero; auto.",
            "VernacExtend",
            "2ad5d41de0ddd1023d5dc6b5f5e2585a463a2187"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct zz.",
            "VernacExtend",
            "fafc270993ab724a0ec39a59754f4ed8b8662652"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.neg p = Z.of_N (Npow2 sz))%Z by omega.",
            "VernacExtend",
            "c9d042ac2a4a0e43f997d38e6c2c15d0ec13707f"
        ],
        [
            "pose proof (N2Z.is_nonneg (Npow2 sz)).",
            "VernacExtend",
            "263bddf6679fef23dfe0d3a5c6001bc942ea0388"
        ],
        [
            "rewrite <-H in H0.",
            "VernacExtend",
            "044ef0a64c068347d38112a9feb1635f78270f85"
        ],
        [
            "pose proof (Pos2Z.neg_is_neg p); omega.",
            "VernacExtend",
            "9ec51b511166c439429822d789cb71bd483c1d8a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Z.neg p = Z.pos p0 + Z.of_N (Npow2 sz))%Z by omega.",
            "VernacExtend",
            "cdab50d49299fe6d8c751600167363a9fa7f2655"
        ],
        [
            "pose proof (N2Z.is_nonneg (Npow2 sz)).",
            "VernacExtend",
            "263bddf6679fef23dfe0d3a5c6001bc942ea0388"
        ],
        [
            "destruct (Z.of_N (Npow2 sz)); simpl in H; try discriminate.",
            "VernacExtend",
            "c0c8ad16153c88a01220e1e6999032135f459889"
        ],
        [
            "pose proof (Pos2Z.neg_is_neg p1); omega.",
            "VernacExtend",
            "edae7f04d02c743ca94ef4d77e24e97ddd867b4d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (Pos.to_nat p0 = Pos.to_nat p + pow2 sz).",
            "VernacExtend",
            "1747867a2c566a0698b6e02c7798fabe33e62611"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "do 2 rewrite <-positive_N_nat.",
            "VernacExtend",
            "8ab6d9dca9979a96d0a00c76bfacc6191aa91cab"
        ],
        [
            "rewrite <-N2Nat.inj_add.",
            "VernacExtend",
            "e4b72cf2bf081578f789ba83267c01f267908f32"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "pose proof (N2Z.is_nonneg (Npow2 sz)).",
            "VernacExtend",
            "263bddf6679fef23dfe0d3a5c6001bc942ea0388"
        ],
        [
            "remember (Z.of_N (Npow2 sz)) as z; destruct z.",
            "VernacExtend",
            "8a4e5d594179373dcac3e3095a9a2cc650640411"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change 0%Z with (Z.of_N 0) in Heqz.",
            "VernacExtend",
            "ee2ca436cd36b3ba7a6063f54664777a3c6a8aaf"
        ],
        [
            "apply N2Z.inj in Heqz.",
            "VernacExtend",
            "8f248bebc20fe67cc3650b211de5299e5a47403a"
        ],
        [
            "exfalso; eapply Npow2_not_zero; eauto.",
            "VernacExtend",
            "6c55c711ba05dd90e4c03d6a2ecc2410cccda85c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "simpl in Heqzz; inversion Heqzz; subst.",
            "VernacExtend",
            "315f3fdc92b1ebf63eabc4aa8bd5a60fc66cbbe6"
        ],
        [
            "rewrite <-N2Z.inj_pos in Heqz.",
            "VernacExtend",
            "10b1ba040d1678ea4f21c9f7dc2764fbfcb5867b"
        ],
        [
            "apply N2Z.inj in Heqz.",
            "VernacExtend",
            "8f248bebc20fe67cc3650b211de5299e5a47403a"
        ],
        [
            "rewrite <-Heqz.",
            "VernacExtend",
            "d396ca02c1fac13423cb23f69d7889f2b1e87412"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "pose proof (Zlt_neg_0 p1); omega.",
            "VernacExtend",
            "0b8ddd25e01ab4129639f5e6f83306d5168c26ce"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "do 2 rewrite posToWord_nat.",
            "VernacExtend",
            "7755ebbe9e977ba4d5df2e1d2f1a78d6b7f1780a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply natToWord_pow2_add.",
            "VernacExtend",
            "9c71de35752e1bf3058688d1cad9acd89a5a2596"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_wplusZ: forall sz (w1 w2: word sz), w1 ^+ w2 = wplusZ w1 w2.",
            "VernacStartTheoremProof",
            "faea0b14b2168515557477c6b6e24e459c56eb02"
        ],
        [
            "unfold wplus, wplusZ, wordBin, wordBinZ; intros.",
            "VernacExtend",
            "1c06a2ec9e091d56b580d1cdf04f4cd2f5aa5298"
        ],
        [
            "do 2 rewrite wordToZ_wordToN.",
            "VernacExtend",
            "a7fbc1416548c7fc51551a6e30d9d8e5e6afbebf"
        ],
        [
            "match goal with | [ |- context[(?z1 - ?z2 + (?z3 - ?z4))%Z] ] => replace (z1 - z2 + (z3 - z4))%Z with (z1 + z3 - z2 - z4)%Z by omega end.",
            "VernacExtend",
            "c01844d664f9e078682ede465c8acd5ea709a209"
        ],
        [
            "rewrite <-N2Z.inj_add.",
            "VernacExtend",
            "89d239289698865c4e78541c99cffed406c8ae8f"
        ],
        [
            "destruct (wmsb w1 false); destruct (wmsb w2 false).",
            "VernacExtend",
            "9f947b076a7de888b75df4aaac360cd4ba64cdbd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; do 2 rewrite ZToWord_Npow2_sub.",
            "VernacExtend",
            "3f58f5d3612b3d67f11fd66d5e92bfd02638164c"
        ],
        [
            "apply eq_sym, ZToWord_Z_of_N.",
            "VernacExtend",
            "8b51df3ec23762efdf85c07c4fc95a368403959c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite Z.sub_0_r, ZToWord_Npow2_sub.",
            "VernacExtend",
            "92321e6a2182ea7abe1449dd256e13ec4743885f"
        ],
        [
            "apply eq_sym, ZToWord_Z_of_N.",
            "VernacExtend",
            "8b51df3ec23762efdf85c07c4fc95a368403959c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; rewrite Z.sub_0_r, ZToWord_Npow2_sub.",
            "VernacExtend",
            "92321e6a2182ea7abe1449dd256e13ec4743885f"
        ],
        [
            "apply eq_sym, ZToWord_Z_of_N.",
            "VernacExtend",
            "8b51df3ec23762efdf85c07c4fc95a368403959c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; do 2 rewrite Z.sub_0_r.",
            "VernacExtend",
            "fa62440122c993e9f409c612cb7cc673edea981a"
        ],
        [
            "apply eq_sym, ZToWord_Z_of_N.",
            "VernacExtend",
            "8b51df3ec23762efdf85c07c4fc95a368403959c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Npow2_sub_k : forall (sz : nat) (z : Z) (k: nat), ZToWord sz (z - Z.of_nat k * Z.of_N (Npow2 sz)) = ZToWord sz z.",
            "VernacStartTheoremProof",
            "c35a5b9a5e37f5f596168d765135d784d1f51f86"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction k.",
            "VernacExtend",
            "40c5b84c7f25c7c24e470db498af5e654cfce415"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- IHk.",
            "VernacExtend",
            "f6426e64f93538985825bede8738f7a3ee6eda28"
        ],
        [
            "replace (z - Z.of_nat (S k) * Z.of_N (Npow2 sz))%Z with ((z - Z.of_nat k * Z.of_N (Npow2 sz)) - Z.of_N (Npow2 sz))%Z by nia.",
            "VernacExtend",
            "a86b0c33dfb75c69e6575432e60ee15bfea87db4"
        ],
        [
            "apply ZToWord_Npow2_sub.",
            "VernacExtend",
            "c9dad014a3c58d39e7a35daa1c2b8410832034aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Npow2_add_k : forall (sz : nat) (z : Z) (k: nat), ZToWord sz (z + Z.of_nat k * Z.of_N (Npow2 sz)) = ZToWord sz z.",
            "VernacStartTheoremProof",
            "a8590da0952302f60ddc017a4fd624750b5cfb71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace z with (z + Z.of_nat k * Z.of_N (Npow2 sz) - Z.of_nat k * Z.of_N (Npow2 sz))%Z at 2 by omega.",
            "VernacExtend",
            "9e3e0ef475687cd3c98a3c46e1c408f9fae6bbc9"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply ZToWord_Npow2_sub_k.",
            "VernacExtend",
            "2067e8d112f85e28a262a73653747492ea9a8ed4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Npow2_sub_z : forall (sz : nat) (z : Z) (k: Z), ZToWord sz (z - k * Z.of_N (Npow2 sz)) = ZToWord sz z.",
            "VernacStartTheoremProof",
            "2acf37064a3c19796c01526e6e1a605a077a354f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct k.",
            "VernacExtend",
            "276a2174e55489a07c8e0fd8db1630e98ae9c376"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- positive_nat_Z.",
            "VernacExtend",
            "347574d36dd587e42c95ef9fa9fe67d157cb028c"
        ],
        [
            "apply ZToWord_Npow2_sub_k.",
            "VernacExtend",
            "2067e8d112f85e28a262a73653747492ea9a8ed4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Pos2Z.opp_pos.",
            "VernacExtend",
            "474fbabf620cd5fc71665a0f9a106439a1479b86"
        ],
        [
            "replace (z - - Z.pos p * Z.of_N (Npow2 sz))%Z with (z + Z.pos p * Z.of_N (Npow2 sz))%Z by nia.",
            "VernacExtend",
            "2af2df113d8a3089edd1200b6b53a6348bc2f815"
        ],
        [
            "rewrite <- positive_nat_Z.",
            "VernacExtend",
            "347574d36dd587e42c95ef9fa9fe67d157cb028c"
        ],
        [
            "apply ZToWord_Npow2_add_k.",
            "VernacExtend",
            "410a8f82e63b5c7c8a5307dfbf2f522c920c18f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_Npow2_add_k': forall sz z k, ZToWord sz (z + k * Z.of_N (Npow2 sz)) = ZToWord sz z.",
            "VernacStartTheoremProof",
            "c397c67852289d7814ac04e3e1f408967d17ff6e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (0 <= k \\/ k < 0)%Z as C by lia.",
            "VernacExtend",
            "621a7a6da64b91ccf9992bb7fc9683e85d0c2f52"
        ],
        [
            "destruct C as [C | C].",
            "VernacExtend",
            "73fc1015ebc22a96dd0a9237e6d3788972640d38"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (ZToWord_Npow2_add_k sz z (Z.to_nat k)) as Q.",
            "VernacExtend",
            "758fef27270c0067259a151e9b293c14415d3192"
        ],
        [
            "rewrite Znat.Z2Nat.id in Q; assumption.",
            "VernacExtend",
            "a6b4dbed43a77b54c4be70b80defcb6fc29aa91a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "pose proof (ZToWord_Npow2_sub_k sz z (Z.to_nat (- k))) as Q.",
            "VernacExtend",
            "3add2bfaa51008d069b480c5c91960dc4a9dd56f"
        ],
        [
            "rewrite Znat.Z2Nat.id in Q by lia.",
            "VernacExtend",
            "98dd997005477282fca4070cebd7dbb3b18e0837"
        ],
        [
            "rewrite <- Q.",
            "VernacExtend",
            "03189bc0bb459a3ff2823d77e7fec24854cc20cd"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "lia.",
            "VernacExtend",
            "704449849433d1ca93a4883dcd0d5fc4089bb5c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_ZToWord': forall sz w, exists k, wordToZ (ZToWord sz w) = (w - k * Z.of_N (Npow2 sz))%Z.",
            "VernacStartTheoremProof",
            "e0b05e62d634c075823803da0f31304c06ddf071"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists w%Z.",
            "VernacExtend",
            "175483d51a249478fa3f3dd682732e9df3d6d372"
        ],
        [
            "rewrite ZToWord_sz0.",
            "VernacExtend",
            "e0910fcd98e28ac07aa07c2a21dcda813248c125"
        ],
        [
            "rewrite wordToZ_wzero.",
            "VernacExtend",
            "ecee8d186f10450f9e8325cdf6ae4581464e0562"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists ((w + Z.of_nat (pow2 sz)) / Z.of_N (Npow2 (S sz)))%Z.",
            "VernacExtend",
            "f8bec1bafd6a3dabb611a6b88ebe638b88e50444"
        ],
        [
            "erewrite <- ZToWord_Npow2_sub_z.",
            "VernacExtend",
            "3e2e0602c68c7a33d8a376fea9da6f6cabef8a46"
        ],
        [
            "rewrite wordToZ_ZToWord.",
            "VernacExtend",
            "315ac152cf9b808a555d34d49c05d814f6328af7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace w with ((- Z.of_nat (pow2 sz)) + (w + Z.of_nat (pow2 sz)))%Z at 1 3 by omega.",
            "VernacExtend",
            "a7546f9e51b4b3d91339e28b0391231bfb9b9ac8"
        ],
        [
            "rewrite <- Z.add_sub_assoc.",
            "VernacExtend",
            "49693a70cb778fd114f98d9813153a05d0a3d6f7"
        ],
        [
            "replace (Z.of_N (Npow2 (S sz))) with (2 * Z.of_nat (pow2 sz))%Z.",
            "VernacExtend",
            "bfd9a0839b1a0e1040b37cd5b7168b8834f8587c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "remember (Z.of_nat (pow2 sz)) as M.",
            "VernacExtend",
            "ff5e38471a29c95aedf528027d69eaa883a104bd"
        ],
        [
            "assert (M > 0)%Z.",
            "VernacExtend",
            "5e83ad11007a040efd357b924b64b751dd4f6753"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct (pow2 sz) eqn: E.",
            "VernacExtend",
            "6e176228e364b71e9f6b63d5d108407aea180ab7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eapply pow2_ne_zero.",
            "VernacExtend",
            "5647e45462bf47bc48b3cde8f0bc58815652b541"
        ],
        [
            "exact E.",
            "VernacExtend",
            "ea077aeadd15e195fdab663e98bb112c23639fc1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- Zdiv.Zmod_eq_full by omega.",
            "VernacExtend",
            "a40c681eef3503995f6ab91b03cef33f704cac0a"
        ],
        [
            "pose proof (Zdiv.Z_mod_lt (w + M) (2 * M)).",
            "VernacExtend",
            "ca204b1502fffe9178210f4e3cc24f9bdc4697c4"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <- Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "rewrite N_nat_Z.",
            "VernacExtend",
            "bc80f8e6d06ab7227f16b6527d7476494775545e"
        ],
        [
            "rewrite Npow2_S.",
            "VernacExtend",
            "22081864f5a4d1297cc38f49898f7c4dbb66763b"
        ],
        [
            "rewrite N2Z.inj_add.",
            "VernacExtend",
            "ecd648da6b44c895c3ad4ba087f7658be3c31184"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_plus: forall sz a b, ZToWord sz (a + b) = ZToWord sz a ^+ ZToWord sz b.",
            "VernacStartTheoremProof",
            "fbc9c595d0f9885d5fc4217c6c775d62462cc74e"
        ],
        [
            "destruct sz as [|sz]; intros n m; intuition.",
            "VernacExtend",
            "d5819b557d68b2f07bacc03b19c3a42ebb0ac3a2"
        ],
        [
            "rewrite wplus_wplusZ.",
            "VernacExtend",
            "8b363767f1e41dfccad8e96b37d03f8892e409dc"
        ],
        [
            "unfold wplusZ, wordBinZ.",
            "VernacExtend",
            "ecf23d8a5a087828a099c0b4e92500d338fe0aaf"
        ],
        [
            "destruct (wordToZ_ZToWord' (S sz) n) as [k1 D1].",
            "VernacExtend",
            "17dbdcddd420a41c9f2c378cd0e6efe908b96ba3"
        ],
        [
            "destruct (wordToZ_ZToWord' (S sz) m) as [k2 D2].",
            "VernacExtend",
            "0cb614a739ad6931698004fdca54aefecbc1ab78"
        ],
        [
            "rewrite D1.",
            "VernacExtend",
            "3d18ca53d77dea28761030d5e07d152ba2af1934"
        ],
        [
            "rewrite D2.",
            "VernacExtend",
            "d9d165826b523a60d59c9cb1ae758a130a1aca96"
        ],
        [
            "replace (n - k1 * Z.of_N (Npow2 (S sz)) + (m - k2 * Z.of_N (Npow2 (S sz))))%Z with (n + m - (k1 + k2) * Z.of_N (Npow2 (S sz)))%Z by nia.",
            "VernacExtend",
            "df02b0bbd67b685f4bceadac9010cf7eab9e485f"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply ZToWord_Npow2_sub_z.",
            "VernacExtend",
            "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_Z: forall sz (a b : word sz), a ^+ b = ZToWord sz (wordToZ a + wordToZ b).",
            "VernacStartTheoremProof",
            "4f8e2da3d20b8649f8f038b91d5a7e12cbbe5613"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZToWord_plus.",
            "VernacExtend",
            "fd4fa067420468234b77e300f674d80ff0348e8b"
        ],
        [
            "rewrite! ZToWord_wordToZ.",
            "VernacExtend",
            "14b45f5e8193559a6cda2e6a8273fe84bc6b2d3c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma else_0_to_ex_N: forall (b: bool) (a: N), exists k, (if b then a else 0%N) = (k * a)%N.",
            "VernacStartTheoremProof",
            "89ccbb79643426e245b7004895e7c7dc0a8cf66d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 1%N.",
            "VernacExtend",
            "488cd3f2ec8956871824077810e46f11d42748e6"
        ],
        [
            "nia.",
            "VernacExtend",
            "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists 0%N.",
            "VernacExtend",
            "6423709c890975af442bd8a9fa00575ea2918562"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Lemma wmultZ_helper: forall a b k1 k2 p, ((a - k1 * p) * (b - k2 * p) = a * b - (k1 * b + k2 * a - k1 * k2 * p) * p)%Z.",
            "VernacStartTheoremProof",
            "00b1c1096f353c539bdee1d1195f0d2c24c607f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "nia.",
            "VernacExtend",
            "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmult_wmultZ: forall (sz : nat) (w1 w2 : word sz), w1 ^* w2 = wmultZ w1 w2.",
            "VernacStartTheoremProof",
            "432496a48e2bd7c85c1affe68556fdda18edb6af"
        ],
        [
            "unfold wmultZ, wmult, wordBinZ, wordBin.",
            "VernacExtend",
            "226e0595f4e871089390d75dd14ab1ecaf276fea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite wordToZ_wordToN.",
            "VernacExtend",
            "a7fbc1416548c7fc51551a6e30d9d8e5e6afbebf"
        ],
        [
            "destruct (else_0_to_ex_N (wmsb w1 false) (Npow2 sz)) as [k1 E1].",
            "VernacExtend",
            "c4edc45a334b9624fbe8dd1b1f2b6449f49056f2"
        ],
        [
            "rewrite E1.",
            "VernacExtend",
            "b9c415ffa44d53a51b9f614458a27dcb3be2552d"
        ],
        [
            "clear E1.",
            "VernacExtend",
            "45212568a5f3d672665a0d1dcddfad3272bf4290"
        ],
        [
            "destruct (else_0_to_ex_N (wmsb w2 false) (Npow2 sz)) as [k2 E2].",
            "VernacExtend",
            "07487923605f19c8b249dfdc22229403adfad3b2"
        ],
        [
            "rewrite E2.",
            "VernacExtend",
            "c1992017a1964997678a075d895ea663dab1c9df"
        ],
        [
            "clear E2.",
            "VernacExtend",
            "acbf6e5cccde340d24b0b0b741389b8c6898cbf3"
        ],
        [
            "do 2 rewrite N2Z.inj_mul.",
            "VernacExtend",
            "59a65998f9be012fdadc81f8090ed6212931187b"
        ],
        [
            "rewrite wmultZ_helper.",
            "VernacExtend",
            "d34bfab2e941fe77d7cba6aa3b0ec64dcf81a876"
        ],
        [
            "rewrite <- N2Z.inj_mul.",
            "VernacExtend",
            "83c8dec9ef810068b63c463c9f7df1e3826a6d1c"
        ],
        [
            "rewrite ZToWord_Npow2_sub_z.",
            "VernacExtend",
            "717de0d275ea442075ff58865db3ca58a3cb922d"
        ],
        [
            "rewrite ZToWord_Z_of_N.",
            "VernacExtend",
            "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_mult: forall sz a b, ZToWord sz (a * b) = ZToWord sz a ^* ZToWord sz b.",
            "VernacStartTheoremProof",
            "7cad4d27f19eccaf4d742595f62df7f10d38d986"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wmult_wmultZ.",
            "VernacExtend",
            "7dea4c5d5d830527dcf4b03e356567be20bddc3f"
        ],
        [
            "unfold wmultZ, wordBinZ.",
            "VernacExtend",
            "adf96a4cc8e3cc14d13ced53905a17655b00c5bc"
        ],
        [
            "destruct (wordToZ_ZToWord' sz a) as [k1 D1].",
            "VernacExtend",
            "de4dfa2e6875fc8b8fa735b9ebeaec9417f80c55"
        ],
        [
            "rewrite D1.",
            "VernacExtend",
            "3d18ca53d77dea28761030d5e07d152ba2af1934"
        ],
        [
            "clear D1.",
            "VernacExtend",
            "029b292bc5c6c645d5bae17286a450af69f0b590"
        ],
        [
            "destruct (wordToZ_ZToWord' sz b) as [k2 D2].",
            "VernacExtend",
            "159bcbb90ead05cb70508b602c1d05246842e1d3"
        ],
        [
            "rewrite D2.",
            "VernacExtend",
            "d9d165826b523a60d59c9cb1ae758a130a1aca96"
        ],
        [
            "clear D2.",
            "VernacExtend",
            "9b2df1b65650b44d2caf676942f309083ae07027"
        ],
        [
            "rewrite wmultZ_helper.",
            "VernacExtend",
            "d34bfab2e941fe77d7cba6aa3b0ec64dcf81a876"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply ZToWord_Npow2_sub_z.",
            "VernacExtend",
            "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmult_Z: forall sz (a b : word sz), a ^* b = ZToWord sz (wordToZ a * wordToZ b).",
            "VernacStartTheoremProof",
            "4fabf0b7137098fc9c0c214f7571d10cbe8a1f3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZToWord_mult.",
            "VernacExtend",
            "8c2fd96ec49561173854d2245bc46456f763d1fa"
        ],
        [
            "rewrite! ZToWord_wordToZ.",
            "VernacExtend",
            "14b45f5e8193559a6cda2e6a8273fe84bc6b2d3c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wplus_bound: forall sz (w1 w2: word (S sz)), (- Z.of_nat (pow2 sz) <= wordToZ w1 + wordToZ w2 < Z.of_nat (pow2 sz))%Z -> (wordToZ w1 + wordToZ w2 = wordToZ (w1 ^+ w2))%Z.",
            "VernacStartTheoremProof",
            "58d2c7883d08060ea79845b22bf445fded2429bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wplus_wplusZ.",
            "VernacExtend",
            "8b363767f1e41dfccad8e96b37d03f8892e409dc"
        ],
        [
            "unfold wplusZ, wordBinZ.",
            "VernacExtend",
            "ecf23d8a5a087828a099c0b4e92500d338fe0aaf"
        ],
        [
            "remember (wordToZ w1 + wordToZ w2)%Z as z; clear Heqz.",
            "VernacExtend",
            "33a0c6a9fadec25231843e9a8eefb0ed53bf3d5b"
        ],
        [
            "apply eq_sym, wordToZ_ZToWord; assumption.",
            "VernacExtend",
            "61fc529a6bd773fbd7adce7f2f39f768da924528"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wplus_bound': forall sz (w1 w2: word sz), sz <> 0 -> (- Z.of_nat (pow2 (pred sz)) <= wordToZ w1 + wordToZ w2 < Z.of_nat (pow2 (pred sz)))%Z -> (wordToZ w1 + wordToZ w2 = wordToZ (w1 ^+ w2))%Z.",
            "VernacStartTheoremProof",
            "8c36f98d6c1939662dd7f7664c3fdf026adca28f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz; [exfalso; auto|clear H].",
            "VernacExtend",
            "9e7ebdd65ad4c1603f3ed5550af73f486540049a"
        ],
        [
            "apply wordToZ_wplus_bound; auto.",
            "VernacExtend",
            "57d55267c9e9ce4cb40603d34fc4ebdaa09393f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_size': forall sz (w: word (S sz)), (- Z.of_nat (pow2 sz) <= wordToZ w < Z.of_nat (pow2 sz))%Z.",
            "VernacStartTheoremProof",
            "50c9bcc0b0a5e2c7009c68858f0d5087d43bb7d4"
        ],
        [
            "unfold wordToZ; intros.",
            "VernacExtend",
            "5714496e388c686b08c1c9ac23abf2832594244a"
        ],
        [
            "remember (wmsb w false) as msb; destruct msb.",
            "VernacExtend",
            "0dad806b701c260963ec8676142ca43e0383d8f0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (weq w (wpow2 _)).",
            "VernacExtend",
            "d4ab9f605d8bebe51ca6d5b22ebe8e9e8a31b6a3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst; rewrite wpow2_wneg.",
            "VernacExtend",
            "d230b06683a529e8473e7c196ac1fce0a8a1999a"
        ],
        [
            "rewrite wpow2_Npow2.",
            "VernacExtend",
            "ec9b18317ced5e696210137224fe1f270d972e70"
        ],
        [
            "remember (Npow2 sz) as np.",
            "VernacExtend",
            "d68ad7aecaa342010f9c9b25162873e34277eb7f"
        ],
        [
            "destruct np; [exfalso; eapply Npow2_not_zero; eauto|].",
            "VernacExtend",
            "04a8061b6cdc427fac9fe04ecced3361372b5979"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <-Pos2Z.opp_pos, <-N2Z.inj_pos.",
            "VernacExtend",
            "a14cfe83e2a4aef31992a8cbe88663ee3a931ec0"
        ],
        [
            "rewrite Heqnp.",
            "VernacExtend",
            "892f64d71f10b02cd92cf9da2f4021dce0334871"
        ],
        [
            "rewrite <-Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "rewrite N_nat_Z.",
            "VernacExtend",
            "bc80f8e6d06ab7227f16b6527d7476494775545e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Pos2Z.neg_is_neg.",
            "VernacExtend",
            "1703e4deb0720e10b1d111fed575c0da2a7a60c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change 0%Z with (Z.of_nat 0).",
            "VernacExtend",
            "3061a61a6772fd2da80b9809e274af8e915f6979"
        ],
        [
            "apply Nat2Z.inj_lt.",
            "VernacExtend",
            "6ec2c5bd1d02f2d0261f8c87f0d2bf550988e026"
        ],
        [
            "apply zero_lt_pow2.",
            "VernacExtend",
            "631ebee4f4ba20c41b1f5a1113e81f1578f7cb5b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (wordToN (wneg w) < Npow2 sz)%N.",
            "VernacExtend",
            "2c113185bc8826954e2f19a119353c57a48a4052"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wmsb_false_bound.",
            "VernacExtend",
            "9c92197367c553c09ce5faca2e0d0e8dbc4bcabb"
        ],
        [
            "eapply wmsb_wneg_true; eauto.",
            "VernacExtend",
            "9ba24e6261a4291689abcb270872a897aee66bdb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "remember (wordToN (wneg w)) as ww; clear Heqww.",
            "VernacExtend",
            "f8f9103fe04126a3d25d0bef0a776ba341c15af1"
        ],
        [
            "destruct ww; simpl.",
            "VernacExtend",
            "06634af876accc694d3bc48bf023642d85af49fe"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split; try omega.",
            "VernacExtend",
            "66cc1464539fc71f7b2247524d7ac01ac9c55514"
        ],
        [
            "change 0%Z with (Z.of_nat 0).",
            "VernacExtend",
            "3061a61a6772fd2da80b9809e274af8e915f6979"
        ],
        [
            "apply Nat2Z.inj_lt.",
            "VernacExtend",
            "6ec2c5bd1d02f2d0261f8c87f0d2bf550988e026"
        ],
        [
            "apply zero_lt_pow2.",
            "VernacExtend",
            "631ebee4f4ba20c41b1f5a1113e81f1578f7cb5b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-Pos2Z.opp_pos, <-N2Z.inj_pos.",
            "VernacExtend",
            "a14cfe83e2a4aef31992a8cbe88663ee3a931ec0"
        ],
        [
            "rewrite <-Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "rewrite N_nat_Z.",
            "VernacExtend",
            "bc80f8e6d06ab7227f16b6527d7476494775545e"
        ],
        [
            "rewrite <-Z.opp_le_mono.",
            "VernacExtend",
            "67ae266aff2e43bb502d7a2026bfd8bf26f04dba"
        ],
        [
            "apply N2Z.inj_le.",
            "VernacExtend",
            "e63004101313a28c134a53bfee83a3a57c9c0caf"
        ],
        [
            "apply N.lt_le_incl.",
            "VernacExtend",
            "947964e49dc6f9dcbf7108fddf2c6d4cb974c59b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Pos2Z.neg_is_neg.",
            "VernacExtend",
            "1703e4deb0720e10b1d111fed575c0da2a7a60c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "change 0%Z with (Z.of_nat 0).",
            "VernacExtend",
            "3061a61a6772fd2da80b9809e274af8e915f6979"
        ],
        [
            "apply Nat2Z.inj_lt.",
            "VernacExtend",
            "6ec2c5bd1d02f2d0261f8c87f0d2bf550988e026"
        ],
        [
            "apply zero_lt_pow2.",
            "VernacExtend",
            "631ebee4f4ba20c41b1f5a1113e81f1578f7cb5b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eq_sym, wmsb_false_bound in Heqmsb.",
            "VernacExtend",
            "20dc52ac728193d528a5e213d276ee577d9139fa"
        ],
        [
            "destruct (wordToN w); simpl.",
            "VernacExtend",
            "b573289a782b613f96baacbc5627972624fe1545"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split; try omega.",
            "VernacExtend",
            "66cc1464539fc71f7b2247524d7ac01ac9c55514"
        ],
        [
            "change 0%Z with (Z.of_nat 0).",
            "VernacExtend",
            "3061a61a6772fd2da80b9809e274af8e915f6979"
        ],
        [
            "apply Nat2Z.inj_lt.",
            "VernacExtend",
            "6ec2c5bd1d02f2d0261f8c87f0d2bf550988e026"
        ],
        [
            "apply zero_lt_pow2.",
            "VernacExtend",
            "631ebee4f4ba20c41b1f5a1113e81f1578f7cb5b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Z.opp_nonpos_nonneg.",
            "VernacExtend",
            "68a2c90ab1e8c77287b3bedda8c5fb5d5059b434"
        ],
        [
            "change 0%Z with (Z.of_nat 0).",
            "VernacExtend",
            "3061a61a6772fd2da80b9809e274af8e915f6979"
        ],
        [
            "apply Nat2Z.inj_le.",
            "VernacExtend",
            "ea2e6cb504de39b8f0ab89c89dd11c406e0f3080"
        ],
        [
            "pose proof (zero_lt_pow2 sz); omega.",
            "VernacExtend",
            "d0415b66583da7842d593e955a26323e6a8d0a30"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "pose proof (Pos2Z.is_pos p); omega.",
            "VernacExtend",
            "79424ce30d1f6c59a46ed3961aca1dc3502c81cb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-N2Z.inj_pos.",
            "VernacExtend",
            "e0a462e5d002db41b6df2f700ec9dd97944642bf"
        ],
        [
            "rewrite <-Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "rewrite N_nat_Z.",
            "VernacExtend",
            "bc80f8e6d06ab7227f16b6527d7476494775545e"
        ],
        [
            "apply N2Z.inj_lt.",
            "VernacExtend",
            "805d678c12d8d8019fef9a59201c0de6fb0fab18"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_size: forall sz (w: word (S sz)), (Z.abs (wordToZ w) <= Z.of_nat (pow2 sz))%Z.",
            "VernacStartTheoremProof",
            "079c76a60303c49a5dacb028c76c660f7ba3bc4f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wordToZ_size' w).",
            "VernacExtend",
            "be644ea3e13d8bee0685f0ef66db70b70864367e"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Z.abs_le.",
            "VernacExtend",
            "33dbfaa369722f1767f92e2774ecb2dd0d1c2398"
        ],
        [
            "split; omega.",
            "VernacExtend",
            "df637d3a8961211fcf05d779d2cb4ddd6ba80684"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_size'': forall (sz : nat), (0 < sz)%nat -> forall w : word sz, (- 2 ^ (Z.of_nat sz - 1) <= wordToZ w < 2 ^ (Z.of_nat sz - 1))%Z.",
            "VernacStartTheoremProof",
            "2580e9bc695596a7a332bd5092a9ca45d276b416"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz; [lia|].",
            "VernacExtend",
            "3be13f79e98d713dff6e8fe54d3ef0749064e447"
        ],
        [
            "pose proof (@wordToZ_size' sz w) as P.",
            "VernacExtend",
            "ca83d0d28ecc5ee447cf87877b6826928bb196e7"
        ],
        [
            "replace (Z.of_nat (S sz) - 1)%Z with (Z.of_nat sz) by lia.",
            "VernacExtend",
            "0d275333fd446d14153b16800d1a88085aab0017"
        ],
        [
            "rewrite Nat2Z.inj_pow in P.",
            "VernacExtend",
            "4e6bd4e2735a09618de9f3089ac7a128d64253b7"
        ],
        [
            "exact P.",
            "VernacExtend",
            "0c9ec6d745fd1c920722012db2a38d185745ef3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_wzero: forall sz (w: word sz), wneg w = wzero sz -> w = wzero sz.",
            "VernacStartTheoremProof",
            "6b2d04ccec6fc4b5134469f277310a3abe27c909"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wminus_inv w).",
            "VernacExtend",
            "7ac63371c40a75df12526639c4b537c18d99094f"
        ],
        [
            "rewrite H in H0.",
            "VernacExtend",
            "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
        ],
        [
            "rewrite wplus_comm, wplus_unit in H0; subst.",
            "VernacExtend",
            "3de059fc26d4b3d6ffa08bb4a3ac22d7e922ccfc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_false_pos: forall sz (w: word sz), wmsb w false = false <-> (wordToZ w >= 0)%Z.",
            "VernacStartTheoremProof",
            "0314287b896cfd0f260bf7097735dc685b122b0e"
        ],
        [
            "unfold wordToZ; split; intros.",
            "VernacExtend",
            "9f1d443b2494915b7e6ad9891a816b0675048cd3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "destruct (wordToN w).",
            "VernacExtend",
            "b7401fd0746e5def72bf414abc1e4789daf36c50"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (Zgt_pos_0 p); omega.",
            "VernacExtend",
            "79b3f867c79ee73a4c2844d9eb75ad931512939c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wmsb w false) as b; destruct b; auto.",
            "VernacExtend",
            "6732914ef9622979e936d30ea467e274a942b6d2"
        ],
        [
            "remember (wordToN (wneg w)) as n; destruct n.",
            "VernacExtend",
            "e433956c58371ac424f715836d9613e7d11d969b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace 0%N with (wordToN (wzero sz)) in Heqn.",
            "VernacExtend",
            "9c3ffcc582333a2935336207d051d60bcb2dd58b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply wordToN_inj in Heqn.",
            "VernacExtend",
            "8344c4a1b210326d7bf70990c8af6ffabb0092a1"
        ],
        [
            "apply eq_sym, wneg_wzero in Heqn; subst.",
            "VernacExtend",
            "983ea3676b0a5e8d99f62880c76241186e94ab6f"
        ],
        [
            "rewrite wmsb_wzero in Heqb; discriminate.",
            "VernacExtend",
            "7caf789de40f6b907676f82f1408f6e6e97ef17e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <-wzero'_def.",
            "VernacExtend",
            "fa9016326a1619c52f176541f311be8cee8dee47"
        ],
        [
            "apply wordToN_wzero'.",
            "VernacExtend",
            "36f2fbcfd0bfcddb1014bdf04e122a0ed4db6bce"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exfalso; pose proof (Zlt_neg_0 p); omega.",
            "VernacExtend",
            "3c3776d3c58661c8d77a3948ffc8266b9398a742"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_true_neg: forall sz (w: word sz), wmsb w false = true <-> (wordToZ w < 0)%Z.",
            "VernacStartTheoremProof",
            "b00ec1180b432cbdba950aff47653193fd201b0e"
        ],
        [
            "unfold wordToZ; split; intros.",
            "VernacExtend",
            "9f1d443b2494915b7e6ad9891a816b0675048cd3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "remember (wordToN (wneg w)) as n; destruct n.",
            "VernacExtend",
            "e433956c58371ac424f715836d9613e7d11d969b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace 0%N with (wordToN (wzero sz)) in Heqn.",
            "VernacExtend",
            "9c3ffcc582333a2935336207d051d60bcb2dd58b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply wordToN_inj in Heqn.",
            "VernacExtend",
            "8344c4a1b210326d7bf70990c8af6ffabb0092a1"
        ],
        [
            "apply eq_sym, wneg_wzero in Heqn; subst.",
            "VernacExtend",
            "983ea3676b0a5e8d99f62880c76241186e94ab6f"
        ],
        [
            "rewrite wmsb_wzero in H; discriminate.",
            "VernacExtend",
            "377d4b088f59a4dec3161a39555d6a92f3ad0df7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <-wzero'_def.",
            "VernacExtend",
            "fa9016326a1619c52f176541f311be8cee8dee47"
        ],
        [
            "apply wordToN_wzero'.",
            "VernacExtend",
            "36f2fbcfd0bfcddb1014bdf04e122a0ed4db6bce"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (Zlt_neg_0 p); omega.",
            "VernacExtend",
            "e69c8bd24e8f4e79c4ea12c843b8a3bbda01b7be"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "remember (wmsb w false) as b; destruct b; auto.",
            "VernacExtend",
            "6732914ef9622979e936d30ea467e274a942b6d2"
        ],
        [
            "remember (wordToN w) as n; destruct n.",
            "VernacExtend",
            "3c3bb1f8fa771ca5816ada6939d81d952e1bbea3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (Zgt_pos_0 p); omega.",
            "VernacExtend",
            "79b3f867c79ee73a4c2844d9eb75ad931512939c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_distr_diff_wmsb: forall sz (w1 w2: word sz), wmsb w1 false = negb (wmsb w2 false) -> wordToZ (w1 ^+ w2) = (wordToZ w1 + wordToZ w2)%Z.",
            "VernacStartTheoremProof",
            "072943a47ff1802ca5752b8e8e5fccbd7e664fad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz; [rewrite (shatter_word w1), (shatter_word w2); reflexivity|].",
            "VernacExtend",
            "3e27ff915cf0c68e7735ecf3f7295b2865876fee"
        ],
        [
            "eapply eq_sym, wordToZ_wplus_bound.",
            "VernacExtend",
            "76f86f4ea3c701241a52737d8e4423e6e5311eab"
        ],
        [
            "pose proof (wordToZ_size' w1).",
            "VernacExtend",
            "bad5fa77db79f822bd80dccc79486f66cb117278"
        ],
        [
            "pose proof (wordToZ_size' w2).",
            "VernacExtend",
            "dbdee9b454996dc566aa4ddf3886baa3f23a5a47"
        ],
        [
            "remember (wmsb w1 false) as msb1; destruct msb1.",
            "VernacExtend",
            "824a30c7b798567be6924e604572fb2aa44ebfbb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eq_sym, wmsb_true_neg in Heqmsb1.",
            "VernacExtend",
            "07f343d95ab011bb7b06717d29a1e0d8fb29322b"
        ],
        [
            "apply eq_sym, negb_true_iff, wmsb_false_pos in H.",
            "VernacExtend",
            "964a6b42c0de2964e40091d59e60e0e886dbeddd"
        ],
        [
            "destruct H0, H1.",
            "VernacExtend",
            "b4443f537ba3c1386bfc30cfd9a503a7df7eedb6"
        ],
        [
            "split; omega.",
            "VernacExtend",
            "df637d3a8961211fcf05d779d2cb4ddd6ba80684"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eq_sym, wmsb_false_pos in Heqmsb1.",
            "VernacExtend",
            "e0dde60005eccbf601c2b479fa400c93fbcf65bd"
        ],
        [
            "apply eq_sym, negb_false_iff, wmsb_true_neg in H.",
            "VernacExtend",
            "649758fbb4fc05a3b4a41186d8c0b4cc95cfadc6"
        ],
        [
            "destruct H0, H1.",
            "VernacExtend",
            "b4443f537ba3c1386bfc30cfd9a503a7df7eedb6"
        ],
        [
            "split; omega.",
            "VernacExtend",
            "df637d3a8961211fcf05d779d2cb4ddd6ba80684"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wplus_wordToZ_distr: forall sz (w1 w2: word sz) n, n <> 0 -> wordToZ (sext w1 n ^+ sext w2 n) = (wordToZ (sext w1 n) + wordToZ (sext w2 n))%Z.",
            "VernacStartTheoremProof",
            "b78526ce4c9a5e70b12e88a04e56f4bcf4ee1858"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; [exfalso; auto|clear H].",
            "VernacExtend",
            "8b5257e9e47f403ded387f139f27d199f01c2b9b"
        ],
        [
            "apply eq_sym, wordToZ_wplus_bound'; [omega|].",
            "VernacExtend",
            "533cb37db705a491f33eda82f6b030952aa649da"
        ],
        [
            "do 2 rewrite sext_wordToZ.",
            "VernacExtend",
            "4b8136473325d83bc205d28676a860e6fb56bfe9"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (shatter_word w1), (shatter_word w2).",
            "VernacExtend",
            "4041679cc6f792563e98cc1bbf78fef9d62308d7"
        ],
        [
            "cbn; split; try (pose proof (pow2_zero n); omega).",
            "VernacExtend",
            "3c72183b243ef43d5c0e7558ffdbb7b2c0d2cbb5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "replace (pred (S sz + S n)) with (S (sz + n)) by omega.",
            "VernacExtend",
            "12df0d312ced3a4ddc7acb160c0d4f3f668073d3"
        ],
        [
            "pose proof (wordToZ_size' w1); destruct H.",
            "VernacExtend",
            "6dcf1c21340d8b41ca295158298d7a751a8278e0"
        ],
        [
            "pose proof (wordToZ_size' w2); destruct H1.",
            "VernacExtend",
            "d862eae524127a68c7d902dc7705d126cd1b5468"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite pow2_S_z.",
            "VernacExtend",
            "1044aa3b79f2025cadb327ed418215a6efc7397e"
        ],
        [
            "etransitivity; [|apply Z.add_le_mono; eassumption].",
            "VernacExtend",
            "b60c5edd2009330740522d4ad709c6243b8c593b"
        ],
        [
            "rewrite <-Z.add_diag, Z.opp_add_distr.",
            "VernacExtend",
            "b362253762b762c6b416fe8556db983cf0d3b5f2"
        ],
        [
            "apply Z.add_le_mono; rewrite <-Z.opp_le_mono; apply Nat2Z.inj_le, pow2_le; omega.",
            "VernacExtend",
            "b582229855c9dffc8f9b25629f6e26c42013b6a6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite pow2_S_z.",
            "VernacExtend",
            "1044aa3b79f2025cadb327ed418215a6efc7397e"
        ],
        [
            "eapply Z.lt_le_trans; [apply Z.add_lt_mono; eassumption|].",
            "VernacExtend",
            "febef5a65806d1ca09cac1e072becbdd5661c0b4"
        ],
        [
            "rewrite <-Z.add_diag.",
            "VernacExtend",
            "5e8c35ec1daf9fb63fb52fad265083c15eacf602"
        ],
        [
            "apply Z.add_le_mono; apply Nat2Z.inj_le, pow2_le; omega.",
            "VernacExtend",
            "64e52280f236ac08305e4d039244742f0059067f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wplus_wordToZ_distr_existT: forall sz (w1 w2: word sz) ssz (sw1 sw2: word ssz) n, existT word _ w1 = existT word _ (sext sw1 n) -> existT word _ w2 = existT word _ (sext sw2 n) -> n <> 0 -> wordToZ (w1 ^+ w2) = (wordToZ w1 + wordToZ w2)%Z.",
            "VernacStartTheoremProof",
            "0d66ca044baa5922d904ce04a155d82819fa8082"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (sz = ssz + n) by (apply eq_sigT_fst in H; auto); subst.",
            "VernacExtend",
            "9cc5132ee387f2fb5721ca9ab3c8721896b567bc"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "apply sext_wplus_wordToZ_distr; auto.",
            "VernacExtend",
            "ea89c28e843aa483fd21130f73da46d759e85bf5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1_existT: forall n sz1 (w1: word (n + sz1)) sz2 (w2: word (n + sz2)), existT word _ w1 = existT word _ w2 -> split1 n _ w1 = split1 n _ w2.",
            "VernacStartTheoremProof",
            "16b7c352292164645b29fe352708e80c6eaba658"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (sz1 = sz2) by (apply eq_sigT_fst in H; omega); subst.",
            "VernacExtend",
            "4dd8d31a867ac38a406839de3c9f3fa81bb1b1e3"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_combinable: forall sz1 sz2 (w: word (sz1 + sz2)), exists w1 w2, w = combine w1 w2.",
            "VernacStartTheoremProof",
            "bfbf3f78823ad4b45e8403f18ee9e2b1b970cd27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (split1 _ _ w), (split2 _ _ w).",
            "VernacExtend",
            "aab09f74a14977e312366d8dd03651edc93fcf4b"
        ],
        [
            "apply eq_sym, combine_split.",
            "VernacExtend",
            "e8ce23ab2753a0b44a75129e1307b0d135097e15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1_combine_existT: forall sz n (w: word (n + sz)) sl (wl: word (n + sl)) su (wu: word su), existT word _ w = existT word _ (combine wl wu) -> split1 n _ w = split1 n _ wl.",
            "VernacStartTheoremProof",
            "987924e74acb3ba40ad028af260e38ae3104dec4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (word_combinable _ _ w).",
            "VernacExtend",
            "fa660d43c273c428881bb2a521af75b77fbc4ef5"
        ],
        [
            "destruct H0 as [? [? ?]]; subst.",
            "VernacExtend",
            "4a19ea604a195710cf4189e25030559906ed5e53"
        ],
        [
            "pose proof (word_combinable _ _ wl).",
            "VernacExtend",
            "46f8027aea45664eac259dfe47f51ba3e1312dbd"
        ],
        [
            "destruct H0 as [? [? ?]]; subst.",
            "VernacExtend",
            "4a19ea604a195710cf4189e25030559906ed5e53"
        ],
        [
            "assert (sz = sl + su) by (apply eq_sigT_fst in H; omega); subst.",
            "VernacExtend",
            "1760851d55a707c054823f3d915883e3a6027c3f"
        ],
        [
            "pose proof (word_combinable _ _ x0).",
            "VernacExtend",
            "732447da082562ec0ceac7e12d0d54aa7f13f005"
        ],
        [
            "destruct H0 as [? [? ?]]; subst.",
            "VernacExtend",
            "4a19ea604a195710cf4189e25030559906ed5e53"
        ],
        [
            "do 2 rewrite split1_combine.",
            "VernacExtend",
            "7ca3db4ffe2e444e320df207dba58f26317ef323"
        ],
        [
            "rewrite combine_assoc_existT in H.",
            "VernacExtend",
            "4d3cab5c74743e853767caab0ce6bf6496e548e8"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "assert (split1 _ _ (split1 _ _ (combine (combine x x3) x4)) = split1 _ _ (split1 _ _ (combine (combine x1 x2) wu))) by (rewrite H; reflexivity).",
            "VernacExtend",
            "8f0ae68c77651c321227385b8cb780b7ab890aa4"
        ],
        [
            "repeat rewrite split1_combine in H0.",
            "VernacExtend",
            "f4081b370b5116e487de8bc8bb6d35f158a64473"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_pow2_wordToZ: forall sz (w: word sz) n, wordToZ (extz w n) = (wordToZ w * Z.of_nat (pow2 n))%Z.",
            "VernacStartTheoremProof",
            "f1a71bb2174f9b69bc206c32eb4ca1551eb24a84"
        ],
        [
            "induction n; [cbn; omega|].",
            "VernacExtend",
            "fbc5636d39d0835214d35b61d452f4daaf18ba30"
        ],
        [
            "rewrite pow2_S_z.",
            "VernacExtend",
            "1044aa3b79f2025cadb327ed418215a6efc7397e"
        ],
        [
            "change (wordToZ (extz w (S n))) with (wordToZ (combine (natToWord n 0) w)~0).",
            "VernacExtend",
            "b6af027de6c0bff1f238b7122074d703e64877db"
        ],
        [
            "rewrite wordToZ_WS_0.",
            "VernacExtend",
            "c1f21fb83e9cd6718b4f30796a28ac289ec40cff"
        ],
        [
            "unfold extz, wzero in IHn.",
            "VernacExtend",
            "19f1eb4b2911bdd5f0c44900c38e5592cf8aeb37"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "rewrite Z.mul_assoc.",
            "VernacExtend",
            "4a67867891309fe681dbff2ccbc22a88426adca1"
        ],
        [
            "rewrite Z.mul_comm with (n:= 2%Z).",
            "VernacExtend",
            "2d7f472c0cb4a3f05f0c6b95d52c3cd274f5c0b4"
        ],
        [
            "apply eq_sym, Z.mul_assoc.",
            "VernacExtend",
            "55a5b4411659f1d8ea5ec2c89d8dfa245ab37e81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_wneg: forall sz (w: word sz) n, extz (wneg w) n = wneg (extz w n).",
            "VernacStartTheoremProof",
            "7a5650349fbacc3dabb520466982099090e39ae2"
        ],
        [
            "induction n; intros; [reflexivity|].",
            "VernacExtend",
            "01ef190d43840dc2906aa2aaec3303908f6a2a47"
        ],
        [
            "cbn; rewrite wneg_WS_0.",
            "VernacExtend",
            "e80b536fb878877b8e632c6332b00f71aa629f96"
        ],
        [
            "unfold extz, wzero in IHn.",
            "VernacExtend",
            "19f1eb4b2911bdd5f0c44900c38e5592cf8aeb37"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_wordToZ: forall sz (w: word (S sz)), w <> wpow2 sz -> wordToZ (wneg w) = (- wordToZ w)%Z.",
            "VernacStartTheoremProof",
            "a38fe4782e2e469c7c007df072a9288cb27bdd5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (wordToZ (wneg w) + wordToZ w = 0)%Z.",
            "VernacExtend",
            "cd4337baccbc63a5b808bde8c1c496f3b0b5a5b3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (weq w (wzero _)).",
            "VernacExtend",
            "1ce69ffb04d99e2701151c870d9543eeedd79bd7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst; rewrite wzero_wneg, wordToZ_wzero.",
            "VernacExtend",
            "eea5b24acdc948a63ca8497aeb26f7bfe22da835"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <-wordToZ_distr_diff_wmsb.",
            "VernacExtend",
            "bb563d4e14fc113393582204d140ae747905c513"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite wplus_comm, wminus_inv.",
            "VernacExtend",
            "59f0da27ff5e45393ee8daa54dd556fe9fb7f028"
        ],
        [
            "apply wordToZ_wzero.",
            "VernacExtend",
            "2cf6a8dd10e1ccceecc8bb54dcf9db87b235d154"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "remember (wmsb w false) as msb; destruct msb.",
            "VernacExtend",
            "0dad806b701c260963ec8676142ca43e0383d8f0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply wmsb_wneg_true; eauto.",
            "VernacExtend",
            "9ba24e6261a4291689abcb270872a897aee66bdb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply wmsb_wneg_false; eauto.",
            "VernacExtend",
            "fe88270e01b19305c9c2b22158f9780cf225e851"
        ],
        [
            "intro Hx; elim n.",
            "VernacExtend",
            "915806f47814685ab14b8c9acfe6e8a39c067a18"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "rewrite wordToNat_wzero, Hx; reflexivity.",
            "VernacExtend",
            "68616a5b61f6e4625a5768bb76bdcd57a93ae731"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_wordToZ': forall sz (w: word (S sz)) z, w <> wpow2 sz -> (z + wordToZ (wneg w))%Z = (z - wordToZ w)%Z.",
            "VernacStartTheoremProof",
            "a28e42b03e74d4d8d4929543d6dff98fe7b11abc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wneg_wordToZ by assumption.",
            "VernacExtend",
            "dcbd27b3f479260e23b6d7e381f5253e96b7c757"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wneg_wplus_distr: forall sz (w1 w2: word sz), wneg (w1 ^+ w2) = wneg w1 ^+ wneg w2.",
            "VernacStartTheoremProof",
            "30520a1e367f13d3a0ffef3855a65667685e2e9f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wplus_cancel with (c:= w1 ^+ w2).",
            "VernacExtend",
            "763f054f194ff0401a4f6ab5a9e48c135b817ca8"
        ],
        [
            "rewrite wplus_comm, wminus_inv.",
            "VernacExtend",
            "59f0da27ff5e45393ee8daa54dd556fe9fb7f028"
        ],
        [
            "rewrite wplus_comm, wplus_assoc.",
            "VernacExtend",
            "5849e65b4a51ec09ef3b8e14bf086bc2c28ea938"
        ],
        [
            "rewrite <-wplus_assoc with (x:= w1).",
            "VernacExtend",
            "eea935208859005b7fa05e27e4f5e0f71e126ce3"
        ],
        [
            "rewrite wplus_comm with (x:= w2).",
            "VernacExtend",
            "24674fc139e5ecedb13ec64a52995588569da570"
        ],
        [
            "rewrite wplus_assoc.",
            "VernacExtend",
            "63aed3418c40f5877e819fbf2cdc524389fd0436"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_wzero_2.",
            "VernacExtend",
            "45c2121796c866e81ea8a03b9e6846dcaf3f1fd7"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_wneg: forall sz (w1 w2: word sz), wneg (w1 ^- w2) = w2 ^- w1.",
            "VernacStartTheoremProof",
            "bf41c8ba30a4f536d582a508f753f175c2a2a1fa"
        ],
        [
            "unfold wminus; intros.",
            "VernacExtend",
            "ccd4a9370a1dc5e4eece2050c4ea534430fd00e5"
        ],
        [
            "rewrite wneg_wplus_distr.",
            "VernacExtend",
            "d255a72dca50a53196ee73611fb2d78ec2708222"
        ],
        [
            "rewrite wneg_idempotent.",
            "VernacExtend",
            "82aa980f27698353e1fb8f23ab935a5c8f29c35e"
        ],
        [
            "apply wplus_comm.",
            "VernacExtend",
            "4c5cd5fd7e2282219ab0a46a005540f291ac01ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_wordToZ: forall sz (w1 w2: word (S sz)), w2 ^- w1 <> wpow2 sz -> wordToZ (w1 ^- w2) = (- wordToZ (w2 ^- w1))%Z.",
            "VernacStartTheoremProof",
            "bcf5932e87efdd7436e977067483bd80ebfade42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-wneg_idempotent with (w:= w1 ^- w2).",
            "VernacExtend",
            "d3af61fcdc5a5812fa2d38bfedad95c45e99e3b7"
        ],
        [
            "rewrite wminus_wneg.",
            "VernacExtend",
            "7f2d120e3b42caea1ae5eefab4a55a92fc4ed0c9"
        ],
        [
            "rewrite wneg_wordToZ by assumption.",
            "VernacExtend",
            "dcbd27b3f479260e23b6d7e381f5253e96b7c757"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_wordToZ': forall sz (w1 w2: word (sz + 1)), existT word _ (w2 ^- w1) <> existT word _ (wpow2 sz) -> wordToZ (w1 ^- w2) = (- wordToZ (w2 ^- w1))%Z.",
            "VernacStartTheoremProof",
            "a80238371bf30e0bb52eba919540369f45641073"
        ],
        [
            "intro sz.",
            "VernacExtend",
            "e2490ae282e79bfff6a60941b63f56558206c907"
        ],
        [
            "replace (sz + 1) with (S sz) by omega.",
            "VernacExtend",
            "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wminus_wordToZ.",
            "VernacExtend",
            "5a6243006a8faeacfc5772aa8b252a1b60377207"
        ],
        [
            "intro Hx; elim H.",
            "VernacExtend",
            "a4b16cbdebb8582dc5e6e4822914f449cb6fea7b"
        ],
        [
            "rewrite Hx; reflexivity.",
            "VernacExtend",
            "3819f1c81b5d55c036b060bf3a3f65fb2533be59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_wminusZ: forall (sz : nat) (w1 w2 : word sz), w1 ^- w2 = wminusZ w1 w2.",
            "VernacStartTheoremProof",
            "1649b49dc746d9ed9f47be44d9308b1fe7e850e6"
        ],
        [
            "unfold wminusZ, wminus, wordBinZ.",
            "VernacExtend",
            "eaf95decb3fba5313d2abe1602559ae2524cf3d8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- Z.add_opp_r.",
            "VernacExtend",
            "5f63255ecfe9e7a443f961eab35f3a37ab147ae6"
        ],
        [
            "rewrite wplus_wplusZ.",
            "VernacExtend",
            "8b363767f1e41dfccad8e96b37d03f8892e409dc"
        ],
        [
            "unfold wplusZ, wordBinZ.",
            "VernacExtend",
            "ecf23d8a5a087828a099c0b4e92500d338fe0aaf"
        ],
        [
            "destruct sz.",
            "VernacExtend",
            "5c355ae80bef560efa28a461b9aedbc840295a56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "do 2 rewrite ZToWord_sz0.",
            "VernacExtend",
            "5e76cc559d43b993331c30b9e681b303c5a362f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (weq w2 (wpow2 sz)).",
            "VernacExtend",
            "97b61ebefbcf3723e48fc8551e0d8fbf36a49ba5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite wpow2_wneg.",
            "VernacExtend",
            "5ad72ddd571cb0ed9a78e9d885839f60e22d6abd"
        ],
        [
            "replace (wordToZ w1 + - wordToZ (wpow2 sz))%Z with (wordToZ w1 + wordToZ (wpow2 sz) - 2 * wordToZ (wpow2 sz))%Z by omega.",
            "VernacExtend",
            "8f674fb4dc6a7415adc382c36a8c1e8f5a5aebd1"
        ],
        [
            "replace (2 * wordToZ (wpow2 sz))%Z with (- 1 * Z.of_N (Npow2 (S sz)))%Z.",
            "VernacExtend",
            "9d2b08a28f50003e078f05d9e0a1d53a7d8708a0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply ZToWord_Npow2_sub_z.",
            "VernacExtend",
            "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite wordToZ_wordToN.",
            "VernacExtend",
            "5ace10ef16cf23117fb554ca97217c4943741b62"
        ],
        [
            "rewrite wpow2_wmsb.",
            "VernacExtend",
            "f49a0e729658cdf2fdcfce082399f73111844ad2"
        ],
        [
            "rewrite wpow2_Npow2.",
            "VernacExtend",
            "ec9b18317ced5e696210137224fe1f270d972e70"
        ],
        [
            "rewrite Npow2_S.",
            "VernacExtend",
            "22081864f5a4d1297cc38f49898f7c4dbb66763b"
        ],
        [
            "rewrite N2Z.inj_add.",
            "VernacExtend",
            "ecd648da6b44c895c3ad4ba087f7658be3c31184"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wneg_wordToZ by assumption.",
            "VernacExtend",
            "dcbd27b3f479260e23b6d7e381f5253e96b7c757"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Lemma wminusZ_helper: forall a b k1 k2 p, ((a - k1 * p) - (b - k2 * p) = a - b - (k1 - k2) * p)%Z.",
            "VernacStartTheoremProof",
            "4bd57d0dad9c1374440df362b4677440dc086d07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "nia.",
            "VernacExtend",
            "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_minus: forall sz a b, ZToWord sz (a - b) = ZToWord sz a ^- ZToWord sz b.",
            "VernacStartTheoremProof",
            "af896cb2dcba754e3beeea457e01a3c5716d749a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wminus_wminusZ.",
            "VernacExtend",
            "3462e4ec64bb73c410e5d022915dbd25b94e446a"
        ],
        [
            "unfold wminusZ, wordBinZ.",
            "VernacExtend",
            "9a977d52e4c9c8c84adf4d070e4806192997fe70"
        ],
        [
            "destruct (wordToZ_ZToWord' sz a) as [k1 D1].",
            "VernacExtend",
            "de4dfa2e6875fc8b8fa735b9ebeaec9417f80c55"
        ],
        [
            "rewrite D1.",
            "VernacExtend",
            "3d18ca53d77dea28761030d5e07d152ba2af1934"
        ],
        [
            "clear D1.",
            "VernacExtend",
            "029b292bc5c6c645d5bae17286a450af69f0b590"
        ],
        [
            "destruct (wordToZ_ZToWord' sz b) as [k2 D2].",
            "VernacExtend",
            "159bcbb90ead05cb70508b602c1d05246842e1d3"
        ],
        [
            "rewrite D2.",
            "VernacExtend",
            "d9d165826b523a60d59c9cb1ae758a130a1aca96"
        ],
        [
            "clear D2.",
            "VernacExtend",
            "9b2df1b65650b44d2caf676942f309083ae07027"
        ],
        [
            "rewrite wminusZ_helper.",
            "VernacExtend",
            "2b3c0ee4f9febea04654a2fb1be4ab8ad83a35af"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply ZToWord_Npow2_sub_z.",
            "VernacExtend",
            "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wminus_Z: forall sz (a b : word sz), a ^- b = ZToWord sz (wordToZ a - wordToZ b).",
            "VernacStartTheoremProof",
            "c12383ace3fa11959163b6ef3cb34e64095a8051"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZToWord_minus.",
            "VernacExtend",
            "8392e49e437cfc44a1b49a672278b5e3eaf2e6f6"
        ],
        [
            "rewrite! ZToWord_wordToZ.",
            "VernacExtend",
            "14b45f5e8193559a6cda2e6a8273fe84bc6b2d3c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_opp_wneg{sz: nat}: forall (x: Z), ZToWord sz (- x) = ^~ (ZToWord sz x).",
            "VernacStartTheoremProof",
            "b08f4a22679766fc296076432f3bb3f2f2c618b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wneg_0_wminus.",
            "VernacExtend",
            "8650aec838713fc130352b474bc2641044feb7fd"
        ],
        [
            "rewrite wminus_wminusZ.",
            "VernacExtend",
            "3462e4ec64bb73c410e5d022915dbd25b94e446a"
        ],
        [
            "unfold wminusZ, wordBinZ.",
            "VernacExtend",
            "9a977d52e4c9c8c84adf4d070e4806192997fe70"
        ],
        [
            "rewrite wordToZ_wzero.",
            "VernacExtend",
            "ecee8d186f10450f9e8325cdf6ae4581464e0562"
        ],
        [
            "rewrite (Z.sub_0_l (wordToZ (ZToWord sz x))).",
            "VernacExtend",
            "81a71b008880e652ed5f7dc581b0b56e8ca3f086"
        ],
        [
            "destruct (wordToZ_ZToWord' sz x) as [k E].",
            "VernacExtend",
            "9809bd71a338a14c42ed540b02e572f2be815fd0"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "rewrite Z.opp_sub_distr.",
            "VernacExtend",
            "270a289b2443a793592e0494cf8070626724a00a"
        ],
        [
            "rewrite ZToWord_Npow2_add_k'.",
            "VernacExtend",
            "17b7160118b74ce8ca22aa18b00e9f830fc023ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zeqb_true_ZToWord: forall {sz: nat} (x y: Z), (x =? y)%Z = true -> ZToWord sz x = ZToWord sz y.",
            "VernacStartTheoremProof",
            "a28087f33e75fde0a896c146198949124a9d73e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Z.eqb_eq in H.",
            "VernacExtend",
            "c3b4b4d4bef390dc960bf3dfba059750fcc3c25c"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_ring_theory_Z: forall (sz: nat), ring_theory (ZToWord sz 0) (ZToWord sz 1) (@wplus sz) (@wmult sz) (@wminus sz) (@wneg sz) eq.",
            "VernacStartTheoremProof",
            "5a09330a7a446102011b6562a852409f2df878a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ZToWord_0.",
            "VernacExtend",
            "43418b016fda696b7e618e22398776094dfe5c8b"
        ],
        [
            "rewrite ZToWord_1.",
            "VernacExtend",
            "7b4c064470aa61eafa6fb689c1fb25e8fa597b39"
        ],
        [
            "apply wring.",
            "VernacExtend",
            "e813a026a91b327b6b6dd1eaa18bea01acd3fa1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_ring_morph_Z: forall (sz: nat), ring_morph (ZToWord sz 0) (ZToWord sz 1) (@wplus sz) (@wmult sz) (@wminus sz) (@wneg sz) eq 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Z.eqb (ZToWord sz).",
            "VernacStartTheoremProof",
            "9ca7610300b37a4b81c584f0438317e592c91de3"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (@ZToWord_plus sz).",
            "VernacExtend",
            "0fdeb324878cdbf287705aa94ecdcb299c24a15b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (@ZToWord_minus sz).",
            "VernacExtend",
            "fda36fee2441edbaba8290f18c4e30dde0eb24e4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (@ZToWord_mult sz).",
            "VernacExtend",
            "0ee86e9ff3fd16533e36d03c871f7eaa372f82b4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (@ZToWord_opp_wneg sz).",
            "VernacExtend",
            "8b2898042c92daf622dafffbccd4d3bf838c3ac6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exact (@Zeqb_true_ZToWord sz).",
            "VernacExtend",
            "49c0fbaec9a5aba0bb80f679d4eda686732d89ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extz_zero: forall sz n, extz (natToWord sz 0) n = wzero _.",
            "VernacStartTheoremProof",
            "199bf0caa6aca9f1c5e2d753f3a2fb368eeef464"
        ],
        [
            "unfold wzero; intros.",
            "VernacExtend",
            "c9e1a629c7316fee17f86df617542cc791b1fdc0"
        ],
        [
            "rewrite extz_combine.",
            "VernacExtend",
            "57e6af13626cf94dc48570e7f4f9d10fe13aa079"
        ],
        [
            "apply combine_zero.",
            "VernacExtend",
            "101b218d336cc31ea76ea1e724016b51d8fb0e05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_eq_rect: forall sz (w: word sz) n nsz Hsz1, exists Hsz2, eq_rect (sz + n) word (sext w n) (nsz + n) Hsz1 = sext (eq_rect sz word w nsz Hsz2) n.",
            "VernacStartTheoremProof",
            "e49fdb744e0a602847885d41ee3edbb6d75a8435"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hsz: sz = nsz) by omega.",
            "VernacExtend",
            "70e1d7a9c766d1a6ffb12568f96728256f1cc09c"
        ],
        [
            "exists Hsz.",
            "VernacExtend",
            "e5e4482605fd6275eb1a9ff7e72d0fe79c6d92f9"
        ],
        [
            "subst; simpl.",
            "VernacExtend",
            "0ba47b98fdcbcd9b3da22c2158302ddadc6f1aea"
        ],
        [
            "eq_rect_simpl.",
            "VernacExtend",
            "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_sext: forall sz (w: word sz) n, wmsb (sext w n) false = wmsb w false.",
            "VernacStartTheoremProof",
            "804baca12033b646dfea30ab5cbd5a9595a4a657"
        ],
        [
            "unfold sext; intros.",
            "VernacExtend",
            "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
        ],
        [
            "remember (wmsb w false) as ww; destruct ww.",
            "VernacExtend",
            "7bbb633154a0e48a3ce29a39361d4d5cb5f1e5f2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n; cbn.",
            "VernacExtend",
            "77e740a3953b1e0d724e208265fe0bf7ee97d1f6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wmsb_combine_WO; auto.",
            "VernacExtend",
            "d18172a782a7bde635ffa9582d13c8815902892e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate; cbn.",
            "VernacExtend",
            "566098ab1fa54b0d42c1ae1c852d21b35c6241c1"
        ],
        [
            "clear; induction n; cbn; auto.",
            "VernacExtend",
            "581ee24dcfe34a22f96e0c0c91c2c9b562eefca5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n; cbn.",
            "VernacExtend",
            "77e740a3953b1e0d724e208265fe0bf7ee97d1f6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wmsb_combine_WO; auto.",
            "VernacExtend",
            "d18172a782a7bde635ffa9582d13c8815902892e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite wmsb_combine with (b2:= false) by discriminate; cbn.",
            "VernacExtend",
            "566098ab1fa54b0d42c1ae1c852d21b35c6241c1"
        ],
        [
            "clear; induction n; cbn; auto.",
            "VernacExtend",
            "581ee24dcfe34a22f96e0c0c91c2c9b562eefca5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_wlshift_sext: forall sz (w: word sz) n, wmsb (sext w n) false = wmsb (wlshift (sext w n) n) false.",
            "VernacStartTheoremProof",
            "cb909200da55173f5a93f97f3f034831db4c15c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wlshift_sext_extz w n).",
            "VernacExtend",
            "23d237c3af07a6bb38eb4dea75a1124ee1bfa09c"
        ],
        [
            "apply wmsb_existT with (b:= false) in H.",
            "VernacExtend",
            "f6d314017eb3e37e99f854734041615d35f71284"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite wmsb_sext.",
            "VernacExtend",
            "b71b9df9a404bf9b93c5c956df519d190271b512"
        ],
        [
            "rewrite wmsb_extz.",
            "VernacExtend",
            "2f1da8156336263c3757abe724be2b47f4268a23"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_wordToNat_pos: forall sz (w: word sz), wmsb w false = false -> Z.of_nat (wordToNat w) = wordToZ w.",
            "VernacStartTheoremProof",
            "737ce86b91e3c035a7066a1de40d621dcf996fa7"
        ],
        [
            "unfold wordToZ; intros.",
            "VernacExtend",
            "5714496e388c686b08c1c9ac23abf2832594244a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite <-wordToN_to_nat.",
            "VernacExtend",
            "fa8cf93ebcdc7363ce0ee1e07937f9f8f93a2857"
        ],
        [
            "destruct (wordToN w).",
            "VernacExtend",
            "b7401fd0746e5def72bf414abc1e4789daf36c50"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; apply positive_nat_Z.",
            "VernacExtend",
            "d73acd88c7428396179b7017e384d46936c50def"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary wmsb_Zabs_pos: forall sz (w: word sz), wmsb w false = false -> Z.abs (wordToZ w) = wordToZ w.",
            "VernacStartTheoremProof",
            "69e3e16201392121100a215bde19390fefcbb28a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wmsb_false_pos in H.",
            "VernacExtend",
            "4cfb3b4340b789da2a99a95d8aca466c2316fe61"
        ],
        [
            "unfold Z.abs.",
            "VernacExtend",
            "23145e91d63b829e8d572e41d010144ddc01aca3"
        ],
        [
            "destruct (wordToZ w); auto.",
            "VernacExtend",
            "035861130c22b7c7b22a8de2933e39aa4734707c"
        ],
        [
            "pose proof (Zlt_neg_0 p); omega.",
            "VernacExtend",
            "e69c8bd24e8f4e79c4ea12c843b8a3bbda01b7be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary wmsb_Zabs_neg: forall sz (w: word sz), wmsb w false = true -> (Z.abs (wordToZ w) = - wordToZ w)%Z.",
            "VernacStartTheoremProof",
            "d2b2933a733f263693de08e7610cf338a420b015"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wmsb_true_neg in H.",
            "VernacExtend",
            "2dcde3b0cd03b0113d46c80fe3fd3c3d1878abc8"
        ],
        [
            "unfold Z.abs.",
            "VernacExtend",
            "23145e91d63b829e8d572e41d010144ddc01aca3"
        ],
        [
            "destruct (wordToZ w); auto.",
            "VernacExtend",
            "035861130c22b7c7b22a8de2933e39aa4734707c"
        ],
        [
            "pose proof (Zgt_pos_0 p); omega.",
            "VernacExtend",
            "79b3f867c79ee73a4c2844d9eb75ad931512939c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_combine: forall sz1 (w1: word sz1) sz2 (w2: word sz2), wordToN (combine w1 w2) = (wordToN w1 + Npow2 sz1 * wordToN w2)%N.",
            "VernacStartTheoremProof",
            "77ee00137b13d7c327d05d83340ef55f7c416b92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite wordToN_nat.",
            "VernacExtend",
            "626b77cc5ebf261e9a5062d6e0331d3275614af4"
        ],
        [
            "rewrite pow2_N.",
            "VernacExtend",
            "9130a82b0d5bdc3f05a27de57adc645e8d7779c8"
        ],
        [
            "rewrite <-Nat2N.inj_mul, <-Nat2N.inj_add.",
            "VernacExtend",
            "40b557d079050e8374f83802c1576d5ea04984b0"
        ],
        [
            "rewrite wordToNat_combine; reflexivity.",
            "VernacExtend",
            "9bdeda1b624ab6725f438ae9ad2e2637628d5ce5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_exists_bound: forall sz z, (- Z.of_nat (pow2 sz) <= z < Z.of_nat (pow2 sz))%Z -> exists w: word (S sz), wordToZ w = z.",
            "VernacStartTheoremProof",
            "698a20674090307e76562e781e0bb7099bb9d2d1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (ZToWord (S sz) z).",
            "VernacExtend",
            "225b1aafa02514187a66f4464ed3b1bda6285b86"
        ],
        [
            "apply wordToZ_ZToWord; assumption.",
            "VernacExtend",
            "c1fa6ca1553d0e2df5ce14e0bc06499c8156c7a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_size: forall sz n (w: word (sz + n)), sz <> 0 -> (- Z.of_nat (pow2 (sz - 1)) <= wordToZ w < Z.of_nat (pow2 (sz - 1)))%Z -> exists sw, w = sext sw n.",
            "VernacStartTheoremProof",
            "7043e954e6ee66c3085e1438b2f094199761091e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct sz; [exfalso; auto|clear H].",
            "VernacExtend",
            "9e7ebdd65ad4c1603f3ed5550af73f486540049a"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "replace (sz - 0) with sz in H0 by omega.",
            "VernacExtend",
            "3d90b4922d286fa874bcb7018c1701c356a5057f"
        ],
        [
            "apply word_exists_bound in H0.",
            "VernacExtend",
            "defdfb982053dd770327d0e0611889732a5ef35d"
        ],
        [
            "destruct H0 as [sw ?].",
            "VernacExtend",
            "21bfe31e8339054eb873454b746b5d0ee0279490"
        ],
        [
            "exists sw.",
            "VernacExtend",
            "d552bc7921daa78bf2a70089ea023c5230eb6ef9"
        ],
        [
            "apply wordToZ_inj.",
            "VernacExtend",
            "eb944ca17ed4c60387c52d6f53a3e79ef270b08e"
        ],
        [
            "change (S (sz + n)) with (S sz + n).",
            "VernacExtend",
            "37fb3a544429743ea0c6c1b349f735f5d0cacbd3"
        ],
        [
            "rewrite sext_wordToZ.",
            "VernacExtend",
            "2651174b2d4149e4b8c867b5cc9e1852c8e23926"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_combine_WO: forall sz (w: word sz), wordToZ (combine w WO) = wordToZ w.",
            "VernacStartTheoremProof",
            "1d72c5802568b61c441b8f2c9ba243fb82f7b1df"
        ],
        [
            "dependent induction w; [reflexivity|].",
            "VernacExtend",
            "c94a1ed4286438dda2299d35a0f281a3e04568eb"
        ],
        [
            "simpl; destruct b.",
            "VernacExtend",
            "756a0c142fcb184705c9c90f018f7e739a37ff9e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct n; [rewrite (shatter_word w); reflexivity|].",
            "VernacExtend",
            "31ce3e059e3a7b72fe7ad1d1f65fff8ae5db093c"
        ],
        [
            "change (S n + 0) with (S (n + 0)) in *.",
            "VernacExtend",
            "22c5eb43cda4fadc89ad1b701cda808aee7977db"
        ],
        [
            "do 2 rewrite wordToZ_WS_1.",
            "VernacExtend",
            "ee571fff1f6edbd58fb1d8e4264524779aad16ca"
        ],
        [
            "rewrite IHw; reflexivity.",
            "VernacExtend",
            "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "do 2 rewrite wordToZ_WS_0.",
            "VernacExtend",
            "dfa6a46eaddc38589fecbe0446dbb2dc82f2d09d"
        ],
        [
            "rewrite IHw; reflexivity.",
            "VernacExtend",
            "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_WO: forall sz (w: word sz), combine w WO = eq_rect _ word w _ (Nat.add_comm 0 sz).",
            "VernacStartTheoremProof",
            "883a698135d89ce2becd515fbf17a40aade16c2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToZ_inj.",
            "VernacExtend",
            "eb944ca17ed4c60387c52d6f53a3e79ef270b08e"
        ],
        [
            "rewrite wordToZ_eq_rect.",
            "VernacExtend",
            "ecb53ebbd8ff6dd455bf4d8f0fb38626538ec337"
        ],
        [
            "apply wordToZ_combine_WO.",
            "VernacExtend",
            "b898e98a76809905467dc1a2f0d8696f4042750a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zext_zero: forall sz (w: word sz), zext w 0 = eq_rect _ word w _ (Nat.add_comm 0 sz).",
            "VernacStartTheoremProof",
            "380b05498609b2b46ce54db1cbdc2d7efd2174ba"
        ],
        [
            "unfold zext; intros.",
            "VernacExtend",
            "3f191c8e9f688908e291c7baf4b3c4992bf36aef"
        ],
        [
            "apply combine_WO.",
            "VernacExtend",
            "184c61c2167950c0877889df9066a706c387974f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmsb_false_wordToNat_eq: forall sz (w: word (S sz)), wmsb w false = false -> wordToNat w = wordToNat (split1 sz _ (eq_rect _ word w _ (Nat.add_comm 1 sz))).",
            "VernacStartTheoremProof",
            "b2e9d8b51e0a93685b06af729d18847839834651"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "remember (eq_rect _ word w _ (Nat.add_comm 1 sz)) as ww.",
            "VernacExtend",
            "a8cf2a2a6b428539fb0f948813183bf134b259b2"
        ],
        [
            "assert (wmsb ww false = false) by (subst; rewrite <-wmsb_eq_rect; assumption).",
            "VernacExtend",
            "84cd0088f229236bad1b4507baaae5ce41cd64d3"
        ],
        [
            "replace (wordToNat w) with (wordToNat ww) by (subst; rewrite wordToNat_eq_rect; reflexivity).",
            "VernacExtend",
            "97530cfeb1f8ef6b099308496b19872409546859"
        ],
        [
            "clear Heqww H w.",
            "VernacExtend",
            "32040066acf1f5945d93cc5d122da31b1375626b"
        ],
        [
            "apply wmsb_false_split2_wzero in H0.",
            "VernacExtend",
            "2749dfbd4cefa1f2fc9924b8e8304c054e481129"
        ],
        [
            "rewrite <-combine_split with (w:= ww) at 1.",
            "VernacExtend",
            "0963d44baed926e3bba540304cd785dc3f5d30fd"
        ],
        [
            "rewrite wordToNat_combine.",
            "VernacExtend",
            "9837af7a9d89a7df59a8cb949972561187f14ca6"
        ],
        [
            "rewrite <-H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "cbn; omega.",
            "VernacExtend",
            "24a8cf1ffa3e38e7763fd2f0a669255035393c7a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToZ_bound_weakened: forall z n, (Z.abs z < n)%Z -> (- n <= z < n)%Z.",
            "VernacStartTheoremProof",
            "6016b2b54b410188c5320c45e2e2380fd0ecca68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Z.abs_lt in H.",
            "VernacExtend",
            "4230a8dd33d1ebcccca72d627345220f53e734a0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zext_size: forall sz n (w: word (sz + n)), (- Z.of_nat (pow2 sz) <= wordToZ w < Z.of_nat (pow2 sz))%Z -> wmsb w false = false -> exists sw, w = zext sw n.",
            "VernacStartTheoremProof",
            "66d52cf227d973df2616077170b55126d9a61ee7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (eq_rect _ word w _ (Nat.add_comm _ _)).",
            "VernacExtend",
            "626a8d99da34e7222879e0ced47a0df0e1b48bfb"
        ],
        [
            "rewrite zext_zero.",
            "VernacExtend",
            "22ddc5f97201c6c013b5e214220345d537a46910"
        ],
        [
            "apply eq_sym, eq_rect_2.",
            "VernacExtend",
            "8ee5f99e3469eadb58adc31433722a39a0d24844"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply word_exists_bound in H.",
            "VernacExtend",
            "fb656ab943316a33f7f9ed0360df390babe4f7ee"
        ],
        [
            "destruct H as [ssw ?].",
            "VernacExtend",
            "b3f80c815e7951b296e29435e310aeec5cb0353a"
        ],
        [
            "assert (wmsb ssw false = false).",
            "VernacExtend",
            "449ba40f6566aaf56c8fe238136c86cc2e60cc9d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply wmsb_false_pos; apply wmsb_false_pos in H0.",
            "VernacExtend",
            "16330a7d4c3b4a25531e2a60a672c4a148b33fae"
        ],
        [
            "rewrite H; assumption.",
            "VernacExtend",
            "aea2568961f3ab56b846945c0d4183b9f07b8ea3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "apply wordToZ_inj.",
            "VernacExtend",
            "eb944ca17ed4c60387c52d6f53a3e79ef270b08e"
        ],
        [
            "rewrite zext_wordToNat_equal_Z by discriminate.",
            "VernacExtend",
            "7944306436ebffc535cb2e93d93534d0aeb1b5b9"
        ],
        [
            "rewrite <-H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite <-wordToZ_wordToNat_pos by assumption.",
            "VernacExtend",
            "105a969f307c87062e02152178fe0baacf7eaa76"
        ],
        [
            "rewrite wmsb_false_wordToNat_eq by assumption.",
            "VernacExtend",
            "febd64b2ffbd24ea6d8f3994a76eaa47bb670eb6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zext_size_1: forall sz (w: word (sz + 1)), wmsb w false = false -> exists sw, w = zext sw 1.",
            "VernacStartTheoremProof",
            "0f940361e2d2d8786e9d18c25a1f4d6602e96351"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply zext_size; auto.",
            "VernacExtend",
            "670470ca4a7478efa2ffb48ba4b437ae2b6e25b9"
        ],
        [
            "generalize dependent w.",
            "VernacExtend",
            "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
        ],
        [
            "replace (sz + 1) with (S sz) by omega.",
            "VernacExtend",
            "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wordToZ.",
            "VernacExtend",
            "d3dfb452747490cdd93b9c608b345d2115d7c1be"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply wmsb_false_bound in H.",
            "VernacExtend",
            "f36bf7f487bdfdde8f2ff5a31a011fefc1bd9477"
        ],
        [
            "remember (wordToN w) as n; destruct n; simpl.",
            "VernacExtend",
            "077d64b2b7f5f5e39b81ead23463925347e7e2e0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (pow2_zero sz); omega.",
            "VernacExtend",
            "1192b0fb9112177c8c5c4ac7b3b20de33f8aaa43"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-N2Z.inj_pos.",
            "VernacExtend",
            "e0a462e5d002db41b6df2f700ec9dd97944642bf"
        ],
        [
            "rewrite <-N_nat_Z.",
            "VernacExtend",
            "63785fcb1c182ad034e9982e8758bda00d156cc2"
        ],
        [
            "split; [omega|].",
            "VernacExtend",
            "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
        ],
        [
            "apply inj_lt.",
            "VernacExtend",
            "9aba00fade2c4bf73ff2d0b9ff9eabd0e33f900a"
        ],
        [
            "rewrite <-Npow2_nat.",
            "VernacExtend",
            "d44492370653a13ba953d8e6dd67ba6bffa1acec"
        ],
        [
            "apply Nlt_out; auto.",
            "VernacExtend",
            "a52e8d4bf88f283293b55b0378f2629d38562577"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_wplus_exist: forall sz (w1 w2: word sz) n, exists w: word (S sz), existT word _ (sext w1 (S n) ^+ sext w2 (S n)) = existT word _ (sext w n).",
            "VernacStartTheoremProof",
            "51320e1eea1c852641a7bbe3a1cf400081909c81"
        ],
        [
            "intros; eexists.",
            "VernacExtend",
            "cf9e4a7380d852fcd8d951790b67cdf109b8d1b2"
        ],
        [
            "apply wordToZ_existT; [omega|].",
            "VernacExtend",
            "9f5d5525351b3005ae95a71586af333c74a85916"
        ],
        [
            "rewrite sext_wplus_wordToZ_distr by discriminate.",
            "VernacExtend",
            "4a2f5eae5e9c4f1abbcb123b6af2aab70c85f576"
        ],
        [
            "do 3 rewrite sext_wordToZ.",
            "VernacExtend",
            "71814568596ee2732ae086c26e6efb412d128659"
        ],
        [
            "assert (- Z.of_nat (pow2 sz) <= wordToZ w1 + wordToZ w2 < Z.of_nat (pow2 sz))%Z.",
            "VernacExtend",
            "087ef1b0c1395dc39b0965af8df9288f0cbfe033"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear n.",
            "VernacExtend",
            "950078f0511238b7bf11b5533c9ffd133a02ab04"
        ],
        [
            "dependent destruction w1.",
            "VernacExtend",
            "bf7b787c252adf61ec63d7a977433bfabe51933d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite (shatter_word w2); cbn; omega.",
            "VernacExtend",
            "bf2d2a6cf9b576138fe4abb6a3289d88d0703ee6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "remember (WS b w1) as ww1; clear Heqww1 w1 b.",
            "VernacExtend",
            "adcdfb5fb527ee43c14441a2b2085d91c5a42cc2"
        ],
        [
            "pose proof (wordToZ_size' ww1).",
            "VernacExtend",
            "73bcd5321561898172dec4eb181782bcbdd259bd"
        ],
        [
            "pose proof (wordToZ_size' w2).",
            "VernacExtend",
            "dbdee9b454996dc566aa4ddf3886baa3f23a5a47"
        ],
        [
            "destruct H, H0.",
            "VernacExtend",
            "8db9e1441c64ed20802e4526963172d1abdaee94"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "simpl; do 2 rewrite Nat2Z.inj_add; omega.",
            "VernacExtend",
            "0790925b7b897be07119555277fdd3a22def2b46"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "simpl; do 2 rewrite Nat2Z.inj_add; omega.",
            "VernacExtend",
            "0790925b7b897be07119555277fdd3a22def2b46"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply wordToZ_ZToWord in H.",
            "VernacExtend",
            "0dab249efc658e662f5dec9165d316a11db7690e"
        ],
        [
            "rewrite <-H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments natToWord : simpl never.",
            "VernacArguments",
            "0d98d647bfb015824c9c273efde36b63e978aae2"
        ],
        [
            "Arguments weq : simpl never.",
            "VernacArguments",
            "b228df511ea1b4c757af83008a89f57a9e3b79fe"
        ],
        [
            "Global Opaque wlt_dec.",
            "VernacSetOpacity",
            "0e3358fd8e3950d53068cb719f6a473bdffd144c"
        ],
        [
            "Definition test_wlt_f (a : nat) (b : nat) : nat := if wlt_dec (natToWord 64 a) $0 then 0 else 0.",
            "VernacDefinition",
            "b6a2cb70ebb1c9412dcb25eb34f71b8e7765cc55"
        ],
        [
            "Theorem test_wlt_f_example: forall x y z, test_wlt_f x y = 0 -> test_wlt_f x z = 0.",
            "VernacStartTheoremProof",
            "02bca93b9499e14eb70b2b58e856ee3fa572b20c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_eq1: forall sz (a b: word sz), a = b -> wordToNat a = wordToNat b.",
            "VernacStartTheoremProof",
            "2a6ed6857a55408325b05f402ca03bf63aba631b"
        ],
        [
            "intros; subst; reflexivity.",
            "VernacExtend",
            "9a97a00b0aa2a8284651f9454c8eaa359460e3a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_eq2: forall sz (a b: word sz), wordToNat a = wordToNat b -> a = b.",
            "VernacStartTheoremProof",
            "4580ddbe43281c3d1a7c446ba25cdb5be96f2957"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- natToWord_wordToNat with (w := a).",
            "VernacExtend",
            "a958acc94e460c413c8ae1e1669659191855dd99"
        ],
        [
            "rewrite <- natToWord_wordToNat with (w := b).",
            "VernacExtend",
            "3bdba18c7018740c9b0f65ecc4db3c4e0bf5b859"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_lt1: forall sz (a b: word sz), a < b -> (wordToNat a < wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "8d7a114a19775a4e9b0b4b2d88443a528ac123fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat in H.",
            "VernacExtend",
            "b7656324e0e2d39b357b5ea5f23cb2051079a967"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_lt2: forall sz (a b: word sz), (wordToNat a < wordToNat b)%nat -> a < b.",
            "VernacStartTheoremProof",
            "63719e4612bcc0ee31cd058ee1a1a3b2c079ab23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat.",
            "VernacExtend",
            "a0afb95deb552ec4b36240fe161c71a7712d4801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_gt1: forall sz (a b: word sz), a > b -> (wordToNat a > wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "470a8411d87e92fc593347803e83082ddd84ea1c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat in H.",
            "VernacExtend",
            "b7656324e0e2d39b357b5ea5f23cb2051079a967"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_gt2: forall sz (a b: word sz), (wordToNat a > wordToNat b)%nat -> a > b.",
            "VernacStartTheoremProof",
            "c38b7c286cd634903ee6126f4dda9e72fb69f18f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat.",
            "VernacExtend",
            "a0afb95deb552ec4b36240fe161c71a7712d4801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_le1: forall sz (a b: word sz), a <= b -> (wordToNat a <= wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "9f92b218eb0baa3550f823e77a9c0925f4c500bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat in H.",
            "VernacExtend",
            "b7656324e0e2d39b357b5ea5f23cb2051079a967"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_le2: forall sz (a b: word sz), (wordToNat a <= wordToNat b)%nat -> a <= b.",
            "VernacStartTheoremProof",
            "9fb57bdcb2d29a31ca46464d9924713f51892f51"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat.",
            "VernacExtend",
            "a0afb95deb552ec4b36240fe161c71a7712d4801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_ge1: forall sz (a b: word sz), a >= b -> (wordToNat a >= wordToNat b)%nat.",
            "VernacStartTheoremProof",
            "33ac1d6e8e437f86e07b125be7d6dce1c10226aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat in H.",
            "VernacExtend",
            "b7656324e0e2d39b357b5ea5f23cb2051079a967"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_ge2: forall sz (a b: word sz), (wordToNat a >= wordToNat b)%nat -> a >= b.",
            "VernacStartTheoremProof",
            "23f4bf608de20bd6f49ea0d8742a45bd357362c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_nomega.",
            "VernacExtend",
            "741f5a73c86a1102a64a93f0912d983b360aa20f"
        ],
        [
            "repeat rewrite wordToN_to_nat.",
            "VernacExtend",
            "a0afb95deb552ec4b36240fe161c71a7712d4801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_neq1: forall sz (a b: word sz), a <> b -> wordToNat a <> wordToNat b.",
            "VernacStartTheoremProof",
            "23de3ab2d952c2c5e2c71ddd65ab21b74bb35dd3"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToNat_eq2 in H0.",
            "VernacExtend",
            "152c394bd3b563c0ef1ec640ffba9f641fab5de6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_neq2: forall sz (a b: word sz), wordToNat a <> wordToNat b -> a <> b.",
            "VernacStartTheoremProof",
            "44891fdc4f5da74270931cd794cc98765aa55b27"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wplus': forall sz (a b: word sz), (#a + #b < pow2 sz)%nat -> #(a ^+ b) = #a + #b.",
            "VernacStartTheoremProof",
            "aed78cd50da51739f73aed149f901aa977eb6b45"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-? wordToN_to_nat in *.",
            "VernacExtend",
            "5a4e399615a41fcb6aaaf397fbf391fcf7344ec8"
        ],
        [
            "rewrite <-? Nnat.N2Nat.inj_add in *.",
            "VernacExtend",
            "42fd009c117f1102adf8494954fb4e3aa39c6bf2"
        ],
        [
            "rewrite <- Npow2_nat in *.",
            "VernacExtend",
            "cecf9e737413be107840c3d55c5f847e25a30efd"
        ],
        [
            "apply Nlt_in in H.",
            "VernacExtend",
            "92ed92a1d3a17e5719b1986154963b232ca5dc75"
        ],
        [
            "rewrite wordToN_plus by assumption.",
            "VernacExtend",
            "1e228993e2018fea5b28855894f94bfe4dbfc627"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wplus'': forall sz (a: word sz) (b: nat), (#a + b < pow2 sz)%nat -> #(a ^+ $b) = #a + b.",
            "VernacStartTheoremProof",
            "f45d18cff853ade5f505bf90bc8181e03b50e449"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToNat_wplus'; rewrite wordToNat_natToWord_2; omega.",
            "VernacExtend",
            "03486937d39e24bcc47c33131f5b7f2d21b2a7ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wmult': forall sz (a b: word sz), (#a * #b < pow2 sz)%nat -> #(a ^* b) = #a * #b.",
            "VernacStartTheoremProof",
            "a1a391846adecca82704cd25d175971a15580720"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-? wordToN_to_nat in *.",
            "VernacExtend",
            "5a4e399615a41fcb6aaaf397fbf391fcf7344ec8"
        ],
        [
            "rewrite <-? Nnat.N2Nat.inj_mul in *.",
            "VernacExtend",
            "8cf1d542245b2a6e815ae2ab46fdf9c5c9ee2367"
        ],
        [
            "rewrite <- Npow2_nat in *.",
            "VernacExtend",
            "cecf9e737413be107840c3d55c5f847e25a30efd"
        ],
        [
            "apply Nlt_in in H.",
            "VernacExtend",
            "92ed92a1d3a17e5719b1986154963b232ca5dc75"
        ],
        [
            "rewrite wordToN_mult by assumption.",
            "VernacExtend",
            "8a79b3a68f7553bdda864e7d1909399e95168d3c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordNotNot: forall sz (a b: word sz), (a <> b -> False) -> a = b.",
            "VernacStartTheoremProof",
            "fee125d287e61701d8c5896380c1d0b5396cb803"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (weq a b); subst; tauto.",
            "VernacExtend",
            "5dca0ce039a91ce6f92db416641275bb04601435"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac pre_word_omega := unfold wzero, wone in *; repeat match goal with | H: @eq ?T ?a ?b |- _ => match T with | word ?sz => apply (@wordToNat_eq1 sz a b) in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H end | |- @eq ?T ?a ?b => match T with | word ?sz => apply (@wordToNat_eq2 sz a b); rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl end | H: ?a < ?b |- _ => apply wordToNat_lt1 in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H | |- ?a < ?b => apply wordToNat_lt2; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl | H: ?a > ?b |- _ => apply wordToNat_gt1 in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H | |- ?a > ?b => apply wordToNat_gt2; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl | H: ?a <= ?b |- _ => apply wordToNat_le1 in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H | |- ?a <= ?b => apply wordToNat_le2; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl | H: ?a > ?b -> False |- _ => apply wordToNat_le1 in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H | |- ?a > ?b -> False => apply wordToNat_le2; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl | H: ?a < ?b -> False |- _ => apply wordToNat_ge1 in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H | |- ?a < ?b -> False => apply wordToNat_ge2; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl | H: not (@eq ?T ?a ?b) |- _ => match T with | word ?sz => apply (@wordToNat_neq1 sz a b) in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H end | |- not (@eq ?T ?a ?b) => match T with | word ?sz => apply (@wordToNat_neq2 sz a b); rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl end | H: @eq ?T ?a ?b -> False |- _ => match T with | word ?sz => apply (@wordToNat_neq1 sz a b) in H; rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one in H; simpl in H end | |- @eq ?T ?a ?b -> False => match T with | word ?sz => apply (@wordToNat_neq2 sz a b); rewrite ?roundTrip_0, ?roundTrip_1, ?wones_pow2_minus_one; simpl end | H: (@eq ?T ?a ?b -> False) -> False |- _ => match T with | word ?sz => apply (@wordNotNot sz a b) in H end | H: (not (@eq ?T ?a ?b)) -> False |- _ => match T with | word ?sz => apply (@wordNotNot sz a b) in H end | H: not (@eq ?T ?a ?b -> False) |- _ => match T with | word ?sz => apply (@wordNotNot sz a b) in H end | H: not (not (@eq ?T ?a ?b)) |- _ => match T with | word ?sz => apply (@wordNotNot sz a b) in H end end.",
            "VernacExtend",
            "361eb9d07e0cd4eb27aa015c11b701df79dd4f07"
        ],
        [
            "Ltac word_omega := pre_word_omega; omega.",
            "VernacExtend",
            "0a9eb5c3f9e083c57574f2d7a5f6642442145585"
        ],
        [
            "Lemma word_le_ge_eq sz (w1 w2: word sz): w1 <= w2 -> w1 >= w2 -> w1 = w2.",
            "VernacStartTheoremProof",
            "2ce6772961be8af823a1149219157c651bbf2519"
        ],
        [
            "intros; word_omega.",
            "VernacExtend",
            "2aaf6ae7ac2b4d16d08b5e1fdc3919127a316f23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_le_zero sz (w: word sz): w <= wzero sz -> w = wzero sz.",
            "VernacStartTheoremProof",
            "87fbc50de071df29cfca4dd1bcdebc0baaaeeaba"
        ],
        [
            "intros; word_omega.",
            "VernacExtend",
            "2aaf6ae7ac2b4d16d08b5e1fdc3919127a316f23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Close Scope word_scope.",
            "VernacOpenCloseScope",
            "982568773073843a378740c38d7459ca32090d8f"
        ],
        [
            "Open Scope word_scope.",
            "VernacOpenCloseScope",
            "33ebe2b2bab479a4d524cc7a730c70ae08cdc0f3"
        ],
        [
            "Local Open Scope nat.",
            "VernacOpenCloseScope",
            "ca28b73035994bc8f27e96d91e3a49ff01514eda"
        ],
        [
            "Lemma wzero_wones: forall sz, sz >= 1 -> natToWord sz 0 <> wones sz.",
            "VernacStartTheoremProof",
            "53c62c32f4c787bf825117872b019dbba331c501"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (f_equal (@wordToNat sz) H0) as sth.",
            "VernacExtend",
            "22af87e98b22a4e815fd7541c0c9dcdef61d4d38"
        ],
        [
            "unfold wzero in *.",
            "VernacExtend",
            "5f87248675ee5f0c0a1e123968016fd5c18baff3"
        ],
        [
            "rewrite roundTrip_0 in *.",
            "VernacExtend",
            "e44985b54a6aae13800b7b2efcf19c380273a658"
        ],
        [
            "rewrite wones_pow2_minus_one in sth.",
            "VernacExtend",
            "9eadfd64f2aa67ce417b098a5b52089f8db07268"
        ],
        [
            "destruct sz; [omega | ].",
            "VernacExtend",
            "7c6dcdd11e58da7d52fc66d9b55d99342687725c"
        ],
        [
            "pose proof (NatLib.one_lt_pow2 sz).",
            "VernacExtend",
            "0dc4b833c8d23c117bf0ea87ec673803adc47456"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wzero_wplus: forall sz w, wzero sz ^+ w = w.",
            "VernacStartTheoremProof",
            "401741ca7fec62ef0fed683cfada94daf804033a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wzero.",
            "VernacExtend",
            "f6faf8379fd9fcb6a9242f23372adf39cf200158"
        ],
        [
            "apply wplus_unit.",
            "VernacExtend",
            "41f85fea05c3770bad04fcb3eb0a30b7b5a6a16e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_nonZero sz (w: word sz): w <> wzero sz -> wordToNat w > 0.",
            "VernacStartTheoremProof",
            "a68c96450ddc94bb20cd88cb057c0c7463068987"
        ],
        [
            "induction w; simpl; unfold wzero; simpl; intros.",
            "VernacExtend",
            "d2c5069203da09f21cadb1524bf80afaae76ced8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (sth: w <> (natToWord n 0)).",
            "VernacExtend",
            "9634425cd5b45ef0afd33e1410aea7ee55a9bc90"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (sth2: wordToNat w <> 0).",
            "VernacExtend",
            "2ca92a34ebd401e928baff98022b599996489562"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro sth3.",
            "VernacExtend",
            "e6063cf78d3d9b7cbe13059acbc18e9d36ae1756"
        ],
        [
            "specialize (IHw sth).",
            "VernacExtend",
            "fe919300107a4dc1fb004e70d76d7614053cc9eb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split2_pow2: forall sz n, 2 ^ sz <= n < 2 ^ S sz -> wordToNat (split2 sz 1 (natToWord (sz + 1) n)) = 1.",
            "VernacStartTheoremProof",
            "240b98ea9c96300a0baad5e9c49a9facb4013398"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wordToNat_split2.",
            "VernacExtend",
            "66b6701827bac5bb6bdf69f21799464daf32b48c"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite Nat.add_0_r in *.",
            "VernacExtend",
            "1bd9c830db1456958945c4395e7b43ede9a57469"
        ],
        [
            "rewrite wordToNat_natToWord_bound with (bound := wones _).",
            "VernacExtend",
            "f82b95f193bb3504abfe47484340141ffe32691d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "assert (sth: pow2 sz <> 0) by omega.",
            "VernacExtend",
            "5c27b88439a60bf0b949693e1a261223cf408d80"
        ],
        [
            "pose proof (Nat.div_le_mono _ _ (pow2 sz) sth H) as sth2.",
            "VernacExtend",
            "6086a5c28e452784a333d64eb52c892256d9764c"
        ],
        [
            "rewrite Nat.div_same in sth2 by auto.",
            "VernacExtend",
            "9d189b5c87aed8e89338c541e8726a10e68d4355"
        ],
        [
            "apply Nat.lt_le_pred in H0.",
            "VernacExtend",
            "a1ee51771ff6aeba9201a7ec7b9fb015797d31ed"
        ],
        [
            "pose proof (Nat.div_le_mono _ _ (pow2 sz) sth H0) as sth3.",
            "VernacExtend",
            "15f215c55aa81b0237ecced6e36265f0f0b020b9"
        ],
        [
            "rewrite <- Nat.sub_1_r in sth3.",
            "VernacExtend",
            "959702633d225c70360f039f4965e52c339896db"
        ],
        [
            "assert (sth4: pow2 sz = 1 * pow2 sz) by omega.",
            "VernacExtend",
            "02abe6f196be0f25295ecbcdf12f7f36d4941ff7"
        ],
        [
            "rewrite sth4 in sth3 at 2.",
            "VernacExtend",
            "df2480a97b83a3afce78a09e395fc5f7a4347808"
        ],
        [
            "assert (sth5: 1 * pow2 sz + pow2 sz - 1 = 1 * pow2 sz + (pow2 sz - 1)) by omega.",
            "VernacExtend",
            "3ee648ba897ae28d0a67adbcc9af28f3f2c9531f"
        ],
        [
            "rewrite sth5 in sth3.",
            "VernacExtend",
            "e94355faf36271890d870d5a0ff86a3fdec9451e"
        ],
        [
            "rewrite Nat.div_add_l in sth3 by omega.",
            "VernacExtend",
            "180acaee9c772018bd29628a30c16addadb03f51"
        ],
        [
            "rewrite Nat.div_small with (a := pow2 sz - 1) in sth3 by omega.",
            "VernacExtend",
            "da6455b48ee221a448e057a7522e39c3baf3108b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wones_pow2_minus_one.",
            "VernacExtend",
            "7f2d7a4a7429310a6fc575b57d4f5f4d63197882"
        ],
        [
            "assert (sth: sz + 1 = S sz) by omega.",
            "VernacExtend",
            "3e2f3af582e755cd262d188fd5c511eb992cb0e2"
        ],
        [
            "rewrite sth.",
            "VernacExtend",
            "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_wones_WO sz: forall w, w <> wzero sz -> split2 sz 1 (combine (wones sz) ($ 0) ^+ combine w ($ 0)) = WO~1.",
            "VernacStartTheoremProof",
            "8061786e2edacba10df5825c937a034debe50521"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "match goal with | |- split2 _ _ (?a ^+ ?b) = _ => rewrite <- (@natToWord_wordToNat _ a); rewrite <- (@natToWord_wordToNat _ b) end.",
            "VernacExtend",
            "cc60824879c691db79deb61f8f428422edfcbed8"
        ],
        [
            "rewrite <- natToWord_plus.",
            "VernacExtend",
            "17172a141fc704eca8f9dd850fe52b7e934e1e22"
        ],
        [
            "rewrite ?wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite wones_pow2_minus_one.",
            "VernacExtend",
            "7f2d7a4a7429310a6fc575b57d4f5f4d63197882"
        ],
        [
            "pose proof (wordToNat_bound w) as sth.",
            "VernacExtend",
            "ca4ddd06c9c9991389a7dfab1db636eaa7a676ed"
        ],
        [
            "pose proof (wordToNat_nonZero H).",
            "VernacExtend",
            "828306d7bf507c804417d5d47537517c6c6fd9e3"
        ],
        [
            "assert (sth2: 2^sz <= 2 ^ sz - 1 + wordToNat w < 2 ^ (S sz)).",
            "VernacExtend",
            "09e5ef169b1df851544dc8a8be3fa119cb39f454"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "pose proof (pow2_zero sz) as sth3.",
            "VernacExtend",
            "2ecb3aea969b6c2280d76f4fe73ca759d44a2861"
        ],
        [
            "split; simpl; omega.",
            "VernacExtend",
            "73f6da411c83d76083103ef346ac73ee2450e76c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply split2_pow2 in sth2.",
            "VernacExtend",
            "b044026d302dbfa4cfc3d0a1fcba3ee6e1d1d4e3"
        ],
        [
            "rewrite Nat.mul_0_r.",
            "VernacExtend",
            "b0c342e42232568149a672c331046fa4df1777ff"
        ],
        [
            "rewrite ?Nat.add_0_r.",
            "VernacExtend",
            "53b8d4fff4ca126d52df8eb4752b83a2ec848d74"
        ],
        [
            "apply (f_equal (natToWord 1)) in sth2.",
            "VernacExtend",
            "bf28a3b1c9925a7f88f0431c917eb56ff00073f9"
        ],
        [
            "rewrite natToWord_wordToNat in sth2.",
            "VernacExtend",
            "d2cdc8d0728dbfbbc9e33530ace95fbb7c29781f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_plus sz (w1 w2: word sz): natToWord sz (wordToNat w1 + wordToNat w2) = w1 ^+ w2.",
            "VernacStartTheoremProof",
            "49fabc73c26c9dd8ad33a6a02ed12f86a36cd13d"
        ],
        [
            "rewrite natToWord_plus.",
            "VernacExtend",
            "05acd19875a2beb7766e11af24e7acc0c06b8a42"
        ],
        [
            "rewrite ?natToWord_wordToNat.",
            "VernacExtend",
            "31f5516c0ef04d7f6997ced09a7859696a453ed9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_natToWord_eqn sz: forall n, wordToNat (natToWord sz n) = n mod (pow2 sz).",
            "VernacStartTheoremProof",
            "c729af2e7ca3d60e820eade449010dbaceb52182"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (wordToNat_natToWord sz n).",
            "VernacExtend",
            "d4a48d31a765d0e66f58e445aafa371c256c93df"
        ],
        [
            "destruct H as [? [? ?]].",
            "VernacExtend",
            "7b80d34d0c991fb27b92313d17ea8675f1173807"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "assert (sth: pow2 sz * x = x * pow2 sz) by (apply Nat.mul_comm).",
            "VernacExtend",
            "f1262f082cefb5f463e27b8750de2205d4e6746d"
        ],
        [
            "rewrite <- sth in *.",
            "VernacExtend",
            "fadfee519992e7ba70caa2902bb79bee80f90f34"
        ],
        [
            "clear sth.",
            "VernacExtend",
            "fa1966004a1fd7647c1b0139cb46555cf9723134"
        ],
        [
            "pose proof (wordToNat_bound (natToWord sz n)).",
            "VernacExtend",
            "33db2857cfe2e1322dbd0ddfa55b5b76e3c50f21"
        ],
        [
            "apply (Nat.mod_unique n (pow2 sz) x (n - pow2 sz * x)); try omega.",
            "VernacExtend",
            "57007ff8d45cd87c61c8032607293f01973a0bb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_factor a b c: b <> 0 -> c <> 0 -> (a mod (b * c)) mod b = a mod b.",
            "VernacStartTheoremProof",
            "53b754cb573f16e54c368fb795e8a121294a4c36"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Nat.mod_mul_r a _ _ H H0).",
            "VernacExtend",
            "790813335d39451d29470085897d2ba5e79b1322"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite Nat.add_mod_idemp_l by auto.",
            "VernacExtend",
            "42a1e82a668ee81b5211139545b3e39e8fa48830"
        ],
        [
            "rewrite Nat.add_mod by auto.",
            "VernacExtend",
            "40f221de54664156981bdece729f3f35f0c4a08b"
        ],
        [
            "assert (sth: b * ((a/b) mod c) = (a/b) mod c * b) by (apply Nat.mul_comm).",
            "VernacExtend",
            "7c81bed9423293edaac1c8be8cafd11f9325329f"
        ],
        [
            "rewrite sth.",
            "VernacExtend",
            "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
        ],
        [
            "rewrite Nat.mod_mul by auto.",
            "VernacExtend",
            "3302dffd6f72deddc02b64c567ca02d57428554b"
        ],
        [
            "rewrite Nat.add_0_r.",
            "VernacExtend",
            "29b9e9ace5eafc63562495288224c43299861ee9"
        ],
        [
            "rewrite Nat.mod_mod by auto.",
            "VernacExtend",
            "036d592a5472bdd6ab199ce1a71c314ca66ede45"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split1_combine_wplus sz1 sz2 (w11 w21: word sz1) (w12 w22: word sz2): split1 _ _ (combine w11 w12 ^+ combine w21 w22) = w11 ^+ w21.",
            "VernacStartTheoremProof",
            "b4df4c24ff8ef65cb906a3b70262f75f635dd15f"
        ],
        [
            "rewrite <- natToWord_wordToNat at 1.",
            "VernacExtend",
            "732134b11f691ec55cfd7be85482e80442503189"
        ],
        [
            "rewrite wordToNat_split1.",
            "VernacExtend",
            "f90c956693f21e8e6d64780a7ce5d59bca0a2b07"
        ],
        [
            "rewrite <- wordToNat_plus.",
            "VernacExtend",
            "d8b8bbab1c082d076bfebc3c3bb7b03da9ed982d"
        ],
        [
            "rewrite ?wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "assert (sth: #w11 + pow2 sz1 * #w12 + (#w21 + pow2 sz1 * #w22) = #w11 + #w21 + pow2 sz1 * (#w12 + #w22)) by ring.",
            "VernacExtend",
            "cfcf3cecc0b60f503e4c2b7a810a4d7c6066e70d"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "rewrite sth.",
            "VernacExtend",
            "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
        ],
        [
            "rewrite Nat.pow_add_r.",
            "VernacExtend",
            "da4366ea918c1656f4f926afd8ca2605ed752460"
        ],
        [
            "assert (pow2 sz1 <> 0) by (pose proof (pow2_zero sz1); intro; omega).",
            "VernacExtend",
            "36686e68ba106bc6da35ca641cfa0b1442e3c510"
        ],
        [
            "assert (pow2 sz2 <> 0) by (pose proof (pow2_zero sz2); intro; omega).",
            "VernacExtend",
            "287c793339b131af5c4f2ccf9e94cefac70c1fcf"
        ],
        [
            "rewrite mod_factor by auto.",
            "VernacExtend",
            "26ac56ba498063f5b88847d076806fa3dab3790e"
        ],
        [
            "rewrite Nat.add_mod by auto.",
            "VernacExtend",
            "40f221de54664156981bdece729f3f35f0c4a08b"
        ],
        [
            "assert (sth2: pow2 sz1 * (# w12 + #w22) = (#w12 + #w22) * pow2 sz1) by ring.",
            "VernacExtend",
            "64f53df01497bcbebc1979d2dcaaf88e8e9a764b"
        ],
        [
            "rewrite sth2.",
            "VernacExtend",
            "79aa676f3a019657052a3f376ca89e37ebab6892"
        ],
        [
            "rewrite Nat.mod_mul by auto.",
            "VernacExtend",
            "3302dffd6f72deddc02b64c567ca02d57428554b"
        ],
        [
            "rewrite Nat.add_0_r.",
            "VernacExtend",
            "29b9e9ace5eafc63562495288224c43299861ee9"
        ],
        [
            "rewrite Nat.mod_mod by auto.",
            "VernacExtend",
            "036d592a5472bdd6ab199ce1a71c314ca66ede45"
        ],
        [
            "rewrite <- wordToNat_natToWord_eqn.",
            "VernacExtend",
            "f6c3d601ecf5861a1b4e49b43b0742bdb3eb0f12"
        ],
        [
            "rewrite natToWord_wordToNat.",
            "VernacExtend",
            "aaa0e6520fb9e253ce2e9e3acc4f387b9be39db6"
        ],
        [
            "rewrite natToWord_plus.",
            "VernacExtend",
            "05acd19875a2beb7766e11af24e7acc0c06b8a42"
        ],
        [
            "rewrite ?natToWord_wordToNat.",
            "VernacExtend",
            "31f5516c0ef04d7f6997ced09a7859696a453ed9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_2 a b: b <> 0 -> a < b * 2 -> a >= b -> a / b = 1.",
            "VernacStartTheoremProof",
            "0391321cc08c09bcef5582ac291147bbc73ca859"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (sth: b * 1 <= a) by omega.",
            "VernacExtend",
            "d6d9cb348aa31772ecce9321d80fad01d73176a7"
        ],
        [
            "pose proof (Nat.div_le_lower_bound a b 1 H sth).",
            "VernacExtend",
            "f2372e0b5c1ddd7132c17228f9e2e0fe37a57511"
        ],
        [
            "pose proof (Nat.div_lt_upper_bound a b 2 H H0).",
            "VernacExtend",
            "9bb6bbf84133175f84973aa503e04f4218b90b54"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_sub a b: b <> 0 -> a < b * 2 -> a >= b -> a mod b = a - b.",
            "VernacStartTheoremProof",
            "43ffc7e6acf33a17ad037d1f49838fdc9131b731"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Nat.mod_eq; auto.",
            "VernacExtend",
            "ed08f3e67e384267e2d2204df9321f4a30f1f8db"
        ],
        [
            "repeat f_equal.",
            "VernacExtend",
            "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
        ],
        [
            "rewrite div_2 by auto.",
            "VernacExtend",
            "62a493a8d6798a8cf545a8b9636c3b0272f95b7e"
        ],
        [
            "rewrite Nat.mul_1_r; auto.",
            "VernacExtend",
            "ff769ac41bdcc6f99d0c83e10bf83dac77b5fa2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wneg_non_0 sz: forall (a: word sz), a <> natToWord _ 0 -> # (wneg a) = pow2 sz - #a.",
            "VernacStartTheoremProof",
            "e640b054cf14be77254b4cc055117ecc0c4ff710"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wneg.",
            "VernacExtend",
            "1f90be984b445475c1039b32ac87878d29f0f71e"
        ],
        [
            "rewrite pow2_N.",
            "VernacExtend",
            "9130a82b0d5bdc3f05a27de57adc645e8d7779c8"
        ],
        [
            "rewrite NToWord_nat.",
            "VernacExtend",
            "82c69b222e8a48623d92c2012d17c715a559d381"
        ],
        [
            "rewrite Nnat.N2Nat.inj_sub.",
            "VernacExtend",
            "08d96d07523a3f80571a44809df946667c7690c8"
        ],
        [
            "rewrite wordToN_to_nat.",
            "VernacExtend",
            "a56a47b3da5ebd06ecaa0b610d209788dfdcca87"
        ],
        [
            "rewrite Nnat.Nat2N.id.",
            "VernacExtend",
            "ad09c0668c750a398aae16300d1da16cd4f9358d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; auto.",
            "VernacExtend",
            "7021426b5c52fd17e286edce6f583953565113a4"
        ],
        [
            "assert (#a <> 0) by word_omega.",
            "VernacExtend",
            "f1d3f2e0b640218db0b7070f333ed44c77c2e5da"
        ],
        [
            "pose proof (pow2_zero sz).",
            "VernacExtend",
            "8e403dfcd800041cdb84d22c1a85359689fe52e0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wnot sz: forall (a: word sz), # (wnot a) = pow2 sz - #a - 1.",
            "VernacStartTheoremProof",
            "8c823aa4dd201967d6b2408c4bfb220a19b0e79a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wnot_def.",
            "VernacExtend",
            "5c9f2844d84a6d3da105a633efecf13782dd6b4e"
        ],
        [
            "rewrite pow2_N.",
            "VernacExtend",
            "9130a82b0d5bdc3f05a27de57adc645e8d7779c8"
        ],
        [
            "rewrite NToWord_nat.",
            "VernacExtend",
            "82c69b222e8a48623d92c2012d17c715a559d381"
        ],
        [
            "rewrite Nnat.N2Nat.inj_sub.",
            "VernacExtend",
            "08d96d07523a3f80571a44809df946667c7690c8"
        ],
        [
            "rewrite Nnat.N2Nat.inj_sub.",
            "VernacExtend",
            "08d96d07523a3f80571a44809df946667c7690c8"
        ],
        [
            "rewrite wordToN_to_nat.",
            "VernacExtend",
            "a56a47b3da5ebd06ecaa0b610d209788dfdcca87"
        ],
        [
            "rewrite Nnat.Nat2N.id.",
            "VernacExtend",
            "ad09c0668c750a398aae16300d1da16cd4f9358d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; auto.",
            "VernacExtend",
            "7021426b5c52fd17e286edce6f583953565113a4"
        ],
        [
            "pose proof (pow2_zero sz).",
            "VernacExtend",
            "8e403dfcd800041cdb84d22c1a85359689fe52e0"
        ],
        [
            "unfold Pos.to_nat; simpl.",
            "VernacExtend",
            "f96c4627e28de703e8e40d74f8608e12b2cac47e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wzero_wor: forall sz w, w ^| wzero sz = w.",
            "VernacStartTheoremProof",
            "e8be15ee4165d1735700d80f9dee1f8acc691688"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wor_comm.",
            "VernacExtend",
            "bbde7312d4f86a4199832bd3b6a6d88ba05d4a12"
        ],
        [
            "rewrite wor_wzero.",
            "VernacExtend",
            "06aa5f8d3bc1694248c3dfb9b453b80aa96c2fd4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bool_prop1: forall a b, a && negb (a && b) = a && negb b.",
            "VernacStartTheoremProof",
            "a9f19c1fe14dc46a756135385e5b2e7f1e470444"
        ],
        [
            "destruct a, b; simpl; auto.",
            "VernacExtend",
            "9877aa5e22dce6beaf4bb93957e56887d5da9695"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wplus sz (w1 w2: word sz): #(w1 ^+ w2) = (#w1 + #w2) mod (pow2 sz).",
            "VernacStartTheoremProof",
            "01452b55753bf7c14660847a93fd6fd451e53a88"
        ],
        [
            "rewrite <- (natToWord_wordToNat w1) at 1.",
            "VernacExtend",
            "164eb6bdcb05d39c455c77c0b818e3ac4571760d"
        ],
        [
            "rewrite <- (natToWord_wordToNat w2) at 1.",
            "VernacExtend",
            "5e775d7519fd28dc196a07b5b6274db440c04378"
        ],
        [
            "rewrite <- natToWord_plus.",
            "VernacExtend",
            "17172a141fc704eca8f9dd850fe52b7e934e1e22"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_wmult : forall (sz : nat) (w1 w2 : word sz), #(w1 ^* w2) = (#w1 * #w2) mod pow2 sz.",
            "VernacStartTheoremProof",
            "9ebe66ac60970457a53829bcf1a5e7d27e8047bb"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (natToWord_wordToNat w1) at 1.",
            "VernacExtend",
            "164eb6bdcb05d39c455c77c0b818e3ac4571760d"
        ],
        [
            "rewrite <- (natToWord_wordToNat w2) at 1.",
            "VernacExtend",
            "5e775d7519fd28dc196a07b5b6274db440c04378"
        ],
        [
            "rewrite <- natToWord_mult.",
            "VernacExtend",
            "17470a47f3b5b081515f82d7f3b6071a8cc568c0"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wor_r_wzero_1 sz: forall w1 w2, w1 ^| w2 = natToWord sz 0 -> w2 = natToWord sz 0.",
            "VernacStartTheoremProof",
            "bc6b97168fc560fead3a6cdaae74c5c023434d89"
        ],
        [
            "induction w1; simpl; auto; intros.",
            "VernacExtend",
            "0c2075577d3d3e64888d89033cb1dab5d161945b"
        ],
        [
            "pose proof (shatter_word w2) as sth.",
            "VernacExtend",
            "3b1df6024ae22ec63a93df21cdd5eb4d65f31afe"
        ],
        [
            "simpl in sth.",
            "VernacExtend",
            "08e75b68cc3ca028a6b571524ce872ad44c3ce22"
        ],
        [
            "rewrite sth in *.",
            "VernacExtend",
            "a6aa4d42d7137dcacf312e0cf64fc4ffa50469bd"
        ],
        [
            "unfold wor in H.",
            "VernacExtend",
            "ae7b025595bd4fb81cdc1b05fc8a742f4e955370"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "unfold natToWord in H.",
            "VernacExtend",
            "293012cf129e721d69f890fb0d21d662992df103"
        ],
        [
            "unfold natToWord.",
            "VernacExtend",
            "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
        ],
        [
            "fold (natToWord n (Nat.div2 0)) in *.",
            "VernacExtend",
            "0c4fdba73e178ec48c7dd8762e94c14bb267858a"
        ],
        [
            "unfold Nat.div2, mod2 in *.",
            "VernacExtend",
            "616f65558e9087d868d72018c250e3e11776d80c"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "rewrite (IHw1 _ H2).",
            "VernacExtend",
            "f2bf36a01ae6c3420d4ac3c784734c51176a5067"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct b, (whd w2); auto.",
            "VernacExtend",
            "5ee47dd3528e4731b643d7de23df9a7b9df11fa0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wor_r_wzero_2 sz: forall w1 w2, w1 ^| w2 = natToWord sz 0 -> w1 = natToWord sz 0.",
            "VernacStartTheoremProof",
            "c00b0dda1b721146d57d61d30f0f80488d773f52"
        ],
        [
            "induction w1; simpl; auto; intros.",
            "VernacExtend",
            "0c2075577d3d3e64888d89033cb1dab5d161945b"
        ],
        [
            "pose proof (shatter_word w2) as sth.",
            "VernacExtend",
            "3b1df6024ae22ec63a93df21cdd5eb4d65f31afe"
        ],
        [
            "simpl in sth.",
            "VernacExtend",
            "08e75b68cc3ca028a6b571524ce872ad44c3ce22"
        ],
        [
            "rewrite sth in *.",
            "VernacExtend",
            "a6aa4d42d7137dcacf312e0cf64fc4ffa50469bd"
        ],
        [
            "unfold wor in H.",
            "VernacExtend",
            "ae7b025595bd4fb81cdc1b05fc8a742f4e955370"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "unfold natToWord in H.",
            "VernacExtend",
            "293012cf129e721d69f890fb0d21d662992df103"
        ],
        [
            "unfold natToWord.",
            "VernacExtend",
            "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
        ],
        [
            "fold (natToWord n (Nat.div2 0)) in *.",
            "VernacExtend",
            "0c4fdba73e178ec48c7dd8762e94c14bb267858a"
        ],
        [
            "unfold Nat.div2, mod2 in *.",
            "VernacExtend",
            "616f65558e9087d868d72018c250e3e11776d80c"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct_existT.",
            "VernacExtend",
            "321507e453c9c13245e4c140d7195ee9687743f3"
        ],
        [
            "rewrite (IHw1 _ H2).",
            "VernacExtend",
            "f2bf36a01ae6c3420d4ac3c784734c51176a5067"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct b, (whd w2); auto.",
            "VernacExtend",
            "5ee47dd3528e4731b643d7de23df9a7b9df11fa0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint countLeadingZerosWord ni no: word ni -> word no := match ni return word ni -> word no with | 0 => fun _ => $ 0 | S m => fun e => if (weq (split2 m 1 (nat_cast (fun n => word n) (eq_sym (Nat.add_1_r m)) e)) WO~0) then $ 1 ^+ @countLeadingZerosWord m no (split1 m 1 (nat_cast (fun n => word n) (eq_sym (Nat.add_1_r m)) e)) else $ 0 end.",
            "VernacFixpoint",
            "68ab4809162d16ee6684d3929073598da7785a3e"
        ],
        [
            "Lemma countLeadingZerosWord_le_len no ni: ni < pow2 no -> forall w: word ni, (countLeadingZerosWord no w <= natToWord _ ni)%word.",
            "VernacStartTheoremProof",
            "b6be9da4d0ce5dcd63d5cc189ab01a9c93d96678"
        ],
        [
            "induction ni; simpl; auto; intros.",
            "VernacExtend",
            "1d54d09e5c140558af146cf4f22b9100b74cc7e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "word_omega.",
            "VernacExtend",
            "39fff2fa618443202cafcd0c4544058a00b548db"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with | |- ((if ?P then _ else _) <= _)%word => destruct P; simpl; auto end; [| word_omega].",
            "VernacExtend",
            "3264f623d1dca411347ba91575a564902753ce24"
        ],
        [
            "assert (sth: ni < pow2 no) by omega.",
            "VernacExtend",
            "6f176616add5bac55a54c1cea90b7fe8f68e01ba"
        ],
        [
            "specialize (IHni sth).",
            "VernacExtend",
            "4eceac89d9a75a8aebbe7e13c1eff1fea99ab847"
        ],
        [
            "assert (sth1: natToWord no (S ni) = natToWord no (1 + ni)) by auto.",
            "VernacExtend",
            "89cce0dba4a5d0df96ed2d95f024d40148381063"
        ],
        [
            "rewrite sth1.",
            "VernacExtend",
            "f908fa3c364bcf3a51382c2dc77193842364a104"
        ],
        [
            "rewrite natToWord_plus.",
            "VernacExtend",
            "05acd19875a2beb7766e11af24e7acc0c06b8a42"
        ],
        [
            "match goal with | |- ((_ ^+ countLeadingZerosWord no ?P) <= _)%word => specialize (IHni P) end.",
            "VernacExtend",
            "873b96dfef130887a6f97b8891daecd1266a2916"
        ],
        [
            "match goal with | |- (?a ^+ ?b <= ?c ^+ ?d)%word => rewrite (wplus_comm a b); rewrite (wplus_comm c d) end.",
            "VernacExtend",
            "fa24d6b3fa0f0c8706863746925a0ff785762678"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "assert (sth2: no > 0).",
            "VernacExtend",
            "bdfdd4c24554cedee448098265381b71bed2859b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct no; [|omega].",
            "VernacExtend",
            "39c37bd81b8f7bb8580bb6dc3cf90cb3a28564e0"
        ],
        [
            "destruct ni; simpl in *; try omega.",
            "VernacExtend",
            "9017c5c14781daebd887800bf39c00fc9fefb176"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite <- ?(@natplus1_wordplus1_eq _ _ (wones no)); auto.",
            "VernacExtend",
            "4bac3f395c2f258bd89e107e299cda787dc905ea"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "rewrite Nat.mod_small; auto.",
            "VernacExtend",
            "6dd1efff732e053d45a1b190e502c6206f49db06"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_eqn in IHni.",
            "VernacExtend",
            "b6c0a506874ccccb1f94f776d1c147bacd6d04f1"
        ],
        [
            "rewrite Nat.mod_small in IHni; auto.",
            "VernacExtend",
            "57fc0365c5a1fe00261415d2ed9781148898796b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countLeadingZerosWord_le_len_nat no ni: ni < pow2 no -> forall w: word ni, #(countLeadingZerosWord no w) <= ni.",
            "VernacStartTheoremProof",
            "e318b16ab4a54997ef081f3822dbcdacb117fba4"
        ],
        [
            "intros H w.",
            "VernacExtend",
            "c609e0903202078dbd4189bfa108f5e41e69aed9"
        ],
        [
            "pose proof (countLeadingZerosWord_le_len H w) as sth.",
            "VernacExtend",
            "ca4802a7d6aabd0e2ba4e5082878fe5df07642d4"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' in * by assumption.",
            "VernacExtend",
            "f794b90261662e71ee1dd7d783f8673c8572392d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_zero sz: forall (w: word sz), #w = 0 -> w = natToWord _ 0.",
            "VernacStartTheoremProof",
            "7c5a800adf04516fd391a1942a49182ca9a6febf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (f_equal (natToWord sz)) in H.",
            "VernacExtend",
            "d69187d6595eac225935462a96a5e2a2df333cf5"
        ],
        [
            "rewrite natToWord_wordToNat in H.",
            "VernacExtend",
            "fd72f7778bc65354ddad5dcb7c840e3f3fc769e9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_notZero sz: forall (w: word sz), #w <> 0 -> w <> natToWord _ 0.",
            "VernacStartTheoremProof",
            "2c71ffab158cae9d67387b8d26a9a5babea047da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "pose proof (wordToNat_wzero sz); unfold wzero in *.",
            "VernacExtend",
            "46e257df77f1fc0a6fd5859e454b82b678a2f968"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natToWord_nzero sz x: 0 < x -> x < pow2 sz -> natToWord sz x <> natToWord sz 0.",
            "VernacStartTheoremProof",
            "91104feca04bcf9f0e1da8ad9d1822eda0c306d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; omega.",
            "VernacExtend",
            "9305647ccbe2efd93377d06ca93a04132ed5851a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow2_lt_pow2_S: forall n, pow2 n < pow2 (n+1).",
            "VernacStartTheoremProof",
            "1cd5e7b4067bed5228b83bb9ec48ca00e6488c1a"
        ],
        [
            "induction n; simpl; omega.",
            "VernacExtend",
            "87f6169afc3ecd96fe7b888c8712735dbf7d4bf7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_shiftl_plus_n n x: x < pow2 n -> (combine (natToWord n x) WO~1) = (natToWord (n + 1) (pow2 n)) ^+ natToWord (n + 1) x.",
            "VernacStartTheoremProof",
            "79ee8fdf8fe57130d7a533de49265cf4574f7c1a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToNat_eq2.",
            "VernacExtend",
            "897d6df928c0619549c0a86c1108e94002929055"
        ],
        [
            "rewrite ?wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent'; simpl; auto.",
            "VernacExtend",
            "e88558ba6b7cf527fadea17ea9f85501cbec7175"
        ],
        [
            "rewrite <- wordToNat_plus.",
            "VernacExtend",
            "d8b8bbab1c082d076bfebc3c3bb7b03da9ed982d"
        ],
        [
            "pose proof (pow2_lt_pow2_S n) as sth.",
            "VernacExtend",
            "c49af41eaca3571b746c54ded745acbf3d365d57"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent'; simpl; try omega.",
            "VernacExtend",
            "1d072ef35e04a1f244f2283f16ef605a0f8a3f96"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent'; simpl; try omega.",
            "VernacExtend",
            "1d072ef35e04a1f244f2283f16ef605a0f8a3f96"
        ],
        [
            "apply Nat.lt_add_lt_sub_l.",
            "VernacExtend",
            "4278541fdf7619a6feb8379ac34c5dd56212e8c8"
        ],
        [
            "rewrite Nat.add_1_r.",
            "VernacExtend",
            "6f58bb36dc04a70cbee519889325f2251f1076d1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_natToWord_wzero n: forall x, x < pow2 n -> combine (natToWord n x) (natToWord 1 0) = natToWord (n+1) x.",
            "VernacStartTheoremProof",
            "977e6c8928cf527b99d5b779591ff2ccbb04143f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToNat_eq2.",
            "VernacExtend",
            "897d6df928c0619549c0a86c1108e94002929055"
        ],
        [
            "rewrite ?wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Nat.mul_0_r.",
            "VernacExtend",
            "b0c342e42232568149a672c331046fa4df1777ff"
        ],
        [
            "rewrite Nat.add_0_r.",
            "VernacExtend",
            "29b9e9ace5eafc63562495288224c43299861ee9"
        ],
        [
            "pose proof (pow2_lt_pow2_S n) as sth2.",
            "VernacExtend",
            "b2e85f281777db57a5ef55211b6f97a5d4944bfe"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent' by omega.",
            "VernacExtend",
            "1e97fa88ac195c49068fd336268121067aeac88b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_cancel_l sz (a b c: word sz): a = b -> c ^+ a = c ^+ b.",
            "VernacStartTheoremProof",
            "ca32fc77783229b08a4f65e2e56c60015016305d"
        ],
        [
            "intro H; rewrite H; reflexivity.",
            "VernacExtend",
            "58eb70a1b91536358be31591fdd4e0c16147373b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_cancel_r sz (a b c: word sz): a = b -> a ^+ c = b ^+ c.",
            "VernacStartTheoremProof",
            "079015f04fea08a92f2e8523f3e1120fa20819d7"
        ],
        [
            "intro H; rewrite H; reflexivity.",
            "VernacExtend",
            "58eb70a1b91536358be31591fdd4e0c16147373b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word_cancel_m sz (a b c a' b': word sz): a ^+ a' = b ^+ b'-> a ^+ c ^+ a' = b ^+ c ^+ b'.",
            "VernacStartTheoremProof",
            "409b1fe2d923f1f28a568d56e582e10fdb12baa1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (sth: a ^+ c ^+ a' = a ^+ a'^+ c ).",
            "VernacExtend",
            "b880150f009c39aeaab0495bad895b1faaa50c99"
        ],
        [
            "rewrite <- wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite wplus_comm with (y := a').",
            "VernacExtend",
            "d64b13bbd3cb548165dc815441471e4aefd1eb78"
        ],
        [
            "rewrite wplus_assoc.",
            "VernacExtend",
            "63aed3418c40f5877e819fbf2cdc524389fd0436"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite sth.",
            "VernacExtend",
            "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite <- wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite wplus_comm with (x := b').",
            "VernacExtend",
            "fe65cb36030246f8b0954fc60a548f5befae3239"
        ],
        [
            "rewrite wplus_assoc.",
            "VernacExtend",
            "63aed3418c40f5877e819fbf2cdc524389fd0436"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma move_wplus_wminus sz (a b c: word sz): a ^+ b = c <-> a = c ^- b.",
            "VernacStartTheoremProof",
            "f61e299d63ae3416f66dc216997813a423f16039"
        ],
        [
            "split; intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite wminus_def.",
            "VernacExtend",
            "64ef6058e93b8fe0347972aae7557c0b702029aa"
        ],
        [
            "rewrite <- wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_wzero_1.",
            "VernacExtend",
            "196b787197c9a66e6d0422162d5a337bd03b82b5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite wminus_def.",
            "VernacExtend",
            "64ef6058e93b8fe0347972aae7557c0b702029aa"
        ],
        [
            "rewrite <- wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite wplus_comm with (x:= ^~b).",
            "VernacExtend",
            "d8524404b4acbed70814fc88f251208e8d91fc31"
        ],
        [
            "rewrite wminus_inv.",
            "VernacExtend",
            "88d5d3c8e8c2a8e794e5111c3255684027214734"
        ],
        [
            "rewrite wplus_wzero_1.",
            "VernacExtend",
            "196b787197c9a66e6d0422162d5a337bd03b82b5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma move_wplus_pow2 sz (w1 w2: word (S sz)): w1 = w2 ^+ $(pow2 sz) <-> w1 ^+ $(pow2 sz) = w2.",
            "VernacStartTheoremProof",
            "5315fb63d2a2b057a47c7ee182c2dd156096d436"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply move_wplus_wminus.",
            "VernacExtend",
            "1089299854efd614167e9b10b0bd7b2358fdd00d"
        ],
        [
            "rewrite wminus_def.",
            "VernacExtend",
            "64ef6058e93b8fe0347972aae7557c0b702029aa"
        ],
        [
            "rewrite pow2_wneg.",
            "VernacExtend",
            "745a7935607a162ad59308673691b19c7d3887bf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply move_wplus_wminus in H.",
            "VernacExtend",
            "f20b985364e7413b92fff50a0342032b35d2240a"
        ],
        [
            "rewrite <- pow2_wneg.",
            "VernacExtend",
            "d181d693808887d3fce1c0e97536c5f170c76977"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma move_wminus_pow2 sz (w1 w2: word (S sz)): w1 = w2 ^- $(pow2 sz) <-> w1 ^- $(pow2 sz) = w2.",
            "VernacStartTheoremProof",
            "968ba5922d9a9f8e7ba156d2fd8ef7b2eccbb4e7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply <- move_wplus_wminus.",
            "VernacExtend",
            "f85f13663c136bfa445562421acfcc5d442631cc"
        ],
        [
            "rewrite pow2_wneg.",
            "VernacExtend",
            "745a7935607a162ad59308673691b19c7d3887bf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply move_wplus_wminus.",
            "VernacExtend",
            "1089299854efd614167e9b10b0bd7b2358fdd00d"
        ],
        [
            "rewrite <- pow2_wneg.",
            "VernacExtend",
            "d181d693808887d3fce1c0e97536c5f170c76977"
        ],
        [
            "rewrite <- wminus_def.",
            "VernacExtend",
            "ff93961cf957b4f92af6ecb48d8d403a34e15840"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow2_wzero sz : $(pow2 sz) = wzero sz.",
            "VernacStartTheoremProof",
            "2d35d39b9f5977305ffbd59175ec5680b4326fce"
        ],
        [
            "apply wordToNat_eq2.",
            "VernacExtend",
            "897d6df928c0619549c0a86c1108e94002929055"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "rewrite Nat.mod_same.",
            "VernacExtend",
            "79054b22dad2b08d576f1dd2a1661d9af3e0db2e"
        ],
        [
            "rewrite wordToNat_wzero; auto.",
            "VernacExtend",
            "97f0078e3a1a6cc2933b9c28d1d35a2ef79a98d6"
        ],
        [
            "pose proof (zero_lt_pow2 sz) as sth.",
            "VernacExtend",
            "5753ba2b6c72d9e3406bd713a1aa041bc62cd607"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow2_wplus_wzero sz: $(pow2 sz) ^+ $(pow2 sz) = wzero (sz + 1).",
            "VernacStartTheoremProof",
            "9594adb14a5805faf19af64d17fbc9507c05a622"
        ],
        [
            "apply wordToNat_eq2.",
            "VernacExtend",
            "897d6df928c0619549c0a86c1108e94002929055"
        ],
        [
            "rewrite <- natToWord_plus.",
            "VernacExtend",
            "17172a141fc704eca8f9dd850fe52b7e934e1e22"
        ],
        [
            "rewrite <- mul2_add.",
            "VernacExtend",
            "dbdd9c1a3425ce2addff93be5befeb2e540f1564"
        ],
        [
            "assert (pow2_1_mul: pow2 1 = 2) by auto.",
            "VernacExtend",
            "8950dea893ff82c7096bd180b5e40728eb358438"
        ],
        [
            "rewrite <- pow2_1_mul at 2.",
            "VernacExtend",
            "4da93be7c46715e697201adfb43f2119bc733488"
        ],
        [
            "rewrite <- pow2_add_mul.",
            "VernacExtend",
            "4985c3d33ba0b45dfda0991e7c98e2ed16638b66"
        ],
        [
            "rewrite pow2_wzero; auto.",
            "VernacExtend",
            "c5e4e99230d9b84f79996fa2f67aa48dbf24e02f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wplus_wplus_pow2 sz (x1 x2 y1 y2: word (sz + 1)): x1 = y1 ^+ $(pow2 sz) -> x2 = y2 ^+ $(pow2 sz) -> x1 ^+ x2 = y1 ^+ y2.",
            "VernacStartTheoremProof",
            "26f3af24699a922c1d67eec172d2c968eb12b9c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite <- wplus_assoc.",
            "VernacExtend",
            "17a16fbd042ed6238e68cf6915f361300ae9b32c"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "rewrite wplus_comm in H0.",
            "VernacExtend",
            "89abebae9b7c2d2cb7e7ba82e6e369a8819ce9aa"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite wplus_assoc.",
            "VernacExtend",
            "63aed3418c40f5877e819fbf2cdc524389fd0436"
        ],
        [
            "rewrite pow2_wplus_wzero.",
            "VernacExtend",
            "196376ffc7b3e3dd2072b10f3e2edafe85fe50f5"
        ],
        [
            "rewrite wzero_wplus.",
            "VernacExtend",
            "ccbfd0d4383c24fa0aa3b87516f1cf66aa05ad9d"
        ],
        [
            "rewrite wplus_comm.",
            "VernacExtend",
            "8f2ac733ee509b04a0867c1794bac4da5d875243"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlt_meaning sz (w1 w2: word sz): (w1 < w2)%word <-> #w1 < #w2.",
            "VernacStartTheoremProof",
            "9738d74f5475f39c1d44f9a08cb7514c1934cfb4"
        ],
        [
            "pose proof (@wordToNat_gt1 sz w2 w1).",
            "VernacExtend",
            "a4b2d4b817fdfcc66b21e674a69135b45a92465e"
        ],
        [
            "pose proof (@wordToNat_gt2 sz w2 w1).",
            "VernacExtend",
            "d53ca71e737183b8cf9cb5e3d97b31417ab3f89b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_wplus sz (w1 w2: word sz): #w1 + #w2 < pow2 sz -> forall sz' (w': word sz'), combine (w1 ^+ w2) w' = combine w1 w' ^+ combine w2 ($ 0).",
            "VernacStartTheoremProof",
            "d5a31a83236a47ec3591af7dbe97f1876e9db0ac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_wplus in *.",
            "VernacExtend",
            "ac76d10af5334bc56c488856e207b4754da61c4f"
        ],
        [
            "rewrite ?wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent' by (apply pow2_zero).",
            "VernacExtend",
            "fed01b8766bea491a5a6aeed908c5574ffe1a331"
        ],
        [
            "rewrite Nat.mul_0_r, Nat.add_0_r.",
            "VernacExtend",
            "9bc459ec7b7c66ae7899c38981364ff55f33538d"
        ],
        [
            "rewrite wordToNat_wplus.",
            "VernacExtend",
            "0ea795c0213fbabc21115f54cf53a70b824b43af"
        ],
        [
            "rewrite Nat.mod_small by assumption.",
            "VernacExtend",
            "32e495dd4181aef58ae5e478f12c6c5977d7a7e0"
        ],
        [
            "assert (sth: #w1 + #w2 + pow2 sz * #w' = #w1 + pow2 sz * #w' + #w2) by ring.",
            "VernacExtend",
            "555ad66eaad631de1eea4f2cac2590527b826806"
        ],
        [
            "rewrite <- sth; clear sth.",
            "VernacExtend",
            "48058c26b3dd224d72f49d4f807f87193cfcaf8d"
        ],
        [
            "rewrite Nat.mod_small; auto.",
            "VernacExtend",
            "6dd1efff732e053d45a1b190e502c6206f49db06"
        ],
        [
            "rewrite Nat.pow_add_r.",
            "VernacExtend",
            "da4366ea918c1656f4f926afd8ca2605ed752460"
        ],
        [
            "assert (sth: pow2 sz' = 1 + (pow2 sz' - 1)) by (pose proof (pow2_zero sz'); omega).",
            "VernacExtend",
            "cc85eaa4707e8123ab38c749c01394a15d90a154"
        ],
        [
            "rewrite sth; clear sth.",
            "VernacExtend",
            "f1d539a75e4b98628a24c86c6c92c620203463aa"
        ],
        [
            "rewrite Nat.mul_add_distr_l.",
            "VernacExtend",
            "78c773c5428891dd18275272c903696f4a6e5736"
        ],
        [
            "rewrite Nat.mul_1_r.",
            "VernacExtend",
            "0a180ef087197f2d35396d6b03ec67ca73b69564"
        ],
        [
            "pose proof (wordToNat_bound w').",
            "VernacExtend",
            "cfded6dd6d148df1cc91e889df6381a190e14289"
        ],
        [
            "pose proof (pow2_zero sz).",
            "VernacExtend",
            "8e403dfcd800041cdb84d22c1a85359689fe52e0"
        ],
        [
            "apply Nat.lt_le_pred in H0.",
            "VernacExtend",
            "a1ee51771ff6aeba9201a7ec7b9fb015797d31ed"
        ],
        [
            "rewrite pred_of_minus in H0.",
            "VernacExtend",
            "0835fd2b99dda2e06bbacf1614539a9f36a62896"
        ],
        [
            "pose proof (mult_le_compat_l _ _ (pow2 sz) H0).",
            "VernacExtend",
            "b6d381547808deb0038c57fbce6337bff1f84adb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word1_neq (w: word 1): w <> WO~0 -> w <> WO~1 -> False.",
            "VernacStartTheoremProof",
            "c4175072f11bca7cc2f2aeeef5f3e4abaed6a109"
        ],
        [
            "shatter_word w; intros.",
            "VernacExtend",
            "a3b75b0d8047d4622663144b4e2a7f3b426a8d46"
        ],
        [
            "destruct x; tauto.",
            "VernacExtend",
            "736efb793024e2349937ae241f31e493c10ccd9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_1 sz: sz > 1 -> natToWord (sz + 1) 1 = combine ($ 1) WO~0.",
            "VernacStartTheoremProof",
            "1a01ffed0d3ee1e32d64823a35429bc21575c4ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- natToWord_wordToNat.",
            "VernacExtend",
            "48e80ef9e0add21ae4e0c2ddeb179590181cfd01"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite wordToNat_combine; simpl.",
            "VernacExtend",
            "2350d8a4c8c42a468761284e4ea281b9ccca1f37"
        ],
        [
            "rewrite Nat.mul_0_r, Nat.add_0_r.",
            "VernacExtend",
            "9bc459ec7b7c66ae7899c38981364ff55f33538d"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; auto.",
            "VernacExtend",
            "7021426b5c52fd17e286edce6f583953565113a4"
        ],
        [
            "destruct sz; simpl; try omega.",
            "VernacExtend",
            "4f7c95bf727f6302027681eed9aa9f70ee275313"
        ],
        [
            "pose proof (pow2_zero sz).",
            "VernacExtend",
            "8e403dfcd800041cdb84d22c1a85359689fe52e0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_cast ni no (pf: ni = no): forall w, #w = #(match pf in _ = Y return _ Y with | eq_refl => w end).",
            "VernacStartTheoremProof",
            "5f44a0d13c1e61e241604dab967ee5e0680dda7a"
        ],
        [
            "destruct pf; intros; auto.",
            "VernacExtend",
            "4d34e2113a74829b75f4e8d4421df0a9f28dcb7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countLeadingZerosWord_lt_len no ni: ni < pow2 no -> forall w: word ni, w <> wzero ni -> (countLeadingZerosWord no w < natToWord _ ni)%word.",
            "VernacStartTheoremProof",
            "b7994f58c6c31cc2d1be172a4f13ba9098c20f3d"
        ],
        [
            "induction ni; auto; intros.",
            "VernacExtend",
            "4f7735c6cf2102f80b8f927e778b99a2bc656d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "shatter_word w.",
            "VernacExtend",
            "dbce1509af20c178980cc8323dbf69956f18867e"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold countLeadingZerosWord; fold countLeadingZerosWord.",
            "VernacExtend",
            "5f6ed10849d1c0b6fa25ca021ff3826511e30a34"
        ],
        [
            "rewrite nat_cast_cast.",
            "VernacExtend",
            "ea45127a458a294df3e2d42244447db9e2b5354c"
        ],
        [
            "match goal with | |- ((if ?P then _ else _) < _)%word => destruct P; simpl; auto end.",
            "VernacExtend",
            "26a427489d4fb7b2da912956e4739ad3f643d606"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (sth: ni < pow2 no) by omega.",
            "VernacExtend",
            "6f176616add5bac55a54c1cea90b7fe8f68e01ba"
        ],
        [
            "specialize (IHni sth).",
            "VernacExtend",
            "4eceac89d9a75a8aebbe7e13c1eff1fea99ab847"
        ],
        [
            "assert (sth1: natToWord no (S ni) = natToWord no (1 + ni)) by auto.",
            "VernacExtend",
            "89cce0dba4a5d0df96ed2d95f024d40148381063"
        ],
        [
            "rewrite sth1.",
            "VernacExtend",
            "f908fa3c364bcf3a51382c2dc77193842364a104"
        ],
        [
            "rewrite natToWord_plus.",
            "VernacExtend",
            "05acd19875a2beb7766e11af24e7acc0c06b8a42"
        ],
        [
            "match goal with | |- ((_ ^+ countLeadingZerosWord no ?P) < _)%word => specialize (IHni P) end.",
            "VernacExtend",
            "bff47165c46a4a71f0bc61b5fbb0f6e368f47bd8"
        ],
        [
            "match goal with | |- (?a ^+ ?b < ?c ^+ ?d)%word => rewrite (wplus_comm a b); rewrite (wplus_comm c d) end.",
            "VernacExtend",
            "817635acec0c5aa5ca39bb010a2c9b0dd477aa52"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "assert (sth2: no > 0).",
            "VernacExtend",
            "bdfdd4c24554cedee448098265381b71bed2859b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct no; [|omega].",
            "VernacExtend",
            "39c37bd81b8f7bb8580bb6dc3cf90cb3a28564e0"
        ],
        [
            "destruct ni; simpl in *; try omega.",
            "VernacExtend",
            "9017c5c14781daebd887800bf39c00fc9fefb176"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply wordToNat_zero in e.",
            "VernacExtend",
            "a965e6a473dcd993e698800542b39a55fba422a8"
        ],
        [
            "match type of IHni with | split1 ni 1 ?P <> _ -> _ => assert (sth3: #P <> 0) by (rewrite <- wordToNat_cast; auto); apply wordToNat_notZero in sth3; rewrite <- (combine_split ni 1 P) in sth3 end.",
            "VernacExtend",
            "f5161aa94e6b1c2df0771e3109fc7d4d3c28e77d"
        ],
        [
            "rewrite e in *.",
            "VernacExtend",
            "4c506eddfe08576f2ba60dc4024c518a5ef4dd81"
        ],
        [
            "match type of sth3 with | combine ?P _ <> _ => destruct (weq P (natToWord _ 0)); [rewrite e0 in *; rewrite combine_zero in sth3; tauto|] end.",
            "VernacExtend",
            "7469c4d6192528f309634c4e86597834e1128356"
        ],
        [
            "specialize (IHni n).",
            "VernacExtend",
            "391bcbebbb82ac9bf7603e65cd679b5cf8470cfb"
        ],
        [
            "rewrite <- ?(@natplus1_wordplus1_eq _ _ (wones no)); auto.",
            "VernacExtend",
            "4bac3f395c2f258bd89e107e299cda787dc905ea"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "rewrite Nat.mod_small; auto.",
            "VernacExtend",
            "6dd1efff732e053d45a1b190e502c6206f49db06"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_eqn in IHni.",
            "VernacExtend",
            "b6c0a506874ccccb1f94f776d1c147bacd6d04f1"
        ],
        [
            "rewrite Nat.mod_small in IHni; auto.",
            "VernacExtend",
            "57fc0365c5a1fe00261415d2ed9781148898796b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_natToWord_idempotent'; auto; try omega.",
            "VernacExtend",
            "e744e8f912ef4a4155ef395e19e7498ccf9d34d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint countLeadingZerosWord_nat ni: word ni -> nat := match ni return word ni -> nat with | 0 => fun _ => 0 | S m => fun e => if (weq (split2 m 1 (nat_cast (fun n => word n) (eq_sym (Nat.add_1_r m)) e)) WO~0) then 1 + @countLeadingZerosWord_nat m (split1 m 1 (nat_cast (fun n => word n) (eq_sym (Nat.add_1_r m)) e)) else 0 end.",
            "VernacFixpoint",
            "a97ce35c842def9568e852dc02b1d0d8bd0ff20a"
        ],
        [
            "Lemma countLeadingZerosWord_nat_correct ni: forall no (w: word ni), ni < pow2 no -> #(countLeadingZerosWord no w) = countLeadingZerosWord_nat w.",
            "VernacStartTheoremProof",
            "69dea2deed911fb6ff208a229b96f4c57f3d08d3"
        ],
        [
            "induction ni; intros; simpl; auto.",
            "VernacExtend",
            "cc51d30ed5e34e1d8e0b0701bc2cc60cc749917d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent'; auto.",
            "VernacExtend",
            "1e776a302877e4c2ac1d72741c92308eedede3cc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with | |- # (if ?P then _ else _) = if ?P then _ else _ => destruct P end.",
            "VernacExtend",
            "4f49f602869ee797cec6ab808fc1f2ac6473787d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- wordToNat_plus.",
            "VernacExtend",
            "d8b8bbab1c082d076bfebc3c3bb7b03da9ed982d"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent'; try omega.",
            "VernacExtend",
            "feeb43e3c20a260ba897b072b785e52a7bbb7ef0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl;f_equal.",
            "VernacExtend",
            "e1a8d9221cffa231af353a6224974ce2a7f11d21"
        ],
        [
            "rewrite IHni; auto.",
            "VernacExtend",
            "13af5d6245928a90b9fb0638ab0f1f109e1985ef"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite ?wordToNat_natToWord_idempotent'; try omega.",
            "VernacExtend",
            "feeb43e3c20a260ba897b072b785e52a7bbb7ef0"
        ],
        [
            "match goal with | |- 1 + #(countLeadingZerosWord no ?x) < _ => pose proof (@countLeadingZerosWord_le_len_nat no ni ltac:(omega) x) as sth end.",
            "VernacExtend",
            "0bc42644c5a360519d5b5ffb9672144d7c99d8ad"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite roundTrip_0; auto.",
            "VernacExtend",
            "bb8a23542e356dceec156ba02149ad653766ed45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countLeadingZerosWord_nat_le_len ni (w: word ni): countLeadingZerosWord_nat w <= ni.",
            "VernacStartTheoremProof",
            "0ecb41719c5c90fd9144474c61f1facca6c3d843"
        ],
        [
            "induction ni; simpl; auto; intros.",
            "VernacExtend",
            "1d54d09e5c140558af146cf4f22b9100b74cc7e1"
        ],
        [
            "match goal with | |- ((if ?P then _ else _) <= _) => destruct P; simpl; auto end.",
            "VernacExtend",
            "3959e276d5ec415914f7676d0bbc5bd9452aa86c"
        ],
        [
            "apply Le.le_n_S.",
            "VernacExtend",
            "e3a25d267f1a6a00010ea3985cd52bd8915b83c0"
        ],
        [
            "eapply IHni.",
            "VernacExtend",
            "d71b639d67d0361a2b92232bf96549a4774d8238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countLeadingZerosWord_enough_size ni no no' (pf: ni < pow2 no) (pf': ni < pow2 no'): forall (w: word ni), #(countLeadingZerosWord no w) = #(countLeadingZerosWord no' w).",
            "VernacStartTheoremProof",
            "185e3b0d1e9e9811b5f5c57e37b1d703d9ce729e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite ?countLeadingZerosWord_nat_correct; auto.",
            "VernacExtend",
            "6cf87bdc1150045aca5746ab062c82cf11c0969a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_mod: forall sz (a b: word sz), wordToN (a ^% b) = (wordToN a mod wordToN b)%N.",
            "VernacStartTheoremProof",
            "a5899bf2853b4156f899d958db3e63d6208066d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wmod, wordBin.",
            "VernacExtend",
            "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
        ],
        [
            "rewrite wordToN_NToWord_2; [ reflexivity | ].",
            "VernacExtend",
            "0ab5f5012928bff9196bd33aeef99061df9882cc"
        ],
        [
            "destruct (wordToN b) eqn: E.",
            "VernacExtend",
            "e1d8f63dda6b95c711743e1200251f46be33ffcc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold N.modulo, N.div_eucl.",
            "VernacExtend",
            "e5d3ed59c2e7e224f848c8bac349e4c04353656f"
        ],
        [
            "destruct (wordToN a) eqn: F; simpl.",
            "VernacExtend",
            "1ff5b96e6f48d7f410fb77d81ed233cdb7bca5a4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Npow2_pos.",
            "VernacExtend",
            "a3206a575f7b18a9f6a1168db8a995ed32179139"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- F.",
            "VernacExtend",
            "280fa1af8c141f7ac10048fe3df77bb3fc749bc8"
        ],
        [
            "apply wordToN_bound.",
            "VernacExtend",
            "504732cf04be65741a8830132b3496b4dd897c4a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply N.lt_trans.",
            "VernacExtend",
            "18a7deac306edb197e21343f2790f1d2aa1e1fb3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply N.mod_upper_bound.",
            "VernacExtend",
            "ca12ef77e89722d3e6a24e11e80e235d707ca3b1"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- E.",
            "VernacExtend",
            "c62c6425624de37707b227590f371d7ae7fc2165"
        ],
        [
            "apply wordToN_bound.",
            "VernacExtend",
            "504732cf04be65741a8830132b3496b4dd897c4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToNat_mod: forall sz (a b: word sz), b <> $0 -> #(a ^% b) = #a mod #b.",
            "VernacStartTheoremProof",
            "e40d662d3cca6bf5b819dc131e9183b9f9c17d29"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <-? wordToN_to_nat in *.",
            "VernacExtend",
            "5a4e399615a41fcb6aaaf397fbf391fcf7344ec8"
        ],
        [
            "rewrite <-? N2Nat.inj_mod in *.",
            "VernacExtend",
            "86565c1fffd1137bf781985a218346fffea62d9f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite wordToN_mod by assumption.",
            "VernacExtend",
            "7ecc72b451239110ebbee9d9e37a369ab71f5896"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "replace 0%N with (wordToN (natToWord sz 0)) in H0.",
            "VernacExtend",
            "135a5069dde2016a8c483acb47a61c7aa853547c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "erewrite <- wordToN_wzero.",
            "VernacExtend",
            "0b584c08af7900ddf2b55332472735acd5043ed1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_mul_pow2: forall sz n (a: word sz), wlshift a n = a ^* $ (pow2 n).",
            "VernacStartTheoremProof",
            "1cd6309152989ea5535a262c737b3f219f92ddd9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "unfold wlshift.",
            "VernacExtend",
            "66c7242d1a44cdfa4c18889456412e0d393666ac"
        ],
        [
            "rewrite? wordToNat_split1.",
            "VernacExtend",
            "06d3356506503b26f24cd6ccd29945805463b928"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "rewrite? wordToNat_eq_rect.",
            "VernacExtend",
            "a83e68073fe24bfe7900cda2301e0abd7c46a3da"
        ],
        [
            "rewrite? wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "rewrite? wordToNat_wzero.",
            "VernacExtend",
            "2fb6d25ee3af7cc94c31741154d5fd7de5daea53"
        ],
        [
            "rewrite wordToNat_wmult.",
            "VernacExtend",
            "56d6e982291b2b91c03dca052812af8f2c6bf02b"
        ],
        [
            "rewrite wordToNat_natToWord_eqn.",
            "VernacExtend",
            "719428416fdc12ae6d45cf9a404bb6870805565e"
        ],
        [
            "rewrite Nat.add_0_l.",
            "VernacExtend",
            "5cae715df74901a5a35bc1d34c4c541459e05888"
        ],
        [
            "rewrite Nat.mul_mod_idemp_r by (apply pow2_ne_zero).",
            "VernacExtend",
            "1c726a3dbaa75d6db3fd89e3e26ca6d11a1b9ddd"
        ],
        [
            "rewrite Nat.mul_comm.",
            "VernacExtend",
            "7faba8b9f3419670dc5a7d31ed7ae88c16b8eb87"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_mul_Zpow2: forall sz n (a: word sz), (0 <= n)%Z -> wlshift a (Z.to_nat n) = a ^* ZToWord sz (2 ^ n).",
            "VernacStartTheoremProof",
            "95ae1cbe94524f7c7d63f718ef72a86f2df3d242"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite wlshift_mul_pow2.",
            "VernacExtend",
            "caae0624743fb3dfde1c604283d4fc31c9ae1ca0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "change 2 with (Z.to_nat 2).",
            "VernacExtend",
            "594ec6258052ab073b41e995da84fe5a0b9e13af"
        ],
        [
            "rewrite <- Z2Nat.inj_pow by omega.",
            "VernacExtend",
            "6e24cdaaef33ff64e6fdf6ab14bc4fd73101ddfa"
        ],
        [
            "apply natToWord_Z_to_nat.",
            "VernacExtend",
            "a2b4127eaf888e178c9f6fa275b0616eef02c7ee"
        ],
        [
            "apply Z.pow_nonneg.",
            "VernacExtend",
            "e0393e3f453572d78c845af1e51b3aac3cbb73b1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_distr_plus: forall sz n (a b: word sz), wlshift (a ^+ b) n = wlshift a n ^+ wlshift b n.",
            "VernacStartTheoremProof",
            "f25a14b090f19487ef3013c7406eb9ca36ed8a9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite? wlshift_mul_pow2.",
            "VernacExtend",
            "018e10628ced336f5b835493b0720a5b82456b72"
        ],
        [
            "apply wmult_plus_distr.",
            "VernacExtend",
            "f9edf3de12243ac261f0e806e42fa86cd4737765"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift'_distr_plus: forall sz n (a b: word sz), wlshift' (a ^+ b) n = wlshift' a n ^+ wlshift' b n.",
            "VernacStartTheoremProof",
            "b40407b3ceef5c47d22fabac109d9407ffd7ca5c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite? wlshift_alt.",
            "VernacExtend",
            "76a9245c1d66ed35932c594b8b6a7cfd1a09dc53"
        ],
        [
            "apply wlshift_distr_plus.",
            "VernacExtend",
            "176ecc4faaca2c98953fabbcc98858c0f17029b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_iter: forall sz n1 n2 (a: word sz), wlshift (wlshift a n1) n2 = wlshift a (n1 + n2).",
            "VernacStartTheoremProof",
            "7783d690ed060a92ee7e3014de5209c742bb98d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite? wlshift_mul_pow2.",
            "VernacExtend",
            "018e10628ced336f5b835493b0720a5b82456b72"
        ],
        [
            "rewrite <- wmult_assoc.",
            "VernacExtend",
            "ba99ed3b6071014053eca59778e8298a3574ea57"
        ],
        [
            "rewrite <- natToWord_mult.",
            "VernacExtend",
            "17470a47f3b5b081515f82d7f3b6071a8cc568c0"
        ],
        [
            "do 2 f_equal.",
            "VernacExtend",
            "74f83f01290e37153981e2e772bf9a265f1f15d0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Nat.pow_add_r.",
            "VernacExtend",
            "f1dcc793d410d80dc6ce2eef55723c62837504aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift'_iter: forall sz n1 n2 (a: word sz), wlshift' (wlshift' a n1) n2 = wlshift' a (n1 + n2).",
            "VernacStartTheoremProof",
            "a59bdda00eca30ff370488907742ced604711171"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite? wlshift_alt.",
            "VernacExtend",
            "76a9245c1d66ed35932c594b8b6a7cfd1a09dc53"
        ],
        [
            "apply wlshift_iter.",
            "VernacExtend",
            "393ef30a72fc97da10a55dbe448c35a35bd530ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift_zero: forall sz n, wlshift $0 n = natToWord sz 0.",
            "VernacStartTheoremProof",
            "c588d727be26057504c8948b2c58c7b7ce7e08e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToNat_inj.",
            "VernacExtend",
            "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
        ],
        [
            "unfold wlshift.",
            "VernacExtend",
            "66c7242d1a44cdfa4c18889456412e0d393666ac"
        ],
        [
            "rewrite? wordToNat_split1.",
            "VernacExtend",
            "06d3356506503b26f24cd6ccd29945805463b928"
        ],
        [
            "unfold eq_rec_r, eq_rec.",
            "VernacExtend",
            "f2166e8fed27197165fc4490304230c14b9e0449"
        ],
        [
            "rewrite? wordToNat_eq_rect.",
            "VernacExtend",
            "a83e68073fe24bfe7900cda2301e0abd7c46a3da"
        ],
        [
            "rewrite? wordToNat_combine.",
            "VernacExtend",
            "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
        ],
        [
            "rewrite? wordToNat_wzero.",
            "VernacExtend",
            "2fb6d25ee3af7cc94c31741154d5fd7de5daea53"
        ],
        [
            "rewrite Nat.mul_0_r.",
            "VernacExtend",
            "b0c342e42232568149a672c331046fa4df1777ff"
        ],
        [
            "change (0 + 0) with 0.",
            "VernacExtend",
            "58827448cb6214e1e7fdbcf4ab22ebcb7ef9d3a0"
        ],
        [
            "rewrite Nat.mod_0_l by (apply pow2_ne_zero).",
            "VernacExtend",
            "96b39d5b0e884bf6325aab47e8ac1ab124bc5142"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlshift'_zero: forall sz n, wlshift' $0 n = natToWord sz 0.",
            "VernacStartTheoremProof",
            "9841dc0540a1ac66361ed9ca666135546b3e8e36"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite? wlshift_alt.",
            "VernacExtend",
            "76a9245c1d66ed35932c594b8b6a7cfd1a09dc53"
        ],
        [
            "apply wlshift_zero.",
            "VernacExtend",
            "3ade3b24f0a38fde0fc964bc4ef68936268d3b39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_natToWord_nat_cast: forall sz2 sz1 sz n (e: sz1 + sz2 = sz), 2 * n < pow2 sz1 -> nat_cast word e (sext (natToWord sz1 n) sz2) = natToWord sz n.",
            "VernacStartTheoremProof",
            "c7ba5e4da9edf1a2cde32e9a175db2c20fd31d7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nat_cast_eq_rect.",
            "VernacExtend",
            "f7a284c511a8161c46bf856ee7a45522c014617a"
        ],
        [
            "apply sext_natToWord.",
            "VernacExtend",
            "d503ab9f152cf83a49c08bc6dabf2e8d0817f1a2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext_neg_natToWord_nat_cast: forall sz2 sz1 sz n (e: sz1 + sz2 = sz), 2 * n < pow2 sz1 -> nat_cast word e (sext (wneg (natToWord sz1 n)) sz2) = wneg (natToWord sz n).",
            "VernacStartTheoremProof",
            "8cae48e45ef68ae9fc64ae39f306130ea6489a1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nat_cast_eq_rect.",
            "VernacExtend",
            "f7a284c511a8161c46bf856ee7a45522c014617a"
        ],
        [
            "apply sext_wneg_natToWord.",
            "VernacExtend",
            "b7627f9e8236272e9bacde6ca13431627232d98f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sext0: forall sz0 sz (v: word sz) (e: sz0 = 0), sext v sz0 = nat_cast word (eq_ind_r (fun sz0 : nat => sz = sz + sz0) (plus_n_O sz) e) v.",
            "VernacStartTheoremProof",
            "9c48154c9d5b736d779ebdc40afb1b134865670a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold sext.",
            "VernacExtend",
            "ea29e31ffab3e16a195127c35ddcf3653db63da7"
        ],
        [
            "destruct (wmsb v false) eqn: E; simpl; rewrite combine_n_0; rewrite <- nat_cast_eq_rect; apply nat_cast_proof_irrel.",
            "VernacExtend",
            "c627c715d91d35d9d4381d3dd89c8bbe2861d564"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_wordToZ: forall (sz : nat) (w : word sz), wordToN w = Z.to_N (wordToZ w + Z.of_N (if wmsb w false then Npow2 sz else 0%N)).",
            "VernacStartTheoremProof",
            "dfb473afd9dedf88da320322ba5f71f1dee0ec22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (wordToZ_wordToN w).",
            "VernacExtend",
            "cfbe7cab58f4eb9bcdf399a2b2ce5015c8e754eb"
        ],
        [
            "remember (if wmsb w false then Npow2 sz else 0%N) as c; clear Heqc.",
            "VernacExtend",
            "6dd642c15b6b477ed91d93203631f48ae489e6da"
        ],
        [
            "rewrite Z.sub_add.",
            "VernacExtend",
            "397509d0158c13cdd2a9f1370fb5359bb189c360"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply N2Z.id.",
            "VernacExtend",
            "248a36e0f709dd29b5cc9d5a29d4561a661f84d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uwordToZ_ZToWord_0: forall (sz : nat) (z : Z), (0 <= z < Z.of_N (Npow2 sz))%Z -> uwordToZ (ZToWord sz z) = z.",
            "VernacStartTheoremProof",
            "fc3fccad2c933f1bd7d2170640a120313ad2ae2b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold uwordToZ.",
            "VernacExtend",
            "9f6108da47369cf7026ef233bf8a3560a2554588"
        ],
        [
            "pose proof (Z2N.id _ (proj1 H)).",
            "VernacExtend",
            "a16b50046ecb1f18f100857cc08d40561ad3aefe"
        ],
        [
            "remember (Z.to_N z) as n; clear Heqn.",
            "VernacExtend",
            "81461555ff2d63b59d88457f736209eda7197fdc"
        ],
        [
            "subst z.",
            "VernacExtend",
            "164f309c003709d10ea3bbb7324dbfe980b258de"
        ],
        [
            "apply proj2 in H.",
            "VernacExtend",
            "4c0161ae370d68d6639940904ddbfeea34dabbe5"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite ZToWord_Z_of_N.",
            "VernacExtend",
            "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
        ],
        [
            "apply wordToN_NToWord_2.",
            "VernacExtend",
            "620d6ad9bd931b4fee587e6bb296302c7df38248"
        ],
        [
            "apply N2Z.inj_lt.",
            "VernacExtend",
            "805d678c12d8d8019fef9a59201c0de6fb0fab18"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uwordToZ_ZToWord: forall (sz : nat) (z : Z), (0 <= z < 2 ^ (Z.of_nat sz))%Z -> uwordToZ (ZToWord sz z) = z.",
            "VernacStartTheoremProof",
            "0aa2aca307999f27e78d0f2f92114160f5d699f9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply uwordToZ_ZToWord_0.",
            "VernacExtend",
            "a25e8514fa1c0965f45cee5c079e74c9fc72e1b8"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "change 2%Z with (Z.of_nat 2) in H1.",
            "VernacExtend",
            "12ba05a13ca86f268af8b98ec29388936e1b761f"
        ],
        [
            "rewrite <- Nat2Z.inj_pow in H1.",
            "VernacExtend",
            "a17edbf4a99508971723d76547e189f2317d9c26"
        ],
        [
            "rewrite <- N_nat_Z.",
            "VernacExtend",
            "63785fcb1c182ad034e9982e8758bda00d156cc2"
        ],
        [
            "rewrite Npow2_nat.",
            "VernacExtend",
            "6b8f2867595074592501d9adb63ec571503d7aa8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NToWord_Z_to_N: forall sz n, (0 <= n)%Z -> NToWord sz (Z.to_N n) = ZToWord sz n.",
            "VernacStartTheoremProof",
            "d60491901a6c6843aa9ae604479e9022d7f398d8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- ZToWord_Z_of_N.",
            "VernacExtend",
            "2e8746f1417052d0e4b28212344118ab89e89be2"
        ],
        [
            "rewrite Z2N.id by assumption.",
            "VernacExtend",
            "a350c59a79ba093f479aad16556a7d243af7f71d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uwordToZ_ZToWord_k: forall (sz : nat) (n : Z), (0 <= n)%Z -> exists k, uwordToZ (ZToWord sz n) = (n - k * 2 ^ Z.of_nat sz)%Z /\\ (k * 2 ^ Z.of_nat sz <= n)%Z.",
            "VernacStartTheoremProof",
            "b904928f19f9ded91ddc30b1fea3fac2787c21f8"
        ],
        [
            "intros *.",
            "VernacExtend",
            "98ee288edc42057d24ad9c0755aadeb16c6aa433"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "unfold uwordToZ.",
            "VernacExtend",
            "9f6108da47369cf7026ef233bf8a3560a2554588"
        ],
        [
            "pose proof (wordToN_NToWord sz (Z.to_N n)) as P.",
            "VernacExtend",
            "9cb39b1ce3c7ae1bd2d112cdeac99313994f456c"
        ],
        [
            "destruct P as [k [P Q]].",
            "VernacExtend",
            "0f7800f4a34714b18a37318c11c7bb09d5a27353"
        ],
        [
            "exists (Z.of_N k).",
            "VernacExtend",
            "3f29ec51ca403c5c00459eeaf1970a0769891873"
        ],
        [
            "rewrite NToWord_Z_to_N in P by assumption.",
            "VernacExtend",
            "0e7229f8ce5c3d4fb56b3ee4cec10060e644ed3b"
        ],
        [
            "rewrite P.",
            "VernacExtend",
            "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
        ],
        [
            "clear P.",
            "VernacExtend",
            "09979dc635f62a4144acc1997516dcd0750123f1"
        ],
        [
            "rewrite <- Z_of_N_Npow2 in *.",
            "VernacExtend",
            "e29128b560d1a377489dd5b9ba9da04526152ffd"
        ],
        [
            "rewrite <- N2Z.inj_mul.",
            "VernacExtend",
            "83c8dec9ef810068b63c463c9f7df1e3826a6d1c"
        ],
        [
            "rewrite N2Z.inj_sub by assumption.",
            "VernacExtend",
            "31b069b3ae8849b8b3f6c2e48140b266a5757f90"
        ],
        [
            "apply N2Z.inj_le in Q.",
            "VernacExtend",
            "1995c017161a161fa0ff340be209fd88527538f6"
        ],
        [
            "rewrite Z2N.id in * by assumption.",
            "VernacExtend",
            "47687066d7ef91d75c6238f1c04871efc8ee980f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zpow2_pos: forall n, (2 ^ Z.of_nat n > 0)%Z.",
            "VernacStartTheoremProof",
            "7d4a11cce12b433dffebaf83c0130684bcfc6dab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Z.pow_pos_nonneg 2 (Z.of_nat n)).",
            "VernacExtend",
            "a42726a4b387b38550d3054513c717aef6c88d88"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uwordToZ_bound: forall sz (a: word sz), (0 <= uwordToZ a < 2 ^ Z.of_nat sz)%Z.",
            "VernacStartTheoremProof",
            "e00ac757e9805dd9c8742fa38cf67dd53d945205"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold uwordToZ.",
            "VernacExtend",
            "9f6108da47369cf7026ef233bf8a3560a2554588"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply N2Z.is_nonneg.",
            "VernacExtend",
            "2631500e5989c2b7cf7db6763f9cfb4ae96bcefb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "pose proof (wordToN_bound a) as P.",
            "VernacExtend",
            "de1d50e09ed3035d7fed49807f3f864c50938d33"
        ],
        [
            "apply N2Z.inj_lt in P.",
            "VernacExtend",
            "86e0ce5c84a6975cb4d58378fb370e5a7416d2ea"
        ],
        [
            "rewrite Z_of_N_Npow2 in P.",
            "VernacExtend",
            "ac4647574fd048f37238c8982d418a754f4dad50"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uwordToZ_ZToWord_mod: forall (sz : nat) (z : Z), (0 <= z)%Z -> uwordToZ (ZToWord sz z) = (z mod 2 ^ (Z.of_nat sz))%Z.",
            "VernacStartTheoremProof",
            "19b5cdbdad5a4c89cc85e75af321bfa842e01cef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (uwordToZ_ZToWord_k sz H) as P.",
            "VernacExtend",
            "efc035501b8f6a64862125c82cdf5c565400f454"
        ],
        [
            "destruct P as [k [P Q]].",
            "VernacExtend",
            "0f7800f4a34714b18a37318c11c7bb09d5a27353"
        ],
        [
            "pose proof (uwordToZ_bound (ZToWord sz z)) as B.",
            "VernacExtend",
            "fa673b89d45d598d1590f4a2297e809615195814"
        ],
        [
            "rewrite P in *.",
            "VernacExtend",
            "154a278d57610ff8d63c18ef96dafe5c28808c98"
        ],
        [
            "clear P.",
            "VernacExtend",
            "09979dc635f62a4144acc1997516dcd0750123f1"
        ],
        [
            "rewrite Zmod_eq by (apply Zpow2_pos).",
            "VernacExtend",
            "e12e1b6fba43c3e9f1e573369a6e88cd1d69688e"
        ],
        [
            "pose proof (Z.div_unique_pos z (2 ^ Z.of_nat sz) k (z - k * 2 ^ Z.of_nat sz)) as U.",
            "VernacExtend",
            "8e6ce96b1ce5e54d01b6976ce9ed02bb2066ffa9"
        ],
        [
            "rewrite U.",
            "VernacExtend",
            "f4f8e08f4b6e92bbd380857e547804f1e7e70cda"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZToWord_uwordToZ: forall sz (a: word sz), ZToWord sz (uwordToZ a) = a.",
            "VernacStartTheoremProof",
            "deeab3cc6a54228beadbc731c4f11eea4e886593"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold uwordToZ.",
            "VernacExtend",
            "9f6108da47369cf7026ef233bf8a3560a2554588"
        ],
        [
            "rewrite ZToWord_Z_of_N.",
            "VernacExtend",
            "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
        ],
        [
            "apply NToWord_wordToN.",
            "VernacExtend",
            "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_neq_0: forall sz (b : word sz), b <> $0 -> wordToN b <> 0%N.",
            "VernacStartTheoremProof",
            "3aa5e55725fff8ba9bc366a88be8f496a2cbbe67"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "erewrite <- wordToN_wzero in C.",
            "VernacExtend",
            "efd2db2c143ce568483a6d539827c46ef5471c12"
        ],
        [
            "unfold wzero in C.",
            "VernacExtend",
            "a77c599cb0554fc5df6d23ac3fee3609136cafbb"
        ],
        [
            "exact C.",
            "VernacExtend",
            "6e39c771c423e9721f233c4a5f393bb8a2dc408b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_plus_distr_does_not_hold: ~ forall sz (a b m: word sz), m <> $0 -> (a ^+ b) ^% m = ((a ^% m) ^+ (b ^% m)) ^% m.",
            "VernacStartTheoremProof",
            "aa43288d2c7777bdbc7f17561e5d401a39cb074e"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "specialize (C 4 $9 $11 $7).",
            "VernacExtend",
            "c3bd627fe0ae7f842bcce69889765176ac4a5758"
        ],
        [
            "cbv in C.",
            "VernacExtend",
            "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
        ],
        [
            "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
            "VernacExtend",
            "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
        ],
        [
            "specialize (C H).",
            "VernacExtend",
            "591559f49fcd2d7d7604316ba30c39608c56955f"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmul_mod_distr_does_not_hold: ~ forall sz (a b n: word sz), n <> $0 -> (a ^* b) ^% n = ((a ^% n) ^* (b ^% n)) ^% n.",
            "VernacStartTheoremProof",
            "8eb03832dee960cbf4ce5079bf133c9fe4a10562"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "specialize (C 4 $9 $11 $7).",
            "VernacExtend",
            "c3bd627fe0ae7f842bcce69889765176ac4a5758"
        ],
        [
            "cbv in C.",
            "VernacExtend",
            "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
        ],
        [
            "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
            "VernacExtend",
            "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
        ],
        [
            "specialize (C H).",
            "VernacExtend",
            "591559f49fcd2d7d7604316ba30c39608c56955f"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nmod_0_r: forall a : N, (a mod 0)%N = a.",
            "VernacStartTheoremProof",
            "3e07976f66c8ac27c47ac2ac5a4c56f518fa6a85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a; reflexivity.",
            "VernacExtend",
            "7fbe57a1b7de98163889837c4a347c7457bf77a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_0: forall sz, wordToN (natToWord sz 0) = 0%N.",
            "VernacStartTheoremProof",
            "19d3e263f53688b9ef7cc8a74766f7f471632563"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (natToWord sz 0) with (wzero sz).",
            "VernacExtend",
            "acc4eac2675d845118ea2e972f2e06ce101ec66c"
        ],
        [
            "apply wordToN_wzero.",
            "VernacExtend",
            "0c3acd041c3451f4d7aa04989aabc7bf7b7c2264"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NToWord_0: forall sz, NToWord sz 0 = $ (0).",
            "VernacStartTheoremProof",
            "724d951efbdef06ea33f9685e0be36772d9e52a8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change 0%nat with (N.to_nat 0).",
            "VernacExtend",
            "b466f4b0d5f0024fed91f3f90790cee381ff5781"
        ],
        [
            "apply NToWord_nat.",
            "VernacExtend",
            "285f6f8c66bec6b73412d6ceabceb75efe005761"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_0_r: forall sz (a: word sz), a ^% $0 = a.",
            "VernacStartTheoremProof",
            "e12889a2a57ecdcfa653eebd062f2f1b206835e1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wmod, wordBin.",
            "VernacExtend",
            "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
        ],
        [
            "rewrite wordToN_0.",
            "VernacExtend",
            "b5cee3fea413e82ad8838cb78340b250e3aff592"
        ],
        [
            "rewrite Nmod_0_r.",
            "VernacExtend",
            "088f0a3b70fb3a588febeaeb8421f8f1af8158f8"
        ],
        [
            "apply NToWord_wordToN.",
            "VernacExtend",
            "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wordToN_NToWord_eqn: forall sz (n : N), wordToN (NToWord sz n) = (n mod Npow2 sz)%N.",
            "VernacStartTheoremProof",
            "82a5eacff6f6ea3adaa8bc34a0512c83bf7cad74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (Npow2_not_zero sz).",
            "VernacExtend",
            "12e1c3a091e9f260d2f0faf478985b74524e1273"
        ],
        [
            "apply Nnat.N2Nat.inj.",
            "VernacExtend",
            "e3ae94dec76ca474fe5d90aa7530ca5e87f4c0de"
        ],
        [
            "rewrite wordToN_to_nat.",
            "VernacExtend",
            "a56a47b3da5ebd06ecaa0b610d209788dfdcca87"
        ],
        [
            "rewrite N2Nat.inj_mod by assumption.",
            "VernacExtend",
            "d3705c1f2d7735dfa96c903592617eeda4a617d3"
        ],
        [
            "rewrite Npow2_nat.",
            "VernacExtend",
            "6b8f2867595074592501d9adb63ec571503d7aa8"
        ],
        [
            "rewrite <- wordToNat_natToWord_eqn.",
            "VernacExtend",
            "f6c3d601ecf5861a1b4e49b43b0742bdb3eb0f12"
        ],
        [
            "rewrite <- NToWord_nat.",
            "VernacExtend",
            "6d99fad444ab36b0d9a633f673804166066a2147"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nminus_mod_idemp_r: forall a b n : N, (n <> 0)%N -> (b <= a)%N -> ((a - b mod n) mod n)%N = ((a - b) mod n)%N.",
            "VernacStartTheoremProof",
            "3227f4f80628d9f0f272a2b30cb3692c04181169"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply N2Z.inj.",
            "VernacExtend",
            "b0e1503451d543a82995b02d4392947ac892a9e0"
        ],
        [
            "rewrite? N2Z.inj_mod by assumption.",
            "VernacExtend",
            "f87d200018e3b26b483d2a575530248bdc981e45"
        ],
        [
            "pose proof (N.mod_le b n H).",
            "VernacExtend",
            "aec4f947154c4246f3471ac29da6ed72d65cc497"
        ],
        [
            "rewrite N2Z.inj_sub by (eapply N.le_trans; eassumption).",
            "VernacExtend",
            "145a2d1a116c57ff41bd1b65def1007300ae7354"
        ],
        [
            "rewrite N2Z.inj_sub by assumption.",
            "VernacExtend",
            "31b069b3ae8849b8b3f6c2e48140b266a5757f90"
        ],
        [
            "rewrite? N2Z.inj_mod by assumption.",
            "VernacExtend",
            "f87d200018e3b26b483d2a575530248bdc981e45"
        ],
        [
            "apply Zdiv.Zminus_mod_idemp_r.",
            "VernacExtend",
            "c170006b473e415b7a11b17d1584777ea1a25140"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma drop_sub_N: forall sz (n k : N), (k * Npow2 sz <= n)%N -> NToWord sz (n - k * Npow2 sz) = NToWord sz n.",
            "VernacStartTheoremProof",
            "7dab6b7a078cab57379643bf3ffa9a1d2ac98dc7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply wordToN_inj.",
            "VernacExtend",
            "80d23ac951fab63d04cca84ead9106e2b3a29d05"
        ],
        [
            "pose proof (Npow2_not_zero sz).",
            "VernacExtend",
            "12e1c3a091e9f260d2f0faf478985b74524e1273"
        ],
        [
            "do 2 rewrite wordToN_NToWord_eqn.",
            "VernacExtend",
            "efeb6f29772227f47b2f07c5b98478f2ffd0d391"
        ],
        [
            "rewrite <- Nminus_mod_idemp_r by assumption.",
            "VernacExtend",
            "5aff89974b661b52f25e250eaf37983a38270c4b"
        ],
        [
            "rewrite N.mod_mul by assumption.",
            "VernacExtend",
            "5f4212d784c34d20d6e568c55974d32767429395"
        ],
        [
            "rewrite N.sub_0_r.",
            "VernacExtend",
            "64465c02f18656eb03a73685b3b400b2a94fd873"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_divides: forall sz (a b: word sz), a ^% b = $0 -> exists k, a = b ^* k.",
            "VernacStartTheoremProof",
            "2818ced1fe2fcc82eced97bb6b13d2ca69da13cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (weq b $0).",
            "VernacExtend",
            "466e941630eb09234f97718db2ec7f62b26161c2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "rewrite wmod_0_r in *.",
            "VernacExtend",
            "2517412869af325ac6bc746c12833719af42e0fe"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "exists (natToWord sz 0).",
            "VernacExtend",
            "4c3ba219fb4dba71943121b7eb9f7b9fe7c907f5"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply wmult_neut_r.",
            "VernacExtend",
            "3890cdfb2c72992491c81aa982b1fe22dca9113c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold wmod, wmult, wordBin in *.",
            "VernacExtend",
            "da5f924f2e85be2bebc1a56840fd4932a0ca0252"
        ],
        [
            "pose proof (N.mod_divides (wordToN a) (wordToN b)) as P.",
            "VernacExtend",
            "1da74485a73c4e320c748c32d470e4b9b5b5cf07"
        ],
        [
            "apply wordToN_neq_0 in n.",
            "VernacExtend",
            "1ccb16a5027d49b815c1ebd7d567258c20008db3"
        ],
        [
            "specialize (P n).",
            "VernacExtend",
            "82466b76f677770813adfd636b1ff899e93d86ba"
        ],
        [
            "destruct P as [ [k P] _].",
            "VernacExtend",
            "5193772239dcb7f7506d58258cf31291248c52d4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (f_equal (@wordToN sz)) in H.",
            "VernacExtend",
            "22014b14920ad2781f12acc15095f94fadac941f"
        ],
        [
            "rewrite wordToN_NToWord_2 in H.",
            "VernacExtend",
            "1c06a5adadf94b93e14df23fc5276d472c3d6c7e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply wordToN_0.",
            "VernacExtend",
            "df6c05a0d83e76c408e194885bb05714f45d736c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "pose proof (wordToN_bound a).",
            "VernacExtend",
            "3d494b94ba4e4f5e512460538ba302f82966a95d"
        ],
        [
            "remember (wordToN a) as c.",
            "VernacExtend",
            "8e08274d6029bf8eeab06395fec0561754e84caf"
        ],
        [
            "clear Heqc a.",
            "VernacExtend",
            "df45f7d746f8642230c4e780236e76c240830af6"
        ],
        [
            "pose proof (wordToN_bound b).",
            "VernacExtend",
            "08729af943c645e5d26a827087d02ef654defff9"
        ],
        [
            "remember (wordToN b) as d.",
            "VernacExtend",
            "d1ed05d29107e1e2e4cf93fa75ce6160eac31c16"
        ],
        [
            "clear Heqd b.",
            "VernacExtend",
            "2eb7ce10f175251860d03cb54fa6145b313dd94a"
        ],
        [
            "pose proof (N.mod_upper_bound c d n).",
            "VernacExtend",
            "bc04fa571e73917a3596c314ac3c73f005a131f6"
        ],
        [
            "nomega.",
            "VernacExtend",
            "172a67512b5be7cabf23ff79ed79dc00750b182b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists (NToWord sz (k - k / (Npow2 sz) * Npow2 sz)).",
            "VernacExtend",
            "1fcd52e887d8a87b515bcd3cd570eab1a7b1de85"
        ],
        [
            "rewrite wordToN_NToWord_2.",
            "VernacExtend",
            "8a0683d8ddcae6b07999f79e8a371bc3b1f8be5b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite N.mul_sub_distr_l.",
            "VernacExtend",
            "e2bce9870552ce59d4c388e25aacb9952d5be843"
        ],
        [
            "rewrite N.mul_assoc.",
            "VernacExtend",
            "c7d78c8d2521c9179ca6c46191ed315e7d0ed245"
        ],
        [
            "rewrite drop_sub_N.",
            "VernacExtend",
            "b29f0f19438eb6df4ae52b0306cc04cbcbc2347d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- P.",
            "VernacExtend",
            "341ee036c8c0ea29ce611d79f005184467058155"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply NToWord_wordToN.",
            "VernacExtend",
            "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- N.mul_assoc.",
            "VernacExtend",
            "79607e27dc24b773f3475b10ac59b7167c8f2782"
        ],
        [
            "rewrite <- (N.mul_comm (Npow2 sz)).",
            "VernacExtend",
            "201f26f6f5b06e076d990c955bc44fd07cdc1555"
        ],
        [
            "apply N.mul_le_mono_l.",
            "VernacExtend",
            "efb42fc5439608b18ff1cd9bfee060a4d74266a0"
        ],
        [
            "apply (N.mul_div_le k (Npow2 sz)).",
            "VernacExtend",
            "eb7148bcd3757d851879442718c904ec34b9cc5c"
        ],
        [
            "apply Npow2_not_zero.",
            "VernacExtend",
            "e125371b99031554653134cb2aa170afebddd5ef"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- N.mul_comm.",
            "VernacExtend",
            "4be9bf89e5192ac49e750d9d32de8b34d1a31ffc"
        ],
        [
            "rewrite <- N.mod_eq by (apply Npow2_not_zero).",
            "VernacExtend",
            "f6a60a442b2fb710cbf8d62396e2dc17786712e2"
        ],
        [
            "apply N.mod_upper_bound.",
            "VernacExtend",
            "ca12ef77e89722d3e6a24e11e80e235d707ca3b1"
        ],
        [
            "apply Npow2_not_zero.",
            "VernacExtend",
            "e125371b99031554653134cb2aa170afebddd5ef"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_divides_other_direction_does_not_hold: ~ forall sz (a b: word sz), b <> $0 -> (exists k, a = b ^* k) -> a ^% b = $0.",
            "VernacStartTheoremProof",
            "1e73d468ae17b60e99071ef6b185aa46819760d6"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "specialize (C 4 $14 $5).",
            "VernacExtend",
            "17f1e07c965aaa99dc5e18667475ef495450f6d9"
        ],
        [
            "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
            "VernacExtend",
            "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
        ],
        [
            "specialize (C H).",
            "VernacExtend",
            "591559f49fcd2d7d7604316ba30c39608c56955f"
        ],
        [
            "match type of C with (?A -> _) => assert A as B end.",
            "VernacExtend",
            "024999485a42d7e2161112d977a04856655d0c24"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (natToWord 4 6).",
            "VernacExtend",
            "1554dbdb9477d538cd096f2dcbe25167db9dfffa"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (C B).",
            "VernacExtend",
            "06fdd633ce4a18b58dd4d10c54df6d71e68d6843"
        ],
        [
            "cbv in C.",
            "VernacExtend",
            "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_mul_does_not_hold: ~ forall sz (a b: word sz), b <> $0 -> (a ^* b) ^% b = $0.",
            "VernacStartTheoremProof",
            "d09f384d5ce38a97551144025c6d53f05199d25a"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "specialize (C 4 $6 $5).",
            "VernacExtend",
            "d86d67e82309f50cd72bedf2eb1d36270d05207d"
        ],
        [
            "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
            "VernacExtend",
            "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
        ],
        [
            "specialize (C H).",
            "VernacExtend",
            "591559f49fcd2d7d7604316ba30c39608c56955f"
        ],
        [
            "cbv in C.",
            "VernacExtend",
            "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmult_plus_distr_l: forall (sz : nat) (x y z : word sz), z ^* (x ^+ y) = z ^* x ^+ z ^* y.",
            "VernacStartTheoremProof",
            "8e546a94671bcae6c366782c405b03623e7af8b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite! (wmult_comm z).",
            "VernacExtend",
            "1b3b90842481903a02874ef9a626c29843ab0d72"
        ],
        [
            "apply wmult_plus_distr.",
            "VernacExtend",
            "f9edf3de12243ac261f0e806e42fa86cd4737765"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_same: forall sz (a: word sz), a ^% a = $0.",
            "VernacStartTheoremProof",
            "71aa8d6e0789d1efde3baae9ca24cb731c681a28"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (weq a $0).",
            "VernacExtend",
            "c509012f33ba1544a120e63809f299b8ea1e790b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst a.",
            "VernacExtend",
            "d7670e5f9c196bd417b16b29da3532f33d34884d"
        ],
        [
            "rewrite wmod_0_r in *.",
            "VernacExtend",
            "2517412869af325ac6bc746c12833719af42e0fe"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold wmod, wordBin.",
            "VernacExtend",
            "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
        ],
        [
            "apply wordToN_neq_0 in n.",
            "VernacExtend",
            "1ccb16a5027d49b815c1ebd7d567258c20008db3"
        ],
        [
            "rewrite N.mod_same by assumption.",
            "VernacExtend",
            "b4747e773b5bb8ce50896b0b245148217c4e955a"
        ],
        [
            "apply NToWord_0.",
            "VernacExtend",
            "a56302478a233f442ac370db19a8f6fa507d3e13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_0_l: forall sz (m: word sz), $0 ^% m = $0.",
            "VernacStartTheoremProof",
            "50443083c19bb03c7eef5fb703d7ccff3db6dbb4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold wmod, wordBin.",
            "VernacExtend",
            "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
        ],
        [
            "rewrite wordToN_0.",
            "VernacExtend",
            "b5cee3fea413e82ad8838cb78340b250e3aff592"
        ],
        [
            "destruct (N.eq_dec (wordToN m) 0%N).",
            "VernacExtend",
            "ed0f5ace806b65836204e84029d53a339945ab61"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "change (0 mod 0)%N with 0%N.",
            "VernacExtend",
            "5579039a7a1df14d7abe03bcadcb960d09f868f3"
        ],
        [
            "apply NToWord_0.",
            "VernacExtend",
            "a56302478a233f442ac370db19a8f6fa507d3e13"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite N.mod_0_l by assumption.",
            "VernacExtend",
            "464dd1be0cb34b22ad621adf0c9960d457c328ba"
        ],
        [
            "apply NToWord_0.",
            "VernacExtend",
            "a56302478a233f442ac370db19a8f6fa507d3e13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_plus_distr: forall sz (a b m: word sz), (exists k, (wordToN m * k)%N = Npow2 sz) -> (a ^+ b) ^% m = ((a ^% m) ^+ (b ^% m)) ^% m.",
            "VernacStartTheoremProof",
            "26d15038b27daa05019214ee678ea633545b4d15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [k E].",
            "VernacExtend",
            "ab28aeb091b7d686b829bfb6a49413c3c4d8c700"
        ],
        [
            "assert (wordToN m <> 0%N) as H.",
            "VernacExtend",
            "07f06fc3660c94e16f18239513e1c5bab62a9ccd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "rewrite C in E.",
            "VernacExtend",
            "c77c780855e14998ba4e46c04cb339d21e7465bf"
        ],
        [
            "simpl in E.",
            "VernacExtend",
            "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
        ],
        [
            "symmetry in E.",
            "VernacExtend",
            "250f6924a028ad3460de486d6336ed5d096239c9"
        ],
        [
            "apply Npow2_not_zero in E.",
            "VernacExtend",
            "df52cafb732c346b52fec9fda08aefd3bde850bd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold wplus, wmod, wordBin.",
            "VernacExtend",
            "b1de3c195882c35cbe4bebe7de1998ddb6eadc0d"
        ],
        [
            "pose proof (wordToN_bound a).",
            "VernacExtend",
            "3d494b94ba4e4f5e512460538ba302f82966a95d"
        ],
        [
            "remember (wordToN a) as c.",
            "VernacExtend",
            "8e08274d6029bf8eeab06395fec0561754e84caf"
        ],
        [
            "clear Heqc a.",
            "VernacExtend",
            "df45f7d746f8642230c4e780236e76c240830af6"
        ],
        [
            "pose proof (wordToN_bound b).",
            "VernacExtend",
            "08729af943c645e5d26a827087d02ef654defff9"
        ],
        [
            "remember (wordToN b) as d.",
            "VernacExtend",
            "d1ed05d29107e1e2e4cf93fa75ce6160eac31c16"
        ],
        [
            "clear Heqd b.",
            "VernacExtend",
            "2eb7ce10f175251860d03cb54fa6145b313dd94a"
        ],
        [
            "pose proof (wordToN_bound m).",
            "VernacExtend",
            "8565dd197b4a93ae6bfe386f0dc9b5e41adf0605"
        ],
        [
            "remember (wordToN m) as n.",
            "VernacExtend",
            "89d0279325346696d54ff9bfcebf4c9e5a42b112"
        ],
        [
            "clear Heqn m.",
            "VernacExtend",
            "78569a29a56bdf2a004b977b45f3d02d26565c83"
        ],
        [
            "pose proof (N.mod_upper_bound c n H).",
            "VernacExtend",
            "2afdc834749d0e1d6269c57dc1e877ac437a1372"
        ],
        [
            "pose proof (N.mod_upper_bound d n H).",
            "VernacExtend",
            "b802de0586e7cb8d66fd11e7ff7a42fed9bc5404"
        ],
        [
            "rewrite (@wordToN_NToWord_2 sz (c mod n)) by nomega.",
            "VernacExtend",
            "58f5222bafda37c4ccb08b075b82b51b253a490c"
        ],
        [
            "rewrite (@wordToN_NToWord_2 sz (d mod n)) by nomega.",
            "VernacExtend",
            "4757f19e6643f05495d949c695a8cef031a86f64"
        ],
        [
            "repeat match goal with | |- context [wordToN (NToWord ?sz ?n)] => let k := fresh \"k\" in let E := fresh \"E\" in let B := fresh \"B\" in destruct (wordToN_NToWord sz n) as [ k [E B] ]; rewrite E in *; clear E end.",
            "VernacExtend",
            "5d42f10b13c3d8e493b08acbe0ceb78c635438d1"
        ],
        [
            "rewrite <- E in *.",
            "VernacExtend",
            "a6dc796a9756cb38d18d0cfee3b16112313171f1"
        ],
        [
            "rewrite <- Nminus_mod_idemp_r by assumption.",
            "VernacExtend",
            "5aff89974b661b52f25e250eaf37983a38270c4b"
        ],
        [
            "rewrite <- (@Nminus_mod_idemp_r (c mod n + d mod n)) by assumption.",
            "VernacExtend",
            "3b1d6b219feab500bbeb9e4db1b790f25da6c29f"
        ],
        [
            "rewrite (N.mul_comm n k).",
            "VernacExtend",
            "bcef51bab6a910d8f58a2b868789e0e995b7d777"
        ],
        [
            "do 2 rewrite N.mul_assoc.",
            "VernacExtend",
            "2f3e648f30d315f7dfff502f90e5777b156e584b"
        ],
        [
            "do 2 rewrite N.mod_mul by assumption.",
            "VernacExtend",
            "60a5360022264b87f27fd8689568db79beb4ed78"
        ],
        [
            "do 2 rewrite N.sub_0_r.",
            "VernacExtend",
            "1b7ce5a307a66c6019b32c66735d07b2a75b4198"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply N.add_mod.",
            "VernacExtend",
            "f979f0daf4f7c15f296963da2503cc87efc8ef80"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wmod_mul: forall sz (a b: word sz), (exists k, (wordToN b * k)%N = Npow2 sz) -> (a ^* b) ^% b = $0.",
            "VernacStartTheoremProof",
            "b4a6925276c5a787216557fe4e0f48ed5de5a3e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [k E].",
            "VernacExtend",
            "ab28aeb091b7d686b829bfb6a49413c3c4d8c700"
        ],
        [
            "assert (wordToN b <> 0%N) as H.",
            "VernacExtend",
            "9ca593dbd6205ae438a000c099ff6f9225113e18"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro C.",
            "VernacExtend",
            "9344f6761535c238a4afba00a12ae14304164580"
        ],
        [
            "rewrite C in E.",
            "VernacExtend",
            "c77c780855e14998ba4e46c04cb339d21e7465bf"
        ],
        [
            "simpl in E.",
            "VernacExtend",
            "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
        ],
        [
            "symmetry in E.",
            "VernacExtend",
            "250f6924a028ad3460de486d6336ed5d096239c9"
        ],
        [
            "apply Npow2_not_zero in E.",
            "VernacExtend",
            "df52cafb732c346b52fec9fda08aefd3bde850bd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold wmult, wmod, wordBin.",
            "VernacExtend",
            "845f3cae4a518b2011d46e1ff0e6a5e112491ffc"
        ],
        [
            "pose proof (wordToN_bound a).",
            "VernacExtend",
            "3d494b94ba4e4f5e512460538ba302f82966a95d"
        ],
        [
            "remember (wordToN a) as c.",
            "VernacExtend",
            "8e08274d6029bf8eeab06395fec0561754e84caf"
        ],
        [
            "clear Heqc a.",
            "VernacExtend",
            "df45f7d746f8642230c4e780236e76c240830af6"
        ],
        [
            "pose proof (wordToN_bound b).",
            "VernacExtend",
            "08729af943c645e5d26a827087d02ef654defff9"
        ],
        [
            "remember (wordToN b) as d.",
            "VernacExtend",
            "d1ed05d29107e1e2e4cf93fa75ce6160eac31c16"
        ],
        [
            "clear Heqd b.",
            "VernacExtend",
            "2eb7ce10f175251860d03cb54fa6145b313dd94a"
        ],
        [
            "pose proof (N.mod_upper_bound c d H).",
            "VernacExtend",
            "badace59b8274875fcfc684ccff94b1ab35f0d84"
        ],
        [
            "repeat match goal with | |- context [wordToN (NToWord ?sz ?n)] => let k := fresh \"k\" in let E := fresh \"E\" in let B := fresh \"B\" in destruct (wordToN_NToWord sz n) as [ k [E B] ]; rewrite E in *; clear E end.",
            "VernacExtend",
            "5d42f10b13c3d8e493b08acbe0ceb78c635438d1"
        ],
        [
            "rewrite <- E in *.",
            "VernacExtend",
            "a6dc796a9756cb38d18d0cfee3b16112313171f1"
        ],
        [
            "rewrite <- Nminus_mod_idemp_r by assumption.",
            "VernacExtend",
            "5aff89974b661b52f25e250eaf37983a38270c4b"
        ],
        [
            "rewrite (N.mul_comm d k).",
            "VernacExtend",
            "c6ba1bda18f046c4a382464bf3df7e57a533423b"
        ],
        [
            "rewrite N.mul_assoc.",
            "VernacExtend",
            "c7d78c8d2521c9179ca6c46191ed315e7d0ed245"
        ],
        [
            "rewrite N.mod_mul by assumption.",
            "VernacExtend",
            "5f4212d784c34d20d6e568c55974d32767429395"
        ],
        [
            "rewrite N.sub_0_r.",
            "VernacExtend",
            "64465c02f18656eb03a73685b3b400b2a94fd873"
        ],
        [
            "rewrite N.mul_mod by assumption.",
            "VernacExtend",
            "86383d389d0025d51026d07aa49028de58d44b5a"
        ],
        [
            "rewrite N.mod_same by assumption.",
            "VernacExtend",
            "b4747e773b5bb8ce50896b0b245148217c4e955a"
        ],
        [
            "rewrite N.mul_0_r.",
            "VernacExtend",
            "40a6545dad55f1e57aaea7c94f5c15e6754c1c23"
        ],
        [
            "rewrite N.mod_0_l by assumption.",
            "VernacExtend",
            "464dd1be0cb34b22ad621adf0c9960d457c328ba"
        ],
        [
            "apply NToWord_0.",
            "VernacExtend",
            "a56302478a233f442ac370db19a8f6fa507d3e13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_zero_general sz1 sz2: forall (w: word sz1) (b: word sz2), (combine w b = $ 0 -> w = $ 0 /\\ b = $ 0)%word.",
            "VernacStartTheoremProof",
            "9882aec8b8587333fae0bec249532d039e04294b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite wordToNat_combine in *.",
            "VernacExtend",
            "ed948d98691ca4974f0ed5ca5e99f075a87c0c4d"
        ],
        [
            "assert (sth1: wordToNat w = 0) by lia.",
            "VernacExtend",
            "01f6cffaad93b738666c33c4c452e136d2a466c1"
        ],
        [
            "pose proof (pow2_zero sz1) as sth2.",
            "VernacExtend",
            "f9c6d7447b817b42b727bd731502a029777ba967"
        ],
        [
            "assert (sth3: wordToNat b = 0) by nia.",
            "VernacExtend",
            "bc701a1c012b35350996bf6b60afe4d5a3051c93"
        ],
        [
            "split; eapply wordToNat_zero; eauto.",
            "VernacExtend",
            "81c61ff3987e729fa62605aee290c4e485648623"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_lt sz1 sz2: forall (w1 w2: word sz1) (b1 b2: word sz2), (combine w1 b1 < combine w2 b2 -> b1 <= b2)%word.",
            "VernacStartTheoremProof",
            "18ab89758b8e552056204bf500f84dbf5f339e4a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite ?wordToNat_combine in *.",
            "VernacExtend",
            "8ec89269a3aba296170124218f441b8912dc6e57"
        ],
        [
            "pose proof (pow2_zero sz1).",
            "VernacExtend",
            "6b12ca13f3c0939424b8330b59eda9ad6164d4ef"
        ],
        [
            "pose proof (wordToNat_bound w1).",
            "VernacExtend",
            "5b38632818f85e343eea9d9af39f61587dbc46a2"
        ],
        [
            "pose proof (wordToNat_bound w2).",
            "VernacExtend",
            "21247eb80b28cf26e9d8ee6b138a2cc2b157456a"
        ],
        [
            "nia.",
            "VernacExtend",
            "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split2_le sz1 sz2: forall (w1 w2: word (sz1 + sz2)), (w1 <= w2 -> split2 _ _ w1 <= split2 _ _ w2)%word.",
            "VernacStartTheoremProof",
            "155dc4139b80a9268b73d0adbbfa0f912e1d992d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite ?wordToNat_split2.",
            "VernacExtend",
            "36feaa7b6d8ab6a21a2fd3c7be986d2d032b521f"
        ],
        [
            "pose proof (pow2_zero sz1).",
            "VernacExtend",
            "6b12ca13f3c0939424b8330b59eda9ad6164d4ef"
        ],
        [
            "apply Nat.div_le_mono; auto.",
            "VernacExtend",
            "c76dc06a1d31580381ae75716b1d9582637b4b58"
        ],
        [
            "Omega.omega.",
            "VernacExtend",
            "88a52f40a9b9a74ee4d2dc0dec7b27897f413dd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma word1_neq': forall w : word 1, w <> WO~1 -> w = WO~0.",
            "VernacStartTheoremProof",
            "27ce1658c3ab4453c47837d381008bfc80066660"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "shatter_word w.",
            "VernacExtend",
            "dbce1509af20c178980cc8323dbf69956f18867e"
        ],
        [
            "destruct x; auto; tauto.",
            "VernacExtend",
            "5bf99300687e06369e02f333b2a583d1a12c129c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_ge sz1 sz2 (x1 y1: word sz1) (x2 y2: word sz2): (combine x1 x2 <= combine y1 y2 -> x2 < y2 \\/ (x2 = y2 /\\ x1 <= y1))%word.",
            "VernacStartTheoremProof",
            "5fb171b3b6ec32e45b89b778c48ae5c0469bb3f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "rewrite ?wordToNat_combine in *.",
            "VernacExtend",
            "8ec89269a3aba296170124218f441b8912dc6e57"
        ],
        [
            "pose proof (pow2_zero sz1).",
            "VernacExtend",
            "6b12ca13f3c0939424b8330b59eda9ad6164d4ef"
        ],
        [
            "pose proof (pow2_zero sz2).",
            "VernacExtend",
            "5f417e26d61e792a86415404912a8c379966f307"
        ],
        [
            "destruct (weq x2 y2); subst.",
            "VernacExtend",
            "e3d38aeea29eedbc0f21337600f32820d8f995a9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "word_omega.",
            "VernacExtend",
            "39fff2fa618443202cafcd0c4544058a00b548db"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "pose proof (wordToNat_bound x1).",
            "VernacExtend",
            "e1da7948b5884ef6d6895f0060f48b6d23fc4c94"
        ],
        [
            "pose proof (wordToNat_bound y1).",
            "VernacExtend",
            "c8ea95f10739ce849b35a46d784d30b76b98ae16"
        ],
        [
            "pre_word_omega.",
            "VernacExtend",
            "87750207687d70fee73fbba2969538d9372c2792"
        ],
        [
            "nia.",
            "VernacExtend",
            "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Close Scope nat.",
            "VernacOpenCloseScope",
            "3dff96228437b44ed4e923b20e102393483116b0"
        ],
        [
            "Close Scope word_scope.",
            "VernacOpenCloseScope",
            "982568773073843a378740c38d7459ca32090d8f"
        ],
        [
            "Module Notations.",
            "VernacDefineModule",
            "99ed7ae87e248e0c7a446429fdc59e934c519d71"
        ],
        [
            "Export ArithmeticNotations.",
            "VernacImport",
            "0e794f27fbc86eff9794b87733f197c18c310698"
        ],
        [
            "Export BitwiseNotations.",
            "VernacImport",
            "569ebb881dd0b56f78432d2f488b516b29b18100"
        ],
        [
            "Export ComparisonNotations.",
            "VernacImport",
            "24d26960559b650aed066b0c0e7550fb0b5432a0"
        ],
        [
            "Export ConversionNotations.",
            "VernacImport",
            "5f74c3c2973e14827da9903d27c5a00fd38b5bf4"
        ],
        [
            "Export ShiftNotations.",
            "VernacImport",
            "0794156eb7201f22ae7426defcbb3a01b88dcf3e"
        ],
        [
            "End Notations.",
            "VernacEndSegment",
            "8a8845d4e73f291807739ea62d666c99e1b0bbfb"
        ]
    ],
    "proofs": [
        {
            "name": "shatter_word",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "destruct a; eauto.",
                        "VernacExtend",
                        "00f083951347a10010e279bb27981b630eaafae9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shatter_word_S",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros n a; repeat eexists; apply (shatter_word a).",
                        "VernacExtend",
                        "2ddd21fc0c2c276982b13c9927449bddea7993d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shatter_word_0",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros a; apply (shatter_word a).",
                        "VernacExtend",
                        "14cac8b9308f29138237b9368bc3b418259f92f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weq",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "refine (fix weq sz (x : word sz) : forall y : word sz, {x = y} + {x <> y} := match x in word sz return forall y : word sz, {x = y} + {x <> y} with | WO => fun _ => left _ _ | WS b x' => fun y => if bool_dec b (whd y) then if weq _ x' (wtl y) then left _ _ else right _ _ else right _ _ end); clear weq.",
                        "VernacExtend",
                        "a575905b0886cf9eff2ef493f0185f5f5407dfd6"
                    ]
                },
                {
                    "command": [
                        "abstract (symmetry; apply shatter_word_0).",
                        "VernacExtend",
                        "5ac83f729a5dc8399876d661219cec14052df340"
                    ]
                },
                {
                    "command": [
                        "abstract (subst; symmetry; apply (shatter_word (n:=S _) _)).",
                        "VernacExtend",
                        "4acce6c1e599ed48e330ac73c8c80e32c5d9807a"
                    ]
                },
                {
                    "command": [
                        "let y' := y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; intros; eauto using inj_pair2_eq_dec, eq_nat_dec).",
                        "VernacExtend",
                        "96859e333d9a31fe185171572a53d9915d8f126a"
                    ]
                },
                {
                    "command": [
                        "let y' := y in abstract (rewrite (shatter_word y'); simpl; intro H; injection H; auto).",
                        "VernacExtend",
                        "b0a97b1e6d84e4c225bce3b9717ccf3852756dec"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "wlt_dec",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "refine (fun sz l r => match N.compare (wordToN l) (wordToN r) as k return N.compare (wordToN l) (wordToN r) = k -> _ with | Lt => fun pf => left _ _ | _ => fun pf => right _ _ end (refl_equal _)); abstract congruence.",
                        "VernacExtend",
                        "7740cf1ab74ef56b5d54d5c0e47198fe65c92a5e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "wslt_dec",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "refine (fun sz l r => match Z.compare (wordToZ l) (wordToZ r) as c return Z.compare (wordToZ l) (wordToZ r) = c -> _ with | Lt => fun pf => left _ _ | _ => fun pf => right _ _ end (refl_equal _)); abstract congruence.",
                        "VernacExtend",
                        "6f2acbb0300573d0d7f66e4f0e94009606bdbf9b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sz_minus_nshift",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nshift_plus_nkeep",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "refine (split1 sz n _).",
                        "VernacExtend",
                        "ba0f98657af017c212a212bd5cf86eea0c5fae35"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "exact (combine (wzero n) w).",
                        "VernacExtend",
                        "8e7404571691a171fb76d5c48f9f1d09d2b4bd9e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "wrshift",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "refine (split2 n sz _).",
                        "VernacExtend",
                        "5f5612e72554f90ac11d46a295f29f531d31a9ad"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "exact (combine w (wzero n)).",
                        "VernacExtend",
                        "5da17d588a6eed56ac0284b940e8dc84adcb59b9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "wrshifta",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "refine (split2 n sz _).",
                        "VernacExtend",
                        "5f5612e72554f90ac11d46a295f29f531d31a9ad"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "exact (sext w _).",
                        "VernacExtend",
                        "06c39ad66b61a7541027350a87e52177c1cef8ce"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_word_offset",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct Heq.",
                        "VernacExtend",
                        "3b8e12e11cf958dd231fcb030bea62009fc87c27"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec (eq_rect_word_offset_helper _ _ offset eq_refl) eq_refl).",
                        "VernacExtend",
                        "49d29e505483d577362812aa1fc165f64935fe33"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_word_mult",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct Heq.",
                        "VernacExtend",
                        "3b8e12e11cf958dd231fcb030bea62009fc87c27"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec (eq_rect_word_mult_helper _ _ scale eq_refl) eq_refl).",
                        "VernacExtend",
                        "dc718000de5c31cdbf7e84984c84fc86b8ae2195"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_word_match",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "whd_match",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_rect_word_match.",
                        "VernacExtend",
                        "5a06cbd9c403f74dcaaf26d4905b81dc3a820e68"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "remember Heq as Heq'.",
                        "VernacExtend",
                        "812144796aaa075fb1be0c64a1077958e6d347e6"
                    ]
                },
                {
                    "command": [
                        "clear HeqHeq'.",
                        "VernacExtend",
                        "1537528a26d1ddba36cd2e5e114fde548e9ffde0"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq'.",
                        "VernacExtend",
                        "55ac3ca05d6ef9e371f80aa83839e81ae58f8691"
                    ]
                },
                {
                    "command": [
                        "replace (n') with (n) by omega.",
                        "VernacExtend",
                        "fcb2d425aaffdcadbe610568ea6938db4acbf929"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wtl_match",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[match ?pf with refl_equal => _ end] ] => generalize pf end.",
                        "VernacExtend",
                        "c339d6270fdc4e0a9e7e1548ced5601426baa1f7"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w; clear.",
                        "VernacExtend",
                        "032b9133c0d8ba7ec08f5366da18e7acbb8309a6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize Heq Heq'.",
                        "VernacExtend",
                        "2303cd4dc8fa71242ae0adcfb00c3a051d36c13c"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq' (refl_equal _)).",
                        "VernacExtend",
                        "ee3e9cf96ca582ea2cf6606d53df6ac6d5dbabea"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq0 (refl_equal _)).",
                        "VernacExtend",
                        "4c43d3a71b09e309883bdb56f4f97e1eb39355dd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word0",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wordToNat'",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "induction w.",
                        "VernacExtend",
                        "00a39f78c1958c5075f30e53ba2c016aabba0f9e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold wordToNat.",
                        "VernacExtend",
                        "4bb4a488c7d297d2d797b404d6ead07a604d0ef6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_wordToNat",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "induction w as [|b]; rewrite wordToNat_wordToNat'; intuition; f_equal; unfold natToWord, wordToNat'; fold natToWord; fold wordToNat'; destruct b; f_equal; autorewrite with div2; intuition.",
                        "VernacExtend",
                        "23106098644145d34c7ac77b880da0c542eb307b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "roundTrip_0",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; intuition.",
                        "VernacExtend",
                        "73389c09d9fb7a1a50f087f9cf44d848ce646b41"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord'",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "induction sz as [|sz IHsz]; simpl; intro w; intuition; repeat rewrite untimes2.",
                        "VernacExtend",
                        "b10f0df1928ff0b4e64247f1980505eda2ce3e2e"
                    ]
                },
                {
                    "command": [
                        "exists w; intuition.",
                        "VernacExtend",
                        "9c98da04d7b1a42e62676f2d72efaabd729a8036"
                    ]
                },
                {
                    "command": [
                        "case_eq (mod2 w); intro Hmw.",
                        "VernacExtend",
                        "385f0112354348d8a2a3973ea1d36213e0c0e861"
                    ]
                },
                {
                    "command": [
                        "specialize (IHsz (div2 w)); firstorder.",
                        "VernacExtend",
                        "1a8f711889b011efc018be69e16d70a4bb127c00"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wordToNat' in *.",
                        "VernacExtend",
                        "ecbeac4aecd539f9d3ed09fa9c8d831f0328c081"
                    ]
                },
                {
                    "command": [
                        "let x' := match goal with H : _ + ?x * _ = _ |- _ => x end in rename x' into x.",
                        "VernacExtend",
                        "5ef5b98122f52214a7bc0fc968df14d92eccb33b"
                    ]
                },
                {
                    "command": [
                        "exists x; intuition.",
                        "VernacExtend",
                        "5265b0752ff2ed4bffe4b91b951e6ea4268a5bda"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm x 2).",
                        "VernacExtend",
                        "d2921fb8f4befe7fd50e9765456717b57aa0f1cb"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "simpl mult at 1.",
                        "VernacExtend",
                        "22e8291e572e62d9ca0c95523f5356b94b1cbcd9"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_Sn_m (2 * wordToNat' (natToWord sz (div2 w)))).",
                        "VernacExtend",
                        "81f7ba1496b17cbf0a0abf970974c2df6bd81f14"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_l.",
                        "VernacExtend",
                        "cd8d003acfa92ac557996591020b39f7404e807a"
                    ]
                },
                {
                    "command": [
                        "rewrite H; clear H.",
                        "VernacExtend",
                        "a60de8fe6903e17bd74acece0951cbb10e6ef842"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply div2_odd; auto.",
                        "VernacExtend",
                        "672bc4e5c0ace242f14c1aff5ce5b8748d3240b6"
                    ]
                },
                {
                    "command": [
                        "specialize (IHsz (div2 w)); firstorder.",
                        "VernacExtend",
                        "1a8f711889b011efc018be69e16d70a4bb127c00"
                    ]
                },
                {
                    "command": [
                        "let x' := match goal with H : _ + ?x * _ = _ |- _ => x end in rename x' into x.",
                        "VernacExtend",
                        "5ef5b98122f52214a7bc0fc968df14d92eccb33b"
                    ]
                },
                {
                    "command": [
                        "exists x; intuition.",
                        "VernacExtend",
                        "5265b0752ff2ed4bffe4b91b951e6ea4268a5bda"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm x 2).",
                        "VernacExtend",
                        "d2921fb8f4befe7fd50e9765456717b57aa0f1cb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_l.",
                        "VernacExtend",
                        "cd8d003acfa92ac557996591020b39f7404e807a"
                    ]
                },
                {
                    "command": [
                        "match goal with H : _ |- _ => rewrite H; clear H end.",
                        "VernacExtend",
                        "7111cebf93d66fbc7af50b1846ba09e2e945c1d8"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply div2_even; auto.",
                        "VernacExtend",
                        "7994a5df130cde0507b052b440a1c83e45c67042"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros sz w; destruct (wordToNat_natToWord' sz w) as [k]; exists k; intuition.",
                        "VernacExtend",
                        "bd4945b1c620df4c14196618f402e2cae59910ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord_2",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_natToWord sz w).",
                        "VernacExtend",
                        "14ce217364111197dfba9e9f15d35493d0c97fe7"
                    ]
                },
                {
                    "command": [
                        "destruct H0; destruct H0.",
                        "VernacExtend",
                        "21d5a3dd09b17117201ee446055b76e72487326a"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in *; clear H0.",
                        "VernacExtend",
                        "9a299ddcfa3f1ae3d6d642f1a77f90341d0457ad"
                    ]
                },
                {
                    "command": [
                        "destruct x; try omega.",
                        "VernacExtend",
                        "c25aa8c1b2bd42f9ea820f653f9b2647d234156b"
                    ]
                },
                {
                    "command": [
                        "exfalso; simpl in H1.",
                        "VernacExtend",
                        "346a1d788a2af25833d9009fd1f70c652baf722b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Lt.le_lt_trans _ _ _ H1 H).",
                        "VernacExtend",
                        "1669c10e67188aaae2aa06988f21baf8f20dc505"
                    ]
                },
                {
                    "command": [
                        "pose proof (Plus.le_plus_l (pow2 sz) (x * pow2 sz)).",
                        "VernacExtend",
                        "75a8e73cb7b803b8302a61e89dc3c76d80e3f331"
                    ]
                },
                {
                    "command": [
                        "pose proof (Lt.le_lt_trans _ _ _ H2 H0).",
                        "VernacExtend",
                        "870212939222e91a54afca27200168e3956fa7b3"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_times2",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord.",
                        "VernacExtend",
                        "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply mod2_double.",
                        "VernacExtend",
                        "fa5cd794e13c3033b437966ded19ffe4e55e6da4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_double.",
                        "VernacExtend",
                        "7e84b499d7e1354df8c54c84bcf9fcdb1e34ca64"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "WS_neq",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros b1 b2 sz w1 w2 ? H0; intuition.",
                        "VernacExtend",
                        "0c67306b7d5ecbfc3ebf1560e9ee326121ebbeb1"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (@whd _)) in H0; tauto.",
                        "VernacExtend",
                        "8cba6c21f7a444a1adbb0e5f8f10aebb6b6285da"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (@wtl _)) in H0; tauto.",
                        "VernacExtend",
                        "77863ddca9b256eea64cd7a99fd0311643c428d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weqb_true_iff",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "induction x as [|b ? x IHx]; simpl; intros y.",
                        "VernacExtend",
                        "c6abd2da1ecca4f6a5a098f2757444c5e4a2c7ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word y) in *.",
                        "VernacExtend",
                        "abe3aa95ca7a6cca52f06319242ad1303e4563e9"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "case_eq (eqb b (whd y)); intros H.",
                        "VernacExtend",
                        "6743b40258afe9908f5dbb61fb40ad318b6675fd"
                    ]
                },
                {
                    "command": [
                        "case_eq (weqb x (wtl y)); intros H0.",
                        "VernacExtend",
                        "d0de69627a2846fe597df7016b8dff39c9658d1c"
                    ]
                },
                {
                    "command": [
                        "split; auto; intros.",
                        "VernacExtend",
                        "071b2d5320c62b0d7036f5e3029996f2613ea63b"
                    ]
                },
                {
                    "command": [
                        "rewrite eqb_true_iff in H.",
                        "VernacExtend",
                        "db8d41ac70aeeb9ee18de22b61ed64d223c4bcd1"
                    ]
                },
                {
                    "command": [
                        "f_equal; eauto.",
                        "VernacExtend",
                        "0aaae116840c77af05ab473518cd728dcb792af6"
                    ]
                },
                {
                    "command": [
                        "eapply IHx; eauto.",
                        "VernacExtend",
                        "66aba64d0184acaca89da36f38b71030a7f406d6"
                    ]
                },
                {
                    "command": [
                        "split; intros H1; try congruence.",
                        "VernacExtend",
                        "37ef0ba1f90b571eaf375ed49f80419b71108918"
                    ]
                },
                {
                    "command": [
                        "inversion H1; clear H1; subst.",
                        "VernacExtend",
                        "dc7c0a9281e0286a6c40198265c2b895af17e7ac"
                    ]
                },
                {
                    "command": [
                        "eapply inj_pair2_eq_dec in H4.",
                        "VernacExtend",
                        "440e4df99b96b1e1b0376e6ec4ae1da1e8739e8e"
                    ]
                },
                {
                    "command": [
                        "eapply IHx in H4.",
                        "VernacExtend",
                        "69869ca7a42fd37237110fc2bf0d568b1c1c2497"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "eapply Peano_dec.eq_nat_dec.",
                        "VernacExtend",
                        "c462a3e6cf381cd89b505e5df1b002d76bbd5015"
                    ]
                },
                {
                    "command": [
                        "split; intros; try congruence.",
                        "VernacExtend",
                        "7ec554827c1515bbec6752aff4a6955b6dd01fb8"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "apply eqb_false_iff in H.",
                        "VernacExtend",
                        "66e2423530aefff85f9daa7797db4465f3eca552"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_split",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "induction sz1; shatterer.",
                        "VernacExtend",
                        "ecb0c1daa8d071c5c120f56b19333162bfa61286"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_combine",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "induction sz1; shatterer.",
                        "VernacExtend",
                        "ecb0c1daa8d071c5c120f56b19333162bfa61286"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_combine",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "induction sz1; shatterer.",
                        "VernacExtend",
                        "ecb0c1daa8d071c5c120f56b19333162bfa61286"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_assoc",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "induction w1 as [|?? w1 IHw1]; simpl; intros n2 n3 w2 w3 Heq; intuition.",
                        "VernacExtend",
                        "4ca519763c29c09ab06cf25508ef78d9068779a4"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)); reflexivity.",
                        "VernacExtend",
                        "160f1aceb926fc10596936adc172c1a5179f73d8"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHw1 _ _ _ _ (plus_assoc _ _ _)); clear IHw1.",
                        "VernacExtend",
                        "b9368d0d3755753caa5f1c9aa2d4a38d76762b2b"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[match ?pf with refl_equal => _ end] ] => generalize pf end.",
                        "VernacExtend",
                        "c339d6270fdc4e0a9e7e1548ced5601426baa1f7"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (combine w1 (combine w2 w3)).",
                        "VernacExtend",
                        "d65a8529a291e8857e33577d072bc2e3672a63db"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_assoc; intros w Heq0 e.",
                        "VernacExtend",
                        "2d965d84ceb86aaaeff8ab5e08f2e487aca07ae0"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec e (refl_equal _)).",
                        "VernacExtend",
                        "d764646eada1ef8bcbae9ee1a897882dab8b9f0c"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq0 (refl_equal _)).",
                        "VernacExtend",
                        "4c43d3a71b09e309883bdb56f4f97e1eb39355dd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_iter",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "induction n1; simpl; intuition.",
                        "VernacExtend",
                        "d5f2b66b08a5ecfc0d2181ac124f57ce22ea2ad6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply whd_match.",
                        "VernacExtend",
                        "a80f65e088f4be665bb72f461f355045d8b9154b"
                    ]
                },
                {
                    "command": [
                        "assert (n1 + n2 + n3 = n1 + (n2 + n3)) as Heq' by omega.",
                        "VernacExtend",
                        "fa0399220dabf588877c1428636f80aafa59021b"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn1 with (Heq:=Heq').",
                        "VernacExtend",
                        "5e5cfd14326bbf1b567e1bc188ab4c4e996c0f38"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply wtl_match.",
                        "VernacExtend",
                        "3f9462ecd705af72d8b8ff1b24beaf43fa08e445"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_iter",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "induction n1 as [|n1 IHn1]; simpl; intros n2 n3 Heq w; intuition.",
                        "VernacExtend",
                        "0a377b2f16d666a02fe99c1d0491ae2415471e5f"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)); reflexivity.",
                        "VernacExtend",
                        "160f1aceb926fc10596936adc172c1a5179f73d8"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHn1 _ _ (plus_assoc _ _ _)).",
                        "VernacExtend",
                        "234e28bf40366d881fd039847982c8d70cc5b213"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply wtl_match.",
                        "VernacExtend",
                        "3f9462ecd705af72d8b8ff1b24beaf43fa08e445"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_split2",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "induction n1; simpl; intros.",
                        "VernacExtend",
                        "ade29ec7cb3de8335305ff27a24c4e53d7f64522"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)).",
                        "VernacExtend",
                        "84ecc87d9c01d4ca432ec5aa5e5157536c402aba"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w).",
                        "VernacExtend",
                        "d0a7048396156cb8e9b6bd37d78a6a1eaaf01429"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (n1 + (n2 + n3) = n1 + n2 + n3) as Heq' by omega.",
                        "VernacExtend",
                        "17f51547b3687e057122e2486c2c65a58cf9577a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wtl_match with (Heq':=Heq').",
                        "VernacExtend",
                        "95c2f2733fc120a5b9ace3b929527bd8e9acc93f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn1.",
                        "VernacExtend",
                        "abfe7ccd7face4d03406ae54d424e1133bf2bc86"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_split1",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "induction n1; simpl; intros.",
                        "VernacExtend",
                        "ade29ec7cb3de8335305ff27a24c4e53d7f64522"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)).",
                        "VernacExtend",
                        "84ecc87d9c01d4ca432ec5aa5e5157536c402aba"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w).",
                        "VernacExtend",
                        "d0a7048396156cb8e9b6bd37d78a6a1eaaf01429"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (n1 + n2 + n3 = n1 + (n2 + n3)) as Heq' by omega.",
                        "VernacExtend",
                        "fa0399220dabf588877c1428636f80aafa59021b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wtl_match with (Heq':=Heq').",
                        "VernacExtend",
                        "95c2f2733fc120a5b9ace3b929527bd8e9acc93f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn1.",
                        "VernacExtend",
                        "abfe7ccd7face4d03406ae54d424e1133bf2bc86"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_0_n",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace w with WO.",
                        "VernacExtend",
                        "60c4f447bf54f932f7caa17ee151b31fa3f08a32"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite word0; auto.",
                        "VernacExtend",
                        "aea4b2fec4bdb8c1ca7792135f35e5a733d42689"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "WS_eq_rect",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "destruct n; intros; subst; eq_rect_simpl; auto.",
                        "VernacExtend",
                        "40ca0394aa29c96b39d27e93e5567b60f43fc044"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "whd_eq_rect",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize Heq.",
                        "VernacExtend",
                        "3c2369a3a4536041709218c74a096214582a1306"
                    ]
                },
                {
                    "command": [
                        "replace (n + 0) with n by omega.",
                        "VernacExtend",
                        "43af792abdb54c76b496331e4c251b406d51e5c5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wtl_eq_rect",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq'; simpl; intros.",
                        "VernacExtend",
                        "f7cdbe28a8c2347e979ab74dd9f40e40d766ef68"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "whd_eq_rect_mul",
            "line_nb": 420,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize Heq.",
                        "VernacExtend",
                        "3c2369a3a4536041709218c74a096214582a1306"
                    ]
                },
                {
                    "command": [
                        "replace (n * 1) with n by auto.",
                        "VernacExtend",
                        "c799b52a2333263dabd99f365a385b9d6b34e9e0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wtl_eq_rect_mul",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize Heq.",
                        "VernacExtend",
                        "3c2369a3a4536041709218c74a096214582a1306"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq'.",
                        "VernacExtend",
                        "0c2901409f5bc9b450cb6e95f2d235a1f50f700d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_0",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_end",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "induction n1 as [|n1 IHn1]; simpl; intros n2 n3 Heq w.",
                        "VernacExtend",
                        "35c5a6fa71bd42f87be3a1c13a204ce084f45fb4"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq (refl_equal _)).",
                        "VernacExtend",
                        "84ecc87d9c01d4ca432ec5aa5e5157536c402aba"
                    ]
                },
                {
                    "command": [
                        "apply combine_split.",
                        "VernacExtend",
                        "d0ccd5a6c55c97f3310115aabc2049862d3f1bc1"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w) in *.",
                        "VernacExtend",
                        "7cd7af3cd3017e274dd1737309084bc92ed27b89"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eapply trans_eq; [ | apply IHn1 with (Heq := plus_assoc _ _ _) ]; clear IHn1.",
                        "VernacExtend",
                        "d5245e79331cd2e9e980a37ddddaf3e75a858e66"
                    ]
                },
                {
                    "command": [
                        "repeat f_equal.",
                        "VernacExtend",
                        "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[match ?pf with refl_equal => _ end] ] => generalize pf end.",
                        "VernacExtend",
                        "c339d6270fdc4e0a9e7e1548ced5601426baa1f7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_assoc.",
                        "VernacExtend",
                        "3bacd64a87549657845fdfa6170cde8d727d12ef"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec e (refl_equal _)).",
                        "VernacExtend",
                        "d764646eada1ef8bcbae9ee1a897882dab8b9f0c"
                    ]
                },
                {
                    "command": [
                        "rewrite (UIP_dec eq_nat_dec Heq0 (refl_equal _)).",
                        "VernacExtend",
                        "4c43d3a71b09e309883bdb56f4f97e1eb39355dd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_combine",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (plus_reg_l n2' n2 n1 Heq); intros.",
                        "VernacExtend",
                        "b47671b7cbbe60737a3287e74311e66e8f543b92"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w2.",
                        "VernacExtend",
                        "f3247d591b5b338ed303552b744dbfacfad48dcd"
                    ]
                },
                {
                    "command": [
                        "rewrite e; intros.",
                        "VernacExtend",
                        "9cae54c3b7be5376176f295ef7b83b77d47f36a0"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split2_helper",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split2",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_rect_split2_helper n1 Heq); intros.",
                        "VernacExtend",
                        "113c146a2e5a5172dbaa42785d1f12c49ebb2a35"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "assert (n2' = n2) as H' by omega.",
                        "VernacExtend",
                        "ab6ce2819dc8bbc38d62af60ae91401d7cc25962"
                    ]
                },
                {
                    "command": [
                        "generalize dependent e.",
                        "VernacExtend",
                        "05fb6399e464307f7f4e729f62b091cb74c27cfe"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; intros.",
                        "VernacExtend",
                        "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split2_eq2",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H' := Heq).",
                        "VernacExtend",
                        "87f83ed372978da8f237637b0696f5b7bda40637"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq2.",
                        "VernacExtend",
                        "5302c0669bbd2012bd9d43c58088c45ecb3a89eb"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; intros.",
                        "VernacExtend",
                        "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split2_eq1",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (n1 = n1') as H' by omega.",
                        "VernacExtend",
                        "67508f7c7c1c2fde61ef67bda1ed64c565aa69af"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; intros.",
                        "VernacExtend",
                        "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_split_eq_rect2",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (n2 = n2') by omega.",
                        "VernacExtend",
                        "2ed05ba0e9f57ed0e6c1c71444fd99397c822f03"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; intros.",
                        "VernacExtend",
                        "c66ed4cb13e49cc4bc575260a36827acf2460d43"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
                    ]
                },
                {
                    "command": [
                        "apply combine_split.",
                        "VernacExtend",
                        "d0ccd5a6c55c97f3310115aabc2049862d3f1bc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split1_helper",
            "line_nb": 528,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split1_eq2_helper",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split1",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_rect_split1_helper n2 Heq); intros.",
                        "VernacExtend",
                        "96d6c401c974df119770cfdf13eea85d34f37773"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "assert (n1' = n1) as H' by omega.",
                        "VernacExtend",
                        "cf96cb3e4ed5879a285a6900044073f9cd5e6809"
                    ]
                },
                {
                    "command": [
                        "generalize dependent e.",
                        "VernacExtend",
                        "05fb6399e464307f7f4e729f62b091cb74c27cfe"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; intros.",
                        "VernacExtend",
                        "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split1_eq1",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq1.",
                        "VernacExtend",
                        "9f175caffb21ae882eabbf189e293585b4b8383b"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq; intros.",
                        "VernacExtend",
                        "d2fdddd036e093db61290689ded9114071c3a7a2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e4ef91c8ae69e2e3149c3a8dbb1b624d99cf83ff"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_eq_rect_eq1_helper",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_eq_rect_eq1",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "intros a a' b H.",
                        "VernacExtend",
                        "ac1d9bbed88100e48edf8e75f3a6a7c416fc8159"
                    ]
                },
                {
                    "command": [
                        "subst a'; intros; eq_rect_simpl; auto.",
                        "VernacExtend",
                        "39926a1279fc32171f388ddd6e56aa98102fdec2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_split1_eq2",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (n2 = n2') as H' by omega.",
                        "VernacExtend",
                        "b98d9ae43a921f2dca70d983702c823f027e59d9"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "generalize dependent Heq.",
                        "VernacExtend",
                        "eef2b9321cb5ab2930302a1389a84c51a5ecf32d"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; intros.",
                        "VernacExtend",
                        "e5873ac5bec98bf45ee573a796c5c42c511d64c4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "e90072e7f98db8c2f171b736d0ed5fb4e2530aca"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_combine_dist_helper1",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "apply Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "a00a2f4a37571ba5bb9e1181dc65208b1ec817dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_combine_dist_helper2",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "5566691f01c0d520441c2e356cb8eb14e7f932f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_combine_dist",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst d.",
                        "VernacExtend",
                        "e8dba9bc12dc5275eeee88dd88c6c51b887d332a"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_split.",
                        "VernacExtend",
                        "990e1a0ee6918789baa80ad4e1863b16dc6e236c"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "generalize dependent H2.",
                        "VernacExtend",
                        "c7ac0604a164cfaff40656704aeed27281644463"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl; auto.",
                        "VernacExtend",
                        "b097303733b0a33e715b23246a0d9032edf3f966"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_dist",
            "line_nb": 590,
            "steps": [
                {
                    "command": [
                        "intros a b c H.",
                        "VernacExtend",
                        "e3f356cea74ce96065a7b57ffbf7be590e8d7db1"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_rev",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_zero",
            "line_nb": 600,
            "steps": [
                {
                    "command": [
                        "induction sz1; auto; simpl; intros.",
                        "VernacExtend",
                        "a5ecbab64e636df10d5d27361dd64468c27f8c80"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_zero",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "induction sz1; auto.",
                        "VernacExtend",
                        "625d41ba593fec1e9985e34136c21e3f0ea93560"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_inj",
            "line_nb": 608,
            "steps": [
                {
                    "command": [
                        "induction sz1; simpl; intros.",
                        "VernacExtend",
                        "5bda912832677eb6fd52883de1edee0d03fe3716"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (word0 a) in *.",
                        "VernacExtend",
                        "7fd695e090a62798acbf93ebb9a764fe6bb4a8ff"
                    ]
                },
                {
                    "command": [
                        "rewrite (word0 c) in *.",
                        "VernacExtend",
                        "29bc5d0c074f1e34e527056203f1f748e91efa1e"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word a) in *.",
                        "VernacExtend",
                        "bc9e327fab596389f661eab00b1de6946330fdd0"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word c) in *.",
                        "VernacExtend",
                        "8cc9518b21780cb6708a1d670fe0eabe8b8a09ff"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "apply (inj_pair2_eq_dec _ eq_nat_dec) in H2.",
                        "VernacExtend",
                        "f589ba6e44b6a70c23ec1040d92bb67300fb2bde"
                    ]
                },
                {
                    "command": [
                        "destruct (IHsz1 _ _ _ _ _ H2).",
                        "VernacExtend",
                        "0a5c82f94fd3fe6b95bcb33f449b1f173e5c684d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_wzero",
            "line_nb": 625,
            "steps": [
                {
                    "command": [
                        "induction sz1; auto.",
                        "VernacExtend",
                        "625d41ba593fec1e9985e34136c21e3f0ea93560"
                    ]
                },
                {
                    "command": [
                        "unfold wzero in *.",
                        "VernacExtend",
                        "5f87248675ee5f0c0a1e123968016fd5c18baff3"
                    ]
                },
                {
                    "command": [
                        "intros; simpl; f_equal; auto.",
                        "VernacExtend",
                        "630649ecb99331eb6164832a1e91e77c39188d36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_wones",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "induction sz1; auto.",
                        "VernacExtend",
                        "625d41ba593fec1e9985e34136c21e3f0ea93560"
                    ]
                },
                {
                    "command": [
                        "intros; simpl; f_equal; auto.",
                        "VernacExtend",
                        "630649ecb99331eb6164832a1e91e77c39188d36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_nat",
            "line_nb": 634,
            "steps": [
                {
                    "command": [
                        "induction w; intuition.",
                        "VernacExtend",
                        "46681a2c386e090b0dae655b312b4d5578894077"
                    ]
                },
                {
                    "command": [
                        "destruct b; unfold wordToN, wordToNat; fold wordToN; fold wordToNat.",
                        "VernacExtend",
                        "9f7c400207508c3686a2c76599586e4acf576090"
                    ]
                },
                {
                    "command": [
                        "rewrite N_of_S.",
                        "VernacExtend",
                        "8573d0a916f723a563b4e0d4174d50871e76aca1"
                    ]
                },
                {
                    "command": [
                        "rewrite N_of_mult.",
                        "VernacExtend",
                        "5f994441446d16cdffdab909a8a622840de3c142"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHw.",
                        "VernacExtend",
                        "d1ccfed6bfc9d2e1fe307831ec6897cfc05a798d"
                    ]
                },
                {
                    "command": [
                        "rewrite Nmult_comm.",
                        "VernacExtend",
                        "8ca75f5ebfe5850130695c4b867ee44a8f247681"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite N_of_mult.",
                        "VernacExtend",
                        "5f994441446d16cdffdab909a8a622840de3c142"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHw.",
                        "VernacExtend",
                        "d1ccfed6bfc9d2e1fe307831ec6897cfc05a798d"
                    ]
                },
                {
                    "command": [
                        "rewrite Nmult_comm.",
                        "VernacExtend",
                        "8ca75f5ebfe5850130695c4b867ee44a8f247681"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_to_nat",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "rewrite Nnat.Nat2N.id.",
                        "VernacExtend",
                        "ad09c0668c750a398aae16300d1da16cd4f9358d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod2_S",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "induction n as [n] using strong; intros.",
                        "VernacExtend",
                        "f3c1adabc0cb8efff2fc712391e9c33c909d3a2e"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl in *.",
                        "VernacExtend",
                        "f8eee26b639ce04d1ada21443f84607b09037299"
                    ]
                },
                {
                    "command": [
                        "elimtype False; omega.",
                        "VernacExtend",
                        "528b630f62bf971d3e6394d60b9ec83d551b6f98"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl in *; auto.",
                        "VernacExtend",
                        "0a573d6292da33edc97b77b12297d8f66fbe0849"
                    ]
                },
                {
                    "command": [
                        "destruct k as [|k]; simpl in *.",
                        "VernacExtend",
                        "a3c37fa9eb230a98aeb1d83edfce01e11dc57f1d"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply H with k; auto.",
                        "VernacExtend",
                        "068195622768acb8a35eb2447309f33090487ad9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero'_def",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "unfold wzero; induction sz; simpl; intuition.",
                        "VernacExtend",
                        "690b49ac58eb631d7baac3c890d60a07bdbcf58b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "posToWord_nat",
            "line_nb": 667,
            "steps": [
                {
                    "command": [
                        "induction p as [ p IHp | p IHp | ]; destruct sz; simpl; intuition; f_equal; try rewrite wzero'_def in *.",
                        "VernacExtend",
                        "7939e6fedfc28e443346cbca30a96a0bb264f498"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6.",
                        "VernacExtend",
                        "de7a610f888c22651fe638ebfde6e863c2bf13ce"
                    ]
                },
                {
                    "command": [
                        "destruct (ZL4 p) as [x Heq]; rewrite Heq; simpl.",
                        "VernacExtend",
                        "1bed8ee6c2f5dc9ef256ca96176a93fe7ac31af6"
                    ]
                },
                {
                    "command": [
                        "replace (x + S x) with (S (2 * x)) by omega.",
                        "VernacExtend",
                        "65d762051f4e57822d6e8d794ba59fc51176ac2c"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply mod2_S_double.",
                        "VernacExtend",
                        "a94223f182316d81e62095cde2aabd4b9bf522b5"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6.",
                        "VernacExtend",
                        "de7a610f888c22651fe638ebfde6e863c2bf13ce"
                    ]
                },
                {
                    "command": [
                        "destruct (nat_of_P p); simpl; intuition.",
                        "VernacExtend",
                        "b7ac1e1198eb4a7070add902511521255612d19a"
                    ]
                },
                {
                    "command": [
                        "replace (n + S n) with (S (2 * n)) by omega.",
                        "VernacExtend",
                        "e5522a38d87998fe116102528501f90c3054cf83"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_S_double; auto.",
                        "VernacExtend",
                        "90f190349730943670a11fbc36cb7f8f1fecf0f7"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P; simpl.",
                        "VernacExtend",
                        "6fc4a069e63358338cf7f7965be32be1e7657440"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6.",
                        "VernacExtend",
                        "de7a610f888c22651fe638ebfde6e863c2bf13ce"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P p + nat_of_P p) with (2 * nat_of_P p) by omega.",
                        "VernacExtend",
                        "ce61ebe33c7c62933295a7c8b3165d3c9eae4786"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply mod2_double.",
                        "VernacExtend",
                        "6722b77888faf5fc56392ea864a86d6ff4038334"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P; simpl.",
                        "VernacExtend",
                        "6fc4a069e63358338cf7f7965be32be1e7657440"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6.",
                        "VernacExtend",
                        "de7a610f888c22651fe638ebfde6e863c2bf13ce"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P p + nat_of_P p) with (2 * nat_of_P p) by omega.",
                        "VernacExtend",
                        "ce61ebe33c7c62933295a7c8b3165d3c9eae4786"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_double.",
                        "VernacExtend",
                        "7e84b499d7e1354df8c54c84bcf9fcdb1e34ca64"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "posToWord_sz0",
            "line_nb": 690,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold posToWord.",
                        "VernacExtend",
                        "5198da205a7d193b027d9fa4366283a217f2d3be"
                    ]
                },
                {
                    "command": [
                        "destruct p; reflexivity.",
                        "VernacExtend",
                        "df120dd8b9b654682ce0d9f597aa32f128d53706"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NToWord_nat",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "destruct n; simpl; intuition; try rewrite wzero'_def in *.",
                        "VernacExtend",
                        "707584080a1383c99e17f2c4e924de5d8bb10585"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply posToWord_nat.",
                        "VernacExtend",
                        "308175a558470bdcdc6ff67192c6e67c6160b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_alt",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "unfold wplusN, wplus, wordBinN, wordBin; intros.",
                        "VernacExtend",
                        "7e5b73bc77b6dfb004fb9171a31804da10ef741b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat; repeat rewrite NToWord_nat.",
                        "VernacExtend",
                        "e1694c8d0fae4c015020865b974c7bafd50b2bdb"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_Nplus.",
                        "VernacExtend",
                        "1e9855ea5abf27539d6d070cdcae9fd1accb898e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite nat_of_N_of_nat.",
                        "VernacExtend",
                        "21b2f147cfbe288ac56143b8db2103fe7465de98"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_alt",
            "line_nb": 707,
            "steps": [
                {
                    "command": [
                        "unfold wmultN, wmult, wordBinN, wordBin; intros.",
                        "VernacExtend",
                        "a0efe845e8f6838e8d8c7bb2e158e9bc77badd19"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat; repeat rewrite NToWord_nat.",
                        "VernacExtend",
                        "e1694c8d0fae4c015020865b974c7bafd50b2bdb"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_Nmult.",
                        "VernacExtend",
                        "8c755c1b306b3f3e8ff845c39cf5d9fcb6dcea96"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite nat_of_N_of_nat.",
                        "VernacExtend",
                        "21b2f147cfbe288ac56143b8db2103fe7465de98"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_alt",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "unfold wnegN, wneg; intros.",
                        "VernacExtend",
                        "2879b86dab26cd16e3a7994794879ba99b186f4f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat; repeat rewrite NToWord_nat.",
                        "VernacExtend",
                        "e1694c8d0fae4c015020865b974c7bafd50b2bdb"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_Nminus.",
                        "VernacExtend",
                        "95ffe10a8cf8c7bfe03f2545d22d328b7d52fcb7"
                    ]
                },
                {
                    "command": [
                        "do 2 f_equal.",
                        "VernacExtend",
                        "74f83f01290e37153981e2e772bf9a265f1f15d0"
                    ]
                },
                {
                    "command": [
                        "apply Npow2_nat.",
                        "VernacExtend",
                        "2fd388ea212eac2abc27974a7797379f93784b81"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_N_of_nat.",
                        "VernacExtend",
                        "4f8242f92f228a8666621044eadcdcef47308cad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_Alt",
            "line_nb": 722,
            "steps": [
                {
                    "command": [
                        "intros; unfold wminusN, wminus; rewrite wneg_alt; apply wplus_alt.",
                        "VernacExtend",
                        "5af7169df99bcc6555556e1652f8dd189171c490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_unit",
            "line_nb": 725,
            "steps": [
                {
                    "command": [
                        "intros; rewrite wplus_alt; unfold wplusN, wordBinN; intros.",
                        "VernacExtend",
                        "f6b4958e148312fbce4c9ac604aec2d87fc8fb39"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; apply natToWord_wordToNat.",
                        "VernacExtend",
                        "ddd3b77e498a46ef67694d3ce10e782443ad3896"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_comm",
            "line_nb": 729,
            "steps": [
                {
                    "command": [
                        "intros; repeat rewrite wplus_alt; unfold wplusN, wordBinN; f_equal; auto.",
                        "VernacExtend",
                        "84788152d4e800de178fdcdddac79e3241b0e7d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "drop_sub",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "induction sz as [|sz IHsz]; simpl; intros n k *; intuition; repeat rewrite untimes2 in *; f_equal.",
                        "VernacExtend",
                        "954857fe7ab6a5b61442062a36367ead5c368a78"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm k).",
                        "VernacExtend",
                        "42537c4d181fc78b4c21a04d4574890dd05c8d41"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "apply drop_mod2.",
                        "VernacExtend",
                        "21bc54569e69257ecffb9fd770de0b733a16bace"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm 2).",
                        "VernacExtend",
                        "70c21d51e3ec758a40c7190f4176e699686328b3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (IHsz (div2 n) k).",
                        "VernacExtend",
                        "a93ae5040aa339b107dc9f3d9324674c26284054"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm k).",
                        "VernacExtend",
                        "42537c4d181fc78b4c21a04d4574890dd05c8d41"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_minus_2.",
                        "VernacExtend",
                        "b9425e98b9a025cfbdd3b63e61d20527a939a03c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm 2).",
                        "VernacExtend",
                        "70c21d51e3ec758a40c7190f4176e699686328b3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply div2_bound.",
                        "VernacExtend",
                        "2e5e0201059878e04620dab8c2163fb8a4e076af"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm 2).",
                        "VernacExtend",
                        "70c21d51e3ec758a40c7190f4176e699686328b3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_assoc",
            "line_nb": 759,
            "steps": [
                {
                    "command": [
                        "intros sz x y z *; repeat rewrite wplus_alt; unfold wplusN, wordBinN; intros.",
                        "VernacExtend",
                        "f3f5406526c9e19fc8edc1abe7a991cfd9e63fdd"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
                        "VernacExtend",
                        "58b2cd4f5c1460557c818d426e2865f2aace1fce"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- context[wordToNat ?x + wordToNat ?y - ?x1 * pow2 ?sz + wordToNat ?z] ] => replace (wordToNat x + wordToNat y - x1 * pow2 sz + wordToNat z) with (wordToNat x + wordToNat y + wordToNat z - x1 * pow2 sz) by auto end.",
                        "VernacExtend",
                        "d21fe97998adefbc3fafa94f31013c2e68c8f284"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- context[wordToNat ?x + (wordToNat ?y + wordToNat ?z - ?x0 * pow2 ?sz)] ] => replace (wordToNat x + (wordToNat y + wordToNat z - x0 * pow2 sz)) with (wordToNat x + wordToNat y + wordToNat z - x0 * pow2 sz) by auto end.",
                        "VernacExtend",
                        "703fbc4edfcfe54b9313439fe40d05708b5ba0af"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite drop_sub; auto.",
                        "VernacExtend",
                        "e955ee27e29d732fd04990cf883698c18bf99beb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "roundTrip_1",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl in *; intuition.",
                        "VernacExtend",
                        "6e87326fbed62efb28a41f990d48c3f37714a805"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "roundTrip_1'",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz.",
                        "VernacExtend",
                        "5c355ae80bef560efa28a461b9aedbc840295a56"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply roundTrip_1.",
                        "VernacExtend",
                        "825e83748f3bd5f182111da59911df09c45fcaea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod2_WS",
            "line_nb": 777,
            "steps": [
                {
                    "command": [
                        "intros sz x b.",
                        "VernacExtend",
                        "c42949e5e506a84272a1f1d804e0228b2694731d"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wordToNat'.",
                        "VernacExtend",
                        "4a3b9b31f83b37ac6b20182d6a3d179c7ce0b5c5"
                    ]
                },
                {
                    "command": [
                        "destruct b; simpl.",
                        "VernacExtend",
                        "bc673f83b7fadb69a2678507bb22b8ff82ac3809"
                    ]
                },
                {
                    "command": [
                        "rewrite untimes2.",
                        "VernacExtend",
                        "5251470b7e5ac86b65a19fb703cf1376d8aa626a"
                    ]
                },
                {
                    "command": [
                        "case_eq (2 * wordToNat x); intuition.",
                        "VernacExtend",
                        "06a7a0d502cecf6a6048901764e1db85da4f77b0"
                    ]
                },
                {
                    "command": [
                        "eapply mod2_S; eauto.",
                        "VernacExtend",
                        "376a428d8813ba7fbc80ce3ceefdd7e9e26b67bc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mod2_double (wordToNat x)); f_equal; omega.",
                        "VernacExtend",
                        "67eb2bdd812e2f2f965104c1be218b7d72d2ab35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div2_WS",
            "line_nb": 786,
            "steps": [
                {
                    "command": [
                        "destruct b; rewrite wordToNat_wordToNat'; unfold wordToNat'; fold wordToNat'.",
                        "VernacExtend",
                        "7866f3d346af0fdf09fbb7a72c32fbfe6aa960fc"
                    ]
                },
                {
                    "command": [
                        "apply div2_S_double.",
                        "VernacExtend",
                        "46902306ebbfe1d6df02868cb622f055944e10a0"
                    ]
                },
                {
                    "command": [
                        "apply div2_double.",
                        "VernacExtend",
                        "d5708d52336bbbad206207bd8230f7591c160031"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_unit",
            "line_nb": 791,
            "steps": [
                {
                    "command": [
                        "intros sz x; rewrite wmult_alt; unfold wmultN, wordBinN; intros.",
                        "VernacExtend",
                        "261703c2b0d345849e1ac471c86ce56b77740285"
                    ]
                },
                {
                    "command": [
                        "destruct sz; simpl.",
                        "VernacExtend",
                        "cfbcf15e50674e874a01288e275368d7741d6bf7"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word x); reflexivity.",
                        "VernacExtend",
                        "7f561fd48414895fb421288aa001f0c8ac44248c"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; simpl.",
                        "VernacExtend",
                        "ae389c38d714f9a28a446eea60398f8df43af9a3"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r.",
                        "VernacExtend",
                        "d05263a401ad993feef5d443fed22d6f6d6bec5a"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word x).",
                        "VernacExtend",
                        "77d2fc71117698980a8b280c28b334b16d41763d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply mod2_WS.",
                        "VernacExtend",
                        "090fb853ff3a53bc3e0b743118ffba33a6e62bba"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_WS.",
                        "VernacExtend",
                        "e0850797d8fdbf1f8c42d2998a16d4e721e24675"
                    ]
                },
                {
                    "command": [
                        "apply natToWord_wordToNat.",
                        "VernacExtend",
                        "6965d8129ca01f4ec46c0570dbca7760168b1b82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_comm",
            "line_nb": 803,
            "steps": [
                {
                    "command": [
                        "intros; repeat rewrite wmult_alt; unfold wmultN, wordBinN; auto with arith.",
                        "VernacExtend",
                        "51df791e612f40a383b3fa846bf2ed47fd20ace3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_unit_r",
            "line_nb": 806,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wmult_comm.",
                        "VernacExtend",
                        "87afb7750b98ee4139c0c98bf19e3c1ca3594dd2"
                    ]
                },
                {
                    "command": [
                        "apply wmult_unit.",
                        "VernacExtend",
                        "ab831856504e372e0a974b0f4cb0ed5f97052385"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_neut_l",
            "line_nb": 811,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wmult.",
                        "VernacExtend",
                        "2bd7e2aaa0aecca5b25c44c7e009ed4476b95793"
                    ]
                },
                {
                    "command": [
                        "unfold wordBin.",
                        "VernacExtend",
                        "cb419c8e700e95f8d32e75d19ca10dd20615b40a"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToN_nat.",
                        "VernacExtend",
                        "cfa7fe1ca5b1e3a792f0c24c8e15aaa5409e845c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nnat.Nat2N.inj_mul.",
                        "VernacExtend",
                        "b24a0a95e0f0dbc9b384fe9ea192c593ccaa8c3f"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_l.",
                        "VernacExtend",
                        "d10e13c54c0a4adfc40a8c0fd6d084fd4a3dc9d6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite wzero'_def.",
                        "VernacExtend",
                        "6ad764d3d264b9860886e858fa77585126f1f754"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_neut_r",
            "line_nb": 823,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wmult.",
                        "VernacExtend",
                        "2bd7e2aaa0aecca5b25c44c7e009ed4476b95793"
                    ]
                },
                {
                    "command": [
                        "unfold wordBin.",
                        "VernacExtend",
                        "cb419c8e700e95f8d32e75d19ca10dd20615b40a"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToN_nat.",
                        "VernacExtend",
                        "cfa7fe1ca5b1e3a792f0c24c8e15aaa5409e845c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nnat.Nat2N.inj_mul.",
                        "VernacExtend",
                        "b24a0a95e0f0dbc9b384fe9ea192c593ccaa8c3f"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_r.",
                        "VernacExtend",
                        "b0c342e42232568149a672c331046fa4df1777ff"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite wzero'_def.",
                        "VernacExtend",
                        "6ad764d3d264b9860886e858fa77585126f1f754"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_assoc",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "intros sz x y z; repeat rewrite wmult_alt; unfold wmultN, wordBinN; intros.",
                        "VernacExtend",
                        "39beb2f34e206d66842ed7eadc5c3c20b6f55d06"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
                        "VernacExtend",
                        "58b2cd4f5c1460557c818d426e2865f2aace1fce"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_l.",
                        "VernacExtend",
                        "a07b40043dcf59cb9fb1e47cef029f79dc9fca17"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_r.",
                        "VernacExtend",
                        "8affc1e7492a03e77da168a254c8278b756311fb"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- natToWord _ (_ - _ * (?x0' * _)) = natToWord _ (_ - ?x1' * _ * _) ] => rename x0' into x0, x1' into x1 end.",
                        "VernacExtend",
                        "bfb1204bffd24555034baa08cb1faeb9bb78c508"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_assoc (wordToNat x) x0).",
                        "VernacExtend",
                        "997f048c0de560e439293941c80d5589c8b1bda8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_assoc x1).",
                        "VernacExtend",
                        "c8cc066b3a58911cadf3399232bf22af96889147"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (pow2 sz)).",
                        "VernacExtend",
                        "17d46143b27e9e00e4d211b453ba20d8957138d8"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_assoc x1).",
                        "VernacExtend",
                        "8a3f9a5275a3a1fbc37512f19837dc96d1ca26cd"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite drop_sub; auto with arith.",
                        "VernacExtend",
                        "c99e7619566f82a0be1a292d9965d79902d7ee30"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm x1).",
                        "VernacExtend",
                        "2de48433856fa7f410543093ba483bc9d0bd5e27"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_assoc (wordToNat x)).",
                        "VernacExtend",
                        "b1967a260a95b5e502fdc4ec0e895e8f1253a32b"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (wordToNat y)).",
                        "VernacExtend",
                        "f64c6601a1da9232c001170d9ad434341507592e"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (wordToNat x)).",
                        "VernacExtend",
                        "8aa82979ab2dc96bfa664f0382e660ee3c0bc612"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- mult_assoc.",
                        "VernacExtend",
                        "2252311238b6c07ad14a166981d63a2404857515"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- mult_assoc.",
                        "VernacExtend",
                        "2252311238b6c07ad14a166981d63a2404857515"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_plus_distr",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "intros sz x y z; repeat rewrite wmult_alt; repeat rewrite wplus_alt; unfold wmultN, wplusN, wordBinN; intros.",
                        "VernacExtend",
                        "769e69bc374d84d1d8187d8b5eabc4f634ecd9b1"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
                        "VernacExtend",
                        "58b2cd4f5c1460557c818d426e2865f2aace1fce"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_r.",
                        "VernacExtend",
                        "8affc1e7492a03e77da168a254c8278b756311fb"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- natToWord _ (_ - ?x0' * _ * _) = natToWord _ (_ - ?x1' * _ + (_ - ?x2' * _)) ] => rename x0' into x0, x1' into x1, x2' into x2 end.",
                        "VernacExtend",
                        "a0573749cdbb25bf290610435e6c7ae0d269fb2f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_assoc x0).",
                        "VernacExtend",
                        "b5164a7b0dae436ea7759f88f43bcfd412ac11bb"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (pow2 sz)).",
                        "VernacExtend",
                        "17d46143b27e9e00e4d211b453ba20d8957138d8"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_assoc x0).",
                        "VernacExtend",
                        "c9cf190e5c807572e54a0d4e9cfad08b21183ee1"
                    ]
                },
                {
                    "command": [
                        "replace (wordToNat x * wordToNat z - x1 * pow2 sz + (wordToNat y * wordToNat z - x2 * pow2 sz)) with (wordToNat x * wordToNat z + wordToNat y * wordToNat z - x1 * pow2 sz - x2 * pow2 sz).",
                        "VernacExtend",
                        "e3ad2117b135700f119e9e13ffb2c02fe6305df4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite drop_sub; auto with arith.",
                        "VernacExtend",
                        "c99e7619566f82a0be1a292d9965d79902d7ee30"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm x0).",
                        "VernacExtend",
                        "cdb25154847bdd5a3ceb5720855a863f50b1cad8"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (wordToNat x + wordToNat y)).",
                        "VernacExtend",
                        "5610b531218e2c3b7b7b6e0f2dabf6eba27b57b6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_assoc (wordToNat z)).",
                        "VernacExtend",
                        "fb69ced828f384d9a7335270bdadebb252d7fde5"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (wordToNat x * wordToNat z).",
                        "VernacExtend",
                        "3e2167928c7536791d031cdedc43281cb9cf3a84"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (wordToNat y * wordToNat z).",
                        "VernacExtend",
                        "cdab1a349e6f5f172da5f323297d204224481c2e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_def",
            "line_nb": 875,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_bound",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "induction w as [|b]; simpl; intuition.",
                        "VernacExtend",
                        "a08108fe6e9713ceb90a42c47f8295640acc10b1"
                    ]
                },
                {
                    "command": [
                        "destruct b; simpl; omega.",
                        "VernacExtend",
                        "08c325857e0dff64fc2c5e6662bcd69100d06816"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_pow2",
            "line_nb": 882,
            "steps": [
                {
                    "command": [
                        "induction sz as [|sz]; simpl; intuition.",
                        "VernacExtend",
                        "9491aeb9bbc2f07a599994ac0e78a67b9dc196b0"
                    ]
                },
                {
                    "command": [
                        "generalize (div2_double (pow2 sz)); simpl; intro Hr; rewrite Hr; clear Hr.",
                        "VernacExtend",
                        "c260f3dfa6f329adba85ffbfe33bc3585fcc2095"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "generalize (mod2_double (pow2 sz)); auto.",
                        "VernacExtend",
                        "25e989fc5a496e50fa33ef5a491dc414752f1b35"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_inv",
            "line_nb": 889,
            "steps": [
                {
                    "command": [
                        "intros sz x; rewrite wneg_alt; rewrite wplus_alt; unfold wnegN, wplusN, wzero, wordBinN; intros.",
                        "VernacExtend",
                        "2acc24e066d0ecaa3cc2f6ae03431dddf392dda5"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ |- context[wordToNat (natToWord ?sz ?w)] ] => let Heq := fresh \"Heq\" in destruct (wordToNat_natToWord sz w) as [? [Heq ?]]; rewrite Heq end.",
                        "VernacExtend",
                        "58b2cd4f5c1460557c818d426e2865f2aace1fce"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- context[wordToNat ?x + (pow2 ?sz - wordToNat ?x - ?x0 * pow2 ?sz)] ] => replace (wordToNat x + (pow2 sz - wordToNat x - x0 * pow2 sz)) with (pow2 sz - x0 * pow2 sz) end.",
                        "VernacExtend",
                        "fb60e8b03efa11734fe1c944ab84a1826f579598"
                    ]
                },
                {
                    "command": [
                        "rewrite drop_sub; auto with arith.",
                        "VernacExtend",
                        "47106be870e968fa352dcfd42a4d2b637ce6976f"
                    ]
                },
                {
                    "command": [
                        "apply natToWord_pow2.",
                        "VernacExtend",
                        "d9370b48e147fd7328b9f33d0210ef64db6e54ac"
                    ]
                },
                {
                    "command": [
                        "generalize (wordToNat_bound x).",
                        "VernacExtend",
                        "cbc13c359f9a1bdfec107bd83f5e939b44af2e86"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_diag",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wminus.",
                        "VernacExtend",
                        "a28ef9ea5c70771d0ae63cebccd34e92e0b01900"
                    ]
                },
                {
                    "command": [
                        "apply wminus_inv.",
                        "VernacExtend",
                        "241405d0972142f7bf23dcfba249372a4f214964"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_0_wminus",
            "line_nb": 903,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_unit at 1.",
                        "VernacExtend",
                        "29f3af32a03cced04faa3b93cc59323213d1ef76"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weqb_sound",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "eapply weqb_true_iff.",
                        "VernacExtend",
                        "a379a67e6ed6f0fa2113d6af118f69e5e26b9759"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weqb_eq",
            "line_nb": 913,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite weqb_true_iff.",
                        "VernacExtend",
                        "8349edd28c5583f498faad5c6cc02b39d5033885"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weqb_ne",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (weqb a b) eqn: E.",
                        "VernacExtend",
                        "8363f8f1a818532a622c0d56bdc4fa9c9bb1a82e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite weqb_true_iff in E.",
                        "VernacExtend",
                        "06b84e2c48086be44f0d5e667727d66de6bd532c"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weqb_false",
            "line_nb": 927,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (weqb a b) eqn: E.",
                        "VernacExtend",
                        "8363f8f1a818532a622c0d56bdc4fa9c9bb1a82e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite weqb_eq in E; congruence.",
                        "VernacExtend",
                        "b53e9478877da7f8c4b205fbe37e931cf0edae66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bitwp_wtl",
            "line_nb": 943,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w), (shatter_word w').",
                        "VernacExtend",
                        "fdf8e93031256523e29d32bbcd386d403a6d35e7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_bitwp_dist",
            "line_nb": 948,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros; auto.",
                        "VernacExtend",
                        "3a05187e6631e1e9d571704f8bd6a33c0d7d4f5a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w), (shatter_word w'); auto.",
                        "VernacExtend",
                        "4d7f660018867cdfdfaebb83988997dacefcc091"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHsz1, bitwp_wtl.",
                        "VernacExtend",
                        "9caa0128e30231beec4e2983bf19d9a87175bd64"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_bitwp_dist",
            "line_nb": 956,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros; auto.",
                        "VernacExtend",
                        "3a05187e6631e1e9d571704f8bd6a33c0d7d4f5a"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- IHsz1, bitwp_wtl.",
                        "VernacExtend",
                        "7a8458f4c6d0ff2cff4901381bcb0f6378925afc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_bitwp",
            "line_nb": 961,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros; rewrite (shatter_word wa), (shatter_word wa'); simpl; f_equal; auto.",
                        "VernacExtend",
                        "8d9037701f5f238d9b6ef2705380685f22c555ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_bitwp",
            "line_nb": 964,
            "steps": [
                {
                    "command": [
                        "intros a b H; subst a.",
                        "VernacExtend",
                        "a8a453d7d56b7ad7c08d84a5b3bfbf74213b1a34"
                    ]
                },
                {
                    "command": [
                        "intros; eq_rect_simpl; reflexivity.",
                        "VernacExtend",
                        "2f7e0f467fef4eb62cf84e9aa78c27b9c4d70679"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_bitwp'",
            "line_nb": 968,
            "steps": [
                {
                    "command": [
                        "intros a b H1; subst a.",
                        "VernacExtend",
                        "d7632e597ec8559b72e9b4b01d0f42c4e3bbcfff"
                    ]
                },
                {
                    "command": [
                        "intros; eq_rect_simpl; reflexivity.",
                        "VernacExtend",
                        "2f7e0f467fef4eb62cf84e9aa78c27b9c4d70679"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_bitwp_1",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "subst a; intros; eq_rect_simpl; auto.",
                        "VernacExtend",
                        "40d3e26ac710bd2b8a4551b8544b0a4e90e1daab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_wnot'_equiv",
            "line_nb": 976,
            "steps": [
                {
                    "command": [
                        "unfold wnot'.",
                        "VernacExtend",
                        "42cd7bd1101bd527ee2a1ee14af2a979c9c70ab6"
                    ]
                },
                {
                    "command": [
                        "induction sz; intros w; shatterer.",
                        "VernacExtend",
                        "7546af763af78a66ebfe8e63b90d68ac5549b6b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_combine",
            "line_nb": 996,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wnot_wnot'_equiv.",
                        "VernacExtend",
                        "8e13c39ee679ee642b7dead8aeeb5dcc0469951e"
                    ]
                },
                {
                    "command": [
                        "unfold wnot'.",
                        "VernacExtend",
                        "42cd7bd1101bd527ee2a1ee14af2a979c9c70ab6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- combine_wones, combine_bitwp.",
                        "VernacExtend",
                        "378e3ea7a28687932da35c28123d110bdb30b1ef"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_zero",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; f_equal; eauto.",
                        "VernacExtend",
                        "2551d783de35cd872bb0cb1abaa2f78b81ad78c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_ones",
            "line_nb": 1006,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; f_equal; try rewrite IHsz; eauto.",
                        "VernacExtend",
                        "5c221b84b5ab0937617168990ea349e78b09029f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_eq_rect",
            "line_nb": 1009,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst b; eq_rect_simpl; auto.",
                        "VernacExtend",
                        "2a6c0cad3dee028e7fd9e7a14db4f16ecb11af70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_unit",
            "line_nb": 1013,
            "steps": [
                {
                    "command": [
                        "unfold wzero, wor; induction x; simpl; intuition congruence.",
                        "VernacExtend",
                        "aa0b5b3ffc24c83cf0f051f8ca5523a143039761"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_comm",
            "line_nb": 1016,
            "steps": [
                {
                    "command": [
                        "unfold wor; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
                        "VernacExtend",
                        "e4768cf5167cad7fd0c7c0c255253c986d27874f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_assoc",
            "line_nb": 1019,
            "steps": [
                {
                    "command": [
                        "unfold wor; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
                        "VernacExtend",
                        "e4768cf5167cad7fd0c7c0c255253c986d27874f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_unit",
            "line_nb": 1022,
            "steps": [
                {
                    "command": [
                        "unfold wand; induction x; simpl; intuition congruence.",
                        "VernacExtend",
                        "131b13ea74d2fdc67dc895ef97e29b184a32dea6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_kill",
            "line_nb": 1025,
            "steps": [
                {
                    "command": [
                        "unfold wzero, wand; induction x; simpl; intuition congruence.",
                        "VernacExtend",
                        "4c546c2066da46980201736e09b5f6e19d92ef78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_comm",
            "line_nb": 1028,
            "steps": [
                {
                    "command": [
                        "unfold wand; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
                        "VernacExtend",
                        "cb660963253cf8f7fb305973374e142520554144"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_assoc",
            "line_nb": 1031,
            "steps": [
                {
                    "command": [
                        "unfold wand; induction x; intro y; rewrite (shatter_word y); simpl; intuition; f_equal; auto with bool.",
                        "VernacExtend",
                        "cb660963253cf8f7fb305973374e142520554144"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_or_distr",
            "line_nb": 1034,
            "steps": [
                {
                    "command": [
                        "unfold wand, wor; induction x; intro y; rewrite (shatter_word y); intro z; rewrite (shatter_word z); simpl; intuition; f_equal; auto with bool.",
                        "VernacExtend",
                        "90e0b7191a94426a6263352b9bd29e56771cc52c"
                    ]
                },
                {
                    "command": [
                        "destruct (whd y); destruct (whd z); destruct b; reflexivity.",
                        "VernacExtend",
                        "d3f68bca99abaa1e6415c2d42ba5af83ceff3752"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_wones",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "unfold wor; induction sz; intros; simpl; auto.",
                        "VernacExtend",
                        "79a82d4b7bc40373321625d2f154793a0a5cd2d7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz; auto.",
                        "VernacExtend",
                        "2973f5a0da9cb6e1e18def41b71f6cc10f0e68c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_wzero",
            "line_nb": 1042,
            "steps": [
                {
                    "command": [
                        "unfold wor; induction sz; shatterer.",
                        "VernacExtend",
                        "5735e2f33f6fcfc5a9ea9de723ae5fb7aee80335"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_wones",
            "line_nb": 1045,
            "steps": [
                {
                    "command": [
                        "unfold wand; induction sz; shatterer.",
                        "VernacExtend",
                        "e14c7fec12eef78edf19a38f5c103bac0da72991"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_wzero",
            "line_nb": 1048,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wzero'_def.",
                        "VernacExtend",
                        "fa9016326a1619c52f176541f311be8cee8dee47"
                    ]
                },
                {
                    "command": [
                        "unfold wand; induction sz; shatterer.",
                        "VernacExtend",
                        "e14c7fec12eef78edf19a38f5c103bac0da72991"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wxor_wones",
            "line_nb": 1053,
            "steps": [
                {
                    "command": [
                        "unfold wxor; induction sz; shatterer.",
                        "VernacExtend",
                        "ae9bdee79a409f3c649e67ef2df879989ead1e92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wxor_wzero",
            "line_nb": 1056,
            "steps": [
                {
                    "command": [
                        "unfold wxor; induction sz; shatterer; destruct (whd w); auto.",
                        "VernacExtend",
                        "507ef2c3566ef985ed8c71638c21bd7f88506357"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wxor_comm",
            "line_nb": 1059,
            "steps": [
                {
                    "command": [
                        "unfold wxor; induction sz.",
                        "VernacExtend",
                        "11cc001408eb5958becdb8fb98356a6a47d16bcc"
                    ]
                },
                {
                    "command": [
                        "shatterer.",
                        "VernacExtend",
                        "f951dddd3876ce739d9bcc70c03a8fe74800dd2e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w1), (shatter_word w2).",
                        "VernacExtend",
                        "4041679cc6f792563e98cc1bbf78fef9d62308d7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite xorb_comm, IHsz.",
                        "VernacExtend",
                        "d4fec4682589ca56e8b0c9de01199a8fade7b3fd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wxor_assoc",
            "line_nb": 1068,
            "steps": [
                {
                    "command": [
                        "unfold wxor.",
                        "VernacExtend",
                        "ac78a1b872f35f74b306160ffd6e0158641d1fc0"
                    ]
                },
                {
                    "command": [
                        "induction sz; intros; rewrite (shatter_word w1), (shatter_word w2), (shatter_word w3); auto.",
                        "VernacExtend",
                        "b8c03870292cc2ff759b0d136c9946c129fa30fd"
                    ]
                },
                {
                    "command": [
                        "simpl; f_equal.",
                        "VernacExtend",
                        "e1a8d9221cffa231af353a6224974ce2a7f11d21"
                    ]
                },
                {
                    "command": [
                        "rewrite xorb_assoc_reverse; auto.",
                        "VernacExtend",
                        "cadfb7b3ff8171ee1da279581be7c2ebe6592165"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz.",
                        "VernacExtend",
                        "0e7c5794acb2a369001382a34376ab478b933f3b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_wone",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "compute [wone natToWord wor].",
                        "VernacExtend",
                        "d8deecba0d18100f9ccab3f3a9a9d07b96a7c39c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "change (natToWord sz 0) with (wzero sz).",
                        "VernacExtend",
                        "acc4eac2675d845118ea2e972f2e06ce101ec66c"
                    ]
                },
                {
                    "command": [
                        "rewrite orb_true_r.",
                        "VernacExtend",
                        "5d7ee48d247b7cf18db132babe96cc889f4123e4"
                    ]
                },
                {
                    "command": [
                        "rewrite wor_comm, wor_wzero.",
                        "VernacExtend",
                        "6575fc4d3316014c5f670ac263ea5257e61620c1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wand_wone",
            "line_nb": 1086,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "compute [wone natToWord wand].",
                        "VernacExtend",
                        "9b57d1d162d7c74550501ef9f8e9e53ab02223b4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "change (natToWord sz 0) with (wzero sz).",
                        "VernacExtend",
                        "acc4eac2675d845118ea2e972f2e06ce101ec66c"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_r.",
                        "VernacExtend",
                        "230918acbe37788580429f7b57db0df199d9fbfd"
                    ]
                },
                {
                    "command": [
                        "rewrite wand_comm, wand_wzero.",
                        "VernacExtend",
                        "e3889d499a14f385e892d4b64dd0a65cf885e3c4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wxor_wone",
            "line_nb": 1096,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "compute [wone natToWord wxor].",
                        "VernacExtend",
                        "ab3409d90f742f044b44ee973dc37f1997fcf27a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "change (natToWord sz 0) with (wzero sz).",
                        "VernacExtend",
                        "acc4eac2675d845118ea2e972f2e06ce101ec66c"
                    ]
                },
                {
                    "command": [
                        "rewrite xorb_true_r.",
                        "VernacExtend",
                        "35e388fcf66b7ea68e9461933ceb03c5db842b84"
                    ]
                },
                {
                    "command": [
                        "rewrite wxor_comm, wxor_wzero.",
                        "VernacExtend",
                        "97f27afc02a907c62156af35c43d43e8da0f051f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_neq",
            "line_nb": 1110,
            "steps": [
                {
                    "command": [
                        "intros; intro; subst.",
                        "VernacExtend",
                        "bb88b894a931be6b9c02a9f3f8052c3c917ad73f"
                    ]
                },
                {
                    "command": [
                        "unfold wminus in H.",
                        "VernacExtend",
                        "1ab886acfe129521871f9daf16024cbefbc7cbdf"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv in H.",
                        "VernacExtend",
                        "53535337410eebd3132a2f06371ebe70afda2ce5"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_wlt_ge",
            "line_nb": 1119,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (wlt_dec l r); intros; try contradiction; auto.",
                        "VernacExtend",
                        "f6b04577ca3d1e83f6a391710ba69e7fc59453ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_wle_gt",
            "line_nb": 1123,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (wlt_dec r l); intros; try contradiction; auto.",
                        "VernacExtend",
                        "f4f9c57ada943b9f0950deafc78afc1d8f6ac45a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_le",
            "line_nb": 1127,
            "steps": [
                {
                    "command": [
                        "unfold wlt, N.lt.",
                        "VernacExtend",
                        "d85542bf066dc3053641170609efe08d394ce0f6"
                    ]
                },
                {
                    "command": [
                        "intros sz a b H H0.",
                        "VernacExtend",
                        "6410221b570e8958036824c96545212945ce8b63"
                    ]
                },
                {
                    "command": [
                        "rewrite N.compare_antisym in H0.",
                        "VernacExtend",
                        "5eb844b00dc30656d2c380ef625197bc63e65f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_le",
            "line_nb": 1135,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "unfold wlt, N.lt.",
                        "VernacExtend",
                        "d85542bf066dc3053641170609efe08d394ce0f6"
                    ]
                },
                {
                    "command": [
                        "rewrite N.compare_refl.",
                        "VernacExtend",
                        "b043aa88736e73eaa1d7e16e1a785d554a475edd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_inj",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "induction a; intro b0; rewrite (shatter_word b0); intuition.",
                        "VernacExtend",
                        "74de0e591bd36cf8468a173ffd1f4266a759c437"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct b; destruct (whd b0); intros.",
                        "VernacExtend",
                        "e42194a67214963cc9e54ace6be670fcf569cafe"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply IHa.",
                        "VernacExtend",
                        "ff07a44ba6b03024fc599c1524cd9014dcc0312e"
                    ]
                },
                {
                    "command": [
                        "eapply N.succ_inj in H.",
                        "VernacExtend",
                        "5b6b4472a4bfd647a25dd08afa3edd89320ddcb1"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN a); destruct (wordToN (wtl b0)); try congruence.",
                        "VernacExtend",
                        "c2e48522a4acb6556c95b9f52463df47dd99593d"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN (wtl b0)); destruct (wordToN a); inversion H.",
                        "VernacExtend",
                        "285ca11a350b491fd68d3c1e4c9d69fa10a56211"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN (wtl b0)); destruct (wordToN a); inversion H.",
                        "VernacExtend",
                        "285ca11a350b491fd68d3c1e4c9d69fa10a56211"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply IHa.",
                        "VernacExtend",
                        "ff07a44ba6b03024fc599c1524cd9014dcc0312e"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN a); destruct (wordToN (wtl b0)); try congruence.",
                        "VernacExtend",
                        "c2e48522a4acb6556c95b9f52463df47dd99593d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_inj",
            "line_nb": 1155,
            "steps": [
                {
                    "command": [
                        "intros; apply wordToN_inj.",
                        "VernacExtend",
                        "ca08e8fe41d9710c477de2754dacf2aa76bac071"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat.",
                        "VernacExtend",
                        "626b77cc5ebf261e9a5062d6e0331d3275614af4"
                    ]
                },
                {
                    "command": [
                        "apply Nat2N.inj_iff; auto.",
                        "VernacExtend",
                        "baaeab4257f2ecd6c90d920f90f4e973150a23cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_inverse",
            "line_nb": 1160,
            "steps": [
                {
                    "command": [
                        "intros sz a b1 b2 H *.",
                        "VernacExtend",
                        "1edc44120254145187c6c4e6c70922c44df60926"
                    ]
                },
                {
                    "command": [
                        "transitivity (b1 ^+ wzero _).",
                        "VernacExtend",
                        "d3c76f77c07847aecbcb6dccfd8f45fb689a550e"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit.",
                        "VernacExtend",
                        "456c00b381d30e8e1bb3920c2d3ad65db8963760"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "transitivity (b1 ^+ (a ^+ b2)).",
                        "VernacExtend",
                        "abd08e781d1a433b2f10f9f2f8a3e3a70cdc09ca"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc.",
                        "VernacExtend",
                        "63aed3418c40f5877e819fbf2cdc524389fd0436"
                    ]
                },
                {
                    "command": [
                        "rewrite (wplus_comm b1).",
                        "VernacExtend",
                        "bc5332480f654ff6d43641b2ec179fccdf22e7cd"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit.",
                        "VernacExtend",
                        "456c00b381d30e8e1bb3920c2d3ad65db8963760"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_0_eq",
            "line_nb": 1174,
            "steps": [
                {
                    "command": [
                        "intros sz a b H.",
                        "VernacExtend",
                        "b32952d1251716004d110845125bcab55136c68e"
                    ]
                },
                {
                    "command": [
                        "destruct (weq (wneg b) (wneg a)) as [e|n].",
                        "VernacExtend",
                        "b6b303ae88cdb8df3618a4b8b29a8417b94d58e7"
                    ]
                },
                {
                    "command": [
                        "transitivity (a ^+ (^~ b ^+ b)).",
                        "VernacExtend",
                        "68131e276b5dc2396ed4a6f2bfd17d3153cb93f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (wplus_comm (^~ b)).",
                        "VernacExtend",
                        "8981c5eda0befdc909545ece072a5feaa1853144"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit.",
                        "VernacExtend",
                        "456c00b381d30e8e1bb3920c2d3ad65db8963760"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc.",
                        "VernacExtend",
                        "63aed3418c40f5877e819fbf2cdc524389fd0436"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit.",
                        "VernacExtend",
                        "456c00b381d30e8e1bb3920c2d3ad65db8963760"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold wminus in H.",
                        "VernacExtend",
                        "1ab886acfe129521871f9daf16024cbefbc7cbdf"
                    ]
                },
                {
                    "command": [
                        "generalize (unique_inverse a (wneg a) (^~ b)).",
                        "VernacExtend",
                        "1fe82fe76b082cb0c21571b5964d7b02071e8c76"
                    ]
                },
                {
                    "command": [
                        "intro H0.",
                        "VernacExtend",
                        "33135fa360f1c5b700715c0dfac0804c96d2fa77"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "apply n.",
                        "VernacExtend",
                        "ed7192228e57856197020582fd87949160a69557"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply H0.",
                        "VernacExtend",
                        "a1b7e9db0d44a14fb0db391e5bb1565d3ca029e2"
                    ]
                },
                {
                    "command": [
                        "apply wminus_inv.",
                        "VernacExtend",
                        "241405d0972142f7bf23dcfba249372a4f214964"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_neq_lt",
            "line_nb": 1197,
            "steps": [
                {
                    "command": [
                        "intros sz a b H H0; destruct (wlt_dec b a) as [?|n]; auto.",
                        "VernacExtend",
                        "4fba63f881ca597480a86e48949594dfb405e3ac"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "unfold wlt, N.lt in *.",
                        "VernacExtend",
                        "9cc4077fc04a7bf1b2171141cbad643e962838d3"
                    ]
                },
                {
                    "command": [
                        "eapply wordToN_inj.",
                        "VernacExtend",
                        "7a730e660ef6caa16004fa0148858c2d09d67544"
                    ]
                },
                {
                    "command": [
                        "eapply Ncompare_eq_correct.",
                        "VernacExtend",
                        "0de12ae85290a4fef79b236ff7f3b51f329f7f92"
                    ]
                },
                {
                    "command": [
                        "case_eq ((wordToN a ?= wordToN b)%N); auto; try congruence.",
                        "VernacExtend",
                        "a7b19faaa94bce303c132427a5b80d401a8310ac"
                    ]
                },
                {
                    "command": [
                        "intros H1.",
                        "VernacExtend",
                        "ba8e6c21eb83603690828b8ea37ea25a6f2962f3"
                    ]
                },
                {
                    "command": [
                        "rewrite N.compare_antisym in n.",
                        "VernacExtend",
                        "53cfef1b8ab5aba096791c67b2a56f5d07abd6e8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in n.",
                        "VernacExtend",
                        "d7f78a6cd5da803cd29801b79d0bd1d3280b0aac"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rewrite_weq",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "intros sz a b *; destruct (weq a b); try solve [ elimtype False; auto ].",
                        "VernacExtend",
                        "1e1902bbbb68712780adc7a8da7618667a4e3f79"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply UIP_dec.",
                        "VernacExtend",
                        "649d9c9ae2aa9532e55ac3efeb9211e8afaf26d5"
                    ]
                },
                {
                    "command": [
                        "eapply weq.",
                        "VernacExtend",
                        "64d139cd0b892b11eb048f77543c31c87bf341b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_plus",
            "line_nb": 1219,
            "steps": [
                {
                    "command": [
                        "destruct sz as [|sz]; intros n m; intuition.",
                        "VernacExtend",
                        "d5819b557d68b2f07bacc03b19c3a42ebb0ac3a2"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_alt.",
                        "VernacExtend",
                        "9fe1f9104e7019dccb279513e21891a45c7e62bd"
                    ]
                },
                {
                    "command": [
                        "unfold wplusN, wordBinN.",
                        "VernacExtend",
                        "4c1430197ff76152cf0e8c13ae14fd2a32ae9454"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord (S sz) n); intuition.",
                        "VernacExtend",
                        "8caec19c0c078334ec060d0dff5a35dcf4440cdd"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord (S sz) m); intuition.",
                        "VernacExtend",
                        "72ef25ac736fb3011fd567a9afc8773a9dbf867b"
                    ]
                },
                {
                    "command": [
                        "do 2 match goal with H : _ |- _ => rewrite H; clear H end.",
                        "VernacExtend",
                        "f67fe95a46d3409abbbb1cd19e90ac94b68c384d"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- context[?n - ?x * pow2 (S ?sz) + (?m - ?x0 * pow2 (S ?sz))] ] => replace (n - x * pow2 (S sz) + (m - x0 * pow2 (S sz))) with (n + m - x * pow2 (S sz) - x0 * pow2 (S sz)) by omega end.",
                        "VernacExtend",
                        "7b23cdfd51e4470172a56ca860ad23c5b3e8c420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite drop_sub; auto; omega.",
                        "VernacExtend",
                        "2743250128faacdaff934a10184c106f26a55bb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_S",
            "line_nb": 1229,
            "steps": [
                {
                    "command": [
                        "intros sz n; change (S n) with (1 + n); apply natToWord_plus.",
                        "VernacExtend",
                        "2670c9a07e08b43a42f25c0efa7941ffb0cdbe3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_inj",
            "line_nb": 1232,
            "steps": [
                {
                    "command": [
                        "intros sz n m H H0 H1.",
                        "VernacExtend",
                        "dcce613d2b87b82670209bc0120e7ef24f928a9f"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (@wordToNat _)) in H.",
                        "VernacExtend",
                        "1ad0baf838a5670b683b9a56f02da40a5cff8d5e"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord sz n) as [x H2].",
                        "VernacExtend",
                        "ec3e4ad018999aac30c38937548757dddf3947ca"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord sz m) as [x0 H3].",
                        "VernacExtend",
                        "8282ba0432452d6f05f7b18df81be6f55f397da8"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : wordToNat ?x = wordToNat ?y, H' : wordToNat ?x = ?a, H'' : wordToNat ?y = ?b |- _ ] => let H0 := fresh in assert (H0 : a = b) by congruence; clear H H' H''; rename H0 into H end.",
                        "VernacExtend",
                        "ac7d1b1e0b68efa185bda15bac49f0a12396b3a6"
                    ]
                },
                {
                    "command": [
                        "assert (x = 0).",
                        "VernacExtend",
                        "54ce22268b19db903e0a07e52ae81a67c949b684"
                    ]
                },
                {
                    "command": [
                        "destruct x; auto.",
                        "VernacExtend",
                        "e693b97b98b28f6f305ce1b2e3d77ebaa690911c"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (x * pow2 sz).",
                        "VernacExtend",
                        "67d13c334feb2f324209bd6a0a15d85ad952b85c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "assert (x0 = 0).",
                        "VernacExtend",
                        "186be3fc8723549aaecb70540145d4e2e63d56c2"
                    ]
                },
                {
                    "command": [
                        "destruct x0; auto.",
                        "VernacExtend",
                        "c415072357f269beb86f75085c32b450d3533053"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (x0 * pow2 sz).",
                        "VernacExtend",
                        "369c7a1aab41a57d72c3a74a3279b290ce1a0d9f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "subst; simpl in *; omega.",
                        "VernacExtend",
                        "de85f670a8fae410909f208f9e2465de4e43ba2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord_idempotent",
            "line_nb": 1253,
            "steps": [
                {
                    "command": [
                        "intros sz n H.",
                        "VernacExtend",
                        "1d0a6fa7fb73b8edf037aad168255ac06dc0af60"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord sz n) as [x]; intuition.",
                        "VernacExtend",
                        "8a7c6499a3cb9a09710e4566ef9c66cec2b0ac9a"
                    ]
                },
                {
                    "command": [
                        "destruct x as [|x].",
                        "VernacExtend",
                        "40ce266278119398d8f73344d5c3093194c076c0"
                    ]
                },
                {
                    "command": [
                        "simpl in *; omega.",
                        "VernacExtend",
                        "2e505872d892cb5022bef5b246ceb26cdd84b133"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out in H.",
                        "VernacExtend",
                        "9bc0b4be958c1e2b580f5187547cb981d735d212"
                    ]
                },
                {
                    "command": [
                        "autorewrite with N in *.",
                        "VernacExtend",
                        "d277b2abbf9b0a5d41e533329e1f20e4c7039ece"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat in *.",
                        "VernacExtend",
                        "830a9b4549b4462812725c505d92580a4edec34e"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (x * pow2 sz).",
                        "VernacExtend",
                        "67d13c334feb2f324209bd6a0a15d85ad952b85c"
                    ]
                },
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_cancel",
            "line_nb": 1265,
            "steps": [
                {
                    "command": [
                        "intros sz a b c H.",
                        "VernacExtend",
                        "9da274ac83b5aeacf7f1f387a382c094515ae151"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (fun x => x ^+ ^~ c)) in H.",
                        "VernacExtend",
                        "c793751c4c28ad2f4394809831eb1b1956f5c863"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- wplus_assoc in H.",
                        "VernacExtend",
                        "2b3268bc8a8936676a6a6c439aabb47f982d2e97"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv in H.",
                        "VernacExtend",
                        "53535337410eebd3132a2f06371ebe70afda2ce5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (wplus_comm _ (wzero sz)) in H.",
                        "VernacExtend",
                        "e20442a8baa553d897ce3ac2567ffaaf34319bce"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wplus_unit in H.",
                        "VernacExtend",
                        "ef221915d4a5243bd46e69f279198a34f24f1891"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_plus_distr",
            "line_nb": 1274,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wplus_cancel with (c:= y ^+ z).",
                        "VernacExtend",
                        "6d7a009d7de757b8a4e0f870f72d652df808cdbc"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def, <-wplus_assoc.",
                        "VernacExtend",
                        "15160da0d158a247b4376964caabe1d0845db1ad"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (y:= y ^+ z), wminus_inv.",
                        "VernacExtend",
                        "c172d27b5c0b6d79c91d8b3b6ce7575a2b559c69"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= x), wplus_unit.",
                        "VernacExtend",
                        "2b4a0ce0a05721515fa003cd038ca32a9b7baf2f"
                    ]
                },
                {
                    "command": [
                        "rewrite !wminus_def, <-wplus_assoc.",
                        "VernacExtend",
                        "28f6b366bd004304f4b797bfcc5ea57225988b83"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc with (x:= ^~ z).",
                        "VernacExtend",
                        "019786ba34187cbf6397cc10784973047af2918b"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= ^~ z).",
                        "VernacExtend",
                        "dd78348467daa3c7ab7405869b0058095c2eaef4"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wplus_assoc with (x:= y).",
                        "VernacExtend",
                        "cf0a9e00b0109a707d6910d78e825a3716d6bf4a"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= ^~ z), wminus_inv.",
                        "VernacExtend",
                        "c3902671d9e1e07ee2914e4795ee6a3928a9ebb4"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= y), wplus_unit.",
                        "VernacExtend",
                        "c3d7e96096599da5411e3973db0b389282a7880b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= ^~ y), wminus_inv.",
                        "VernacExtend",
                        "06b724b7dfb46c058555c12e2ba3bed3f7190db4"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, wplus_unit.",
                        "VernacExtend",
                        "6fd34c4f9a8a346e2ac00268c42dce9a63169a66"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_wplus_undo",
            "line_nb": 1291,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def.",
                        "VernacExtend",
                        "64ef6058e93b8fe0347972aae7557c0b702029aa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite (wplus_comm (^~ b)).",
                        "VernacExtend",
                        "8981c5eda0befdc909545ece072a5feaa1853144"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit.",
                        "VernacExtend",
                        "456c00b381d30e8e1bb3920c2d3ad65db8963760"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_zero",
            "line_nb": 1301,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wplus_cancel with (c:= ^~ w).",
                        "VernacExtend",
                        "f1dbb9823a2afbe5eec16a627870372e7a085741"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv, wplus_unit; auto.",
                        "VernacExtend",
                        "ab65f455f43f875005bec1bae9e78929df83f72b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_idempotent",
            "line_nb": 1306,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sub_0_eq.",
                        "VernacExtend",
                        "bc6031e71b20c7e7c7943cdd602d2b29f77edaa6"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def.",
                        "VernacExtend",
                        "64ef6058e93b8fe0347972aae7557c0b702029aa"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "apply wminus_inv.",
                        "VernacExtend",
                        "241405d0972142f7bf23dcfba249372a4f214964"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_zero'",
            "line_nb": 1313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wneg_zero.",
                        "VernacExtend",
                        "a1478cf8b3efe6c0dd3c713b2476bbac71f174c5"
                    ]
                },
                {
                    "command": [
                        "apply wneg_idempotent.",
                        "VernacExtend",
                        "226d87019339cbb07f47ca7c4f3b0e97db1ce243"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_one_neq",
            "line_nb": 1318,
            "steps": [
                {
                    "command": [
                        "intros; intro Hx.",
                        "VernacExtend",
                        "6b318a051acd70dfeec02bfd22d4c639911c9814"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm in Hx.",
                        "VernacExtend",
                        "366f82e4417bbf4eb3ff92e250564da2ea54b871"
                    ]
                },
                {
                    "command": [
                        "assert ((natToWord (S sz) 1) ^+ w ^- w = w ^- w) by (rewrite Hx; reflexivity).",
                        "VernacExtend",
                        "4600563b15335d29d8cdaa5dbfd9d3922b60dd28"
                    ]
                },
                {
                    "command": [
                        "clear Hx.",
                        "VernacExtend",
                        "314f2dd08c56e12784d701709c171b860f652dc1"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wminus_def in H.",
                        "VernacExtend",
                        "d135b1978756dd0df46dbd0f27f920936f0d10c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wplus_assoc in H.",
                        "VernacExtend",
                        "59c5f7a1d709342fe291f9e785eda0b31332e999"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv in H.",
                        "VernacExtend",
                        "53535337410eebd3132a2f06371ebe70afda2ce5"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, wplus_unit in H.",
                        "VernacExtend",
                        "cd15a6ad763c813aa58644b3a3cbae027378969b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_one_pow2_minus_one",
            "line_nb": 1329,
            "steps": [
                {
                    "command": [
                        "destruct sz; auto.",
                        "VernacExtend",
                        "bd607d653ffeb13048d70722aef47b5473b32198"
                    ]
                },
                {
                    "command": [
                        "unfold wneg; intros.",
                        "VernacExtend",
                        "a34976f5b901ec32494372ac0b8676bd0840c605"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, roundTrip_1.",
                        "VernacExtend",
                        "943e93cbbb63791b7170899ad9124de935c34ed4"
                    ]
                },
                {
                    "command": [
                        "simpl BinNat.N.of_nat.",
                        "VernacExtend",
                        "63f01aa8deea37d21348abe76f6f823cc65d7f93"
                    ]
                },
                {
                    "command": [
                        "rewrite NToWord_nat, Nnat.N2Nat.inj_sub, Npow2_nat.",
                        "VernacExtend",
                        "7f44e6de25984d5680137cf6337fc0b62408d8aa"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_natToWord_2.",
                        "VernacExtend",
                        "cf960e331fe434f22110eb2c216c16194e942718"
                    ]
                },
                {
                    "command": [
                        "pose (pow2_zero (S sz)).",
                        "VernacExtend",
                        "cfccaa860f5695ef501f89cd84c6d5b6f6570962"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wones_pow2_minus_one",
            "line_nb": 1339,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; auto.",
                        "VernacExtend",
                        "3c5ff83bd018a1bdf50844a8045b7bb97567268f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz; pose (pow2_zero sz).",
                        "VernacExtend",
                        "b890e9b05cd4b4f2ec0d9c5a322768817299ebac"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow2_minus_one_wones",
            "line_nb": 1344,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <-wones_pow2_minus_one in H.",
                        "VernacExtend",
                        "e40ad40d0b9cae61fa095b64be6939de2f2ac025"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj; auto.",
                        "VernacExtend",
                        "4dff691f1e8f89d959122102cb3a14c03067913d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wones_natToWord",
            "line_nb": 1348,
            "steps": [
                {
                    "command": [
                        "induction sz.",
                        "VernacExtend",
                        "f0dd08ea79213d276af44d6a53e7f263ac45a85a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold wones.",
                        "VernacExtend",
                        "93da55cab520c3d48d795155675659cd5368dde3"
                    ]
                },
                {
                    "command": [
                        "fold wones.",
                        "VernacExtend",
                        "7d4154b95e860e35590760891ee0a8fd693178fd"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz.",
                        "VernacExtend",
                        "0e7c5794acb2a369001382a34376ab478b933f3b"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord at 2.",
                        "VernacExtend",
                        "79dbad4be28a06ee0616167d0815d383777425cf"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite mod2sub.",
                        "VernacExtend",
                        "861860d58c5e0bde6ff21a59f77cf97a27393184"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite mod2_pow2_twice.",
                        "VernacExtend",
                        "70eecf0d2941bcb68f67afeda9d285828b35d418"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 (S sz)).",
                        "VernacExtend",
                        "8d7a96ea110baced66451942f5753a89547d51af"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 at 2.",
                        "VernacExtend",
                        "094863b2a618787e2975a57e3a1a7d1092d5b3eb"
                    ]
                },
                {
                    "command": [
                        "fold pow2.",
                        "VernacExtend",
                        "3d9edde2a7643697a0e2e03bafa1afe001049eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (div2_S_double (pow2 sz - 1)).",
                        "VernacExtend",
                        "23df72b0f1c5da8a38b776661e7d613bda808b90"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 sz).",
                        "VernacExtend",
                        "396ae7ca3d9bce18175c967280dd2d544ee8e976"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wones_wneg_one",
            "line_nb": 1377,
            "steps": [
                {
                    "command": [
                        "intros; apply wordToNat_inj.",
                        "VernacExtend",
                        "4c2dd34202139df48911d6659080537a6e360949"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_one_pow2_minus_one.",
                        "VernacExtend",
                        "dd1c546ca3a7ad3cc66f3aefb22c20ba2a29da2c"
                    ]
                },
                {
                    "command": [
                        "rewrite wones_pow2_minus_one.",
                        "VernacExtend",
                        "7f2d7a4a7429310a6fc575b57d4f5f4d63197882"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord_pred",
            "line_nb": 1383,
            "steps": [
                {
                    "command": [
                        "intros; remember (wordToNat w) as wn; destruct wn; simpl in *.",
                        "VernacExtend",
                        "105be4c89aa6798c3111582e9bf8c2fff923c3c1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; auto.",
                        "VernacExtend",
                        "bb8a23542e356dceec156ba02149ad653766ed45"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply natToWord_inj with (sz:= sz).",
                        "VernacExtend",
                        "1e198ee31f38c0dbfe81812649b004a1b1a67172"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_wordToNat.",
                        "VernacExtend",
                        "aaa0e6520fb9e253ce2e9e3acc4f387b9be39db6"
                    ]
                },
                {
                    "command": [
                        "apply wplus_cancel with (c:= (natToWord sz 1)).",
                        "VernacExtend",
                        "6c4c9ae5a5896dadce5ac4bfec180204f5208e74"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def, <-wplus_assoc.",
                        "VernacExtend",
                        "15160da0d158a247b4376964caabe1d0845db1ad"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= ^~ (natToWord sz 1)).",
                        "VernacExtend",
                        "6b17d89b7a5435f6d319480c0ba66d7e0cee4c3c"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= w).",
                        "VernacExtend",
                        "9fab9cde5a079b60901f1e5c04457d8a80133fd7"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit.",
                        "VernacExtend",
                        "456c00b381d30e8e1bb3920c2d3ad65db8963760"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, <-natToWord_S.",
                        "VernacExtend",
                        "dd6b85bea3c63d48f773be37f55ab6995ea7c83e"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_2; auto.",
                        "VernacExtend",
                        "871a53d10139c0e0123eeeb55a817cd324c83fd0"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqwn.",
                        "VernacExtend",
                        "75a3dc5841afe1e4a6a842b3b67da5b522387f4f"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound w); omega.",
                        "VernacExtend",
                        "bfd245fc07481a3398602b297e9fb658065f24dd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_mult",
            "line_nb": 1409,
            "steps": [
                {
                    "command": [
                        "destruct sz; intuition.",
                        "VernacExtend",
                        "8eca65b19a74eb587d4232ca316d67f995f9bc17"
                    ]
                },
                {
                    "command": [
                        "rewrite wmult_alt.",
                        "VernacExtend",
                        "2d70d5d5e837dcbc5599440f63f2339ae84000e1"
                    ]
                },
                {
                    "command": [
                        "unfold wmultN, wordBinN.",
                        "VernacExtend",
                        "704661b5e7570878adaa60d4a3241683842aa7e7"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord (S sz) n); intuition.",
                        "VernacExtend",
                        "8caec19c0c078334ec060d0dff5a35dcf4440cdd"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord (S sz) m); intuition.",
                        "VernacExtend",
                        "72ef25ac736fb3011fd567a9afc8773a9dbf867b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; rewrite H2; clear H0 H2.",
                        "VernacExtend",
                        "3bb6a57227e0799ec4afaed2989d4a9d1305b70d"
                    ]
                },
                {
                    "command": [
                        "replace ((n - x * pow2 (S sz)) * (m - x0 * pow2 (S sz))) with ((n - x * pow2 (S sz)) * m - (n - x * pow2 (S sz)) * (x0 * pow2 (S sz))) by (rewrite Nat.mul_sub_distr_l; auto).",
                        "VernacExtend",
                        "bbe98780ecef6e550726128e9546dc11f4165c52"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc; rewrite drop_sub.",
                        "VernacExtend",
                        "ed665a6817f86d69411771653ab92df836de2f78"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_comm with (m:=m).",
                        "VernacExtend",
                        "1a8021853a66231bd13847e28a429f00a76ec574"
                    ]
                },
                {
                    "command": [
                        "replace (m * (n - x * pow2 (S sz))) with (m * n - m * (x * pow2 (S sz))) by (rewrite Nat.mul_sub_distr_l; auto).",
                        "VernacExtend",
                        "a8b3de82c33754ba4b89f7a39dae9373510d93fc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc; rewrite drop_sub.",
                        "VernacExtend",
                        "ed665a6817f86d69411771653ab92df836de2f78"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc; apply Nat.mul_le_mono_l; auto.",
                        "VernacExtend",
                        "7b2d0f77b398a3ff1fade15430150287aa6088e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc; apply Nat.mul_le_mono_l; auto.",
                        "VernacExtend",
                        "7b2d0f77b398a3ff1fade15430150287aa6088e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlt_lt",
            "line_nb": 1425,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlt in H.",
                        "VernacExtend",
                        "7d5a67b17938fd641d929fa423ad38c7e6b84bb2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat in *.",
                        "VernacExtend",
                        "85bf3a02c416415ba10de396529e91a53976c4ba"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out in H.",
                        "VernacExtend",
                        "9bc0b4be958c1e2b580f5187547cb981d735d212"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Nat2N.id in *.",
                        "VernacExtend",
                        "021676f52f69df1d30d93c24db3e5e65f2944627"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wle_le",
            "line_nb": 1433,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlt in H.",
                        "VernacExtend",
                        "7d5a67b17938fd641d929fa423ad38c7e6b84bb2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat in *.",
                        "VernacExtend",
                        "85bf3a02c416415ba10de396529e91a53976c4ba"
                    ]
                },
                {
                    "command": [
                        "apply Nge_out in H.",
                        "VernacExtend",
                        "0d52353e66a6729554e5cbbc81c67aed21c0f84f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Nat2N.id in *.",
                        "VernacExtend",
                        "021676f52f69df1d30d93c24db3e5e65f2944627"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlt_lt'",
            "line_nb": 1441,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt.",
                        "VernacExtend",
                        "7220994bfebe053b045266072346b763ea04ca2f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_word_lt_nat",
            "line_nb": 1446,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt in H.",
                        "VernacExtend",
                        "eb25d699e131c5a049ddc78b1a43c7040abfd346"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord' sz m).",
                        "VernacExtend",
                        "25b03423da42685efb67da244d319ac68b6ca030"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply lt_plus_trans with (p := x * pow2 sz).",
                        "VernacExtend",
                        "249d8e02f6271bcc76b60487b626f783885d99f0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_word_le_nat",
            "line_nb": 1454,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wle_le in H.",
                        "VernacExtend",
                        "1763fac2ac50cd2d67b8068e90cee5d368237a90"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord' sz m).",
                        "VernacExtend",
                        "25b03423da42685efb67da244d319ac68b6ca030"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_trans with (p := x * pow2 sz).",
                        "VernacExtend",
                        "2d97374c46a024a2cc7394be5982b7d283f7abc3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_word_le_nat",
            "line_nb": 1462,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_word_lt_nat in H.",
                        "VernacExtend",
                        "fa18025fb3169e15736ded60ee86803879b98bcb"
                    ]
                },
                {
                    "command": [
                        "apply Nat.lt_le_incl.",
                        "VernacExtend",
                        "b396323bb8ea38a4010bad6f73434c8918e15ef5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord_idempotent'",
            "line_nb": 1469,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToNat_natToWord sz n); intuition.",
                        "VernacExtend",
                        "9ad1f712f49764412f5643bf21ecb69e9dda388e"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "simpl in *; omega.",
                        "VernacExtend",
                        "2e505872d892cb5022bef5b246ceb26cdd84b133"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (x * pow2 sz).",
                        "VernacExtend",
                        "67d13c334feb2f324209bd6a0a15d85ad952b85c"
                    ]
                },
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_word_le_nat'",
            "line_nb": 1478,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wle_le in H0.",
                        "VernacExtend",
                        "159c4d4b10f46e3b8fc5f4ac0261942bcc6c6c2c"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent' in H0; auto.",
                        "VernacExtend",
                        "a1ef5c0211b4a862c11ff740b0b4afef8a61c945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord_bound",
            "line_nb": 1483,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_natToWord_idempotent'.",
                        "VernacExtend",
                        "bb788bb51f277d6c6ad28976b1712cac128223be"
                    ]
                },
                {
                    "command": [
                        "eapply le_lt_trans; eauto.",
                        "VernacExtend",
                        "4e0fbe353635a53315229c43ec48f249789188c8"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_eq_natToWord",
            "line_nb": 1504,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_wordToNat.",
                        "VernacExtend",
                        "aaa0e6520fb9e253ce2e9e3acc4f387b9be39db6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlt_lt_bound",
            "line_nb": 1510,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt in H.",
                        "VernacExtend",
                        "eb25d699e131c5a049ddc78b1a43c7040abfd346"
                    ]
                },
                {
                    "command": [
                        "erewrite wordToNat_natToWord_bound in H; eauto.",
                        "VernacExtend",
                        "3b0978b9aad37f08de139513029a9c5494527fa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_wlt",
            "line_nb": 1532,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlt.",
                        "VernacExtend",
                        "dfcf4de18e6a6d6794b3aed5787c9664c88a3826"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat.",
                        "VernacExtend",
                        "626b77cc5ebf261e9a5062d6e0331d3275614af4"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in.",
                        "VernacExtend",
                        "8b9ae7df6e078b1e67815929f5d406d636411e23"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Nat2N.id.",
                        "VernacExtend",
                        "890e04acefbcc7b3ba736d626291947f75fb63ee"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_wle",
            "line_nb": 1540,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlt.",
                        "VernacExtend",
                        "dfcf4de18e6a6d6794b3aed5787c9664c88a3826"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat.",
                        "VernacExtend",
                        "626b77cc5ebf261e9a5062d6e0331d3275614af4"
                    ]
                },
                {
                    "command": [
                        "apply N.le_ngt.",
                        "VernacExtend",
                        "da398065e081cc6af34d1f813825a01628088772"
                    ]
                },
                {
                    "command": [
                        "apply N.ge_le.",
                        "VernacExtend",
                        "cdba355fbd8a2d3e59601ed933138985ce437849"
                    ]
                },
                {
                    "command": [
                        "apply Nge_in.",
                        "VernacExtend",
                        "8622a807eccc8a645330f05acac94bf7bbdd3db7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Nat2N.id.",
                        "VernacExtend",
                        "890e04acefbcc7b3ba736d626291947f75fb63ee"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlt_wle_incl",
            "line_nb": 1550,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt in H.",
                        "VernacExtend",
                        "eb25d699e131c5a049ddc78b1a43c7040abfd346"
                    ]
                },
                {
                    "command": [
                        "apply le_wle.",
                        "VernacExtend",
                        "248758de3fbfd6f99a1d377af96bf9c1a8f98a96"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_Alt2",
            "line_nb": 1556,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wminusN, wplusN, wnegN, wordBinN.",
                        "VernacExtend",
                        "50ee56fc06fd4394ad61927bc201bf79e9437576"
                    ]
                },
                {
                    "command": [
                        "destruct (weq y (natToWord sz 0)); subst.",
                        "VernacExtend",
                        "8c367a3ce47c2f088b6066724a3da9a8ea41f6c5"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- minus_n_O.",
                        "VernacExtend",
                        "6619d86ebb49ad545da3b8e8ce90de793b9e676f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- drop_sub with (k:=1) (n:=pow2 sz); try omega.",
                        "VernacExtend",
                        "29b5d80fbdb5c2212800d7e5aa01403aa47a4777"
                    ]
                },
                {
                    "command": [
                        "replace (pow2 sz - 1 * pow2 sz) with (0) by omega.",
                        "VernacExtend",
                        "f98a513fb9b97c743cf8217184b61741819cf8e8"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_O.",
                        "VernacExtend",
                        "82e76fe4a7447040940c37f8f7935de7fb153db6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent' with (n:=pow2 sz - wordToNat y).",
                        "VernacExtend",
                        "6c86c7c453a3e04732096539e7b32dd376f894b2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- drop_sub with (k:=1).",
                        "VernacExtend",
                        "85b7de624597a1e7be0a474d70931b6d8254b827"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_O.",
                        "VernacExtend",
                        "82e76fe4a7447040940c37f8f7935de7fb153db6"
                    ]
                },
                {
                    "command": [
                        "replace (wordToNat x + (pow2 sz - wordToNat y) - pow2 sz) with (wordToNat x - wordToNat y).",
                        "VernacExtend",
                        "5da82dd208fdcd6b178af265cd5dd94b47f32c7d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_sub_assoc.",
                        "VernacExtend",
                        "73a2527ad0fbcebea3251eb6c00ead6c791d0d8d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "remember (wordToNat_bound y); omega.",
                        "VernacExtend",
                        "8bff3404c4b3cbb89fa9cb87659d5c2e1ab90d8d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_O.",
                        "VernacExtend",
                        "82e76fe4a7447040940c37f8f7935de7fb153db6"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_sub_assoc; [| remember (wordToNat_bound y); omega ].",
                        "VernacExtend",
                        "31be7d70802adf804af98ddd00e66dd520732cbb"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.add_sub_assoc.",
                        "VernacExtend",
                        "c62f75e663ede8a5328ac7127b0c3c521e7b1d88"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Nat.nlt_ge.",
                        "VernacExtend",
                        "c008901b7dc2bffa6c2d8181d0932990b0f0a5f3"
                    ]
                },
                {
                    "command": [
                        "unfold not in *; intros.",
                        "VernacExtend",
                        "85e2e313807dfbe3840e1372ee46318228903893"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply lt_wlt; auto.",
                        "VernacExtend",
                        "e2f327eeb4a035eaa914ca6a331613582e91d8e1"
                    ]
                },
                {
                    "command": [
                        "apply Nat.sub_lt.",
                        "VernacExtend",
                        "0b240643e3750275fa1d0fc160dc9620b5e62495"
                    ]
                },
                {
                    "command": [
                        "remember (wordToNat_bound y); omega.",
                        "VernacExtend",
                        "8bff3404c4b3cbb89fa9cb87659d5c2e1ab90d8d"
                    ]
                },
                {
                    "command": [
                        "assert (wordToNat y <> 0); try omega.",
                        "VernacExtend",
                        "425038264dfc6a7f12f4bea24e0286dab3ce7f1a"
                    ]
                },
                {
                    "command": [
                        "assert (wordToN y <> wordToN (natToWord sz 0)).",
                        "VernacExtend",
                        "ed147033033c1281032f4ee290ea8355faf45681"
                    ]
                },
                {
                    "command": [
                        "unfold not in *.",
                        "VernacExtend",
                        "e992d731987459002424cdefea553f6182b3a61b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply n.",
                        "VernacExtend",
                        "ed7192228e57856197020582fd87949160a69557"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj.",
                        "VernacExtend",
                        "80d23ac951fab63d04cca84ead9106e2b3a29d05"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat in H0.",
                        "VernacExtend",
                        "3ed0c7dc0b64d238e7978b07bfb8b682df7f61fb"
                    ]
                },
                {
                    "command": [
                        "unfold not in *.",
                        "VernacExtend",
                        "e992d731987459002424cdefea553f6182b3a61b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply N2Nat.inj.",
                        "VernacExtend",
                        "2423f651761c208bffa88c3ae2702e3349593bea"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Nat2N.id.",
                        "VernacExtend",
                        "890e04acefbcc7b3ba736d626291947f75fb63ee"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlt_wf",
            "line_nb": 1604,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply well_founded_lt_compat with (f:=@wordToNat sz).",
                        "VernacExtend",
                        "565dc901ff21e75c5956b9207fb7b07125f96fb0"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt.",
                        "VernacExtend",
                        "7220994bfebe053b045266072346b763ea04ca2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_minus_one'",
            "line_nb": 1629,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz.",
                        "VernacExtend",
                        "5c355ae80bef560efa28a461b9aedbc840295a56"
                    ]
                },
                {
                    "command": [
                        "rewrite word0 with (w:=n) in H.",
                        "VernacExtend",
                        "d1ad073f2f8618f9f93cb95e516842c9f95850ff"
                    ]
                },
                {
                    "command": [
                        "rewrite word0 with (w:=natToWord 0 0) in H.",
                        "VernacExtend",
                        "0d0fcbb586220ebab95a9ade9cda110ff9cd70bc"
                    ]
                },
                {
                    "command": [
                        "exfalso; auto.",
                        "VernacExtend",
                        "b98513ca75f1ac3b571db016be59d6856c455305"
                    ]
                },
                {
                    "command": [
                        "destruct (weq n (natToWord (S sz) 0)); intuition.",
                        "VernacExtend",
                        "9d8adacb7c27eeb3e311db77140d516fd968ff67"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_Alt.",
                        "VernacExtend",
                        "09e0d096079192ab7d82fa071115736a4f313666"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_Alt2.",
                        "VernacExtend",
                        "fce7ac4f1fc5316b3e9d3e18ab1064d8675e226e"
                    ]
                },
                {
                    "command": [
                        "unfold wordBinN.",
                        "VernacExtend",
                        "259bbf7aeaef361391fd511f478d4eca2384f62d"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_1.",
                        "VernacExtend",
                        "63a56ca1beaee854c748ed5f2bb1ce44fb38a504"
                    ]
                },
                {
                    "command": [
                        "erewrite wordToNat_natToWord_bound with (bound:=n); try omega.",
                        "VernacExtend",
                        "ac155d8b24cad00e4cc0e7dac634b3a2b402c15b"
                    ]
                },
                {
                    "command": [
                        "assert (wordToNat n <> 0); try omega.",
                        "VernacExtend",
                        "65ab49bf5a121571cf582f5f1a85e0448ac43a73"
                    ]
                },
                {
                    "command": [
                        "unfold not; intros; apply n0; clear n0.",
                        "VernacExtend",
                        "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; rewrite natToWord_wordToNat; auto.",
                        "VernacExtend",
                        "823c5b0a2c3e21d16ec19fee786aa38d034c8600"
                    ]
                },
                {
                    "command": [
                        "unfold not; intros; apply n0; clear n0.",
                        "VernacExtend",
                        "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt in H0.",
                        "VernacExtend",
                        "1c4045f8263b2f1d3dc76440ed2bddc0027fff13"
                    ]
                },
                {
                    "command": [
                        "replace n with (natToWord (S sz) (wordToNat n)) by (rewrite natToWord_wordToNat; auto).",
                        "VernacExtend",
                        "0f20dba534e50827fde67460c7deba1d7906719f"
                    ]
                },
                {
                    "command": [
                        "f_equal; rewrite roundTrip_1 in *.",
                        "VernacExtend",
                        "483169d6c5ae07403db823a27474cd78ce593586"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_minus_one",
            "line_nb": 1650,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite Nat.succ_inj with (n2 := wordToNat (n ^- (natToWord sz 1))); auto.",
                        "VernacExtend",
                        "29a5c1d1c7b8d03ea32cce35e44f368ffe974e00"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_minus_one'; auto.",
                        "VernacExtend",
                        "07770e536f0f7ac397a02126c593e99718bf6796"
                    ]
                },
                {
                    "command": [
                        "assert (wordToNat n <> 0).",
                        "VernacExtend",
                        "bf3b682d91ec1dc200b85014e03b0a1638db2d69"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "erewrite <- roundTrip_0 with (sz := sz) in H0.",
                        "VernacExtend",
                        "fd5daaa18afdd41ad7bbc1aeb85c6f7f28be802e"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj in H0; tauto.",
                        "VernacExtend",
                        "f42d461781cd84e96019d3dbb9cf5e939c2301fa"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus",
            "line_nb": 1660,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_minus",
            "line_nb": 1663,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_Alt.",
                        "VernacExtend",
                        "09e0d096079192ab7d82fa071115736a4f313666"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_Alt2; auto.",
                        "VernacExtend",
                        "582554ac42090804aa322ed3cea82fa783d477e0"
                    ]
                },
                {
                    "command": [
                        "unfold wordBinN.",
                        "VernacExtend",
                        "259bbf7aeaef361391fd511f478d4eca2384f62d"
                    ]
                },
                {
                    "command": [
                        "eapply wordToNat_natToWord_idempotent'.",
                        "VernacExtend",
                        "3645d81635b4dbbddd6423e4ffd87d9de013a52e"
                    ]
                },
                {
                    "command": [
                        "apply lt_minus.",
                        "VernacExtend",
                        "c3124db31ceac1e42c0f8ec06c469740c831ce45"
                    ]
                },
                {
                    "command": [
                        "apply wle_le; auto.",
                        "VernacExtend",
                        "e8864300b174d135c1eaabfda866eb489432449d"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_minus'",
            "line_nb": 1674,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wminus_minus.",
                        "VernacExtend",
                        "1c0f14953ee9d693e2eea17d8c0dd5a1e258c1a2"
                    ]
                },
                {
                    "command": [
                        "unfold wlt.",
                        "VernacExtend",
                        "dfcf4de18e6a6d6794b3aed5787c9664c88a3826"
                    ]
                },
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out in C.",
                        "VernacExtend",
                        "91373df64bfc198bd48837ee50eb157f9b37aade"
                    ]
                },
                {
                    "command": [
                        "rewrite! wordToN_to_nat in *.",
                        "VernacExtend",
                        "a3a0de13d518df40ef8f105cb86ec0aa72d68165"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_discriminate",
            "line_nb": 1688,
            "steps": [
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction sz.",
                        "VernacExtend",
                        "f0dd08ea79213d276af44d6a53e7f263ac45a85a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord in H0; fold natToWord in H0.",
                        "VernacExtend",
                        "ad22452f17622928cfab17a010eb5616f8908bda"
                    ]
                },
                {
                    "command": [
                        "discriminate H0.",
                        "VernacExtend",
                        "cd7043143d6a4e1505f0ccbc30dbfce403162dec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bit_dec",
            "line_nb": 1696,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word a).",
                        "VernacExtend",
                        "9310357bd7abfc292399f456ff240f9324cb4ea4"
                    ]
                },
                {
                    "command": [
                        "replace (wtl a) with WO by auto.",
                        "VernacExtend",
                        "a814a5f5c099735b3fe43a99b63c2e4e5711e11d"
                    ]
                },
                {
                    "command": [
                        "destruct (whd a).",
                        "VernacExtend",
                        "45461cb20132eb3734863d47400ddf7d080fde93"
                    ]
                },
                {
                    "command": [
                        "right; apply eq_refl.",
                        "VernacExtend",
                        "08a538bc6244c82bcb92e6ddd9e94d9f84231950"
                    ]
                },
                {
                    "command": [
                        "left; apply eq_refl.",
                        "VernacExtend",
                        "4376963f317300556a259be0f6a6705fd2abafe8"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "neq0_wneq0",
            "line_nb": 1704,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_neq_inj.",
                        "VernacExtend",
                        "746c76c8de51eec68b9a63e4eb9a656329d73a23"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; auto.",
                        "VernacExtend",
                        "bb8a23542e356dceec156ba02149ad653766ed45"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_neq_inj in H.",
                        "VernacExtend",
                        "3e7042166cea3499d0a6aeb63a12f3cabfc154da"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0 in H; auto.",
                        "VernacExtend",
                        "0b1605c79c77bccd8425449b5688598c86c6cf87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt0_wneq0",
            "line_nb": 1711,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply neq0_wneq0; omega.",
                        "VernacExtend",
                        "9583df49bd288c1e489343159533e57a582942ef"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_neq_inj in H.",
                        "VernacExtend",
                        "3e7042166cea3499d0a6aeb63a12f3cabfc154da"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0 in H; omega.",
                        "VernacExtend",
                        "0810cb2baabe1b1fdcb7fb2fd136829b8f7e742f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weq_minus1_wlt",
            "line_nb": 1717,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_wlt; subst.",
                        "VernacExtend",
                        "5c84400bbda323ee237bd6e3ece3fdc35192a9e0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_minus_one; auto.",
                        "VernacExtend",
                        "913e98549af1966c9398096383723290bcdd3a3b"
                    ]
                },
                {
                    "command": [
                        "apply gt0_wneq0 in H.",
                        "VernacExtend",
                        "4b7b189b61eb08f31389734088741c1ee2b5e992"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordnat_minus1_eq",
            "line_nb": 1724,
            "steps": [
                {
                    "command": [
                        "intros; rewrite wordToNat_minus_one; auto.",
                        "VernacExtend",
                        "eb88a5ab7080ee280d59e703fae6efe0c16c532f"
                    ]
                },
                {
                    "command": [
                        "apply gt0_wneq0; subst; auto.",
                        "VernacExtend",
                        "e3722dccd4fb0a6a06281581a4044c4cbc684949"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_0",
            "line_nb": 1728,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlshift.",
                        "VernacExtend",
                        "66c7242d1a44cdfa4c18889456412e0d393666ac"
                    ]
                },
                {
                    "command": [
                        "eapply split1_0.",
                        "VernacExtend",
                        "b9526e96265815dfeacefb8c31afdf8675bc0161"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wrshift_0",
            "line_nb": 1733,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wrshift.",
                        "VernacExtend",
                        "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_n_0.",
                        "VernacExtend",
                        "434a961f7faf0cbb094519f34483fc1dc6a8c8c9"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_bitwp",
            "line_nb": 1772,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlshift.",
                        "VernacExtend",
                        "66c7242d1a44cdfa4c18889456412e0d393666ac"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wrshift_bitwp",
            "line_nb": 1778,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wrshift.",
                        "VernacExtend",
                        "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_wlshift",
            "line_nb": 1784,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wlshift.",
                        "VernacExtend",
                        "66c7242d1a44cdfa4c18889456412e0d393666ac"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_split1.",
                        "VernacExtend",
                        "28f2954e63b64ae0f72a3ef91d5053ebfc0a90ea"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_eq_rect.",
                        "VernacExtend",
                        "322ece9bbc4ce7d1b1005ec4af79b774ae89e95f"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_combine.",
                        "VernacExtend",
                        "2e90e95fe8ba302b7ecb648076c850d7a6b6b7dc"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_zero.",
                        "VernacExtend",
                        "62951154169bd7f777a65b1e843b9ad696843a34"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_wrshift",
            "line_nb": 1794,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wrshift.",
                        "VernacExtend",
                        "5926a560ef78a5f45bbf9f5305f1529b1f91fe20"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_split2.",
                        "VernacExtend",
                        "5c8fa006082415ea523d40395a339f2af6289329"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_eq_rect.",
                        "VernacExtend",
                        "322ece9bbc4ce7d1b1005ec4af79b774ae89e95f"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_combine.",
                        "VernacExtend",
                        "2e90e95fe8ba302b7ecb648076c850d7a6b6b7dc"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_zero.",
                        "VernacExtend",
                        "62951154169bd7f777a65b1e843b9ad696843a34"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div2_pow2_twice",
            "line_nb": 1813,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (pow2 n + (pow2 n + 0)) with (2 * pow2 n) by omega.",
                        "VernacExtend",
                        "7dc24672faa54188a0adccbdf595add11a19b841"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div2_double.",
                        "VernacExtend",
                        "130a75bd67b711537ca5456b5be2e6ba6301d35e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_or_wordToNat_S",
            "line_nb": 1819,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz.",
                        "VernacExtend",
                        "5c355ae80bef560efa28a461b9aedbc840295a56"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite (word0 n).",
                        "VernacExtend",
                        "ef833d5e9afc8c185350dbbc2ddad0af601ced2b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (weq n $0); intuition.",
                        "VernacExtend",
                        "d2a8d68dbda5fc2bef0ea2789d6a69a3f921a199"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists (wordToNat (n ^- $1)); intuition.",
                        "VernacExtend",
                        "d02771de7813e899690265712b1a995a124fac1c"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_Alt.",
                        "VernacExtend",
                        "09e0d096079192ab7d82fa071115736a4f313666"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_Alt2.",
                        "VernacExtend",
                        "fce7ac4f1fc5316b3e9d3e18ab1064d8675e226e"
                    ]
                },
                {
                    "command": [
                        "unfold wordBinN.",
                        "VernacExtend",
                        "259bbf7aeaef361391fd511f478d4eca2384f62d"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_1.",
                        "VernacExtend",
                        "63a56ca1beaee854c748ed5f2bb1ce44fb38a504"
                    ]
                },
                {
                    "command": [
                        "erewrite wordToNat_natToWord_bound with (bound:=n); try omega.",
                        "VernacExtend",
                        "ac155d8b24cad00e4cc0e7dac634b3a2b402c15b"
                    ]
                },
                {
                    "command": [
                        "assert (wordToNat n <> 0); try omega.",
                        "VernacExtend",
                        "65ab49bf5a121571cf582f5f1a85e0448ac43a73"
                    ]
                },
                {
                    "command": [
                        "unfold not; intros; apply n0; clear n0.",
                        "VernacExtend",
                        "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_wordToNat; auto.",
                        "VernacExtend",
                        "adb80867dd45dba4f4c5828a7a9ac6cc141aa99b"
                    ]
                },
                {
                    "command": [
                        "unfold not; intros; apply n0; clear n0.",
                        "VernacExtend",
                        "e5eb7b6f21f13527d6df5c4e255bef301c64db19"
                    ]
                },
                {
                    "command": [
                        "apply wlt_lt in H.",
                        "VernacExtend",
                        "eb25d699e131c5a049ddc78b1a43c7040abfd346"
                    ]
                },
                {
                    "command": [
                        "replace n with (natToWord (S sz) (wordToNat n)) by (rewrite natToWord_wordToNat; auto).",
                        "VernacExtend",
                        "0f20dba534e50827fde67460c7deba1d7906719f"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_1 in *.",
                        "VernacExtend",
                        "7ad7339c8a2754d8c189fe9d9612cf51a66b0c4d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wbit_or_same",
            "line_nb": 1844,
            "steps": [
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "induction sz; intros; try omega.",
                        "VernacExtend",
                        "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
                    ]
                },
                {
                    "command": [
                        "unfold wbit, wzero, wor in *.",
                        "VernacExtend",
                        "caaeff76cfd4c150af82be5d64159e4ab4d9d7a4"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct (zero_or_wordToNat_S n).",
                        "VernacExtend",
                        "e07808f438638d3a200f7fdec4885f3b21928da5"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite roundTrip_0 in *.",
                        "VernacExtend",
                        "934e547dbf6c042ce77b16dc1eb322b1610eea6e"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in *.",
                        "VernacExtend",
                        "6efc0fda494639e9bce9f9de4bc64aa53e239e85"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "apply (inj_pair2_eq_dec _ eq_nat_dec) in H5.",
                        "VernacExtend",
                        "5f64d4119b592f379e6615784ecdd7376f0018c2"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_pow2_twice in H5.",
                        "VernacExtend",
                        "e963b911d9243aed3313cd7a2a2506a11dc1faa8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- H2 in H5.",
                        "VernacExtend",
                        "82cb912108c1fb4442dd45aac7ed3ad4240fe075"
                    ]
                },
                {
                    "command": [
                        "eapply IHsz; eauto.",
                        "VernacExtend",
                        "d1143a6557f3df6f00ff9a87a50eea2d8944fb85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wbit_or_other",
            "line_nb": 1862,
            "steps": [
                {
                    "command": [
                        "induction sz; intros; try omega.",
                        "VernacExtend",
                        "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
                    ]
                },
                {
                    "command": [
                        "unfold wbit, wzero, wand.",
                        "VernacExtend",
                        "a51afcc3bd190105af2cc3bf6d41b6dedd7e3e25"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (zero_or_wordToNat_S n1); destruct (zero_or_wordToNat_S n2); try congruence; destruct_conjs; subst; try rewrite roundTrip_0.",
                        "VernacExtend",
                        "0e13e576e9255f896995d9e60b9a01cf7b1ba01d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite H4; simpl; repeat rewrite mod2_pow2_twice; f_equal.",
                        "VernacExtend",
                        "8d70f4ed6ad71b529aa284fd717913098e6b6ebb"
                    ]
                },
                {
                    "command": [
                        "rewrite wand_kill; auto.",
                        "VernacExtend",
                        "ceab42e92a4305e972cb68b429595e7f8ba7fc87"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite H4; simpl; repeat rewrite mod2_pow2_twice; f_equal.",
                        "VernacExtend",
                        "8d70f4ed6ad71b529aa284fd717913098e6b6ebb"
                    ]
                },
                {
                    "command": [
                        "rewrite wand_comm; rewrite wand_kill; auto.",
                        "VernacExtend",
                        "e5ca676e911b156430791a9a94df4e15e8cebd78"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite H4; repeat rewrite H6; simpl.",
                        "VernacExtend",
                        "a264b12c625ec024c0c10daa91eab84d52967061"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mod2_pow2_twice; f_equal.",
                        "VernacExtend",
                        "5177a7e41f3ccae700e220c155a51bb05161620e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite div2_pow2_twice.",
                        "VernacExtend",
                        "505c83fae0a8983028476799afbc4cc73662d991"
                    ]
                },
                {
                    "command": [
                        "eapply IHsz; try omega.",
                        "VernacExtend",
                        "dbfadd0942fad9179fd1b0471740111e7811261f"
                    ]
                },
                {
                    "command": [
                        "apply word_neq.",
                        "VernacExtend",
                        "bb2a1c86988d2ae89afa9c3390ed9b2553f0eea2"
                    ]
                },
                {
                    "command": [
                        "unfold not in *; intros; apply H1; clear H1.",
                        "VernacExtend",
                        "2b773177ffc4bc851485016ebeb89d5143ec8dbe"
                    ]
                },
                {
                    "command": [
                        "apply sub_0_eq; rewrite <- H2.",
                        "VernacExtend",
                        "441b6e799348b32890a894a6f9678329996e9155"
                    ]
                },
                {
                    "command": [
                        "ring_sz sz'.",
                        "VernacExtend",
                        "1caaf6d9e050e53be25f56980d38356557d17528"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wbit_and_not",
            "line_nb": 1880,
            "steps": [
                {
                    "command": [
                        "induction sz; intros; try omega.",
                        "VernacExtend",
                        "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
                    ]
                },
                {
                    "command": [
                        "unfold wbit, wzero, wand, wnot.",
                        "VernacExtend",
                        "60fcacdcf1302da0587f4ee814034e26165c9d1a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply andb_negb_r.",
                        "VernacExtend",
                        "e7932e8c665f0635946d0ad9e61d348bbfeafa6c"
                    ]
                },
                {
                    "command": [
                        "destruct (zero_or_wordToNat_S n); subst.",
                        "VernacExtend",
                        "b27654e83788e0fd791391c7228057f68fc17473"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; simpl.",
                        "VernacExtend",
                        "ae389c38d714f9a28a446eea60398f8df43af9a3"
                    ]
                },
                {
                    "command": [
                        "apply wand_kill.",
                        "VernacExtend",
                        "a55b81da257aa07dbaaa2ddd6785d057ed94681e"
                    ]
                },
                {
                    "command": [
                        "do 2 destruct H0.",
                        "VernacExtend",
                        "5b82514099331ad1eb615c0965f056f51574e42c"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; simpl.",
                        "VernacExtend",
                        "2523d8787e2d3d9372387c776fdd44c2630b7972"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_pow2_twice.",
                        "VernacExtend",
                        "f74ee52ddd10a6af2cb0ec4c710f6f0fbfa2ec65"
                    ]
                },
                {
                    "command": [
                        "fold wnot.",
                        "VernacExtend",
                        "9893ab1e4d97b2577d280ea129a441d383a01784"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "eapply IHsz.",
                        "VernacExtend",
                        "c77a1c64bec605d6cf47fa90f84a68dd9e62897a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wbit_and_not_other",
            "line_nb": 1897,
            "steps": [
                {
                    "command": [
                        "induction sz; intros; try omega.",
                        "VernacExtend",
                        "af138ab7c730867a66bd93b5a24c9b30e8cfdc8e"
                    ]
                },
                {
                    "command": [
                        "unfold wbit, wzero, wand, wnot.",
                        "VernacExtend",
                        "60fcacdcf1302da0587f4ee814034e26165c9d1a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (zero_or_wordToNat_S n1); destruct (zero_or_wordToNat_S n2); try congruence; destruct_conjs; subst; fold wnot; try rewrite roundTrip_0; simpl; f_equal.",
                        "VernacExtend",
                        "36d098c53ae71f863eaabd0fb8fa65247cb4412f"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; simpl; rewrite mod2_pow2_twice; auto.",
                        "VernacExtend",
                        "15ad68671d905bdd2273239ba2c0c66fbd3d9613"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; simpl; rewrite div2_pow2_twice; apply wand_kill.",
                        "VernacExtend",
                        "9564fc389bfdeca1df6630d017845f1549a68ba6"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; simpl; rewrite mod2_pow2_twice; auto.",
                        "VernacExtend",
                        "15ad68671d905bdd2273239ba2c0c66fbd3d9613"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; simpl; rewrite div2_pow2_twice.",
                        "VernacExtend",
                        "2df3c380405d095a232b273bb3f8e3cc29bb00ca"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_zero.",
                        "VernacExtend",
                        "62951154169bd7f777a65b1e843b9ad696843a34"
                    ]
                },
                {
                    "command": [
                        "rewrite wand_comm.",
                        "VernacExtend",
                        "d8e33a2f0f64979fb3e314c8b1e921efc5ea3f8b"
                    ]
                },
                {
                    "command": [
                        "apply wand_unit.",
                        "VernacExtend",
                        "dcf57125c3b7530a5fa678c0c0f7555ab06e9634"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; simpl; rewrite mod2_pow2_twice; simpl; apply andb_true_r.",
                        "VernacExtend",
                        "d49fa95834add41d3bed29860adadce11bb4027b"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; rewrite H6; simpl.",
                        "VernacExtend",
                        "2aaccd17c382982dd2cc5b3021779caf16bf2e75"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite div2_pow2_twice.",
                        "VernacExtend",
                        "505c83fae0a8983028476799afbc4cc73662d991"
                    ]
                },
                {
                    "command": [
                        "apply IHsz; try omega.",
                        "VernacExtend",
                        "570fbe6cca2a362a8996e029cb95a1aba8b7b8d4"
                    ]
                },
                {
                    "command": [
                        "apply word_neq.",
                        "VernacExtend",
                        "bb2a1c86988d2ae89afa9c3390ed9b2553f0eea2"
                    ]
                },
                {
                    "command": [
                        "unfold not in *; intros; apply H1.",
                        "VernacExtend",
                        "2257138525a56eee45353ca8c2b77c7b01bff2c4"
                    ]
                },
                {
                    "command": [
                        "apply sub_0_eq.",
                        "VernacExtend",
                        "bc6031e71b20c7e7c7943cdd602d2b29f77edaa6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "ring_sz sz'.",
                        "VernacExtend",
                        "1caaf6d9e050e53be25f56980d38356557d17528"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wzero",
            "line_nb": 1919,
            "steps": [
                {
                    "command": [
                        "unfold wzero; intros.",
                        "VernacExtend",
                        "c9e1a629c7316fee17f86df617542cc791b1fdc0"
                    ]
                },
                {
                    "command": [
                        "apply roundTrip_0.",
                        "VernacExtend",
                        "919cd0ef158865677a5554cf8e7a6e207da79ba7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_wzero",
            "line_nb": 1923,
            "steps": [
                {
                    "command": [
                        "intros; rewrite wordToN_nat.",
                        "VernacExtend",
                        "a82843214b793af92031f988b5c273ccefbd0b79"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wzero.",
                        "VernacExtend",
                        "fe66869aedb7ca996577b7cf47bb140834751f8c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_zero",
            "line_nb": 1928,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intros; [reflexivity|].",
                        "VernacExtend",
                        "275daf5016aad17ab51e741d3b998c23ca5736e4"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; reflexivity.",
                        "VernacExtend",
                        "fde488caf9f19fc208eb1e560bb8947537ecb28e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_one",
            "line_nb": 1932,
            "steps": [
                {
                    "command": [
                        "cbn; intros.",
                        "VernacExtend",
                        "65f7b8255187eba349f5fe5e27535a24d94499db"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_zero; reflexivity.",
                        "VernacExtend",
                        "8b6eed1b45482ab19f633679e91369b2baec6489"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wzero'",
            "line_nb": 1936,
            "steps": [
                {
                    "command": [
                        "induction sz; auto.",
                        "VernacExtend",
                        "3e45bf00406d7518482edf33532df9d33ff94496"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wzero",
            "line_nb": 1939,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wzero'_def.",
                        "VernacExtend",
                        "fa9016326a1619c52f176541f311be8cee8dee47"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_wzero'.",
                        "VernacExtend",
                        "390d24f5b9afa9062872ab7c50b2d09a16a957e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wones",
            "line_nb": 1944,
            "steps": [
                {
                    "command": [
                        "induction sz; cbn; auto.",
                        "VernacExtend",
                        "ed58935e80aa44984337cd162fbfb076e2a6933b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_0",
            "line_nb": 1947,
            "steps": [
                {
                    "command": [
                        "induction sz; intros.",
                        "VernacExtend",
                        "ace8bc7c60d9dbfbf7275dd19134bb0f32243d41"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "assert (#m = 0) as N by omega.",
                        "VernacExtend",
                        "9ae29333db1451b704a1c0deb9c5296a40a44291"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (roundTrip_0 1) in N.",
                        "VernacExtend",
                        "a0ba84f5df72ad5b56bebfa75f2e278a57f0732f"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj in N.",
                        "VernacExtend",
                        "ec4e9b7ed7b6d88782374b6db75a1f78dc254c8a"
                    ]
                },
                {
                    "command": [
                        "subst m.",
                        "VernacExtend",
                        "9ba78b8037512180a4349842defa7f5fabdd6010"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (shatter_word_S m) as P.",
                        "VernacExtend",
                        "3c9b5af598a6e14615adf31acab6fa10c6cca511"
                    ]
                },
                {
                    "command": [
                        "destruct P as [b [m0 E]].",
                        "VernacExtend",
                        "59a936a35ae0e7195dca33fbdf8d4a7b47461143"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold wmsb.",
                        "VernacExtend",
                        "b27176a777c0e891aa47258a735b2be72891446e"
                    ]
                },
                {
                    "command": [
                        "fold wmsb.",
                        "VernacExtend",
                        "efcd6474f0fdede5cb57524ece537c6123340cc3"
                    ]
                },
                {
                    "command": [
                        "apply IHsz.",
                        "VernacExtend",
                        "51b897054dae4c2b5297e41069e63149b8a50ec5"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct b; omega.",
                        "VernacExtend",
                        "ac52b71115edcaea4a9f2a4ee8649c7fd2091283"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_1",
            "line_nb": 1967,
            "steps": [
                {
                    "command": [
                        "induction sz; intros.",
                        "VernacExtend",
                        "ace8bc7c60d9dbfbf7275dd19134bb0f32243d41"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "assert (#m = 1) as N by omega.",
                        "VernacExtend",
                        "13ed2cedb11d2f510d91da35b33460e561e5f71d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (roundTrip_1 1) in N.",
                        "VernacExtend",
                        "213afa97689d687f9fa928c44370c2a706abebc9"
                    ]
                },
                {
                    "command": [
                        "apply (wordToNat_inj m ($ 1)) in N.",
                        "VernacExtend",
                        "4c84d8c54922c1b4c826a9d5cfcbb6a5403db2db"
                    ]
                },
                {
                    "command": [
                        "subst m.",
                        "VernacExtend",
                        "9ba78b8037512180a4349842defa7f5fabdd6010"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (shatter_word_S m) as P.",
                        "VernacExtend",
                        "3c9b5af598a6e14615adf31acab6fa10c6cca511"
                    ]
                },
                {
                    "command": [
                        "destruct P as [b [m0 E]].",
                        "VernacExtend",
                        "59a936a35ae0e7195dca33fbdf8d4a7b47461143"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold wmsb.",
                        "VernacExtend",
                        "b27176a777c0e891aa47258a735b2be72891446e"
                    ]
                },
                {
                    "command": [
                        "fold wmsb.",
                        "VernacExtend",
                        "efcd6474f0fdede5cb57524ece537c6123340cc3"
                    ]
                },
                {
                    "command": [
                        "apply IHsz.",
                        "VernacExtend",
                        "51b897054dae4c2b5297e41069e63149b8a50ec5"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct b; omega.",
                        "VernacExtend",
                        "ac52b71115edcaea4a9f2a4ee8649c7fd2091283"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_0_natToWord",
            "line_nb": 1987,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_0.",
                        "VernacExtend",
                        "652a23f7a41e8aaa93928bba7137945d2aadb333"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_natToWord_le (S sz) n).",
                        "VernacExtend",
                        "52342b3d1f01e2a73f5387a8c0fbc70b52c929fa"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in H.",
                        "VernacExtend",
                        "5d91c35e36aa786cb67a130ba2bb686b3092e917"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in H.",
                        "VernacExtend",
                        "babb70152eeb448d4910e3d0f27f0f3ac348e870"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_1_natToWord",
            "line_nb": 1995,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_1.",
                        "VernacExtend",
                        "a6c729fa6587be197091ff6b60f7f19cb846614c"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'; simpl; omega.",
                        "VernacExtend",
                        "857392608265795e5a5f2a0aa24b00e70d521f92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_wzero'",
            "line_nb": 2000,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; auto.",
                        "VernacExtend",
                        "3c5ff83bd018a1bdf50844a8045b7bb97567268f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz; auto.",
                        "VernacExtend",
                        "2973f5a0da9cb6e1e18def41b71f6cc10f0e68c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wzero'",
            "line_nb": 2004,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; intros.",
                        "VernacExtend",
                        "5714496e388c686b08c1c9ac23abf2832594244a"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero'.",
                        "VernacExtend",
                        "a18eead29dbcb06a4526e699bbff8c001860f19c"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_wzero'.",
                        "VernacExtend",
                        "468227fdef3c667dd15cf8a3d2a2f8463bc667d3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wzero",
            "line_nb": 2010,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; intros.",
                        "VernacExtend",
                        "5714496e388c686b08c1c9ac23abf2832594244a"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero.",
                        "VernacExtend",
                        "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_wzero.",
                        "VernacExtend",
                        "7b8e4359d7bad177e9ca2f5e3fcd37b5b8eb97c5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_existT",
            "line_nb": 2016,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (sz1 = sz2) by (apply eq_sigT_fst in H; auto); subst.",
                        "VernacExtend",
                        "ccb067a413781da4d5c55e0706cc4dbb501a23ea"
                    ]
                },
                {
                    "command": [
                        "destruct_existT; reflexivity.",
                        "VernacExtend",
                        "60030bd161e378ea07846bdbd7e38e88972bf1cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "destruct_word_S",
            "line_nb": 2021,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "refine (match w with | WO => _ | WS b v => _ end); unfold IDProp; eauto.",
                        "VernacExtend",
                        "2d8766a56600ae3d86bdd706d5c025536c596395"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "induct_word_S",
            "line_nb": 2025,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [b E]].",
                        "VernacExtend",
                        "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
                    ]
                },
                {
                    "command": [
                        "subst w.",
                        "VernacExtend",
                        "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
                    ]
                },
                {
                    "command": [
                        "rewrite (word0 v).",
                        "VernacExtend",
                        "3ef0992b1a5054242ed6834b204f196742764e97"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [b E]].",
                        "VernacExtend",
                        "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
                    ]
                },
                {
                    "command": [
                        "subst w.",
                        "VernacExtend",
                        "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S v) as [w [b0 E]].",
                        "VernacExtend",
                        "a1fbcd25746f4756a0840da6ac1aee47560f3c66"
                    ]
                },
                {
                    "command": [
                        "subst v.",
                        "VernacExtend",
                        "a1d4af197c860364e3e3c9b734079b6e191cf10c"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_ws",
            "line_nb": 2040,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cbn.",
                        "VernacExtend",
                        "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [c E]].",
                        "VernacExtend",
                        "0478bb6398650102e54df9e9cabc86707dff430d"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_extz",
            "line_nb": 2047,
            "steps": [
                {
                    "command": [
                        "induction n; intros; auto.",
                        "VernacExtend",
                        "8a5f09706e663dcf641b10d753ca85dbe7b5e8ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_default",
            "line_nb": 2050,
            "steps": [
                {
                    "command": [
                        "dependent induction w; intros; intuition idtac.",
                        "VernacExtend",
                        "16d51d893184c7a16e7bec071eb35ae84ed90822"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_nat_cast",
            "line_nb": 2053,
            "steps": [
                {
                    "command": [
                        "destruct sz1; intros.",
                        "VernacExtend",
                        "d5b5c46d2b35efb424feaad3d0ab173d25adfc70"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst sz2.",
                        "VernacExtend",
                        "7f96ab5f0d7c2453297ae69f261351aea49ad2a3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct sz2; [discriminate|].",
                        "VernacExtend",
                        "9f992bac9df18f89dc25a0e4a30c5aac791b8d28"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [b0 E]].",
                        "VernacExtend",
                        "7b9334c8c5a4d085249976a5057706630463cf90"
                    ]
                },
                {
                    "command": [
                        "subst w.",
                        "VernacExtend",
                        "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
                    ]
                },
                {
                    "command": [
                        "pose proof (eq_add_S sz1 sz2 Hsz) as Hsz'.",
                        "VernacExtend",
                        "a3cc9a16531e8a11100bea385a018847c98bcbfd"
                    ]
                },
                {
                    "command": [
                        "subst sz2.",
                        "VernacExtend",
                        "7f96ab5f0d7c2453297ae69f261351aea49ad2a3"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_eq_rect.",
                        "VernacExtend",
                        "f7a284c511a8161c46bf856ee7a45522c014617a"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "erewrite (WS_eq_rect _ _ _ eq_refl).",
                        "VernacExtend",
                        "a7da482b82c2bf37cdd724f1ccecb438d810639b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_eq_rect",
            "line_nb": 2069,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nat_cast_eq_rect.",
                        "VernacExtend",
                        "1f0c0d497c4263046e33d54fd544f63b906b9c43"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_nat_cast.",
                        "VernacExtend",
                        "f27a11415ff1561b06d79948b035c38a9280f61f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_cast_inj",
            "line_nb": 2075,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "rewrite? nat_cast_same in H.",
                        "VernacExtend",
                        "08834847b154693bb260b28324937b2e43dfa024"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wtl_nat_cast_WS",
            "line_nb": 2081,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "destruct q.",
                        "VernacExtend",
                        "b624c9d13a802d76a1bc8238bf4bfd9fc55bd69d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_same.",
                        "VernacExtend",
                        "f958b239cae308ba1ec53366d7a92e0d5b581610"
                    ]
                },
                {
                    "command": [
                        "transitivity (wtl (WS b w)); [|reflexivity].",
                        "VernacExtend",
                        "b3df713d2cf8ef28aefb20b2e7bb8e8c5db3e6ff"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nat_cast_same.",
                        "VernacExtend",
                        "9198e28bbc35616cd6455998a0888f058a0ad50e"
                    ]
                },
                {
                    "command": [
                        "apply nat_cast_proof_irrel.",
                        "VernacExtend",
                        "aff08d88f0bf2cff2901d4a587f118dd91274171"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_split2",
            "line_nb": 2104,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (@wmsb_split2' sz).",
                        "VernacExtend",
                        "e676610fabdb593bcc1cd70aff058e55f27928e2"
                    ]
                },
                {
                    "command": [
                        "specialize (H (nat_cast _ (Nat.add_1_r sz) w) b).",
                        "VernacExtend",
                        "f2bdc73c95d4b0e0aef902726f407dd56d33b781"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_fuse in H.",
                        "VernacExtend",
                        "d1ea1646a8b4d32c88dc68582245a82745ac4b82"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (nat_cast_proof_irrel word _ _ eq_refl) in H.",
                        "VernacExtend",
                        "22fd3831cb8d796f41f92ffba3781bf725f09ef7"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_same in H.",
                        "VernacExtend",
                        "aa6fc3ad7f35d89c7b78a8137aa0b36d05040210"
                    ]
                },
                {
                    "command": [
                        "destruct (weq (split2 sz 1 w) $ (0)).",
                        "VernacExtend",
                        "edddb8260b97a3d77615c123047aa91a4db5affb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite e in H.",
                        "VernacExtend",
                        "3cced324f66c706c063fed120eb850f59f4df0d4"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_nat_cast.",
                        "VernacExtend",
                        "f27a11415ff1561b06d79948b035c38a9280f61f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in n.",
                        "VernacExtend",
                        "950037a81d91f1ad97b7f1e8cec014bbd95db506"
                    ]
                },
                {
                    "command": [
                        "apply weqb_ne in n.",
                        "VernacExtend",
                        "c8c19c0a49859f043ab25b98e961521f6851b896"
                    ]
                },
                {
                    "command": [
                        "rewrite n in H.",
                        "VernacExtend",
                        "fe009077408b11551eb2ddb1d46b49a32d373c0a"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_nat_cast.",
                        "VernacExtend",
                        "f27a11415ff1561b06d79948b035c38a9280f61f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_true_split2_wones",
            "line_nb": 2128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wmsb_split2 _ w b).",
                        "VernacExtend",
                        "0867624c9e5a36f6ba70929750c2272cbbdbc240"
                    ]
                },
                {
                    "command": [
                        "destruct (weq _ _).",
                        "VernacExtend",
                        "91a978205ba184aa2a04a7b9c2d990bd2bccbd5a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0; discriminate.",
                        "VernacExtend",
                        "91d62f529d1ef1434058d28a4103101190912bbf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "clear -n.",
                        "VernacExtend",
                        "dba3a0d51422f97b7ce2c4622304c94095b6610d"
                    ]
                },
                {
                    "command": [
                        "remember (split2 sz 1 w) as ww; clear Heqww w.",
                        "VernacExtend",
                        "f9b5980b90f6f6b694a1462eb7657f7c7079bf4f"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S ww) as [w [b E]].",
                        "VernacExtend",
                        "1c20811a2c9e47e89f278b038a3a6cca3a48c184"
                    ]
                },
                {
                    "command": [
                        "subst ww.",
                        "VernacExtend",
                        "78df3c3cb04bd1e994dd7bfbc3ff7eed0b3e3473"
                    ]
                },
                {
                    "command": [
                        "rewrite (word0 w) in *.",
                        "VernacExtend",
                        "e9a835e02d82fd030cb9ffec12286df39646630b"
                    ]
                },
                {
                    "command": [
                        "clear w.",
                        "VernacExtend",
                        "d2e1687c87c6d9e7a7b4532ffe9ec9506f85281e"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct b; congruence.",
                        "VernacExtend",
                        "5907f77d111c662a8f238bfc85dd638c3591b2fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_split1_sext",
            "line_nb": 2150,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "pose proof (combine_split _ _ w) as Hw.",
                        "VernacExtend",
                        "204db3532c96eb007c6b64debacef1bcf6a2d417"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Hw; rewrite <-Hw in H at 2; clear Hw.",
                        "VernacExtend",
                        "a39c504fe62cf2353d40bca50fe0d9557ad6670d"
                    ]
                },
                {
                    "command": [
                        "rewrite split1_combine in H.",
                        "VernacExtend",
                        "8cd4a67d7447f0851cdad66504b652534e12c8b1"
                    ]
                },
                {
                    "command": [
                        "exists (split1 sz 1 w).",
                        "VernacExtend",
                        "0a91c860055529b9c2ad38d223c0a9b60e291503"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb (split1 sz 1 w) false).",
                        "VernacExtend",
                        "3cb3eaa1ff36feb339c3c74f1a4b4752f7cdd7a6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wmsb_true_split2_wones with (b:= false) by assumption.",
                        "VernacExtend",
                        "b4085047b56e410200e9a44129fda35d8ea88502"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wmsb_false_split2_wzero with (b:= false) by assumption.",
                        "VernacExtend",
                        "a02851dc0ba32f33d6b352f1e1057514437b80bf"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_combine_WO",
            "line_nb": 2164,
            "steps": [
                {
                    "command": [
                        "dependent induction w; cbn; intros; auto.",
                        "VernacExtend",
                        "520c7f5ab065a4744cb5c5f701ac759e3e82243d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_combine",
            "line_nb": 2167,
            "steps": [
                {
                    "command": [
                        "dependent induction w1; cbn; intros.",
                        "VernacExtend",
                        "bc72feaea29eff021ac6e7397c10c59afe09b9e4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using wmsb_default.",
                        "VernacExtend",
                        "1acacbcb6ca4fc876dd50e5fbd5c59aff31bac68"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using IHw1.",
                        "VernacExtend",
                        "e00d440276c453922c3cf21b57813a4768b0c0be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_combine_existT",
            "line_nb": 2174,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (eq_sigT_fst H0); subst.",
                        "VernacExtend",
                        "6b3e35c515ada3235fc395d96c45c79e18c3177a"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "auto using wmsb_combine.",
                        "VernacExtend",
                        "64ab3f31aada14eccc69b17bece45d89824769d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_zext",
            "line_nb": 2180,
            "steps": [
                {
                    "command": [
                        "destruct n; cbn; intros; [elim H; reflexivity|].",
                        "VernacExtend",
                        "91cdfa0e7539c95fa3ae9efdc0380b62c31c9ee8"
                    ]
                },
                {
                    "command": [
                        "unfold zext.",
                        "VernacExtend",
                        "571ac6df8d3bc3ed55381645bbbf7621a485ec4e"
                    ]
                },
                {
                    "command": [
                        "erewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "d9d31c7929bb98bd58ab1a26c4fa8fb82edd72c5"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_wzero.",
                        "VernacExtend",
                        "29c90bef29908498aab686c92dce72de91018123"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_zext",
            "line_nb": 2186,
            "steps": [
                {
                    "command": [
                        "dependent induction w; cbn; intros.",
                        "VernacExtend",
                        "d3bdf7ad6a00734b4fa7ca4334ce87bacfdb26bc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction n; cbn; intros; [reflexivity|].",
                        "VernacExtend",
                        "e9df3b94ea723018f297b0cc4e67526c12f2c646"
                    ]
                },
                {
                    "command": [
                        "unfold wzero in IHn; rewrite IHn; reflexivity.",
                        "VernacExtend",
                        "645d8b7622273838979c14b766510c82e6b23446"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; reflexivity.",
                        "VernacExtend",
                        "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_zext",
            "line_nb": 2194,
            "steps": [
                {
                    "command": [
                        "dependent induction w; cbn; intros.",
                        "VernacExtend",
                        "d3bdf7ad6a00734b4fa7ca4334ce87bacfdb26bc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction n; cbn; intros; [reflexivity|].",
                        "VernacExtend",
                        "e9df3b94ea723018f297b0cc4e67526c12f2c646"
                    ]
                },
                {
                    "command": [
                        "unfold wzero in IHn; rewrite IHn; reflexivity.",
                        "VernacExtend",
                        "645d8b7622273838979c14b766510c82e6b23446"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; reflexivity.",
                        "VernacExtend",
                        "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zext_wordToNat_equal_Z",
            "line_nb": 2202,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ, zext; intros.",
                        "VernacExtend",
                        "f595b5d5bab0900212c6ca19ad88b7c363065ab8"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by assumption.",
                        "VernacExtend",
                        "cc042a56701f5b9f99e12cd145913839360b6dbc"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero.",
                        "VernacExtend",
                        "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
                    ]
                },
                {
                    "command": [
                        "replace (combine w (wzero n)) with (zext w n) by reflexivity.",
                        "VernacExtend",
                        "f3923ae9aa329bebde3f49a3331892b8d81b4954"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_zext.",
                        "VernacExtend",
                        "42b75cda903b37c0d20d1c09583fbb18eb5ce342"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "rewrite <-nat_N_Z.",
                        "VernacExtend",
                        "2299e058450bb33bd2122bac1e7332da5959ff64"
                    ]
                },
                {
                    "command": [
                        "unfold Z.of_N; reflexivity.",
                        "VernacExtend",
                        "4b1e2d68dd2783cd980d2adba85c402adeb71828"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_WS_0",
            "line_nb": 2212,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_WS_1",
            "line_nb": 2215,
            "steps": [
                {
                    "command": [
                        "intros; cbn.",
                        "VernacExtend",
                        "ddc6fde6fb08b39450a614e6863558c92134d30a"
                    ]
                },
                {
                    "command": [
                        "unfold N.succ_double.",
                        "VernacExtend",
                        "c1a873a66d8701fb8999e67bf821e2401009a7d4"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN w); reflexivity.",
                        "VernacExtend",
                        "dd15b9861f38ee6dad5810baaa7be1cdcf729efd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NToWord_WS_0",
            "line_nb": 2220,
            "steps": [
                {
                    "command": [
                        "destruct n; intros; [reflexivity|].",
                        "VernacExtend",
                        "8eea9d637276bdd587a4575bfa547c73778ddce9"
                    ]
                },
                {
                    "command": [
                        "replace (2 * N.pos p)%N with (N.pos (p~0)) by reflexivity.",
                        "VernacExtend",
                        "940588bf8398b074424c4b69974ada41daf8e486"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NToWord_WS_1",
            "line_nb": 2225,
            "steps": [
                {
                    "command": [
                        "destruct n; intros; [reflexivity|].",
                        "VernacExtend",
                        "8eea9d637276bdd587a4575bfa547c73778ddce9"
                    ]
                },
                {
                    "command": [
                        "replace (2 * N.pos p)%N with (N.pos (p~0)) by reflexivity.",
                        "VernacExtend",
                        "940588bf8398b074424c4b69974ada41daf8e486"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_WS_0",
            "line_nb": 2230,
            "steps": [
                {
                    "command": [
                        "unfold wneg; intros.",
                        "VernacExtend",
                        "a34976f5b901ec32494372ac0b8676bd0840c605"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "replace (Npow2 (S sz)) with (2 * Npow2 sz)%N by reflexivity.",
                        "VernacExtend",
                        "ff734bebd5594920846aa4be4a6a7929782a3b68"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.mul_sub_distr_l.",
                        "VernacExtend",
                        "0e83b06bd6900357c0f21a744c9a19e1c407dde3"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_WS_0.",
                        "VernacExtend",
                        "8c09f82ac87f67ed3c46a7285415ef8174f90d20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NToWord_wordToN",
            "line_nb": 2237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, NToWord_nat.",
                        "VernacExtend",
                        "77eb04f0019f0f8cf8472964839b7119e3ad1864"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2N.id.",
                        "VernacExtend",
                        "3e2c35edb80f3387d3351ff0bbe84c34f3a354ad"
                    ]
                },
                {
                    "command": [
                        "apply natToWord_wordToNat.",
                        "VernacExtend",
                        "6965d8129ca01f4ec46c0570dbca7760168b1b82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "roundTripN_0",
            "line_nb": 2243,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, NToWord_nat.",
                        "VernacExtend",
                        "77eb04f0019f0f8cf8472964839b7119e3ad1864"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; reflexivity.",
                        "VernacExtend",
                        "fd0359da5b64fdfb7da55d0e8503e1801e5703f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_NToWord",
            "line_nb": 2248,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, NToWord_nat.",
                        "VernacExtend",
                        "77eb04f0019f0f8cf8472964839b7119e3ad1864"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_natToWord sz (N.to_nat n)).",
                        "VernacExtend",
                        "43e714eb2610c9b8803a5c191c6735e8816ab627"
                    ]
                },
                {
                    "command": [
                        "destruct H as [k [? ?]].",
                        "VernacExtend",
                        "08ee928c6a9755251ee2d3d31e9a4e452ee95766"
                    ]
                },
                {
                    "command": [
                        "exists (N.of_nat k).",
                        "VernacExtend",
                        "20809018c906360b42c049257c59675839355381"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply N2Nat.inj.",
                        "VernacExtend",
                        "2423f651761c208bffa88c3ae2702e3349593bea"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2N.id, N2Nat.inj_sub, N2Nat.inj_mul.",
                        "VernacExtend",
                        "5c268e80df67821736e6a809dfbdefef31eb22f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2N.id.",
                        "VernacExtend",
                        "3e2c35edb80f3387d3351ff0bbe84c34f3a354ad"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat.",
                        "VernacExtend",
                        "6b8f2867595074592501d9adb63ec571503d7aa8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_compare_le, Nat2N.inj_compare in H0.",
                        "VernacExtend",
                        "57f2fbc0dae61a6f46aa8469e17ecfac270b3b90"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2N.inj_mul, <-Npow2_nat in H0.",
                        "VernacExtend",
                        "d8d2462406ac1d74ae3aef335b8961b12737a24d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N2Nat.id in H0.",
                        "VernacExtend",
                        "1c2e8839dc878e9958922827d3598bccd4dff71a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_NToWord_2",
            "line_nb": 2267,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, NToWord_nat.",
                        "VernacExtend",
                        "77eb04f0019f0f8cf8472964839b7119e3ad1864"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_2.",
                        "VernacExtend",
                        "c5e890b4b0bfb2920190a0f45fce0fa541e67542"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply N2Nat.id.",
                        "VernacExtend",
                        "731a9df7a7e4a13d8bf5eaf0ebda6ad343358761"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat.",
                        "VernacExtend",
                        "d44492370653a13ba953d8e6dd67ba6bffa1acec"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out; auto.",
                        "VernacExtend",
                        "a52e8d4bf88f283293b55b0378f2629d38562577"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_bound",
            "line_nb": 2277,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in.",
                        "VernacExtend",
                        "8b9ae7df6e078b1e67815929f5d406d636411e23"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat, Nat2N.id.",
                        "VernacExtend",
                        "46d6e56f1ffe4e1a5688d672c1fa91ec335b2683"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_plus",
            "line_nb": 2284,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wplus, wordBin.",
                        "VernacExtend",
                        "477d7ffde8bb49f3ad10f9f97a5d56659efc6e9e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 by assumption.",
                        "VernacExtend",
                        "9e72a0cedf3e5f8899ed6e49969173337a09de45"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_mult",
            "line_nb": 2290,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wmult, wordBin.",
                        "VernacExtend",
                        "9919dbca0e97e950b0e084c6ad6207668611441e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 by assumption.",
                        "VernacExtend",
                        "9e72a0cedf3e5f8899ed6e49969173337a09de45"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wnot_def",
            "line_nb": 2296,
            "steps": [
                {
                    "command": [
                        "dependent induction w; cbn; [reflexivity|].",
                        "VernacExtend",
                        "45709d4900cd541390572daf954849dbb329579a"
                    ]
                },
                {
                    "command": [
                        "destruct b; cbn.",
                        "VernacExtend",
                        "231d5e6930cbe4fda915b0eb9398e7c98ad12bd1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; clear IHw.",
                        "VernacExtend",
                        "79e29c631028774a8197e34f5779e98b28a15080"
                    ]
                },
                {
                    "command": [
                        "rewrite <-NToWord_WS_0.",
                        "VernacExtend",
                        "bed813501f9e3524bfbc4e0137522daedec486b8"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct (Npow2 n); [reflexivity|].",
                        "VernacExtend",
                        "7c7d8206a555760d6564907cb714a3586b2f57d8"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN w).",
                        "VernacExtend",
                        "b7401fd0746e5def72bf414abc1e4789daf36c50"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p~0) with (2 * N.pos p)%N.",
                        "VernacExtend",
                        "b256f8f81106a3d7ff193a28186de09b1b653b86"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N.mul_sub_distr_l.",
                        "VernacExtend",
                        "e9504e0824f2889ebde41e6e6b35fe2ddfa52a61"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <-N.sub_add_distr.",
                        "VernacExtend",
                        "68c8683cb876c680440d4e7a9c763fad4702570f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p~0) with (2 * N.pos p)%N.",
                        "VernacExtend",
                        "b256f8f81106a3d7ff193a28186de09b1b653b86"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p0~0) with (2 * N.pos p0)%N.",
                        "VernacExtend",
                        "21a308cec7f39f18c39430206c39ff46b29958c5"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.add_1_l.",
                        "VernacExtend",
                        "95287c56a92451f30199843f1523dc61b1c32bab"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N.mul_sub_distr_l.",
                        "VernacExtend",
                        "e9504e0824f2889ebde41e6e6b35fe2ddfa52a61"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <-N.sub_add_distr.",
                        "VernacExtend",
                        "68c8683cb876c680440d4e7a9c763fad4702570f"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_comm with (n:= 1%N).",
                        "VernacExtend",
                        "19710a878310b92f8b97fb7d0594518630ebf269"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.add_assoc.",
                        "VernacExtend",
                        "49b6984f4c7c7e7230d5bce1d0a51588765a81e3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; clear IHw.",
                        "VernacExtend",
                        "79e29c631028774a8197e34f5779e98b28a15080"
                    ]
                },
                {
                    "command": [
                        "rewrite <-NToWord_WS_1.",
                        "VernacExtend",
                        "825aae9e310c959ab58fc3c29b33ea767136e69d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound w).",
                        "VernacExtend",
                        "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
                    ]
                },
                {
                    "command": [
                        "remember (Npow2 n) as pn; destruct pn; [exfalso; eapply Npow2_not_zero; eauto|clear Heqpn].",
                        "VernacExtend",
                        "223c22db2c604f3e411d6919ece584f44c65a72c"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN w).",
                        "VernacExtend",
                        "b7401fd0746e5def72bf414abc1e4789daf36c50"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p~0) with (2 * N.pos p)%N.",
                        "VernacExtend",
                        "b256f8f81106a3d7ff193a28186de09b1b653b86"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N.mul_sub_distr_l.",
                        "VernacExtend",
                        "e9504e0824f2889ebde41e6e6b35fe2ddfa52a61"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <-N.sub_add_distr.",
                        "VernacExtend",
                        "68c8683cb876c680440d4e7a9c763fad4702570f"
                    ]
                },
                {
                    "command": [
                        "destruct p; cbn; reflexivity.",
                        "VernacExtend",
                        "8e35d5b5717f0ec24a7e8d692d6c815f5828f8b7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p~0) with (2 * N.pos p)%N.",
                        "VernacExtend",
                        "b256f8f81106a3d7ff193a28186de09b1b653b86"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p0~0) with (2 * N.pos p0)%N.",
                        "VernacExtend",
                        "21a308cec7f39f18c39430206c39ff46b29958c5"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_sub_distr_l.",
                        "VernacExtend",
                        "e2bce9870552ce59d4c388e25aacb9952d5be843"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.mul_sub_distr_l with (n:= N.pos p).",
                        "VernacExtend",
                        "6634acd25b2a395d356cb7b23bfc7f9037340fe0"
                    ]
                },
                {
                    "command": [
                        "assert (exists pp, N.pos p - N.pos p0 = N.pos pp)%N.",
                        "VernacExtend",
                        "75498c73296ed65230b25aace705f57ccf7a5859"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply N.sub_gt in H.",
                        "VernacExtend",
                        "9c997563cf965a0feec2efbf1d951e105ba07b53"
                    ]
                },
                {
                    "command": [
                        "destruct (N.pos p - N.pos p0)%N; [intuition idtac|].",
                        "VernacExtend",
                        "fcb97f2e546c7ffd384a92946a1c3b9ff86c2c56"
                    ]
                },
                {
                    "command": [
                        "eexists; reflexivity.",
                        "VernacExtend",
                        "3218b5999d42e4662cc8ea7d56b6b43546a59b5d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct H0; rewrite H0.",
                        "VernacExtend",
                        "45739089db606426c7e36a56dec2fa9212603aa7"
                    ]
                },
                {
                    "command": [
                        "destruct x; cbn; reflexivity.",
                        "VernacExtend",
                        "40a6bb8adb76338a2574862330e4964ba78cf1b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_wnot",
            "line_nb": 2345,
            "steps": [
                {
                    "command": [
                        "unfold wneg; intros.",
                        "VernacExtend",
                        "a34976f5b901ec32494372ac0b8676bd0840c605"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_def.",
                        "VernacExtend",
                        "5c9f2844d84a6d3da105a633efecf13782dd6b4e"
                    ]
                },
                {
                    "command": [
                        "destruct (weq w (wzero _)); subst.",
                        "VernacExtend",
                        "096f477f313fb46c31298f6b0f4d30ce84a6c078"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "unfold wzero; rewrite roundTrip_0; cbn.",
                        "VernacExtend",
                        "5c97433f3c45751a919a27f7131cb1c7a1315440"
                    ]
                },
                {
                    "command": [
                        "rewrite N.sub_0_r.",
                        "VernacExtend",
                        "64465c02f18656eb03a73685b3b400b2a94fd873"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite NToWord_nat.",
                        "VernacExtend",
                        "384c7473c4802862f10e60ec32aa8828b55b5f88"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat, natToWord_pow2, N2Nat.inj_sub.",
                        "VernacExtend",
                        "12c82cc759fe5edfecc0243e7568bf23a3eaa548"
                    ]
                },
                {
                    "command": [
                        "change (N.to_nat 1%N) with 1.",
                        "VernacExtend",
                        "37fb71f7726de412152f155ca99377bb1b72869b"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat.",
                        "VernacExtend",
                        "6b8f2867595074592501d9adb63ec571503d7aa8"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_2 by (pose proof (zero_lt_pow2 sz); omega).",
                        "VernacExtend",
                        "7c5c1d7d5a2b10af72ebbbae823cbe79b5ba6056"
                    ]
                },
                {
                    "command": [
                        "unfold wminus.",
                        "VernacExtend",
                        "a28ef9ea5c70771d0ae63cebccd34e92e0b01900"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit, <-wones_wneg_one.",
                        "VernacExtend",
                        "4e6f1c57fe8988590bb9738fefb0d82cc02b317b"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wones_pow2_minus_one.",
                        "VernacExtend",
                        "317d7f9a1bcb839a6cbc6ec931fe84103f61bc2b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound w).",
                        "VernacExtend",
                        "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
                    ]
                },
                {
                    "command": [
                        "assert (Npow2 sz - wordToN w < Npow2 sz)%N.",
                        "VernacExtend",
                        "c5de1ab2779ece3d6ea3f96157e92a9f544de0f0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply N.sub_lt.",
                        "VernacExtend",
                        "a6f491fd9c011d4ea365fe3b7460fecf3dd303a2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply N.lt_le_incl; auto.",
                        "VernacExtend",
                        "fb383be90749717a61195c79509d0c83b3f6094b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (wordToN w <> 0)%N.",
                        "VernacExtend",
                        "9a00a450195afd89011196776f9ef7fc6385cce1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "replace 0%N with (wordToN (wzero sz)).",
                        "VernacExtend",
                        "56984e4e923916e5ffc3ace78fead8aa5641fcdc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro Hx; elim n.",
                        "VernacExtend",
                        "915806f47814685ab14b8c9acfe6e8a39c067a18"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj; auto.",
                        "VernacExtend",
                        "39c7ad60e30523bd41ad4eb9903d0412a29322c8"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "unfold wzero; rewrite roundTrip_0; reflexivity.",
                        "VernacExtend",
                        "740657d6fd2e47352bc80eba3b5a39b295d4a6c0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "nomega.",
                        "VernacExtend",
                        "172a67512b5be7cabf23ff79ed79dc00750b182b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply N.sub_gt in H.",
                        "VernacExtend",
                        "9c997563cf965a0feec2efbf1d951e105ba07b53"
                    ]
                },
                {
                    "command": [
                        "remember (Npow2 sz - wordToN w)%N as p; clear Heqp.",
                        "VernacExtend",
                        "cdb582e4c5e876762a494fc879d69258f58f33ae"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite NToWord_nat.",
                        "VernacExtend",
                        "384c7473c4802862f10e60ec32aa8828b55b5f88"
                    ]
                },
                {
                    "command": [
                        "rewrite N2Nat.inj_sub.",
                        "VernacExtend",
                        "2edb5075c047fed620e497792e2ced03ce6b420e"
                    ]
                },
                {
                    "command": [
                        "change (N.to_nat 1%N) with 1.",
                        "VernacExtend",
                        "37fb71f7726de412152f155ca99377bb1b72869b"
                    ]
                },
                {
                    "command": [
                        "assert (N.to_nat p < pow2 sz)%nat by (rewrite <-Npow2_nat; apply Nlt_out; auto); clear H0.",
                        "VernacExtend",
                        "862c29efe7ead65ede70ab932c906e5227186fb2"
                    ]
                },
                {
                    "command": [
                        "assert (N.to_nat p <> 0) by (change 0 with (N.to_nat 0%N); intro Hx; elim H; apply N2Nat.inj; auto); clear H.",
                        "VernacExtend",
                        "bb2b062129834fd3abc705b95343b511f4b0075a"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToNat_natToWord_pred.",
                        "VernacExtend",
                        "9ac215162a960424ac9cdf0c5b0d703392744586"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToNat_natToWord_2 by omega.",
                        "VernacExtend",
                        "cde37a38feb8f949fccae153df74e7d1e3caa0f6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro Hx; elim H0.",
                        "VernacExtend",
                        "4f1e7b020653b55d191f60c2d719a52f86d93a16"
                    ]
                },
                {
                    "command": [
                        "apply natToWord_inj with (sz:= sz); try omega.",
                        "VernacExtend",
                        "bfa8ef1841a5e330601cf7d57af543808ae37a74"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_wneg",
            "line_nb": 2403,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wminus_inv (wzero n)).",
                        "VernacExtend",
                        "db187446aaaef463e32bf52e8de80a43e846e5f7"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_unit in H; auto.",
                        "VernacExtend",
                        "8ee32708889b7da150cdf2eee3f0e7f65727bcfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow2_wneg",
            "line_nb": 2408,
            "steps": [
                {
                    "command": [
                        "unfold wneg; intros.",
                        "VernacExtend",
                        "a34976f5b901ec32494372ac0b8676bd0840c605"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat, <-NToWord_nat.",
                        "VernacExtend",
                        "3908d228ba8c128f1fa652bafed203ea21fcced9"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 by (apply Nlt_in; do 2 rewrite Npow2_nat; pose proof (zero_lt_pow2 sz); simpl; omega).",
                        "VernacExtend",
                        "607465486c6c30165c58487225be7748d6e710a7"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_S.",
                        "VernacExtend",
                        "22081864f5a4d1297cc38f49898f7c4dbb66763b"
                    ]
                },
                {
                    "command": [
                        "f_equal; nomega.",
                        "VernacExtend",
                        "c2fb3c7c6a86db8b2503d10db738ddb86c4a4fad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_WS_1",
            "line_nb": 2415,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj.",
                        "VernacExtend",
                        "80d23ac951fab63d04cca84ead9106e2b3a29d05"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite wnot_def.",
                        "VernacExtend",
                        "e510976779d939f10fdf1350f608a7eb602326be"
                    ]
                },
                {
                    "command": [
                        "unfold wneg.",
                        "VernacExtend",
                        "1f90be984b445475c1039b32ac87878d29f0f71e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 by (apply N.sub_lt; [apply N.lt_le_incl, wordToN_bound|nomega]).",
                        "VernacExtend",
                        "72d77af3dfc6139cd6fb586a41dfbff02ba9357d"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2.",
                        "VernacExtend",
                        "8a0683d8ddcae6b07999f79e8a371bc3b1f8be5b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_1.",
                        "VernacExtend",
                        "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
                    ]
                },
                {
                    "command": [
                        "change (Npow2 (S sz)) with (2 * Npow2 sz)%N.",
                        "VernacExtend",
                        "92b6c777a2a60ab193e69e45fe8d392e96dda78d"
                    ]
                },
                {
                    "command": [
                        "rewrite N.sub_add_distr.",
                        "VernacExtend",
                        "d6ce7c379be6d2fc7e84cd7a851cb34e0aaea624"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.mul_sub_distr_l.",
                        "VernacExtend",
                        "0e83b06bd6900357c0f21a744c9a19e1c407dde3"
                    ]
                },
                {
                    "command": [
                        "assert (Npow2 sz - wordToN w <> 0)%N by (pose proof (wordToN_bound w); nomega).",
                        "VernacExtend",
                        "9e5570787c167efeb46527da999635dbef480055"
                    ]
                },
                {
                    "command": [
                        "remember (Npow2 sz - wordToN w)%N as n; clear Heqn.",
                        "VernacExtend",
                        "3994dd7e862d38b2339af73bccfe62b7c73fdc53"
                    ]
                },
                {
                    "command": [
                        "destruct n; [intuition idtac|].",
                        "VernacExtend",
                        "10a5c90d374c7c9e85cc0ad3ba67274372d00cd5"
                    ]
                },
                {
                    "command": [
                        "remember (N.pos p - 1)%N as pp; destruct pp.",
                        "VernacExtend",
                        "7d3ca771c2535147981d5993704459a7e2cb6e92"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, N.sub_0_le in Heqpp.",
                        "VernacExtend",
                        "eb42557c2afb780b7c0efa11c547cf6bf3d52f1f"
                    ]
                },
                {
                    "command": [
                        "apply N.le_1_r in Heqpp; destruct Heqpp; [discriminate|].",
                        "VernacExtend",
                        "bbd98b2596392f5d7159e1e259395cec39d36381"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; reflexivity.",
                        "VernacExtend",
                        "cd5b756ada779c32b8ad69248fcdcefea6ce8479"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (N.pos p0~0) with (2 * N.pos p0)%N.",
                        "VernacExtend",
                        "21a308cec7f39f18c39430206c39ff46b29958c5"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqpp.",
                        "VernacExtend",
                        "d5c36802f6107aeed430a0c0febd5b49de7a1acb"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.add_1_r.",
                        "VernacExtend",
                        "f3a7260973f96c79821815720771deae822134e6"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_sub_distr_l.",
                        "VernacExtend",
                        "e2bce9870552ce59d4c388e25aacb9952d5be843"
                    ]
                },
                {
                    "command": [
                        "clear; destruct p; cbn; reflexivity.",
                        "VernacExtend",
                        "161a656827910b84ca2ed991bf0641bdf9e5991f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.sub_add_distr.",
                        "VernacExtend",
                        "7b4dc0907cea8f89a186717eba15842d5e3107e8"
                    ]
                },
                {
                    "command": [
                        "apply N.sub_lt; [|nomega].",
                        "VernacExtend",
                        "a9bb2cf5fc13d8c190b8c81ebe5ef4be279858a4"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound w).",
                        "VernacExtend",
                        "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
                    ]
                },
                {
                    "command": [
                        "apply N.le_succ_l in H.",
                        "VernacExtend",
                        "924c5a9f46abd141344e545f5e51aff20c172513"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_1_r; assumption.",
                        "VernacExtend",
                        "d588d3a9c3cdedf753bc6a574f30cd5d05152f35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_WS_0",
            "line_nb": 2448,
            "steps": [
                {
                    "command": [
                        "dependent destruction w; [reflexivity|].",
                        "VernacExtend",
                        "f150f52d120182c9ddb5372540cd783155225074"
                    ]
                },
                {
                    "command": [
                        "unfold wordToZ.",
                        "VernacExtend",
                        "d3dfb452747490cdd93b9c608b345d2115d7c1be"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_ws.",
                        "VernacExtend",
                        "9135f0a4891d22b6e41858e48d163ecc1869a774"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb (WS b w) false).",
                        "VernacExtend",
                        "11ba91bfefe11ab57d7f36aa2e1330c844190b03"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_0.",
                        "VernacExtend",
                        "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN (wneg (WS b w))); cbn; omega.",
                        "VernacExtend",
                        "3170f8abc5f120d84e57464dfbd707c3e4a49f32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN (WS b w)); cbn; omega.",
                        "VernacExtend",
                        "f9a40b0490d98b79d1b22714638253db5e388f4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_WS_1",
            "line_nb": 2461,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [b E]].",
                        "VernacExtend",
                        "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "clear w E.",
                        "VernacExtend",
                        "fbba53cd087ddf99bbb31f221ab32033a8413ff2"
                    ]
                },
                {
                    "command": [
                        "rename v into w.",
                        "VernacExtend",
                        "79df5d37f4de91d7ebed57c9e4514bde3bcb5690"
                    ]
                },
                {
                    "command": [
                        "unfold wordToZ.",
                        "VernacExtend",
                        "d3dfb452747490cdd93b9c608b345d2115d7c1be"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_ws.",
                        "VernacExtend",
                        "9135f0a4891d22b6e41858e48d163ecc1869a774"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb (WS b w) false) as msb.",
                        "VernacExtend",
                        "427137ce919293a3a1f1f746476879f78a924386"
                    ]
                },
                {
                    "command": [
                        "destruct msb.",
                        "VernacExtend",
                        "1a6440c8926b5b29bcb81c8744f032766a165f1c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_1.",
                        "VernacExtend",
                        "0131b8bca0f56fd7f5b311285693c0cc0ec80969"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_1.",
                        "VernacExtend",
                        "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
                    ]
                },
                {
                    "command": [
                        "rewrite wnot_def.",
                        "VernacExtend",
                        "5c9f2844d84a6d3da105a633efecf13782dd6b4e"
                    ]
                },
                {
                    "command": [
                        "unfold wneg.",
                        "VernacExtend",
                        "1f90be984b445475c1039b32ac87878d29f0f71e"
                    ]
                },
                {
                    "command": [
                        "assert (Npow2 (S sz) - wordToN (WS b w) <> 0)%N.",
                        "VernacExtend",
                        "a90f8ad4040bb273f2e269410d4eafcc392076f1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound (WS b w)); nomega.",
                        "VernacExtend",
                        "0bbc42eeabf7fb48cddba4eda18c47cc21e9fded"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Npow2 (S sz) - wordToN (WS b w) < Npow2 (S sz))%N.",
                        "VernacExtend",
                        "cc3fc1738f411492e06080dd1e4d325ae7b37eaa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply N.sub_lt.",
                        "VernacExtend",
                        "a6f491fd9c011d4ea365fe3b7460fecf3dd303a2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply N.lt_le_incl, wordToN_bound.",
                        "VernacExtend",
                        "486d2ba2f92305a4ec7267d6ea6487f68850f112"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (wordToN (WS b w) <> 0)%N.",
                        "VernacExtend",
                        "143eea745cd1302f9f927d8da62633d227b436a7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "replace 0%N with (wordToN (wzero (S sz))).",
                        "VernacExtend",
                        "c7b0438b20b0554b3841496e1888ef783a9b04fc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro Hx.",
                        "VernacExtend",
                        "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Hx.",
                        "VernacExtend",
                        "dd91158414736fa4862b9f03a516b8cb7842642a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx in Heqmsb.",
                        "VernacExtend",
                        "f197e073a0b94fcfae2db4e02fea7c007b6bbfa1"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero in Heqmsb; discriminate.",
                        "VernacExtend",
                        "86d16c66c8d029d2f12db94b5ca58621bc53d421"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "unfold wzero; rewrite roundTrip_0; reflexivity.",
                        "VernacExtend",
                        "740657d6fd2e47352bc80eba3b5a39b295d4a6c0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "nomega.",
                        "VernacExtend",
                        "172a67512b5be7cabf23ff79ed79dc00750b182b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "remember (Npow2 (S sz) - wordToN (WS b w))%N as n; clear Heqn.",
                        "VernacExtend",
                        "d4dc34dc67e898b0b93d02d48d7b3d7839a94d8c"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 by nomega.",
                        "VernacExtend",
                        "1dd50baefedbab3d0dc81dd9b225893ab83b84dd"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 by nomega.",
                        "VernacExtend",
                        "1dd50baefedbab3d0dc81dd9b225893ab83b84dd"
                    ]
                },
                {
                    "command": [
                        "destruct n; [intuition idtac|].",
                        "VernacExtend",
                        "10a5c90d374c7c9e85cc0ad3ba67274372d00cd5"
                    ]
                },
                {
                    "command": [
                        "destruct p; cbn; reflexivity.",
                        "VernacExtend",
                        "8e35d5b5717f0ec24a7e8d692d6c815f5828f8b7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_1.",
                        "VernacExtend",
                        "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN (WS b w)); cbn; omega.",
                        "VernacExtend",
                        "f9a40b0490d98b79d1b22714638253db5e388f4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_WS_1'",
            "line_nb": 2513,
            "steps": [
                {
                    "command": [
                        "intro sz.",
                        "VernacExtend",
                        "e2490ae282e79bfff6a60941b63f56558206c907"
                    ]
                },
                {
                    "command": [
                        "replace (sz + 1) with (S sz) by omega.",
                        "VernacExtend",
                        "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_WS_1.",
                        "VernacExtend",
                        "509ff8f812d3db9713d743d3b9462b775b6f7876"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_inj",
            "line_nb": 2519,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; intros.",
                        "VernacExtend",
                        "5714496e388c686b08c1c9ac23abf2832594244a"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w1 false) as msb1.",
                        "VernacExtend",
                        "34dc423c16e49fca956d11884559a12585145fcb"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w2 false) as msb2.",
                        "VernacExtend",
                        "cc78f9ae2d5470cd25330ae1998804c720ef0ad6"
                    ]
                },
                {
                    "command": [
                        "destruct msb1, msb2.",
                        "VernacExtend",
                        "c63494d956bec7c8f4545eda8e35d8bb5297bef0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w1)) as wn1.",
                        "VernacExtend",
                        "acb37b0ba39b804447c76dcfa07c5539894a24a6"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w2)) as wn2.",
                        "VernacExtend",
                        "92cabf7724204fa8eb1153a26b485ea8ebd758b8"
                    ]
                },
                {
                    "command": [
                        "destruct wn1, wn2; try discriminate.",
                        "VernacExtend",
                        "bda18f6d4da544e69b21362651b18c52b3214359"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (wneg w1 = wneg w2).",
                        "VernacExtend",
                        "4e5dd35d098323c5988d6fa10b40894462de4aba"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj.",
                        "VernacExtend",
                        "80d23ac951fab63d04cca84ead9106e2b3a29d05"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Heqwn1, <-Heqwn2; reflexivity.",
                        "VernacExtend",
                        "2f0445cd373deed225898122d78bc9a1a437b9e4"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w1).",
                        "VernacExtend",
                        "8e8adbcd68cc6d4ada0f0f028949eb00c1773018"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w2).",
                        "VernacExtend",
                        "7e035fdddc2c245d9ecd2fb4240d613e18fc0119"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; reflexivity.",
                        "VernacExtend",
                        "cd5b756ada779c32b8ad69248fcdcefea6ce8479"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; clear H.",
                        "VernacExtend",
                        "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
                    ]
                },
                {
                    "command": [
                        "assert (wneg w1 = wneg w2).",
                        "VernacExtend",
                        "4e5dd35d098323c5988d6fa10b40894462de4aba"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj.",
                        "VernacExtend",
                        "80d23ac951fab63d04cca84ead9106e2b3a29d05"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Heqwn1, <-Heqwn2; reflexivity.",
                        "VernacExtend",
                        "2f0445cd373deed225898122d78bc9a1a437b9e4"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w1).",
                        "VernacExtend",
                        "8e8adbcd68cc6d4ada0f0f028949eb00c1773018"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w2).",
                        "VernacExtend",
                        "7e035fdddc2c245d9ecd2fb4240d613e18fc0119"
                    ]
                },
                {
                    "command": [
                        "rewrite H; reflexivity.",
                        "VernacExtend",
                        "1eef9b63d851b99cfa44117acf0ddd958095123d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w1)) as wn1.",
                        "VernacExtend",
                        "acb37b0ba39b804447c76dcfa07c5539894a24a6"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w2) as wn2.",
                        "VernacExtend",
                        "06b6e60e67a8cc5c2ec72b0f47820477b86bb0fb"
                    ]
                },
                {
                    "command": [
                        "destruct wn1, wn2; try discriminate.",
                        "VernacExtend",
                        "bda18f6d4da544e69b21362651b18c52b3214359"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToN_wzero with (sz:= sz) in Heqwn1, Heqwn2.",
                        "VernacExtend",
                        "833be3970f96e315ce87d3941a81904028611476"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqwn1.",
                        "VernacExtend",
                        "2ba6e7656c7e80e336aa6d28a02073af1b53990e"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqwn2.",
                        "VernacExtend",
                        "ebfc2ffb00f915504c64ac3aa556d9dcf13e79e4"
                    ]
                },
                {
                    "command": [
                        "assert (w1 = wzero sz).",
                        "VernacExtend",
                        "e7e8bd59cf70644813d7d4dda5445e2a2becb072"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w1), <-Heqwn1.",
                        "VernacExtend",
                        "1844a66ff832f5233fa61a6cc5fd23958991f756"
                    ]
                },
                {
                    "command": [
                        "apply wzero_wneg.",
                        "VernacExtend",
                        "2f52d885d4ae512968b68e969a55b4469c2aad87"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "subst; reflexivity.",
                        "VernacExtend",
                        "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w1) as wn1.",
                        "VernacExtend",
                        "4f027bfa8ea113ff2002b1c7d8c546bd02752164"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w2)) as wn2.",
                        "VernacExtend",
                        "92cabf7724204fa8eb1153a26b485ea8ebd758b8"
                    ]
                },
                {
                    "command": [
                        "destruct wn1, wn2; try discriminate.",
                        "VernacExtend",
                        "bda18f6d4da544e69b21362651b18c52b3214359"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToN_wzero with (sz:= sz) in Heqwn1, Heqwn2.",
                        "VernacExtend",
                        "833be3970f96e315ce87d3941a81904028611476"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqwn1.",
                        "VernacExtend",
                        "2ba6e7656c7e80e336aa6d28a02073af1b53990e"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqwn2.",
                        "VernacExtend",
                        "ebfc2ffb00f915504c64ac3aa556d9dcf13e79e4"
                    ]
                },
                {
                    "command": [
                        "assert (w2 = wzero sz).",
                        "VernacExtend",
                        "fa63030447c66887ccfb144838b1940a0418c133"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w2), <-Heqwn2.",
                        "VernacExtend",
                        "5a30a805ea5ec7bfc1f04bf8daa5bf3f39b25771"
                    ]
                },
                {
                    "command": [
                        "apply wzero_wneg.",
                        "VernacExtend",
                        "2f52d885d4ae512968b68e969a55b4469c2aad87"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "subst; reflexivity.",
                        "VernacExtend",
                        "e0e2f5d2bb0ba834bbb8fede1abdf8af65f1ce87"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w1) as wn1.",
                        "VernacExtend",
                        "4f027bfa8ea113ff2002b1c7d8c546bd02752164"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w2) as wn2.",
                        "VernacExtend",
                        "06b6e60e67a8cc5c2ec72b0f47820477b86bb0fb"
                    ]
                },
                {
                    "command": [
                        "destruct wn1, wn2; try discriminate.",
                        "VernacExtend",
                        "bda18f6d4da544e69b21362651b18c52b3214359"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToN_wzero with (sz:= sz) in Heqwn1, Heqwn2.",
                        "VernacExtend",
                        "833be3970f96e315ce87d3941a81904028611476"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqwn1 in Heqwn2.",
                        "VernacExtend",
                        "19844dfe9827d08f2467c947e172da455c3114b8"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqwn2; auto.",
                        "VernacExtend",
                        "e301f8a942c454bcbafeb1039fa154f9544c1c50"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; clear H.",
                        "VernacExtend",
                        "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqwn1 in Heqwn2.",
                        "VernacExtend",
                        "19844dfe9827d08f2467c947e172da455c3114b8"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqwn2; auto.",
                        "VernacExtend",
                        "e301f8a942c454bcbafeb1039fa154f9544c1c50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wones",
            "line_nb": 2586,
            "steps": [
                {
                    "command": [
                        "induction sz; intros; [elim H; reflexivity|].",
                        "VernacExtend",
                        "5e719296056aa947b3ea3d9fd8dc4df8f5591002"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct sz; [reflexivity|].",
                        "VernacExtend",
                        "85ce619743ae4f1cc58f8f60c15fe146c2fa84be"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_WS_1.",
                        "VernacExtend",
                        "04936b6b8b315f8e86736a056f7243fe08688616"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz by discriminate.",
                        "VernacExtend",
                        "3424668523b4c2cb174ccf97aa23d14206ce50ab"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_eq_rect",
            "line_nb": 2593,
            "steps": [
                {
                    "command": [
                        "intros; subst; simpl; reflexivity.",
                        "VernacExtend",
                        "31544af7523b6fbff9496892fbf01c24e408519e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_existT",
            "line_nb": 2596,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj in H; subst.",
                        "VernacExtend",
                        "6d5bfba5e0d078f2750710b7d04c9ccec0e1d33e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_wordToNat",
            "line_nb": 2601,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (eq_sigT_fst H); subst.",
                        "VernacExtend",
                        "fa8321e6ab568aa2d486b53db19befb41b83277b"
                    ]
                },
                {
                    "command": [
                        "destruct_existT; reflexivity.",
                        "VernacExtend",
                        "60030bd161e378ea07846bdbd7e38e88972bf1cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_eq_rect",
            "line_nb": 2606,
            "steps": [
                {
                    "command": [
                        "intros; subst; simpl; reflexivity.",
                        "VernacExtend",
                        "31544af7523b6fbff9496892fbf01c24e408519e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_existT",
            "line_nb": 2609,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_inj in H; subst.",
                        "VernacExtend",
                        "7d44589d5b62fd4ad3fa8bccd575272f9aedaa33"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_wordToZ",
            "line_nb": 2614,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (eq_sigT_fst H); subst.",
                        "VernacExtend",
                        "fa8321e6ab568aa2d486b53db19befb41b83277b"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_WS_0",
            "line_nb": 2620,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wplus, wordBin; intros.",
                        "VernacExtend",
                        "34379b67bf5442bfb5e6baf50720b54b801e8214"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_1.",
                        "VernacExtend",
                        "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.add_assoc.",
                        "VernacExtend",
                        "49b6984f4c7c7e7230d5bce1d0a51588765a81e3"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_comm with (n:= 1%N).",
                        "VernacExtend",
                        "19710a878310b92f8b97fb7d0594518630ebf269"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_assoc.",
                        "VernacExtend",
                        "ac79df063d11045f3f6af6d562f2a0abed616f8c"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.mul_add_distr_l.",
                        "VernacExtend",
                        "d36d1aa42754388f4c3687fffb61407746993e6c"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, NToWord_WS_1.",
                        "VernacExtend",
                        "b4749234363925b517123040be0edf455a7388b1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.mul_add_distr_l.",
                        "VernacExtend",
                        "d36d1aa42754388f4c3687fffb61407746993e6c"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, NToWord_WS_0.",
                        "VernacExtend",
                        "1baffa8f4d445d8efa719ddce43b12d952783808"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_WS_0'",
            "line_nb": 2637,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= w1).",
                        "VernacExtend",
                        "3d7eb3241bdfca1b1958eb2163f070a03cb1b00c"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= w1~0).",
                        "VernacExtend",
                        "669373c0850b939ea7675f611aca37765bb8867c"
                    ]
                },
                {
                    "command": [
                        "apply wplus_WS_0.",
                        "VernacExtend",
                        "ab1f348bf0d4b5fd7e8f8a8a7465e0ecccd4e0e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wpow2_pow2",
            "line_nb": 2643,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; intros; [reflexivity|].",
                        "VernacExtend",
                        "69a9af99e3fa932a05a7cfd9b6e3c7e2ef26a7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz.",
                        "VernacExtend",
                        "0e7c5794acb2a369001382a34376ab478b933f3b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wpow2_Npow2",
            "line_nb": 2648,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; intros; [reflexivity|].",
                        "VernacExtend",
                        "69a9af99e3fa932a05a7cfd9b6e3c7e2ef26a7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz; reflexivity.",
                        "VernacExtend",
                        "d654f2fa62b1e7aec65001720dcb37e012f653ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wpow2_wneg",
            "line_nb": 2652,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; intros; [reflexivity|].",
                        "VernacExtend",
                        "69a9af99e3fa932a05a7cfd9b6e3c7e2ef26a7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_0.",
                        "VernacExtend",
                        "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz; reflexivity.",
                        "VernacExtend",
                        "d654f2fa62b1e7aec65001720dcb37e012f653ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wpow2_wmsb",
            "line_nb": 2657,
            "steps": [
                {
                    "command": [
                        "induction sz; simpl; intros; auto.",
                        "VernacExtend",
                        "cebce3cb22dd8ae2bf6d054226e70917f46557ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wnot",
            "line_nb": 2660,
            "steps": [
                {
                    "command": [
                        "apply (induct_word_S (fun sz w => forall b1 b2, wmsb (wnot w) b1 = negb (wmsb w b2))); intros.",
                        "VernacExtend",
                        "170afabbb9a17cc055333f8a7f35daabe152675e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (H true true).",
                        "VernacExtend",
                        "7ae24e821480c319f87d4ead7efa91c51a5d9701"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wneg_true",
            "line_nb": 2668,
            "steps": [
                {
                    "command": [
                        "apply (induct_word_S (fun sz w => w <> wpow2 sz -> forall b1 b2, wmsb w b1 = true -> wmsb (^~ w) b2 = false)); intros; [simpl in *; subst; elim H; reflexivity|].",
                        "VernacExtend",
                        "9ebe21d5c3b21d21bc44f563ba5b3f1fd4d7a7f3"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_1.",
                        "VernacExtend",
                        "0131b8bca0f56fd7f5b311285693c0cc0ec80969"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_ws.",
                        "VernacExtend",
                        "9135f0a4891d22b6e41858e48d163ecc1869a774"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wnot with (b2:= false).",
                        "VernacExtend",
                        "39ae7ce40dba75d7f4c01e2265e6bfdd1dff6587"
                    ]
                },
                {
                    "command": [
                        "simpl; apply negb_false_iff; assumption.",
                        "VernacExtend",
                        "97791a0e9fe7d85ff3bd9f887759bc6f69187447"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_0.",
                        "VernacExtend",
                        "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
                    ]
                },
                {
                    "command": [
                        "eapply H with (b1 := false); eauto.",
                        "VernacExtend",
                        "7278f3a1925413c3133883e67b3e93d81d0cd9f6"
                    ]
                },
                {
                    "command": [
                        "intro Hx.",
                        "VernacExtend",
                        "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "clear -Hx.",
                        "VernacExtend",
                        "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Hx; reflexivity.",
                        "VernacExtend",
                        "f755a921abd23fbd85cf0bde35e3625fb5a4c04a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wneg_false",
            "line_nb": 2684,
            "steps": [
                {
                    "command": [
                        "apply (induct_word_S (fun sz w => #w <> 0 -> forall b1 b2, wmsb w b1 = false -> wmsb (^~ w) b2 = true)); intros; [simpl in *; subst; elim H; reflexivity|].",
                        "VernacExtend",
                        "71114773207c297128567d394b8a9fdce1fbbf6c"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_1.",
                        "VernacExtend",
                        "0131b8bca0f56fd7f5b311285693c0cc0ec80969"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_ws.",
                        "VernacExtend",
                        "9135f0a4891d22b6e41858e48d163ecc1869a774"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_ws in H1.",
                        "VernacExtend",
                        "f5841de688ee5ce33eb7864ab7a5f1d71384d493"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wnot with (b2:= false).",
                        "VernacExtend",
                        "39ae7ce40dba75d7f4c01e2265e6bfdd1dff6587"
                    ]
                },
                {
                    "command": [
                        "apply negb_true_iff; assumption.",
                        "VernacExtend",
                        "8d426d86f3be46c97c23bb8249e19ed2198334a2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_0.",
                        "VernacExtend",
                        "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
                    ]
                },
                {
                    "command": [
                        "eapply H with (b1:= false); eauto.",
                        "VernacExtend",
                        "7278f3a1925413c3133883e67b3e93d81d0cd9f6"
                    ]
                },
                {
                    "command": [
                        "intro Hx; elim H0.",
                        "VernacExtend",
                        "4f1e7b020653b55d191f60c2d719a52f86d93a16"
                    ]
                },
                {
                    "command": [
                        "clear -Hx.",
                        "VernacExtend",
                        "4bb1da1fb6470dfebcf314d8eef9e82b30482189"
                    ]
                },
                {
                    "command": [
                        "simpl in *; omega.",
                        "VernacExtend",
                        "2e505872d892cb5022bef5b246ceb26cdd84b133"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zext_WO_wzero",
            "line_nb": 2700,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wneg_zext",
            "line_nb": 2703,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "dependent destruction w; [elim H0; reflexivity|].",
                        "VernacExtend",
                        "f07c7a70de7d2fd7ea0572863eb7f3d8e6ef733a"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_wneg_false with (b1:= false).",
                        "VernacExtend",
                        "a62b7dd61bb4ab6312211e02904aede2e4201421"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToNat_zext with (n:= n0) in H0.",
                        "VernacExtend",
                        "513742b16149f3e2f904e42e89832a29ba721221"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_zext; assumption.",
                        "VernacExtend",
                        "88ee81d191eb3696ab0fa6ef82e0b621e12d28ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_WS_pos",
            "line_nb": 2713,
            "steps": [
                {
                    "command": [
                        "unfold wminus; intros.",
                        "VernacExtend",
                        "ccd4a9370a1dc5e4eece2050c4ea534430fd00e5"
                    ]
                },
                {
                    "command": [
                        "cbn.",
                        "VernacExtend",
                        "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_0.",
                        "VernacExtend",
                        "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wplus_WS_0.",
                        "VernacExtend",
                        "4d64bafedd170a092af801e82da7b8dadd5bb58d"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_WS_1.",
                        "VernacExtend",
                        "04936b6b8b315f8e86736a056f7243fe08688616"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_WS_pos'",
            "line_nb": 2721,
            "steps": [
                {
                    "command": [
                        "intro sz.",
                        "VernacExtend",
                        "e2490ae282e79bfff6a60941b63f56558206c907"
                    ]
                },
                {
                    "command": [
                        "replace (sz + 1) with (S sz) by omega.",
                        "VernacExtend",
                        "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wminus_WS_pos.",
                        "VernacExtend",
                        "4bc11850bf9d35888c5896e463f626571e4bdcb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wtl_combine",
            "line_nb": 2727,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S x) as [v [b E]].",
                        "VernacExtend",
                        "659ab9fba21576e0e2382ac071d7604f3f89fc18"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "rewrite (word0 v).",
                        "VernacExtend",
                        "3ef0992b1a5054242ed6834b204f196742764e97"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_combine",
            "line_nb": 2734,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_assoc_existT",
            "line_nb": 2737,
            "steps": [
                {
                    "command": [
                        "intros; apply EqdepFacts.eq_sigT_sig_eq.",
                        "VernacExtend",
                        "3e8eceb8b1be88c2013d8c9cc910828dac4e9156"
                    ]
                },
                {
                    "command": [
                        "assert (Hsz: sz1 + (sz2 + sz3) = sz1 + sz2 + sz3) by omega.",
                        "VernacExtend",
                        "2bf803d98af146088ed961c4bd1a76d987631092"
                    ]
                },
                {
                    "command": [
                        "exists Hsz.",
                        "VernacExtend",
                        "e5e4482605fd6275eb1a9ff7e72d0fe79c6d92f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (combine_assoc w1 w2 w3 Hsz).",
                        "VernacExtend",
                        "56fb1e860ede3b198441adf70e04be0ee1c6ecf7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_combine",
            "line_nb": 2744,
            "steps": [
                {
                    "command": [
                        "intros; unfold sext in H.",
                        "VernacExtend",
                        "4d08a7595b289c21c71b936c62e52c6191df0239"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w2 false) as msb2; destruct msb2.",
                        "VernacExtend",
                        "de8ba94a45ecc30a0f06f43a63b4969e67b3f940"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_assoc_existT in H.",
                        "VernacExtend",
                        "4d3cab5c74743e853767caab0ce6bf6496e548e8"
                    ]
                },
                {
                    "command": [
                        "assert (sz = sz1 + sz2) by (apply eq_sigT_fst in H; omega); subst.",
                        "VernacExtend",
                        "63e5a221340ff25384b0c519521bcb228ff6f7b6"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "exists (combine w1 w2).",
                        "VernacExtend",
                        "3626fabf4df6578475f3d563128cd23ed61ed674"
                    ]
                },
                {
                    "command": [
                        "split; [|reflexivity].",
                        "VernacExtend",
                        "b3b2ab28272d17bbd288e5c714b27165f96106d4"
                    ]
                },
                {
                    "command": [
                        "unfold sext.",
                        "VernacExtend",
                        "ea29e31ffab3e16a195127c35ddcf3653db63da7"
                    ]
                },
                {
                    "command": [
                        "dependent destruction w2; [discriminate|].",
                        "VernacExtend",
                        "87b462961c5b3ae83798a474861b119a47c9fe38"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "a190410c0f1b732818f7223cefc841743c6d7653"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Heqmsb2.",
                        "VernacExtend",
                        "8992a373740b1f747bf87349fd07fe17536202e5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_assoc_existT in H.",
                        "VernacExtend",
                        "4d3cab5c74743e853767caab0ce6bf6496e548e8"
                    ]
                },
                {
                    "command": [
                        "assert (sz = sz1 + sz2) by (apply eq_sigT_fst in H; omega); subst.",
                        "VernacExtend",
                        "63e5a221340ff25384b0c519521bcb228ff6f7b6"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "exists (combine w1 w2).",
                        "VernacExtend",
                        "3626fabf4df6578475f3d563128cd23ed61ed674"
                    ]
                },
                {
                    "command": [
                        "split; [|reflexivity].",
                        "VernacExtend",
                        "b3b2ab28272d17bbd288e5c714b27165f96106d4"
                    ]
                },
                {
                    "command": [
                        "unfold sext.",
                        "VernacExtend",
                        "ea29e31ffab3e16a195127c35ddcf3653db63da7"
                    ]
                },
                {
                    "command": [
                        "dependent destruction w2; [intuition idtac|].",
                        "VernacExtend",
                        "1edefbce5052ae8d6759b857789092b22c2e1a4e"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "a190410c0f1b732818f7223cefc841743c6d7653"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Heqmsb2.",
                        "VernacExtend",
                        "8992a373740b1f747bf87349fd07fe17536202e5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_wzero_1",
            "line_nb": 2770,
            "steps": [
                {
                    "command": [
                        "unfold wplus, wordBin; intros.",
                        "VernacExtend",
                        "34379b67bf5442bfb5e6baf50720b54b801e8214"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_wzero.",
                        "VernacExtend",
                        "7b8e4359d7bad177e9ca2f5e3fcd37b5b8eb97c5"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_0_r.",
                        "VernacExtend",
                        "31ef32ec251b5183692456c19ac03de334243982"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_wordToN.",
                        "VernacExtend",
                        "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_wzero_2",
            "line_nb": 2776,
            "steps": [
                {
                    "command": [
                        "unfold wplus, wordBin; intros.",
                        "VernacExtend",
                        "34379b67bf5442bfb5e6baf50720b54b801e8214"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_wzero.",
                        "VernacExtend",
                        "7b8e4359d7bad177e9ca2f5e3fcd37b5b8eb97c5"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_0_l.",
                        "VernacExtend",
                        "b301335810d78277ebbcf87be1f982742e5bab6a"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_wordToN.",
                        "VernacExtend",
                        "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_wplus_1",
            "line_nb": 2782,
            "steps": [
                {
                    "command": [
                        "dependent induction w1; intros; [reflexivity|].",
                        "VernacExtend",
                        "db9dacaed5a08a11851eaaf5232e0ae67552c255"
                    ]
                },
                {
                    "command": [
                        "cbn; rewrite IHw1.",
                        "VernacExtend",
                        "16ac707336c1769cf0707b92a8bcba2bed03eb4a"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wplus_WS_0.",
                        "VernacExtend",
                        "4d64bafedd170a092af801e82da7b8dadd5bb58d"
                    ]
                },
                {
                    "command": [
                        "rewrite extz_combine; reflexivity.",
                        "VernacExtend",
                        "892f2756055fead743bb33b97f8868be728988bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_wplus_2",
            "line_nb": 2788,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wplus_1.",
                        "VernacExtend",
                        "50217a649570bf796cae7da324d92c0ced8259a3"
                    ]
                },
                {
                    "command": [
                        "apply wplus_comm.",
                        "VernacExtend",
                        "4c5cd5fd7e2282219ab0a46a005540f291ac01ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_wplus",
            "line_nb": 2794,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sigT_sig_eq in H; destruct H as [Hsz1 ?].",
                        "VernacExtend",
                        "d4b527a8c2d2cd3c8f855870366a1bcb31b90e9f"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sigT_sig_eq in H0; destruct H0 as [Hsz2 ?].",
                        "VernacExtend",
                        "3991c65393a8adf1f8e1084086636edb86a5447d"
                    ]
                },
                {
                    "command": [
                        "subst; do 2 rewrite <-(eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "9a88c1722ef2a4c9b5445daf03396372477366a9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_wminus",
            "line_nb": 2801,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sigT_sig_eq in H; destruct H as [Hsz1 ?].",
                        "VernacExtend",
                        "d4b527a8c2d2cd3c8f855870366a1bcb31b90e9f"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sigT_sig_eq in H0; destruct H0 as [Hsz2 ?].",
                        "VernacExtend",
                        "3991c65393a8adf1f8e1084086636edb86a5447d"
                    ]
                },
                {
                    "command": [
                        "subst; do 2 rewrite <-(eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "9a88c1722ef2a4c9b5445daf03396372477366a9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_sext",
            "line_nb": 2808,
            "steps": [
                {
                    "command": [
                        "intros; inversion H; reflexivity.",
                        "VernacExtend",
                        "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_extz",
            "line_nb": 2811,
            "steps": [
                {
                    "command": [
                        "intros; inversion H; reflexivity.",
                        "VernacExtend",
                        "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_wrshifta",
            "line_nb": 2814,
            "steps": [
                {
                    "command": [
                        "intros; inversion H; reflexivity.",
                        "VernacExtend",
                        "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existT_wlshift",
            "line_nb": 2817,
            "steps": [
                {
                    "command": [
                        "intros; inversion H; reflexivity.",
                        "VernacExtend",
                        "84044798ba20f2ee58e945fbfab46087d3c0d0b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_wplus",
            "line_nb": 2820,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl; reflexivity.",
                        "VernacExtend",
                        "f76723ed59021faed58ff475960c670fa7d7d243"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_2",
            "line_nb": 2824,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <-(eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "13ff164e7db4527978bc9d7f0ccd0c5ee662715d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_eq_rect",
            "line_nb": 2829,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, (eq_rect_eq_dec eq_nat_dec).",
                        "VernacExtend",
                        "ed0af8f709290eac156d3298fbd315155773bfc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wrshifta_0",
            "line_nb": 2833,
            "steps": [
                {
                    "command": [
                        "unfold wrshifta; intros; simpl.",
                        "VernacExtend",
                        "baaaeb169fb3737b92e284a47ffb0df06988b625"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "unfold sext.",
                        "VernacExtend",
                        "ea29e31ffab3e16a195127c35ddcf3653db63da7"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb w false).",
                        "VernacExtend",
                        "763f4943d539becec101168a69806c6be1073ac4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "cbn; rewrite combine_n_0.",
                        "VernacExtend",
                        "a81de83411f0eba8cc049138963fd6f655faf10e"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_rect_2; reflexivity.",
                        "VernacExtend",
                        "83a431fcffcb0c321b4bfcd7ebc60dc1b0469607"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "cbn; rewrite combine_n_0.",
                        "VernacExtend",
                        "a81de83411f0eba8cc049138963fd6f655faf10e"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_rect_2; reflexivity.",
                        "VernacExtend",
                        "83a431fcffcb0c321b4bfcd7ebc60dc1b0469607"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wrshifta_WO",
            "line_nb": 2845,
            "steps": [
                {
                    "command": [
                        "unfold wrshifta; cbn; intros.",
                        "VernacExtend",
                        "48022af252b997210dc5d53a0a9f4b6f32fbfe71"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "rewrite wzero_eq_rect.",
                        "VernacExtend",
                        "69f90daeb8542626592fa38581cbc378925fa919"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_wzero.",
                        "VernacExtend",
                        "d4609a22fd762d5b7c28611f74db688dd641b8d3"
                    ]
                },
                {
                    "command": [
                        "rewrite split2_combine.",
                        "VernacExtend",
                        "ddb532b3064265508525b59c8dfed7a03e699505"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_WO",
            "line_nb": 2853,
            "steps": [
                {
                    "command": [
                        "induction n; cbn; intros; auto.",
                        "VernacExtend",
                        "7bfcd82df77e167ffbd29b4a7eed57cbc640ecd7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wzero",
            "line_nb": 2856,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero.",
                        "VernacExtend",
                        "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
                    ]
                },
                {
                    "command": [
                        "apply combine_wzero.",
                        "VernacExtend",
                        "7e3dab931111bac34769153c85b3550b0bf263fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wrshifta_wzero",
            "line_nb": 2861,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wrshifta; cbn.",
                        "VernacExtend",
                        "cc10977d2d406a027e9d9c5ec45b8c262254cbaa"
                    ]
                },
                {
                    "command": [
                        "rewrite sext_wzero.",
                        "VernacExtend",
                        "8a8454aaea78a13520d8e1ac9572ac469c51a632"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "rewrite wzero_eq_rect.",
                        "VernacExtend",
                        "69f90daeb8542626592fa38581cbc378925fa919"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_wzero.",
                        "VernacExtend",
                        "d4609a22fd762d5b7c28611f74db688dd641b8d3"
                    ]
                },
                {
                    "command": [
                        "rewrite split2_combine.",
                        "VernacExtend",
                        "ddb532b3064265508525b59c8dfed7a03e699505"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_sext",
            "line_nb": 2871,
            "steps": [
                {
                    "command": [
                        "dependent destruction w; cbn; intros.",
                        "VernacExtend",
                        "8908316b67bf5f4989a09f209acd8a3324d2038e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold wzero, extz, sext.",
                        "VernacExtend",
                        "fa484eb63008191679f3669cbb4c5d87c78ba060"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero.",
                        "VernacExtend",
                        "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "replace (n2 + 0 + n1) with (n2 + n1) by omega.",
                        "VernacExtend",
                        "f9509024304ca3412c1f7500bb11f1a3fa379e77"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold wzero, extz, sext.",
                        "VernacExtend",
                        "fa484eb63008191679f3669cbb4c5d87c78ba060"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "a190410c0f1b732818f7223cefc841743c6d7653"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb (WS b w) false); try (rewrite <-combine_assoc_existT; reflexivity).",
                        "VernacExtend",
                        "fa2a2399d45e2fc16176a064601f328cf32c83e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_WS",
            "line_nb": 2886,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_ws.",
                        "VernacExtend",
                        "9135f0a4891d22b6e41858e48d163ecc1869a774"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb w false); reflexivity.",
                        "VernacExtend",
                        "37d2aa0417c46ee5cb0d20812fcc8aaea3944767"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wordToZ",
            "line_nb": 2891,
            "steps": [
                {
                    "command": [
                        "dependent induction w; cbn; intros; [apply wordToZ_wzero|].",
                        "VernacExtend",
                        "1eb12e16b4a098188621e5201bd6d52b6d371b17"
                    ]
                },
                {
                    "command": [
                        "dependent destruction w.",
                        "VernacExtend",
                        "76b4278ba93897ad508bb4d055f40024276791e7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sext; simpl.",
                        "VernacExtend",
                        "d17bc310ea9aa805334f4643a96b197a5152aae9"
                    ]
                },
                {
                    "command": [
                        "destruct b; cbn.",
                        "VernacExtend",
                        "231d5e6930cbe4fda915b0eb9398e7c98ad12bd1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_wones by discriminate.",
                        "VernacExtend",
                        "c00127a207885677095dd87bf0f8315b36685f44"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_wzero; reflexivity.",
                        "VernacExtend",
                        "dc112ea6cc969a05ea7b9569963d647c3b4d59d5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (WS b0 w) as ww; clear Heqww.",
                        "VernacExtend",
                        "0ba9f9812a4da8d06654d54f386c4ac7b549754d"
                    ]
                },
                {
                    "command": [
                        "rewrite sext_WS.",
                        "VernacExtend",
                        "7efa2b23aae586446b98940a32a96bf5ef7cc750"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (S n0 + n) with (S (n0 + n)) in *.",
                        "VernacExtend",
                        "ee6ffef6700eaf121b9e59e0de58d2d5b2924fa8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToZ_WS_1.",
                        "VernacExtend",
                        "a6ec9a422ad3446d782577bb7d9f1349ad53c36a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw.",
                        "VernacExtend",
                        "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "change (S n0 + n) with (S (n0 + n)) in *.",
                        "VernacExtend",
                        "ee6ffef6700eaf121b9e59e0de58d2d5b2924fa8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToZ_WS_0.",
                        "VernacExtend",
                        "4cb65b2e1b5ed7685a13c7e09cb8d4abae752ba5"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw.",
                        "VernacExtend",
                        "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_natToWord'",
            "line_nb": 2917,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros.",
                        "VernacExtend",
                        "e50b54523129cadb933ac770554446631835d938"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold sext.",
                        "VernacExtend",
                        "ea29e31ffab3e16a195127c35ddcf3653db63da7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold wzero.",
                        "VernacExtend",
                        "f6faf8379fd9fcb6a9242f23372adf39cf200158"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in *.",
                        "VernacExtend",
                        "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
                    ]
                },
                {
                    "command": [
                        "assert (n=0) by omega.",
                        "VernacExtend",
                        "1215ca1d1fc848ba4b3ec6982b2ebb8d9ab4b9fc"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sext in *.",
                        "VernacExtend",
                        "d270a57639004cb0e6bc6de842daaf348ed10e41"
                    ]
                },
                {
                    "command": [
                        "assert (@wmsb (S sz1) (natToWord (S sz1) n) false = false) as E by (apply wmsb_0_natToWord; assumption).",
                        "VernacExtend",
                        "47fba4af11a8e6cc42ea8c4dcab03b6338f28cf7"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "clear E.",
                        "VernacExtend",
                        "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord.",
                        "VernacExtend",
                        "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "specialize (IHsz1 sz2 (Nat.div2 n)).",
                        "VernacExtend",
                        "fc9c72c24566c335b64b2f51c138d92d3c35045d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHsz1.",
                        "VernacExtend",
                        "e28714245a5e63d6263062249c010f2c00516f0d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (@wmsb sz1 (natToWord sz1 (Nat.div2 n)) false = false) as E.",
                        "VernacExtend",
                        "e50ee8673d469ede80272761595bfae552e39f61"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct sz1.",
                        "VernacExtend",
                        "4ce462e00fffde2423ea53c338bcf0342d721a4d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_0_natToWord.",
                        "VernacExtend",
                        "43484af5421c814146f06acbf36252108acb30a6"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in *.",
                        "VernacExtend",
                        "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in *.",
                        "VernacExtend",
                        "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
                    ]
                },
                {
                    "command": [
                        "assert ((2 * Nat.div2 n <= n)%nat) by apply two_times_div2_bound.",
                        "VernacExtend",
                        "a8fd1671fc476ad2e51adec144b613361f0e5771"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "clear E.",
                        "VernacExtend",
                        "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "replace (pow2 (S sz1)) with (2 * (pow2 sz1)) in H.",
                        "VernacExtend",
                        "cdcdca2eb9cfc45c45be404f014b8181e7d884c7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert ((2 * Nat.div2 n <= n)%nat) by apply two_times_div2_bound.",
                        "VernacExtend",
                        "a8fd1671fc476ad2e51adec144b613361f0e5771"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_natToWord",
            "line_nb": 2963,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sext_natToWord' by assumption.",
                        "VernacExtend",
                        "b6ed329459ab6507af70b3f33de29d28313d1d9f"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wneg_natToWord''",
            "line_nb": 2969,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros.",
                        "VernacExtend",
                        "e50b54523129cadb933ac770554446631835d938"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in H.",
                        "VernacExtend",
                        "5d91c35e36aa786cb67a130ba2bb686b3092e917"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold sext in *.",
                        "VernacExtend",
                        "d270a57639004cb0e6bc6de842daaf348ed10e41"
                    ]
                },
                {
                    "command": [
                        "assert (@wmsb (S sz1) (natToWord (S sz1) n) false = true) as E.",
                        "VernacExtend",
                        "3584bebe5dfe62a890980e792bb32bdaeecd99c9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_1.",
                        "VernacExtend",
                        "a6c729fa6587be197091ff6b60f7f19cb846614c"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'; (unfold pow2 in *; fold pow2 in *; omega).",
                        "VernacExtend",
                        "a4775352935b19db7ca84d3864940fd5d3673d33"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- _ = $ ?a => remember a as b end.",
                        "VernacExtend",
                        "4d472c79eef00e9dea3ce49f344ee282ad8b387c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord.",
                        "VernacExtend",
                        "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst b.",
                        "VernacExtend",
                        "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
                    ]
                },
                {
                    "command": [
                        "rewrite mod2sub.",
                        "VernacExtend",
                        "861860d58c5e0bde6ff21a59f77cf97a27393184"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite mod2sub.",
                        "VernacExtend",
                        "861860d58c5e0bde6ff21a59f77cf97a27393184"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "replace (S sz1 + sz2) with (S (sz1 + sz2)) by omega.",
                        "VernacExtend",
                        "9fe8ba2ca4d656604827912143061be6e689e0fc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mod2_pow2_twice.",
                        "VernacExtend",
                        "b530b9653d80bdd887314190a522a14c3f46e959"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Bool.xorb_false_l.",
                        "VernacExtend",
                        "72a4274dbacfccc0bd36b9da7236871438421547"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_add_mul in *.",
                        "VernacExtend",
                        "d8c4ce83bc3e3204438112796d00eaa3ea9b2d7b"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in *.",
                        "VernacExtend",
                        "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in *.",
                        "VernacExtend",
                        "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_trans with (m := 2 * pow2 sz1); [omega|].",
                        "VernacExtend",
                        "ec25ebe4d9c67a3835a766fb7c55f41a92abf11d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_assoc.",
                        "VernacExtend",
                        "49b103377d085e1bf8c6d549842521c605529f0c"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l.",
                        "VernacExtend",
                        "860320f2310b2899875ecffa50638026b4192d2f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_1_r at 1.",
                        "VernacExtend",
                        "3cd94cec3be4b205471b1e9ed864cda97923c975"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l.",
                        "VernacExtend",
                        "860320f2310b2899875ecffa50638026b4192d2f"
                    ]
                },
                {
                    "command": [
                        "apply one_le_pow2.",
                        "VernacExtend",
                        "c89a7e759205d186045d7043bd30d2801408080b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "specialize (IHsz1 sz2 (Nat.div2 n)).",
                        "VernacExtend",
                        "fc9c72c24566c335b64b2f51c138d92d3c35045d"
                    ]
                },
                {
                    "command": [
                        "assert (Nat.div2 b = pow2 (sz1 + sz2) - (pow2 sz1 - (Nat.div2 n))) as D2.",
                        "VernacExtend",
                        "75257326b4342504f318cd37964005f8dca82450"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_minus.",
                        "VernacExtend",
                        "3c630b50e0940d15e41184864124fe0843681dba"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst b.",
                        "VernacExtend",
                        "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
                    ]
                },
                {
                    "command": [
                        "replace (S sz1 + sz2) with (S (sz1 + sz2)) by omega.",
                        "VernacExtend",
                        "9fe8ba2ca4d656604827912143061be6e689e0fc"
                    ]
                },
                {
                    "command": [
                        "unfold pow2.",
                        "VernacExtend",
                        "a5d7329d3a3012fd90168d18f09965ebd740e405"
                    ]
                },
                {
                    "command": [
                        "fold pow2.",
                        "VernacExtend",
                        "3d9edde2a7643697a0e2e03bafa1afe001049eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_minus.",
                        "VernacExtend",
                        "3c630b50e0940d15e41184864124fe0843681dba"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_sub_distr_l.",
                        "VernacExtend",
                        "e6b3c49d2bfa963328dc49414b293c6f009590a7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Nat.add_comm n).",
                        "VernacExtend",
                        "10e2547cc653a860536311c263d05d3345c804b9"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_plus_2.",
                        "VernacExtend",
                        "f0e85168af2a0e3ca823338e5804ece875e527a4"
                    ]
                },
                {
                    "command": [
                        "apply Nat.add_comm.",
                        "VernacExtend",
                        "d0b5c25a1ea370d88e82b01af30963a76e4f87ca"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_add_mul.",
                        "VernacExtend",
                        "89b567861ac3267c5a76978eda4fa001fbf43b0d"
                    ]
                },
                {
                    "command": [
                        "clear IHsz1.",
                        "VernacExtend",
                        "008aeccf7e1907e00521e19a08e9a6616f3ba80c"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in *.",
                        "VernacExtend",
                        "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in *.",
                        "VernacExtend",
                        "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
                    ]
                },
                {
                    "command": [
                        "split; [omega|].",
                        "VernacExtend",
                        "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l.",
                        "VernacExtend",
                        "860320f2310b2899875ecffa50638026b4192d2f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_1_r at 1.",
                        "VernacExtend",
                        "3cd94cec3be4b205471b1e9ed864cda97923c975"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l.",
                        "VernacExtend",
                        "860320f2310b2899875ecffa50638026b4192d2f"
                    ]
                },
                {
                    "command": [
                        "apply one_le_pow2.",
                        "VernacExtend",
                        "c89a7e759205d186045d7043bd30d2801408080b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in H.",
                        "VernacExtend",
                        "5d91c35e36aa786cb67a130ba2bb686b3092e917"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in H.",
                        "VernacExtend",
                        "babb70152eeb448d4910e3d0f27f0f3ac348e870"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (@div2_compat_lt_l (pow2 sz1) n) as P.",
                        "VernacExtend",
                        "b687e53e17e3ddbb9320b97b663c15ece6dd6a5a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_add_mul.",
                        "VernacExtend",
                        "89b567861ac3267c5a76978eda4fa001fbf43b0d"
                    ]
                },
                {
                    "command": [
                        "clear IHsz1.",
                        "VernacExtend",
                        "008aeccf7e1907e00521e19a08e9a6616f3ba80c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_1_r at 1.",
                        "VernacExtend",
                        "3cd94cec3be4b205471b1e9ed864cda97923c975"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l.",
                        "VernacExtend",
                        "860320f2310b2899875ecffa50638026b4192d2f"
                    ]
                },
                {
                    "command": [
                        "apply one_le_pow2.",
                        "VernacExtend",
                        "c89a7e759205d186045d7043bd30d2801408080b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite D2.",
                        "VernacExtend",
                        "d9d165826b523a60d59c9cb1ae758a130a1aca96"
                    ]
                },
                {
                    "command": [
                        "destruct sz1 as [|sz1'].",
                        "VernacExtend",
                        "8265291374b089b48f58d63adf3294dd322d2a3b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assert (n=1) by omega.",
                        "VernacExtend",
                        "62f23ef4ec7bb1651acdc4be935385b9b41a89a6"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "simpl in D2.",
                        "VernacExtend",
                        "05130699fff13c592ef0ed95ab0e2515f668e0cb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply wones_natToWord.",
                        "VernacExtend",
                        "5306b8595fb682674b43bebcd41d00b8d4433954"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (n <= S (2 * Nat.div2 n))%nat.",
                        "VernacExtend",
                        "91930989f157ed4ec500bc3964577334869c6c88"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (even_odd_destruct n) as [[m C]|[m C]]; subst n.",
                        "VernacExtend",
                        "3e8768cc20cd158cf7d50bf85375d17516554327"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div2_double.",
                        "VernacExtend",
                        "130a75bd67b711537ca5456b5be2e6ba6301d35e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (2 * m + 1) with (S (2 * m)) by omega.",
                        "VernacExtend",
                        "e35c14a9c8c83407a8bfd6a9b15c89a2872f2f27"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div2_succ_double.",
                        "VernacExtend",
                        "81b6beb81b8b8f17aa22a78e8a94dd1c064052fd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHsz1.",
                        "VernacExtend",
                        "e28714245a5e63d6263062249c010f2c00516f0d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (@wmsb (S sz1') (natToWord (S sz1') (Nat.div2 n)) false = true) as F.",
                        "VernacExtend",
                        "6e0b6e65aea0663d8762d6aa63ff628096a23a03"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_1_natToWord.",
                        "VernacExtend",
                        "e1099db05b4907ec68fa63a529fa1e2b4194e203"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in *.",
                        "VernacExtend",
                        "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in *.",
                        "VernacExtend",
                        "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
                    ]
                },
                {
                    "command": [
                        "assert (2 * Nat.div2 n <= n)%nat by apply two_times_div2_bound.",
                        "VernacExtend",
                        "a8fd1671fc476ad2e51adec144b613361f0e5771"
                    ]
                },
                {
                    "command": [
                        "clear -H H0 H1.",
                        "VernacExtend",
                        "32b2a5f259c3cb9803935526af9c7758e3cd3dac"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite F.",
                        "VernacExtend",
                        "6df8c10c25971db82981aba92c1e0c52d940c7f9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (2 * Nat.div2 n <= n)%nat by apply two_times_div2_bound.",
                        "VernacExtend",
                        "a8fd1671fc476ad2e51adec144b613361f0e5771"
                    ]
                },
                {
                    "command": [
                        "clear -H H0 H1.",
                        "VernacExtend",
                        "32b2a5f259c3cb9803935526af9c7758e3cd3dac"
                    ]
                },
                {
                    "command": [
                        "unfold pow2 in *.",
                        "VernacExtend",
                        "1f74293b7467ee2c72f583edb8ba1820c2c23ddb"
                    ]
                },
                {
                    "command": [
                        "fold pow2 in *.",
                        "VernacExtend",
                        "35d9ceab4956c9d61751bea0ec0526f4cf9baf0b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wneg_natToWord'",
            "line_nb": 3097,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_alt.",
                        "VernacExtend",
                        "694dd81c7967f4b51a30fb785be1257ef34b9ac8"
                    ]
                },
                {
                    "command": [
                        "unfold wnegN.",
                        "VernacExtend",
                        "21e8a4c0da4be4855f7e77403db37f02b7c6a4b8"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|n].",
                        "VernacExtend",
                        "e9a6c38314370079277fe54649bef28abc1a6c0c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.sub_0_r.",
                        "VernacExtend",
                        "5b98063e5ed2e2470f00a8793f5a5d7ccafde326"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_pow2.",
                        "VernacExtend",
                        "b17b4b2dd18651bb320463211340f92fcee41b4a"
                    ]
                },
                {
                    "command": [
                        "unfold sext.",
                        "VernacExtend",
                        "ea29e31ffab3e16a195127c35ddcf3653db63da7"
                    ]
                },
                {
                    "command": [
                        "assert (wmsb (natToWord sz1 0) false = false) as W.",
                        "VernacExtend",
                        "902612dd16f53bff32dd5fda56974fead643a674"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct sz1.",
                        "VernacExtend",
                        "4ce462e00fffde2423ea53c338bcf0342d721a4d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_0_natToWord.",
                        "VernacExtend",
                        "43484af5421c814146f06acbf36252108acb30a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite W.",
                        "VernacExtend",
                        "753cc9ba504835b36b9686849069ebc489a66305"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply wneg_zero'.",
                        "VernacExtend",
                        "23d0a175210a7f840ae6851bb6c345462a6897e2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite sext_wneg_natToWord''.",
                        "VernacExtend",
                        "09ba9298c9cd58582baa5d4f11042bbe21dc9aab"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_alt.",
                        "VernacExtend",
                        "694dd81c7967f4b51a30fb785be1257ef34b9ac8"
                    ]
                },
                {
                    "command": [
                        "unfold wnegN.",
                        "VernacExtend",
                        "21e8a4c0da4be4855f7e77403db37f02b7c6a4b8"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent' by omega.",
                        "VernacExtend",
                        "e035ff438f8e437a579e4ef18bb01cfec7ec24f5"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'.",
                        "VernacExtend",
                        "86b283e15eea7025d62b98862b2d3f7c6de916d7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "replace (pow2 sz1 - (pow2 sz1 - S n)) with (S n) by omega.",
                        "VernacExtend",
                        "bdcef9b6e9ffe4f47fcc4428a0cc107e3877c973"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_add_mul.",
                        "VernacExtend",
                        "89b567861ac3267c5a76978eda4fa001fbf43b0d"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_trans with (m := pow2 sz1); [omega|].",
                        "VernacExtend",
                        "cd7023e5f1763ff75eb9a129f9c56de118bd7fc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_1_r at 1.",
                        "VernacExtend",
                        "3cd94cec3be4b205471b1e9ed864cda97923c975"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l.",
                        "VernacExtend",
                        "860320f2310b2899875ecffa50638026b4192d2f"
                    ]
                },
                {
                    "command": [
                        "apply one_le_pow2.",
                        "VernacExtend",
                        "c89a7e759205d186045d7043bd30d2801408080b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent' by omega.",
                        "VernacExtend",
                        "e035ff438f8e437a579e4ef18bb01cfec7ec24f5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wneg_natToWord",
            "line_nb": 3142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite sext_wneg_natToWord' by assumption.",
                        "VernacExtend",
                        "d747403838d95183d72713a813bbff76ac7faaf5"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_split1",
            "line_nb": 3148,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros; [reflexivity|].",
                        "VernacExtend",
                        "a98c35c5de52833ee215bd5efe641ae90e37a44d"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [b E]].",
                        "VernacExtend",
                        "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
                    ]
                },
                {
                    "command": [
                        "match type of v with | word ?x => change x with (sz1 + sz2) in * end.",
                        "VernacExtend",
                        "17829c8288a8c63f558ae42716d14a879868cd4e"
                    ]
                },
                {
                    "command": [
                        "subst w.",
                        "VernacExtend",
                        "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
                    ]
                },
                {
                    "command": [
                        "rename v into w.",
                        "VernacExtend",
                        "79df5d37f4de91d7ebed57c9e4514bde3bcb5690"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite IHsz1.",
                        "VernacExtend",
                        "ea2e154863aaf887b945ec04d4afbe258715bcab"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 sz1).",
                        "VernacExtend",
                        "91abf3166c455ec2988cd4c4f5e3e1446742a975"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (pow2 sz1 + (pow2 sz1 + 0)) with (2 * pow2 sz1).",
                        "VernacExtend",
                        "933e6c62979656d3a31702a273b5e772ae3cfd39"
                    ]
                },
                {
                    "command": [
                        "replace (S (wordToNat w * 2)) with (1 + 2 * wordToNat w) by omega.",
                        "VernacExtend",
                        "bf27cc96f86d9daeb120b74d8328f08e968dc173"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_mod by omega.",
                        "VernacExtend",
                        "5ed62949fb7f7eecb131734622c531267be880b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_mod_distr_l; [|omega|discriminate].",
                        "VernacExtend",
                        "419fdb2cb73c576e9c310009b871ec55e0d7f3e9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_1_l by omega.",
                        "VernacExtend",
                        "19eaf796909f20617a98dd803e45bdae2dfb73bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= 2).",
                        "VernacExtend",
                        "b122e9804e353ccf6ef4451b3d898fcad411e2f5"
                    ]
                },
                {
                    "command": [
                        "change (1 + wordToNat w mod pow2 sz1 * 2) with (S (wordToNat w mod pow2 sz1 * 2)).",
                        "VernacExtend",
                        "c84d779670f8b6033ccf6922438847616504cecb"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, Nat.mod_small.",
                        "VernacExtend",
                        "c053abb7b4320e810a8be95c378f0f00848a1cf6"
                    ]
                },
                {
                    "command": [
                        "assert (pow2 sz1 <> 0) by omega.",
                        "VernacExtend",
                        "6bd15074edb9504f1ab29d639cb1f6ca1cbbd1b9"
                    ]
                },
                {
                    "command": [
                        "pose proof (Nat.mod_upper_bound (wordToNat w) (pow2 sz1) H0).",
                        "VernacExtend",
                        "ee392f7d5c2e7d3f79610e73b763ef58ea60c068"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (pow2 sz1 + (pow2 sz1 + 0)) with (2 * pow2 sz1).",
                        "VernacExtend",
                        "933e6c62979656d3a31702a273b5e772ae3cfd39"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= 2).",
                        "VernacExtend",
                        "b122e9804e353ccf6ef4451b3d898fcad411e2f5"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_mod_distr_r; [|omega|discriminate].",
                        "VernacExtend",
                        "f60035370c1a1520d898774d367d521c51dea849"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_split2",
            "line_nb": 3175,
            "steps": [
                {
                    "command": [
                        "induction sz1; intros; [rewrite Nat.div_1_r; reflexivity|].",
                        "VernacExtend",
                        "c58ef99081a7b692d06bde822301f2efaebc9529"
                    ]
                },
                {
                    "command": [
                        "destruct (destruct_word_S w) as [v [b E]].",
                        "VernacExtend",
                        "ec60c2ffc61e63a13b828563f359fd5e853be4c6"
                    ]
                },
                {
                    "command": [
                        "match type of v with | word ?x => change x with (sz1 + sz2) in * end.",
                        "VernacExtend",
                        "17829c8288a8c63f558ae42716d14a879868cd4e"
                    ]
                },
                {
                    "command": [
                        "subst w.",
                        "VernacExtend",
                        "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
                    ]
                },
                {
                    "command": [
                        "rename v into w.",
                        "VernacExtend",
                        "79df5d37f4de91d7ebed57c9e4514bde3bcb5690"
                    ]
                },
                {
                    "command": [
                        "change (split2 (S sz1) sz2 (WS b w)) with (split2 sz1 sz2 w).",
                        "VernacExtend",
                        "655d23f0fe443c48fbc90d137bf65fafca1ab25f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHsz1.",
                        "VernacExtend",
                        "71611415cf3253af956417dd206feb6f7470f1e5"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold pow2; fold pow2.",
                        "VernacExtend",
                        "21cc9cbb645a00ebed1b972aeba0f9a7eb4785e7"
                    ]
                },
                {
                    "command": [
                        "replace (@wordToNat (S sz1 + sz2) w~1) with (1 + 2 * wordToNat w) by (simpl; omega).",
                        "VernacExtend",
                        "647f0cb6b6c449ad43a1e2b9cdd37708499f596e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Nat.div_div; [|discriminate|pose proof (zero_lt_pow2 sz1); omega].",
                        "VernacExtend",
                        "6e1695487e1ba3de991d0ac76386617a276f8f40"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm, Nat.div_add by discriminate.",
                        "VernacExtend",
                        "888106ae1cfae2c63b6b33cdf3e2b531026e3f86"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div_small with (b := 2) by omega.",
                        "VernacExtend",
                        "6b50e1158e305d4f888fa51d93ff54d8dae40ea0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold pow2; fold pow2.",
                        "VernacExtend",
                        "21cc9cbb645a00ebed1b972aeba0f9a7eb4785e7"
                    ]
                },
                {
                    "command": [
                        "replace (@wordToNat (S sz1 + sz2) w~0) with (2 * wordToNat w) by (simpl; omega).",
                        "VernacExtend",
                        "3e4f544874743aefeb54e3abd030e8130925c770"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div_mul_cancel_l; [|pose proof (zero_lt_pow2 sz1); omega|discriminate].",
                        "VernacExtend",
                        "9a54bf541f08dc69fa409dbfbd3165eb19263e16"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wrshifta",
            "line_nb": 3197,
            "steps": [
                {
                    "command": [
                        "unfold wrshifta; intros.",
                        "VernacExtend",
                        "5eb70a21b984fabe60f13bf6550e58b540f297e5"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_split2.",
                        "VernacExtend",
                        "66b6701827bac5bb6bdf69f21799464daf32b48c"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_eq_rect.",
                        "VernacExtend",
                        "4ac23d5eb5e06e08334f4d1976abb31867f4e71b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_combine",
            "line_nb": 3204,
            "steps": [
                {
                    "command": [
                        "dependent induction w1; intros; [simpl; omega|].",
                        "VernacExtend",
                        "c71b20212b669d63c901624a01a2d4a808d0d624"
                    ]
                },
                {
                    "command": [
                        "unfold pow2; fold pow2.",
                        "VernacExtend",
                        "21cc9cbb645a00ebed1b972aeba0f9a7eb4785e7"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= 2).",
                        "VernacExtend",
                        "b122e9804e353ccf6ef4451b3d898fcad411e2f5"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct b.",
                        "VernacExtend",
                        "756a0c142fcb184705c9c90f018f7e739a37ff9e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw1; simpl.",
                        "VernacExtend",
                        "ca8b37c6585fbde86ae887f0729a3db61a355287"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= pow2 n * 2).",
                        "VernacExtend",
                        "ef8b48c3dfe5c3c32c8413e3396c65dbb679d068"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_assoc.",
                        "VernacExtend",
                        "54edfe37f64593a13f4d1e6aed2f06b08f8fdddf"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "771462b77f0fe3b847f28f1e65abd82fb3aff50a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= pow2 n).",
                        "VernacExtend",
                        "b1c37cb5eea012c5ce3b551d8787012be5cd5d94"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw1.",
                        "VernacExtend",
                        "97f091a8813b860dd86732c6349b3175ee6bb64f"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= pow2 n * 2).",
                        "VernacExtend",
                        "ef8b48c3dfe5c3c32c8413e3396c65dbb679d068"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_assoc.",
                        "VernacExtend",
                        "54edfe37f64593a13f4d1e6aed2f06b08f8fdddf"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "771462b77f0fe3b847f28f1e65abd82fb3aff50a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= pow2 n).",
                        "VernacExtend",
                        "b1c37cb5eea012c5ce3b551d8787012be5cd5d94"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wlshift",
            "line_nb": 3224,
            "steps": [
                {
                    "command": [
                        "intros; destruct (le_dec n sz).",
                        "VernacExtend",
                        "7198be0cfbfe02ae88c056343ec8f4c5e7b05f91"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold wlshift; intros.",
                        "VernacExtend",
                        "7201f29d809f9511d745fb0e925683cdbb0895d8"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_split1.",
                        "VernacExtend",
                        "f90c956693f21e8e6d64780a7ce5d59bca0a2b07"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_eq_rect.",
                        "VernacExtend",
                        "4ac23d5eb5e06e08334f4d1976abb31867f4e71b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wzero; simpl.",
                        "VernacExtend",
                        "8419530b351a82d20df5ebb93e4dc5540a848fef"
                    ]
                },
                {
                    "command": [
                        "replace (pow2 sz) with (pow2 (sz - n + n)) by (f_equal; omega).",
                        "VernacExtend",
                        "5af8aa787f35e7c38aa8eaa29a47c11616bb3a43"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_add_mul.",
                        "VernacExtend",
                        "89b567861ac3267c5a76978eda4fa001fbf43b0d"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= pow2 (sz - n)).",
                        "VernacExtend",
                        "90c8305257757e90c0b49302b39bcaeb3f7458cf"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_mod_distr_l; [|pose proof (zero_lt_pow2 (sz - n)); omega |pose proof (zero_lt_pow2 n); omega].",
                        "VernacExtend",
                        "f0029f94f771358aeb24d4df3cf1fe3b05daebea"
                    ]
                },
                {
                    "command": [
                        "apply Nat.mul_comm.",
                        "VernacExtend",
                        "214d963e611595db803e36923a88df4e49be12c2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (n > sz)%nat by omega.",
                        "VernacExtend",
                        "79218e19359946e9e529e5b69ce579afeb530cd1"
                    ]
                },
                {
                    "command": [
                        "rewrite wlshift_gt by assumption.",
                        "VernacExtend",
                        "7ec12ac2736e5c5ad86471c46707053f32191df8"
                    ]
                },
                {
                    "command": [
                        "replace (sz - n) with 0 by omega.",
                        "VernacExtend",
                        "2f48b5a042ec65730d43359c71c89341ecd02607"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wzero; simpl; reflexivity.",
                        "VernacExtend",
                        "c6f26561029f8159dfbf9d67b6fe52444285eb94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_extz",
            "line_nb": 3244,
            "steps": [
                {
                    "command": [
                        "unfold extz; intros.",
                        "VernacExtend",
                        "13baf4df4df2e43a3563b1c5a161d5177e8e8931"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wzero.",
                        "VernacExtend",
                        "fe66869aedb7ca996577b7cf47bb140834751f8c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_is_mult_pow2",
            "line_nb": 3250,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction d.",
                        "VernacExtend",
                        "30af4961cbf357f172c140eb2d6733caae90c485"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold extz.",
                        "VernacExtend",
                        "557e799e1818c83507658b6ee36d3f0ffe426031"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_0_n.",
                        "VernacExtend",
                        "69cbd1406bab80314c63fed43dd4b54a3895596d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold extz in *.",
                        "VernacExtend",
                        "b1401d49de156d4181be7257294eea68d0be68c0"
                    ]
                },
                {
                    "command": [
                        "change (pow2 (S d) * n) with (2 * pow2 d * n).",
                        "VernacExtend",
                        "ac2a0b5955586b298da3d4dd25a4ac5e54558b08"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_assoc.",
                        "VernacExtend",
                        "6ff349e2fd7aeb46fe9a4a4aec284624f4329bfc"
                    ]
                },
                {
                    "command": [
                        "change ((S d) + sz) with (S (d + sz)) in *.",
                        "VernacExtend",
                        "3d3cf05f664950f0e61dec33c0c264299df16065"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_times2.",
                        "VernacExtend",
                        "d4b50e3e72c3eef73d2b861784b9dea673ffa3e8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "exact IHd.",
                        "VernacExtend",
                        "854770f0db23dfec442fd6a8cd5e067e8a62b618"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_is_mult_pow2_neg",
            "line_nb": 3270,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction d.",
                        "VernacExtend",
                        "30af4961cbf357f172c140eb2d6733caae90c485"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold extz.",
                        "VernacExtend",
                        "557e799e1818c83507658b6ee36d3f0ffe426031"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_0_n.",
                        "VernacExtend",
                        "69cbd1406bab80314c63fed43dd4b54a3895596d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold extz in *.",
                        "VernacExtend",
                        "b1401d49de156d4181be7257294eea68d0be68c0"
                    ]
                },
                {
                    "command": [
                        "change (pow2 (S d) * n) with (2 * pow2 d * n).",
                        "VernacExtend",
                        "ac2a0b5955586b298da3d4dd25a4ac5e54558b08"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.mul_assoc.",
                        "VernacExtend",
                        "6ff349e2fd7aeb46fe9a4a4aec284624f4329bfc"
                    ]
                },
                {
                    "command": [
                        "change ((S d) + sz) with (S (d + sz)) in *.",
                        "VernacExtend",
                        "3d3cf05f664950f0e61dec33c0c264299df16065"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_times2.",
                        "VernacExtend",
                        "d4b50e3e72c3eef73d2b861784b9dea673ffa3e8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold natToWord.",
                        "VernacExtend",
                        "7c24b25f9685650de6a2471a566b4cac12e1c422"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_WS_0.",
                        "VernacExtend",
                        "4c7dc244d8060ce3d1c7e7a8bd874b4389750c19"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "exact IHd.",
                        "VernacExtend",
                        "854770f0db23dfec442fd6a8cd5e067e8a62b618"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_sext_bypass",
            "line_nb": 3293,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj in H; subst.",
                        "VernacExtend",
                        "6d5bfba5e0d078f2750710b7d04c9ccec0e1d33e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_sext",
            "line_nb": 3298,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "a190410c0f1b732818f7223cefc841743c6d7653"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb w2 false); apply combine_assoc_existT.",
                        "VernacExtend",
                        "146ca665b5d2313de7c4d8902b8408ddd6f78794"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_extz",
            "line_nb": 3303,
            "steps": [
                {
                    "command": [
                        "unfold extz; cbn; intros.",
                        "VernacExtend",
                        "8f16003bf57d2f047d220c751f0b5c58e9aaa515"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_assoc_existT.",
                        "VernacExtend",
                        "47676e3e24cbd55df0fe9c296955eb45478ae02e"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wrshifta_extz_sext",
            "line_nb": 3309,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-extz_sext.",
                        "VernacExtend",
                        "c637ab14664cb7e1a92cffbd7283f7357a16434f"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_existT; [omega|].",
                        "VernacExtend",
                        "0d25de651ad70381c184ac960c04c4ef342d9c8a"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wrshifta.",
                        "VernacExtend",
                        "0c8f6fdcd9773c6180caf6db8f7ba2f2f78d4022"
                    ]
                },
                {
                    "command": [
                        "replace (wordToNat (sext (extz w (n1 + n2)) n1)) with (wordToNat (sext (extz (extz w n2) n1) n1)).",
                        "VernacExtend",
                        "1461b699b70fa5d2a2d60594c8c4a6b9e6741306"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (wordToNat (sext (extz (extz w n2) n1) n1)) with (wordToNat (extz (sext (extz w n2) n1) n1)) by apply existT_wordToNat, extz_sext.",
                        "VernacExtend",
                        "dee1c6215a451b9264468c9dee69add4b187dbc5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToNat_extz.",
                        "VernacExtend",
                        "fed11d69260d0a8053d2f9b924fa4f8ffd4cea13"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm, Nat.div_mul by (pose proof (zero_lt_pow2 n1); omega).",
                        "VernacExtend",
                        "34f57831ba91997e630784a1ac8a8d58a740a187"
                    ]
                },
                {
                    "command": [
                        "replace (wordToNat (sext (extz w n2) n1)) with (wordToNat (extz (sext w n1) n2)) by apply existT_wordToNat, extz_sext.",
                        "VernacExtend",
                        "1bb9f651cbbd9a7185f938119393764026b45a69"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_extz.",
                        "VernacExtend",
                        "dbcfb82d4c5d966c4a501d7ea65e700ede276cf7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_sext_bypass; [omega|].",
                        "VernacExtend",
                        "66e41f1b6dd7d83a4ef95dadf82cc8a6656fc252"
                    ]
                },
                {
                    "command": [
                        "apply existT_wordToNat.",
                        "VernacExtend",
                        "127855e4d547043815f97c99db3feee340f204c1"
                    ]
                },
                {
                    "command": [
                        "apply extz_extz.",
                        "VernacExtend",
                        "a25e754a9dd6ae1bae86c9e0e4305e3376b19b70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_sext_modulo",
            "line_nb": 3327,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 sz).",
                        "VernacExtend",
                        "396ae7ca3d9bce18175c967280dd2d544ee8e976"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb w false).",
                        "VernacExtend",
                        "763f4943d539becec101168a69806c6be1073ac4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm, Nat.mod_add by omega.",
                        "VernacExtend",
                        "525be3cc058d33a4e4785f1c2f215172bd12d8d5"
                    ]
                },
                {
                    "command": [
                        "apply Nat.mod_small.",
                        "VernacExtend",
                        "400866177b35e26a3bfab5760ab5c841610bd82b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm, Nat.mod_add by omega.",
                        "VernacExtend",
                        "525be3cc058d33a4e4785f1c2f215172bd12d8d5"
                    ]
                },
                {
                    "command": [
                        "apply Nat.mod_small.",
                        "VernacExtend",
                        "400866177b35e26a3bfab5760ab5c841610bd82b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_bound.",
                        "VernacExtend",
                        "efffe0e0b547eee7a67353651fd07ff5fb282d1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_sext_extz",
            "line_nb": 3342,
            "steps": [
                {
                    "command": [
                        "intros; apply wordToNat_existT; [omega|].",
                        "VernacExtend",
                        "7e94d6af91e130c129212b476b2052208bf8f05f"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wlshift.",
                        "VernacExtend",
                        "f79d604619df9d26aa489e2a1d4123006396df76"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_extz.",
                        "VernacExtend",
                        "dbcfb82d4c5d966c4a501d7ea65e700ede276cf7"
                    ]
                },
                {
                    "command": [
                        "replace (sz + n - n) with sz by omega.",
                        "VernacExtend",
                        "403083154dce5527bc7e37dc79362991be83c596"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_sext_modulo.",
                        "VernacExtend",
                        "8a5f918485d20f126b86b6e08e4d8a7f42bc0b6b"
                    ]
                },
                {
                    "command": [
                        "apply Nat.mul_comm.",
                        "VernacExtend",
                        "214d963e611595db803e36923a88df4e49be12c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_combine_extz",
            "line_nb": 3350,
            "steps": [
                {
                    "command": [
                        "intros; apply wordToNat_existT; [omega|].",
                        "VernacExtend",
                        "7e94d6af91e130c129212b476b2052208bf8f05f"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wlshift.",
                        "VernacExtend",
                        "f79d604619df9d26aa489e2a1d4123006396df76"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_extz.",
                        "VernacExtend",
                        "dbcfb82d4c5d966c4a501d7ea65e700ede276cf7"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_split1.",
                        "VernacExtend",
                        "f90c956693f21e8e6d64780a7ce5d59bca0a2b07"
                    ]
                },
                {
                    "command": [
                        "replace (sl + (ssu + sn) - sn) with (sl + ssu) by omega.",
                        "VernacExtend",
                        "1fbb053f083a441feb864a3ce28f0929006c2b3a"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm; f_equal.",
                        "VernacExtend",
                        "2f6853302d3037f368fbecb788fce4983edd07a1"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_add_mul.",
                        "VernacExtend",
                        "89b567861ac3267c5a76978eda4fa001fbf43b0d"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 sl).",
                        "VernacExtend",
                        "16b643be8a569343c126c46a2fb83dad3b840ef2"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 ssu).",
                        "VernacExtend",
                        "6d1cdb3332801b091adb82c8fe1652babfa9d1c0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_mul_r; try omega.",
                        "VernacExtend",
                        "d5d659966d2e9d2a099d5f04e91195d8c5839456"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm with (n:= pow2 sl) at 1.",
                        "VernacExtend",
                        "19e8c209443303abd3049cb7f9d292c097f4b32b"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_add; [|omega].",
                        "VernacExtend",
                        "f8cbc4aca8b16eb72fe071ac7775b589bac2d844"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small by apply wordToNat_bound.",
                        "VernacExtend",
                        "f72acd44583909d880108e0eb4a97f89d4ffef4d"
                    ]
                },
                {
                    "command": [
                        "do 3 f_equal.",
                        "VernacExtend",
                        "c21e62c3422d6abf491307169ebac9e492ad6aba"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm, Nat.div_add; [|omega].",
                        "VernacExtend",
                        "e3f78d4d5aa00f5617ad586a5bb9bba0261de773"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div_small by apply wordToNat_bound.",
                        "VernacExtend",
                        "75843c0218ffdf6d65eedec907f0ed8d5ed6f23b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_sext_eq_rect",
            "line_nb": 3371,
            "steps": [
                {
                    "command": [
                        "intros; subst; simpl.",
                        "VernacExtend",
                        "569be4cc36a0d66a8d9913bff76c710f10f29f2a"
                    ]
                },
                {
                    "command": [
                        "assert (Hsz: n2 + sz + n1 = n2 + (sz + n1)) by omega.",
                        "VernacExtend",
                        "52dc199052d493f0e95d54c2f0755d8787ce0f89"
                    ]
                },
                {
                    "command": [
                        "exists Hsz.",
                        "VernacExtend",
                        "e5e4482605fd6275eb1a9ff7e72d0fe79c6d92f9"
                    ]
                },
                {
                    "command": [
                        "pose proof (extz_sext w n1 n2).",
                        "VernacExtend",
                        "6ce93571c3eec57fe6893f373acee351ed3fa056"
                    ]
                },
                {
                    "command": [
                        "pose proof (eq_sigT_snd H).",
                        "VernacExtend",
                        "53ffe62035bdd930720a6684af3513d178a823b0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_zero",
            "line_nb": 3381,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero.",
                        "VernacExtend",
                        "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_split1",
            "line_nb": 3387,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb w false); apply split1_combine.",
                        "VernacExtend",
                        "0b871ea42d31e36b2f421fb2b8acc45eeeeb0724"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_sext",
            "line_nb": 3391,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as wmsb; destruct wmsb.",
                        "VernacExtend",
                        "eb6e4662af011ff1ca00926eb10909e90de5cf4d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n1 as [|n1].",
                        "VernacExtend",
                        "fd4ea1a0f514cfd39c5064952f5c9bc5968c314f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "cbn; rewrite wmsb_combine_WO, <-Heqwmsb.",
                        "VernacExtend",
                        "bc7183950deabcc3ab5aba0295d33d8636cfaf19"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_assoc_existT.",
                        "VernacExtend",
                        "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "a190410c0f1b732818f7223cefc841743c6d7653"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wones.",
                        "VernacExtend",
                        "4bdba525c12215d90626bdff07da39d98979a807"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_assoc_existT.",
                        "VernacExtend",
                        "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wones.",
                        "VernacExtend",
                        "c71455d1a32d11d6a5944fdadbee7ac5ded01f81"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n1 as [|n1].",
                        "VernacExtend",
                        "fd4ea1a0f514cfd39c5064952f5c9bc5968c314f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "cbn; rewrite wmsb_combine_WO, <-Heqwmsb.",
                        "VernacExtend",
                        "bc7183950deabcc3ab5aba0295d33d8636cfaf19"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_assoc_existT.",
                        "VernacExtend",
                        "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate.",
                        "VernacExtend",
                        "a190410c0f1b732818f7223cefc841743c6d7653"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero.",
                        "VernacExtend",
                        "8819b9e0957fc19f2ce90b58d31a7c934714d8e0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_assoc_existT.",
                        "VernacExtend",
                        "d4cba4b5917fc0980d5b4cd2554786236c4cde21"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_wzero.",
                        "VernacExtend",
                        "9b69687f82823b16ba7fa86fbad0927da583d5a8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_wordToN",
            "line_nb": 3419,
            "steps": [
                {
                    "command": [
                        "unfold wneg; intros.",
                        "VernacExtend",
                        "a34976f5b901ec32494372ac0b8676bd0840c605"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2.",
                        "VernacExtend",
                        "8a0683d8ddcae6b07999f79e8a371bc3b1f8be5b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound w).",
                        "VernacExtend",
                        "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
                    ]
                },
                {
                    "command": [
                        "nomega.",
                        "VernacExtend",
                        "172a67512b5be7cabf23ff79ed79dc00750b182b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nmul_two",
            "line_nb": 3428,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl; auto.",
                        "VernacExtend",
                        "1e3544c1db38cf9d3b82500db7d90f24bce9aeea"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_diag.",
                        "VernacExtend",
                        "b82cadf05fca2fdc0563f6d5cb2a2cda97045685"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_false_bound",
            "line_nb": 3434,
            "steps": [
                {
                    "command": [
                        "apply (induct_word_S (fun sz w => wmsb w false = false -> (wordToN w < Npow2 sz)%N)); [simpl; intros; subst; nomega|].",
                        "VernacExtend",
                        "d77ac3ccbd7b141ce0245072ea7e296151d1671e"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Npow2_S, Nmul_two.",
                        "VernacExtend",
                        "466597bfcb74dfe77f14926ba1c6d644ad178f34"
                    ]
                },
                {
                    "command": [
                        "specialize (H H0).",
                        "VernacExtend",
                        "c54bab77619d44044b341734ba5cf8906d22a6cc"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_1.",
                        "VernacExtend",
                        "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_comm.",
                        "VernacExtend",
                        "d287d4917158c2c272464d1c50d3a66590eb41e5"
                    ]
                },
                {
                    "command": [
                        "apply N.mul_2_mono_l; auto.",
                        "VernacExtend",
                        "058e79a942994d8ec0d6478cf2ab47c6cd0f5b8f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "apply N.mul_lt_mono_pos_l; [nomega|].",
                        "VernacExtend",
                        "6d40299a36054db989050e014199b7aa07253543"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_true_bound",
            "line_nb": 3448,
            "steps": [
                {
                    "command": [
                        "apply (induct_word_S (fun sz w => wmsb w false = true -> (Npow2 sz <= wordToN w)%N)); [simpl; intros; subst; reflexivity|].",
                        "VernacExtend",
                        "2e53d42b4ea9d43a9ad8ee58497d2f6c91bd4f6e"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Npow2_S, Nmul_two.",
                        "VernacExtend",
                        "466597bfcb74dfe77f14926ba1c6d644ad178f34"
                    ]
                },
                {
                    "command": [
                        "specialize (H H0).",
                        "VernacExtend",
                        "c54bab77619d44044b341734ba5cf8906d22a6cc"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_1.",
                        "VernacExtend",
                        "6d0e396d42fd66dbccb6ae28a79ae07e1ba7e7b6"
                    ]
                },
                {
                    "command": [
                        "apply N.mul_le_mono_nonneg_l with (p:= 2%N) in H; [|compute; discriminate].",
                        "VernacExtend",
                        "fb3c8ab2aa999e9fa0546c0bd1736848249322b7"
                    ]
                },
                {
                    "command": [
                        "rewrite N.add_1_r.",
                        "VernacExtend",
                        "d4178f221d827a2b0453b807fc1a68ff0b94c2c0"
                    ]
                },
                {
                    "command": [
                        "apply N.le_le_succ_r.",
                        "VernacExtend",
                        "8b21c1c9da8e6f93517d8d318b45311100097a53"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_WS_0.",
                        "VernacExtend",
                        "53bbce6f30fafa0f2706e68b739561a4608a5c17"
                    ]
                },
                {
                    "command": [
                        "apply N.mul_le_mono_nonneg_l; [compute; discriminate|].",
                        "VernacExtend",
                        "f76ff76bfd149443174fb1408bf90b237543845f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_wordToZ",
            "line_nb": 3464,
            "steps": [
                {
                    "command": [
                        "unfold ZToWord, wordToZ; intros.",
                        "VernacExtend",
                        "5927b6c2cc654c1356ea7d14aa99904da785395f"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as msb; destruct msb.",
                        "VernacExtend",
                        "0dad806b701c260963ec8676142ca43e0383d8f0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w)) as ww.",
                        "VernacExtend",
                        "93a9dc0b82c12437edae4280cca5afcf28404d99"
                    ]
                },
                {
                    "command": [
                        "destruct ww.",
                        "VernacExtend",
                        "a765301088684f68a5f1f380c9a983c7fd801cf5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (wneg w = wzero _).",
                        "VernacExtend",
                        "d7b99d2bbff91b8eca2fddea73efbe5d35c38579"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj; rewrite <-Heqww.",
                        "VernacExtend",
                        "6d62310475a5d8047b75ab4ac6887b2de7b9344e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite wzero'_def.",
                        "VernacExtend",
                        "6ad764d3d264b9860886e858fa77585126f1f754"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent, H.",
                        "VernacExtend",
                        "fed49e1349839aca94832b0e73a1006adcca9ae2"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wzero_wneg.",
                        "VernacExtend",
                        "95e313871457f6890c62f2109bf3f7bc6f8b1b68"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (wneg w = NToWord _ (N.pos p)).",
                        "VernacExtend",
                        "2b10f0bec1c415a5d1374e866eb458749144d4b3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj; rewrite Heqww.",
                        "VernacExtend",
                        "0c62f831466c7d0aa093e387076ba377433cea0c"
                    ]
                },
                {
                    "command": [
                        "rewrite NToWord_wordToN.",
                        "VernacExtend",
                        "3ac8cf6e7f7b47b4dc9d3f0a7e8b7423c95ebfb5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent, H.",
                        "VernacExtend",
                        "fed49e1349839aca94832b0e73a1006adcca9ae2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w) as ww.",
                        "VernacExtend",
                        "48dc9c8c0363f4c7d65fd81834d3528efdd73372"
                    ]
                },
                {
                    "command": [
                        "destruct ww.",
                        "VernacExtend",
                        "a765301088684f68a5f1f380c9a983c7fd801cf5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (w = wzero _); subst.",
                        "VernacExtend",
                        "b7511495bbe0a6cb5c1063745274436032d3fbb1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj; rewrite <-Heqww.",
                        "VernacExtend",
                        "6d62310475a5d8047b75ab4ac6887b2de7b9344e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat.",
                        "VernacExtend",
                        "ecf213ba2df181a655d55de7a6d6190f69ce7b78"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0.",
                        "VernacExtend",
                        "79ccc67f582efcfa78a091632fd9e26e1e06aee4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply wzero'_def.",
                        "VernacExtend",
                        "d0eed840ac797e0f5b653ce1627ea6830629f26f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (w = NToWord _ (N.pos p)); subst.",
                        "VernacExtend",
                        "16671be0c1e69e10e1cc36f2f7cd4727e8b4ac0a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj; rewrite Heqww.",
                        "VernacExtend",
                        "0c62f831466c7d0aa093e387076ba377433cea0c"
                    ]
                },
                {
                    "command": [
                        "rewrite NToWord_wordToN.",
                        "VernacExtend",
                        "3ac8cf6e7f7b47b4dc9d3f0a7e8b7423c95ebfb5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_ZToWord",
            "line_nb": 3511,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ, ZToWord; intros.",
                        "VernacExtend",
                        "73cfb00827b3e7cabb79ffdf5f7b1a4dfbe3d58e"
                    ]
                },
                {
                    "command": [
                        "destruct z.",
                        "VernacExtend",
                        "7ad6537de6adc4973a413756c31bffcd5e25902c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero'.",
                        "VernacExtend",
                        "a18eead29dbcb06a4526e699bbff8c001860f19c"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_wzero'.",
                        "VernacExtend",
                        "468227fdef3c667dd15cf8a3d2a2f8463bc667d3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite posToWord_nat.",
                        "VernacExtend",
                        "d56d1090b2a96dd459a96fe0f5abca0dbbe9c925"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb (natToWord (S sz) (Pos.to_nat p)) false) as msb.",
                        "VernacExtend",
                        "fd4a5f79c20a53899d8c6e2ee078a2b2c9a367e2"
                    ]
                },
                {
                    "command": [
                        "destruct msb.",
                        "VernacExtend",
                        "1a6440c8926b5b29bcb81c8744f032766a165f1c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "simpl in H; destruct H.",
                        "VernacExtend",
                        "38eef4331a212505c35fb3217ab7baa59eb700da"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wmsb_true_bound in Heqmsb.",
                        "VernacExtend",
                        "85f0c1a7ec18d46c3c8a11a37c5a84862eca1d4e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_N_nat, <-NToWord_nat in Heqmsb.",
                        "VernacExtend",
                        "74cc62bb46e5e40b99855cee49e2bb88132c347c"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_nat_Z in H0.",
                        "VernacExtend",
                        "55a5b68fd102fed3e7eead47d87aea7acb873bdf"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_lt in H0.",
                        "VernacExtend",
                        "9487a8ae5ebc63c2bd615bdb1fb7a5594721df8f"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_N_nat, <-Npow2_nat in H0.",
                        "VernacExtend",
                        "ca99e48a05823bbe10ca9fff66f7778c6fdceea7"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in in H0.",
                        "VernacExtend",
                        "45f2d4cdcda0c3667e2932c1b795e61268ef7192"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_NToWord (S sz) (N.pos p)).",
                        "VernacExtend",
                        "03fbb4f2a7e8cccce28e929cb60e7a729cacb778"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [k [? ?]].",
                        "VernacExtend",
                        "bb0527511e5d939a3e433c2eae09dadaaeaa0df1"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in Heqmsb.",
                        "VernacExtend",
                        "63c7832330a1850e985cc8a3f0f3008ed60fed67"
                    ]
                },
                {
                    "command": [
                        "assert (N.pos p - k * Npow2 (S sz) <= N.pos p)%N by apply N.le_sub_l.",
                        "VernacExtend",
                        "16d31cc3d424575792710a3c8075647c9a7bb76b"
                    ]
                },
                {
                    "command": [
                        "assert (Npow2 sz <= N.pos p)%N by (etransitivity; eassumption).",
                        "VernacExtend",
                        "daa7dc840cbe72145485b40aacbc9f41208d738b"
                    ]
                },
                {
                    "command": [
                        "apply N.le_ngt in H4; auto.",
                        "VernacExtend",
                        "7dcd3b19428c2e8db7d29b7dd55625f8857341ee"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, wordToNat_natToWord_2.",
                        "VernacExtend",
                        "1823c79972fdefa857261ac2b607cc5befec620c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite positive_nat_N; reflexivity.",
                        "VernacExtend",
                        "1c508527ca1a0ca9d2c0f9b27694ed5fd8964a88"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat, <-positive_N_nat.",
                        "VernacExtend",
                        "d80822e9c1ea3670d6fb52570167aa007f51a832"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out.",
                        "VernacExtend",
                        "88011e98490d3cb838470918eccbf2398241c2dd"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_pos, <-N_nat_Z in H0.",
                        "VernacExtend",
                        "6de2c55dac4a578800b093680eed673b6ae1e3f7"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_lt in H0.",
                        "VernacExtend",
                        "9487a8ae5ebc63c2bd615bdb1fb7a5594721df8f"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat in H0.",
                        "VernacExtend",
                        "2add03ccc004f50a19c28095cf7a57bf5604b4da"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in.",
                        "VernacExtend",
                        "8b9ae7df6e078b1e67815929f5d406d636411e23"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_S, N2Nat.inj_add.",
                        "VernacExtend",
                        "3c1ef5197252d1a3b4212651674b7698d2945f41"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_idempotent.",
                        "VernacExtend",
                        "82aa980f27698353e1fb8f23ab935a5c8f29c35e"
                    ]
                },
                {
                    "command": [
                        "rewrite posToWord_nat.",
                        "VernacExtend",
                        "d56d1090b2a96dd459a96fe0f5abca0dbbe9c925"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb (wneg (natToWord (S sz) (Pos.to_nat p))) false) as msb.",
                        "VernacExtend",
                        "5edf388e0477918871735240bc46c9be6e23ba38"
                    ]
                },
                {
                    "command": [
                        "destruct msb.",
                        "VernacExtend",
                        "1a6440c8926b5b29bcb81c8744f032766a165f1c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_nat, wordToNat_natToWord_2.",
                        "VernacExtend",
                        "1823c79972fdefa857261ac2b607cc5befec620c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite positive_nat_N; reflexivity.",
                        "VernacExtend",
                        "1c508527ca1a0ca9d2c0f9b27694ed5fd8964a88"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat, <-positive_N_nat.",
                        "VernacExtend",
                        "d80822e9c1ea3670d6fb52570167aa007f51a832"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out.",
                        "VernacExtend",
                        "88011e98490d3cb838470918eccbf2398241c2dd"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Z.opp_le_mono in H.",
                        "VernacExtend",
                        "74c4d2ee684dafa27b6ff2f2b8dae34d7aced47d"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Z.opp_neg, Z.opp_involutive in H.",
                        "VernacExtend",
                        "1c2bf86608607b452c980a92dcfe0b6253870bf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_pos, <-N_nat_Z in H.",
                        "VernacExtend",
                        "23ef81fdd37ee4ab30353edf2e1c8078cc488382"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_le in H.",
                        "VernacExtend",
                        "1d720e158e20baaf32a47584ff1ac16989b4b922"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat in H.",
                        "VernacExtend",
                        "34e8d7b6540a165234f52e4e3856cc325df28adb"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in.",
                        "VernacExtend",
                        "8b9ae7df6e078b1e67815929f5d406d636411e23"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_S, N2Nat.inj_add.",
                        "VernacExtend",
                        "3c1ef5197252d1a3b4212651674b7698d2945f41"
                    ]
                },
                {
                    "command": [
                        "assert (N.to_nat (Npow2 sz) > 0)%nat by (rewrite Npow2_nat; apply pow2_zero).",
                        "VernacExtend",
                        "6c614b7440e22e3c86afe7b0ef4f38290c0493a6"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wmsb_false_bound in Heqmsb.",
                        "VernacExtend",
                        "20dc52ac728193d528a5e213d276ee577d9139fa"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_wordToN in Heqmsb.",
                        "VernacExtend",
                        "b6841d75f1786807dcc5cdc1272b9d992309e33c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_S in Heqmsb.",
                        "VernacExtend",
                        "0ac7619e81615fe56435feff01302ec3a0e23ff5"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.add_0_r in Heqmsb.",
                        "VernacExtend",
                        "765774d04bbf25c929d2a0ab6afb5b4fd2fbd1cd"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N.add_sub_assoc in Heqmsb.",
                        "VernacExtend",
                        "906b0696f0210fb711210b011f406b7fa634121e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply N.add_lt_mono_l in Heqmsb.",
                        "VernacExtend",
                        "891b7ed9af820691fb8da43847fd000b11dcd126"
                    ]
                },
                {
                    "command": [
                        "exfalso; eapply N.nlt_0_r; eauto.",
                        "VernacExtend",
                        "2938b645de35ddb19c19bf3b56c1a54cbd6b173a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Z.opp_le_mono in H.",
                        "VernacExtend",
                        "74c4d2ee684dafa27b6ff2f2b8dae34d7aced47d"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Z.opp_neg, Z.opp_involutive in H.",
                        "VernacExtend",
                        "1c2bf86608607b452c980a92dcfe0b6253870bf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_pos, <-N_nat_Z in H.",
                        "VernacExtend",
                        "23ef81fdd37ee4ab30353edf2e1c8078cc488382"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_le in H.",
                        "VernacExtend",
                        "1d720e158e20baaf32a47584ff1ac16989b4b922"
                    ]
                },
                {
                    "command": [
                        "rewrite positive_N_nat in H.",
                        "VernacExtend",
                        "43a3ffef3fe69c292de6d8feee5ec6136f253de4"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_N_nat, <-NToWord_nat.",
                        "VernacExtend",
                        "ce6cbfcb0e38621e0d2836d1aed1da8be8e5b3e6"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_NToWord (S sz) (N.pos p)).",
                        "VernacExtend",
                        "03fbb4f2a7e8cccce28e929cb60e7a729cacb778"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [k [? ?]]; rewrite H1.",
                        "VernacExtend",
                        "c9d99325140babc1a34bf0511063aa05b7ff7611"
                    ]
                },
                {
                    "command": [
                        "etransitivity; [apply N.le_sub_l|].",
                        "VernacExtend",
                        "f25350b93dc8363368f645c31d3007169f9e9698"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat in H.",
                        "VernacExtend",
                        "34e8d7b6540a165234f52e4e3856cc325df28adb"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_N_nat in H.",
                        "VernacExtend",
                        "17004268777e3bef4aa4ea277613d0c38ece2616"
                    ]
                },
                {
                    "command": [
                        "unfold N.le; rewrite N2Nat.inj_compare.",
                        "VernacExtend",
                        "864cfe3f759cb66af1ea9d102270cc4bf2b79fac"
                    ]
                },
                {
                    "command": [
                        "apply nat_compare_le; auto.",
                        "VernacExtend",
                        "46f383ad2fe40ed3ca9b6fc1060cc0b808e4946f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intro Hx.",
                        "VernacExtend",
                        "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
                    ]
                },
                {
                    "command": [
                        "replace 0%N with (wordToN (wzero (S sz))) in Hx by apply wordToN_wzero.",
                        "VernacExtend",
                        "a0f971b77a234d3a0e05aba3d0a7c9b08caf60cc"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Hx.",
                        "VernacExtend",
                        "dd91158414736fa4862b9f03a516b8cb7842642a"
                    ]
                },
                {
                    "command": [
                        "assert (wordToNat (natToWord (S sz) (Pos.to_nat p)) = 0) by (rewrite Hx; apply wordToNat_wzero).",
                        "VernacExtend",
                        "4da89bb3cbc0ad1ece34bb283d1e78d1d70bcb30"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_2 in H0.",
                        "VernacExtend",
                        "c9c1e643cc6b861025e5cec103f86375bb640e6a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear -H0.",
                        "VernacExtend",
                        "26b60cd70d9cbb77dd5e024fa10fa554555a88cc"
                    ]
                },
                {
                    "command": [
                        "induction p; simpl in H0; try discriminate.",
                        "VernacExtend",
                        "4153a51cf1fef2b178b77504c33ca554b384bd55"
                    ]
                },
                {
                    "command": [
                        "elim IHp; rewrite Pos2Nat.inj_xO in H0; omega.",
                        "VernacExtend",
                        "585fe33df813a5ff667df8be52eac153e598ca03"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Z.opp_le_mono in H.",
                        "VernacExtend",
                        "74c4d2ee684dafa27b6ff2f2b8dae34d7aced47d"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Z.opp_neg, Z.opp_involutive in H.",
                        "VernacExtend",
                        "1c2bf86608607b452c980a92dcfe0b6253870bf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_pos, <-N_nat_Z in H.",
                        "VernacExtend",
                        "23ef81fdd37ee4ab30353edf2e1c8078cc488382"
                    ]
                },
                {
                    "command": [
                        "apply Nat2Z.inj_le in H.",
                        "VernacExtend",
                        "1d720e158e20baaf32a47584ff1ac16989b4b922"
                    ]
                },
                {
                    "command": [
                        "rewrite positive_N_nat in H.",
                        "VernacExtend",
                        "43a3ffef3fe69c292de6d8feee5ec6136f253de4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz).",
                        "VernacExtend",
                        "8e403dfcd800041cdb84d22c1a85359689fe52e0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_ZToWord''",
            "line_nb": 3625,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz; [lia|].",
                        "VernacExtend",
                        "3be13f79e98d713dff6e8fe54d3ef0749064e447"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_ZToWord.",
                        "VernacExtend",
                        "02f7b5a69f71618baca1cd90f55330e5fc2ca3d5"
                    ]
                },
                {
                    "command": [
                        "replace (Z.of_nat (S sz) - 1)%Z with (Z.of_nat sz) in * by lia.",
                        "VernacExtend",
                        "5f029fedb869bff2916e08325e92899687e99c03"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_pow.",
                        "VernacExtend",
                        "11733059196123552663bf15a965a45731d238ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wordToN",
            "line_nb": 3633,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; intros.",
                        "VernacExtend",
                        "5714496e388c686b08c1c9ac23abf2832594244a"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as msb; destruct msb; [|simpl; rewrite Z.sub_0_r; reflexivity].",
                        "VernacExtend",
                        "13b885078b1a7bfeeb3a72c8df0ee8e0a5e49b09"
                    ]
                },
                {
                    "command": [
                        "destruct (weq w (wzero _)); subst; [rewrite wmsb_wzero in Heqmsb; discriminate|].",
                        "VernacExtend",
                        "934faa0da6b8a08037f15622543d76be89443528"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_wordToN.",
                        "VernacExtend",
                        "5488a0a6e7fd1c4e9a521a0a1bc6ee446a672968"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound w).",
                        "VernacExtend",
                        "36563b915c53a2874b58af8ff5d0607dbc8f5d0b"
                    ]
                },
                {
                    "command": [
                        "replace (Z.of_N (wordToN w) - Z.of_N (Npow2 sz))%Z with (- (Z.of_N (Npow2 sz) - Z.of_N (wordToN w)))%Z by omega.",
                        "VernacExtend",
                        "6d9b2051b94d343ad691687f9f184c1b3d2cbdfe"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_sub by (apply N.lt_le_incl; assumption).",
                        "VernacExtend",
                        "b01cf5dc64697a3a4b1a044f5a0e136691bc7325"
                    ]
                },
                {
                    "command": [
                        "clear; destruct (Npow2 sz - wordToN w)%N; reflexivity.",
                        "VernacExtend",
                        "654c84d1781912a53924b71d62398812b6f0cc8c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Hx; elim n.",
                        "VernacExtend",
                        "915806f47814685ab14b8c9acfe6e8a39c067a18"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToN_wzero with (sz:= sz) in Hx.",
                        "VernacExtend",
                        "0cf8694f8df189b63e9c1f5bb0f6efa3b63d9864"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Hx; auto.",
                        "VernacExtend",
                        "56c404883d859012d292fa5faf97379f6df6cce3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_Z_of_N",
            "line_nb": 3648,
            "steps": [
                {
                    "command": [
                        "unfold ZToWord, NToWord; intros.",
                        "VernacExtend",
                        "94f0ecc841d26567d708ab52508c05f77e551ae4"
                    ]
                },
                {
                    "command": [
                        "destruct n; reflexivity.",
                        "VernacExtend",
                        "a209e41a5051b9c3a7517e74f2df52e0f78433d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_Z_of_nat",
            "line_nb": 3652,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nat_N_Z.",
                        "VernacExtend",
                        "2299e058450bb33bd2122bac1e7332da5959ff64"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_Z_of_N.",
                        "VernacExtend",
                        "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
                    ]
                },
                {
                    "command": [
                        "rewrite NToWord_nat.",
                        "VernacExtend",
                        "82c69b222e8a48623d92c2012d17c715a559d381"
                    ]
                },
                {
                    "command": [
                        "rewrite Nnat.Nat2N.id.",
                        "VernacExtend",
                        "ad09c0668c750a398aae16300d1da16cd4f9358d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_Z_to_nat",
            "line_nb": 3660,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ZToWord_Z_of_nat.",
                        "VernacExtend",
                        "8a824e45a356817942186602fc7d46d24d7f7845"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2Nat.id by assumption.",
                        "VernacExtend",
                        "7cc01b6cabdbea3c43f68c44782d4bb75bbfaba4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_sz0",
            "line_nb": 3666,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ZToWord.",
                        "VernacExtend",
                        "cc9d9b08f7af8a7f73a535a746831817fe09a583"
                    ]
                },
                {
                    "command": [
                        "destruct z; try rewrite posToWord_sz0; reflexivity.",
                        "VernacExtend",
                        "b17afd75c4d191f7ce2dab0aa590efc01ca8c05b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_0",
            "line_nb": 3671,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ZToWord.",
                        "VernacExtend",
                        "cc9d9b08f7af8a7f73a535a746831817fe09a583"
                    ]
                },
                {
                    "command": [
                        "apply wzero'_def.",
                        "VernacExtend",
                        "d0eed840ac797e0f5b653ce1627ea6830629f26f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_1",
            "line_nb": 3676,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_Z_to_nat by (cbv; discriminate).",
                        "VernacExtend",
                        "4af57af04b7f762f30a8a80e9e8146f7a67e84b5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_pow2_add",
            "line_nb": 3681,
            "steps": [
                {
                    "command": [
                        "induction sz; intros; [reflexivity|].",
                        "VernacExtend",
                        "302029c931ef2cabb8020b132ac404d347597c62"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord, pow2; fold natToWord pow2.",
                        "VernacExtend",
                        "9c224194d5614db22163bb390684c3e44b19df2f"
                    ]
                },
                {
                    "command": [
                        "rewrite drop_mod2_add, div2_plus_2, IHsz.",
                        "VernacExtend",
                        "e08a18e490e6e46ca0d84cc4ccc379d577e5272c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_add_pow2_wzero",
            "line_nb": 3687,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-natToWord_plus, H.",
                        "VernacExtend",
                        "566e312269347003d5b81b1357f76e978ca270dd"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_pow2.",
                        "VernacExtend",
                        "b17b4b2dd18651bb320463211340f92fcee41b4a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Npos_Npow2_wzero",
            "line_nb": 3693,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite posToWord_nat.",
                        "VernacExtend",
                        "7755ebbe9e977ba4d5df2e1d2f1a78d6b7f1780a"
                    ]
                },
                {
                    "command": [
                        "assert (Pos.to_nat p1 + Pos.to_nat p2 = pow2 sz).",
                        "VernacExtend",
                        "75cc7ffae96d055a37035f97a654868227070c1d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Pos2Nat.inj_add, <-Npow2_nat.",
                        "VernacExtend",
                        "2879fbe6b2df222b59a85a9622b578ff78e2b56f"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_N_nat.",
                        "VernacExtend",
                        "6c5f55c5247ddb07cb641852613d0b7c812466d0"
                    ]
                },
                {
                    "command": [
                        "rewrite H; reflexivity.",
                        "VernacExtend",
                        "1eef9b63d851b99cfa44117acf0ddd958095123d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply nat_add_pow2_wzero; auto.",
                        "VernacExtend",
                        "e83e03b8cc449f555ca5861ccedb31152d7297ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_wplusZ",
            "line_nb": 3799,
            "steps": [
                {
                    "command": [
                        "unfold wplus, wplusZ, wordBin, wordBinZ; intros.",
                        "VernacExtend",
                        "1c06a2ec9e091d56b580d1cdf04f4cd2f5aa5298"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToZ_wordToN.",
                        "VernacExtend",
                        "a7fbc1416548c7fc51551a6e30d9d8e5e6afbebf"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ |- context[(?z1 - ?z2 + (?z3 - ?z4))%Z] ] => replace (z1 - z2 + (z3 - z4))%Z with (z1 + z3 - z2 - z4)%Z by omega end.",
                        "VernacExtend",
                        "c01844d664f9e078682ede465c8acd5ea709a209"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_add.",
                        "VernacExtend",
                        "89d239289698865c4e78541c99cffed406c8ae8f"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb w1 false); destruct (wmsb w2 false).",
                        "VernacExtend",
                        "9f947b076a7de888b75df4aaac360cd4ba64cdbd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; do 2 rewrite ZToWord_Npow2_sub.",
                        "VernacExtend",
                        "3f58f5d3612b3d67f11fd66d5e92bfd02638164c"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, ZToWord_Z_of_N.",
                        "VernacExtend",
                        "8b51df3ec23762efdf85c07c4fc95a368403959c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Z.sub_0_r, ZToWord_Npow2_sub.",
                        "VernacExtend",
                        "92321e6a2182ea7abe1449dd256e13ec4743885f"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, ZToWord_Z_of_N.",
                        "VernacExtend",
                        "8b51df3ec23762efdf85c07c4fc95a368403959c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Z.sub_0_r, ZToWord_Npow2_sub.",
                        "VernacExtend",
                        "92321e6a2182ea7abe1449dd256e13ec4743885f"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, ZToWord_Z_of_N.",
                        "VernacExtend",
                        "8b51df3ec23762efdf85c07c4fc95a368403959c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; do 2 rewrite Z.sub_0_r.",
                        "VernacExtend",
                        "fa62440122c993e9f409c612cb7cc673edea981a"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, ZToWord_Z_of_N.",
                        "VernacExtend",
                        "8b51df3ec23762efdf85c07c4fc95a368403959c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_Npow2_sub_k",
            "line_nb": 3818,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction k.",
                        "VernacExtend",
                        "40c5b84c7f25c7c24e470db498af5e654cfce415"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHk.",
                        "VernacExtend",
                        "f6426e64f93538985825bede8738f7a3ee6eda28"
                    ]
                },
                {
                    "command": [
                        "replace (z - Z.of_nat (S k) * Z.of_N (Npow2 sz))%Z with ((z - Z.of_nat k * Z.of_N (Npow2 sz)) - Z.of_N (Npow2 sz))%Z by nia.",
                        "VernacExtend",
                        "a86b0c33dfb75c69e6575432e60ee15bfea87db4"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub.",
                        "VernacExtend",
                        "c9dad014a3c58d39e7a35daa1c2b8410832034aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_Npow2_add_k",
            "line_nb": 3830,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace z with (z + Z.of_nat k * Z.of_N (Npow2 sz) - Z.of_nat k * Z.of_N (Npow2 sz))%Z at 2 by omega.",
                        "VernacExtend",
                        "9e3e0ef475687cd3c98a3c46e1c408f9fae6bbc9"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub_k.",
                        "VernacExtend",
                        "2067e8d112f85e28a262a73653747492ea9a8ed4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_Npow2_sub_z",
            "line_nb": 3836,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct k.",
                        "VernacExtend",
                        "276a2174e55489a07c8e0fd8db1630e98ae9c376"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- positive_nat_Z.",
                        "VernacExtend",
                        "347574d36dd587e42c95ef9fa9fe67d157cb028c"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub_k.",
                        "VernacExtend",
                        "2067e8d112f85e28a262a73653747492ea9a8ed4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos2Z.opp_pos.",
                        "VernacExtend",
                        "474fbabf620cd5fc71665a0f9a106439a1479b86"
                    ]
                },
                {
                    "command": [
                        "replace (z - - Z.pos p * Z.of_N (Npow2 sz))%Z with (z + Z.pos p * Z.of_N (Npow2 sz))%Z by nia.",
                        "VernacExtend",
                        "2af2df113d8a3089edd1200b6b53a6348bc2f815"
                    ]
                },
                {
                    "command": [
                        "rewrite <- positive_nat_Z.",
                        "VernacExtend",
                        "347574d36dd587e42c95ef9fa9fe67d157cb028c"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_add_k.",
                        "VernacExtend",
                        "410a8f82e63b5c7c8a5307dfbf2f522c920c18f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_Npow2_add_k'",
            "line_nb": 3852,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= k \\/ k < 0)%Z as C by lia.",
                        "VernacExtend",
                        "621a7a6da64b91ccf9992bb7fc9683e85d0c2f52"
                    ]
                },
                {
                    "command": [
                        "destruct C as [C | C].",
                        "VernacExtend",
                        "73fc1015ebc22a96dd0a9237e6d3788972640d38"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (ZToWord_Npow2_add_k sz z (Z.to_nat k)) as Q.",
                        "VernacExtend",
                        "758fef27270c0067259a151e9b293c14415d3192"
                    ]
                },
                {
                    "command": [
                        "rewrite Znat.Z2Nat.id in Q; assumption.",
                        "VernacExtend",
                        "a6b4dbed43a77b54c4be70b80defcb6fc29aa91a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "pose proof (ZToWord_Npow2_sub_k sz z (Z.to_nat (- k))) as Q.",
                        "VernacExtend",
                        "3add2bfaa51008d069b480c5c91960dc4a9dd56f"
                    ]
                },
                {
                    "command": [
                        "rewrite Znat.Z2Nat.id in Q by lia.",
                        "VernacExtend",
                        "98dd997005477282fca4070cebd7dbb3b18e0837"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Q.",
                        "VernacExtend",
                        "03189bc0bb459a3ff2823d77e7fec24854cc20cd"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "lia.",
                        "VernacExtend",
                        "704449849433d1ca93a4883dcd0d5fc4089bb5c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_plus",
            "line_nb": 3909,
            "steps": [
                {
                    "command": [
                        "destruct sz as [|sz]; intros n m; intuition.",
                        "VernacExtend",
                        "d5819b557d68b2f07bacc03b19c3a42ebb0ac3a2"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_wplusZ.",
                        "VernacExtend",
                        "8b363767f1e41dfccad8e96b37d03f8892e409dc"
                    ]
                },
                {
                    "command": [
                        "unfold wplusZ, wordBinZ.",
                        "VernacExtend",
                        "ecf23d8a5a087828a099c0b4e92500d338fe0aaf"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' (S sz) n) as [k1 D1].",
                        "VernacExtend",
                        "17dbdcddd420a41c9f2c378cd0e6efe908b96ba3"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' (S sz) m) as [k2 D2].",
                        "VernacExtend",
                        "0cb614a739ad6931698004fdca54aefecbc1ab78"
                    ]
                },
                {
                    "command": [
                        "rewrite D1.",
                        "VernacExtend",
                        "3d18ca53d77dea28761030d5e07d152ba2af1934"
                    ]
                },
                {
                    "command": [
                        "rewrite D2.",
                        "VernacExtend",
                        "d9d165826b523a60d59c9cb1ae758a130a1aca96"
                    ]
                },
                {
                    "command": [
                        "replace (n - k1 * Z.of_N (Npow2 (S sz)) + (m - k2 * Z.of_N (Npow2 (S sz))))%Z with (n + m - (k1 + k2) * Z.of_N (Npow2 (S sz)))%Z by nia.",
                        "VernacExtend",
                        "df02b0bbd67b685f4bceadac9010cf7eab9e485f"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub_z.",
                        "VernacExtend",
                        "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_Z",
            "line_nb": 3921,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_plus.",
                        "VernacExtend",
                        "fd4fa067420468234b77e300f674d80ff0348e8b"
                    ]
                },
                {
                    "command": [
                        "rewrite! ZToWord_wordToZ.",
                        "VernacExtend",
                        "14b45f5e8193559a6cda2e6a8273fe84bc6b2d3c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "else_0_to_ex_N",
            "line_nb": 3927,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists 1%N.",
                        "VernacExtend",
                        "488cd3f2ec8956871824077810e46f11d42748e6"
                    ]
                },
                {
                    "command": [
                        "nia.",
                        "VernacExtend",
                        "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists 0%N.",
                        "VernacExtend",
                        "6423709c890975af442bd8a9fa00575ea2918562"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmultZ_helper",
            "line_nb": 3937,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "nia.",
                        "VernacExtend",
                        "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_wmultZ",
            "line_nb": 3941,
            "steps": [
                {
                    "command": [
                        "unfold wmultZ, wmult, wordBinZ, wordBin.",
                        "VernacExtend",
                        "226e0595f4e871089390d75dd14ab1ecaf276fea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToZ_wordToN.",
                        "VernacExtend",
                        "a7fbc1416548c7fc51551a6e30d9d8e5e6afbebf"
                    ]
                },
                {
                    "command": [
                        "destruct (else_0_to_ex_N (wmsb w1 false) (Npow2 sz)) as [k1 E1].",
                        "VernacExtend",
                        "c4edc45a334b9624fbe8dd1b1f2b6449f49056f2"
                    ]
                },
                {
                    "command": [
                        "rewrite E1.",
                        "VernacExtend",
                        "b9c415ffa44d53a51b9f614458a27dcb3be2552d"
                    ]
                },
                {
                    "command": [
                        "clear E1.",
                        "VernacExtend",
                        "45212568a5f3d672665a0d1dcddfad3272bf4290"
                    ]
                },
                {
                    "command": [
                        "destruct (else_0_to_ex_N (wmsb w2 false) (Npow2 sz)) as [k2 E2].",
                        "VernacExtend",
                        "07487923605f19c8b249dfdc22229403adfad3b2"
                    ]
                },
                {
                    "command": [
                        "rewrite E2.",
                        "VernacExtend",
                        "c1992017a1964997678a075d895ea663dab1c9df"
                    ]
                },
                {
                    "command": [
                        "clear E2.",
                        "VernacExtend",
                        "acbf6e5cccde340d24b0b0b741389b8c6898cbf3"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N2Z.inj_mul.",
                        "VernacExtend",
                        "59a65998f9be012fdadc81f8090ed6212931187b"
                    ]
                },
                {
                    "command": [
                        "rewrite wmultZ_helper.",
                        "VernacExtend",
                        "d34bfab2e941fe77d7cba6aa3b0ec64dcf81a876"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N2Z.inj_mul.",
                        "VernacExtend",
                        "83c8dec9ef810068b63c463c9f7df1e3826a6d1c"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_Npow2_sub_z.",
                        "VernacExtend",
                        "717de0d275ea442075ff58865db3ca58a3cb922d"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_Z_of_N.",
                        "VernacExtend",
                        "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_mult",
            "line_nb": 3958,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wmult_wmultZ.",
                        "VernacExtend",
                        "7dea4c5d5d830527dcf4b03e356567be20bddc3f"
                    ]
                },
                {
                    "command": [
                        "unfold wmultZ, wordBinZ.",
                        "VernacExtend",
                        "adf96a4cc8e3cc14d13ced53905a17655b00c5bc"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' sz a) as [k1 D1].",
                        "VernacExtend",
                        "de4dfa2e6875fc8b8fa735b9ebeaec9417f80c55"
                    ]
                },
                {
                    "command": [
                        "rewrite D1.",
                        "VernacExtend",
                        "3d18ca53d77dea28761030d5e07d152ba2af1934"
                    ]
                },
                {
                    "command": [
                        "clear D1.",
                        "VernacExtend",
                        "029b292bc5c6c645d5bae17286a450af69f0b590"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' sz b) as [k2 D2].",
                        "VernacExtend",
                        "159bcbb90ead05cb70508b602c1d05246842e1d3"
                    ]
                },
                {
                    "command": [
                        "rewrite D2.",
                        "VernacExtend",
                        "d9d165826b523a60d59c9cb1ae758a130a1aca96"
                    ]
                },
                {
                    "command": [
                        "clear D2.",
                        "VernacExtend",
                        "9b2df1b65650b44d2caf676942f309083ae07027"
                    ]
                },
                {
                    "command": [
                        "rewrite wmultZ_helper.",
                        "VernacExtend",
                        "d34bfab2e941fe77d7cba6aa3b0ec64dcf81a876"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub_z.",
                        "VernacExtend",
                        "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_Z",
            "line_nb": 3972,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_mult.",
                        "VernacExtend",
                        "8c2fd96ec49561173854d2245bc46456f763d1fa"
                    ]
                },
                {
                    "command": [
                        "rewrite! ZToWord_wordToZ.",
                        "VernacExtend",
                        "14b45f5e8193559a6cda2e6a8273fe84bc6b2d3c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wplus_bound",
            "line_nb": 3978,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_wplusZ.",
                        "VernacExtend",
                        "8b363767f1e41dfccad8e96b37d03f8892e409dc"
                    ]
                },
                {
                    "command": [
                        "unfold wplusZ, wordBinZ.",
                        "VernacExtend",
                        "ecf23d8a5a087828a099c0b4e92500d338fe0aaf"
                    ]
                },
                {
                    "command": [
                        "remember (wordToZ w1 + wordToZ w2)%Z as z; clear Heqz.",
                        "VernacExtend",
                        "33a0c6a9fadec25231843e9a8eefb0ed53bf3d5b"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wordToZ_ZToWord; assumption.",
                        "VernacExtend",
                        "61fc529a6bd773fbd7adce7f2f39f768da924528"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wplus_bound'",
            "line_nb": 3985,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz; [exfalso; auto|clear H].",
                        "VernacExtend",
                        "9e7ebdd65ad4c1603f3ed5550af73f486540049a"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_wplus_bound; auto.",
                        "VernacExtend",
                        "57d55267c9e9ce4cb40603d34fc4ebdaa09393f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_size",
            "line_nb": 4082,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToZ_size' w).",
                        "VernacExtend",
                        "be644ea3e13d8bee0685f0ef66db70b70864367e"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Z.abs_le.",
                        "VernacExtend",
                        "33dbfaa369722f1767f92e2774ecb2dd0d1c2398"
                    ]
                },
                {
                    "command": [
                        "split; omega.",
                        "VernacExtend",
                        "df637d3a8961211fcf05d779d2cb4ddd6ba80684"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_size''",
            "line_nb": 4089,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz; [lia|].",
                        "VernacExtend",
                        "3be13f79e98d713dff6e8fe54d3ef0749064e447"
                    ]
                },
                {
                    "command": [
                        "pose proof (@wordToZ_size' sz w) as P.",
                        "VernacExtend",
                        "ca83d0d28ecc5ee447cf87877b6826928bb196e7"
                    ]
                },
                {
                    "command": [
                        "replace (Z.of_nat (S sz) - 1)%Z with (Z.of_nat sz) by lia.",
                        "VernacExtend",
                        "0d275333fd446d14153b16800d1a88085aab0017"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_pow in P.",
                        "VernacExtend",
                        "4e6bd4e2735a09618de9f3089ac7a128d64253b7"
                    ]
                },
                {
                    "command": [
                        "exact P.",
                        "VernacExtend",
                        "0c9ec6d745fd1c920722012db2a38d185745ef3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_wzero",
            "line_nb": 4097,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wminus_inv w).",
                        "VernacExtend",
                        "7ac63371c40a75df12526639c4b537c18d99094f"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0.",
                        "VernacExtend",
                        "6f58b4b0368431f7b1e1aba2ba3fa37dd308e428"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, wplus_unit in H0; subst.",
                        "VernacExtend",
                        "3de059fc26d4b3d6ffa08bb4a3ac22d7e922ccfc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_false_pos",
            "line_nb": 4104,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; split; intros.",
                        "VernacExtend",
                        "9f1d443b2494915b7e6ad9891a816b0675048cd3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN w).",
                        "VernacExtend",
                        "b7401fd0746e5def72bf414abc1e4789daf36c50"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zgt_pos_0 p); omega.",
                        "VernacExtend",
                        "79b3f867c79ee73a4c2844d9eb75ad931512939c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as b; destruct b; auto.",
                        "VernacExtend",
                        "6732914ef9622979e936d30ea467e274a942b6d2"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w)) as n; destruct n.",
                        "VernacExtend",
                        "e433956c58371ac424f715836d9613e7d11d969b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "replace 0%N with (wordToN (wzero sz)) in Heqn.",
                        "VernacExtend",
                        "9c3ffcc582333a2935336207d051d60bcb2dd58b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqn.",
                        "VernacExtend",
                        "8344c4a1b210326d7bf70990c8af6ffabb0092a1"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wneg_wzero in Heqn; subst.",
                        "VernacExtend",
                        "983ea3676b0a5e8d99f62880c76241186e94ab6f"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero in Heqb; discriminate.",
                        "VernacExtend",
                        "7caf789de40f6b907676f82f1408f6e6e97ef17e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wzero'_def.",
                        "VernacExtend",
                        "fa9016326a1619c52f176541f311be8cee8dee47"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_wzero'.",
                        "VernacExtend",
                        "36f2fbcfd0bfcddb1014bdf04e122a0ed4db6bce"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exfalso; pose proof (Zlt_neg_0 p); omega.",
                        "VernacExtend",
                        "3c3776d3c58661c8d77a3948ffc8266b9398a742"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_true_neg",
            "line_nb": 4128,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; split; intros.",
                        "VernacExtend",
                        "9f1d443b2494915b7e6ad9891a816b0675048cd3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN (wneg w)) as n; destruct n.",
                        "VernacExtend",
                        "e433956c58371ac424f715836d9613e7d11d969b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "replace 0%N with (wordToN (wzero sz)) in Heqn.",
                        "VernacExtend",
                        "9c3ffcc582333a2935336207d051d60bcb2dd58b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj in Heqn.",
                        "VernacExtend",
                        "8344c4a1b210326d7bf70990c8af6ffabb0092a1"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wneg_wzero in Heqn; subst.",
                        "VernacExtend",
                        "983ea3676b0a5e8d99f62880c76241186e94ab6f"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_wzero in H; discriminate.",
                        "VernacExtend",
                        "377d4b088f59a4dec3161a39555d6a92f3ad0df7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wzero'_def.",
                        "VernacExtend",
                        "fa9016326a1619c52f176541f311be8cee8dee47"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_wzero'.",
                        "VernacExtend",
                        "36f2fbcfd0bfcddb1014bdf04e122a0ed4db6bce"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zlt_neg_0 p); omega.",
                        "VernacExtend",
                        "e69c8bd24e8f4e79c4ea12c843b8a3bbda01b7be"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as b; destruct b; auto.",
                        "VernacExtend",
                        "6732914ef9622979e936d30ea467e274a942b6d2"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w) as n; destruct n.",
                        "VernacExtend",
                        "3c3bb1f8fa771ca5816ada6939d81d952e1bbea3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zgt_pos_0 p); omega.",
                        "VernacExtend",
                        "79b3f867c79ee73a4c2844d9eb75ad931512939c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_distr_diff_wmsb",
            "line_nb": 4152,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz; [rewrite (shatter_word w1), (shatter_word w2); reflexivity|].",
                        "VernacExtend",
                        "3e27ff915cf0c68e7735ecf3f7295b2865876fee"
                    ]
                },
                {
                    "command": [
                        "eapply eq_sym, wordToZ_wplus_bound.",
                        "VernacExtend",
                        "76f86f4ea3c701241a52737d8e4423e6e5311eab"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToZ_size' w1).",
                        "VernacExtend",
                        "bad5fa77db79f822bd80dccc79486f66cb117278"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToZ_size' w2).",
                        "VernacExtend",
                        "dbdee9b454996dc566aa4ddf3886baa3f23a5a47"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w1 false) as msb1; destruct msb1.",
                        "VernacExtend",
                        "824a30c7b798567be6924e604572fb2aa44ebfbb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wmsb_true_neg in Heqmsb1.",
                        "VernacExtend",
                        "07f343d95ab011bb7b06717d29a1e0d8fb29322b"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, negb_true_iff, wmsb_false_pos in H.",
                        "VernacExtend",
                        "964a6b42c0de2964e40091d59e60e0e886dbeddd"
                    ]
                },
                {
                    "command": [
                        "destruct H0, H1.",
                        "VernacExtend",
                        "b4443f537ba3c1386bfc30cfd9a503a7df7eedb6"
                    ]
                },
                {
                    "command": [
                        "split; omega.",
                        "VernacExtend",
                        "df637d3a8961211fcf05d779d2cb4ddd6ba80684"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wmsb_false_pos in Heqmsb1.",
                        "VernacExtend",
                        "e0dde60005eccbf601c2b479fa400c93fbcf65bd"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, negb_false_iff, wmsb_true_neg in H.",
                        "VernacExtend",
                        "649758fbb4fc05a3b4a41186d8c0b4cc95cfadc6"
                    ]
                },
                {
                    "command": [
                        "destruct H0, H1.",
                        "VernacExtend",
                        "b4443f537ba3c1386bfc30cfd9a503a7df7eedb6"
                    ]
                },
                {
                    "command": [
                        "split; omega.",
                        "VernacExtend",
                        "df637d3a8961211fcf05d779d2cb4ddd6ba80684"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wplus_wordToZ_distr",
            "line_nb": 4170,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; [exfalso; auto|clear H].",
                        "VernacExtend",
                        "8b5257e9e47f403ded387f139f27d199f01c2b9b"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, wordToZ_wplus_bound'; [omega|].",
                        "VernacExtend",
                        "533cb37db705a491f33eda82f6b030952aa649da"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite sext_wordToZ.",
                        "VernacExtend",
                        "4b8136473325d83bc205d28676a860e6fb56bfe9"
                    ]
                },
                {
                    "command": [
                        "destruct sz.",
                        "VernacExtend",
                        "5c355ae80bef560efa28a461b9aedbc840295a56"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (shatter_word w1), (shatter_word w2).",
                        "VernacExtend",
                        "4041679cc6f792563e98cc1bbf78fef9d62308d7"
                    ]
                },
                {
                    "command": [
                        "cbn; split; try (pose proof (pow2_zero n); omega).",
                        "VernacExtend",
                        "3c72183b243ef43d5c0e7558ffdbb7b2c0d2cbb5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "replace (pred (S sz + S n)) with (S (sz + n)) by omega.",
                        "VernacExtend",
                        "12df0d312ced3a4ddc7acb160c0d4f3f668073d3"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToZ_size' w1); destruct H.",
                        "VernacExtend",
                        "6dcf1c21340d8b41ca295158298d7a751a8278e0"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToZ_size' w2); destruct H1.",
                        "VernacExtend",
                        "d862eae524127a68c7d902dc7705d126cd1b5468"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_S_z.",
                        "VernacExtend",
                        "1044aa3b79f2025cadb327ed418215a6efc7397e"
                    ]
                },
                {
                    "command": [
                        "etransitivity; [|apply Z.add_le_mono; eassumption].",
                        "VernacExtend",
                        "b60c5edd2009330740522d4ad709c6243b8c593b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Z.add_diag, Z.opp_add_distr.",
                        "VernacExtend",
                        "b362253762b762c6b416fe8556db983cf0d3b5f2"
                    ]
                },
                {
                    "command": [
                        "apply Z.add_le_mono; rewrite <-Z.opp_le_mono; apply Nat2Z.inj_le, pow2_le; omega.",
                        "VernacExtend",
                        "b582229855c9dffc8f9b25629f6e26c42013b6a6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_S_z.",
                        "VernacExtend",
                        "1044aa3b79f2025cadb327ed418215a6efc7397e"
                    ]
                },
                {
                    "command": [
                        "eapply Z.lt_le_trans; [apply Z.add_lt_mono; eassumption|].",
                        "VernacExtend",
                        "febef5a65806d1ca09cac1e072becbdd5661c0b4"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Z.add_diag.",
                        "VernacExtend",
                        "5e8c35ec1daf9fb63fb52fad265083c15eacf602"
                    ]
                },
                {
                    "command": [
                        "apply Z.add_le_mono; apply Nat2Z.inj_le, pow2_le; omega.",
                        "VernacExtend",
                        "64e52280f236ac08305e4d039244742f0059067f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_wplus_wordToZ_distr_existT",
            "line_nb": 4195,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (sz = ssz + n) by (apply eq_sigT_fst in H; auto); subst.",
                        "VernacExtend",
                        "9cc5132ee387f2fb5721ca9ab3c8721896b567bc"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "apply sext_wplus_wordToZ_distr; auto.",
                        "VernacExtend",
                        "ea89c28e843aa483fd21130f73da46d759e85bf5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_existT",
            "line_nb": 4201,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (sz1 = sz2) by (apply eq_sigT_fst in H; omega); subst.",
                        "VernacExtend",
                        "4dd8d31a867ac38a406839de3c9f3fa81bb1b1e3"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_combinable",
            "line_nb": 4207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (split1 _ _ w), (split2 _ _ w).",
                        "VernacExtend",
                        "aab09f74a14977e312366d8dd03651edc93fcf4b"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, combine_split.",
                        "VernacExtend",
                        "e8ce23ab2753a0b44a75129e1307b0d135097e15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_combine_existT",
            "line_nb": 4212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (word_combinable _ _ w).",
                        "VernacExtend",
                        "fa660d43c273c428881bb2a521af75b77fbc4ef5"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? [? ?]]; subst.",
                        "VernacExtend",
                        "4a19ea604a195710cf4189e25030559906ed5e53"
                    ]
                },
                {
                    "command": [
                        "pose proof (word_combinable _ _ wl).",
                        "VernacExtend",
                        "46f8027aea45664eac259dfe47f51ba3e1312dbd"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? [? ?]]; subst.",
                        "VernacExtend",
                        "4a19ea604a195710cf4189e25030559906ed5e53"
                    ]
                },
                {
                    "command": [
                        "assert (sz = sl + su) by (apply eq_sigT_fst in H; omega); subst.",
                        "VernacExtend",
                        "1760851d55a707c054823f3d915883e3a6027c3f"
                    ]
                },
                {
                    "command": [
                        "pose proof (word_combinable _ _ x0).",
                        "VernacExtend",
                        "732447da082562ec0ceac7e12d0d54aa7f13f005"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? [? ?]]; subst.",
                        "VernacExtend",
                        "4a19ea604a195710cf4189e25030559906ed5e53"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite split1_combine.",
                        "VernacExtend",
                        "7ca3db4ffe2e444e320df207dba58f26317ef323"
                    ]
                },
                {
                    "command": [
                        "rewrite combine_assoc_existT in H.",
                        "VernacExtend",
                        "4d3cab5c74743e853767caab0ce6bf6496e548e8"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "assert (split1 _ _ (split1 _ _ (combine (combine x x3) x4)) = split1 _ _ (split1 _ _ (combine (combine x1 x2) wu))) by (rewrite H; reflexivity).",
                        "VernacExtend",
                        "8f0ae68c77651c321227385b8cb780b7ab890aa4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite split1_combine in H0.",
                        "VernacExtend",
                        "f4081b370b5116e487de8bc8bb6d35f158a64473"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_pow2_wordToZ",
            "line_nb": 4228,
            "steps": [
                {
                    "command": [
                        "induction n; [cbn; omega|].",
                        "VernacExtend",
                        "fbc5636d39d0835214d35b61d452f4daaf18ba30"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_S_z.",
                        "VernacExtend",
                        "1044aa3b79f2025cadb327ed418215a6efc7397e"
                    ]
                },
                {
                    "command": [
                        "change (wordToZ (extz w (S n))) with (wordToZ (combine (natToWord n 0) w)~0).",
                        "VernacExtend",
                        "b6af027de6c0bff1f238b7122074d703e64877db"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_WS_0.",
                        "VernacExtend",
                        "c1f21fb83e9cd6718b4f30796a28ac289ec40cff"
                    ]
                },
                {
                    "command": [
                        "unfold extz, wzero in IHn.",
                        "VernacExtend",
                        "19f1eb4b2911bdd5f0c44900c38e5592cf8aeb37"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_assoc.",
                        "VernacExtend",
                        "4a67867891309fe681dbff2ccbc22a88426adca1"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm with (n:= 2%Z).",
                        "VernacExtend",
                        "2d7f472c0cb4a3f05f0c6b95d52c3cd274f5c0b4"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, Z.mul_assoc.",
                        "VernacExtend",
                        "55a5b4411659f1d8ea5ec2c89d8dfa245ab37e81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_wneg",
            "line_nb": 4239,
            "steps": [
                {
                    "command": [
                        "induction n; intros; [reflexivity|].",
                        "VernacExtend",
                        "01ef190d43840dc2906aa2aaec3303908f6a2a47"
                    ]
                },
                {
                    "command": [
                        "cbn; rewrite wneg_WS_0.",
                        "VernacExtend",
                        "e80b536fb878877b8e632c6332b00f71aa629f96"
                    ]
                },
                {
                    "command": [
                        "unfold extz, wzero in IHn.",
                        "VernacExtend",
                        "19f1eb4b2911bdd5f0c44900c38e5592cf8aeb37"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn.",
                        "VernacExtend",
                        "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_wordToZ",
            "line_nb": 4246,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (wordToZ (wneg w) + wordToZ w = 0)%Z.",
                        "VernacExtend",
                        "cd4337baccbc63a5b808bde8c1c496f3b0b5a5b3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (weq w (wzero _)).",
                        "VernacExtend",
                        "1ce69ffb04d99e2701151c870d9543eeedd79bd7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite wzero_wneg, wordToZ_wzero.",
                        "VernacExtend",
                        "eea5b24acdc948a63ca8497aeb26f7bfe22da835"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToZ_distr_diff_wmsb.",
                        "VernacExtend",
                        "bb563d4e14fc113393582204d140ae747905c513"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, wminus_inv.",
                        "VernacExtend",
                        "59f0da27ff5e45393ee8daa54dd556fe9fb7f028"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_wzero.",
                        "VernacExtend",
                        "2cf6a8dd10e1ccceecc8bb54dcf9db87b235d154"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as msb; destruct msb.",
                        "VernacExtend",
                        "0dad806b701c260963ec8676142ca43e0383d8f0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "eapply wmsb_wneg_true; eauto.",
                        "VernacExtend",
                        "9ba24e6261a4291689abcb270872a897aee66bdb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "eapply wmsb_wneg_false; eauto.",
                        "VernacExtend",
                        "fe88270e01b19305c9c2b22158f9780cf225e851"
                    ]
                },
                {
                    "command": [
                        "intro Hx; elim n.",
                        "VernacExtend",
                        "915806f47814685ab14b8c9acfe6e8a39c067a18"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wzero, Hx; reflexivity.",
                        "VernacExtend",
                        "68616a5b61f6e4625a5768bb76bdcd57a93ae731"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_wordToZ'",
            "line_nb": 4277,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_wordToZ by assumption.",
                        "VernacExtend",
                        "dcbd27b3f479260e23b6d7e381f5253e96b7c757"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wneg_wplus_distr",
            "line_nb": 4282,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wplus_cancel with (c:= w1 ^+ w2).",
                        "VernacExtend",
                        "763f054f194ff0401a4f6ab5a9e48c135b817ca8"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, wminus_inv.",
                        "VernacExtend",
                        "59f0da27ff5e45393ee8daa54dd556fe9fb7f028"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm, wplus_assoc.",
                        "VernacExtend",
                        "5849e65b4a51ec09ef3b8e14bf086bc2c28ea938"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wplus_assoc with (x:= w1).",
                        "VernacExtend",
                        "eea935208859005b7fa05e27e4f5e0f71e126ce3"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= w2).",
                        "VernacExtend",
                        "24674fc139e5ecedb13ec64a52995588569da570"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc.",
                        "VernacExtend",
                        "63aed3418c40f5877e819fbf2cdc524389fd0436"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_wzero_2.",
                        "VernacExtend",
                        "45c2121796c866e81ea8a03b9e6846dcaf3f1fd7"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_wneg",
            "line_nb": 4295,
            "steps": [
                {
                    "command": [
                        "unfold wminus; intros.",
                        "VernacExtend",
                        "ccd4a9370a1dc5e4eece2050c4ea534430fd00e5"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_wplus_distr.",
                        "VernacExtend",
                        "d255a72dca50a53196ee73611fb2d78ec2708222"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_idempotent.",
                        "VernacExtend",
                        "82aa980f27698353e1fb8f23ab935a5c8f29c35e"
                    ]
                },
                {
                    "command": [
                        "apply wplus_comm.",
                        "VernacExtend",
                        "4c5cd5fd7e2282219ab0a46a005540f291ac01ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_wordToZ",
            "line_nb": 4301,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wneg_idempotent with (w:= w1 ^- w2).",
                        "VernacExtend",
                        "d3af61fcdc5a5812fa2d38bfedad95c45e99e3b7"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_wneg.",
                        "VernacExtend",
                        "7f2d120e3b42caea1ae5eefab4a55a92fc4ed0c9"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_wordToZ by assumption.",
                        "VernacExtend",
                        "dcbd27b3f479260e23b6d7e381f5253e96b7c757"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_wordToZ'",
            "line_nb": 4308,
            "steps": [
                {
                    "command": [
                        "intro sz.",
                        "VernacExtend",
                        "e2490ae282e79bfff6a60941b63f56558206c907"
                    ]
                },
                {
                    "command": [
                        "replace (sz + 1) with (S sz) by omega.",
                        "VernacExtend",
                        "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wminus_wordToZ.",
                        "VernacExtend",
                        "5a6243006a8faeacfc5772aa8b252a1b60377207"
                    ]
                },
                {
                    "command": [
                        "intro Hx; elim H.",
                        "VernacExtend",
                        "a4b16cbdebb8582dc5e6e4822914f449cb6fea7b"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; reflexivity.",
                        "VernacExtend",
                        "3819f1c81b5d55c036b060bf3a3f65fb2533be59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_wminusZ",
            "line_nb": 4316,
            "steps": [
                {
                    "command": [
                        "unfold wminusZ, wminus, wordBinZ.",
                        "VernacExtend",
                        "eaf95decb3fba5313d2abe1602559ae2524cf3d8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.add_opp_r.",
                        "VernacExtend",
                        "5f63255ecfe9e7a443f961eab35f3a37ab147ae6"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_wplusZ.",
                        "VernacExtend",
                        "8b363767f1e41dfccad8e96b37d03f8892e409dc"
                    ]
                },
                {
                    "command": [
                        "unfold wplusZ, wordBinZ.",
                        "VernacExtend",
                        "ecf23d8a5a087828a099c0b4e92500d338fe0aaf"
                    ]
                },
                {
                    "command": [
                        "destruct sz.",
                        "VernacExtend",
                        "5c355ae80bef560efa28a461b9aedbc840295a56"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite ZToWord_sz0.",
                        "VernacExtend",
                        "5e76cc559d43b993331c30b9e681b303c5a362f6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (weq w2 (wpow2 sz)).",
                        "VernacExtend",
                        "97b61ebefbcf3723e48fc8551e0d8fbf36a49ba5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite wpow2_wneg.",
                        "VernacExtend",
                        "5ad72ddd571cb0ed9a78e9d885839f60e22d6abd"
                    ]
                },
                {
                    "command": [
                        "replace (wordToZ w1 + - wordToZ (wpow2 sz))%Z with (wordToZ w1 + wordToZ (wpow2 sz) - 2 * wordToZ (wpow2 sz))%Z by omega.",
                        "VernacExtend",
                        "8f674fb4dc6a7415adc382c36a8c1e8f5a5aebd1"
                    ]
                },
                {
                    "command": [
                        "replace (2 * wordToZ (wpow2 sz))%Z with (- 1 * Z.of_N (Npow2 (S sz)))%Z.",
                        "VernacExtend",
                        "9d2b08a28f50003e078f05d9e0a1d53a7d8708a0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub_z.",
                        "VernacExtend",
                        "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_wordToN.",
                        "VernacExtend",
                        "5ace10ef16cf23117fb554ca97217c4943741b62"
                    ]
                },
                {
                    "command": [
                        "rewrite wpow2_wmsb.",
                        "VernacExtend",
                        "f49a0e729658cdf2fdcfce082399f73111844ad2"
                    ]
                },
                {
                    "command": [
                        "rewrite wpow2_Npow2.",
                        "VernacExtend",
                        "ec9b18317ced5e696210137224fe1f270d972e70"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_S.",
                        "VernacExtend",
                        "22081864f5a4d1297cc38f49898f7c4dbb66763b"
                    ]
                },
                {
                    "command": [
                        "rewrite N2Z.inj_add.",
                        "VernacExtend",
                        "ecd648da6b44c895c3ad4ba087f7658be3c31184"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_wordToZ by assumption.",
                        "VernacExtend",
                        "dcbd27b3f479260e23b6d7e381f5253e96b7c757"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminusZ_helper",
            "line_nb": 4347,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "nia.",
                        "VernacExtend",
                        "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_minus",
            "line_nb": 4351,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_wminusZ.",
                        "VernacExtend",
                        "3462e4ec64bb73c410e5d022915dbd25b94e446a"
                    ]
                },
                {
                    "command": [
                        "unfold wminusZ, wordBinZ.",
                        "VernacExtend",
                        "9a977d52e4c9c8c84adf4d070e4806192997fe70"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' sz a) as [k1 D1].",
                        "VernacExtend",
                        "de4dfa2e6875fc8b8fa735b9ebeaec9417f80c55"
                    ]
                },
                {
                    "command": [
                        "rewrite D1.",
                        "VernacExtend",
                        "3d18ca53d77dea28761030d5e07d152ba2af1934"
                    ]
                },
                {
                    "command": [
                        "clear D1.",
                        "VernacExtend",
                        "029b292bc5c6c645d5bae17286a450af69f0b590"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' sz b) as [k2 D2].",
                        "VernacExtend",
                        "159bcbb90ead05cb70508b602c1d05246842e1d3"
                    ]
                },
                {
                    "command": [
                        "rewrite D2.",
                        "VernacExtend",
                        "d9d165826b523a60d59c9cb1ae758a130a1aca96"
                    ]
                },
                {
                    "command": [
                        "clear D2.",
                        "VernacExtend",
                        "9b2df1b65650b44d2caf676942f309083ae07027"
                    ]
                },
                {
                    "command": [
                        "rewrite wminusZ_helper.",
                        "VernacExtend",
                        "2b3c0ee4f9febea04654a2fb1be4ab8ad83a35af"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply ZToWord_Npow2_sub_z.",
                        "VernacExtend",
                        "d425a3557e11cdc97460b7e558ceabbdcb31ad9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wminus_Z",
            "line_nb": 4365,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_minus.",
                        "VernacExtend",
                        "8392e49e437cfc44a1b49a672278b5e3eaf2e6f6"
                    ]
                },
                {
                    "command": [
                        "rewrite! ZToWord_wordToZ.",
                        "VernacExtend",
                        "14b45f5e8193559a6cda2e6a8273fe84bc6b2d3c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_opp_wneg",
            "line_nb": 4371,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wneg_0_wminus.",
                        "VernacExtend",
                        "8650aec838713fc130352b474bc2641044feb7fd"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_wminusZ.",
                        "VernacExtend",
                        "3462e4ec64bb73c410e5d022915dbd25b94e446a"
                    ]
                },
                {
                    "command": [
                        "unfold wminusZ, wordBinZ.",
                        "VernacExtend",
                        "9a977d52e4c9c8c84adf4d070e4806192997fe70"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_wzero.",
                        "VernacExtend",
                        "ecee8d186f10450f9e8325cdf6ae4581464e0562"
                    ]
                },
                {
                    "command": [
                        "rewrite (Z.sub_0_l (wordToZ (ZToWord sz x))).",
                        "VernacExtend",
                        "81a71b008880e652ed5f7dc581b0b56e8ca3f086"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ_ZToWord' sz x) as [k E].",
                        "VernacExtend",
                        "9809bd71a338a14c42ed540b02e572f2be815fd0"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.opp_sub_distr.",
                        "VernacExtend",
                        "270a289b2443a793592e0494cf8070626724a00a"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_Npow2_add_k'.",
                        "VernacExtend",
                        "17b7160118b74ce8ca22aa18b00e9f830fc023ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeqb_true_ZToWord",
            "line_nb": 4384,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Z.eqb_eq in H.",
                        "VernacExtend",
                        "c3b4b4d4bef390dc960bf3dfba059750fcc3c25c"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_ring_theory_Z",
            "line_nb": 4389,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_0.",
                        "VernacExtend",
                        "43418b016fda696b7e618e22398776094dfe5c8b"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_1.",
                        "VernacExtend",
                        "7b4c064470aa61eafa6fb689c1fb25e8fa597b39"
                    ]
                },
                {
                    "command": [
                        "apply wring.",
                        "VernacExtend",
                        "e813a026a91b327b6b6dd1eaa18bea01acd3fa1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_ring_morph_Z",
            "line_nb": 4395,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (@ZToWord_plus sz).",
                        "VernacExtend",
                        "0fdeb324878cdbf287705aa94ecdcb299c24a15b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (@ZToWord_minus sz).",
                        "VernacExtend",
                        "fda36fee2441edbaba8290f18c4e30dde0eb24e4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (@ZToWord_mult sz).",
                        "VernacExtend",
                        "0ee86e9ff3fd16533e36d03c871f7eaa372f82b4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (@ZToWord_opp_wneg sz).",
                        "VernacExtend",
                        "8b2898042c92daf622dafffbccd4d3bf838c3ac6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exact (@Zeqb_true_ZToWord sz).",
                        "VernacExtend",
                        "49c0fbaec9a5aba0bb80f679d4eda686732d89ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extz_zero",
            "line_nb": 4412,
            "steps": [
                {
                    "command": [
                        "unfold wzero; intros.",
                        "VernacExtend",
                        "c9e1a629c7316fee17f86df617542cc791b1fdc0"
                    ]
                },
                {
                    "command": [
                        "rewrite extz_combine.",
                        "VernacExtend",
                        "57e6af13626cf94dc48570e7f4f9d10fe13aa079"
                    ]
                },
                {
                    "command": [
                        "apply combine_zero.",
                        "VernacExtend",
                        "101b218d336cc31ea76ea1e724016b51d8fb0e05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_eq_rect",
            "line_nb": 4417,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hsz: sz = nsz) by omega.",
                        "VernacExtend",
                        "70e1d7a9c766d1a6ffb12568f96728256f1cc09c"
                    ]
                },
                {
                    "command": [
                        "exists Hsz.",
                        "VernacExtend",
                        "e5e4482605fd6275eb1a9ff7e72d0fe79c6d92f9"
                    ]
                },
                {
                    "command": [
                        "subst; simpl.",
                        "VernacExtend",
                        "0ba47b98fdcbcd9b3da22c2158302ddadc6f1aea"
                    ]
                },
                {
                    "command": [
                        "eq_rect_simpl.",
                        "VernacExtend",
                        "ff2c6433f71bc9682eb331258aad34d9f9041eb0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_sext",
            "line_nb": 4425,
            "steps": [
                {
                    "command": [
                        "unfold sext; intros.",
                        "VernacExtend",
                        "fca9fc3e87e098442ba9e4b9bd451289acea56b2"
                    ]
                },
                {
                    "command": [
                        "remember (wmsb w false) as ww; destruct ww.",
                        "VernacExtend",
                        "7bbb633154a0e48a3ce29a39361d4d5cb5f1e5f2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n; cbn.",
                        "VernacExtend",
                        "77e740a3953b1e0d724e208265fe0bf7ee97d1f6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine_WO; auto.",
                        "VernacExtend",
                        "d18172a782a7bde635ffa9582d13c8815902892e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate; cbn.",
                        "VernacExtend",
                        "566098ab1fa54b0d42c1ae1c852d21b35c6241c1"
                    ]
                },
                {
                    "command": [
                        "clear; induction n; cbn; auto.",
                        "VernacExtend",
                        "581ee24dcfe34a22f96e0c0c91c2c9b562eefca5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n; cbn.",
                        "VernacExtend",
                        "77e740a3953b1e0d724e208265fe0bf7ee97d1f6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine_WO; auto.",
                        "VernacExtend",
                        "d18172a782a7bde635ffa9582d13c8815902892e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_combine with (b2:= false) by discriminate; cbn.",
                        "VernacExtend",
                        "566098ab1fa54b0d42c1ae1c852d21b35c6241c1"
                    ]
                },
                {
                    "command": [
                        "clear; induction n; cbn; auto.",
                        "VernacExtend",
                        "581ee24dcfe34a22f96e0c0c91c2c9b562eefca5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_wlshift_sext",
            "line_nb": 4443,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wlshift_sext_extz w n).",
                        "VernacExtend",
                        "23d237c3af07a6bb38eb4dea75a1124ee1bfa09c"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_existT with (b:= false) in H.",
                        "VernacExtend",
                        "f6d314017eb3e37e99f854734041615d35f71284"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_sext.",
                        "VernacExtend",
                        "b71b9df9a404bf9b93c5c956df519d190271b512"
                    ]
                },
                {
                    "command": [
                        "rewrite wmsb_extz.",
                        "VernacExtend",
                        "2f1da8156336263c3757abe724be2b47f4268a23"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_wordToNat_pos",
            "line_nb": 4452,
            "steps": [
                {
                    "command": [
                        "unfold wordToZ; intros.",
                        "VernacExtend",
                        "5714496e388c686b08c1c9ac23abf2832594244a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <-wordToN_to_nat.",
                        "VernacExtend",
                        "fa8cf93ebcdc7363ce0ee1e07937f9f8f93a2857"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToN w).",
                        "VernacExtend",
                        "b7401fd0746e5def72bf414abc1e4789daf36c50"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; apply positive_nat_Z.",
                        "VernacExtend",
                        "d73acd88c7428396179b7017e384d46936c50def"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_Zabs_pos",
            "line_nb": 4462,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_false_pos in H.",
                        "VernacExtend",
                        "4cfb3b4340b789da2a99a95d8aca466c2316fe61"
                    ]
                },
                {
                    "command": [
                        "unfold Z.abs.",
                        "VernacExtend",
                        "23145e91d63b829e8d572e41d010144ddc01aca3"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ w); auto.",
                        "VernacExtend",
                        "035861130c22b7c7b22a8de2933e39aa4734707c"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zlt_neg_0 p); omega.",
                        "VernacExtend",
                        "e69c8bd24e8f4e79c4ea12c843b8a3bbda01b7be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_Zabs_neg",
            "line_nb": 4469,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_true_neg in H.",
                        "VernacExtend",
                        "2dcde3b0cd03b0113d46c80fe3fd3c3d1878abc8"
                    ]
                },
                {
                    "command": [
                        "unfold Z.abs.",
                        "VernacExtend",
                        "23145e91d63b829e8d572e41d010144ddc01aca3"
                    ]
                },
                {
                    "command": [
                        "destruct (wordToZ w); auto.",
                        "VernacExtend",
                        "035861130c22b7c7b22a8de2933e39aa4734707c"
                    ]
                },
                {
                    "command": [
                        "pose proof (Zgt_pos_0 p); omega.",
                        "VernacExtend",
                        "79b3f867c79ee73a4c2844d9eb75ad931512939c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_combine",
            "line_nb": 4476,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_nat.",
                        "VernacExtend",
                        "626b77cc5ebf261e9a5062d6e0331d3275614af4"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_N.",
                        "VernacExtend",
                        "9130a82b0d5bdc3f05a27de57adc645e8d7779c8"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Nat2N.inj_mul, <-Nat2N.inj_add.",
                        "VernacExtend",
                        "40b557d079050e8374f83802c1576d5ea04984b0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine; reflexivity.",
                        "VernacExtend",
                        "9bdeda1b624ab6725f438ae9ad2e2637628d5ce5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_exists_bound",
            "line_nb": 4483,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (ZToWord (S sz) z).",
                        "VernacExtend",
                        "225b1aafa02514187a66f4464ed3b1bda6285b86"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_ZToWord; assumption.",
                        "VernacExtend",
                        "c1fa6ca1553d0e2df5ce14e0bc06499c8156c7a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_size",
            "line_nb": 4488,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct sz; [exfalso; auto|clear H].",
                        "VernacExtend",
                        "9e7ebdd65ad4c1603f3ed5550af73f486540049a"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "replace (sz - 0) with sz in H0 by omega.",
                        "VernacExtend",
                        "3d90b4922d286fa874bcb7018c1701c356a5057f"
                    ]
                },
                {
                    "command": [
                        "apply word_exists_bound in H0.",
                        "VernacExtend",
                        "defdfb982053dd770327d0e0611889732a5ef35d"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [sw ?].",
                        "VernacExtend",
                        "21bfe31e8339054eb873454b746b5d0ee0279490"
                    ]
                },
                {
                    "command": [
                        "exists sw.",
                        "VernacExtend",
                        "d552bc7921daa78bf2a70089ea023c5230eb6ef9"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_inj.",
                        "VernacExtend",
                        "eb944ca17ed4c60387c52d6f53a3e79ef270b08e"
                    ]
                },
                {
                    "command": [
                        "change (S (sz + n)) with (S sz + n).",
                        "VernacExtend",
                        "37fb3a544429743ea0c6c1b349f735f5d0cacbd3"
                    ]
                },
                {
                    "command": [
                        "rewrite sext_wordToZ.",
                        "VernacExtend",
                        "2651174b2d4149e4b8c867b5cc9e1852c8e23926"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_combine_WO",
            "line_nb": 4501,
            "steps": [
                {
                    "command": [
                        "dependent induction w; [reflexivity|].",
                        "VernacExtend",
                        "c94a1ed4286438dda2299d35a0f281a3e04568eb"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct b.",
                        "VernacExtend",
                        "756a0c142fcb184705c9c90f018f7e739a37ff9e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct n; [rewrite (shatter_word w); reflexivity|].",
                        "VernacExtend",
                        "31ce3e059e3a7b72fe7ad1d1f65fff8ae5db093c"
                    ]
                },
                {
                    "command": [
                        "change (S n + 0) with (S (n + 0)) in *.",
                        "VernacExtend",
                        "22c5eb43cda4fadc89ad1b701cda808aee7977db"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToZ_WS_1.",
                        "VernacExtend",
                        "ee571fff1f6edbd58fb1d8e4264524779aad16ca"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; reflexivity.",
                        "VernacExtend",
                        "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToZ_WS_0.",
                        "VernacExtend",
                        "dfa6a46eaddc38589fecbe0446dbb2dc82f2d09d"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; reflexivity.",
                        "VernacExtend",
                        "fdf8e51bc3df2182f7aed78ab38593dbc770dbf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_WO",
            "line_nb": 4513,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_inj.",
                        "VernacExtend",
                        "eb944ca17ed4c60387c52d6f53a3e79ef270b08e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToZ_eq_rect.",
                        "VernacExtend",
                        "ecb53ebbd8ff6dd455bf4d8f0fb38626538ec337"
                    ]
                },
                {
                    "command": [
                        "apply wordToZ_combine_WO.",
                        "VernacExtend",
                        "b898e98a76809905467dc1a2f0d8696f4042750a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zext_zero",
            "line_nb": 4519,
            "steps": [
                {
                    "command": [
                        "unfold zext; intros.",
                        "VernacExtend",
                        "3f191c8e9f688908e291c7baf4b3c4992bf36aef"
                    ]
                },
                {
                    "command": [
                        "apply combine_WO.",
                        "VernacExtend",
                        "184c61c2167950c0877889df9066a706c387974f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmsb_false_wordToNat_eq",
            "line_nb": 4523,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "remember (eq_rect _ word w _ (Nat.add_comm 1 sz)) as ww.",
                        "VernacExtend",
                        "a8cf2a2a6b428539fb0f948813183bf134b259b2"
                    ]
                },
                {
                    "command": [
                        "assert (wmsb ww false = false) by (subst; rewrite <-wmsb_eq_rect; assumption).",
                        "VernacExtend",
                        "84cd0088f229236bad1b4507baaae5ce41cd64d3"
                    ]
                },
                {
                    "command": [
                        "replace (wordToNat w) with (wordToNat ww) by (subst; rewrite wordToNat_eq_rect; reflexivity).",
                        "VernacExtend",
                        "97530cfeb1f8ef6b099308496b19872409546859"
                    ]
                },
                {
                    "command": [
                        "clear Heqww H w.",
                        "VernacExtend",
                        "32040066acf1f5945d93cc5d122da31b1375626b"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_false_split2_wzero in H0.",
                        "VernacExtend",
                        "2749dfbd4cefa1f2fc9924b8e8304c054e481129"
                    ]
                },
                {
                    "command": [
                        "rewrite <-combine_split with (w:= ww) at 1.",
                        "VernacExtend",
                        "0963d44baed926e3bba540304cd785dc3f5d30fd"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine.",
                        "VernacExtend",
                        "9837af7a9d89a7df59a8cb949972561187f14ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "cbn; omega.",
                        "VernacExtend",
                        "24a8cf1ffa3e38e7763fd2f0a669255035393c7a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToZ_bound_weakened",
            "line_nb": 4535,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Z.abs_lt in H.",
                        "VernacExtend",
                        "4230a8dd33d1ebcccca72d627345220f53e734a0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zext_size_1",
            "line_nb": 4563,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply zext_size; auto.",
                        "VernacExtend",
                        "670470ca4a7478efa2ffb48ba4b437ae2b6e25b9"
                    ]
                },
                {
                    "command": [
                        "generalize dependent w.",
                        "VernacExtend",
                        "921ff0740416bf52eba041f5ca5c2aec5496b8cd"
                    ]
                },
                {
                    "command": [
                        "replace (sz + 1) with (S sz) by omega.",
                        "VernacExtend",
                        "5e316e2a2955d2cb6c5c475847d0c3fa4a176170"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wordToZ.",
                        "VernacExtend",
                        "d3dfb452747490cdd93b9c608b345d2115d7c1be"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply wmsb_false_bound in H.",
                        "VernacExtend",
                        "f36bf7f487bdfdde8f2ff5a31a011fefc1bd9477"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN w) as n; destruct n; simpl.",
                        "VernacExtend",
                        "077d64b2b7f5f5e39b81ead23463925347e7e2e0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz); omega.",
                        "VernacExtend",
                        "1192b0fb9112177c8c5c4ac7b3b20de33f8aaa43"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N2Z.inj_pos.",
                        "VernacExtend",
                        "e0a462e5d002db41b6df2f700ec9dd97944642bf"
                    ]
                },
                {
                    "command": [
                        "rewrite <-N_nat_Z.",
                        "VernacExtend",
                        "63785fcb1c182ad034e9982e8758bda00d156cc2"
                    ]
                },
                {
                    "command": [
                        "split; [omega|].",
                        "VernacExtend",
                        "2c84913a3ba9cd7f044dc01c555be5c3c2d9150e"
                    ]
                },
                {
                    "command": [
                        "apply inj_lt.",
                        "VernacExtend",
                        "9aba00fade2c4bf73ff2d0b9ff9eabd0e33f900a"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Npow2_nat.",
                        "VernacExtend",
                        "d44492370653a13ba953d8e6dd67ba6bffa1acec"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_out; auto.",
                        "VernacExtend",
                        "a52e8d4bf88f283293b55b0378f2629d38562577"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_wlt_f_example",
            "line_nb": 4621,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_eq1",
            "line_nb": 4625,
            "steps": [
                {
                    "command": [
                        "intros; subst; reflexivity.",
                        "VernacExtend",
                        "9a97a00b0aa2a8284651f9454c8eaa359460e3a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_eq2",
            "line_nb": 4628,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_wordToNat with (w := a).",
                        "VernacExtend",
                        "a958acc94e460c413c8ae1e1669659191855dd99"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_wordToNat with (w := b).",
                        "VernacExtend",
                        "3bdba18c7018740c9b0f65ecc4db3c4e0bf5b859"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_lt1",
            "line_nb": 4635,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat in H.",
                        "VernacExtend",
                        "b7656324e0e2d39b357b5ea5f23cb2051079a967"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_lt2",
            "line_nb": 4641,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat.",
                        "VernacExtend",
                        "a0afb95deb552ec4b36240fe161c71a7712d4801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_gt1",
            "line_nb": 4647,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat in H.",
                        "VernacExtend",
                        "b7656324e0e2d39b357b5ea5f23cb2051079a967"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_gt2",
            "line_nb": 4653,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat.",
                        "VernacExtend",
                        "a0afb95deb552ec4b36240fe161c71a7712d4801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_le1",
            "line_nb": 4659,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat in H.",
                        "VernacExtend",
                        "b7656324e0e2d39b357b5ea5f23cb2051079a967"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_le2",
            "line_nb": 4665,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat.",
                        "VernacExtend",
                        "a0afb95deb552ec4b36240fe161c71a7712d4801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_ge1",
            "line_nb": 4671,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat in H.",
                        "VernacExtend",
                        "b7656324e0e2d39b357b5ea5f23cb2051079a967"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_ge2",
            "line_nb": 4677,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_nomega.",
                        "VernacExtend",
                        "741f5a73c86a1102a64a93f0912d983b360aa20f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite wordToN_to_nat.",
                        "VernacExtend",
                        "a0afb95deb552ec4b36240fe161c71a7712d4801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_neq1",
            "line_nb": 4683,
            "steps": [
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_eq2 in H0.",
                        "VernacExtend",
                        "152c394bd3b563c0ef1ec640ffba9f641fab5de6"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_neq2",
            "line_nb": 4689,
            "steps": [
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wplus'",
            "line_nb": 4695,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-? wordToN_to_nat in *.",
                        "VernacExtend",
                        "5a4e399615a41fcb6aaaf397fbf391fcf7344ec8"
                    ]
                },
                {
                    "command": [
                        "rewrite <-? Nnat.N2Nat.inj_add in *.",
                        "VernacExtend",
                        "42fd009c117f1102adf8494954fb4e3aa39c6bf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Npow2_nat in *.",
                        "VernacExtend",
                        "cecf9e737413be107840c3d55c5f847e25a30efd"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in in H.",
                        "VernacExtend",
                        "92ed92a1d3a17e5719b1986154963b232ca5dc75"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_plus by assumption.",
                        "VernacExtend",
                        "1e228993e2018fea5b28855894f94bfe4dbfc627"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wplus''",
            "line_nb": 4704,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wplus'; rewrite wordToNat_natToWord_2; omega.",
                        "VernacExtend",
                        "03486937d39e24bcc47c33131f5b7f2d21b2a7ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wmult'",
            "line_nb": 4708,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-? wordToN_to_nat in *.",
                        "VernacExtend",
                        "5a4e399615a41fcb6aaaf397fbf391fcf7344ec8"
                    ]
                },
                {
                    "command": [
                        "rewrite <-? Nnat.N2Nat.inj_mul in *.",
                        "VernacExtend",
                        "8cf1d542245b2a6e815ae2ab46fdf9c5c9ee2367"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Npow2_nat in *.",
                        "VernacExtend",
                        "cecf9e737413be107840c3d55c5f847e25a30efd"
                    ]
                },
                {
                    "command": [
                        "apply Nlt_in in H.",
                        "VernacExtend",
                        "92ed92a1d3a17e5719b1986154963b232ca5dc75"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_mult by assumption.",
                        "VernacExtend",
                        "8a79b3a68f7553bdda864e7d1909399e95168d3c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordNotNot",
            "line_nb": 4717,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (weq a b); subst; tauto.",
                        "VernacExtend",
                        "5dca0ce039a91ce6f92db416641275bb04601435"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_le_ge_eq",
            "line_nb": 4723,
            "steps": [
                {
                    "command": [
                        "intros; word_omega.",
                        "VernacExtend",
                        "2aaf6ae7ac2b4d16d08b5e1fdc3919127a316f23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_le_zero",
            "line_nb": 4726,
            "steps": [
                {
                    "command": [
                        "intros; word_omega.",
                        "VernacExtend",
                        "2aaf6ae7ac2b4d16d08b5e1fdc3919127a316f23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_wones",
            "line_nb": 4732,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (f_equal (@wordToNat sz) H0) as sth.",
                        "VernacExtend",
                        "22af87e98b22a4e815fd7541c0c9dcdef61d4d38"
                    ]
                },
                {
                    "command": [
                        "unfold wzero in *.",
                        "VernacExtend",
                        "5f87248675ee5f0c0a1e123968016fd5c18baff3"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0 in *.",
                        "VernacExtend",
                        "e44985b54a6aae13800b7b2efcf19c380273a658"
                    ]
                },
                {
                    "command": [
                        "rewrite wones_pow2_minus_one in sth.",
                        "VernacExtend",
                        "9eadfd64f2aa67ce417b098a5b52089f8db07268"
                    ]
                },
                {
                    "command": [
                        "destruct sz; [omega | ].",
                        "VernacExtend",
                        "7c6dcdd11e58da7d52fc66d9b55d99342687725c"
                    ]
                },
                {
                    "command": [
                        "pose proof (NatLib.one_lt_pow2 sz).",
                        "VernacExtend",
                        "0dc4b833c8d23c117bf0ea87ec673803adc47456"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_wplus",
            "line_nb": 4744,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wzero.",
                        "VernacExtend",
                        "f6faf8379fd9fcb6a9242f23372adf39cf200158"
                    ]
                },
                {
                    "command": [
                        "apply wplus_unit.",
                        "VernacExtend",
                        "41f85fea05c3770bad04fcb3eb0a30b7b5a6a16e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_nonZero",
            "line_nb": 4749,
            "steps": [
                {
                    "command": [
                        "induction w; simpl; unfold wzero; simpl; intros.",
                        "VernacExtend",
                        "d2c5069203da09f21cadb1524bf80afaae76ced8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (sth: w <> (natToWord n 0)).",
                        "VernacExtend",
                        "9634425cd5b45ef0afd33e1410aea7ee55a9bc90"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (sth2: wordToNat w <> 0).",
                        "VernacExtend",
                        "2ca92a34ebd401e928baff98022b599996489562"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro sth3.",
                        "VernacExtend",
                        "e6063cf78d3d9b7cbe13059acbc18e9d36ae1756"
                    ]
                },
                {
                    "command": [
                        "specialize (IHw sth).",
                        "VernacExtend",
                        "fe919300107a4dc1fb004e70d76d7614053cc9eb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_pow2",
            "line_nb": 4772,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_split2.",
                        "VernacExtend",
                        "66b6701827bac5bb6bdf69f21799464daf32b48c"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_0_r in *.",
                        "VernacExtend",
                        "1bd9c830db1456958945c4395e7b43ede9a57469"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_bound with (bound := wones _).",
                        "VernacExtend",
                        "f82b95f193bb3504abfe47484340141ffe32691d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "assert (sth: pow2 sz <> 0) by omega.",
                        "VernacExtend",
                        "5c27b88439a60bf0b949693e1a261223cf408d80"
                    ]
                },
                {
                    "command": [
                        "pose proof (Nat.div_le_mono _ _ (pow2 sz) sth H) as sth2.",
                        "VernacExtend",
                        "6086a5c28e452784a333d64eb52c892256d9764c"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div_same in sth2 by auto.",
                        "VernacExtend",
                        "9d189b5c87aed8e89338c541e8726a10e68d4355"
                    ]
                },
                {
                    "command": [
                        "apply Nat.lt_le_pred in H0.",
                        "VernacExtend",
                        "a1ee51771ff6aeba9201a7ec7b9fb015797d31ed"
                    ]
                },
                {
                    "command": [
                        "pose proof (Nat.div_le_mono _ _ (pow2 sz) sth H0) as sth3.",
                        "VernacExtend",
                        "15f215c55aa81b0237ecced6e36265f0f0b020b9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.sub_1_r in sth3.",
                        "VernacExtend",
                        "959702633d225c70360f039f4965e52c339896db"
                    ]
                },
                {
                    "command": [
                        "assert (sth4: pow2 sz = 1 * pow2 sz) by omega.",
                        "VernacExtend",
                        "02abe6f196be0f25295ecbcdf12f7f36d4941ff7"
                    ]
                },
                {
                    "command": [
                        "rewrite sth4 in sth3 at 2.",
                        "VernacExtend",
                        "df2480a97b83a3afce78a09e395fc5f7a4347808"
                    ]
                },
                {
                    "command": [
                        "assert (sth5: 1 * pow2 sz + pow2 sz - 1 = 1 * pow2 sz + (pow2 sz - 1)) by omega.",
                        "VernacExtend",
                        "3ee648ba897ae28d0a67adbcc9af28f3f2c9531f"
                    ]
                },
                {
                    "command": [
                        "rewrite sth5 in sth3.",
                        "VernacExtend",
                        "e94355faf36271890d870d5a0ff86a3fdec9451e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div_add_l in sth3 by omega.",
                        "VernacExtend",
                        "180acaee9c772018bd29628a30c16addadb03f51"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.div_small with (a := pow2 sz - 1) in sth3 by omega.",
                        "VernacExtend",
                        "da6455b48ee221a448e057a7522e39c3baf3108b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite wones_pow2_minus_one.",
                        "VernacExtend",
                        "7f2d7a4a7429310a6fc575b57d4f5f4d63197882"
                    ]
                },
                {
                    "command": [
                        "assert (sth: sz + 1 = S sz) by omega.",
                        "VernacExtend",
                        "3e2f3af582e755cd262d188fd5c511eb992cb0e2"
                    ]
                },
                {
                    "command": [
                        "rewrite sth.",
                        "VernacExtend",
                        "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_wones_WO",
            "line_nb": 4800,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- split2 _ _ (?a ^+ ?b) = _ => rewrite <- (@natToWord_wordToNat _ a); rewrite <- (@natToWord_wordToNat _ b) end.",
                        "VernacExtend",
                        "cc60824879c691db79deb61f8f428422edfcbed8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_plus.",
                        "VernacExtend",
                        "17172a141fc704eca8f9dd850fe52b7e934e1e22"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite wones_pow2_minus_one.",
                        "VernacExtend",
                        "7f2d7a4a7429310a6fc575b57d4f5f4d63197882"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound w) as sth.",
                        "VernacExtend",
                        "ca4ddd06c9c9991389a7dfab1db636eaa7a676ed"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_nonZero H).",
                        "VernacExtend",
                        "828306d7bf507c804417d5d47537517c6c6fd9e3"
                    ]
                },
                {
                    "command": [
                        "assert (sth2: 2^sz <= 2 ^ sz - 1 + wordToNat w < 2 ^ (S sz)).",
                        "VernacExtend",
                        "09e5ef169b1df851544dc8a8be3fa119cb39f454"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz) as sth3.",
                        "VernacExtend",
                        "2ecb3aea969b6c2280d76f4fe73ca759d44a2861"
                    ]
                },
                {
                    "command": [
                        "split; simpl; omega.",
                        "VernacExtend",
                        "73f6da411c83d76083103ef346ac73ee2450e76c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply split2_pow2 in sth2.",
                        "VernacExtend",
                        "b044026d302dbfa4cfc3d0a1fcba3ee6e1d1d4e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_r.",
                        "VernacExtend",
                        "b0c342e42232568149a672c331046fa4df1777ff"
                    ]
                },
                {
                    "command": [
                        "rewrite ?Nat.add_0_r.",
                        "VernacExtend",
                        "53b8d4fff4ca126d52df8eb4752b83a2ec848d74"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (natToWord 1)) in sth2.",
                        "VernacExtend",
                        "bf28a3b1c9925a7f88f0431c917eb56ff00073f9"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_wordToNat in sth2.",
                        "VernacExtend",
                        "d2cdc8d0728dbfbbc9e33530ace95fbb7c29781f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_plus",
            "line_nb": 4821,
            "steps": [
                {
                    "command": [
                        "rewrite natToWord_plus.",
                        "VernacExtend",
                        "05acd19875a2beb7766e11af24e7acc0c06b8a42"
                    ]
                },
                {
                    "command": [
                        "rewrite ?natToWord_wordToNat.",
                        "VernacExtend",
                        "31f5516c0ef04d7f6997ced09a7859696a453ed9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_natToWord_eqn",
            "line_nb": 4826,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_natToWord sz n).",
                        "VernacExtend",
                        "d4a48d31a765d0e66f58e445aafa371c256c93df"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]].",
                        "VernacExtend",
                        "7b80d34d0c991fb27b92313d17ea8675f1173807"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "assert (sth: pow2 sz * x = x * pow2 sz) by (apply Nat.mul_comm).",
                        "VernacExtend",
                        "f1262f082cefb5f463e27b8750de2205d4e6746d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sth in *.",
                        "VernacExtend",
                        "fadfee519992e7ba70caa2902bb79bee80f90f34"
                    ]
                },
                {
                    "command": [
                        "clear sth.",
                        "VernacExtend",
                        "fa1966004a1fd7647c1b0139cb46555cf9723134"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound (natToWord sz n)).",
                        "VernacExtend",
                        "33db2857cfe2e1322dbd0ddfa55b5b76e3c50f21"
                    ]
                },
                {
                    "command": [
                        "apply (Nat.mod_unique n (pow2 sz) x (n - pow2 sz * x)); try omega.",
                        "VernacExtend",
                        "57007ff8d45cd87c61c8032607293f01973a0bb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_factor",
            "line_nb": 4837,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Nat.mod_mul_r a _ _ H H0).",
                        "VernacExtend",
                        "790813335d39451d29470085897d2ba5e79b1322"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_mod_idemp_l by auto.",
                        "VernacExtend",
                        "42a1e82a668ee81b5211139545b3e39e8fa48830"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_mod by auto.",
                        "VernacExtend",
                        "40f221de54664156981bdece729f3f35f0c4a08b"
                    ]
                },
                {
                    "command": [
                        "assert (sth: b * ((a/b) mod c) = (a/b) mod c * b) by (apply Nat.mul_comm).",
                        "VernacExtend",
                        "7c81bed9423293edaac1c8be8cafd11f9325329f"
                    ]
                },
                {
                    "command": [
                        "rewrite sth.",
                        "VernacExtend",
                        "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_mul by auto.",
                        "VernacExtend",
                        "3302dffd6f72deddc02b64c567ca02d57428554b"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_0_r.",
                        "VernacExtend",
                        "29b9e9ace5eafc63562495288224c43299861ee9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_mod by auto.",
                        "VernacExtend",
                        "036d592a5472bdd6ab199ce1a71c314ca66ede45"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split1_combine_wplus",
            "line_nb": 4850,
            "steps": [
                {
                    "command": [
                        "rewrite <- natToWord_wordToNat at 1.",
                        "VernacExtend",
                        "732134b11f691ec55cfd7be85482e80442503189"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_split1.",
                        "VernacExtend",
                        "f90c956693f21e8e6d64780a7ce5d59bca0a2b07"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wordToNat_plus.",
                        "VernacExtend",
                        "d8b8bbab1c082d076bfebc3c3bb7b03da9ed982d"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "assert (sth: #w11 + pow2 sz1 * #w12 + (#w21 + pow2 sz1 * #w22) = #w11 + #w21 + pow2 sz1 * (#w12 + #w22)) by ring.",
                        "VernacExtend",
                        "cfcf3cecc0b60f503e4c2b7a810a4d7c6066e70d"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "rewrite sth.",
                        "VernacExtend",
                        "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.pow_add_r.",
                        "VernacExtend",
                        "da4366ea918c1656f4f926afd8ca2605ed752460"
                    ]
                },
                {
                    "command": [
                        "assert (pow2 sz1 <> 0) by (pose proof (pow2_zero sz1); intro; omega).",
                        "VernacExtend",
                        "36686e68ba106bc6da35ca641cfa0b1442e3c510"
                    ]
                },
                {
                    "command": [
                        "assert (pow2 sz2 <> 0) by (pose proof (pow2_zero sz2); intro; omega).",
                        "VernacExtend",
                        "287c793339b131af5c4f2ccf9e94cefac70c1fcf"
                    ]
                },
                {
                    "command": [
                        "rewrite mod_factor by auto.",
                        "VernacExtend",
                        "26ac56ba498063f5b88847d076806fa3dab3790e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_mod by auto.",
                        "VernacExtend",
                        "40f221de54664156981bdece729f3f35f0c4a08b"
                    ]
                },
                {
                    "command": [
                        "assert (sth2: pow2 sz1 * (# w12 + #w22) = (#w12 + #w22) * pow2 sz1) by ring.",
                        "VernacExtend",
                        "64f53df01497bcbebc1979d2dcaaf88e8e9a764b"
                    ]
                },
                {
                    "command": [
                        "rewrite sth2.",
                        "VernacExtend",
                        "79aa676f3a019657052a3f376ca89e37ebab6892"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_mul by auto.",
                        "VernacExtend",
                        "3302dffd6f72deddc02b64c567ca02d57428554b"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_0_r.",
                        "VernacExtend",
                        "29b9e9ace5eafc63562495288224c43299861ee9"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_mod by auto.",
                        "VernacExtend",
                        "036d592a5472bdd6ab199ce1a71c314ca66ede45"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "f6c3d601ecf5861a1b4e49b43b0742bdb3eb0f12"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_wordToNat.",
                        "VernacExtend",
                        "aaa0e6520fb9e253ce2e9e3acc4f387b9be39db6"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_plus.",
                        "VernacExtend",
                        "05acd19875a2beb7766e11af24e7acc0c06b8a42"
                    ]
                },
                {
                    "command": [
                        "rewrite ?natToWord_wordToNat.",
                        "VernacExtend",
                        "31f5516c0ef04d7f6997ced09a7859696a453ed9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_2",
            "line_nb": 4874,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (sth: b * 1 <= a) by omega.",
                        "VernacExtend",
                        "d6d9cb348aa31772ecce9321d80fad01d73176a7"
                    ]
                },
                {
                    "command": [
                        "pose proof (Nat.div_le_lower_bound a b 1 H sth).",
                        "VernacExtend",
                        "f2372e0b5c1ddd7132c17228f9e2e0fe37a57511"
                    ]
                },
                {
                    "command": [
                        "pose proof (Nat.div_lt_upper_bound a b 2 H H0).",
                        "VernacExtend",
                        "9bb6bbf84133175f84973aa503e04f4218b90b54"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_sub",
            "line_nb": 4881,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_eq; auto.",
                        "VernacExtend",
                        "ed08f3e67e384267e2d2204df9321f4a30f1f8db"
                    ]
                },
                {
                    "command": [
                        "repeat f_equal.",
                        "VernacExtend",
                        "ef52a498e8dfd0e6e312a5f55aa7a117295c3b16"
                    ]
                },
                {
                    "command": [
                        "rewrite div_2 by auto.",
                        "VernacExtend",
                        "62a493a8d6798a8cf545a8b9636c3b0272f95b7e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_1_r; auto.",
                        "VernacExtend",
                        "ff769ac41bdcc6f99d0c83e10bf83dac77b5fa2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wneg_non_0",
            "line_nb": 4888,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wneg.",
                        "VernacExtend",
                        "1f90be984b445475c1039b32ac87878d29f0f71e"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_N.",
                        "VernacExtend",
                        "9130a82b0d5bdc3f05a27de57adc645e8d7779c8"
                    ]
                },
                {
                    "command": [
                        "rewrite NToWord_nat.",
                        "VernacExtend",
                        "82c69b222e8a48623d92c2012d17c715a559d381"
                    ]
                },
                {
                    "command": [
                        "rewrite Nnat.N2Nat.inj_sub.",
                        "VernacExtend",
                        "08d96d07523a3f80571a44809df946667c7690c8"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_to_nat.",
                        "VernacExtend",
                        "a56a47b3da5ebd06ecaa0b610d209788dfdcca87"
                    ]
                },
                {
                    "command": [
                        "rewrite Nnat.Nat2N.id.",
                        "VernacExtend",
                        "ad09c0668c750a398aae16300d1da16cd4f9358d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'; auto.",
                        "VernacExtend",
                        "7021426b5c52fd17e286edce6f583953565113a4"
                    ]
                },
                {
                    "command": [
                        "assert (#a <> 0) by word_omega.",
                        "VernacExtend",
                        "f1d3f2e0b640218db0b7070f333ed44c77c2e5da"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz).",
                        "VernacExtend",
                        "8e403dfcd800041cdb84d22c1a85359689fe52e0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wzero_wor",
            "line_nb": 4917,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wor_comm.",
                        "VernacExtend",
                        "bbde7312d4f86a4199832bd3b6a6d88ba05d4a12"
                    ]
                },
                {
                    "command": [
                        "rewrite wor_wzero.",
                        "VernacExtend",
                        "06aa5f8d3bc1694248c3dfb9b453b80aa96c2fd4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bool_prop1",
            "line_nb": 4923,
            "steps": [
                {
                    "command": [
                        "destruct a, b; simpl; auto.",
                        "VernacExtend",
                        "9877aa5e22dce6beaf4bb93957e56887d5da9695"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wplus",
            "line_nb": 4926,
            "steps": [
                {
                    "command": [
                        "rewrite <- (natToWord_wordToNat w1) at 1.",
                        "VernacExtend",
                        "164eb6bdcb05d39c455c77c0b818e3ac4571760d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (natToWord_wordToNat w2) at 1.",
                        "VernacExtend",
                        "5e775d7519fd28dc196a07b5b6274db440c04378"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_plus.",
                        "VernacExtend",
                        "17172a141fc704eca8f9dd850fe52b7e934e1e22"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_wmult",
            "line_nb": 4933,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (natToWord_wordToNat w1) at 1.",
                        "VernacExtend",
                        "164eb6bdcb05d39c455c77c0b818e3ac4571760d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (natToWord_wordToNat w2) at 1.",
                        "VernacExtend",
                        "5e775d7519fd28dc196a07b5b6274db440c04378"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_mult.",
                        "VernacExtend",
                        "17470a47f3b5b081515f82d7f3b6071a8cc568c0"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_r_wzero_1",
            "line_nb": 4942,
            "steps": [
                {
                    "command": [
                        "induction w1; simpl; auto; intros.",
                        "VernacExtend",
                        "0c2075577d3d3e64888d89033cb1dab5d161945b"
                    ]
                },
                {
                    "command": [
                        "pose proof (shatter_word w2) as sth.",
                        "VernacExtend",
                        "3b1df6024ae22ec63a93df21cdd5eb4d65f31afe"
                    ]
                },
                {
                    "command": [
                        "simpl in sth.",
                        "VernacExtend",
                        "08e75b68cc3ca028a6b571524ce872ad44c3ce22"
                    ]
                },
                {
                    "command": [
                        "rewrite sth in *.",
                        "VernacExtend",
                        "a6aa4d42d7137dcacf312e0cf64fc4ffa50469bd"
                    ]
                },
                {
                    "command": [
                        "unfold wor in H.",
                        "VernacExtend",
                        "ae7b025595bd4fb81cdc1b05fc8a742f4e955370"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord in H.",
                        "VernacExtend",
                        "293012cf129e721d69f890fb0d21d662992df103"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord.",
                        "VernacExtend",
                        "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
                    ]
                },
                {
                    "command": [
                        "fold (natToWord n (Nat.div2 0)) in *.",
                        "VernacExtend",
                        "0c4fdba73e178ec48c7dd8762e94c14bb267858a"
                    ]
                },
                {
                    "command": [
                        "unfold Nat.div2, mod2 in *.",
                        "VernacExtend",
                        "616f65558e9087d868d72018c250e3e11776d80c"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHw1 _ H2).",
                        "VernacExtend",
                        "f2bf36a01ae6c3420d4ac3c784734c51176a5067"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct b, (whd w2); auto.",
                        "VernacExtend",
                        "5ee47dd3528e4731b643d7de23df9a7b9df11fa0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wor_r_wzero_2",
            "line_nb": 4959,
            "steps": [
                {
                    "command": [
                        "induction w1; simpl; auto; intros.",
                        "VernacExtend",
                        "0c2075577d3d3e64888d89033cb1dab5d161945b"
                    ]
                },
                {
                    "command": [
                        "pose proof (shatter_word w2) as sth.",
                        "VernacExtend",
                        "3b1df6024ae22ec63a93df21cdd5eb4d65f31afe"
                    ]
                },
                {
                    "command": [
                        "simpl in sth.",
                        "VernacExtend",
                        "08e75b68cc3ca028a6b571524ce872ad44c3ce22"
                    ]
                },
                {
                    "command": [
                        "rewrite sth in *.",
                        "VernacExtend",
                        "a6aa4d42d7137dcacf312e0cf64fc4ffa50469bd"
                    ]
                },
                {
                    "command": [
                        "unfold wor in H.",
                        "VernacExtend",
                        "ae7b025595bd4fb81cdc1b05fc8a742f4e955370"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord in H.",
                        "VernacExtend",
                        "293012cf129e721d69f890fb0d21d662992df103"
                    ]
                },
                {
                    "command": [
                        "unfold natToWord.",
                        "VernacExtend",
                        "03c3532ba434ff7bfffd56cb6701279d4f9974fb"
                    ]
                },
                {
                    "command": [
                        "fold (natToWord n (Nat.div2 0)) in *.",
                        "VernacExtend",
                        "0c4fdba73e178ec48c7dd8762e94c14bb267858a"
                    ]
                },
                {
                    "command": [
                        "unfold Nat.div2, mod2 in *.",
                        "VernacExtend",
                        "616f65558e9087d868d72018c250e3e11776d80c"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct_existT.",
                        "VernacExtend",
                        "321507e453c9c13245e4c140d7195ee9687743f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHw1 _ H2).",
                        "VernacExtend",
                        "f2bf36a01ae6c3420d4ac3c784734c51176a5067"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct b, (whd w2); auto.",
                        "VernacExtend",
                        "5ee47dd3528e4731b643d7de23df9a7b9df11fa0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countLeadingZerosWord_le_len",
            "line_nb": 4977,
            "steps": [
                {
                    "command": [
                        "induction ni; simpl; auto; intros.",
                        "VernacExtend",
                        "1d54d09e5c140558af146cf4f22b9100b74cc7e1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "word_omega.",
                        "VernacExtend",
                        "39fff2fa618443202cafcd0c4544058a00b548db"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- ((if ?P then _ else _) <= _)%word => destruct P; simpl; auto end; [| word_omega].",
                        "VernacExtend",
                        "3264f623d1dca411347ba91575a564902753ce24"
                    ]
                },
                {
                    "command": [
                        "assert (sth: ni < pow2 no) by omega.",
                        "VernacExtend",
                        "6f176616add5bac55a54c1cea90b7fe8f68e01ba"
                    ]
                },
                {
                    "command": [
                        "specialize (IHni sth).",
                        "VernacExtend",
                        "4eceac89d9a75a8aebbe7e13c1eff1fea99ab847"
                    ]
                },
                {
                    "command": [
                        "assert (sth1: natToWord no (S ni) = natToWord no (1 + ni)) by auto.",
                        "VernacExtend",
                        "89cce0dba4a5d0df96ed2d95f024d40148381063"
                    ]
                },
                {
                    "command": [
                        "rewrite sth1.",
                        "VernacExtend",
                        "f908fa3c364bcf3a51382c2dc77193842364a104"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_plus.",
                        "VernacExtend",
                        "05acd19875a2beb7766e11af24e7acc0c06b8a42"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- ((_ ^+ countLeadingZerosWord no ?P) <= _)%word => specialize (IHni P) end.",
                        "VernacExtend",
                        "873b96dfef130887a6f97b8891daecd1266a2916"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- (?a ^+ ?b <= ?c ^+ ?d)%word => rewrite (wplus_comm a b); rewrite (wplus_comm c d) end.",
                        "VernacExtend",
                        "fa24d6b3fa0f0c8706863746925a0ff785762678"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "assert (sth2: no > 0).",
                        "VernacExtend",
                        "bdfdd4c24554cedee448098265381b71bed2859b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct no; [|omega].",
                        "VernacExtend",
                        "39c37bd81b8f7bb8580bb6dc3cf90cb3a28564e0"
                    ]
                },
                {
                    "command": [
                        "destruct ni; simpl in *; try omega.",
                        "VernacExtend",
                        "9017c5c14781daebd887800bf39c00fc9fefb176"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ?(@natplus1_wordplus1_eq _ _ (wones no)); auto.",
                        "VernacExtend",
                        "4bac3f395c2f258bd89e107e299cda787dc905ea"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small; auto.",
                        "VernacExtend",
                        "6dd1efff732e053d45a1b190e502c6206f49db06"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn in IHni.",
                        "VernacExtend",
                        "b6c0a506874ccccb1f94f776d1c147bacd6d04f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small in IHni; auto.",
                        "VernacExtend",
                        "57fc0365c5a1fe00261415d2ed9781148898796b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countLeadingZerosWord_le_len_nat",
            "line_nb": 5006,
            "steps": [
                {
                    "command": [
                        "intros H w.",
                        "VernacExtend",
                        "c609e0903202078dbd4189bfa108f5e41e69aed9"
                    ]
                },
                {
                    "command": [
                        "pose proof (countLeadingZerosWord_le_len H w) as sth.",
                        "VernacExtend",
                        "ca4802a7d6aabd0e2ba4e5082878fe5df07642d4"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent' in * by assumption.",
                        "VernacExtend",
                        "f794b90261662e71ee1dd7d783f8673c8572392d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_zero",
            "line_nb": 5013,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (natToWord sz)) in H.",
                        "VernacExtend",
                        "d69187d6595eac225935462a96a5e2a2df333cf5"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_wordToNat in H.",
                        "VernacExtend",
                        "fd72f7778bc65354ddad5dcb7c840e3f3fc769e9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_notZero",
            "line_nb": 5019,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_wzero sz); unfold wzero in *.",
                        "VernacExtend",
                        "46e257df77f1fc0a6fd5859e454b82b678a2f968"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natToWord_nzero",
            "line_nb": 5026,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'; omega.",
                        "VernacExtend",
                        "9305647ccbe2efd93377d06ca93a04132ed5851a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow2_lt_pow2_S",
            "line_nb": 5031,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; omega.",
                        "VernacExtend",
                        "87f6169afc3ecd96fe7b888c8712735dbf7d4bf7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_shiftl_plus_n",
            "line_nb": 5034,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_eq2.",
                        "VernacExtend",
                        "897d6df928c0619549c0a86c1108e94002929055"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent'; simpl; auto.",
                        "VernacExtend",
                        "e88558ba6b7cf527fadea17ea9f85501cbec7175"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wordToNat_plus.",
                        "VernacExtend",
                        "d8b8bbab1c082d076bfebc3c3bb7b03da9ed982d"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_lt_pow2_S n) as sth.",
                        "VernacExtend",
                        "c49af41eaca3571b746c54ded745acbf3d365d57"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent'; simpl; try omega.",
                        "VernacExtend",
                        "1d072ef35e04a1f244f2283f16ef605a0f8a3f96"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent'; simpl; try omega.",
                        "VernacExtend",
                        "1d072ef35e04a1f244f2283f16ef605a0f8a3f96"
                    ]
                },
                {
                    "command": [
                        "apply Nat.lt_add_lt_sub_l.",
                        "VernacExtend",
                        "4278541fdf7619a6feb8379ac34c5dd56212e8c8"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_1_r.",
                        "VernacExtend",
                        "6f58bb36dc04a70cbee519889325f2251f1076d1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_natToWord_wzero",
            "line_nb": 5048,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_eq2.",
                        "VernacExtend",
                        "897d6df928c0619549c0a86c1108e94002929055"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_r.",
                        "VernacExtend",
                        "b0c342e42232568149a672c331046fa4df1777ff"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_0_r.",
                        "VernacExtend",
                        "29b9e9ace5eafc63562495288224c43299861ee9"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_lt_pow2_S n) as sth2.",
                        "VernacExtend",
                        "b2e85f281777db57a5ef55211b6f97a5d4944bfe"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent' by omega.",
                        "VernacExtend",
                        "1e97fa88ac195c49068fd336268121067aeac88b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_cancel_l",
            "line_nb": 5059,
            "steps": [
                {
                    "command": [
                        "intro H; rewrite H; reflexivity.",
                        "VernacExtend",
                        "58eb70a1b91536358be31591fdd4e0c16147373b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_cancel_r",
            "line_nb": 5062,
            "steps": [
                {
                    "command": [
                        "intro H; rewrite H; reflexivity.",
                        "VernacExtend",
                        "58eb70a1b91536358be31591fdd4e0c16147373b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word_cancel_m",
            "line_nb": 5065,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (sth: a ^+ c ^+ a' = a ^+ a'^+ c ).",
                        "VernacExtend",
                        "b880150f009c39aeaab0495bad895b1faaa50c99"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (y := a').",
                        "VernacExtend",
                        "d64b13bbd3cb548165dc815441471e4aefd1eb78"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc.",
                        "VernacExtend",
                        "63aed3418c40f5877e819fbf2cdc524389fd0436"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite sth.",
                        "VernacExtend",
                        "182ac712bb19ada5e6a872f8be7f3911ced9a3a9"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x := b').",
                        "VernacExtend",
                        "fe65cb36030246f8b0954fc60a548f5befae3239"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc.",
                        "VernacExtend",
                        "63aed3418c40f5877e819fbf2cdc524389fd0436"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "move_wplus_wminus",
            "line_nb": 5079,
            "steps": [
                {
                    "command": [
                        "split; intro.",
                        "VernacExtend",
                        "966a6edea9c2088caf0e546be884ea531f6207b3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def.",
                        "VernacExtend",
                        "64ef6058e93b8fe0347972aae7557c0b702029aa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_wzero_1.",
                        "VernacExtend",
                        "196b787197c9a66e6d0422162d5a337bd03b82b5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def.",
                        "VernacExtend",
                        "64ef6058e93b8fe0347972aae7557c0b702029aa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm with (x:= ^~b).",
                        "VernacExtend",
                        "d8524404b4acbed70814fc88f251208e8d91fc31"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_inv.",
                        "VernacExtend",
                        "88d5d3c8e8c2a8e794e5111c3255684027214734"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_wzero_1.",
                        "VernacExtend",
                        "196b787197c9a66e6d0422162d5a337bd03b82b5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "move_wplus_pow2",
            "line_nb": 5097,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply move_wplus_wminus.",
                        "VernacExtend",
                        "1089299854efd614167e9b10b0bd7b2358fdd00d"
                    ]
                },
                {
                    "command": [
                        "rewrite wminus_def.",
                        "VernacExtend",
                        "64ef6058e93b8fe0347972aae7557c0b702029aa"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_wneg.",
                        "VernacExtend",
                        "745a7935607a162ad59308673691b19c7d3887bf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply move_wplus_wminus in H.",
                        "VernacExtend",
                        "f20b985364e7413b92fff50a0342032b35d2240a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pow2_wneg.",
                        "VernacExtend",
                        "d181d693808887d3fce1c0e97536c5f170c76977"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "move_wminus_pow2",
            "line_nb": 5111,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply <- move_wplus_wminus.",
                        "VernacExtend",
                        "f85f13663c136bfa445562421acfcc5d442631cc"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_wneg.",
                        "VernacExtend",
                        "745a7935607a162ad59308673691b19c7d3887bf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply move_wplus_wminus.",
                        "VernacExtend",
                        "1089299854efd614167e9b10b0bd7b2358fdd00d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pow2_wneg.",
                        "VernacExtend",
                        "d181d693808887d3fce1c0e97536c5f170c76977"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wminus_def.",
                        "VernacExtend",
                        "ff93961cf957b4f92af6ecb48d8d403a34e15840"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow2_wzero",
            "line_nb": 5125,
            "steps": [
                {
                    "command": [
                        "apply wordToNat_eq2.",
                        "VernacExtend",
                        "897d6df928c0619549c0a86c1108e94002929055"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_same.",
                        "VernacExtend",
                        "79054b22dad2b08d576f1dd2a1661d9af3e0db2e"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wzero; auto.",
                        "VernacExtend",
                        "97f0078e3a1a6cc2933b9c28d1d35a2ef79a98d6"
                    ]
                },
                {
                    "command": [
                        "pose proof (zero_lt_pow2 sz) as sth.",
                        "VernacExtend",
                        "5753ba2b6c72d9e3406bd713a1aa041bc62cd607"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow2_wplus_wzero",
            "line_nb": 5133,
            "steps": [
                {
                    "command": [
                        "apply wordToNat_eq2.",
                        "VernacExtend",
                        "897d6df928c0619549c0a86c1108e94002929055"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_plus.",
                        "VernacExtend",
                        "17172a141fc704eca8f9dd850fe52b7e934e1e22"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul2_add.",
                        "VernacExtend",
                        "dbdd9c1a3425ce2addff93be5befeb2e540f1564"
                    ]
                },
                {
                    "command": [
                        "assert (pow2_1_mul: pow2 1 = 2) by auto.",
                        "VernacExtend",
                        "8950dea893ff82c7096bd180b5e40728eb358438"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pow2_1_mul at 2.",
                        "VernacExtend",
                        "4da93be7c46715e697201adfb43f2119bc733488"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pow2_add_mul.",
                        "VernacExtend",
                        "4985c3d33ba0b45dfda0991e7c98e2ed16638b66"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_wzero; auto.",
                        "VernacExtend",
                        "c5e4e99230d9b84f79996fa2f67aa48dbf24e02f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wplus_wplus_pow2",
            "line_nb": 5142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wplus_assoc.",
                        "VernacExtend",
                        "17a16fbd042ed6238e68cf6915f361300ae9b32c"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm in H0.",
                        "VernacExtend",
                        "89abebae9b7c2d2cb7e7ba82e6e369a8819ce9aa"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_assoc.",
                        "VernacExtend",
                        "63aed3418c40f5877e819fbf2cdc524389fd0436"
                    ]
                },
                {
                    "command": [
                        "rewrite pow2_wplus_wzero.",
                        "VernacExtend",
                        "196376ffc7b3e3dd2072b10f3e2edafe85fe50f5"
                    ]
                },
                {
                    "command": [
                        "rewrite wzero_wplus.",
                        "VernacExtend",
                        "ccbfd0d4383c24fa0aa3b87516f1cf66aa05ad9d"
                    ]
                },
                {
                    "command": [
                        "rewrite wplus_comm.",
                        "VernacExtend",
                        "8f2ac733ee509b04a0867c1794bac4da5d875243"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlt_meaning",
            "line_nb": 5155,
            "steps": [
                {
                    "command": [
                        "pose proof (@wordToNat_gt1 sz w2 w1).",
                        "VernacExtend",
                        "a4b2d4b817fdfcc66b21e674a69135b45a92465e"
                    ]
                },
                {
                    "command": [
                        "pose proof (@wordToNat_gt2 sz w2 w1).",
                        "VernacExtend",
                        "d53ca71e737183b8cf9cb5e3d97b31417ab3f89b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_wplus",
            "line_nb": 5160,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wplus in *.",
                        "VernacExtend",
                        "ac76d10af5334bc56c488856e207b4754da61c4f"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent' by (apply pow2_zero).",
                        "VernacExtend",
                        "fed01b8766bea491a5a6aeed908c5574ffe1a331"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_r, Nat.add_0_r.",
                        "VernacExtend",
                        "9bc459ec7b7c66ae7899c38981364ff55f33538d"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wplus.",
                        "VernacExtend",
                        "0ea795c0213fbabc21115f54cf53a70b824b43af"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small by assumption.",
                        "VernacExtend",
                        "32e495dd4181aef58ae5e478f12c6c5977d7a7e0"
                    ]
                },
                {
                    "command": [
                        "assert (sth: #w1 + #w2 + pow2 sz * #w' = #w1 + pow2 sz * #w' + #w2) by ring.",
                        "VernacExtend",
                        "555ad66eaad631de1eea4f2cac2590527b826806"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sth; clear sth.",
                        "VernacExtend",
                        "48058c26b3dd224d72f49d4f807f87193cfcaf8d"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small; auto.",
                        "VernacExtend",
                        "6dd1efff732e053d45a1b190e502c6206f49db06"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.pow_add_r.",
                        "VernacExtend",
                        "da4366ea918c1656f4f926afd8ca2605ed752460"
                    ]
                },
                {
                    "command": [
                        "assert (sth: pow2 sz' = 1 + (pow2 sz' - 1)) by (pose proof (pow2_zero sz'); omega).",
                        "VernacExtend",
                        "cc85eaa4707e8123ab38c749c01394a15d90a154"
                    ]
                },
                {
                    "command": [
                        "rewrite sth; clear sth.",
                        "VernacExtend",
                        "f1d539a75e4b98628a24c86c6c92c620203463aa"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_add_distr_l.",
                        "VernacExtend",
                        "78c773c5428891dd18275272c903696f4a6e5736"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_1_r.",
                        "VernacExtend",
                        "0a180ef087197f2d35396d6b03ec67ca73b69564"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound w').",
                        "VernacExtend",
                        "cfded6dd6d148df1cc91e889df6381a190e14289"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz).",
                        "VernacExtend",
                        "8e403dfcd800041cdb84d22c1a85359689fe52e0"
                    ]
                },
                {
                    "command": [
                        "apply Nat.lt_le_pred in H0.",
                        "VernacExtend",
                        "a1ee51771ff6aeba9201a7ec7b9fb015797d31ed"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus in H0.",
                        "VernacExtend",
                        "0835fd2b99dda2e06bbacf1614539a9f36a62896"
                    ]
                },
                {
                    "command": [
                        "pose proof (mult_le_compat_l _ _ (pow2 sz) H0).",
                        "VernacExtend",
                        "b6d381547808deb0038c57fbce6337bff1f84adb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word1_neq",
            "line_nb": 5184,
            "steps": [
                {
                    "command": [
                        "shatter_word w; intros.",
                        "VernacExtend",
                        "a3b75b0d8047d4622663144b4e2a7f3b426a8d46"
                    ]
                },
                {
                    "command": [
                        "destruct x; tauto.",
                        "VernacExtend",
                        "736efb793024e2349937ae241f31e493c10ccd9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_1",
            "line_nb": 5188,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_wordToNat.",
                        "VernacExtend",
                        "48e80ef9e0add21ae4e0c2ddeb179590181cfd01"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine; simpl.",
                        "VernacExtend",
                        "2350d8a4c8c42a468761284e4ea281b9ccca1f37"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_r, Nat.add_0_r.",
                        "VernacExtend",
                        "9bc459ec7b7c66ae7899c38981364ff55f33538d"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'; auto.",
                        "VernacExtend",
                        "7021426b5c52fd17e286edce6f583953565113a4"
                    ]
                },
                {
                    "command": [
                        "destruct sz; simpl; try omega.",
                        "VernacExtend",
                        "4f7c95bf727f6302027681eed9aa9f70ee275313"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz).",
                        "VernacExtend",
                        "8e403dfcd800041cdb84d22c1a85359689fe52e0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToNat_cast",
            "line_nb": 5199,
            "steps": [
                {
                    "command": [
                        "destruct pf; intros; auto.",
                        "VernacExtend",
                        "4d34e2113a74829b75f4e8d4421df0a9f28dcb7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countLeadingZerosWord_lt_len",
            "line_nb": 5202,
            "steps": [
                {
                    "command": [
                        "induction ni; auto; intros.",
                        "VernacExtend",
                        "4f7735c6cf2102f80b8f927e778b99a2bc656d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "shatter_word w.",
                        "VernacExtend",
                        "dbce1509af20c178980cc8323dbf69956f18867e"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold countLeadingZerosWord; fold countLeadingZerosWord.",
                        "VernacExtend",
                        "5f6ed10849d1c0b6fa25ca021ff3826511e30a34"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_cast.",
                        "VernacExtend",
                        "ea45127a458a294df3e2d42244447db9e2b5354c"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- ((if ?P then _ else _) < _)%word => destruct P; simpl; auto end.",
                        "VernacExtend",
                        "26a427489d4fb7b2da912956e4739ad3f643d606"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (sth: ni < pow2 no) by omega.",
                        "VernacExtend",
                        "6f176616add5bac55a54c1cea90b7fe8f68e01ba"
                    ]
                },
                {
                    "command": [
                        "specialize (IHni sth).",
                        "VernacExtend",
                        "4eceac89d9a75a8aebbe7e13c1eff1fea99ab847"
                    ]
                },
                {
                    "command": [
                        "assert (sth1: natToWord no (S ni) = natToWord no (1 + ni)) by auto.",
                        "VernacExtend",
                        "89cce0dba4a5d0df96ed2d95f024d40148381063"
                    ]
                },
                {
                    "command": [
                        "rewrite sth1.",
                        "VernacExtend",
                        "f908fa3c364bcf3a51382c2dc77193842364a104"
                    ]
                },
                {
                    "command": [
                        "rewrite natToWord_plus.",
                        "VernacExtend",
                        "05acd19875a2beb7766e11af24e7acc0c06b8a42"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- ((_ ^+ countLeadingZerosWord no ?P) < _)%word => specialize (IHni P) end.",
                        "VernacExtend",
                        "bff47165c46a4a71f0bc61b5fbb0f6e368f47bd8"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- (?a ^+ ?b < ?c ^+ ?d)%word => rewrite (wplus_comm a b); rewrite (wplus_comm c d) end.",
                        "VernacExtend",
                        "817635acec0c5aa5ca39bb010a2c9b0dd477aa52"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "assert (sth2: no > 0).",
                        "VernacExtend",
                        "bdfdd4c24554cedee448098265381b71bed2859b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct no; [|omega].",
                        "VernacExtend",
                        "39c37bd81b8f7bb8580bb6dc3cf90cb3a28564e0"
                    ]
                },
                {
                    "command": [
                        "destruct ni; simpl in *; try omega.",
                        "VernacExtend",
                        "9017c5c14781daebd887800bf39c00fc9fefb176"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_zero in e.",
                        "VernacExtend",
                        "a965e6a473dcd993e698800542b39a55fba422a8"
                    ]
                },
                {
                    "command": [
                        "match type of IHni with | split1 ni 1 ?P <> _ -> _ => assert (sth3: #P <> 0) by (rewrite <- wordToNat_cast; auto); apply wordToNat_notZero in sth3; rewrite <- (combine_split ni 1 P) in sth3 end.",
                        "VernacExtend",
                        "f5161aa94e6b1c2df0771e3109fc7d4d3c28e77d"
                    ]
                },
                {
                    "command": [
                        "rewrite e in *.",
                        "VernacExtend",
                        "4c506eddfe08576f2ba60dc4024c518a5ef4dd81"
                    ]
                },
                {
                    "command": [
                        "match type of sth3 with | combine ?P _ <> _ => destruct (weq P (natToWord _ 0)); [rewrite e0 in *; rewrite combine_zero in sth3; tauto|] end.",
                        "VernacExtend",
                        "7469c4d6192528f309634c4e86597834e1128356"
                    ]
                },
                {
                    "command": [
                        "specialize (IHni n).",
                        "VernacExtend",
                        "391bcbebbb82ac9bf7603e65cd679b5cf8470cfb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ?(@natplus1_wordplus1_eq _ _ (wones no)); auto.",
                        "VernacExtend",
                        "4bac3f395c2f258bd89e107e299cda787dc905ea"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small; auto.",
                        "VernacExtend",
                        "6dd1efff732e053d45a1b190e502c6206f49db06"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn in IHni.",
                        "VernacExtend",
                        "b6c0a506874ccccb1f94f776d1c147bacd6d04f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_small in IHni; auto.",
                        "VernacExtend",
                        "57fc0365c5a1fe00261415d2ed9781148898796b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_idempotent'; auto; try omega.",
                        "VernacExtend",
                        "e744e8f912ef4a4155ef395e19e7498ccf9d34d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countLeadingZerosWord_nat_correct",
            "line_nb": 5247,
            "steps": [
                {
                    "command": [
                        "induction ni; intros; simpl; auto.",
                        "VernacExtend",
                        "cc51d30ed5e34e1d8e0b0701bc2cc60cc749917d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent'; auto.",
                        "VernacExtend",
                        "1e776a302877e4c2ac1d72741c92308eedede3cc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- # (if ?P then _ else _) = if ?P then _ else _ => destruct P end.",
                        "VernacExtend",
                        "4f49f602869ee797cec6ab808fc1f2ac6473787d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wordToNat_plus.",
                        "VernacExtend",
                        "d8b8bbab1c082d076bfebc3c3bb7b03da9ed982d"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent'; try omega.",
                        "VernacExtend",
                        "feeb43e3c20a260ba897b072b785e52a7bbb7ef0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl;f_equal.",
                        "VernacExtend",
                        "e1a8d9221cffa231af353a6224974ce2a7f11d21"
                    ]
                },
                {
                    "command": [
                        "rewrite IHni; auto.",
                        "VernacExtend",
                        "13af5d6245928a90b9fb0638ab0f1f109e1985ef"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_natToWord_idempotent'; try omega.",
                        "VernacExtend",
                        "feeb43e3c20a260ba897b072b785e52a7bbb7ef0"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- 1 + #(countLeadingZerosWord no ?x) < _ => pose proof (@countLeadingZerosWord_le_len_nat no ni ltac:(omega) x) as sth end.",
                        "VernacExtend",
                        "0bc42644c5a360519d5b5ffb9672144d7c99d8ad"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite roundTrip_0; auto.",
                        "VernacExtend",
                        "bb8a23542e356dceec156ba02149ad653766ed45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countLeadingZerosWord_nat_le_len",
            "line_nb": 5266,
            "steps": [
                {
                    "command": [
                        "induction ni; simpl; auto; intros.",
                        "VernacExtend",
                        "1d54d09e5c140558af146cf4f22b9100b74cc7e1"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- ((if ?P then _ else _) <= _) => destruct P; simpl; auto end.",
                        "VernacExtend",
                        "3959e276d5ec415914f7676d0bbc5bd9452aa86c"
                    ]
                },
                {
                    "command": [
                        "apply Le.le_n_S.",
                        "VernacExtend",
                        "e3a25d267f1a6a00010ea3985cd52bd8915b83c0"
                    ]
                },
                {
                    "command": [
                        "eapply IHni.",
                        "VernacExtend",
                        "d71b639d67d0361a2b92232bf96549a4774d8238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countLeadingZerosWord_enough_size",
            "line_nb": 5272,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite ?countLeadingZerosWord_nat_correct; auto.",
                        "VernacExtend",
                        "6cf87bdc1150045aca5746ab062c82cf11c0969a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_mul_pow2",
            "line_nb": 5316,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "unfold wlshift.",
                        "VernacExtend",
                        "66c7242d1a44cdfa4c18889456412e0d393666ac"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_split1.",
                        "VernacExtend",
                        "06d3356506503b26f24cd6ccd29945805463b928"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_eq_rect.",
                        "VernacExtend",
                        "a83e68073fe24bfe7900cda2301e0abd7c46a3da"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_wzero.",
                        "VernacExtend",
                        "2fb6d25ee3af7cc94c31741154d5fd7de5daea53"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_wmult.",
                        "VernacExtend",
                        "56d6e982291b2b91c03dca052812af8f2c6bf02b"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "719428416fdc12ae6d45cf9a404bb6870805565e"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.add_0_l.",
                        "VernacExtend",
                        "5cae715df74901a5a35bc1d34c4c541459e05888"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_mod_idemp_r by (apply pow2_ne_zero).",
                        "VernacExtend",
                        "1c726a3dbaa75d6db3fd89e3e26ca6d11a1b9ddd"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_comm.",
                        "VernacExtend",
                        "7faba8b9f3419670dc5a7d31ed7ae88c16b8eb87"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_mul_Zpow2",
            "line_nb": 5332,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite wlshift_mul_pow2.",
                        "VernacExtend",
                        "caae0624743fb3dfde1c604283d4fc31c9ae1ca0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "change 2 with (Z.to_nat 2).",
                        "VernacExtend",
                        "594ec6258052ab073b41e995da84fe5a0b9e13af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z2Nat.inj_pow by omega.",
                        "VernacExtend",
                        "6e24cdaaef33ff64e6fdf6ab14bc4fd73101ddfa"
                    ]
                },
                {
                    "command": [
                        "apply natToWord_Z_to_nat.",
                        "VernacExtend",
                        "a2b4127eaf888e178c9f6fa275b0616eef02c7ee"
                    ]
                },
                {
                    "command": [
                        "apply Z.pow_nonneg.",
                        "VernacExtend",
                        "e0393e3f453572d78c845af1e51b3aac3cbb73b1"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_distr_plus",
            "line_nb": 5342,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite? wlshift_mul_pow2.",
                        "VernacExtend",
                        "018e10628ced336f5b835493b0720a5b82456b72"
                    ]
                },
                {
                    "command": [
                        "apply wmult_plus_distr.",
                        "VernacExtend",
                        "f9edf3de12243ac261f0e806e42fa86cd4737765"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift'_distr_plus",
            "line_nb": 5347,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite? wlshift_alt.",
                        "VernacExtend",
                        "76a9245c1d66ed35932c594b8b6a7cfd1a09dc53"
                    ]
                },
                {
                    "command": [
                        "apply wlshift_distr_plus.",
                        "VernacExtend",
                        "176ecc4faaca2c98953fabbcc98858c0f17029b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_iter",
            "line_nb": 5352,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite? wlshift_mul_pow2.",
                        "VernacExtend",
                        "018e10628ced336f5b835493b0720a5b82456b72"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wmult_assoc.",
                        "VernacExtend",
                        "ba99ed3b6071014053eca59778e8298a3574ea57"
                    ]
                },
                {
                    "command": [
                        "rewrite <- natToWord_mult.",
                        "VernacExtend",
                        "17470a47f3b5b081515f82d7f3b6071a8cc568c0"
                    ]
                },
                {
                    "command": [
                        "do 2 f_equal.",
                        "VernacExtend",
                        "74f83f01290e37153981e2e772bf9a265f1f15d0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Nat.pow_add_r.",
                        "VernacExtend",
                        "f1dcc793d410d80dc6ce2eef55723c62837504aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift'_iter",
            "line_nb": 5361,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite? wlshift_alt.",
                        "VernacExtend",
                        "76a9245c1d66ed35932c594b8b6a7cfd1a09dc53"
                    ]
                },
                {
                    "command": [
                        "apply wlshift_iter.",
                        "VernacExtend",
                        "393ef30a72fc97da10a55dbe448c35a35bd530ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift_zero",
            "line_nb": 5366,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToNat_inj.",
                        "VernacExtend",
                        "76bf438cdbff4702c0379ce3fc74b21d33c1da43"
                    ]
                },
                {
                    "command": [
                        "unfold wlshift.",
                        "VernacExtend",
                        "66c7242d1a44cdfa4c18889456412e0d393666ac"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_split1.",
                        "VernacExtend",
                        "06d3356506503b26f24cd6ccd29945805463b928"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec.",
                        "VernacExtend",
                        "f2166e8fed27197165fc4490304230c14b9e0449"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_eq_rect.",
                        "VernacExtend",
                        "a83e68073fe24bfe7900cda2301e0abd7c46a3da"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_combine.",
                        "VernacExtend",
                        "fc99936a138766dacd9d5d27244f6a92dd3fb5aa"
                    ]
                },
                {
                    "command": [
                        "rewrite? wordToNat_wzero.",
                        "VernacExtend",
                        "2fb6d25ee3af7cc94c31741154d5fd7de5daea53"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_0_r.",
                        "VernacExtend",
                        "b0c342e42232568149a672c331046fa4df1777ff"
                    ]
                },
                {
                    "command": [
                        "change (0 + 0) with 0.",
                        "VernacExtend",
                        "58827448cb6214e1e7fdbcf4ab22ebcb7ef9d3a0"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mod_0_l by (apply pow2_ne_zero).",
                        "VernacExtend",
                        "96b39d5b0e884bf6325aab47e8ac1ab124bc5142"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlshift'_zero",
            "line_nb": 5380,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite? wlshift_alt.",
                        "VernacExtend",
                        "76a9245c1d66ed35932c594b8b6a7cfd1a09dc53"
                    ]
                },
                {
                    "command": [
                        "apply wlshift_zero.",
                        "VernacExtend",
                        "3ade3b24f0a38fde0fc964bc4ef68936268d3b39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_natToWord_nat_cast",
            "line_nb": 5385,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_eq_rect.",
                        "VernacExtend",
                        "f7a284c511a8161c46bf856ee7a45522c014617a"
                    ]
                },
                {
                    "command": [
                        "apply sext_natToWord.",
                        "VernacExtend",
                        "d503ab9f152cf83a49c08bc6dabf2e8d0817f1a2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext_neg_natToWord_nat_cast",
            "line_nb": 5391,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_cast_eq_rect.",
                        "VernacExtend",
                        "f7a284c511a8161c46bf856ee7a45522c014617a"
                    ]
                },
                {
                    "command": [
                        "apply sext_wneg_natToWord.",
                        "VernacExtend",
                        "b7627f9e8236272e9bacde6ca13431627232d98f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sext0",
            "line_nb": 5397,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold sext.",
                        "VernacExtend",
                        "ea29e31ffab3e16a195127c35ddcf3653db63da7"
                    ]
                },
                {
                    "command": [
                        "destruct (wmsb v false) eqn: E; simpl; rewrite combine_n_0; rewrite <- nat_cast_eq_rect; apply nat_cast_proof_irrel.",
                        "VernacExtend",
                        "c627c715d91d35d9d4381d3dd89c8bbe2861d564"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_wordToZ",
            "line_nb": 5403,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (wordToZ_wordToN w).",
                        "VernacExtend",
                        "cfbe7cab58f4eb9bcdf399a2b2ce5015c8e754eb"
                    ]
                },
                {
                    "command": [
                        "remember (if wmsb w false then Npow2 sz else 0%N) as c; clear Heqc.",
                        "VernacExtend",
                        "6dd642c15b6b477ed91d93203631f48ae489e6da"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.sub_add.",
                        "VernacExtend",
                        "397509d0158c13cdd2a9f1370fb5359bb189c360"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply N2Z.id.",
                        "VernacExtend",
                        "248a36e0f709dd29b5cc9d5a29d4561a661f84d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uwordToZ_ZToWord_0",
            "line_nb": 5411,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold uwordToZ.",
                        "VernacExtend",
                        "9f6108da47369cf7026ef233bf8a3560a2554588"
                    ]
                },
                {
                    "command": [
                        "pose proof (Z2N.id _ (proj1 H)).",
                        "VernacExtend",
                        "a16b50046ecb1f18f100857cc08d40561ad3aefe"
                    ]
                },
                {
                    "command": [
                        "remember (Z.to_N z) as n; clear Heqn.",
                        "VernacExtend",
                        "81461555ff2d63b59d88457f736209eda7197fdc"
                    ]
                },
                {
                    "command": [
                        "subst z.",
                        "VernacExtend",
                        "164f309c003709d10ea3bbb7324dbfe980b258de"
                    ]
                },
                {
                    "command": [
                        "apply proj2 in H.",
                        "VernacExtend",
                        "4c0161ae370d68d6639940904ddbfeea34dabbe5"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_Z_of_N.",
                        "VernacExtend",
                        "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_NToWord_2.",
                        "VernacExtend",
                        "620d6ad9bd931b4fee587e6bb296302c7df38248"
                    ]
                },
                {
                    "command": [
                        "apply N2Z.inj_lt.",
                        "VernacExtend",
                        "805d678c12d8d8019fef9a59201c0de6fb0fab18"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uwordToZ_ZToWord",
            "line_nb": 5424,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply uwordToZ_ZToWord_0.",
                        "VernacExtend",
                        "a25e8514fa1c0965f45cee5c079e74c9fc72e1b8"
                    ]
                },
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "change 2%Z with (Z.of_nat 2) in H1.",
                        "VernacExtend",
                        "12ba05a13ca86f268af8b98ec29388936e1b761f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat2Z.inj_pow in H1.",
                        "VernacExtend",
                        "a17edbf4a99508971723d76547e189f2317d9c26"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N_nat_Z.",
                        "VernacExtend",
                        "63785fcb1c182ad034e9982e8758bda00d156cc2"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat.",
                        "VernacExtend",
                        "6b8f2867595074592501d9adb63ec571503d7aa8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NToWord_Z_to_N",
            "line_nb": 5434,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ZToWord_Z_of_N.",
                        "VernacExtend",
                        "2e8746f1417052d0e4b28212344118ab89e89be2"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2N.id by assumption.",
                        "VernacExtend",
                        "a350c59a79ba093f479aad16556a7d243af7f71d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uwordToZ_ZToWord_k",
            "line_nb": 5440,
            "steps": [
                {
                    "command": [
                        "intros *.",
                        "VernacExtend",
                        "98ee288edc42057d24ad9c0755aadeb16c6aa433"
                    ]
                },
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "unfold uwordToZ.",
                        "VernacExtend",
                        "9f6108da47369cf7026ef233bf8a3560a2554588"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_NToWord sz (Z.to_N n)) as P.",
                        "VernacExtend",
                        "9cb39b1ce3c7ae1bd2d112cdeac99313994f456c"
                    ]
                },
                {
                    "command": [
                        "destruct P as [k [P Q]].",
                        "VernacExtend",
                        "0f7800f4a34714b18a37318c11c7bb09d5a27353"
                    ]
                },
                {
                    "command": [
                        "exists (Z.of_N k).",
                        "VernacExtend",
                        "3f29ec51ca403c5c00459eeaf1970a0769891873"
                    ]
                },
                {
                    "command": [
                        "rewrite NToWord_Z_to_N in P by assumption.",
                        "VernacExtend",
                        "0e7229f8ce5c3d4fb56b3ee4cec10060e644ed3b"
                    ]
                },
                {
                    "command": [
                        "rewrite P.",
                        "VernacExtend",
                        "a68444f3ff5a99dd68a5269da7bfb78567ba4ea2"
                    ]
                },
                {
                    "command": [
                        "clear P.",
                        "VernacExtend",
                        "09979dc635f62a4144acc1997516dcd0750123f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_of_N_Npow2 in *.",
                        "VernacExtend",
                        "e29128b560d1a377489dd5b9ba9da04526152ffd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N2Z.inj_mul.",
                        "VernacExtend",
                        "83c8dec9ef810068b63c463c9f7df1e3826a6d1c"
                    ]
                },
                {
                    "command": [
                        "rewrite N2Z.inj_sub by assumption.",
                        "VernacExtend",
                        "31b069b3ae8849b8b3f6c2e48140b266a5757f90"
                    ]
                },
                {
                    "command": [
                        "apply N2Z.inj_le in Q.",
                        "VernacExtend",
                        "1995c017161a161fa0ff340be209fd88527538f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2N.id in * by assumption.",
                        "VernacExtend",
                        "47687066d7ef91d75c6238f1c04871efc8ee980f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpow2_pos",
            "line_nb": 5457,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Z.pow_pos_nonneg 2 (Z.of_nat n)).",
                        "VernacExtend",
                        "a42726a4b387b38550d3054513c717aef6c88d88"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uwordToZ_bound",
            "line_nb": 5462,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold uwordToZ.",
                        "VernacExtend",
                        "9f6108da47369cf7026ef233bf8a3560a2554588"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply N2Z.is_nonneg.",
                        "VernacExtend",
                        "2631500e5989c2b7cf7db6763f9cfb4ae96bcefb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound a) as P.",
                        "VernacExtend",
                        "de1d50e09ed3035d7fed49807f3f864c50938d33"
                    ]
                },
                {
                    "command": [
                        "apply N2Z.inj_lt in P.",
                        "VernacExtend",
                        "86e0ce5c84a6975cb4d58378fb370e5a7416d2ea"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_of_N_Npow2 in P.",
                        "VernacExtend",
                        "ac4647574fd048f37238c8982d418a754f4dad50"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uwordToZ_ZToWord_mod",
            "line_nb": 5474,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (uwordToZ_ZToWord_k sz H) as P.",
                        "VernacExtend",
                        "efc035501b8f6a64862125c82cdf5c565400f454"
                    ]
                },
                {
                    "command": [
                        "destruct P as [k [P Q]].",
                        "VernacExtend",
                        "0f7800f4a34714b18a37318c11c7bb09d5a27353"
                    ]
                },
                {
                    "command": [
                        "pose proof (uwordToZ_bound (ZToWord sz z)) as B.",
                        "VernacExtend",
                        "fa673b89d45d598d1590f4a2297e809615195814"
                    ]
                },
                {
                    "command": [
                        "rewrite P in *.",
                        "VernacExtend",
                        "154a278d57610ff8d63c18ef96dafe5c28808c98"
                    ]
                },
                {
                    "command": [
                        "clear P.",
                        "VernacExtend",
                        "09979dc635f62a4144acc1997516dcd0750123f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmod_eq by (apply Zpow2_pos).",
                        "VernacExtend",
                        "e12e1b6fba43c3e9f1e573369a6e88cd1d69688e"
                    ]
                },
                {
                    "command": [
                        "pose proof (Z.div_unique_pos z (2 ^ Z.of_nat sz) k (z - k * 2 ^ Z.of_nat sz)) as U.",
                        "VernacExtend",
                        "8e6ce96b1ce5e54d01b6976ce9ed02bb2066ffa9"
                    ]
                },
                {
                    "command": [
                        "rewrite U.",
                        "VernacExtend",
                        "f4f8e08f4b6e92bbd380857e547804f1e7e70cda"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZToWord_uwordToZ",
            "line_nb": 5492,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold uwordToZ.",
                        "VernacExtend",
                        "9f6108da47369cf7026ef233bf8a3560a2554588"
                    ]
                },
                {
                    "command": [
                        "rewrite ZToWord_Z_of_N.",
                        "VernacExtend",
                        "3ce1f64cea161c15db14bd3f07762afbe21c1d06"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_wordToN.",
                        "VernacExtend",
                        "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_plus_distr_does_not_hold",
            "line_nb": 5507,
            "steps": [
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "specialize (C 4 $9 $11 $7).",
                        "VernacExtend",
                        "c3bd627fe0ae7f842bcce69889765176ac4a5758"
                    ]
                },
                {
                    "command": [
                        "cbv in C.",
                        "VernacExtend",
                        "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
                    ]
                },
                {
                    "command": [
                        "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
                        "VernacExtend",
                        "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
                    ]
                },
                {
                    "command": [
                        "specialize (C H).",
                        "VernacExtend",
                        "591559f49fcd2d7d7604316ba30c39608c56955f"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmul_mod_distr_does_not_hold",
            "line_nb": 5515,
            "steps": [
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "specialize (C 4 $9 $11 $7).",
                        "VernacExtend",
                        "c3bd627fe0ae7f842bcce69889765176ac4a5758"
                    ]
                },
                {
                    "command": [
                        "cbv in C.",
                        "VernacExtend",
                        "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
                    ]
                },
                {
                    "command": [
                        "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
                        "VernacExtend",
                        "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
                    ]
                },
                {
                    "command": [
                        "specialize (C H).",
                        "VernacExtend",
                        "591559f49fcd2d7d7604316ba30c39608c56955f"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nmod_0_r",
            "line_nb": 5523,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a; reflexivity.",
                        "VernacExtend",
                        "7fbe57a1b7de98163889837c4a347c7457bf77a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_0",
            "line_nb": 5527,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (natToWord sz 0) with (wzero sz).",
                        "VernacExtend",
                        "acc4eac2675d845118ea2e972f2e06ce101ec66c"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_wzero.",
                        "VernacExtend",
                        "0c3acd041c3451f4d7aa04989aabc7bf7b7c2264"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NToWord_0",
            "line_nb": 5532,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change 0%nat with (N.to_nat 0).",
                        "VernacExtend",
                        "b466f4b0d5f0024fed91f3f90790cee381ff5781"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_nat.",
                        "VernacExtend",
                        "285f6f8c66bec6b73412d6ceabceb75efe005761"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_0_r",
            "line_nb": 5537,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wmod, wordBin.",
                        "VernacExtend",
                        "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_0.",
                        "VernacExtend",
                        "b5cee3fea413e82ad8838cb78340b250e3aff592"
                    ]
                },
                {
                    "command": [
                        "rewrite Nmod_0_r.",
                        "VernacExtend",
                        "088f0a3b70fb3a588febeaeb8421f8f1af8158f8"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_wordToN.",
                        "VernacExtend",
                        "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wordToN_NToWord_eqn",
            "line_nb": 5544,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (Npow2_not_zero sz).",
                        "VernacExtend",
                        "12e1c3a091e9f260d2f0faf478985b74524e1273"
                    ]
                },
                {
                    "command": [
                        "apply Nnat.N2Nat.inj.",
                        "VernacExtend",
                        "e3ae94dec76ca474fe5d90aa7530ca5e87f4c0de"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_to_nat.",
                        "VernacExtend",
                        "a56a47b3da5ebd06ecaa0b610d209788dfdcca87"
                    ]
                },
                {
                    "command": [
                        "rewrite N2Nat.inj_mod by assumption.",
                        "VernacExtend",
                        "d3705c1f2d7735dfa96c903592617eeda4a617d3"
                    ]
                },
                {
                    "command": [
                        "rewrite Npow2_nat.",
                        "VernacExtend",
                        "6b8f2867595074592501d9adb63ec571503d7aa8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- wordToNat_natToWord_eqn.",
                        "VernacExtend",
                        "f6c3d601ecf5861a1b4e49b43b0742bdb3eb0f12"
                    ]
                },
                {
                    "command": [
                        "rewrite <- NToWord_nat.",
                        "VernacExtend",
                        "6d99fad444ab36b0d9a633f673804166066a2147"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nminus_mod_idemp_r",
            "line_nb": 5555,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply N2Z.inj.",
                        "VernacExtend",
                        "b0e1503451d543a82995b02d4392947ac892a9e0"
                    ]
                },
                {
                    "command": [
                        "rewrite? N2Z.inj_mod by assumption.",
                        "VernacExtend",
                        "f87d200018e3b26b483d2a575530248bdc981e45"
                    ]
                },
                {
                    "command": [
                        "pose proof (N.mod_le b n H).",
                        "VernacExtend",
                        "aec4f947154c4246f3471ac29da6ed72d65cc497"
                    ]
                },
                {
                    "command": [
                        "rewrite N2Z.inj_sub by (eapply N.le_trans; eassumption).",
                        "VernacExtend",
                        "145a2d1a116c57ff41bd1b65def1007300ae7354"
                    ]
                },
                {
                    "command": [
                        "rewrite N2Z.inj_sub by assumption.",
                        "VernacExtend",
                        "31b069b3ae8849b8b3f6c2e48140b266a5757f90"
                    ]
                },
                {
                    "command": [
                        "rewrite? N2Z.inj_mod by assumption.",
                        "VernacExtend",
                        "f87d200018e3b26b483d2a575530248bdc981e45"
                    ]
                },
                {
                    "command": [
                        "apply Zdiv.Zminus_mod_idemp_r.",
                        "VernacExtend",
                        "c170006b473e415b7a11b17d1584777ea1a25140"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "drop_sub_N",
            "line_nb": 5565,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_inj.",
                        "VernacExtend",
                        "80d23ac951fab63d04cca84ead9106e2b3a29d05"
                    ]
                },
                {
                    "command": [
                        "pose proof (Npow2_not_zero sz).",
                        "VernacExtend",
                        "12e1c3a091e9f260d2f0faf478985b74524e1273"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite wordToN_NToWord_eqn.",
                        "VernacExtend",
                        "efeb6f29772227f47b2f07c5b98478f2ffd0d391"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nminus_mod_idemp_r by assumption.",
                        "VernacExtend",
                        "5aff89974b661b52f25e250eaf37983a38270c4b"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_mul by assumption.",
                        "VernacExtend",
                        "5f4212d784c34d20d6e568c55974d32767429395"
                    ]
                },
                {
                    "command": [
                        "rewrite N.sub_0_r.",
                        "VernacExtend",
                        "64465c02f18656eb03a73685b3b400b2a94fd873"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_divides",
            "line_nb": 5575,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (weq b $0).",
                        "VernacExtend",
                        "466e941630eb09234f97718db2ec7f62b26161c2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst b.",
                        "VernacExtend",
                        "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
                    ]
                },
                {
                    "command": [
                        "rewrite wmod_0_r in *.",
                        "VernacExtend",
                        "2517412869af325ac6bc746c12833719af42e0fe"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "exists (natToWord sz 0).",
                        "VernacExtend",
                        "4c3ba219fb4dba71943121b7eb9f7b9fe7c907f5"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply wmult_neut_r.",
                        "VernacExtend",
                        "3890cdfb2c72992491c81aa982b1fe22dca9113c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold wmod, wmult, wordBin in *.",
                        "VernacExtend",
                        "da5f924f2e85be2bebc1a56840fd4932a0ca0252"
                    ]
                },
                {
                    "command": [
                        "pose proof (N.mod_divides (wordToN a) (wordToN b)) as P.",
                        "VernacExtend",
                        "1da74485a73c4e320c748c32d470e4b9b5b5cf07"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_neq_0 in n.",
                        "VernacExtend",
                        "1ccb16a5027d49b815c1ebd7d567258c20008db3"
                    ]
                },
                {
                    "command": [
                        "specialize (P n).",
                        "VernacExtend",
                        "82466b76f677770813adfd636b1ff899e93d86ba"
                    ]
                },
                {
                    "command": [
                        "destruct P as [ [k P] _].",
                        "VernacExtend",
                        "5193772239dcb7f7506d58258cf31291248c52d4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (f_equal (@wordToN sz)) in H.",
                        "VernacExtend",
                        "22014b14920ad2781f12acc15095f94fadac941f"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2 in H.",
                        "VernacExtend",
                        "1c06a5adadf94b93e14df23fc5276d472c3d6c7e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_0.",
                        "VernacExtend",
                        "df6c05a0d83e76c408e194885bb05714f45d736c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound a).",
                        "VernacExtend",
                        "3d494b94ba4e4f5e512460538ba302f82966a95d"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN a) as c.",
                        "VernacExtend",
                        "8e08274d6029bf8eeab06395fec0561754e84caf"
                    ]
                },
                {
                    "command": [
                        "clear Heqc a.",
                        "VernacExtend",
                        "df45f7d746f8642230c4e780236e76c240830af6"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound b).",
                        "VernacExtend",
                        "08729af943c645e5d26a827087d02ef654defff9"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN b) as d.",
                        "VernacExtend",
                        "d1ed05d29107e1e2e4cf93fa75ce6160eac31c16"
                    ]
                },
                {
                    "command": [
                        "clear Heqd b.",
                        "VernacExtend",
                        "2eb7ce10f175251860d03cb54fa6145b313dd94a"
                    ]
                },
                {
                    "command": [
                        "pose proof (N.mod_upper_bound c d n).",
                        "VernacExtend",
                        "bc04fa571e73917a3596c314ac3c73f005a131f6"
                    ]
                },
                {
                    "command": [
                        "nomega.",
                        "VernacExtend",
                        "172a67512b5be7cabf23ff79ed79dc00750b182b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists (NToWord sz (k - k / (Npow2 sz) * Npow2 sz)).",
                        "VernacExtend",
                        "1fcd52e887d8a87b515bcd3cd570eab1a7b1de85"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_NToWord_2.",
                        "VernacExtend",
                        "8a0683d8ddcae6b07999f79e8a371bc3b1f8be5b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_sub_distr_l.",
                        "VernacExtend",
                        "e2bce9870552ce59d4c388e25aacb9952d5be843"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_assoc.",
                        "VernacExtend",
                        "c7d78c8d2521c9179ca6c46191ed315e7d0ed245"
                    ]
                },
                {
                    "command": [
                        "rewrite drop_sub_N.",
                        "VernacExtend",
                        "b29f0f19438eb6df4ae52b0306cc04cbcbc2347d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- P.",
                        "VernacExtend",
                        "341ee036c8c0ea29ce611d79f005184467058155"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_wordToN.",
                        "VernacExtend",
                        "3b29731c94fe4e598f2ce1bb4d66cc5a0fe76aaf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mul_assoc.",
                        "VernacExtend",
                        "79607e27dc24b773f3475b10ac59b7167c8f2782"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (N.mul_comm (Npow2 sz)).",
                        "VernacExtend",
                        "201f26f6f5b06e076d990c955bc44fd07cdc1555"
                    ]
                },
                {
                    "command": [
                        "apply N.mul_le_mono_l.",
                        "VernacExtend",
                        "efb42fc5439608b18ff1cd9bfee060a4d74266a0"
                    ]
                },
                {
                    "command": [
                        "apply (N.mul_div_le k (Npow2 sz)).",
                        "VernacExtend",
                        "eb7148bcd3757d851879442718c904ec34b9cc5c"
                    ]
                },
                {
                    "command": [
                        "apply Npow2_not_zero.",
                        "VernacExtend",
                        "e125371b99031554653134cb2aa170afebddd5ef"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mul_comm.",
                        "VernacExtend",
                        "4be9bf89e5192ac49e750d9d32de8b34d1a31ffc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.mod_eq by (apply Npow2_not_zero).",
                        "VernacExtend",
                        "f6a60a442b2fb710cbf8d62396e2dc17786712e2"
                    ]
                },
                {
                    "command": [
                        "apply N.mod_upper_bound.",
                        "VernacExtend",
                        "ca12ef77e89722d3e6a24e11e80e235d707ca3b1"
                    ]
                },
                {
                    "command": [
                        "apply Npow2_not_zero.",
                        "VernacExtend",
                        "e125371b99031554653134cb2aa170afebddd5ef"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_divides_other_direction_does_not_hold",
            "line_nb": 5631,
            "steps": [
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "specialize (C 4 $14 $5).",
                        "VernacExtend",
                        "17f1e07c965aaa99dc5e18667475ef495450f6d9"
                    ]
                },
                {
                    "command": [
                        "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
                        "VernacExtend",
                        "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
                    ]
                },
                {
                    "command": [
                        "specialize (C H).",
                        "VernacExtend",
                        "591559f49fcd2d7d7604316ba30c39608c56955f"
                    ]
                },
                {
                    "command": [
                        "match type of C with (?A -> _) => assert A as B end.",
                        "VernacExtend",
                        "024999485a42d7e2161112d977a04856655d0c24"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (natToWord 4 6).",
                        "VernacExtend",
                        "1554dbdb9477d538cd096f2dcbe25167db9dfffa"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (C B).",
                        "VernacExtend",
                        "06fdd633ce4a18b58dd4d10c54df6d71e68d6843"
                    ]
                },
                {
                    "command": [
                        "cbv in C.",
                        "VernacExtend",
                        "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_mul_does_not_hold",
            "line_nb": 5645,
            "steps": [
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "specialize (C 4 $6 $5).",
                        "VernacExtend",
                        "d86d67e82309f50cd72bedf2eb1d36270d05207d"
                    ]
                },
                {
                    "command": [
                        "match type of C with (?A -> _) => assert A by (intro; discriminate) end.",
                        "VernacExtend",
                        "57a94d12ea6c8ca0db906cf1b34f3bdde18481a0"
                    ]
                },
                {
                    "command": [
                        "specialize (C H).",
                        "VernacExtend",
                        "591559f49fcd2d7d7604316ba30c39608c56955f"
                    ]
                },
                {
                    "command": [
                        "cbv in C.",
                        "VernacExtend",
                        "d3be19bdbb6f7d15fc9fe6098121dfd5b6b90f5f"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmult_plus_distr_l",
            "line_nb": 5653,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite! (wmult_comm z).",
                        "VernacExtend",
                        "1b3b90842481903a02874ef9a626c29843ab0d72"
                    ]
                },
                {
                    "command": [
                        "apply wmult_plus_distr.",
                        "VernacExtend",
                        "f9edf3de12243ac261f0e806e42fa86cd4737765"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_same",
            "line_nb": 5658,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (weq a $0).",
                        "VernacExtend",
                        "c509012f33ba1544a120e63809f299b8ea1e790b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst a.",
                        "VernacExtend",
                        "d7670e5f9c196bd417b16b29da3532f33d34884d"
                    ]
                },
                {
                    "command": [
                        "rewrite wmod_0_r in *.",
                        "VernacExtend",
                        "2517412869af325ac6bc746c12833719af42e0fe"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold wmod, wordBin.",
                        "VernacExtend",
                        "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
                    ]
                },
                {
                    "command": [
                        "apply wordToN_neq_0 in n.",
                        "VernacExtend",
                        "1ccb16a5027d49b815c1ebd7d567258c20008db3"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_same by assumption.",
                        "VernacExtend",
                        "b4747e773b5bb8ce50896b0b245148217c4e955a"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_0.",
                        "VernacExtend",
                        "a56302478a233f442ac370db19a8f6fa507d3e13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_0_l",
            "line_nb": 5671,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold wmod, wordBin.",
                        "VernacExtend",
                        "8490ca225f110abd6726caa2d2ebd6e6f67d2e97"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToN_0.",
                        "VernacExtend",
                        "b5cee3fea413e82ad8838cb78340b250e3aff592"
                    ]
                },
                {
                    "command": [
                        "destruct (N.eq_dec (wordToN m) 0%N).",
                        "VernacExtend",
                        "ed0f5ace806b65836204e84029d53a339945ab61"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "change (0 mod 0)%N with 0%N.",
                        "VernacExtend",
                        "5579039a7a1df14d7abe03bcadcb960d09f868f3"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_0.",
                        "VernacExtend",
                        "a56302478a233f442ac370db19a8f6fa507d3e13"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_0_l by assumption.",
                        "VernacExtend",
                        "464dd1be0cb34b22ad621adf0c9960d457c328ba"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_0.",
                        "VernacExtend",
                        "a56302478a233f442ac370db19a8f6fa507d3e13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_plus_distr",
            "line_nb": 5684,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [k E].",
                        "VernacExtend",
                        "ab28aeb091b7d686b829bfb6a49413c3c4d8c700"
                    ]
                },
                {
                    "command": [
                        "assert (wordToN m <> 0%N) as H.",
                        "VernacExtend",
                        "07f06fc3660c94e16f18239513e1c5bab62a9ccd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "rewrite C in E.",
                        "VernacExtend",
                        "c77c780855e14998ba4e46c04cb339d21e7465bf"
                    ]
                },
                {
                    "command": [
                        "simpl in E.",
                        "VernacExtend",
                        "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
                    ]
                },
                {
                    "command": [
                        "symmetry in E.",
                        "VernacExtend",
                        "250f6924a028ad3460de486d6336ed5d096239c9"
                    ]
                },
                {
                    "command": [
                        "apply Npow2_not_zero in E.",
                        "VernacExtend",
                        "df52cafb732c346b52fec9fda08aefd3bde850bd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold wplus, wmod, wordBin.",
                        "VernacExtend",
                        "b1de3c195882c35cbe4bebe7de1998ddb6eadc0d"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound a).",
                        "VernacExtend",
                        "3d494b94ba4e4f5e512460538ba302f82966a95d"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN a) as c.",
                        "VernacExtend",
                        "8e08274d6029bf8eeab06395fec0561754e84caf"
                    ]
                },
                {
                    "command": [
                        "clear Heqc a.",
                        "VernacExtend",
                        "df45f7d746f8642230c4e780236e76c240830af6"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound b).",
                        "VernacExtend",
                        "08729af943c645e5d26a827087d02ef654defff9"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN b) as d.",
                        "VernacExtend",
                        "d1ed05d29107e1e2e4cf93fa75ce6160eac31c16"
                    ]
                },
                {
                    "command": [
                        "clear Heqd b.",
                        "VernacExtend",
                        "2eb7ce10f175251860d03cb54fa6145b313dd94a"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound m).",
                        "VernacExtend",
                        "8565dd197b4a93ae6bfe386f0dc9b5e41adf0605"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN m) as n.",
                        "VernacExtend",
                        "89d0279325346696d54ff9bfcebf4c9e5a42b112"
                    ]
                },
                {
                    "command": [
                        "clear Heqn m.",
                        "VernacExtend",
                        "78569a29a56bdf2a004b977b45f3d02d26565c83"
                    ]
                },
                {
                    "command": [
                        "pose proof (N.mod_upper_bound c n H).",
                        "VernacExtend",
                        "2afdc834749d0e1d6269c57dc1e877ac437a1372"
                    ]
                },
                {
                    "command": [
                        "pose proof (N.mod_upper_bound d n H).",
                        "VernacExtend",
                        "b802de0586e7cb8d66fd11e7ff7a42fed9bc5404"
                    ]
                },
                {
                    "command": [
                        "rewrite (@wordToN_NToWord_2 sz (c mod n)) by nomega.",
                        "VernacExtend",
                        "58f5222bafda37c4ccb08b075b82b51b253a490c"
                    ]
                },
                {
                    "command": [
                        "rewrite (@wordToN_NToWord_2 sz (d mod n)) by nomega.",
                        "VernacExtend",
                        "4757f19e6643f05495d949c695a8cef031a86f64"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | |- context [wordToN (NToWord ?sz ?n)] => let k := fresh \"k\" in let E := fresh \"E\" in let B := fresh \"B\" in destruct (wordToN_NToWord sz n) as [ k [E B] ]; rewrite E in *; clear E end.",
                        "VernacExtend",
                        "5d42f10b13c3d8e493b08acbe0ceb78c635438d1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E in *.",
                        "VernacExtend",
                        "a6dc796a9756cb38d18d0cfee3b16112313171f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nminus_mod_idemp_r by assumption.",
                        "VernacExtend",
                        "5aff89974b661b52f25e250eaf37983a38270c4b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (@Nminus_mod_idemp_r (c mod n + d mod n)) by assumption.",
                        "VernacExtend",
                        "3b1d6b219feab500bbeb9e4db1b790f25da6c29f"
                    ]
                },
                {
                    "command": [
                        "rewrite (N.mul_comm n k).",
                        "VernacExtend",
                        "bcef51bab6a910d8f58a2b868789e0e995b7d777"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N.mul_assoc.",
                        "VernacExtend",
                        "2f3e648f30d315f7dfff502f90e5777b156e584b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N.mod_mul by assumption.",
                        "VernacExtend",
                        "60a5360022264b87f27fd8689568db79beb4ed78"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite N.sub_0_r.",
                        "VernacExtend",
                        "1b7ce5a307a66c6019b32c66735d07b2a75b4198"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply N.add_mod.",
                        "VernacExtend",
                        "f979f0daf4f7c15f296963da2503cc87efc8ef80"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wmod_mul",
            "line_nb": 5722,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [k E].",
                        "VernacExtend",
                        "ab28aeb091b7d686b829bfb6a49413c3c4d8c700"
                    ]
                },
                {
                    "command": [
                        "assert (wordToN b <> 0%N) as H.",
                        "VernacExtend",
                        "9ca593dbd6205ae438a000c099ff6f9225113e18"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro C.",
                        "VernacExtend",
                        "9344f6761535c238a4afba00a12ae14304164580"
                    ]
                },
                {
                    "command": [
                        "rewrite C in E.",
                        "VernacExtend",
                        "c77c780855e14998ba4e46c04cb339d21e7465bf"
                    ]
                },
                {
                    "command": [
                        "simpl in E.",
                        "VernacExtend",
                        "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
                    ]
                },
                {
                    "command": [
                        "symmetry in E.",
                        "VernacExtend",
                        "250f6924a028ad3460de486d6336ed5d096239c9"
                    ]
                },
                {
                    "command": [
                        "apply Npow2_not_zero in E.",
                        "VernacExtend",
                        "df52cafb732c346b52fec9fda08aefd3bde850bd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold wmult, wmod, wordBin.",
                        "VernacExtend",
                        "845f3cae4a518b2011d46e1ff0e6a5e112491ffc"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound a).",
                        "VernacExtend",
                        "3d494b94ba4e4f5e512460538ba302f82966a95d"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN a) as c.",
                        "VernacExtend",
                        "8e08274d6029bf8eeab06395fec0561754e84caf"
                    ]
                },
                {
                    "command": [
                        "clear Heqc a.",
                        "VernacExtend",
                        "df45f7d746f8642230c4e780236e76c240830af6"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToN_bound b).",
                        "VernacExtend",
                        "08729af943c645e5d26a827087d02ef654defff9"
                    ]
                },
                {
                    "command": [
                        "remember (wordToN b) as d.",
                        "VernacExtend",
                        "d1ed05d29107e1e2e4cf93fa75ce6160eac31c16"
                    ]
                },
                {
                    "command": [
                        "clear Heqd b.",
                        "VernacExtend",
                        "2eb7ce10f175251860d03cb54fa6145b313dd94a"
                    ]
                },
                {
                    "command": [
                        "pose proof (N.mod_upper_bound c d H).",
                        "VernacExtend",
                        "badace59b8274875fcfc684ccff94b1ab35f0d84"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | |- context [wordToN (NToWord ?sz ?n)] => let k := fresh \"k\" in let E := fresh \"E\" in let B := fresh \"B\" in destruct (wordToN_NToWord sz n) as [ k [E B] ]; rewrite E in *; clear E end.",
                        "VernacExtend",
                        "5d42f10b13c3d8e493b08acbe0ceb78c635438d1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E in *.",
                        "VernacExtend",
                        "a6dc796a9756cb38d18d0cfee3b16112313171f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nminus_mod_idemp_r by assumption.",
                        "VernacExtend",
                        "5aff89974b661b52f25e250eaf37983a38270c4b"
                    ]
                },
                {
                    "command": [
                        "rewrite (N.mul_comm d k).",
                        "VernacExtend",
                        "c6ba1bda18f046c4a382464bf3df7e57a533423b"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_assoc.",
                        "VernacExtend",
                        "c7d78c8d2521c9179ca6c46191ed315e7d0ed245"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_mul by assumption.",
                        "VernacExtend",
                        "5f4212d784c34d20d6e568c55974d32767429395"
                    ]
                },
                {
                    "command": [
                        "rewrite N.sub_0_r.",
                        "VernacExtend",
                        "64465c02f18656eb03a73685b3b400b2a94fd873"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_mod by assumption.",
                        "VernacExtend",
                        "86383d389d0025d51026d07aa49028de58d44b5a"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_same by assumption.",
                        "VernacExtend",
                        "b4747e773b5bb8ce50896b0b245148217c4e955a"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_0_r.",
                        "VernacExtend",
                        "40a6545dad55f1e57aaea7c94f5c15e6754c1c23"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mod_0_l by assumption.",
                        "VernacExtend",
                        "464dd1be0cb34b22ad621adf0c9960d457c328ba"
                    ]
                },
                {
                    "command": [
                        "apply NToWord_0.",
                        "VernacExtend",
                        "a56302478a233f442ac370db19a8f6fa507d3e13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_zero_general",
            "line_nb": 5755,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite wordToNat_combine in *.",
                        "VernacExtend",
                        "ed948d98691ca4974f0ed5ca5e99f075a87c0c4d"
                    ]
                },
                {
                    "command": [
                        "assert (sth1: wordToNat w = 0) by lia.",
                        "VernacExtend",
                        "01f6cffaad93b738666c33c4c452e136d2a466c1"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz1) as sth2.",
                        "VernacExtend",
                        "f9c6d7447b817b42b727bd731502a029777ba967"
                    ]
                },
                {
                    "command": [
                        "assert (sth3: wordToNat b = 0) by nia.",
                        "VernacExtend",
                        "bc701a1c012b35350996bf6b60afe4d5a3051c93"
                    ]
                },
                {
                    "command": [
                        "split; eapply wordToNat_zero; eauto.",
                        "VernacExtend",
                        "81c61ff3987e729fa62605aee290c4e485648623"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_lt",
            "line_nb": 5764,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine in *.",
                        "VernacExtend",
                        "8ec89269a3aba296170124218f441b8912dc6e57"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz1).",
                        "VernacExtend",
                        "6b12ca13f3c0939424b8330b59eda9ad6164d4ef"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound w1).",
                        "VernacExtend",
                        "5b38632818f85e343eea9d9af39f61587dbc46a2"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound w2).",
                        "VernacExtend",
                        "21247eb80b28cf26e9d8ee6b138a2cc2b157456a"
                    ]
                },
                {
                    "command": [
                        "nia.",
                        "VernacExtend",
                        "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split2_le",
            "line_nb": 5773,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_split2.",
                        "VernacExtend",
                        "36feaa7b6d8ab6a21a2fd3c7be986d2d032b521f"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz1).",
                        "VernacExtend",
                        "6b12ca13f3c0939424b8330b59eda9ad6164d4ef"
                    ]
                },
                {
                    "command": [
                        "apply Nat.div_le_mono; auto.",
                        "VernacExtend",
                        "c76dc06a1d31580381ae75716b1d9582637b4b58"
                    ]
                },
                {
                    "command": [
                        "Omega.omega.",
                        "VernacExtend",
                        "88a52f40a9b9a74ee4d2dc0dec7b27897f413dd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "word1_neq'",
            "line_nb": 5781,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "shatter_word w.",
                        "VernacExtend",
                        "dbce1509af20c178980cc8323dbf69956f18867e"
                    ]
                },
                {
                    "command": [
                        "destruct x; auto; tauto.",
                        "VernacExtend",
                        "5bf99300687e06369e02f333b2a583d1a12c129c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_ge",
            "line_nb": 5786,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "rewrite ?wordToNat_combine in *.",
                        "VernacExtend",
                        "8ec89269a3aba296170124218f441b8912dc6e57"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz1).",
                        "VernacExtend",
                        "6b12ca13f3c0939424b8330b59eda9ad6164d4ef"
                    ]
                },
                {
                    "command": [
                        "pose proof (pow2_zero sz2).",
                        "VernacExtend",
                        "5f417e26d61e792a86415404912a8c379966f307"
                    ]
                },
                {
                    "command": [
                        "destruct (weq x2 y2); subst.",
                        "VernacExtend",
                        "e3d38aeea29eedbc0f21337600f32820d8f995a9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; split; auto.",
                        "VernacExtend",
                        "1cc5054ad1405940e563f1d7ddce468251301130"
                    ]
                },
                {
                    "command": [
                        "word_omega.",
                        "VernacExtend",
                        "39fff2fa618443202cafcd0c4544058a00b548db"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound x1).",
                        "VernacExtend",
                        "e1da7948b5884ef6d6895f0060f48b6d23fc4c94"
                    ]
                },
                {
                    "command": [
                        "pose proof (wordToNat_bound y1).",
                        "VernacExtend",
                        "c8ea95f10739ce849b35a46d784d30b76b98ae16"
                    ]
                },
                {
                    "command": [
                        "pre_word_omega.",
                        "VernacExtend",
                        "87750207687d70fee73fbba2969538d9372c2792"
                    ]
                },
                {
                    "command": [
                        "nia.",
                        "VernacExtend",
                        "9695fc5395f9cef905b14c7a808ba0a9ffe2616b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}