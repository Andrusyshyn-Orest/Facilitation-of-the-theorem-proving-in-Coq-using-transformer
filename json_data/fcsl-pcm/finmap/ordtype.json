{
    "filename": "finmap/ordtype.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype seq path fintype.",
            "VernacRequire",
            "dfcd865e2c1a630681208f7c793446d82738a339"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module Ordered.",
            "VernacDefineModule",
            "ccbde1cf77803edbab9837555faf9003079dfabe"
        ],
        [
            "Section RawMixin.",
            "VernacBeginSection",
            "e3754b7890ceda7a1e9fc19bf1bba72600d4f111"
        ],
        [
            "Structure mixin_of (T : eqType) := Mixin {ordering : rel T; _ : irreflexive ordering; _ : transitive ordering; _ : forall x y, [|| ordering x y, x == y | ordering y x]}.",
            "VernacInductive",
            "b4d4490b0a3a3c8803e60d57470a376f1f0cc2ed"
        ],
        [
            "End RawMixin.",
            "VernacEndSegment",
            "d11e9719290e2271d84ac02cba6392743691af2c"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of (T : Type) := Class { base : Equality.class_of T; mixin : mixin_of (EqType T base)}.",
            "VernacInductive",
            "14b5fd34c6808d4724691b2c5cefa1c8923e1c0d"
        ],
        [
            "Local Coercion base : class_of >-> Equality.class_of.",
            "VernacCoercion",
            "24a98867dac3d3769e5a2ca16e45d82fb1a2b418"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort}.",
            "VernacInductive",
            "fe005e9e42bd7759257d63deeda273f09f6fd17d"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b (m0 : mixin_of (EqType T b)) := fun m & phant_id m0 m => Pack (@Class T b m).",
            "VernacDefinition",
            "8c5c7e30d0b608794120b59d0bffce66e49910d3"
        ],
        [
            "Definition eqType := Eval hnf in EqType cT class.",
            "VernacDefinition",
            "ad138960b0c0c0b51899c5048e2e397015810719"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Coercion eqType : type >-> Equality.type.",
            "VernacCoercion",
            "58308c67b5e73c9e004d57c486a5071598a25e8c"
        ],
        [
            "Canonical Structure eqType.",
            "VernacCanonical",
            "94d377a582e1a0103a5433d7a4e69a08d73c53a9"
        ],
        [
            "Notation ordType := Ordered.type.",
            "VernacSyntacticDefinition",
            "894b5efd879a36f55c1696551586081660bc97f1"
        ],
        [
            "Notation OrdMixin := Mixin.",
            "VernacSyntacticDefinition",
            "22325f197dbbf1e16e39f610b807271e64cc4820"
        ],
        [
            "Notation OrdType T m := (@pack T _ m _ id).",
            "VernacSyntacticDefinition",
            "30683e093ec5ebe38f4382ac781cb3c3083b1f5f"
        ],
        [
            "Definition ord T : rel (sort T) := (ordering (mixin (class T))).",
            "VernacDefinition",
            "e9a3388da95e597d24aa8d68beb241b3fabec6ef"
        ],
        [
            "Notation \"[ 'ordType' 'of' T 'for' cT ]\" := (@clone T cT _ id) (at level 0, format \"[ 'ordType' 'of' T 'for' cT ]\") : form_scope.",
            "VernacNotation",
            "1bc95ed5764f5e0e7f8b3545e655dcb31411ae57"
        ],
        [
            "Notation \"[ 'ordType' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'ordType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "294424429e658dd5d4823f459d419ae6f2dd8b6e"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Ordered.",
            "VernacEndSegment",
            "d9dd3e0ddf514e59b26969693db369327218c193"
        ],
        [
            "Export Ordered.Exports.",
            "VernacImport",
            "c1df7364784ac9e7279b6296bcaecfac1e1c20e9"
        ],
        [
            "Definition oleq (T : ordType) (t1 t2 : T) := ord t1 t2 || (t1 == t2).",
            "VernacDefinition",
            "f3a4c8c4911a31f285e396f228954f0679d058fe"
        ],
        [
            "Prenex Implicits ord oleq.",
            "VernacExtend",
            "932dfdab2d56814924532d540a047aff27ea29fa"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variable T : ordType.",
            "VernacAssumption",
            "ec8fc8cce3b63f43b888e2419d51811ec56ba2b1"
        ],
        [
            "Implicit Types x y : T.",
            "VernacReserve",
            "dffa3d8127715759eaec1c07eaa9c95d50e83474"
        ],
        [
            "Lemma irr : irreflexive (@ord T).",
            "VernacStartTheoremProof",
            "d1b56ab1606d8cb27e36b360e6e4a7c2c4ac1b90"
        ],
        [
            "by case: T=>s [b [m]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans : transitive (@ord T).",
            "VernacStartTheoremProof",
            "65634f64a6d54ca34511dd22e3395f546e1163f1"
        ],
        [
            "by case: T=>s [b [m]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total x y : [|| ord x y, x == y | ord y x].",
            "VernacStartTheoremProof",
            "a828b6bf6c17b0e3c94d4636d98d5ce653c670ab"
        ],
        [
            "by case: T x y=>s [b [m]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nsym x y : ord x y -> ord y x -> False.",
            "VernacStartTheoremProof",
            "36958daaa2d1b72816ab763ad04e140df468c2fe"
        ],
        [
            "by move=>E1 E2; move: (trans E1 E2); rewrite irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orefl x : oleq x x.",
            "VernacStartTheoremProof",
            "4c9c35da9f308f90ff684be0799ab6f2b62a18f2"
        ],
        [
            "by rewrite /oleq eq_refl orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma otrans : transitive (@oleq T).",
            "VernacStartTheoremProof",
            "9a954cfd56bc10d6e4a71fcfe4ea1fe5b5252d64"
        ],
        [
            "move=>x y z /=; case/orP; last by move/eqP=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /oleq; move=>T1; case/orP; first by move/(trans T1)=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/eqP=><-; rewrite T1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_oleq s : sorted (@ord T) s -> sorted (@oleq T) s.",
            "VernacStartTheoremProof",
            "053d6a2e72e223a4531540e9eb9a61518715d19b"
        ],
        [
            "by elim: s=>[|x s IH] //=; apply: sub_path=>z y; rewrite /oleq=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "Hint Resolve orefl : core.",
            "VernacHints",
            "8e53e755fb192cfbd88bb6ab6b4c5ea7acbe6568"
        ],
        [
            "Section Totality.",
            "VernacBeginSection",
            "9c95ccc24dbd8f4c8013d5ce49e915491aff2c33"
        ],
        [
            "Variable K : ordType.",
            "VernacAssumption",
            "a4165470846ab3e47c5e2c82812c93fe01c83821"
        ],
        [
            "CoInductive total_spec (x y : K) : bool -> bool -> bool -> Type := | total_spec_lt of ord x y : total_spec x y true false false | total_spec_eq of x == y : total_spec x y false true false | total_spec_gt of ord y x : total_spec x y false false true.",
            "VernacInductive",
            "4beaee47d63e8671868a26c0da1262e131f715e6"
        ],
        [
            "Lemma totalP x y : total_spec x y (ord x y) (x == y) (ord y x).",
            "VernacStartTheoremProof",
            "767d9b5b08a494e0d571916d60026e41dac7f1da"
        ],
        [
            "case H1: (x == y).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eqP H1) irr; apply: total_spec_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case H2: (ord x y); case H3: (ord y x).",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: (nsym H2 H3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: total_spec_lt H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: total_spec_gt H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move: (total x y); rewrite H1 H2 H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Totality.",
            "VernacEndSegment",
            "0eca0bdf9173b6a59d3e392b7611ebe5eb9ba1af"
        ],
        [
            "Section Mono.",
            "VernacBeginSection",
            "4aaf26db4b647a9c4cd9771d4c218f981c039e7e"
        ],
        [
            "Variables (A B :ordType).",
            "VernacAssumption",
            "272cd01819dee04fdf3cc6c578303bc72c0912e4"
        ],
        [
            "Definition strictly_increasing f x y := @ord A x y -> @ord B (f x) (f y).",
            "VernacDefinition",
            "596350d1bd16bfb72a2d264139535e63ae3bdd5b"
        ],
        [
            "Structure mono : Type := Mono {fun_of: A -> B; _: forall x y, strictly_increasing fun_of x y}.",
            "VernacInductive",
            "360c6231358e0e45ac03edcbfda0687914c6bf91"
        ],
        [
            "End Mono.",
            "VernacEndSegment",
            "4464d1b49d14b1f4a6c3ff4c9315b27242e81baa"
        ],
        [
            "Arguments strictly_increasing {A B} f x y.",
            "VernacArguments",
            "902b1aaa91b4630019f5f2a0262c2b89f3fbd341"
        ],
        [
            "Arguments Mono {A B _} _.",
            "VernacArguments",
            "91d7f161b597f9be606efd977c185c97ac758b0f"
        ],
        [
            "Section NatOrd.",
            "VernacBeginSection",
            "f542d8dce620c490368cb1f5302330d4df23053a"
        ],
        [
            "Lemma irr_ltn_nat : irreflexive ltn.",
            "VernacStartTheoremProof",
            "fe8730b3c48c402daaaacde1f236b6609799137a"
        ],
        [
            "by move=>x; rewrite /= ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_ltn_nat : transitive ltn.",
            "VernacStartTheoremProof",
            "fe4f7c622b877b9657dfa86d90557e62fa67590f"
        ],
        [
            "by apply: ltn_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_ltn_nat x y : [|| x < y, x == y | y < x].",
            "VernacStartTheoremProof",
            "2faa30ca09404a4d77d28184305945c8fd50a49d"
        ],
        [
            "by case: ltngtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nat_ordMixin := OrdMixin irr_ltn_nat trans_ltn_nat total_ltn_nat.",
            "VernacDefinition",
            "d8c2fd9193dd75331ca5d51496f13d70136e820d"
        ],
        [
            "Canonical Structure nat_ordType := OrdType nat nat_ordMixin.",
            "VernacDefinition",
            "35d7b42d9bcadb8db3f50fd0b086f01694202f75"
        ],
        [
            "End NatOrd.",
            "VernacEndSegment",
            "32770e7527e753d07bce44e616035bf9831e7879"
        ],
        [
            "Section ProdOrd.",
            "VernacBeginSection",
            "31295360bb2ffad052969005b9bb3e655a7040a1"
        ],
        [
            "Variables K T : ordType.",
            "VernacAssumption",
            "ee00dd19250369a455e2cf37a7a1793254604f87"
        ],
        [
            "Definition lex : rel (K * T) := fun x y => if x.1 == y.1 then ord x.2 y.2 else ord x.1 y.1.",
            "VernacDefinition",
            "2f55921f754c23ac6671d2f212d273d1f8c222a6"
        ],
        [
            "Lemma irr_lex : irreflexive lex.",
            "VernacStartTheoremProof",
            "b7ffeb3c97f8a3d32a641e4c977efb0d118e6600"
        ],
        [
            "by move=>x; rewrite /lex eq_refl irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_lex : transitive lex.",
            "VernacStartTheoremProof",
            "1cfc13c5538b09064b1aada805ff1a09f7ee15f2"
        ],
        [
            "move=>[x1 x2][y1 y2][z1 z2]; rewrite /lex /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP=>H1; first by rewrite (eqP H1); case: eqP=>// _; apply: trans.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>H2; first by rewrite (eqP H2) in H1 *; rewrite H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>H3; last by apply: trans.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (eqP H3)=>R1; move/(nsym R1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_lex : forall x y, [|| lex x y, x == y | lex y x].",
            "VernacStartTheoremProof",
            "c4245bb97d68f303bb5a50928a9759f3600cfac6"
        ],
        [
            "move=>[x1 x2][y1 y2]; rewrite /lex /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP=>H1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (eqP H1) eq_refl -pair_eqE /= eq_refl /=; exact: total.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "rewrite (eq_sym y1) -pair_eqE /= H1 /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: (total x1 y1); rewrite H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prod_ordMixin := OrdMixin irr_lex trans_lex total_lex.",
            "VernacDefinition",
            "c9167b0f175cc2b5a236460be614b4082e75320d"
        ],
        [
            "Canonical Structure prod_ordType := Eval hnf in OrdType (K * T) prod_ordMixin.",
            "VernacDefinition",
            "fc3a8a0e56be55e9694f89e1583e72665bfc4278"
        ],
        [
            "End ProdOrd.",
            "VernacEndSegment",
            "ef1f0cc7ed8802332be1eb834ab4be21f30c4eaa"
        ],
        [
            "Section FinTypeOrd.",
            "VernacBeginSection",
            "16019f66841ba3878b3887ba0e4594c7cf0c3414"
        ],
        [
            "Variable T : finType.",
            "VernacAssumption",
            "6349381da4d33cbc2eeaf1bade38718e15f7a2c9"
        ],
        [
            "Definition ordf : rel T := fun x y => index x (enum T) < index y (enum T).",
            "VernacDefinition",
            "e27159b80df163ce1cf33896d064b57f6d21ba1e"
        ],
        [
            "Lemma irr_ordf : irreflexive ordf.",
            "VernacStartTheoremProof",
            "49ffe94b454414754ae0fc68069a1eaa4a88d7d4"
        ],
        [
            "by move=>x; rewrite /ordf ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_ordf : transitive ordf.",
            "VernacStartTheoremProof",
            "00ba7dc07e8f42b2bb10c6831d1d01d0844c54b7"
        ],
        [
            "by move=>x y z; rewrite /ordf; apply: ltn_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_ordf x y : [|| ordf x y, x == y | ordf y x].",
            "VernacStartTheoremProof",
            "ce452aaa49abcce35719e5283a64a9e8e292ff69"
        ],
        [
            "rewrite /ordf; case: ltngtP=>//= H; rewrite ?orbT ?orbF //.",
            "VernacExtend",
            "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
        ],
        [
            "have [H1 H2]: x \\in enum T /\\ y \\in enum T by rewrite !mem_enum.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(nth_index x H1) -(nth_index x H2) H eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fin_ordMixin := OrdMixin irr_ordf trans_ordf total_ordf.",
            "VernacDefinition",
            "c1357f6f6a29bb2432f6d1c7e58dff5b9863ce8a"
        ],
        [
            "End FinTypeOrd.",
            "VernacEndSegment",
            "4b4973aea5aff6ec96c021d230d719d73cb53454"
        ],
        [
            "Notation \"[ 'fin_ordMixin' 'of' T ]\" := (fin_ordMixin _ : Ordered.mixin_of [eqType of T]) (at level 0).",
            "VernacNotation",
            "eaa5bef12135589c50f708473c9cd36669544bdd"
        ],
        [
            "Definition ordinal_ordMixin n := [fin_ordMixin of 'I_n].",
            "VernacDefinition",
            "32e268600596696077ed8de5a61d8b4d9e451fe4"
        ],
        [
            "Canonical Structure ordinal_ordType n := OrdType 'I_n (ordinal_ordMixin n).",
            "VernacDefinition",
            "9a3994b62d16abc085f79dc6382b6073b591a73f"
        ],
        [
            "Section SeqOrd.",
            "VernacBeginSection",
            "4b65f61acccce2b1ea7aabf6d75c02928fa93c5a"
        ],
        [
            "Variable (T : ordType).",
            "VernacAssumption",
            "ec8fc8cce3b63f43b888e2419d51811ec56ba2b1"
        ],
        [
            "Fixpoint ords x : pred (seq T) := fun y => match x , y with | [::] , [::] => false | [::] , t :: ts => true | x :: xs , y :: ys => if x == y then ords xs ys else ord x y | _ :: _ , [::] => false end.",
            "VernacFixpoint",
            "bd5b0d95b688f1174374708a8603330bd28a1bb4"
        ],
        [
            "Lemma irr_ords : irreflexive ords.",
            "VernacStartTheoremProof",
            "3f043e967112aa5cd86ef0f3208cda0b4f7057ef"
        ],
        [
            "by elim=>//= a l ->; rewrite irr; case:eqP=> //=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_ords : transitive ords.",
            "VernacStartTheoremProof",
            "90f1d57ec4773595504b1c19600fa4520e8ac0e6"
        ],
        [
            "elim=>[|y ys IHy][|x xs][|z zs]//=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case:eqP=>//[->|H0];case:eqP=>//H; first by move/IHy; apply.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case:eqP=>//; rewrite -H; first (by move/H0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case:eqP=>//[->|H1] H2; first by move/(nsym H2).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/(trans H2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_ords : forall x y, [|| ords x y, x == y | ords y x].",
            "VernacStartTheoremProof",
            "afe8121e371ebbd0ac111c20dff97588cf02f140"
        ],
        [
            "elim=>[|x xs IH][|y ys]//=; case:eqP=>//[->|H1]; (case:eqP=>//= H; first (by rewrite orbT //=)).",
            "VernacExtend",
            "b590aaf38922b59a6cf7094d8ccea7b1cfd9c167"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case:eqP=>//H3 ; case: (or3P (IH ys))=> [-> | /eqP H0 | ->]; [ rewrite orTb // | apply: False_ind; apply: H; rewrite H0 | rewrite orbT //].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case:eqP; first by move/(esym)/H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>_ ;case: (or3P (total x y))=>[-> //| /eqP /H1 //| -> //]; rewrite orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition seq_ordMixin := OrdMixin irr_ords trans_ords total_ords.",
            "VernacDefinition",
            "f4a8686ae0b846820b52171b5ea0c44d2c8cc4b8"
        ],
        [
            "Canonical Structure seq_ordType := Eval hnf in OrdType (seq T) seq_ordMixin.",
            "VernacDefinition",
            "65e12fd73338eeeb2f0198fc309b0ff7c54fed02"
        ],
        [
            "End SeqOrd.",
            "VernacEndSegment",
            "718bca2ee9d9320da7d0fada5116afdcc3b0ddb2"
        ],
        [
            "Section unitOrd.",
            "VernacBeginSection",
            "d42dc3fd1acd2735b6bf39eb5e29d20d069f10a6"
        ],
        [
            "Let ordtt (x y : unit ) := false.",
            "VernacDefinition",
            "415de9f78eba83adbac5aaf43143d1bc6631c13c"
        ],
        [
            "Lemma irr_tt : irreflexive ordtt.",
            "VernacStartTheoremProof",
            "8acc5783e0c86d798761a27ab82d559216bd6cc8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_tt : transitive ordtt.",
            "VernacStartTheoremProof",
            "95639580aed11a7581cdb1a2536571586f7b3248"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma total_tt x y : [|| ordtt x y, x == y | ordtt y x ].",
            "VernacStartTheoremProof",
            "b31fef28bed0162f8c0ab6dbc34a6b984322e5af"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let unit_ordMixin := OrdMixin irr_tt trans_tt total_tt.",
            "VernacDefinition",
            "cf90bd9a15f5a8143d3cfc4b971125f833367c35"
        ],
        [
            "Canonical Structure unit_ordType := Eval hnf in OrdType unit unit_ordMixin.",
            "VernacDefinition",
            "eade3d4a4e025642f3cb41971f64f0d721e640a2"
        ],
        [
            "End unitOrd.",
            "VernacEndSegment",
            "a542361953d22d63df651b41fc3ab0408495f80a"
        ],
        [
            "Lemma seq_last_in (A : eqType) (s : seq A) x : last x s \\notin s -> s = [::].",
            "VernacStartTheoremProof",
            "5f43d2be1ccadfca02c5118b856aa17e5426ed84"
        ],
        [
            "case: (lastP s)=>// {s} s y; case: negP=>//; elim; rewrite last_rcons.",
            "VernacExtend",
            "6cb4e986298251dd95fba616dd048aa30889c667"
        ],
        [
            "by elim: s=>[|y' s IH]; rewrite /= inE // IH orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma path_last (A : ordType) (s : seq A) x : path oleq x s -> oleq x (last x s).",
            "VernacStartTheoremProof",
            "35d1a1c12e2e838c57982055d14089ac601bed02"
        ],
        [
            "move/(order_path_min (@otrans _)); rewrite -nth_last.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: s =>// h s' /all_nthP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_last_key_max (A : ordType) (s : seq A) x y : sorted oleq s -> x \\in s -> oleq x (last y s).",
            "VernacStartTheoremProof",
            "652e3c0c684ef67234b38c0fc088a37f94903f09"
        ],
        [
            "elim: s x y=>[|z s IH] //= x y H; rewrite inE /=.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case: eqP=>[->|] /= _; first by apply: path_last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: IH (path_sorted H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_max_key_last (A : ordType) (s : seq A) x y : sorted oleq s -> x \\in s -> (forall z, z \\in s -> oleq z x) -> last y s = x.",
            "VernacStartTheoremProof",
            "385fe963145e0c1624153f28a52489437c2de9a3"
        ],
        [
            "elim: s x y => [|w s IH] //= x y; rewrite inE /=.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case: eqP=>[<- /= H1 _ H2 | _ H /= H1 H2]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: IH (path_sorted H) H1 _ => z H3; apply: H2.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite inE /= H3 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/eqP; move: (H2 (last x s)) (path_last H1); rewrite inE /= /oleq eq_sym.",
            "VernacExtend",
            "892743169f9b7a8d1078a131ab1583767aafbf69"
        ],
        [
            "case: totalP=>//=; case E: (last x s \\in s)=>//.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by move/negbT/seq_last_in: E=>->; rewrite irr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma seq_last_mono (A : ordType) (s1 s2 : seq A) x : path oleq x s1 -> path oleq x s2 -> {subset s1 <= s2} -> oleq (last x s1) (last x s2).",
            "VernacStartTheoremProof",
            "2e7eb808e58e8034a6fe6a8df1851631fd324e82"
        ],
        [
            "case: s1=>/= [_ H1 _|a s]; first by apply: path_last H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=>H1 H2 H3 H; apply: sorted_last_key_max (path_sorted H3) _.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "apply: {x s2 H1 H3} H; rewrite inE orbC -implyNb.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case E: (_ \\notin _) (@seq_last_in _ s a)=>//= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "irr",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by case: T=>s [b [m]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by case: T=>s [b [m]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by case: T x y=>s [b [m]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nsym",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by move=>E1 E2; move: (trans E1 E2); rewrite irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orefl",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by rewrite /oleq eq_refl orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "otrans",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "move=>x y z /=; case/orP; last by move/eqP=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /oleq; move=>T1; case/orP; first by move/(trans T1)=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/eqP=><-; rewrite T1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_oleq",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "by elim: s=>[|x s IH] //=; apply: sub_path=>z y; rewrite /oleq=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "totalP",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "case H1: (x == y).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP H1) irr; apply: total_spec_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case H2: (ord x y); case H3: (ord y x).",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: (nsym H2 H3).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: total_spec_lt H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: total_spec_gt H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move: (total x y); rewrite H1 H2 H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_ltn_nat",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite /= ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_ltn_nat",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "by apply: ltn_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_ltn_nat",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by case: ltngtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_lex",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite /lex eq_refl irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_lex",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "move=>[x1 x2][y1 y2][z1 z2]; rewrite /lex /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H1; first by rewrite (eqP H1); case: eqP=>// _; apply: trans.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H2; first by rewrite (eqP H2) in H1 *; rewrite H1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H3; last by apply: trans.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP H3)=>R1; move/(nsym R1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_lex",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "move=>[x1 x2][y1 y2]; rewrite /lex /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H1.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqP H1) eq_refl -pair_eqE /= eq_refl /=; exact: total.",
                        "VernacExtend",
                        "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_sym y1) -pair_eqE /= H1 /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: (total x1 y1); rewrite H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_ordf",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite /ordf ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_ordf",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by move=>x y z; rewrite /ordf; apply: ltn_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_ordf",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "rewrite /ordf; case: ltngtP=>//= H; rewrite ?orbT ?orbF //.",
                        "VernacExtend",
                        "1dc1cec635c64f0cc3ec64ea6e4d6c7d5b8f81f6"
                    ]
                },
                {
                    "command": [
                        "have [H1 H2]: x \\in enum T /\\ y \\in enum T by rewrite !mem_enum.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(nth_index x H1) -(nth_index x H2) H eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_ords",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by elim=>//= a l ->; rewrite irr; case:eqP=> //=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_ords",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "elim=>[|y ys IHy][|x xs][|z zs]//=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "case:eqP=>//[->|H0];case:eqP=>//H; first by move/IHy; apply.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case:eqP=>//; rewrite -H; first (by move/H0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case:eqP=>//[->|H1] H2; first by move/(nsym H2).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/(trans H2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "total_ords",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "elim=>[|x xs IH][|y ys]//=; case:eqP=>//[->|H1]; (case:eqP=>//= H; first (by rewrite orbT //=)).",
                        "VernacExtend",
                        "b590aaf38922b59a6cf7094d8ccea7b1cfd9c167"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case:eqP=>//H3 ; case: (or3P (IH ys))=> [-> | /eqP H0 | ->]; [ rewrite orTb // | apply: False_ind; apply: H; rewrite H0 | rewrite orbT //].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case:eqP; first by move/(esym)/H1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>_ ;case: (or3P (total x y))=>[-> //| /eqP /H1 //| -> //]; rewrite orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "irr_tt",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_tt",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seq_last_in",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "case: (lastP s)=>// {s} s y; case: negP=>//; elim; rewrite last_rcons.",
                        "VernacExtend",
                        "6cb4e986298251dd95fba616dd048aa30889c667"
                    ]
                },
                {
                    "command": [
                        "by elim: s=>[|y' s IH]; rewrite /= inE // IH orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "path_last",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "move/(order_path_min (@otrans _)); rewrite -nth_last.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: s =>// h s' /all_nthP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_last_key_max",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "elim: s x y=>[|z s IH] //= x y H; rewrite inE /=.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "case: eqP=>[->|] /= _; first by apply: path_last.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: IH (path_sorted H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_max_key_last",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "elim: s x y => [|w s IH] //= x y; rewrite inE /=.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "case: eqP=>[<- /= H1 _ H2 | _ H /= H1 H2]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply: IH (path_sorted H) H1 _ => z H3; apply: H2.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE /= H3 orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; move: (H2 (last x s)) (path_last H1); rewrite inE /= /oleq eq_sym.",
                        "VernacExtend",
                        "892743169f9b7a8d1078a131ab1583767aafbf69"
                    ]
                },
                {
                    "command": [
                        "case: totalP=>//=; case E: (last x s \\in s)=>//.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by move/negbT/seq_last_in: E=>->; rewrite irr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}