{
    "filename": "pcm/lift.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype.",
            "VernacRequire",
            "9e197fd62ce7a98c522063cd53f86e7329885990"
        ],
        [
            "From fcsl Require Import prelude pcm.",
            "VernacRequire",
            "dc8d1a3baeaa4e4d097612526f6e257fa12a9909"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module Unlifted.",
            "VernacDefineModule",
            "e5d516342b79b66f7b14ba7e06a2bef3f380098e"
        ],
        [
            "Record mixin_of (T : Type) := Mixin { ounit_op : T; ojoin_op : T -> T -> option T; ojoinC_op : forall x y, ojoin_op x y = ojoin_op y x; ojoinA_op : forall x y z, obind (ojoin_op x) (ojoin_op y z) = obind (ojoin_op^~ z) (ojoin_op x y); ounitL_op : forall x, ojoin_op ounit_op x = Some x}.",
            "VernacInductive",
            "8c1db31bbf33c31fe312ceb1136d5f8107109bc5"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Notation class_of := mixin_of (only parsing).",
            "VernacSyntacticDefinition",
            "7196b196bbc3a41e5ce702c5c8b4974fd7174202"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort}.",
            "VernacInductive",
            "fe005e9e42bd7759257d63deeda273f09f6fd17d"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Definition pack c := @Pack T c.",
            "VernacDefinition",
            "df423946029ab5f9a8dac00ac149f11d9867d225"
        ],
        [
            "Definition clone := fun c & cT -> T & phant_id (pack c) cT => pack c.",
            "VernacDefinition",
            "3491fcfe2ed605c5bad8755c02a8788916895b4c"
        ],
        [
            "Definition ounit := ounit_op class.",
            "VernacDefinition",
            "0de770825be320c30e3869dd3584f74cded6fb63"
        ],
        [
            "Definition ojoin := ojoin_op class.",
            "VernacDefinition",
            "fd5573119290ed68716e77ad139ee2a9c11e25ef"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Notation unlifted := type.",
            "VernacSyntacticDefinition",
            "d9a3160e8a77520560d990a003101cb360d98706"
        ],
        [
            "Notation UnliftedMixin := Mixin.",
            "VernacSyntacticDefinition",
            "5fa67c3620380f25dd2a89c376b3878f79ef0f18"
        ],
        [
            "Notation Unlifted T m := (@pack T m).",
            "VernacSyntacticDefinition",
            "ea46e0b2c1d1fc9ec89d43dad3800038a0c80035"
        ],
        [
            "Notation \"[ 'unliftedMixin' 'of' T ]\" := (class _ : mixin_of T) (at level 0, format \"[ 'unliftedMixin' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "bb54f815ee9b3fddddcfb163b728f2e976eaea62"
        ],
        [
            "Notation \"[ 'unlifted' 'of' T 'for' C ]\" := (@clone T C _ idfun id) (at level 0, format \"[ 'unlifted' 'of' T 'for' C ]\") : form_scope.",
            "VernacNotation",
            "5e2747d384d1ffe2dc15772dd271840c4d98b566"
        ],
        [
            "Notation \"[ 'unlifted' 'of' T ]\" := (@clone T _ _ id id) (at level 0, format \"[ 'unlifted' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "63cd6581c4b58f1ec3dc8eb7b001989114df09bc"
        ],
        [
            "Notation ounit := ounit.",
            "VernacSyntacticDefinition",
            "c38359e5a1aaa397b9d9213f606b0ea5097913fc"
        ],
        [
            "Notation ojoin := ojoin.",
            "VernacSyntacticDefinition",
            "b804ced69c721e777a6858f1eb03ceaab0fff5f4"
        ],
        [
            "Arguments ounit [cT].",
            "VernacArguments",
            "e9a64219f6675b7030ad3cff515399bf4c973198"
        ],
        [
            "Lemma ojoinC (U : unlifted) (x y : U) : ojoin x y = ojoin y x.",
            "VernacStartTheoremProof",
            "c2666068742076d4641f7ae2f1e1fe6eccfe8d64"
        ],
        [
            "by case: U x y=>T [ou oj ojC].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ojoinA (U : unlifted) (x y z : U) : obind (ojoin x) (ojoin y z) = obind (@ojoin U^~ z) (ojoin x y).",
            "VernacStartTheoremProof",
            "3080e4f484e0d4ec07d7e74b684f1127ec2046d5"
        ],
        [
            "by case: U x y z=>T [ou oj ojC ojA].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ounitL (U : unlifted) (x : U) : ojoin ounit x = Some x.",
            "VernacStartTheoremProof",
            "296589a0f52f45cef2e6a42d6a7ed4f7f7d90738"
        ],
        [
            "by case: U x=>T [ou oj ojC ojA ojL].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Unlifted.",
            "VernacEndSegment",
            "df16d6b84ff6d624b4ba7b103fbec5bbf8ec41b4"
        ],
        [
            "Export Unlifted.Exports.",
            "VernacImport",
            "21b784a6c85a03e15daf2b2ca25f6a044354c8fe"
        ],
        [
            "Inductive lift A := down | up of A.",
            "VernacInductive",
            "ddcc295c6e85616a653d16778b7e5c56cfda0d6a"
        ],
        [
            "Module Lift.",
            "VernacDefineModule",
            "9ed823fbc4b824ccea7d9ec60652edc73339a967"
        ],
        [
            "Section Lift.",
            "VernacBeginSection",
            "08f9a0244392cf3563deca369d2bdc8900b38e0b"
        ],
        [
            "Variable A : unlifted.",
            "VernacAssumption",
            "58554426e6d6263399551629ec906c51353415d7"
        ],
        [
            "Let unit := up (@ounit A).",
            "VernacDefinition",
            "d6a25433ad245f5dc4dd06281657555323618292"
        ],
        [
            "Let valid := [fun x : lift A => if x is up _ then true else false].",
            "VernacDefinition",
            "4bea62c230e500af99a6242e9ffe583bae9add57"
        ],
        [
            "Let join := [fun x y : lift A => if (x, y) is (up v, up w) then if ojoin v w is Some u then up u else @down A else @down A].",
            "VernacDefinition",
            "6ebf7db41fc3834b90ac0c734da79ea63eee6b8e"
        ],
        [
            "Lemma joinC (x y : lift A) : join x y = join y x.",
            "VernacStartTheoremProof",
            "05bd055da58b1c14899ce8dff6fac228adf05243"
        ],
        [
            "by case: x y=>[|x][|y] //=; rewrite ojoinC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinA (x y z : lift A) : join x (join y z) = join (join x y) z.",
            "VernacStartTheoremProof",
            "78afa08b5a4d1866eaab432f21f5881ca62b6deb"
        ],
        [
            "case: x y z =>[|x][|y][|z] //=; first by case: (ojoin x y).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case E1: (ojoin y z)=>[v1|].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case E2: (ojoin x y)=>[v2|]; by move: (ojoinA x y z); rewrite E1 E2 /=; move=>->.",
            "VernacExtend",
            "14b141a2d70f00681f703015bc169478d399fe62"
        ],
        [
            "case E2: (ojoin x y)=>[v2|] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move: (ojoinA x y z); rewrite E1 E2 /= =><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitL x : join unit x = x.",
            "VernacStartTheoremProof",
            "e72c6cbdc50d240809cfb48778031d866c2e2573"
        ],
        [
            "by case: x=>[|x] //=; rewrite ounitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validL x y : valid (join x y) -> valid x.",
            "VernacStartTheoremProof",
            "9e8cbae4d7eca9eaa9747e217bb24b4de11d131a"
        ],
        [
            "by case: x y=>[|x][|y].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validU : valid unit.",
            "VernacStartTheoremProof",
            "34b659acc0a7301a90d9e932d3a60e8a7573f052"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lift.",
            "VernacEndSegment",
            "7ef7a65309424e4bd6543272d3000cda3f3f6f60"
        ],
        [
            "Section LiftEqType.",
            "VernacBeginSection",
            "593219b8606b1ab47aa0d9ec5677291a05cb57f3"
        ],
        [
            "Variable A : eqType.",
            "VernacAssumption",
            "74d2fd9d5518065e27be8fc78c97110c46767a20"
        ],
        [
            "Definition lift_eq (u v : lift A) := match u, v with up a, up b => a == b | down, down => true | _, _ => false end.",
            "VernacDefinition",
            "f573f864d1c9950b6205b45b01913a239f6d22bb"
        ],
        [
            "Lemma lift_eqP : Equality.axiom lift_eq.",
            "VernacStartTheoremProof",
            "60fabd218e9404073e2eee94d7f3a9d0d29e192b"
        ],
        [
            "case=>[|x][|y] /=; try by constructor.",
            "VernacExtend",
            "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
        ],
        [
            "by apply: (iffP eqP)=>[->|[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition liftEqMixin := EqMixin LiftEqType.lift_eqP.",
            "VernacDefinition",
            "831a7f6956279babadeed17500e73c33a4f7f565"
        ],
        [
            "Canonical liftEqType := Eval hnf in EqType _ liftEqMixin.",
            "VernacDefinition",
            "c046893b056ed85e5ff356814fd8f4fd4e83afa1"
        ],
        [
            "End LiftEqType.",
            "VernacEndSegment",
            "e1e71ebd7658dc9177e461fbd512dc8d010324f9"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Arguments down [A].",
            "VernacArguments",
            "4dbbb016a23f041c053ba8b0f21de78fa29c2e60"
        ],
        [
            "Arguments up [A].",
            "VernacArguments",
            "654e0281a45a2868a42e342b5f2a3cc04b0a844c"
        ],
        [
            "Canonical liftEqType.",
            "VernacCanonical",
            "3a7a014015286b4b2015dae2804a3952c8febe00"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "CoInductive lift_spec A (x : lift A) : lift A -> Type := | up_spec n of x = up n : lift_spec x (up n) | undef_spec of x = down : lift_spec x down.",
            "VernacInductive",
            "73e1777ad31883bb5662d338259eb1077a6e7466"
        ],
        [
            "Lemma liftP A (x : lift A) : lift_spec x x.",
            "VernacStartTheoremProof",
            "ce0810682661611dff70f52c67d2e3cc76cf44fa"
        ],
        [
            "by case: x=>[|a]; [apply: undef_spec | apply: up_spec].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable A : unlifted.",
            "VernacAssumption",
            "58554426e6d6263399551629ec906c51353415d7"
        ],
        [
            "Definition liftPCMMixin := PCMMixin (@Lift.joinC A) (@Lift.joinA A) (@Lift.unitL A) (@Lift.validL A) (@Lift.validU A).",
            "VernacDefinition",
            "7ad7e346854c560d6791dce390ec1fcd5734c8d0"
        ],
        [
            "Canonical liftPCM := Eval hnf in PCM (lift A) liftPCMMixin.",
            "VernacDefinition",
            "6cfa84fc87de82b9dc33aea6ed9a5921d65c19ab"
        ],
        [
            "Lemma upE (a1 a2 : A) : up a1 \\+ up a2 = if ojoin a1 a2 is Some a then up a else down.",
            "VernacStartTheoremProof",
            "7855d74a34d161645714d25fb3d2ff71df5a8df0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_down : valid (@down A) = false.",
            "VernacStartTheoremProof",
            "756d9847bbfad6ca12736bacc9c3500f9de2fd30"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma down_join (x : lift A) : down \\+ x = down.",
            "VernacStartTheoremProof",
            "48bfff890800bcdbc220afd7000da2d8b486db86"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_down (x : lift A) : x \\+ down = down.",
            "VernacStartTheoremProof",
            "bccc4bc95596e87d50afa182d7138e7aa5050256"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition downE := (down_join, join_undef, valid_down).",
            "VernacDefinition",
            "8812b835afc7b21b84a271e08b8c8d6a597d96e7"
        ],
        [
            "CoInductive liftjoin_spec (x y : lift A) : _ -> _ -> _ -> Type := | upcase1 n1 n2 of x = up n1 & y = up n2 : liftjoin_spec x y (if ojoin n1 n2 is Some u then up u else down) x y | invalid1 of ~~ valid (x \\+ y) : liftjoin_spec x y down x y.",
            "VernacInductive",
            "5e7d315418bd33077feb2060a998f56b317b36a5"
        ],
        [
            "Lemma liftPJ (x y : lift A) : liftjoin_spec x y (x \\+ y) x y.",
            "VernacStartTheoremProof",
            "ae2ff682d6dcd9a7a59052a55d9f8033b026ea70"
        ],
        [
            "by case: x y=>[|x][|y]; rewrite ?downE; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Lift.",
            "VernacEndSegment",
            "7ef7a65309424e4bd6543272d3000cda3f3f6f60"
        ],
        [
            "Export Lift.Exports.",
            "VernacImport",
            "895c7f55ee2471a51adc13016c1210cf8c1012aa"
        ],
        [
            "Module NatUnlift.",
            "VernacDefineModule",
            "a36bb9f01d05e55e47c322172a4c3a6269c11dd2"
        ],
        [
            "Local Definition ojoin (x y : nat) := Some (x + y).",
            "VernacDefinition",
            "625e12f09fdc8aa2ce5f38261f8b76a2021cbdcb"
        ],
        [
            "Local Definition ounit := 0.",
            "VernacDefinition",
            "5a83785b2a2e8d1a5ae41a8a9f8573b2fefc092b"
        ],
        [
            "Lemma ojoinC x y : ojoin x y = ojoin y x.",
            "VernacStartTheoremProof",
            "646679562b544ad748372f78d84b9c0ab3d4035d"
        ],
        [
            "by rewrite /ojoin addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ojoinA x y z : obind (ojoin x) (ojoin y z) = obind (ojoin^~ z) (ojoin x y).",
            "VernacStartTheoremProof",
            "190d667e92c71bdcd9dd027e97f52c18dc1b2245"
        ],
        [
            "by rewrite /obind/ojoin /= addnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ounitL x : ojoin ounit x = Some x.",
            "VernacStartTheoremProof",
            "1152265593550db9e47253d4de4ac31b4c9571d7"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NatUnlift.",
            "VernacEndSegment",
            "e4497e4a7f1b808af6b45159bb643e9a2dcda8a9"
        ],
        [
            "Definition natUnliftedMix := UnliftedMixin NatUnlift.ojoinC NatUnlift.ojoinA NatUnlift.ounitL.",
            "VernacDefinition",
            "ce6c5fa68d2b9d32010e6d00b39dccc586aaac7a"
        ],
        [
            "Canonical natUnlifted := Eval hnf in Unlifted nat natUnliftedMix.",
            "VernacDefinition",
            "b711480ecf4307dfb8e66b7b9eb5e8abd20d5188"
        ],
        [
            "Lemma nxV (m1 m2 : lift natUnlifted) : valid (m1 \\+ m2) -> exists n1 n2, m1 = up n1 /\\ m2 = up n2.",
            "VernacStartTheoremProof",
            "482b6017dab33d64a988d37c971452ba2a7034e2"
        ],
        [
            "by case: m1=>// n1; case: m2=>// n2; exists n1, n2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nxE0 (n1 n2 : lift natUnlifted) : n1 \\+ n2 = up 0 -> (n1 = up 0) * (n2 = up 0).",
            "VernacStartTheoremProof",
            "fb9cd25969321eebbcb5014a75265d8027421b3e"
        ],
        [
            "case: n1 n2=>[|n1][|n2] //; rewrite upE /ojoin /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case=>/eqP; rewrite addn_eq0=>/andP [/eqP -> /eqP ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "ojoinC",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "by case: U x y=>T [ou oj ojC].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ojoinA",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "by case: U x y z=>T [ou oj ojC ojA].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ounitL",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "by case: U x=>T [ou oj ojC ojA ojL].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinC",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "by case: x y=>[|x][|y] //=; rewrite ojoinC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinA",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "case: x y z =>[|x][|y][|z] //=; first by case: (ojoin x y).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case E1: (ojoin y z)=>[v1|].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case E2: (ojoin x y)=>[v2|]; by move: (ojoinA x y z); rewrite E1 E2 /=; move=>->.",
                        "VernacExtend",
                        "14b141a2d70f00681f703015bc169478d399fe62"
                    ]
                },
                {
                    "command": [
                        "case E2: (ojoin x y)=>[v2|] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move: (ojoinA x y z); rewrite E1 E2 /= =><-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitL",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "by case: x=>[|x] //=; rewrite ounitL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validL",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by case: x y=>[|x][|y].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validU",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_eqP",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "case=>[|x][|y] /=; try by constructor.",
                        "VernacExtend",
                        "700e4ba7c43aef376de752aa78d70ea0bf66a54e"
                    ]
                },
                {
                    "command": [
                        "by apply: (iffP eqP)=>[->|[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "liftP",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "by case: x=>[|a]; [apply: undef_spec | apply: up_spec].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upE",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_down",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "down_join",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_down",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "liftPJ",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by case: x y=>[|x][|y]; rewrite ?downE; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nxV",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "by case: m1=>// n1; case: m2=>// n2; exists n1, n2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nxE0",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "case: n1 n2=>[|n1][|n2] //; rewrite upE /ojoin /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case=>/eqP; rewrite addn_eq0=>/andP [/eqP -> /eqP ->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}