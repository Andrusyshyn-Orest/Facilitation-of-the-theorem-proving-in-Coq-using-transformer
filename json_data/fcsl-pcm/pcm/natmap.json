{
    "filename": "pcm/natmap.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype seq path.",
            "VernacRequire",
            "d7046f70c5bd7f4316377c4e82aa4b9fd36d1fd5"
        ],
        [
            "From fcsl Require Import prelude ordtype pcm finmap unionmap.",
            "VernacRequire",
            "133a6f49791a2bf0d083338eaa273046035fdb21"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module Type NMSig.",
            "VernacDeclareModuleType",
            "75228e42e88028ba7655855dadbb78ce353b046e"
        ],
        [
            "Parameter tp : Type -> Type.",
            "VernacAssumption",
            "6c8e70729f6e73d5bd786b14156b13778d6109a8"
        ],
        [
            "Section Params.",
            "VernacBeginSection",
            "75d0af265c03c3cb55114f228b7a57defd667373"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Notation tp := (tp A).",
            "VernacSyntacticDefinition",
            "364a3303b03912214d002ea81f222b4c49f60c24"
        ],
        [
            "Parameter nm_undef : tp.",
            "VernacAssumption",
            "91bf4b1e8569bf507d2960467c177179b5d57575"
        ],
        [
            "Parameter defined : tp -> bool.",
            "VernacAssumption",
            "b51330da46392a851cf1fb99c0d5d1196efd38fa"
        ],
        [
            "Parameter empty : tp.",
            "VernacAssumption",
            "d58abaaa84f4c6a52ea47e939ffb819c6fbfd744"
        ],
        [
            "Parameter upd : nat -> A -> tp -> tp.",
            "VernacAssumption",
            "b6960e0bc7265c75cd3b509ba6bb20b774614da4"
        ],
        [
            "Parameter dom : tp -> seq nat.",
            "VernacAssumption",
            "21bd4da39aafdaa6593aae4c641f104d5a8445e2"
        ],
        [
            "Parameter dom_eq : tp -> tp -> bool.",
            "VernacAssumption",
            "370189ff3e0a16cedc7f80c6f9f96f6485decf15"
        ],
        [
            "Parameter free : nat -> tp -> tp.",
            "VernacAssumption",
            "5b993890aff2e5b46c7df5cc9dd3e2a177275297"
        ],
        [
            "Parameter find : nat -> tp -> option A.",
            "VernacAssumption",
            "d64258afdee41e25715600c8757d976bcd74a934"
        ],
        [
            "Parameter union : tp -> tp -> tp.",
            "VernacAssumption",
            "4e9e067cc2fc164305a048a0a4274960b175accc"
        ],
        [
            "Parameter nm_filter : pred nat -> tp -> tp.",
            "VernacAssumption",
            "5c2cd94d2d2bd486c0186d43a2274e01be89b765"
        ],
        [
            "Parameter empb : tp -> bool.",
            "VernacAssumption",
            "c34d09502dda2decee08616a285d8fb9337245fd"
        ],
        [
            "Parameter undefb : tp -> bool.",
            "VernacAssumption",
            "8e6f73dde2070ff0fc101f53c2f560b40fb85255"
        ],
        [
            "Parameter pts : nat -> A -> tp.",
            "VernacAssumption",
            "f4cd6d5610279359d10c87e0ea7656a868e3fb1d"
        ],
        [
            "Parameter from : tp -> @UM.base nat_ordType A (fun x => x != 0).",
            "VernacAssumption",
            "bd3f3df5cbe55b2ab4c0e9516264ea100ff577aa"
        ],
        [
            "Parameter to : @UM.base nat_ordType A (fun x => x != 0) -> tp.",
            "VernacAssumption",
            "79ea9d7ee5719937c1f0ed135d11ae519dde4575"
        ],
        [
            "Axiom ftE : forall b, from (to b) = b.",
            "VernacAssumption",
            "3b26803d447b75b8f34f2efd3ea970f1dc5552d0"
        ],
        [
            "Axiom tfE : forall f, to (from f) = f.",
            "VernacAssumption",
            "ecf6ff9e9224504cc640133a8119700e98b9ea13"
        ],
        [
            "Axiom undefE : nm_undef = to (@UM.Undef nat_ordType A (fun x => x != 0)).",
            "VernacAssumption",
            "6bbc8c6b9394cfe712b5793a830acdfa17026cb4"
        ],
        [
            "Axiom defE : forall f, defined f = UM.valid (from f).",
            "VernacAssumption",
            "edf8202818bb876ef7984b011d1064bf789c8aa3"
        ],
        [
            "Axiom emptyE : empty = to (@UM.empty nat_ordType A (fun x => x != 0)).",
            "VernacAssumption",
            "871f2abf0ce23d817aa75781d60a279a48c09725"
        ],
        [
            "Axiom updE : forall k v f, upd k v f = to (UM.upd k v (from f)).",
            "VernacAssumption",
            "e8b481952367ce29e41bbfcdbe0a16454f401335"
        ],
        [
            "Axiom domE : forall f, dom f = UM.dom (from f).",
            "VernacAssumption",
            "e79ee5fd00fbc6b1094e50165dbf4ee25ed04c54"
        ],
        [
            "Axiom dom_eqE : forall f1 f2, dom_eq f1 f2 = UM.dom_eq (from f1) (from f2).",
            "VernacAssumption",
            "4f74bf2fe4f591107c794d8dadbe40cb9ea25e53"
        ],
        [
            "Axiom freeE : forall k f, free k f = to (UM.free k (from f)).",
            "VernacAssumption",
            "7f2168fd34a59f91f36ce9a2492f6b081135ea75"
        ],
        [
            "Axiom findE : forall k f, find k f = UM.find k (from f).",
            "VernacAssumption",
            "c0ba2a9b46115844abdcbe880f351d564353683e"
        ],
        [
            "Axiom unionE : forall f1 f2, union f1 f2 = to (UM.union (from f1) (from f2)).",
            "VernacAssumption",
            "e62c762710c0fd21c9d8fa7b3ae91abd0fe68b94"
        ],
        [
            "Axiom nmfiltE : forall q f, nm_filter q f = to (UM.um_filter q (from f)).",
            "VernacAssumption",
            "e9357f80e25ecaed541c845b50f76cbf44e58847"
        ],
        [
            "Axiom empbE : forall f, empb f = UM.empb (from f).",
            "VernacAssumption",
            "698b204ff948ca9258f6f65179dfedbf809df9ba"
        ],
        [
            "Axiom undefbE : forall f, undefb f = UM.undefb (from f).",
            "VernacAssumption",
            "b991686e3312b618f8c53ee1d0b9a36146fab223"
        ],
        [
            "Axiom ptsE : forall k v, pts k v = to (@UM.pts nat_ordType A (fun x => x != 0) k v).",
            "VernacAssumption",
            "7dcd6fb28f166da9e57e10d5cd648a35b075e246"
        ],
        [
            "End Params.",
            "VernacEndSegment",
            "57e4b84196c6c1eda6bd206bf9071e28734f14b9"
        ],
        [
            "End NMSig.",
            "VernacEndSegment",
            "9685cab1152f454d63d640a36b4d1a0eea65aa79"
        ],
        [
            "Module NMDef : NMSig.",
            "VernacDefineModule",
            "3a985c6c745b7a6fb7920b96b9fc7cb38f7e4871"
        ],
        [
            "Section NMDef.",
            "VernacBeginSection",
            "348233369cd8222382e6d6f8e4fedf5b5ebbf413"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Definition nonz x := x != 0.",
            "VernacDefinition",
            "adc5719b535ad56b5d4e05a9bbdf605fa38b65ef"
        ],
        [
            "Definition tp : Type := @UM.base nat_ordType A nonz.",
            "VernacDefinition",
            "b6f4aa6692901d0f925a79702b3f53819aa8542e"
        ],
        [
            "Definition nm_undef := @UM.Undef nat_ordType A nonz.",
            "VernacDefinition",
            "606819e339ea4309a2625b3b889019a274269f36"
        ],
        [
            "Definition defined f := @UM.valid nat_ordType A nonz f.",
            "VernacDefinition",
            "edc375319f5058473e61f570ad9a20830239923d"
        ],
        [
            "Definition empty := @UM.empty nat_ordType A nonz.",
            "VernacDefinition",
            "f30cb030fdc078acb948f237ecd0d71230b191b8"
        ],
        [
            "Definition upd k v f := @UM.upd nat_ordType A nonz k v f.",
            "VernacDefinition",
            "f189232e9a1d38f828beecccd2459ef17e890457"
        ],
        [
            "Definition dom f := @UM.dom nat_ordType A nonz f.",
            "VernacDefinition",
            "391f8c1398eeb57d430c17028be8c64c49dc8b21"
        ],
        [
            "Definition dom_eq f1 f2 := @UM.dom_eq nat_ordType A nonz f1 f2.",
            "VernacDefinition",
            "0c0bf6cc6674a59d6dc209304a640f1402c9535b"
        ],
        [
            "Definition free k f := @UM.free nat_ordType A nonz k f.",
            "VernacDefinition",
            "57b6ff0d5af71d29169377b96337726beb1349a5"
        ],
        [
            "Definition find k f := @UM.find nat_ordType A nonz k f.",
            "VernacDefinition",
            "b9ea1a3b069c99683ea74f4c027b303ba541e764"
        ],
        [
            "Definition union f1 f2 := @UM.union nat_ordType A nonz f1 f2.",
            "VernacDefinition",
            "1f8d0aec272445753e58dabd000b1c469df8684a"
        ],
        [
            "Definition nm_filter q f := @UM.um_filter nat_ordType A nonz q f.",
            "VernacDefinition",
            "55c33d20bb7ee819c6e86ced65712585b7b1577b"
        ],
        [
            "Definition empb f := @UM.empb nat_ordType A nonz f.",
            "VernacDefinition",
            "56538718001041297172238b7a3b44a094625f11"
        ],
        [
            "Definition undefb f := @UM.undefb nat_ordType A nonz f.",
            "VernacDefinition",
            "368fa8cbefd917f618bf1e796ebf0c1b68ef86e1"
        ],
        [
            "Definition pts k v := @UM.pts nat_ordType A nonz k v.",
            "VernacDefinition",
            "93199fd0edab5753ce6d8f214ac9c9d34a32d15a"
        ],
        [
            "Definition from (f : tp) : @UM.base nat_ordType A nonz := f.",
            "VernacDefinition",
            "636913dc6770c545c290f3ff28c60b9f5528bea8"
        ],
        [
            "Definition to (b : @UM.base nat_ordType A nonz) : tp := b.",
            "VernacDefinition",
            "7e776913e621618b62ab83784c200d93f3c46fea"
        ],
        [
            "Lemma ftE b : from (to b) = b.",
            "VernacStartTheoremProof",
            "d0ec89c210aece01e6298d82153fbdfc80434e37"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tfE f : to (from f) = f.",
            "VernacStartTheoremProof",
            "a5994948bbb45c633e82745ef4a7b537896fbc38"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefE : nm_undef = to (@UM.Undef nat_ordType A nonz).",
            "VernacStartTheoremProof",
            "4cf78a1a50730888dcc1efd304d81cf2f1626b8d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defE f : defined f = UM.valid (from f).",
            "VernacStartTheoremProof",
            "88ab554033a552b87edfb02527fab941e515785d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma emptyE : empty = to (@UM.empty nat_ordType A nonz).",
            "VernacStartTheoremProof",
            "74a716dc62a6e5e04bbadf06023db19842b475f4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updE k v f : upd k v f = to (UM.upd k v (from f)).",
            "VernacStartTheoremProof",
            "5bba736bce2fc187a06c9d98c0a5c48a77a61ebc"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domE f : dom f = UM.dom (from f).",
            "VernacStartTheoremProof",
            "c39598874ba7039756c0c2607939ec852334ecdb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_eqE f1 f2 : dom_eq f1 f2 = UM.dom_eq (from f1) (from f2).",
            "VernacStartTheoremProof",
            "be828b2e2ef264bab7b0d74b64490a705adb67ec"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeE k f : free k f = to (UM.free k (from f)).",
            "VernacStartTheoremProof",
            "a7f1442730dc45c339288f88fa39d09b87508a87"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findE k f : find k f = UM.find k (from f).",
            "VernacStartTheoremProof",
            "1bc8952274b1a9331d8cf96eb3c2c016d95bd0f4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unionE f1 f2 : union f1 f2 = to (UM.union (from f1) (from f2)).",
            "VernacStartTheoremProof",
            "f6441f1ee94257ded4629e50fd1d86c2e457bb70"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nmfiltE q f : nm_filter q f = to (UM.um_filter q (from f)).",
            "VernacStartTheoremProof",
            "894b0b876a66973ffdbf9df287884770137cdfc3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbE f : empb f = UM.empb (from f).",
            "VernacStartTheoremProof",
            "86118bf64225c8947f0d91f52c61e91da6d614f3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefbE f : undefb f = UM.undefb (from f).",
            "VernacStartTheoremProof",
            "d5cd615cfaf969e32900c90320bfc258d21adfbc"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptsE k v : pts k v = to (@UM.pts nat_ordType A nonz k v).",
            "VernacStartTheoremProof",
            "95a0ad30b29c4b08d159c40a073bdfc60db6a92c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NMDef.",
            "VernacEndSegment",
            "bc334fee7d77c81beb6b55e17ba0fba413698059"
        ],
        [
            "End NMDef.",
            "VernacEndSegment",
            "bc334fee7d77c81beb6b55e17ba0fba413698059"
        ],
        [
            "Notation natmap := NMDef.tp.",
            "VernacSyntacticDefinition",
            "79e2b8ae90626862fa254e87b5326550d29f42a0"
        ],
        [
            "Definition natmapMixin A := UMCMixin (@NMDef.ftE A) (@NMDef.tfE A) (@NMDef.defE A) (@NMDef.undefE A) (@NMDef.emptyE A) (@NMDef.updE A) (@NMDef.domE A) (@NMDef.dom_eqE A) (@NMDef.freeE A) (@NMDef.findE A) (@NMDef.unionE A) (@NMDef.nmfiltE A) (@NMDef.empbE A) (@NMDef.undefbE A) (@NMDef.ptsE A).",
            "VernacDefinition",
            "d587c17d7309b4b106c5b7ee0ee35d59a4208ba1"
        ],
        [
            "Canonical nat_mapUMC A := Eval hnf in UMC (natmap A) (@natmapMixin A).",
            "VernacDefinition",
            "e8fd110118c3bd97e982db41cc3c9763dccff699"
        ],
        [
            "Definition nat_mapPCMMix A := union_map_classPCMMix (nat_mapUMC A).",
            "VernacDefinition",
            "722567708e16463ecc636ebf1facffe8c1b2bc8d"
        ],
        [
            "Canonical nat_mapPCM A := Eval hnf in PCM (natmap A) (@nat_mapPCMMix A).",
            "VernacDefinition",
            "90aec0fde12be9dbe888bcbe0d4b8676c0490a62"
        ],
        [
            "Definition nat_mapCPCMMix A := union_map_classCPCMMix (nat_mapUMC A).",
            "VernacDefinition",
            "acb287697e8a1b4f8ff8888bf5ae89570043cb3b"
        ],
        [
            "Canonical nat_mapCPCM A := Eval hnf in CPCM (natmap A) (@nat_mapCPCMMix A).",
            "VernacDefinition",
            "77a66d256222d7b70e3eb72c4b600860a36b8bfe"
        ],
        [
            "Definition nat_mapTPCMMix A := union_map_classTPCMMix (nat_mapUMC A).",
            "VernacDefinition",
            "935c6e5d24c3d6493542efa2778c9fd7d274399f"
        ],
        [
            "Canonical nat_mapTPCM A := Eval hnf in TPCM (natmap A) (@nat_mapTPCMMix A).",
            "VernacDefinition",
            "06cfae63069f4088a96bb7910cde727f13011bba"
        ],
        [
            "Definition nat_map_eqMix (A : eqType) := @union_map_class_eqMix nat_ordType A _ _ (@natmapMixin A).",
            "VernacDefinition",
            "5b7359325b06bcb584f015e50c29a209db7fe258"
        ],
        [
            "Canonical nat_map_eqType (A : eqType) := Eval hnf in EqType (natmap A) (@nat_map_eqMix A).",
            "VernacDefinition",
            "b946f4e53577e2aeaff36b031f73d07c0a7c3e91"
        ],
        [
            "Definition nm_pts A (k : nat) (v : A) := @UMC.pts nat_ordType A (@nat_mapUMC A) k v.",
            "VernacDefinition",
            "5900c0755b0da41b3b31e36316fa5eb969d48cb0"
        ],
        [
            "Notation \"x \\-> v\" := (@nm_pts _ x v) (at level 30).",
            "VernacNotation",
            "a02b19bad1674ad6b818299a516945e4df6ff30c"
        ],
        [
            "Lemma nm_dom0 A (h : natmap A) : (h = um_undef \\/ h = Unit) <-> (dom h = [::]).",
            "VernacStartTheoremProof",
            "d63c78fefc8fe8e7fcec177e4aa0840792d34b50"
        ],
        [
            "split=>[|E]; first by case=>->; rewrite ?dom_undef ?dom0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case V : (valid h); last by move/invalidE: (negbT V)=>->; left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (dom0E V) ?E //; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section FreshLastKey.",
            "VernacBeginSection",
            "515d14b0c47f94fe7be47a2eaa5da483997ab76b"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Type h : natmap A.",
            "VernacReserve",
            "9a7f8effa92aabb424925bbd65a4853cfbf23cb6"
        ],
        [
            "Definition last_key h := last 0 (dom h).",
            "VernacDefinition",
            "e3a6da4220cef800e00df7fae1ab2f55bd4640cf"
        ],
        [
            "Definition fresh h := (last_key h).+1.",
            "VernacDefinition",
            "49516147e83b1b3e3c6a354a0918b9c169f4b85c"
        ],
        [
            "Lemma lastkey_undef : last_key um_undef = 0.",
            "VernacStartTheoremProof",
            "29b4b1404bf9228b9404a889e19a4b0a1794c6d2"
        ],
        [
            "by rewrite /last_key !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkey0 : last_key Unit = 0.",
            "VernacStartTheoremProof",
            "e8dc20be49dd9939c9ff0386d1afc96a2e74586f"
        ],
        [
            "by rewrite /last_key /Unit /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkey_dom h : valid h -> last_key h \\notin dom h -> h = Unit.",
            "VernacStartTheoremProof",
            "34e4238bca373e4f7e2f860beb3e62c696aab8cd"
        ],
        [
            "rewrite /valid /= /last_key /Unit /= !umEX /= -{4}[h]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from h)=>//=; case=>s H /= H1 _ /seq_last_in.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite /UM.empty UMC.eqE UM.umapE /supp fmapE /= {H H1}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by elim: s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_lastkey0P h : last_key h = 0 <-> dom h = [::].",
            "VernacStartTheoremProof",
            "b42104760406476903eae2a11f6b86fb4ff1a61e"
        ],
        [
            "rewrite -nm_dom0; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case=>E; subst h; rewrite ?lastkey_undef ?lastkey0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>E; case V : (valid h); last by left; move/invalidE: (negbT V).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right; apply: lastkey_dom=>//; rewrite E.",
            "VernacExtend",
            "aa5d3d3809614a8d5257883779e1164202708f44"
        ],
        [
            "by apply: contraT; rewrite negbK; apply: dom_cond.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_lastkey h : valid h -> ~~ empb h -> last_key h \\in dom h.",
            "VernacStartTheoremProof",
            "923f99d31b0e35005da1ec35e5eb9136df3b5714"
        ],
        [
            "by move=>X; apply: contraR; move/(lastkey_dom X)=>->; apply/empbP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyxx h : valid h -> last_key h = 0 -> h = Unit.",
            "VernacStartTheoremProof",
            "bb7c8b0fed2dd17a94960c64d910bf887c91b3c2"
        ],
        [
            "by move=>V H; apply: lastkey_dom V _; apply/negP=>/dom_cond; rewrite H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_lastkeyE h a : a < last_key h -> last_key h \\in dom h.",
            "VernacStartTheoremProof",
            "0cf4ef13cb3124daaf01627c7428982100030ac1"
        ],
        [
            "move=>H; case V : (valid h); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/invalidE: (negbT V) H=>->; rewrite lastkey_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: dom_lastkey V (contraL _ H)=>/empbE ->; rewrite lastkey0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkey_max h x : x \\in dom h -> x <= last_key h.",
            "VernacStartTheoremProof",
            "62e0952e7ae5f0c9593db102a276cfc5a4d8ccd3"
        ],
        [
            "rewrite /last_key /= !umEX; case: (UMC.from h)=>//; case=>s H _ /=.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "rewrite /supp /ord /= (leq_eqVlt x) orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sorted_last_key_max (sorted_oleq H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_lastkey h x : x \\in dom h -> {in dom h, forall y, y <= x} -> last_key h = x.",
            "VernacStartTheoremProof",
            "ab3c2b63eb23ac857ea64d1891ea9fa3a43ca569"
        ],
        [
            "rewrite /last_key !umEX; case: (UMC.from h)=>//; case=>s H _ /=.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "move=>H1 /= H2; apply: sorted_max_key_last (sorted_oleq H) H1 _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move=>z /(H2 z); rewrite leq_eqVlt orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyPt (x : nat) v : x != 0 -> last_key (x \\-> v) = x.",
            "VernacStartTheoremProof",
            "fce7dbb4b3a305fc81f1daa6d1f352e7dfd7413e"
        ],
        [
            "by rewrite /last_key domPtK /= => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hist_path h : path oleq 0 (dom h).",
            "VernacStartTheoremProof",
            "352e122bace53f4b1105e9a0eb9eb11917b4f987"
        ],
        [
            "rewrite !umEX; case: (UMC.from h)=>// {h} h /= _; case: h; case=>//= x s H.",
            "VernacExtend",
            "50667d214cae8650aa9de6980f2da478db33826d"
        ],
        [
            "rewrite {1}/oleq /ord /= orbC -leq_eqVlt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sub_path H=>z y; rewrite /oleq=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkey_mono h1 h2 : {subset dom h1 <= dom h2} -> last_key h1 <= last_key h2.",
            "VernacStartTheoremProof",
            "2bdfda7712bc526565970bca122502136b90d47a"
        ],
        [
            "by rewrite leq_eqVlt orbC; apply: seq_last_mono; apply: hist_path.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyfUn h1 h2 : valid (h1 \\+ h2) -> last_key h1 <= last_key (h1 \\+ h2).",
            "VernacStartTheoremProof",
            "34c1233d12391c2067ed9f17664ce78c645d685f"
        ],
        [
            "by move=>X; apply: lastkey_mono=>x; rewrite domUn inE X => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyUnf h1 h2 : valid (h1 \\+ h2) -> last_key h2 <= last_key (h1 \\+ h2).",
            "VernacStartTheoremProof",
            "be3a3f60bd4a648ff2df218b5a1a99cf7742d856"
        ],
        [
            "by rewrite joinC; apply: lastkeyfUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyUn_mono h1 h2 t : valid (h1 \\+ h2) -> last_key (h1 \\+ h2) < t -> last_key h1 < t.",
            "VernacStartTheoremProof",
            "e70465c7fb84279afab562da07bd79a6c8698d20"
        ],
        [
            "move=>V; apply/leq_trans/lastkey_mono.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move=>x D; rewrite domUn inE V D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyUn0 h1 h2 : valid (h1 \\+ h2) -> last_key h1 = last_key h2 -> (h1 = Unit) * (h2 = Unit).",
            "VernacStartTheoremProof",
            "4abac0c76f420cf4c782e181aa7c97879330a13a"
        ],
        [
            "move=>V E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case E1: (empb h1).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move/empbE: E1 E V=>->; rewrite unitL lastkey0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case/esym/dom_lastkey0P/nm_dom0=>-> //; rewrite valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case E2: (empb h2).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move/empbE: E2 E V=>->; rewrite unitR lastkey0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case/dom_lastkey0P/nm_dom0=>-> //; rewrite valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: validUn (V)=>// _ _ /(_ _ (dom_lastkey (validL V) (negbT E1))).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite E (dom_lastkey (validR V) (negbT E2)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyUn h1 h2 : last_key (h1 \\+ h2) = if valid (h1 \\+ h2) then maxn (last_key h1) (last_key h2) else 0.",
            "VernacStartTheoremProof",
            "13fbb81f6f75f96d5d371986772490c05ef099d6"
        ],
        [
            "have H k1 k2 : valid (k1 \\+ k2) -> last_key k1 < last_key k2 -> last_key (k1 \\+ k2) = last_key k2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>V H; apply: max_lastkey=>[|x].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite domUn inE V (dom_lastkeyE H) orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domUn inE V; case/orP; move/lastkey_max=>// T; by apply: leq_trans T (ltnW H).",
            "VernacExtend",
            "7eb7a98d5173698ebb4ec721d09a9667ae0fb442"
        ],
        [
            "case V : (valid _); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/invalidE: (negbT V)=>->; rewrite lastkey_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /maxn; case: ltngtP.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite joinC in V *; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/esym/(lastkeyUn0 V)=>E; rewrite !E unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkeyPtUn h t u : valid h -> last_key h < t -> valid (t \\-> u \\+ h).",
            "VernacStartTheoremProof",
            "dc8d2282d1f57ce8de206b6f4acab50f4c1aef82"
        ],
        [
            "move=>V L; rewrite validPtUn; apply/and3P; split=>//=.",
            "VernacExtend",
            "f7e1535beb7276979a5b89bc8a1738146a5562e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -lt0n; apply: leq_ltn_trans L.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: contraL L; move/lastkey_max; case: leqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_ordfresh h x : x \\in dom h -> x < fresh h.",
            "VernacStartTheoremProof",
            "eed166ecec702b5bf21d8d5cc6429c2f998cbcd3"
        ],
        [
            "by move/lastkey_max.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_freshn h n : fresh h + n \\notin dom h.",
            "VernacStartTheoremProof",
            "108613ee544e7549d6a574a426b6a42a180e3840"
        ],
        [
            "by apply: contra (@dom_ordfresh _ _) _; rewrite -leqNgt leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_freshUn h1 h2 : valid h1 -> [pcm h2 <= h1] -> fresh h1 \\notin dom h2.",
            "VernacStartTheoremProof",
            "5965d43c3f9a40bb20d63a79ed3417fbeb2485b5"
        ],
        [
            "move=>V [x E]; rewrite {h1}E in V *; apply: contra (@dom_ordfresh _ _) _.",
            "VernacExtend",
            "0fa388cebe8ed6372154caa26cd10c357f123670"
        ],
        [
            "by rewrite joinC in V *; rewrite -leqNgt; apply: lastkeyUnf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_fresh h : fresh h \\notin dom h.",
            "VernacStartTheoremProof",
            "6b41c50648b6f404f9df216df962287cdd87ef0c"
        ],
        [
            "by move: (dom_freshn h 0); rewrite addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_freshUn h1 h2 v : valid h1 -> [pcm h2 <= h1] -> valid (fresh h1 \\-> v \\+ h2) = valid h2.",
            "VernacStartTheoremProof",
            "68b4840318aae5bedb513742993320536af288cf"
        ],
        [
            "move=>V [x E]; rewrite {h1}E in V *.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite validPtUn dom_freshUn // andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_fresh h v : valid (fresh h \\-> v \\+ h) = valid h.",
            "VernacStartTheoremProof",
            "c1f7acab533086efaf47f951cf406ddf4b670fda"
        ],
        [
            "by rewrite validPtUn dom_fresh andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkey_freshUn h1 h2 v : valid h1 -> [pcm h2 <= h1] -> last_key (fresh h1 \\-> v \\+ h2) = fresh h1.",
            "VernacStartTheoremProof",
            "2ab674135f6eadc2b867dc9fddce5197e25155fb"
        ],
        [
            "move=>V [x E]; rewrite {h1}E in V *.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: max_lastkey=>[|y] /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite domUn inE valid_freshUn // (validL V) domPt inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domUn inE valid_freshUn // (validL V) /= domPt inE /= eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite leq_eqVlt; case: eqP=>//= _ D.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by apply: lastkey_max; rewrite domUn inE V D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastkey_fresh h v : valid h -> last_key (fresh h \\-> v \\+ h) = fresh h.",
            "VernacStartTheoremProof",
            "7a974421e24473921a1fd7bbe4f38cec4d977461"
        ],
        [
            "move=>Vf; apply: max_lastkey=>[|x] /=.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite domUn inE valid_fresh Vf domPt inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domUn inE /= valid_fresh Vf /= domPt inE /= eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite leq_eqVlt; case: eqP=>//= _; apply: dom_ordfresh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_lastkey h1 h2 : valid h2 -> [pcm h1 <= h2] -> last_key h1 <= last_key h2.",
            "VernacStartTheoremProof",
            "944905870bc3bbfa1398a7b73f80ec621d327f40"
        ],
        [
            "by move=>V H; case: H V=>z->V; apply: lastkey_mono=>k D; rewrite domUn inE V D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_indb (P : natmap A -> Prop) : P Unit -> (forall u, P (1 \\-> u)) -> (forall t u h, P h -> last_key h < t -> valid (t \\-> u \\+ h) -> P (t \\-> u \\+ h)) -> forall h, valid h -> P h.",
            "VernacStartTheoremProof",
            "a992692ac26e247e9e9d2388a9f1e32cebd5d790"
        ],
        [
            "move=>H1 H2 H3; elim/um_indb=>//=.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -[valid _]negbK; move/negP/invalidE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k v f H V K _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case E: (empb f); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: H3=>//; first by apply: H (validR V).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: K; apply: contraR (negbT E).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -empbE; apply: lastkey_dom (validR V).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/empbE: {K H} E V=>->; rewrite unitR => V.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: (H3 k v Unit H1); rewrite unitR lastkey0 lt0n.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply=>//; rewrite validPt /= in V.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_indf (P : natmap A -> Prop) : P Unit -> (forall t u h, P h -> (forall x, x \\in dom h -> t < x) -> valid (t \\-> u \\+ h) -> P (t \\-> u \\+ h)) -> forall h, valid h -> P h.",
            "VernacStartTheoremProof",
            "32f247a7b8f789362f3323fbfca55303f6b7e2c1"
        ],
        [
            "move=>H1 H2; elim/um_indf=>//=.",
            "VernacExtend",
            "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -[valid _]negbK; move/negP/invalidE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k v f H V K _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: H2=>//; first by apply: H (validR V).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>x; move/(order_path_min (@ordtype.trans _)): K.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by case: allP=>// X _; apply: X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FreshLastKey.",
            "VernacEndSegment",
            "4ae421f655579cb122e5cc8be66dc0a0a071a4ed"
        ],
        [
            "Section Gapless.",
            "VernacBeginSection",
            "a3c9c8df0de847424f68966517df7cdd8068bc75"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Type h : natmap A.",
            "VernacReserve",
            "9a7f8effa92aabb424925bbd65a4853cfbf23cb6"
        ],
        [
            "Definition gapless h := forall k, 0 < k <= last_key h -> k \\in dom h.",
            "VernacDefinition",
            "f67237b5623bbf3e4c2f60e05264f4f730c90dc8"
        ],
        [
            "Lemma gp_undef : gapless um_undef.",
            "VernacStartTheoremProof",
            "6364a280d388e2a2e142f2c0930ba58123e02994"
        ],
        [
            "by move=>k; rewrite lastkey_undef; case: k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gp0 : gapless Unit.",
            "VernacStartTheoremProof",
            "adbacfe28444866fac51d2503f1918bd0a895e09"
        ],
        [
            "by move=>k; rewrite lastkey0; case: k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gp_fresh h u : gapless (fresh h \\-> u \\+ h) <-> gapless h.",
            "VernacStartTheoremProof",
            "a36c27f30fd1d920aefff7d695ab2eb84d114273"
        ],
        [
            "case V : (valid h); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/invalidE: (negbT V)=>->; rewrite join_undefR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>H k; move: (V); rewrite -(valid_fresh _ u)=>V'; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite lastkey_fresh // domPtUn inE V' /= (leq_eqVlt k) eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: (H k); rewrite -(ltnS k); case: ltngtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(ltnS k) -/(fresh h); case/andP=>Z N.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "move: (H k); rewrite lastkey_fresh // domPtUn inE V' Z /= leq_eqVlt eq_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ltngtP N=>//= _ _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gpPtUn h k u : valid (k \\-> u \\+ h) -> gapless (k \\-> u \\+ h) -> last_key h < k -> k = fresh h.",
            "VernacStartTheoremProof",
            "fc2014a9c69a694c2b08cacfa9ceb54fa06aae57"
        ],
        [
            "move=>V C N; apply/eqP/contraT=>X.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have Y : fresh h < k by rewrite leq_eqVlt eq_sym (negbTE X) in N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff Z : last_key (k \\-> u \\+ h) = k.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (C (fresh h)); rewrite Z (leq_eqVlt _ k) Y orbT andbT => /(_ erefl).",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite domPtUn inE (negbTE X) /=; case/andP=>_ /dom_ordfresh.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: max_lastkey (find_some (findPtUn V)) _ => x.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite domUn inE; case/andP=>_ /orP [].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite domPt inE; case/andP=>_ /eqP ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/lastkey_max/leq_ltn_trans/(_ N)/ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Gapless.",
            "VernacEndSegment",
            "c35fd0188b4da3ad7e31d61f49a6c6a36e8c694d"
        ],
        [
            "Arguments gp_fresh [A][h] u.",
            "VernacArguments",
            "b9a59c8bc30c2d8d5f54dce8496514d19e7b2cfb"
        ],
        [
            "Section AtVal.",
            "VernacBeginSection",
            "bff03701b6f70d930359cdfd15735a1886cbd016"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Type h : natmap (A * A).",
            "VernacReserve",
            "3ed98ba53ae70fc301401181eac2439d1c3719f5"
        ],
        [
            "Definition atval v t h := oapp snd v (find t h).",
            "VernacDefinition",
            "95e6d1052ee9f66bdb479d99e43c4f6e6bb95117"
        ],
        [
            "Lemma umpleq_atval v t h1 h2 : gapless h1 -> valid h2 -> [pcm h1 <= h2] -> t <= last_key h1 -> atval v t h2 = atval v t h1.",
            "VernacStartTheoremProof",
            "778568d06439e493b6ec90680d3096faf0bc4b65"
        ],
        [
            "move=>G V H K; rewrite /atval; case E1 : (find t h1)=>[a|].",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (umpleq_some V H E1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: t K E1 => [|t] K E1; last by move: (G t.+1 K) (find_none E1)=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case E2 : (find 0 h2)=>//; move/find_some/dom_cond: E2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition last_val v h := atval v (last_key h) h.",
            "VernacDefinition",
            "fefb866fbbbfcf84c01a8df9277b4ed9c35d7e89"
        ],
        [
            "Lemma lastval0 v : last_val v Unit = v.",
            "VernacStartTheoremProof",
            "7b48ac644ed6e3939e592a599f77aae3342c14c0"
        ],
        [
            "by rewrite /last_val /atval lastkey0 find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastvalPt v p x : p != 0 -> last_val v (p \\-> x) = x.2.",
            "VernacStartTheoremProof",
            "f1a86ad6d4fd30ca94fd439c30485a2b4bb77b7f"
        ],
        [
            "by move=>V; rewrite /last_val /atval lastkeyPt // findPt /= V.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastval_fresh v x h : valid h -> last_val v (fresh h \\-> x \\+ h) = x.2.",
            "VernacStartTheoremProof",
            "ffee7f3f8f451c04c9aa70e2d5f8bbd9bada037c"
        ],
        [
            "by move=>V; rewrite /last_val /atval lastkey_fresh // findPtUn // valid_fresh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastvalUn v h1 h2 : last_val v (h1 \\+ h2) = if valid (h1 \\+ h2) then if last_key h1 < last_key h2 then last_val v h2 else last_val v h1 else v.",
            "VernacStartTheoremProof",
            "9ffa32d9f6b7f811ae1d1931ce01cba9f2810c06"
        ],
        [
            "rewrite /last_val /atval lastkeyUn maxnC /maxn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ifP; last by move/negbT/invalidE=>->; rewrite find_undef.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ltngtP=>N V.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite findUnR // (dom_lastkeyE N).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite findUnL // (dom_lastkeyE N).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !(lastkeyUn0 V N) unitL lastkey0 find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lastval_freshUn v x h1 h2 : valid h1 -> [pcm h2 <= h1] -> last_val v (fresh h1 \\-> x \\+ h2) = x.2.",
            "VernacStartTheoremProof",
            "db9a4d6eddc91b83cdb47a21b0175d6512d9586f"
        ],
        [
            "move=>V H; rewrite /last_val /atval.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite lastkey_freshUn // findPtUn // valid_freshUn //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: H V=>h -> /validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AtVal.",
            "VernacEndSegment",
            "3bc26fa3cef6c11b6ddee727874a7fe28f4434b4"
        ],
        [
            "Section Continuous.",
            "VernacBeginSection",
            "125ea077ddccafd7ee12faf10bf19338f3cf4704"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Type h : natmap (A * A).",
            "VernacReserve",
            "3ed98ba53ae70fc301401181eac2439d1c3719f5"
        ],
        [
            "Definition continuous v h := forall k x, find k.+1 h = Some x -> oapp snd v (find k h) = x.1.",
            "VernacDefinition",
            "eca1f5f962124af5c981983bcf7feb8a0dd554f8"
        ],
        [
            "Lemma cn_undef v : continuous v um_undef.",
            "VernacStartTheoremProof",
            "68b7093c8158b872b2dac6efbf0fb33a4ec0dfd5"
        ],
        [
            "by move=>x w; rewrite find_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cn0 v : continuous v Unit.",
            "VernacStartTheoremProof",
            "ef6e408b3f22b9586ffc2f0ed68288c45140cee6"
        ],
        [
            "by move=>x w; rewrite find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cn_fresh v h x : valid h -> continuous v (fresh h \\-> x \\+ h) <-> continuous v h /\\ last_val v h = x.1.",
            "VernacStartTheoremProof",
            "eebfb1ce68a909c96b293a2e856d7034ccbe4342"
        ],
        [
            "rewrite -(valid_fresh _ x)=>V; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>C H k y; rewrite !findPtUn2 // eqSS; case: ltngtP=>N.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ltn_eqF; [apply: C | apply: (ltn_trans N _)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/find_some /dom_ordfresh /(ltn_trans N); rewrite ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=><-; rewrite N ltn_eqF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>C; split; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (C (last_key h) x).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite !findPtUn2 // eq_refl ltn_eqF //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k w; case: (ltnP k (last_key h))=>N; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/find_some /dom_ordfresh /(leq_ltn_trans N); rewrite ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move: (C k w); rewrite !findPtUn2 // eqSS !ltn_eqF // (ltn_trans N _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cn_sub v h x y k : valid (k.+1 \\-> (x, y) \\+ h) -> continuous v (k.+1 \\-> (x, y) \\+ h) -> oapp snd v (find k h) = x.",
            "VernacStartTheoremProof",
            "fd22fd428adedc182f6cb94d927eaab788b16260"
        ],
        [
            "by move=>V /(_ k (x, y)); rewrite !findPtUn2 // eq_refl ltn_eqF //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Continuous.",
            "VernacEndSegment",
            "ed620cbf3d6d08cba06ca7d7fe77a68757893ef1"
        ],
        [
            "Arguments cn_fresh [A][v][h][x] _.",
            "VernacArguments",
            "74c819a6cba7dd622afbbfcafde47fbef3ab1542"
        ],
        [
            "Section Complete.",
            "VernacBeginSection",
            "618f5c87580d76567cfdf26c065fb4a894be1b95"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Type h : natmap (A * A).",
            "VernacReserve",
            "3ed98ba53ae70fc301401181eac2439d1c3719f5"
        ],
        [
            "Definition complete v0 h vn := [/\\ valid h, gapless h, continuous v0 h & last_val v0 h = vn].",
            "VernacDefinition",
            "92a99ce3e6294b16cb31d837732b85c6e6daf7d0"
        ],
        [
            "Lemma cm_valid v0 h vn : complete v0 h vn -> valid h.",
            "VernacStartTheoremProof",
            "0248a77a5258f683ec924dd79f6da7d0c987b5f7"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cm0 v : complete v Unit v.",
            "VernacStartTheoremProof",
            "256cba1ccef9fe19f0f007c44e4bc89f3f9b01b9"
        ],
        [
            "by split=>//; [apply: gp0 | apply: cn0 | rewrite lastval0].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cm_fresh v0 vn h x : complete v0 (fresh h \\-> x \\+ h) vn <-> vn = x.2 /\\ complete v0 h x.1.",
            "VernacStartTheoremProof",
            "626dc711b444b816590c3c6a5b3ed712b911a9bc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case=>/validR V /gp_fresh G /(cn_fresh V) []; rewrite lastval_fresh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>-> [V] /(gp_fresh x) G C E; split=>//; by [rewrite valid_fresh | apply/(cn_fresh V) | rewrite lastval_fresh].",
            "VernacExtend",
            "20f993a7a1da4042b2dc7a4ec2173fd01b9243a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmPtUn v0 vn h k x : complete v0 (k \\-> x \\+ h) vn -> last_key h < k -> k = fresh h.",
            "VernacStartTheoremProof",
            "afa9552faed65774fa25581e3ac1aa879fad3bdc"
        ],
        [
            "by case=>V /(gpPtUn V).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmPt v0 vn k x : complete v0 (k \\-> x) vn -> k = 1 /\\ x = (v0, vn).",
            "VernacStartTheoremProof",
            "8b6d93bba711a38d8f8ec680b2184dcd4c615e8d"
        ],
        [
            "case; rewrite validPt; case: k=>//= k _ /(_ 1).",
            "VernacExtend",
            "b29317e6b83ce7a785e0831aa2bbc0653729bb4c"
        ],
        [
            "rewrite lastkeyPt //= domPt inE /= => /(_ (erefl _))/eqP ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move/(_ 0 x); rewrite findPt findPt2 /= => -> //.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite /last_val lastkeyPt // /atval findPt /= => <-; case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmCons v0 vn k x h : complete v0 (k \\-> x \\+ h) vn -> last_key h < k -> [/\\ k = fresh h, vn = x.2 & complete v0 h x.1].",
            "VernacStartTheoremProof",
            "eabe1fffeb63cc06979b3964b0c547a81704b755"
        ],
        [
            "by move=>C H; move: {C} (cmPtUn C H) (C)=>-> /cm_fresh [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Complete.",
            "VernacEndSegment",
            "0a4ba3dd0ad3c00d9559c9c3908c15032790b9c4"
        ],
        [
            "Prenex Implicits cm_valid cmPt.",
            "VernacExtend",
            "fbfe6140fcce0afea022905006ae975eb8c2cb67"
        ]
    ],
    "proofs": [
        {
            "name": "ftE",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tfE",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefE",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defE",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "emptyE",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updE",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domE",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_eqE",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeE",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findE",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unionE",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nmfiltE",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbE",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefbE",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptsE",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nm_dom0",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "split=>[|E]; first by case=>->; rewrite ?dom_undef ?dom0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case V : (valid h); last by move/invalidE: (negbT V)=>->; left.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (dom0E V) ?E //; right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey_undef",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by rewrite /last_key !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey0",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "by rewrite /last_key /Unit /= !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey_dom",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "rewrite /valid /= /last_key /Unit /= !umEX /= -{4}[h]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from h)=>//=; case=>s H /= H1 _ /seq_last_in.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite /UM.empty UMC.eqE UM.umapE /supp fmapE /= {H H1}.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by elim: s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_lastkey0P",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "rewrite -nm_dom0; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case=>E; subst h; rewrite ?lastkey_undef ?lastkey0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>E; case V : (valid h); last by left; move/invalidE: (negbT V).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "right; apply: lastkey_dom=>//; rewrite E.",
                        "VernacExtend",
                        "aa5d3d3809614a8d5257883779e1164202708f44"
                    ]
                },
                {
                    "command": [
                        "by apply: contraT; rewrite negbK; apply: dom_cond.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_lastkey",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by move=>X; apply: contraR; move/(lastkey_dom X)=>->; apply/empbP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkeyxx",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "by move=>V H; apply: lastkey_dom V _; apply/negP=>/dom_cond; rewrite H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_lastkeyE",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "move=>H; case V : (valid h); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/invalidE: (negbT V) H=>->; rewrite lastkey_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: dom_lastkey V (contraL _ H)=>/empbE ->; rewrite lastkey0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey_max",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "rewrite /last_key /= !umEX; case: (UMC.from h)=>//; case=>s H _ /=.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite /supp /ord /= (leq_eqVlt x) orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: sorted_last_key_max (sorted_oleq H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_lastkey",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "rewrite /last_key !umEX; case: (UMC.from h)=>//; case=>s H _ /=.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "move=>H1 /= H2; apply: sorted_max_key_last (sorted_oleq H) H1 _.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by move=>z /(H2 z); rewrite leq_eqVlt orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkeyPt",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "by rewrite /last_key domPtK /= => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hist_path",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX; case: (UMC.from h)=>// {h} h /= _; case: h; case=>//= x s H.",
                        "VernacExtend",
                        "50667d214cae8650aa9de6980f2da478db33826d"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}/oleq /ord /= orbC -leq_eqVlt /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: sub_path H=>z y; rewrite /oleq=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey_mono",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "by rewrite leq_eqVlt orbC; apply: seq_last_mono; apply: hist_path.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkeyfUn",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "by move=>X; apply: lastkey_mono=>x; rewrite domUn inE X => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkeyUnf",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: lastkeyfUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkeyUn0",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "move=>V E.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case E1: (empb h1).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move/empbE: E1 E V=>->; rewrite unitL lastkey0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case/esym/dom_lastkey0P/nm_dom0=>-> //; rewrite valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case E2: (empb h2).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move/empbE: E2 E V=>->; rewrite unitR lastkey0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case/dom_lastkey0P/nm_dom0=>-> //; rewrite valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: validUn (V)=>// _ _ /(_ _ (dom_lastkey (validL V) (negbT E1))).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite E (dom_lastkey (validR V) (negbT E2)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkeyPtUn",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "move=>V L; rewrite validPtUn; apply/and3P; split=>//=.",
                        "VernacExtend",
                        "f7e1535beb7276979a5b89bc8a1738146a5562e1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -lt0n; apply: leq_ltn_trans L.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: contraL L; move/lastkey_max; case: leqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_ordfresh",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "by move/lastkey_max.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_freshn",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "by apply: contra (@dom_ordfresh _ _) _; rewrite -leqNgt leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_fresh",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "by move: (dom_freshn h 0); rewrite addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_freshUn",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "move=>V [x E]; rewrite {h1}E in V *.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite validPtUn dom_freshUn // andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_fresh",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "by rewrite validPtUn dom_fresh andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey_freshUn",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "move=>V [x E]; rewrite {h1}E in V *.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply: max_lastkey=>[|y] /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite domUn inE valid_freshUn // (validL V) domPt inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite domUn inE valid_freshUn // (validL V) /= domPt inE /= eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt; case: eqP=>//= _ D.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by apply: lastkey_max; rewrite domUn inE V D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastkey_fresh",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "move=>Vf; apply: max_lastkey=>[|x] /=.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite domUn inE valid_fresh Vf domPt inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite domUn inE /= valid_fresh Vf /= domPt inE /= eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_eqVlt; case: eqP=>//= _; apply: dom_ordfresh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_lastkey",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "by move=>V H; case: H V=>z->V; apply: lastkey_mono=>k D; rewrite domUn inE V D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_indf",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2; elim/um_indf=>//=.",
                        "VernacExtend",
                        "06880003f1108b2eb418688c7bc6bf1013cf0e4c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[valid _]negbK; move/negP/invalidE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>k v f H V K _.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: H2=>//; first by apply: H (validR V).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>x; move/(order_path_min (@ordtype.trans _)): K.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by case: allP=>// X _; apply: X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gp_undef",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "by move=>k; rewrite lastkey_undef; case: k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gp0",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "by move=>k; rewrite lastkey0; case: k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gp_fresh",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "case V : (valid h); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/invalidE: (negbT V)=>->; rewrite join_undefR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>H k; move: (V); rewrite -(valid_fresh _ u)=>V'; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite lastkey_fresh // domPtUn inE V' /= (leq_eqVlt k) eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: (H k); rewrite -(ltnS k); case: ltngtP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -(ltnS k) -/(fresh h); case/andP=>Z N.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "move: (H k); rewrite lastkey_fresh // domPtUn inE V' Z /= leq_eqVlt eq_sym.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ltngtP N=>//= _ _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gpPtUn",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "move=>V C N; apply/eqP/contraT=>X.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "have Y : fresh h < k by rewrite leq_eqVlt eq_sym (negbTE X) in N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suff Z : last_key (k \\-> u \\+ h) = k.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (C (fresh h)); rewrite Z (leq_eqVlt _ k) Y orbT andbT => /(_ erefl).",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite domPtUn inE (negbTE X) /=; case/andP=>_ /dom_ordfresh.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: max_lastkey (find_some (findPtUn V)) _ => x.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite domUn inE; case/andP=>_ /orP [].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite domPt inE; case/andP=>_ /eqP ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/lastkey_max/leq_ltn_trans/(_ N)/ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_atval",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "move=>G V H K; rewrite /atval; case E1 : (find t h1)=>[a|].",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (umpleq_some V H E1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: t K E1 => [|t] K E1; last by move: (G t.+1 K) (find_none E1)=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case E2 : (find 0 h2)=>//; move/find_some/dom_cond: E2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastval0",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "by rewrite /last_val /atval lastkey0 find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastvalPt",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "by move=>V; rewrite /last_val /atval lastkeyPt // findPt /= V.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastval_fresh",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "by move=>V; rewrite /last_val /atval lastkey_fresh // findPtUn // valid_fresh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastvalUn",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "rewrite /last_val /atval lastkeyUn maxnC /maxn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: ifP; last by move/negbT/invalidE=>->; rewrite find_undef.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ltngtP=>N V.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite findUnR // (dom_lastkeyE N).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite findUnL // (dom_lastkeyE N).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(lastkeyUn0 V N) unitL lastkey0 find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lastval_freshUn",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "move=>V H; rewrite /last_val /atval.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite lastkey_freshUn // findPtUn // valid_freshUn //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: H V=>h -> /validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cn_undef",
            "line_nb": 374,
            "steps": [
                {
                    "command": [
                        "by move=>x w; rewrite find_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cn0",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "by move=>x w; rewrite find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cn_fresh",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "rewrite -(valid_fresh _ x)=>V; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case=>C H k y; rewrite !findPtUn2 // eqSS; case: ltngtP=>N.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_eqF; [apply: C | apply: (ltn_trans N _)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/find_some /dom_ordfresh /(ltn_trans N); rewrite ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case=><-; rewrite N ltn_eqF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>C; split; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (C (last_key h) x).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite !findPtUn2 // eq_refl ltn_eqF //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>k w; case: (ltnP k (last_key h))=>N; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/find_some /dom_ordfresh /(leq_ltn_trans N); rewrite ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move: (C k w); rewrite !findPtUn2 // eqSS !ltn_eqF // (ltn_trans N _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cn_sub",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "by move=>V /(_ k (x, y)); rewrite !findPtUn2 // eq_refl ltn_eqF //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cm_valid",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cm0",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "by split=>//; [apply: gp0 | apply: cn0 | rewrite lastval0].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cm_fresh",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case=>/validR V /gp_fresh G /(cn_fresh V) []; rewrite lastval_fresh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case=>-> [V] /(gp_fresh x) G C E; split=>//; by [rewrite valid_fresh | apply/(cn_fresh V) | rewrite lastval_fresh].",
                        "VernacExtend",
                        "20f993a7a1da4042b2dc7a4ec2173fd01b9243a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmPtUn",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "by case=>V /(gpPtUn V).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmPt",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "case; rewrite validPt; case: k=>//= k _ /(_ 1).",
                        "VernacExtend",
                        "b29317e6b83ce7a785e0831aa2bbc0653729bb4c"
                    ]
                },
                {
                    "command": [
                        "rewrite lastkeyPt //= domPt inE /= => /(_ (erefl _))/eqP ->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move/(_ 0 x); rewrite findPt findPt2 /= => -> //.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite /last_val lastkeyPt // /atval findPt /= => <-; case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmCons",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "by move=>C H; move: {C} (cmPtUn C H) (C)=>-> /cm_fresh [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}