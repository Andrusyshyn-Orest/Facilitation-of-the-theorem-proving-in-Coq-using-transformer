{
    "filename": "pcm/pcm.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat bigop.",
            "VernacRequire",
            "f5fd3a2af6feb8576cf5a50711c13b0367de0ac4"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Delimit Scope pcm_scope with pcm.",
            "VernacDelimiters",
            "2a6b07e26f1090d1a12a8d23e1b711d20159b123"
        ],
        [
            "Open Scope pcm_scope.",
            "VernacOpenCloseScope",
            "b1669e02d99833bb57d77ed6e68b081059a1d98e"
        ],
        [
            "Module PCM.",
            "VernacDefineModule",
            "daab486a304c47ae732cb5585842b52f3633a459"
        ],
        [
            "Record mixin_of (T : Type) := Mixin { valid_op : T -> bool; join_op : T -> T -> T; unit_op : T; _ : commutative join_op; _ : associative join_op; _ : left_id unit_op join_op; _ : forall x y, valid_op (join_op x y) -> valid_op x; _ : valid_op unit_op}.",
            "VernacInductive",
            "77cab57a1a87734a3ab095643cc6ff884a0c4d56"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Notation class_of := mixin_of (only parsing).",
            "VernacSyntacticDefinition",
            "7196b196bbc3a41e5ce702c5c8b4974fd7174202"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort}.",
            "VernacInductive",
            "fe005e9e42bd7759257d63deeda273f09f6fd17d"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Definition pack c := @Pack T c.",
            "VernacDefinition",
            "df423946029ab5f9a8dac00ac149f11d9867d225"
        ],
        [
            "Definition clone := fun c & cT -> T & phant_id (pack c) cT => pack c.",
            "VernacDefinition",
            "3491fcfe2ed605c5bad8755c02a8788916895b4c"
        ],
        [
            "Definition valid := valid_op class.",
            "VernacDefinition",
            "a11042fbf23caaf7ca751b3ab03820da1939bf27"
        ],
        [
            "Definition join := join_op class.",
            "VernacDefinition",
            "3d0781e41e51e14da0347b396833fc964f9adf11"
        ],
        [
            "Definition unit := unit_op class.",
            "VernacDefinition",
            "afddd9988eabd4e1fed27377f45beccbee088a14"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Arguments unit [cT].",
            "VernacArguments",
            "b84973d92604f1b870c56c1b761629eadad2e1fe"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Notation pcm := type.",
            "VernacSyntacticDefinition",
            "e28646372e8bfd277bf26a910e61f825b813a56b"
        ],
        [
            "Notation PCMMixin := Mixin.",
            "VernacSyntacticDefinition",
            "cc63289c189ed74887ae21caf4ecee9057daca82"
        ],
        [
            "Notation PCM T m := (@pack T m).",
            "VernacSyntacticDefinition",
            "287bb7c522552b09e72d655a118359fd2fc29759"
        ],
        [
            "Notation \"[ 'pcmMixin' 'of' T ]\" := (class _ : mixin_of T) (at level 0, format \"[ 'pcmMixin' 'of' T ]\") : pcm_scope.",
            "VernacNotation",
            "22d5e6085401ef0cae7cee6a3054cc2a9d19df5e"
        ],
        [
            "Notation \"[ 'pcm' 'of' T 'for' C ]\" := (@clone T C _ idfun id) (at level 0, format \"[ 'pcm' 'of' T 'for' C ]\") : pcm_scope.",
            "VernacNotation",
            "364f3a59bd1e2cd4b20ad052e93649a5c09944b5"
        ],
        [
            "Notation \"[ 'pcm' 'of' T ]\" := (@clone T _ _ id id) (at level 0, format \"[ 'pcm' 'of' T ]\") : pcm_scope.",
            "VernacNotation",
            "c448924b44c2d78cad339cbbce346ab2dfb45315"
        ],
        [
            "Notation \"x \\+ y\" := (join x y) (at level 43, left associativity) : pcm_scope.",
            "VernacNotation",
            "9b43b0d154a2ecb3c6a6bdd980a2833fbe951f33"
        ],
        [
            "Notation valid := valid.",
            "VernacSyntacticDefinition",
            "0e4e4250a5420551c4c13b9e9eace3cee7e88d0e"
        ],
        [
            "Notation Unit := unit.",
            "VernacSyntacticDefinition",
            "70e7476350f52a2be3bface0ac96f1c4eabf8793"
        ],
        [
            "Arguments unit [cT].",
            "VernacArguments",
            "b84973d92604f1b870c56c1b761629eadad2e1fe"
        ],
        [
            "Prenex Implicits valid join unit.",
            "VernacExtend",
            "e0563d0e075bee27ff5e2142bae27c6cfad8c4c7"
        ],
        [
            "Section Laws.",
            "VernacBeginSection",
            "695f613bd16932bed2a643f528019e75b089836e"
        ],
        [
            "Variable U V : pcm.",
            "VernacAssumption",
            "4f3ff39860871c579aeb077994bfedd8e8bf6d0a"
        ],
        [
            "Lemma joinC (x y : U) : x \\+ y = y \\+ x.",
            "VernacStartTheoremProof",
            "3cd4f76d69dea60d1eb3092a4131f983e4a686af"
        ],
        [
            "by case: U x y=>tp [v j z Cj *]; apply: Cj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinA (x y z : U) : x \\+ (y \\+ z) = x \\+ y \\+ z.",
            "VernacStartTheoremProof",
            "84a9703d31396062ac8c6dc15f1ae053ed82752d"
        ],
        [
            "by case: U x y z=>tp [v j z Cj Aj *]; apply: Aj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinAC (x y z : U) : x \\+ y \\+ z = x \\+ z \\+ y.",
            "VernacStartTheoremProof",
            "6d987cb23f50ebb3f8f56f2454263a092b7f6b28"
        ],
        [
            "by rewrite -joinA (joinC y) joinA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinCA (x y z : U) : x \\+ (y \\+ z) = y \\+ (x \\+ z).",
            "VernacStartTheoremProof",
            "d06b2c48c066c74e70012b443f1e8c2f7c69cd4f"
        ],
        [
            "by rewrite joinA (joinC x) -joinA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validL (x y : U) : valid (x \\+ y) -> valid x.",
            "VernacStartTheoremProof",
            "48d9524452271111e8c24783208010d0239db48d"
        ],
        [
            "case: U x y=>tp [v j z Cj Aj Uj /= Mj inv f ?]; apply: Mj.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validR (x y : U) : valid (x \\+ y) -> valid y.",
            "VernacStartTheoremProof",
            "6ccddeda2bd83a4a3d7a8b70d9202ca2ad937207"
        ],
        [
            "by rewrite joinC; apply: validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validE (x y : U) : valid (x \\+ y) -> valid x * valid y.",
            "VernacStartTheoremProof",
            "58cc0bdf56eab44326feeaa08df3aa5722b3ec06"
        ],
        [
            "by move=>X; rewrite (validL X) (validR X).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitL (x : U) : Unit \\+ x = x.",
            "VernacStartTheoremProof",
            "10f4271d0c56b4b104474cab9d6d09759a01ce87"
        ],
        [
            "by case: U x=>tp [v j z Cj Aj Uj *]; apply: Uj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitR (x : U) : x \\+ Unit = x.",
            "VernacStartTheoremProof",
            "e8d34ea471dcf544f93d6d85a8ee4eb935773f1e"
        ],
        [
            "by rewrite joinC unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_unit : valid (@Unit U).",
            "VernacStartTheoremProof",
            "e1daaf15c1cfe6460ed2741b167e4eb3c7482aea"
        ],
        [
            "by case: U=>tp [v j z Cj Aj Uj Vm Vu *].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validAR (x y z : U) : valid (x \\+ y \\+ z) -> valid (y \\+ z).",
            "VernacStartTheoremProof",
            "69eadd05b6c7e04e226c2e43ddbcf7f8f7b4f919"
        ],
        [
            "by rewrite -joinA; apply: validR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validAL (x y z : U) : valid (x \\+ (y \\+ z)) -> valid (x \\+ y).",
            "VernacStartTheoremProof",
            "2e1d88bc6218a2e94ef2323de003a259c9946a07"
        ],
        [
            "by rewrite joinA; apply: validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Laws.",
            "VernacEndSegment",
            "891cb0b804f063d0ebb562c31c62229ffa9a25d3"
        ],
        [
            "Hint Resolve valid_unit : core.",
            "VernacHints",
            "41a90974df58ef6794b90885b78059071642b488"
        ],
        [
            "Section UnfoldingRules.",
            "VernacBeginSection",
            "48bfd40d913c9d2cda7bb8310df4ee17964e07cd"
        ],
        [
            "Variable U : pcm.",
            "VernacAssumption",
            "a42f4a802b3c9db9daae0da0ebcf031b282c46e2"
        ],
        [
            "Lemma pcm_joinE (x y : U) : x \\+ y = join_op (class U) x y.",
            "VernacStartTheoremProof",
            "87badc960f3925d30f872f7ba2b6efdf412dca0c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcm_validE (x : U) : valid x = valid_op (class U) x.",
            "VernacStartTheoremProof",
            "071d8e63e2447125343852f8f9f4abaf05e1271f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcm_unitE : unit = unit_op (class U).",
            "VernacStartTheoremProof",
            "f9f2f4a36885d0a80cd7b2177dc535235c89330f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pcmE := (pcm_joinE, pcm_validE, pcm_unitE).",
            "VernacDefinition",
            "417c3294bc028a43f473f342621130d87052c83b"
        ],
        [
            "Definition pull (x y : U) := (joinC y x, joinCA y x).",
            "VernacDefinition",
            "a99a92c6f36c304ac2e70a25a52404cf44021155"
        ],
        [
            "End UnfoldingRules.",
            "VernacEndSegment",
            "b342b63bae8e3446b7278884f14b8ecd9f7aa0ee"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End PCM.",
            "VernacEndSegment",
            "9950930d97e0c2972d1fe0485a1c356c15728115"
        ],
        [
            "Export PCM.Exports.",
            "VernacImport",
            "0f179adc94d5d9eaf8e3ac396bc7bc2cbb15cf43"
        ],
        [
            "Definition precise (U : pcm) (P : U -> Prop) := forall s1 s2 t1 t2, valid (s1 \\+ t1) -> P s1 -> P s2 -> s1 \\+ t1 = s2 \\+ t2 -> s1 = s2.",
            "VernacDefinition",
            "635af871b7496c309556af64379d6141855a7509"
        ],
        [
            "Module CancellativePCM.",
            "VernacDefineModule",
            "3c75dcfa2c06deefca148c79ee4cc74021bde9fd"
        ],
        [
            "Variant mixin_of (U : pcm) := Mixin of forall x1 x2 x : U, valid (x1 \\+ x) -> x1 \\+ x = x2 \\+ x -> x1 = x2.",
            "VernacInductive",
            "1fa89f5636f055e3dad2c0447dd8936bf91067e3"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of (U : Type) := Class { base : PCM.mixin_of U; mixin : mixin_of (PCM.Pack base)}.",
            "VernacInductive",
            "0f220862d5a1d7f95d60a71d50e25aa836b9bed7"
        ],
        [
            "Local Coercion base : class_of >-> PCM.mixin_of.",
            "VernacCoercion",
            "8f0f4f43295949c5afea5a26850e7e9d057ae6f2"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort}.",
            "VernacInductive",
            "fe005e9e42bd7759257d63deeda273f09f6fd17d"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b0 (m0 : mixin_of (PCM.Pack b0)) := fun m & phant_id m0 m => Pack (@Class T b0 m).",
            "VernacDefinition",
            "be11d70d96591237d78614c200d1b602b1ad9ab3"
        ],
        [
            "Definition pcm := PCM.Pack class.",
            "VernacDefinition",
            "7c5b8067573f36935338db4939bb55d0236f535a"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> PCM.mixin_of.",
            "VernacCoercion",
            "b353d892e8a1fb84f9f73e167a5ed9010135f114"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Coercion pcm : type >-> PCM.type.",
            "VernacCoercion",
            "c163d5ce613bdb0d6128eace5f3712d1dac8e5de"
        ],
        [
            "Canonical Structure pcm.",
            "VernacCanonical",
            "50141649e1aed7cf4ec2a3aadc64b73bad7c1983"
        ],
        [
            "Notation cpcm := type.",
            "VernacSyntacticDefinition",
            "9251285d57aa916a3a3d482bff982aa4f7417db7"
        ],
        [
            "Notation CPCMMixin := Mixin.",
            "VernacSyntacticDefinition",
            "794bf9c792cefa5e76e1de42052af5e401e1cbdc"
        ],
        [
            "Notation CPCM T m := (@pack T _ _ m id).",
            "VernacSyntacticDefinition",
            "cea179883465b4885089d4a4fbc2818b8aada6ae"
        ],
        [
            "Notation \"[ 'cpcm' 'of' T 'for' cT ]\" := (@clone T cT _ id) (at level 0, format \"[ 'cpcm' 'of' T 'for' cT ]\") : pcm_scope.",
            "VernacNotation",
            "656bfcba081d4196d96b77cb16d3c4b4fc10987d"
        ],
        [
            "Notation \"[ 'cpcm' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'cpcm' 'of' T ]\") : pcm_scope.",
            "VernacNotation",
            "9ae079420014aa58fa5f8a6e544748c0c16108ea"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variable U : cpcm.",
            "VernacAssumption",
            "e290a0aab8beb1590b33b06aff0cc896ae0185a1"
        ],
        [
            "Lemma joinKx (x1 x2 x : U) : valid (x1 \\+ x) -> x1 \\+ x = x2 \\+ x -> x1 = x2.",
            "VernacStartTheoremProof",
            "4e6ed07fc460536430516d703f6450cfcef2d33e"
        ],
        [
            "by case: U x1 x2 x=>V [b][K] T; apply: K.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinxK (x x1 x2 : U) : valid (x \\+ x1) -> x \\+ x1 = x \\+ x2 -> x1 = x2.",
            "VernacStartTheoremProof",
            "963679446386b8f3721707b361d11c5efa17950e"
        ],
        [
            "by rewrite !(joinC x); apply: joinKx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancPL (P : U -> Prop) s1 s2 t1 t2 : precise P -> valid (s1 \\+ t1) -> P s1 -> P s2 -> s1 \\+ t1 = s2 \\+ t2 -> (s1 = s2) * (t1 = t2).",
            "VernacStartTheoremProof",
            "202369c9321e55b7a3512f765e7d254113aa35d5"
        ],
        [
            "move=>H V H1 H2 E; move: (H _ _ _ _ V H1 H2 E)=>X.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by rewrite -X in E *; rewrite (joinxK V E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancPR (P : U -> Prop) s1 s2 t1 t2 : precise P -> valid (s1 \\+ t1) -> P t1 -> P t2 -> s1 \\+ t1 = s2 \\+ t2 -> (s1 = s2) * (t1 = t2).",
            "VernacStartTheoremProof",
            "f6fba037aeeb12464116aee9b26a19a0b2640dab"
        ],
        [
            "move=>H V H1 H2 E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (joinC s1) (joinC s2) in E V.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !(cancPL H V H1 H2 E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End CancellativePCM.",
            "VernacEndSegment",
            "ce5734514d7dfe5a3044f93c4facaca388001795"
        ],
        [
            "Export CancellativePCM.Exports.",
            "VernacImport",
            "5a942e08d9ceb24333d38fa7d09abcc02864a492"
        ],
        [
            "Module TPCM.",
            "VernacDefineModule",
            "a738b8ede08e1f5ffd3d9f2a621b9bf1c1784d32"
        ],
        [
            "Record mixin_of (U : pcm) := Mixin { undef_op : U; unitb_op : U -> bool; _ : forall x, reflect (x = Unit) (unitb_op x); _ : forall x y : U, x \\+ y = Unit -> x = Unit /\\ y = Unit; _ : ~~ valid undef_op; _ : forall x, undef_op \\+ x = undef_op}.",
            "VernacInductive",
            "4f02260e033756019c99b4716b1497a041c1bd23"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Record class_of (U : Type) := Class { base : PCM.mixin_of U; mixin : mixin_of (PCM.Pack base)}.",
            "VernacInductive",
            "0f220862d5a1d7f95d60a71d50e25aa836b9bed7"
        ],
        [
            "Local Coercion base : class_of >-> PCM.mixin_of.",
            "VernacCoercion",
            "8f0f4f43295949c5afea5a26850e7e9d057ae6f2"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort}.",
            "VernacInductive",
            "fe005e9e42bd7759257d63deeda273f09f6fd17d"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack b0 (m0 : mixin_of (PCM.Pack b0)) := fun m & phant_id m0 m => Pack (@Class T b0 m).",
            "VernacDefinition",
            "be11d70d96591237d78614c200d1b602b1ad9ab3"
        ],
        [
            "Definition pcm := PCM.Pack class.",
            "VernacDefinition",
            "7c5b8067573f36935338db4939bb55d0236f535a"
        ],
        [
            "Definition unitb := unitb_op (mixin class).",
            "VernacDefinition",
            "8db1885be13c83e94405080e39cc3083fcdc64bb"
        ],
        [
            "Definition undef : pcm := undef_op (mixin class).",
            "VernacDefinition",
            "8e1cbfefb0906a7b5f53785b5b0ccf1ce0048e3d"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion base : class_of >-> PCM.mixin_of.",
            "VernacCoercion",
            "b353d892e8a1fb84f9f73e167a5ed9010135f114"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Coercion pcm : type >-> PCM.type.",
            "VernacCoercion",
            "c163d5ce613bdb0d6128eace5f3712d1dac8e5de"
        ],
        [
            "Canonical Structure pcm.",
            "VernacCanonical",
            "50141649e1aed7cf4ec2a3aadc64b73bad7c1983"
        ],
        [
            "Notation tpcm := type.",
            "VernacSyntacticDefinition",
            "5b38e5158df4325d5817f9e58a9e829ad546653c"
        ],
        [
            "Notation TPCMMixin := Mixin.",
            "VernacSyntacticDefinition",
            "ae3d9855c6a88eceac542ec28abc35d89b5e0e5e"
        ],
        [
            "Notation TPCM T m := (@pack T _ _ m id).",
            "VernacSyntacticDefinition",
            "cbc53530ad2dda305abe625ae40737e9dfe4fa94"
        ],
        [
            "Notation \"[ 'tpcm' 'of' T 'for' cT ]\" := (@clone T cT _ id) (at level 0, format \"[ 'tpcm' 'of' T 'for' cT ]\") : pcm_scope.",
            "VernacNotation",
            "ad481f292be45fd683cdcb308554681e1fd93c66"
        ],
        [
            "Notation \"[ 'tpcm' 'of' T ]\" := (@clone T _ _ id) (at level 0, format \"[ 'tpcm' 'of' T ]\") : pcm_scope.",
            "VernacNotation",
            "40e149d35edf7df7809b307a26514ca3a86a0bcb"
        ],
        [
            "Notation undef := undef.",
            "VernacSyntacticDefinition",
            "2e5c769f38fcfc0407cd624f329f943e1c9dee43"
        ],
        [
            "Notation unitb := unitb.",
            "VernacSyntacticDefinition",
            "5a6138fd9b9af2c8700ab5a434f123db11e3a206"
        ],
        [
            "Arguments undef [cT].",
            "VernacArguments",
            "423a6fdf37e033b38c930d7341d36457d152ec0a"
        ],
        [
            "Prenex Implicits undef.",
            "VernacExtend",
            "996c01d14010b933ca6c817ecbb04b4f8595dd57"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variable U : tpcm.",
            "VernacAssumption",
            "2f78b2ce0249c377a75b329b72dcc85031a1598a"
        ],
        [
            "Lemma unitbP (x : U) : reflect (x = Unit) (unitb x).",
            "VernacStartTheoremProof",
            "40209d85f148d3d11472420a3d2d42bc0e96fc2e"
        ],
        [
            "by case: U x=>V [b][u].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitbE : unitb (Unit : U).",
            "VernacStartTheoremProof",
            "189e93d89a4ca5fc7437fab37cf0da33b1187031"
        ],
        [
            "by case: unitbP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinE0 (x y : U) : x \\+ y = Unit <-> (x = Unit) * (y = Unit).",
            "VernacStartTheoremProof",
            "70986cf3676b55ee50cc3b230e5e4452530fd79f"
        ],
        [
            "case: U x y=>V [b][u1 u2] H1 H2 H3 T x y; split; first by apply: H2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>->->; rewrite unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_undefN : ~~ valid (@undef U).",
            "VernacStartTheoremProof",
            "11df4cadc85b4470d03465831067566546f139f3"
        ],
        [
            "by case: U=>V [b][u].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_undef : valid (@undef U) = false.",
            "VernacStartTheoremProof",
            "e05a388293d8ea2abe652ef14fc50aad448e1004"
        ],
        [
            "by rewrite (negbTE valid_undefN).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undef_join (x : U) : undef \\+ x = undef.",
            "VernacStartTheoremProof",
            "f1b84b362e6f9a8228ef9c2f180dd5bddf4bf1c5"
        ],
        [
            "by case: U x=>V [b][u].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_undef (x : U) : x \\+ undef = undef.",
            "VernacStartTheoremProof",
            "b0269163953e80e617017343bf9127f3fe30172e"
        ],
        [
            "by rewrite joinC undef_join.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undef0 : (undef : U) <> (Unit : U).",
            "VernacStartTheoremProof",
            "756c2ea9240c04b5f4cf331bb5d193ffc190fcf6"
        ],
        [
            "by move=>E; move: (@valid_unit U); rewrite -E valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition undefE := (undef_join, join_undef, valid_undef).",
            "VernacDefinition",
            "ca44f34f4d71644e5189c68b7d5889c11cd128ff"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End TPCM.",
            "VernacEndSegment",
            "14a62d2ac8d6d3195ec2de4251914fb7e53310e5"
        ],
        [
            "Export TPCM.Exports.",
            "VernacImport",
            "b0b69162aceb53b362afcc041130f124eb340cf5"
        ],
        [
            "Canonical pcm_monoid (U : pcm) := Monoid.Law (@joinA U) (@unitL U) (@unitR U).",
            "VernacDefinition",
            "36b66e694de1e6c7a72e4a738324675c59b87318"
        ],
        [
            "Canonical pcm_comoid (U : pcm) := Monoid.ComLaw (@joinC U).",
            "VernacDefinition",
            "96bac9138804140efd5d8a8bf3fe614c6facfaab"
        ],
        [
            "Section BigPartialMorph.",
            "VernacBeginSection",
            "63b9c07f203de0eb0c6b76affbbb506ec4322ec8"
        ],
        [
            "Variables (R1 : Type) (R2 : pcm) (K : R1 -> R2 -> Type) (f : R2 -> R1).",
            "VernacAssumption",
            "245f3f43ad3b62fe826e7e7fd375ae017115eaf6"
        ],
        [
            "Variables (id1 : R1) (op1 : R1 -> R1 -> R1).",
            "VernacAssumption",
            "8ed829c3aaaa58644eb4124e7ba264f89550157d"
        ],
        [
            "Hypotheses (f_op : forall x y : R2, valid (x \\+ y) -> f (x \\+ y) = op1 (f x) (f y)) (f_id : f Unit = id1).",
            "VernacAssumption",
            "ad05e5a3d5e99f86b3d22cb8869d80c3372aeeac"
        ],
        [
            "Lemma big_pmorph I r (P : pred I) F : valid (\\big[PCM.join/Unit]_(i <- r | P i) F i) -> f (\\big[PCM.join/Unit]_(i <- r | P i) F i) = \\big[op1/id1]_(i <- r | P i) f (F i).",
            "VernacStartTheoremProof",
            "edc45b27e1cac5bde10f6aa3c203542d724fc524"
        ],
        [
            "rewrite unlock; elim: r=>[|x r IH] //=; case: ifP=>// H V.",
            "VernacExtend",
            "c0b074c32d3020d4f7e308c6e5e6ef1e38705074"
        ],
        [
            "by rewrite f_op // IH //; apply: validR V.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BigPartialMorph.",
            "VernacEndSegment",
            "8d9e3d7fd0ac9b290a965b43229771ac929b3d86"
        ],
        [
            "Definition natPCMMix := PCMMixin addnC addnA add0n (fun x y => @id true) (erefl _).",
            "VernacDefinition",
            "e969a943a60a029c357b88f38c9bd417f1b817e2"
        ],
        [
            "Canonical natPCM := Eval hnf in PCM nat natPCMMix.",
            "VernacDefinition",
            "708f364c42f7ffbc968aacc01123c5f3e2c172b0"
        ],
        [
            "Definition multPCMMix := PCMMixin mulnC mulnA mul1n (fun x y => @id true) (erefl _).",
            "VernacDefinition",
            "7308ea52e26d5fe910319aff6ce01fba07840950"
        ],
        [
            "Definition multPCM := Eval hnf in PCM nat multPCMMix.",
            "VernacDefinition",
            "d7311e3aa2370f0802ae4b1a44ed97e48eca4ce4"
        ],
        [
            "Definition maxPCMMix := PCMMixin maxnC maxnA max0n (fun x y => @id true) (erefl _).",
            "VernacDefinition",
            "6d5ea2c37e36a77ad366c6e54e9570c7051129c0"
        ],
        [
            "Definition maxPCM := Eval hnf in PCM nat maxPCMMix.",
            "VernacDefinition",
            "67d30b5f5f193e4ba3a50dc102b838ff8a682e6c"
        ],
        [
            "Definition bool_orPCMMix := PCMMixin orbC orbA orFb (fun x y => @id true) (erefl _).",
            "VernacDefinition",
            "b629f7c671edfc1ae1a56435eb3be9b3a4abdde1"
        ],
        [
            "Definition bool_orPCM := Eval hnf in PCM bool bool_orPCMMix.",
            "VernacDefinition",
            "dda24debeded697b1ce6f7ad3677c52046ec0e66"
        ],
        [
            "Module ProdPCM.",
            "VernacDefineModule",
            "5809ece11ecf860dc202be46391aea4e136f2b09"
        ],
        [
            "Section ProdPCM.",
            "VernacBeginSection",
            "09e224491eb1aa6a2e6e6687d2bf1ecd18a91196"
        ],
        [
            "Variables (U V : pcm).",
            "VernacAssumption",
            "4f3ff39860871c579aeb077994bfedd8e8bf6d0a"
        ],
        [
            "Local Notation tp := (U * V)%type.",
            "VernacSyntacticDefinition",
            "e4092f59b024eb9cb6d5c54f9866a60c800c9d15"
        ],
        [
            "Definition pvalid := [fun x : tp => valid x.1 && valid x.2].",
            "VernacDefinition",
            "116ce92ae35268dbb7f9219fe82f50b113d74f56"
        ],
        [
            "Definition pjoin := [fun x1 x2 : tp => (x1.1 \\+ x2.1, x1.2 \\+ x2.2)].",
            "VernacDefinition",
            "68121c059b27309062407f39d733c337de88e830"
        ],
        [
            "Definition punit : tp := (Unit, Unit).",
            "VernacDefinition",
            "b9aa5bffdb4af11259f8e302d52f45d32254b7fd"
        ],
        [
            "Lemma joinC x y : pjoin x y = pjoin y x.",
            "VernacStartTheoremProof",
            "70695684d3fdc373691ad480e3826a6858e39a83"
        ],
        [
            "move: x y => [x1 x2][y1 y2] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite (joinC x1) (joinC x2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinA x y z : pjoin x (pjoin y z) = pjoin (pjoin x y) z.",
            "VernacStartTheoremProof",
            "c3a90195dbcc6cd0e2412b1aff3d906775c295a7"
        ],
        [
            "move: x y z => [x1 x2][y1 y2][z1 z2] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite (joinA x1) (joinA x2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validL x y : pvalid (pjoin x y) -> pvalid x.",
            "VernacStartTheoremProof",
            "1d36bb57c59c2d09cbbdad8ad2bb8bd5fdcdd602"
        ],
        [
            "move: x y => [x1 x2][y1 y2] /=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by case/andP=>D1 D2; rewrite (validL D1) (validL D2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitL x : pjoin punit x = x.",
            "VernacStartTheoremProof",
            "e43cc8a2188edcd2db0ba06daa32c8e593af6dc0"
        ],
        [
            "by case: x=>x1 x2; rewrite /= !unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validU : pvalid punit.",
            "VernacStartTheoremProof",
            "b59c261af8534542f49904453c55091a3dfeb6b0"
        ],
        [
            "by rewrite /pvalid /= !valid_unit.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ProdPCM.",
            "VernacEndSegment",
            "f556abd6179f82c95aac518f5fd3fc7b8a1596ae"
        ],
        [
            "End ProdPCM.",
            "VernacEndSegment",
            "f556abd6179f82c95aac518f5fd3fc7b8a1596ae"
        ],
        [
            "Definition prodPCMMixin U V := PCMMixin (@ProdPCM.joinC U V) (@ProdPCM.joinA U V) (@ProdPCM.unitL U V) (@ProdPCM.validL U V) (@ProdPCM.validU U V).",
            "VernacDefinition",
            "6685f0a412bb6a695f7b2c9af94b222ed16570d6"
        ],
        [
            "Canonical prodPCM U V := Eval hnf in PCM (_ * _) (@prodPCMMixin U V).",
            "VernacDefinition",
            "2071185c6fdc8f873cf49de738284e932d538c32"
        ],
        [
            "Section Simplification.",
            "VernacBeginSection",
            "b684037895e51554450cfa52eea5b8d4c9c9f66f"
        ],
        [
            "Variable U V : pcm.",
            "VernacAssumption",
            "4f3ff39860871c579aeb077994bfedd8e8bf6d0a"
        ],
        [
            "Lemma pcmPJ (x1 y1 : U) (x2 y2 : V) : (x1, x2) \\+ (y1, y2) = (x1 \\+ y1, x2 \\+ y2).",
            "VernacStartTheoremProof",
            "907948af31ec8c8eade3c2aa354981a237aa4ffd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcm_peta (x : prodPCM U V) : x = (x.1, x.2).",
            "VernacStartTheoremProof",
            "dac46e93a3e2948cf23173725570865d73e505a1"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcmPV (x : prodPCM U V) : valid x = valid x.1 && valid x.2.",
            "VernacStartTheoremProof",
            "58de577a1b00554c489d8bdba68d3046f4fcdeb6"
        ],
        [
            "by rewrite pcmE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pcmPE := (pcmPJ, pcmPV).",
            "VernacDefinition",
            "9d9ead04b8a078ce8bb34bd484b4bba0f3f8688d"
        ],
        [
            "End Simplification.",
            "VernacEndSegment",
            "126ce029e41ebbb28f1bafe2826798eeb7a5a017"
        ],
        [
            "Section ProdTPCM.",
            "VernacBeginSection",
            "c81031cc3fbc55e689b6ad7d8b70a2b4f084595c"
        ],
        [
            "Variables (U V : tpcm).",
            "VernacAssumption",
            "7d69c789b02e018d8e7bd3e9fb4190ed78c6ffc2"
        ],
        [
            "Lemma prod_unitb (x : prodPCM U V) : reflect (x = Unit) (unitb x.1 && unitb x.2).",
            "VernacStartTheoremProof",
            "2f9d8a8c00fc5b7ee3d2ccc2e1e49862a075de14"
        ],
        [
            "case: x=>x1 x2; case: andP=>/= H; constructor.",
            "VernacExtend",
            "84f49fa3f3e708152e964b85d674470eb528efd4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: H=>/unitbP -> /unitbP ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=>X1 X2; elim: H; rewrite X1 X2 !unitbE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prod_join0E (x y : prodPCM U V) : x \\+ y = Unit -> x = Unit /\\ y = Unit.",
            "VernacStartTheoremProof",
            "a2d87f17ae8c6821f54dfe3fa7698dbd91e334cb"
        ],
        [
            "by case: x y=>x1 x2 [y1 y2][] /joinE0 [->->] /joinE0 [->->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prod_valid_undef : ~~ valid (@undef U, @undef V).",
            "VernacStartTheoremProof",
            "614959a56721f43158b2c0577e27f20fd6abd141"
        ],
        [
            "by rewrite pcmPV negb_and !valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prod_undef_join x : (@undef U, @undef V) \\+ x = (@undef U, @undef V).",
            "VernacStartTheoremProof",
            "f603d708df824e4bb7cc8143196a1af077cfd964"
        ],
        [
            "by case: x=>x1 x2; rewrite pcmPE !undef_join.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prodTPCMMix := TPCMMixin prod_unitb prod_join0E prod_valid_undef prod_undef_join.",
            "VernacDefinition",
            "e1b18f5a804465d855b3154217dc01c778ca0c03"
        ],
        [
            "Canonical prodTPCM := Eval hnf in TPCM (U * V) prodTPCMMix.",
            "VernacDefinition",
            "4b66c18fef35dc1a9fd20a103897a2fd1f6184da"
        ],
        [
            "End ProdTPCM.",
            "VernacEndSegment",
            "380f98367d7a4eef0bce6d5936d78ac8c36c2e81"
        ],
        [
            "Module UnitPCM.",
            "VernacDefineModule",
            "67ddf1a571d9ba5ec16041cef52fc34ad748974b"
        ],
        [
            "Section UnitPCM.",
            "VernacBeginSection",
            "74f30c4d806bc573483b857432585b0ace9da0b1"
        ],
        [
            "Definition uvalid (x : unit) := true.",
            "VernacDefinition",
            "d14953a3e428c910e8a562b5fbc0cae8f61bfbc3"
        ],
        [
            "Definition ujoin (x y : unit) := tt.",
            "VernacDefinition",
            "28d7e689ddf27de0fd28b97fb5383fa0a35fd341"
        ],
        [
            "Definition uunit := tt.",
            "VernacDefinition",
            "2c752baca1a7e38250e5ee649b503dd430ee6ab5"
        ],
        [
            "Lemma ujoinC x y : ujoin x y = ujoin y x.",
            "VernacStartTheoremProof",
            "b2c4fa279e1f961099838c525a1fcfc9accccfd5"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ujoinA x y z : ujoin x (ujoin y z) = ujoin (ujoin x y) z.",
            "VernacStartTheoremProof",
            "da7e7a3d9e5dc0e4896df2b9bdc3bc89dcc541aa"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uvalidL x y : uvalid (ujoin x y) -> uvalid x.",
            "VernacStartTheoremProof",
            "3a609e70adb184a733ab8531fac683cb20749ad2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uunitL x : ujoin uunit x = x.",
            "VernacStartTheoremProof",
            "7925ab80c6cabf2286724cf21da2fdd1412b2859"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uvalidU : uvalid uunit.",
            "VernacStartTheoremProof",
            "1b8267259d8c5858a8172cdeabc7ff4714ab4c5d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnitPCM.",
            "VernacEndSegment",
            "7a8134906f89fa583077834e24203fa7295bce03"
        ],
        [
            "End UnitPCM.",
            "VernacEndSegment",
            "7a8134906f89fa583077834e24203fa7295bce03"
        ],
        [
            "Definition unitPCMMixin := PCMMixin UnitPCM.ujoinC UnitPCM.ujoinA UnitPCM.uunitL UnitPCM.uvalidL UnitPCM.uvalidU.",
            "VernacDefinition",
            "5c9ace4a3318dfd9017168c7f8f629a8ed4765e6"
        ],
        [
            "Canonical unitPCM := Eval hnf in PCM unit unitPCMMixin.",
            "VernacDefinition",
            "e558a200542d11ae9f14dc2942f89ce229b4adcd"
        ],
        [
            "Module BoolConjPCM.",
            "VernacDefineModule",
            "70aa1ddae24d2ebf4db8f2ef0796d2071ade6734"
        ],
        [
            "Lemma unitL x : true && x = x.",
            "VernacStartTheoremProof",
            "063a5e580331fd89afc50ea0f2572daacf9e291d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BoolConjPCM.",
            "VernacEndSegment",
            "aaa8ba98d35ddf12fcfc805652de3abd2ac94f31"
        ],
        [
            "Definition boolPCMMixin := PCMMixin andbC andbA BoolConjPCM.unitL (fun x y => @id true) (erefl _).",
            "VernacDefinition",
            "c1562b718e9a060011102d8c22ddc6bf6bb90752"
        ],
        [
            "Canonical boolConjPCM := Eval hnf in PCM bool boolPCMMixin.",
            "VernacDefinition",
            "731672dc1bd878bb0cd923ef53349bbc60537f42"
        ],
        [
            "Definition pcm_preord (U : pcm) (x y : U) := exists z, y = x \\+ z.",
            "VernacDefinition",
            "37749ddaa2f1111858f54360941e7c4e2cf6a3d0"
        ],
        [
            "Notation \"[ 'pcm' x '<=' y ]\" := (@pcm_preord _ x y) (at level 0, x, y at level 69, format \"[ '[hv' 'pcm' x '/ ' <= y ']' ]\") : type_scope.",
            "VernacNotation",
            "e4bb7b06207b1d7a06d66dffe6f3d5333c003b7c"
        ],
        [
            "Section PleqLemmas.",
            "VernacBeginSection",
            "ef61e1fb7954aa6cdc411589f97d3d0574ac5464"
        ],
        [
            "Variable U : pcm.",
            "VernacAssumption",
            "a42f4a802b3c9db9daae0da0ebcf031b282c46e2"
        ],
        [
            "Implicit Types x y z : U.",
            "VernacReserve",
            "8b625d575ab61ede8355828b9c52e08b8e5c78b3"
        ],
        [
            "Lemma pleq_unit x : [pcm Unit <= x].",
            "VernacStartTheoremProof",
            "e26263e95f6cb2f3912fb3a8aca4bcdd02dc3ae3"
        ],
        [
            "by exists x; rewrite unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_refl x : [pcm x <= x].",
            "VernacStartTheoremProof",
            "9e44003c161bfc32c48c1f47ae0c54a1b2214302"
        ],
        [
            "by exists Unit; rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_trans x y z : [pcm x <= y] -> [pcm y <= z] -> [pcm x <= z].",
            "VernacStartTheoremProof",
            "ae793f9b79e80cf104f981de0ca3fbbdc2ca8074"
        ],
        [
            "by case=>a -> [b ->]; exists (a \\+ b); rewrite joinA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_join2r x x1 x2 : [pcm x1 <= x2] -> [pcm x1 \\+ x <= x2 \\+ x].",
            "VernacStartTheoremProof",
            "03bca6136b3de73f468a122346c6763170fe6aa6"
        ],
        [
            "by case=>a ->; exists a; rewrite joinAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_join2l x x1 x2 : [pcm x1 <= x2] -> [pcm x \\+ x1 <= x \\+ x2].",
            "VernacStartTheoremProof",
            "86d6c2db7a03021a0cd948fd781998ec61f8cb76"
        ],
        [
            "by rewrite !(joinC x); apply: pleq_join2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_joinr x1 x2 : [pcm x1 <= x1 \\+ x2].",
            "VernacStartTheoremProof",
            "6c2f09eec1d3f1d8fe0c637c4be9fd507cd70128"
        ],
        [
            "by exists x2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_joinl x1 x2 : [pcm x2 <= x1 \\+ x2].",
            "VernacStartTheoremProof",
            "777c76c7f41325b6774226ad61c9a68090d38920"
        ],
        [
            "by rewrite joinC; apply: pleq_joinr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleqV (x1 x2 : U) : [pcm x1 <= x2] -> valid x2 -> valid x1.",
            "VernacStartTheoremProof",
            "329910373e529fda87fdb92d65b1f35bb7e80c61"
        ],
        [
            "by case=>x -> /validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_validL (x x1 x2 : U) : [pcm x1 <= x2] -> valid (x \\+ x2) -> valid (x \\+ x1).",
            "VernacStartTheoremProof",
            "7422daa899a0500446c611991ddbe29b1a1c36e3"
        ],
        [
            "by case=>a ->; rewrite joinA; apply: validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_validR (x x1 x2 : U) : [pcm x1 <= x2] -> valid (x2 \\+ x) -> valid (x1 \\+ x).",
            "VernacStartTheoremProof",
            "f5be1afa227bb918b122c7687a5d4aebaa500ac1"
        ],
        [
            "by rewrite -!(joinC x); apply: pleq_validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_joinxK (V : cpcm) (x x1 x2 : V) : valid (x2 \\+ x) -> [pcm x1 \\+ x <= x2 \\+ x] -> [pcm x1 <= x2].",
            "VernacStartTheoremProof",
            "041720727de3d150235b48a100bb5cd74f060abc"
        ],
        [
            "by move=>W [a]; rewrite joinAC=>/(joinKx W) ->; exists a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pleq_joinKx (V : cpcm) (x x1 x2 : V) : valid (x \\+ x2) -> [pcm x \\+ x1 <= x \\+ x2] -> [pcm x1 <= x2].",
            "VernacStartTheoremProof",
            "58ca05ac800da0c5047e35a95a72d133d0237117"
        ],
        [
            "by rewrite !(joinC x); apply: pleq_joinxK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PleqLemmas.",
            "VernacEndSegment",
            "c3d62fcff627bdefbcfed80ea8879d4af9629c0c"
        ],
        [
            "Hint Resolve pleq_unit pleq_refl pleq_joinr pleq_joinl : core.",
            "VernacHints",
            "7f4577877922f346165d9df5dabd2ad918dc2f5c"
        ],
        [
            "Definition local (U : pcm) (f : U -> U -> option U) := forall p x y r, valid (x \\+ (p \\+ y)) -> f x (p \\+ y) = Some r -> valid (r \\+ p \\+ y) /\\ f (x \\+ p) y = Some (r \\+ p).",
            "VernacDefinition",
            "169a05db05d0eb42c482312983665c04cf82275f"
        ],
        [
            "Lemma localV U f x y r : @local U f -> valid (x \\+ y) -> f x y = Some r -> valid (r \\+ y).",
            "VernacStartTheoremProof",
            "7dbfa87d4fd424ca46fe76054c1c73a7b66f2b12"
        ],
        [
            "by move=>H V E; move: (H Unit x y r); rewrite unitL !unitR; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idL (U : pcm) : @local U (fun x y => Some x).",
            "VernacStartTheoremProof",
            "60e4507904e14a4f44f54e43bda1582b71a24611"
        ],
        [
            "by move=>p x y _ V [<-]; rewrite -joinA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "joinC",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "by case: U x y=>tp [v j z Cj *]; apply: Cj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinA",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "by case: U x y z=>tp [v j z Cj Aj *]; apply: Aj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinAC",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "by rewrite -joinA (joinC y) joinA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinCA",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "by rewrite joinA (joinC x) -joinA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validL",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "case: U x y=>tp [v j z Cj Aj Uj /= Mj inv f ?]; apply: Mj.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validR",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validE",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "by move=>X; rewrite (validL X) (validR X).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitL",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "by case: U x=>tp [v j z Cj Aj Uj *]; apply: Uj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitR",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC unitL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_unit",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by case: U=>tp [v j z Cj Aj Uj Vm Vu *].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validAR",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "by rewrite -joinA; apply: validR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validAL",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "by rewrite joinA; apply: validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcm_joinE",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcm_validE",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcm_unitE",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinKx",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "by case: U x1 x2 x=>V [b][K] T; apply: K.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinxK",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC x); apply: joinKx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancPL",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "move=>H V H1 H2 E; move: (H _ _ _ _ V H1 H2 E)=>X.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by rewrite -X in E *; rewrite (joinxK V E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancPR",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "move=>H V H1 H2 E.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite (joinC s1) (joinC s2) in E V.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(cancPL H V H1 H2 E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitbP",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "by case: U x=>V [b][u].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitbE",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "by case: unitbP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinE0",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "case: U x y=>V [b][u1 u2] H1 H2 H3 T x y; split; first by apply: H2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case=>->->; rewrite unitL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_undefN",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "by case: U=>V [b][u].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_undef",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "by rewrite (negbTE valid_undefN).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undef_join",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "by case: U x=>V [b][u].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_undef",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC undef_join.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undef0",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "by move=>E; move: (@valid_unit U); rewrite -E valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "big_pmorph",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "rewrite unlock; elim: r=>[|x r IH] //=; case: ifP=>// H V.",
                        "VernacExtend",
                        "c0b074c32d3020d4f7e308c6e5e6ef1e38705074"
                    ]
                },
                {
                    "command": [
                        "by rewrite f_op // IH //; apply: validR V.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validU",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "by rewrite /pvalid /= !valid_unit.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcmPJ",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcm_peta",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcmPV",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "by rewrite pcmE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_unitb",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "case: x=>x1 x2; case: andP=>/= H; constructor.",
                        "VernacExtend",
                        "84f49fa3f3e708152e964b85d674470eb528efd4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: H=>/unitbP -> /unitbP ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case=>X1 X2; elim: H; rewrite X1 X2 !unitbE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_join0E",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "by case: x y=>x1 x2 [y1 y2][] /joinE0 [->->] /joinE0 [->->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_valid_undef",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "by rewrite pcmPV negb_and !valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_undef_join",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "by case: x=>x1 x2; rewrite pcmPE !undef_join.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ujoinC",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ujoinA",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uvalidL",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uunitL",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uvalidU",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_unit",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "by exists x; rewrite unitL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_refl",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "by exists Unit; rewrite unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_trans",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "by case=>a -> [b ->]; exists (a \\+ b); rewrite joinA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_join2r",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "by case=>a ->; exists a; rewrite joinAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_join2l",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC x); apply: pleq_join2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_joinr",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "by exists x2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_joinl",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: pleq_joinr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleqV",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "by case=>x -> /validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_validL",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "by case=>a ->; rewrite joinA; apply: validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_validR",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "by rewrite -!(joinC x); apply: pleq_validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_joinxK",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "by move=>W [a]; rewrite joinAC=>/(joinKx W) ->; exists a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pleq_joinKx",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC x); apply: pleq_joinxK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "localV",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "by move=>H V E; move: (H Unit x y r); rewrite unitL !unitR; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idL",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "by move=>p x y _ V [<-]; rewrite -joinA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}