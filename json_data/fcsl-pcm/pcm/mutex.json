{
    "filename": "pcm/mutex.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype.",
            "VernacRequire",
            "9e197fd62ce7a98c522063cd53f86e7329885990"
        ],
        [
            "From fcsl Require Import prelude pcm.",
            "VernacRequire",
            "dc8d1a3baeaa4e4d097612526f6e257fa12a9909"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module GeneralizedMutex.",
            "VernacDefineModule",
            "d8e6d1e527ac0794ff2851253c320209c706af22"
        ],
        [
            "Section GeneralizedMutex.",
            "VernacBeginSection",
            "16eacc217669d15fde652d9e359e851fb1e433dd"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Inductive mutex := undef | nown | own | mx of T.",
            "VernacInductive",
            "0e4b50ad302860241ad403e23fbd86bdc7736e76"
        ],
        [
            "Definition join x y := match x, y with undef, _ => undef | _, undef => undef | nown, x => x | x, nown => x | own, _ => undef | _, own => undef | mx _, mx _ => undef end.",
            "VernacDefinition",
            "0a53794adfbbc509e77a7d8353bdc99bf5f8cbf9"
        ],
        [
            "Definition valid x := if x is undef then false else true.",
            "VernacDefinition",
            "dd2d2cd6cc02ca0f7886ab67c90983cf081686c9"
        ],
        [
            "Lemma joinC : commutative join.",
            "VernacStartTheoremProof",
            "3636833c41e1d75e45ea91cc8cda0be238ad4669"
        ],
        [
            "by case=>[|||x]; case=>[|||y].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinA : associative join.",
            "VernacStartTheoremProof",
            "3075f098c25e2a956c3e38f90699fbadfe76df12"
        ],
        [
            "by case=>[|||x]; case=>[|||y]; case=>[|||z].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitL : left_id nown join.",
            "VernacStartTheoremProof",
            "ff5f3d9491a8466e2070063bb02cb3c81a88d0bd"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validL x y : valid (join x y) -> valid x.",
            "VernacStartTheoremProof",
            "9e8cbae4d7eca9eaa9747e217bb24b4de11d131a"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_unit : valid nown.",
            "VernacStartTheoremProof",
            "393cac3c4b6847f6fdf67edc7ac7f2aa82beffc0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mutexPCMMix := PCMMixin joinC joinA unitL validL valid_unit.",
            "VernacDefinition",
            "814dfbdb02ae708d1b991f5abbfd5f1ee746b4b5"
        ],
        [
            "Canonical mutexPCM := Eval hnf in PCM mutex mutexPCMMix.",
            "VernacDefinition",
            "282f705a1b69dd9063fc5ead365c5eedfaef19b1"
        ],
        [
            "Lemma joinmK m1 m2 m : valid (m1 \\+ m) -> m1 \\+ m = m2 \\+ m -> m1 = m2.",
            "VernacStartTheoremProof",
            "5ce8a952947bb4de70e5e249173861f06466b222"
        ],
        [
            "by case: m m1 m2=>[|||m][|||m1][|||m2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mutexCPCMMix := CPCMMixin joinmK.",
            "VernacDefinition",
            "179415356e9d0ec5ecbe40555eb00baa414bceac"
        ],
        [
            "Canonical mutexCPCM := Eval hnf in CPCM mutex mutexCPCMMix.",
            "VernacDefinition",
            "e98681a01261a8c430b0b9cef3466806a0f2c240"
        ],
        [
            "Lemma unitb (x : mutex) : reflect (x = Unit) (if x is nown then true else false).",
            "VernacStartTheoremProof",
            "ad9dbbe03a211b78fc69aa72e4379d36a51d3928"
        ],
        [
            "by case: x; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join0E (x y : mutex) : x \\+ y = Unit -> x = Unit /\\ y = Unit.",
            "VernacStartTheoremProof",
            "ebfc1c6159935fa159006f7fbb8cbb4ac35917fc"
        ],
        [
            "by case: x y=>[|||x][|||y].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid3 (x y z : mutex) : valid (x \\+ y \\+ z) = [&& valid (x \\+ y), valid (y \\+ z) & valid (x \\+ z)].",
            "VernacStartTheoremProof",
            "8c57097e4088aabb7c81702db34aa92fa494a770"
        ],
        [
            "by case: x y z=>[|||x][|||y][|||z].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_undef : ~~ valid undef.",
            "VernacStartTheoremProof",
            "220011f1b6073952ab2c124c9de72458630ed8d0"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undef_join x : undef \\+ x = undef.",
            "VernacStartTheoremProof",
            "50697ac41327ec016b0e0ddc0b8f0195aa266bab"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mutexTPCMMix := TPCMMixin unitb join0E valid_undef undef_join.",
            "VernacDefinition",
            "c3d111db5010e72e952f78016b0f17a7007a33bc"
        ],
        [
            "Canonical mutexTPCM := Eval hnf in TPCM mutex mutexTPCMMix.",
            "VernacDefinition",
            "5113236f7ebd6bec3724476998b46513f5d99e07"
        ],
        [
            "End GeneralizedMutex.",
            "VernacEndSegment",
            "6f28edd620dc40b950196a8c29e45bf1a6f348be"
        ],
        [
            "Section Equality.",
            "VernacBeginSection",
            "9206bdb29fbc62464123f767a0c090120d413537"
        ],
        [
            "Variable T : eqType.",
            "VernacAssumption",
            "2ceeb4536776ca324e5be084d2deb4d476694ef1"
        ],
        [
            "Definition mutex_eq (x y : mutex T) := match x, y with undef, undef => true | nown, nown => true | own, own => true | mx x', mx y' => x' == y' | _, _ => false end.",
            "VernacDefinition",
            "e7f33f33700e3428ad8124d1155f3ab04cc3c601"
        ],
        [
            "Lemma mutex_eqP : Equality.axiom mutex_eq.",
            "VernacStartTheoremProof",
            "a19986f287e2049c16c7a947ef597623979c0a20"
        ],
        [
            "case=>[|||x]; case=>[|||y] /=; try by constructor.",
            "VernacExtend",
            "2906658ba5c272b473591a601bf1dd046b109346"
        ],
        [
            "by case: eqP=>[->|H]; constructor=>//; case=>/H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mutexEqMix := EqMixin mutex_eqP.",
            "VernacDefinition",
            "1643fc369f15fa1b868feedee7195230309608dd"
        ],
        [
            "Canonical mutexEqType := Eval hnf in EqType (mutex T) mutexEqMix.",
            "VernacDefinition",
            "2ee0e51222ba5198f6ad3de4d68c12836cf9bbfc"
        ],
        [
            "End Equality.",
            "VernacEndSegment",
            "460cb153287e4f693c29b9baa2a891bb8bc7a79c"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical mutexPCM.",
            "VernacCanonical",
            "81ebac41d329f4130dc11c466a60aa591638af19"
        ],
        [
            "Canonical mutexCPCM.",
            "VernacCanonical",
            "59f8465e80a07a3c365975c040cf0030e8495081"
        ],
        [
            "Canonical mutexEqType.",
            "VernacCanonical",
            "5dac4244185966768ae9613fa2b409d6698dd21d"
        ],
        [
            "Canonical mutexTPCM.",
            "VernacCanonical",
            "1cbb1f1f27500af6968cb9b7f676754fe4355c45"
        ],
        [
            "Notation mutex := mutex.",
            "VernacSyntacticDefinition",
            "33ba6d91ed10ce3acd6cda685cd28e1cc42028b5"
        ],
        [
            "Notation mx := mx.",
            "VernacSyntacticDefinition",
            "36a56685b7b863982c355390009adfe6d9e0b045"
        ],
        [
            "Notation mx_undef := undef.",
            "VernacSyntacticDefinition",
            "b1334a57171c46b5cb3adbc657f2b4c2c67e58f4"
        ],
        [
            "Notation nown := nown.",
            "VernacSyntacticDefinition",
            "aba37a5702e4324d911477b3a8b310654d69b579"
        ],
        [
            "Notation own := own.",
            "VernacSyntacticDefinition",
            "78efb787d493cba9f5bbb5bc1b516e9136acfd1a"
        ],
        [
            "Notation mutexPCM := mutexPCM.",
            "VernacSyntacticDefinition",
            "3f8145b81dab9b23aef0592a1d945c2cdd352438"
        ],
        [
            "Notation mutexTPCM := mutexTPCM.",
            "VernacSyntacticDefinition",
            "0ba6ad942626fde87349414b3cb3b36a9f44d38c"
        ],
        [
            "Arguments mx_undef [T].",
            "VernacArguments",
            "2fe0ece7e30e769da8526d4942eba0871ab22673"
        ],
        [
            "Arguments nown [T].",
            "VernacArguments",
            "e30e5476eea0027e0e4205dcfa233030ebe78a8c"
        ],
        [
            "Arguments own [T].",
            "VernacArguments",
            "db8689e2675947774246b4e6eedba8e8b2d19e59"
        ],
        [
            "Notation mtx := (mutex Empty_set).",
            "VernacSyntacticDefinition",
            "aa4f1c48f825a492753b571a63f3345e6a3fa725"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End GeneralizedMutex.",
            "VernacEndSegment",
            "6f28edd620dc40b950196a8c29e45bf1a6f348be"
        ],
        [
            "Export GeneralizedMutex.Exports.",
            "VernacImport",
            "af27c544a600a5c711169a4f64982af822cc987a"
        ],
        [
            "Section MutexLemmas.",
            "VernacBeginSection",
            "cb1730105e680d95c9072c8e18376f00dffae8d3"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Implicit Types (t : T) (x y : mutex T).",
            "VernacReserve",
            "3ae8c44055bf9d8d5aaac2a65fa4d1d4ba9b0cc9"
        ],
        [
            "CoInductive mutex_spec x : mutex T -> Type := | mutex_undef of x = mx_undef : mutex_spec x mx_undef | mutex_nown of x = Unit : mutex_spec x Unit | mutex_own of x = own : mutex_spec x own | mutex_mx t of x = mx t : mutex_spec x (mx t).",
            "VernacInductive",
            "8fcd62e80eabc9b16e727080ebb6a27113a1ce74"
        ],
        [
            "Lemma mxP x : mutex_spec x x.",
            "VernacStartTheoremProof",
            "aad7f7177d6539f6adc5af039a24ec90b9ef7a69"
        ],
        [
            "by case: x=>[|||t]; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxE0 x y : x \\+ y = Unit -> (x = Unit) * (y = Unit).",
            "VernacStartTheoremProof",
            "38e378876fa0852246b029c882145423033dcc84"
        ],
        [
            "by case: x=>[|||t1]; case: y=>[|||t2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancelMx t1 t2 x : (mx t1 \\+ x = mx t2) <-> (t1 = t2) * (x = Unit).",
            "VernacStartTheoremProof",
            "098ab87de8d118bc3bd45d5e76ff85d94cf2b45b"
        ],
        [
            "by case: x=>[|||x] //=; split=>//; case=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancelxM t1 t2 x : (x \\+ mx t1 = mx t2) <-> (t1 = t2) * (x = Unit).",
            "VernacStartTheoremProof",
            "fd18bbcea7074bff599a0beaaf64e52d23687577"
        ],
        [
            "by rewrite joinC cancelMx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxMx t x : valid (mx t \\+ x) -> x = Unit.",
            "VernacStartTheoremProof",
            "ae6d779aa9916f61fde6af953b3c05a4e1760cec"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxxM t x : valid (x \\+ mx t) -> x = Unit.",
            "VernacStartTheoremProof",
            "fc913f1af4b64448b8672c5ddf057067727c9d4b"
        ],
        [
            "by rewrite joinC=>/mxMx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxxyM t x y : valid (x \\+ (y \\+ mx t)) -> x \\+ y = Unit.",
            "VernacStartTheoremProof",
            "09d0e16eef84c5d115946dae6bd651cc50712319"
        ],
        [
            "by rewrite joinC joinAC=>/mxMx; rewrite joinC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxMxy t x y : valid (mx t \\+ x \\+ y) -> x \\+ y = Unit.",
            "VernacStartTheoremProof",
            "308dede7bccc0815f40ee17fd190a06c91406cf3"
        ],
        [
            "by rewrite -joinA=>/mxMx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxxMy t x y : valid (x \\+ (mx t \\+ y)) -> x \\+ y = Unit.",
            "VernacStartTheoremProof",
            "7c69ee03b1ac8795030752586c2b66c32ff1629b"
        ],
        [
            "by rewrite joinCA=>/mxMx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxyMx t x y : valid (y \\+ mx t \\+ x) -> y \\+ x = Unit.",
            "VernacStartTheoremProof",
            "12cf4934dc8fe655707f148eb5ddcdec2717f8ff"
        ],
        [
            "by rewrite joinAC=>/mxMx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxOx x : valid (own \\+ x) -> x = Unit.",
            "VernacStartTheoremProof",
            "0a4bee8b7aabe05b70e5980019575547b83a21a5"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxxO x : valid (x \\+ own) -> x = Unit.",
            "VernacStartTheoremProof",
            "8c9786cfcd4734ea6496159451fc752adffd6689"
        ],
        [
            "by rewrite joinC=>/mxOx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxxyO x y : valid (x \\+ (y \\+ own)) -> x \\+ y = Unit.",
            "VernacStartTheoremProof",
            "75a5c419044cb5d8751dff8d63708690f8415fff"
        ],
        [
            "by rewrite joinC joinAC=>/mxOx; rewrite joinC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxOxy x y : valid (own \\+ x \\+ y) -> x \\+ y = Unit.",
            "VernacStartTheoremProof",
            "45ebce8d8e074f437bbe4b2604c5fde0ad5d58fe"
        ],
        [
            "by rewrite -joinA=>/mxOx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxxOy x y : valid (x \\+ (own \\+ y)) -> x \\+ y = Unit.",
            "VernacStartTheoremProof",
            "96c1a1f1ce61ca5d9ab8a548c9d542222430a7d2"
        ],
        [
            "by rewrite joinCA=>/mxOx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxyOx x y : valid (y \\+ own \\+ x) -> y \\+ x = Unit.",
            "VernacStartTheoremProof",
            "dad6b6fe3732794b3a12f9accd66a2205bb1c21f"
        ],
        [
            "by rewrite joinAC=>/mxOx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "CoInductive mxjoin_spec (x y : mutex T) : mutex T -> mutex T -> mutex T -> Type := | bothnown of x = nown & y = nown : mxjoin_spec x y nown nown nown | leftown of x = own & y = nown : mxjoin_spec x y own own nown | rightown of x = nown & y = own : mxjoin_spec x y own nown own | leftmx t of x = mx t & y = nown : mxjoin_spec x y (mx t) (mx t) nown | rightmx t of x = nown & y = mx t : mxjoin_spec x y (mx t) nown (mx t) | invalid of ~~ valid (x \\+ y) : mxjoin_spec x y undef x y.",
            "VernacInductive",
            "1d59dbf8831250631346edcde6aa0dee0c1ce801"
        ],
        [
            "Lemma mxPJ x y : mxjoin_spec x y (x \\+ y) x y.",
            "VernacStartTheoremProof",
            "2dd576b50940ae4cd647e43de4a63a8c64207e9f"
        ],
        [
            "by case: x y=>[|||x][|||y]; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MutexLemmas.",
            "VernacEndSegment",
            "89963958bbf44040a1301f0c29e01a12cb91f161"
        ],
        [
            "Prenex Implicits mxMx mxxM mxxyM mxMxy mxxMy mxyMx mxOx mxxO mxxyO mxOxy mxxOy mxyOx.",
            "VernacExtend",
            "8db2ab494df8ae9f249699e36b12792d40475a6a"
        ],
        [
            "Lemma mxON (x : mtx) : valid x -> x != own -> x = nown.",
            "VernacStartTheoremProof",
            "1b65cb537439df3b8254c965d56ea92a9f13530c"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxNN (x : mtx) : valid x -> x != nown -> x = own.",
            "VernacStartTheoremProof",
            "fd6734e9792bb161a1a7468b9653cb218cc185ac"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MutexRewriting.",
            "VernacBeginSection",
            "61270f066511a5922052c6e560afc8a3bd4404f4"
        ],
        [
            "Variable T : eqType.",
            "VernacAssumption",
            "2ceeb4536776ca324e5be084d2deb4d476694ef1"
        ],
        [
            "Implicit Types (t : T) (x : mutex T).",
            "VernacReserve",
            "1d86cef72c7cfe6c7551e8120fb6c038fc4d5fb1"
        ],
        [
            "Lemma mxE1 : ((@mx_undef T == nown) = false) * ((@nown T == mx_undef) = false) * ((@mx_undef T == own) = false) * ((@own T == mx_undef) = false) * ((@nown T == own) = false) * ((@own T == nown) = false).",
            "VernacStartTheoremProof",
            "19f2325bd5c5cad3db771120f4d9291566708dca"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxE2 t : ((mx t == nown) = false) * ((nown == mx t) = false) * ((mx t == mx_undef) = false) * ((mx_undef == mx t) = false) * ((mx t == own) = false) * ((own == mx t) = false).",
            "VernacStartTheoremProof",
            "ae91a702050d5a9c0ee789def0b189ce58df562b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxE3 t x : ((mx t \\+ x == nown) = false) * ((x \\+ mx t == nown) = false) * ((nown == mx t \\+ x) = false) * ((nown == x \\+ mx t) = false) * ((mx t \\+ x == own) = false) * ((x \\+ mx t == own) = false) * ((own \\+ x == mx t) = false) * ((x \\+ own == mx t) = false).",
            "VernacStartTheoremProof",
            "85b9a9f5d0ec387cbe59f0f67c994291f5b076ec"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxE4 x : ((own \\+ x == nown) = false) * ((x \\+ own == nown) = false) * ((own \\+ x == own) = (x == Unit)) * ((x \\+ own == own) = (x == Unit)).",
            "VernacStartTheoremProof",
            "ac16159bc1748698f3719874da37bd0fb8dbeaba"
        ],
        [
            "by case: x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mxE5 t1 t2 x : ((mx t1 \\+ x == mx t2) = (t1 == t2) && (x == Unit)) * ((x \\+ mx t1 == mx t2) = (t1 == t2) && (x == Unit)) * ((mx t1 == mx t2 \\+ x) = (t1 == t2) && (x == Unit)) * ((mx t1 == x \\+ mx t2) = (t1 == t2) && (x == Unit)).",
            "VernacStartTheoremProof",
            "628bda29f536f0b17d5c50523cd5ffcf6376ede1"
        ],
        [
            "have L : forall t1 t2 x, (mx t1 \\+ x == mx t2) = (t1 == t2) && (x == Unit).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>*; apply/idP/andP; [case/eqP/cancelMx=>->->|case=>/eqP->/eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by do !split=>//; rewrite ?L // eq_sym L eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_valid t : valid (mx t).",
            "VernacStartTheoremProof",
            "aa6db09cdda33690d69edf4ebbf41c03afc65671"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_valid_own : valid (@own T).",
            "VernacStartTheoremProof",
            "9ba4d3f8abba4d2db6da1a9344ea4a1f9f002413"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mx_injE t1 t2 : (mx t1 == mx t2) = (t1 == t2).",
            "VernacStartTheoremProof",
            "dc986ff1700afb63939d7ce605a95f0edbe1e403"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mxE := (mxE1, mxE2, mxE3, mxE4, mxE5, mx_injE, mx_valid, mx_valid_own, unitL, unitR, valid_unit, eq_refl, valid_undef, undef_join, join_undef).",
            "VernacDefinition",
            "b1e1cf9a3be08069e98e31352e28a40d4a3ce147"
        ],
        [
            "End MutexRewriting.",
            "VernacEndSegment",
            "fe15bfa7ba1242a6cf78dcd6541d991feec880ca"
        ]
    ],
    "proofs": [
        {
            "name": "joinC",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "by case=>[|||x]; case=>[|||y].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinA",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "by case=>[|||x]; case=>[|||y]; case=>[|||z].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitL",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validL",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_unit",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinmK",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by case: m m1 m2=>[|||m][|||m1][|||m2].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitb",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "by case: x; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join0E",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "by case: x y=>[|||x][|||y].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid3",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "by case: x y z=>[|||x][|||y][|||z].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_undef",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undef_join",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mutex_eqP",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "case=>[|||x]; case=>[|||y] /=; try by constructor.",
                        "VernacExtend",
                        "2906658ba5c272b473591a601bf1dd046b109346"
                    ]
                },
                {
                    "command": [
                        "by case: eqP=>[->|H]; constructor=>//; case=>/H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxP",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "by case: x=>[|||t]; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE0",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "by case: x=>[|||t1]; case: y=>[|||t2].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancelMx",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "by case: x=>[|||x] //=; split=>//; case=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancelxM",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC cancelMx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxMx",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxxM",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC=>/mxMx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxxyM",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC joinAC=>/mxMx; rewrite joinC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxMxy",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by rewrite -joinA=>/mxMx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxxMy",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "by rewrite joinCA=>/mxMx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxyMx",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by rewrite joinAC=>/mxMx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxOx",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxxO",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC=>/mxOx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxxyO",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC joinAC=>/mxOx; rewrite joinC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxOxy",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "by rewrite -joinA=>/mxOx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxxOy",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "by rewrite joinCA=>/mxOx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxyOx",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by rewrite joinAC=>/mxOx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxPJ",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "by case: x y=>[|||x][|||y]; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxON",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxNN",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE1",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE2",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE3",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE4",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "by case: x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mxE5",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "have L : forall t1 t2 x, (mx t1 \\+ x == mx t2) = (t1 == t2) && (x == Unit).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>*; apply/idP/andP; [case/eqP/cancelMx=>->->|case=>/eqP->/eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by do !split=>//; rewrite ?L // eq_sym L eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_valid",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_valid_own",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mx_injE",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}