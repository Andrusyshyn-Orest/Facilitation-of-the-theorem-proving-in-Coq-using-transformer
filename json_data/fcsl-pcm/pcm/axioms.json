{
    "filename": "pcm/axioms.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrfun Eqdep ClassicalFacts.",
            "VernacRequire",
            "a6a53a134a2d3da83c50c655ba2530a92f95d82a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Axiom pext : forall p1 p2 : Prop, (p1 <-> p2) -> p1 = p2.",
            "VernacAssumption",
            "e68c6a56ec2299120aa8832e8db28ba8768cc299"
        ],
        [
            "Axiom fext : forall A (B : A -> Type) (f1 f2 : forall x, B x), (forall x, f1 x = f2 x) -> f1 = f2.",
            "VernacAssumption",
            "bf206daddc30a6d0ef76463c57f18143e549fe54"
        ],
        [
            "Lemma pf_irr (P : Prop) (p1 p2 : P) : p1 = p2.",
            "VernacStartTheoremProof",
            "96373d055e4d4bbe6c65f53ae9f5275e42d9cf9e"
        ],
        [
            "by apply/ext_prop_dep_proof_irrel_cic/pext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eta A (B : A -> Type) (f : forall x, B x) : f = [eta f].",
            "VernacStartTheoremProof",
            "49559e1fbdf6ab7fc556ac4937bd7a0ec44bc521"
        ],
        [
            "by apply: fext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sval_inj A P : injective (@sval A P).",
            "VernacStartTheoremProof",
            "7c093c1ce174237f5439ea72d5d26572ae8c3336"
        ],
        [
            "move=>[x Hx][y Hy] /= H; move: Hx Hy; rewrite H=>*.",
            "VernacExtend",
            "59558e378570fadf944f573c466a34c761bc9b23"
        ],
        [
            "congr exist; apply: pf_irr.",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma svalE A (P : A -> Prop) x H : sval (exist P x H) = x.",
            "VernacStartTheoremProof",
            "22f4149273a28ac6439784668907dd9843f581e1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compf1 A B (f : A -> B) : f = f \\o id.",
            "VernacStartTheoremProof",
            "6eb1283db649218f6992e204f0c2a377423092a6"
        ],
        [
            "by apply: fext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp1f A B (f : A -> B) : f = id \\o f.",
            "VernacStartTheoremProof",
            "a37ed012b2d3ce715abc5f4f38953208ba4f686c"
        ],
        [
            "by apply: fext.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Cast.",
            "VernacBeginSection",
            "9845ce3bbd906c5cb8e7d53be436858ea34217bd"
        ],
        [
            "Variable (C : Type) (interp : C -> Type).",
            "VernacAssumption",
            "c0ce0253d4af9fe4ff75eeedc4ca040da905dfca"
        ],
        [
            "Definition cast A B (pf : A = B) (v : interp B) : interp A := ecast _ _ (esym pf) v.",
            "VernacDefinition",
            "6c4fcc020041e232bfcf344b4d80b677e5f0d14a"
        ],
        [
            "Lemma eqc A (pf : A = A) (v : interp A) : cast pf v = v.",
            "VernacStartTheoremProof",
            "273c5e7f47b927ced21c070d89023af3890f0948"
        ],
        [
            "by move: pf; apply: Streicher_K.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition jmeq A B (v : interp A) (w : interp B) := forall pf, v = cast pf w.",
            "VernacDefinition",
            "5218f7ed3cc61925d1c3fba16f011b7905fd2cb7"
        ],
        [
            "Lemma jmrefl A (v : interp A) : jmeq v v.",
            "VernacStartTheoremProof",
            "9cefcd14ddd9e451a40958e8d544d3f593d912d7"
        ],
        [
            "by move=>pf; rewrite eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma jmsym A B (v : interp A) (w : interp B) : jmeq v w -> jmeq w v.",
            "VernacStartTheoremProof",
            "7813ad0b986ebdf96fbb1e9c4770801603e8e2d7"
        ],
        [
            "move=> H pf; rewrite (H (esym pf)).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move: (pf); rewrite pf in w H * => {pf} pf; rewrite !eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma jmE A (v w : interp A) : jmeq v w <-> v = w.",
            "VernacStartTheoremProof",
            "b588807351c15527dd8cd48400565d9e7b395aef"
        ],
        [
            "by split=>[/(_ erefl) //|->]; apply: jmrefl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma castE A B (pf1 pf2 : A = B) (v1 v2 : interp B) : v1 = v2 <-> cast pf1 v1 = cast pf2 v2.",
            "VernacStartTheoremProof",
            "b8382f41082b1e4a6d6ba2a2b97e17263015bf2a"
        ],
        [
            "by move: (pf1) pf2; rewrite pf1 =>*; rewrite !eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Cast.",
            "VernacEndSegment",
            "d30d981f4fe542e8323851d9c7e9a07271391d68"
        ],
        [
            "Arguments cast {C} interp [A][B] pf v.",
            "VernacArguments",
            "4de2d156f448f8bedab3487f4647c63dd2bd8e8d"
        ],
        [
            "Arguments jmeq {C} interp [A][B] v w.",
            "VernacArguments",
            "21914205e4853e16deb43ff38894ce0acbb7be6e"
        ],
        [
            "Hint Resolve jmrefl : core.",
            "VernacHints",
            "ff36c436d4e4044c8736ec6a28ac06eb0ff9a3ee"
        ],
        [
            "Notation icast pf v := (@cast _ id _ _ pf v).",
            "VernacSyntacticDefinition",
            "461345bcab750c993db08879005a513512473f1f"
        ],
        [
            "Notation ijmeq v w := (@jmeq _ id _ _ v w).",
            "VernacSyntacticDefinition",
            "4d3f7b91049ac5d2e06368882846f01fdc4fc1d2"
        ],
        [
            "Section Dynamic.",
            "VernacBeginSection",
            "581b1c6652d7465f8d80404102ad44703a93c34e"
        ],
        [
            "Variables (A : Type) (P : A -> Type).",
            "VernacAssumption",
            "61e7495044d81575b0d0acc0e967f4cee68ad41d"
        ],
        [
            "Definition dynamic := sigT P.",
            "VernacDefinition",
            "5885ec485d2d03795f73f9514c98239f07db568a"
        ],
        [
            "Definition dyn := existT P.",
            "VernacDefinition",
            "78957ada6a1b543eb6316e6187749639acb7beb3"
        ],
        [
            "Definition dyn_tp := @projT1 _ P.",
            "VernacDefinition",
            "a04f832c6587883ea030a06f362c84155ebd2a7d"
        ],
        [
            "Definition dyn_val := @projT2 _ P.",
            "VernacDefinition",
            "abb9a9e2eaf4671653625e6cc0fc9b9c18cd6105"
        ],
        [
            "Definition dyn_eta := @sigT_eta _ P.",
            "VernacDefinition",
            "b62357a9f46810a63130478f910374f0c1d3323b"
        ],
        [
            "Definition dyn_injT := @eq_sigT_fst _ P.",
            "VernacDefinition",
            "f5f1d81c9bebcf9a4997f32af834e936f6a0bcd7"
        ],
        [
            "Definition dyn_inj := @inj_pair2 _ P.",
            "VernacDefinition",
            "0321558b77e155eae6abce6c732fe52a55d8e516"
        ],
        [
            "End Dynamic.",
            "VernacEndSegment",
            "bbc5f19cc3524c0f261e32e2885d3afa29e687d9"
        ],
        [
            "Prenex Implicits dyn_tp dyn_val dyn_injT dyn_inj.",
            "VernacExtend",
            "cb0032a4a893117f9279ff3e7286b7231acfb157"
        ],
        [
            "Arguments dyn {C} interp {A} _ : rename.",
            "VernacArguments",
            "66df8032f88a6d9300538b4591c9d9227d2d2765"
        ],
        [
            "Notation idyn v := (@dyn _ id _ v).",
            "VernacSyntacticDefinition",
            "9192313da6a522aaaa3cbfa04e613c9223102b73"
        ],
        [
            "Lemma dynE (A B : Type) interp (pf : A = B) (v : interp A) (w : interp B) : jmeq interp v w <-> dyn interp v = dyn interp w.",
            "VernacStartTheoremProof",
            "bf0f1b631fdb92d162268c09a632d9e232043b2c"
        ],
        [
            "by rewrite -pf in w *; rewrite jmE; split => [->|/dyn_inj].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "pf_irr",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "by apply/ext_prop_dep_proof_irrel_cic/pext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eta",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "by apply: fext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sval_inj",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "move=>[x Hx][y Hy] /= H; move: Hx Hy; rewrite H=>*.",
                        "VernacExtend",
                        "59558e378570fadf944f573c466a34c761bc9b23"
                    ]
                },
                {
                    "command": [
                        "congr exist; apply: pf_irr.",
                        "VernacExtend",
                        "385739dd8a4f73703d3828c61e1780a276bfaa31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "svalE",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compf1",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "by apply: fext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp1f",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by apply: fext.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqc",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "by move: pf; apply: Streicher_K.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jmrefl",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by move=>pf; rewrite eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jmsym",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "move=> H pf; rewrite (H (esym pf)).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move: (pf); rewrite pf in w H * => {pf} pf; rewrite !eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jmE",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "by split=>[/(_ erefl) //|->]; apply: jmrefl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "castE",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "by move: (pf1) pf2; rewrite pf1 =>*; rewrite !eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dynE",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by rewrite -pf in w *; rewrite jmE; split => [->|/dyn_inj].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}