{
    "filename": "pcm/unionmap.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype seq path.",
            "VernacRequire",
            "d7046f70c5bd7f4316377c4e82aa4b9fd36d1fd5"
        ],
        [
            "From fcsl Require Import ordtype finmap pcm.",
            "VernacRequire",
            "854fde92c84439545ddca08c0965c59c0ee71f3f"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module UM.",
            "VernacDefineModule",
            "7fe1372097bb04db44692d7622e42a4ca76f29c8"
        ],
        [
            "Section UM.",
            "VernacBeginSection",
            "357c5ec749e67822c9d2ff9975e6d7ffa71be550"
        ],
        [
            "Variables (K : ordType) (V : Type) (p : pred K).",
            "VernacAssumption",
            "0de4f0b46dd3924b94cd64247a45dc1c57167d34"
        ],
        [
            "Inductive base := Undef | Def (f : {finMap K -> V}) of all p (supp f).",
            "VernacInductive",
            "093886e443940c5f81e65a5a2a88bdaa11a1da2a"
        ],
        [
            "Section FormationLemmas.",
            "VernacBeginSection",
            "5de558522602aeffe611b132101865712562be20"
        ],
        [
            "Variable (f g : {finMap K -> V}).",
            "VernacAssumption",
            "1be0e46bd333f63de76c6c5cb36440b14814b186"
        ],
        [
            "Lemma all_supp_insP k v : p k -> all p (supp f) -> all p (supp (ins k v f)).",
            "VernacStartTheoremProof",
            "80979232911a11ee276af5fda2ec15e36d8d8800"
        ],
        [
            "move=>H1 H2; apply/allP=>x; rewrite supp_ins inE /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: eqP=>[->|_] //=; move/(allP H2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_supp_remP k : all p (supp f) -> all p (supp (rem k f)).",
            "VernacStartTheoremProof",
            "4b561746cdb69e02692cdfc9af87c258a4b49356"
        ],
        [
            "move=>H; apply/allP=>x; rewrite supp_rem inE /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: eqP=>[->|_] //=; move/(allP H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_supp_fcatP : all p (supp f) -> all p (supp g) -> all p (supp (fcat f g)).",
            "VernacStartTheoremProof",
            "32cf82967fdf37949574841d497f793cf36cd6b4"
        ],
        [
            "move=>H1 H2; apply/allP=>x; rewrite supp_fcat inE /=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case/orP; [move/(allP H1) | move/(allP H2)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_supp_kfilterP q : all p (supp f) -> all p (supp (kfilter q f)).",
            "VernacStartTheoremProof",
            "eb57b5618f8a22fe445e5ef7cc5102f31231b6e2"
        ],
        [
            "move=>H; apply/allP=>x; rewrite supp_kfilt mem_filter.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case/andP=>_ /(allP H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FormationLemmas.",
            "VernacEndSegment",
            "d08a07751078fa9d0300d76754ddc59208238993"
        ],
        [
            "Implicit Types (k : K) (v : V) (f g : base).",
            "VernacReserve",
            "211ae2e767bd29aedcbb54d1cb9d633d10d2db62"
        ],
        [
            "Lemma umapE (f g : base) : f = g <-> match f, g with Def f' pf, Def g' pg => f' = g' | Undef, Undef => true | _, _ => false end.",
            "VernacStartTheoremProof",
            "171fc55446d19894256499e69f96bd9a77c50415"
        ],
        [
            "split; first by move=>->; case: g.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: f; case: g=>// f pf g pg E; rewrite {g}E in pg *.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "by congr Def; apply: bool_irrelevance.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition valid f := if f is Def _ _ then true else false.",
            "VernacDefinition",
            "74f8eafb0c7500c05a5391cb2df3227a2eafe53a"
        ],
        [
            "Definition empty := @Def (finmap.nil K V) is_true_true.",
            "VernacDefinition",
            "d0dc30855d4fc38a7e1061216b936639b0b41ea6"
        ],
        [
            "Definition upd k v f := if f is Def fs fpf then if decP (@idP (p k)) is left pf then Def (all_supp_insP v pf fpf) else Undef else Undef.",
            "VernacDefinition",
            "4586cd4ab310c4a22746c1fdc5e77ec9c2de3bbb"
        ],
        [
            "Definition dom f : seq K := if f is Def fs _ then supp fs else [::].",
            "VernacDefinition",
            "e3f2bd39395e2a3ffa9811a2b841739f2e174d85"
        ],
        [
            "Definition dom_eq f1 f2 := match f1, f2 with Def fs1 _, Def fs2 _ => supp fs1 == supp fs2 | Undef, Undef => true | _, _ => false end.",
            "VernacDefinition",
            "3a11b3c529754aebc91f405cccc70cd78cb7eabf"
        ],
        [
            "Definition free k f := if f is Def fs pf then Def (all_supp_remP k pf) else Undef.",
            "VernacDefinition",
            "1dd0ab205dba0e6231a2fd896b4853afcab35779"
        ],
        [
            "Definition find k f := if f is Def fs _ then fnd k fs else None.",
            "VernacDefinition",
            "bee53aaf87867ffa02ab60eda00d8a0832df51c1"
        ],
        [
            "Definition union f1 f2 := if (f1, f2) is (Def fs1 pf1, Def fs2 pf2) then if disj fs1 fs2 then Def (all_supp_fcatP pf1 pf2) else Undef else Undef.",
            "VernacDefinition",
            "070a0ba82e9988b6435be4a5cae471c9d588be1c"
        ],
        [
            "Definition um_filter q f := if f is Def fs pf then Def (all_supp_kfilterP q pf) else Undef.",
            "VernacDefinition",
            "fb1ffef358732ebf0785ebf03f34d0bd11db1154"
        ],
        [
            "Definition empb f := if f is Def fs _ then supp fs == [::] else false.",
            "VernacDefinition",
            "3769e40eee4a032b4fcd3bda3b75f9cf571181fd"
        ],
        [
            "Definition undefb f := if f is Undef then true else false.",
            "VernacDefinition",
            "2263a9fea44dc4d3f6f81ae533a7951281d7e5d6"
        ],
        [
            "Definition pts k v := upd k v empty.",
            "VernacDefinition",
            "9ea8e0889faa00625ab32cf2fa74cf5d452f46c2"
        ],
        [
            "Lemma base_indf (P : base -> Prop) : P Undef -> P empty -> (forall k v f, P f -> valid (union (pts k v) f) -> path ord k (dom f) -> P (union (pts k v) f)) -> forall f, P f.",
            "VernacStartTheoremProof",
            "ed9e304eb24ee2440091b0daf124a976b510162a"
        ],
        [
            "rewrite /empty => H1 H2 H3; apply: base_ind=>//.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "apply: fmap_ind'=>[|k v f S IH] H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by set f := Def _ in H2; rewrite (_ : Def H = f) // /f umapE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have N : k \\notin supp f by apply: notin_path S.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [T1 T2] : p k /\\ all p (supp f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; first by apply: (allP H k); rewrite supp_ins inE /= eq_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/allP=>x T; apply: (allP H x).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite supp_ins inE /= T orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E : FinMap (sorted_ins' k v (sorted_nil K V)) = ins k v (@nil K V) by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: valid (union (pts k v) (Def T2)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /valid /union /pts /upd /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: decP; last by rewrite T1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>T; case: ifP=>//; rewrite E disjC disj_ins N disj_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(H3 k v _ (IH T2)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (_ : union (pts k v) (Def T2) = Def H).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite umapE /union /pts /upd /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: decP=>// T; rewrite /disj /= N /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite E fcat_inss // fcat0s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_indb (P : base -> Prop) : P Undef -> P empty -> (forall k v f, P f -> valid (union (pts k v) f) -> (forall x, x \\in dom f -> ord x k) -> P (union (pts k v) f)) -> forall f, P f.",
            "VernacStartTheoremProof",
            "81d0d56de167f608cd4f08e87445e502a336ee3e"
        ],
        [
            "rewrite /empty => H1 H2 H3; apply: base_ind=>//.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "apply: fmap_ind''=>[|k v f S IH] H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by set f := Def _ in H2; rewrite (_ : Def H = f) // /f umapE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have N : k \\notin supp f by apply/negP; move/S; rewrite ordtype.irr.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [T1 T2] : p k /\\ all p (supp f).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; first by apply: (allP H k); rewrite supp_ins inE /= eq_refl.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/allP=>x T; apply: (allP H x).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite supp_ins inE /= T orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E : FinMap (sorted_ins' k v (sorted_nil K V)) = ins k v (@nil K V) by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: valid (union (pts k v) (Def T2)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /valid /union /pts /upd /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: decP; last by rewrite T1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>T; case: ifP=>//; rewrite E disjC disj_ins N disj_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(H3 k v _ (IH T2)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (_ : union (pts k v) (Def T2) = Def H); first by apply; apply: S.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite umapE /union /pts /upd /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: decP=>// T; rewrite /disj /= N /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by rewrite E fcat_inss // fcat0s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UM.",
            "VernacEndSegment",
            "bbe231171929b801b696c566b0025417e96e09bc"
        ],
        [
            "End UM.",
            "VernacEndSegment",
            "bbe231171929b801b696c566b0025417e96e09bc"
        ],
        [
            "Module UMC.",
            "VernacDefineModule",
            "bf9ae34f765cb4714a5f1485bb7cda67330d6303"
        ],
        [
            "Section MixinDef.",
            "VernacBeginSection",
            "dd3c66b6032d69061e23cef68e35cf33870aa73b"
        ],
        [
            "Variables (K : ordType) (V : Type) (p : pred K).",
            "VernacAssumption",
            "0de4f0b46dd3924b94cd64247a45dc1c57167d34"
        ],
        [
            "Structure mixin_of (T : Type) := Mixin { defined_op : T -> bool; empty_op : T; undef_op : T; upd_op : K -> V -> T -> T; dom_op : T -> seq K; dom_eq_op : T -> T -> bool; free_op : K -> T -> T; find_op : K -> T -> option V; union_op : T -> T -> T; um_filter_op : pred K -> T -> T; empb_op : T -> bool; undefb_op : T -> bool; pts_op : K -> V -> T; from_op : T -> UM.base V p; to_op : UM.base V p -> T; _ : forall b, from_op (to_op b) = b; _ : forall f, to_op (from_op f) = f; _ : forall f, defined_op f = UM.valid (from_op f); _ : undef_op = to_op (UM.Undef V p); _ : empty_op = to_op (UM.empty V p); _ : forall k v f, upd_op k v f = to_op (UM.upd k v (from_op f)); _ : forall f, dom_op f = UM.dom (from_op f); _ : forall f1 f2, dom_eq_op f1 f2 = UM.dom_eq (from_op f1) (from_op f2); _ : forall k f, free_op k f = to_op (UM.free k (from_op f)); _ : forall k f, find_op k f = UM.find k (from_op f); _ : forall f1 f2, union_op f1 f2 = to_op (UM.union (from_op f1) (from_op f2)); _ : forall q f, um_filter_op q f = to_op (UM.um_filter q (from_op f)); _ : forall f, empb_op f = UM.empb (from_op f); _ : forall f, undefb_op f = UM.undefb (from_op f); _ : forall k v, pts_op k v = to_op (UM.pts p k v)}.",
            "VernacInductive",
            "2697e0c8aaadb86f86e17f819b6bf98e437f9845"
        ],
        [
            "End MixinDef.",
            "VernacEndSegment",
            "e262c7e93348b71b8f1fa5ff25806a01c3c33797"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Variables (K : ordType) (V : Type).",
            "VernacAssumption",
            "e1d3a4273e13715e3010235ff1240b4ebe9e9727"
        ],
        [
            "Structure class_of (T : Type) := Class { p : pred K; mixin : mixin_of V p T}.",
            "VernacInductive",
            "addcf3c7fd80fce01a15214924e8bef627c136b8"
        ],
        [
            "Structure type : Type := Pack {sort : Type; _ : class_of sort}.",
            "VernacInductive",
            "fe005e9e42bd7759257d63deeda273f09f6fd17d"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c as cT' := cT return class_of cT' in c.",
            "VernacDefinition",
            "0e4a80652d474f8010316ff26a5322b5207d82a3"
        ],
        [
            "Definition clone c of phant_id class c := @Pack T c.",
            "VernacDefinition",
            "e082321bed0d5d4d78139419fead577313b82668"
        ],
        [
            "Definition pack p (m : @mixin_of K V p T) := @Pack T (@Class T p m).",
            "VernacDefinition",
            "005cd1ef09a8408f2013b1e32a50e13a0369b375"
        ],
        [
            "Definition cond := [pred x : K | @p _ class x].",
            "VernacDefinition",
            "d2159c7debdc0aba715e163dfe1b9980619d7b61"
        ],
        [
            "Definition from := from_op (mixin class).",
            "VernacDefinition",
            "0e6155bbe36ef7235d727d1e398937a374419c1f"
        ],
        [
            "Definition to := to_op (mixin class).",
            "VernacDefinition",
            "86c551ac3412b28d3332e2dd10d24d7641e11d2c"
        ],
        [
            "Definition defined := defined_op (mixin class).",
            "VernacDefinition",
            "7b092cf7e4991b5d3b1ab358aae270fe81f2fd84"
        ],
        [
            "Definition um_undef := undef_op (mixin class).",
            "VernacDefinition",
            "ec85bdec2ba9553195eb4277491a30a8a6f88cc5"
        ],
        [
            "Definition empty := empty_op (mixin class).",
            "VernacDefinition",
            "b137378341b640bf534f5ea1637f85b033c705d7"
        ],
        [
            "Definition upd : K -> V -> cT -> cT := upd_op (mixin class).",
            "VernacDefinition",
            "bb0df7c6f6d7f77dc0546049c835046e1b1d78a1"
        ],
        [
            "Definition dom : cT -> seq K := dom_op (mixin class).",
            "VernacDefinition",
            "4ca2c3dd33b1c0bfef2a2cf4e1cbbbd7f1388fc5"
        ],
        [
            "Definition dom_eq := dom_eq_op (mixin class).",
            "VernacDefinition",
            "e8bf0ddd90f3262a6621eeb252b8ac6ef535d37a"
        ],
        [
            "Definition free : K -> cT -> cT := free_op (mixin class).",
            "VernacDefinition",
            "076ed10420748ec5ed21f6b4e81a99318ffeeeae"
        ],
        [
            "Definition find : K -> cT -> option V := find_op (mixin class).",
            "VernacDefinition",
            "5fa429cfb09d84b0c868577c3da5d2a2ea992109"
        ],
        [
            "Definition union := union_op (mixin class).",
            "VernacDefinition",
            "2f4d7a954fccbdce30d45554385ea8891e63e3c6"
        ],
        [
            "Definition um_filter : pred K -> cT -> cT := um_filter_op (mixin class).",
            "VernacDefinition",
            "e0a6b40f03db7f2452921a0b6c6e8cf92d2b0787"
        ],
        [
            "Definition empb := empb_op (mixin class).",
            "VernacDefinition",
            "ce353911984e5d21adc411fb8f17b2d9966cc661"
        ],
        [
            "Definition undefb := undefb_op (mixin class).",
            "VernacDefinition",
            "2d7c09584e107b87e648d755129b48b22ece965f"
        ],
        [
            "Definition pts : K -> V -> cT := pts_op (mixin class).",
            "VernacDefinition",
            "442fcea60c3e59cd9a2f63fd1461e8eb231f6e47"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Arguments um_undef [K V cT].",
            "VernacArguments",
            "6d7c53e7384b3c71b4262c2856ed575e9ccc40e2"
        ],
        [
            "Arguments empty [K V cT].",
            "VernacArguments",
            "02b48005a453774742da5dec9e93c356ac8d9ebe"
        ],
        [
            "Arguments pts [K V cT] _ _.",
            "VernacArguments",
            "158f0b5b5b6ab5e94585c7211f2740b3d3e61d42"
        ],
        [
            "Prenex Implicits to um_undef empty pts.",
            "VernacExtend",
            "d6b6e73a0a8a4447b5b69feaccb09361de74bdcc"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : type K V).",
            "VernacAssumption",
            "2b8b8f1bb3ee406420ba4c5b14099cbe068ffb40"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Implicit Type f : U.",
            "VernacReserve",
            "1c2948d2dfe60715de7038f99869ca83f2ad4999"
        ],
        [
            "Lemma ftE (b : UM.base V (cond U)) : from (to b) = b.",
            "VernacStartTheoremProof",
            "44e96de20b1cdf7785e94e394bc38c4e03d9a0d3"
        ],
        [
            "by case: U b=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tfE f : to (from f) = f.",
            "VernacStartTheoremProof",
            "a5994948bbb45c633e82745ef4a7b537896fbc38"
        ],
        [
            "by case: U f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqE (b1 b2 : UM.base V (cond U)) : to b1 = to b2 <-> b1 = b2.",
            "VernacStartTheoremProof",
            "d7acfce7e44cc805e0340ea3e73c66abe604272e"
        ],
        [
            "by split=>[E|-> //]; rewrite -[b1]ftE -[b2]ftE E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defE f : defined f = UM.valid (from f).",
            "VernacStartTheoremProof",
            "88ab554033a552b87edfb02527fab941e515785d"
        ],
        [
            "by case: U f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefE : um_undef = to (UM.Undef V (cond U)).",
            "VernacStartTheoremProof",
            "bc47485e4f2102793290a7013adc0029764deb3b"
        ],
        [
            "by case: U=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma emptyE : empty = to (UM.empty V (cond U)).",
            "VernacStartTheoremProof",
            "67461394c9f5639dd71aa0ab07dc2b312e045ff5"
        ],
        [
            "by case: U=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updE k v f : upd k v f = to (UM.upd k v (from f)).",
            "VernacStartTheoremProof",
            "5bba736bce2fc187a06c9d98c0a5c48a77a61ebc"
        ],
        [
            "by case: U k v f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domE f : dom f = UM.dom (from f).",
            "VernacStartTheoremProof",
            "c39598874ba7039756c0c2607939ec852334ecdb"
        ],
        [
            "by case: U f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_eqE f1 f2 : dom_eq f1 f2 = UM.dom_eq (from f1) (from f2).",
            "VernacStartTheoremProof",
            "be828b2e2ef264bab7b0d74b64490a705adb67ec"
        ],
        [
            "by case: U f1 f2=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeE k f : free k f = to (UM.free k (from f)).",
            "VernacStartTheoremProof",
            "a7f1442730dc45c339288f88fa39d09b87508a87"
        ],
        [
            "by case: U k f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findE k f : find k f = UM.find k (from f).",
            "VernacStartTheoremProof",
            "1bc8952274b1a9331d8cf96eb3c2c016d95bd0f4"
        ],
        [
            "by case: U k f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unionE f1 f2 : union f1 f2 = to (UM.union (from f1) (from f2)).",
            "VernacStartTheoremProof",
            "f6441f1ee94257ded4629e50fd1d86c2e457bb70"
        ],
        [
            "by case: U f1 f2=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_filterE q f : um_filter q f = to (UM.um_filter q (from f)).",
            "VernacStartTheoremProof",
            "29878a0a903f50afefce0d0c4f7ccbfd7d92fa15"
        ],
        [
            "by case: U q f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbE f : empb f = UM.empb (from f).",
            "VernacStartTheoremProof",
            "86118bf64225c8947f0d91f52c61e91da6d614f3"
        ],
        [
            "by case: U f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefbE f : undefb f = UM.undefb (from f).",
            "VernacStartTheoremProof",
            "d5cd615cfaf969e32900c90320bfc258d21adfbc"
        ],
        [
            "by case: U f=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptsE k v : pts k v = to (UM.pts (cond U) k v).",
            "VernacStartTheoremProof",
            "8b5efd007158361beaf1d02f3c4db5e04b725d6d"
        ],
        [
            "by case: U k v=>x [p][*].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Notation union_map_class := type.",
            "VernacSyntacticDefinition",
            "3fbe704aac62ce79a96397309fa0e5e026b8480e"
        ],
        [
            "Notation UMCMixin := Mixin.",
            "VernacSyntacticDefinition",
            "df6f3d351bdee0b1d2643f324cf7d18176d655c6"
        ],
        [
            "Notation UMC T m := (@pack _ _ T _ m).",
            "VernacSyntacticDefinition",
            "1266c32570010952a056d2ff42fe8e5a3ef958f6"
        ],
        [
            "Notation \"[ 'umcMixin' 'of' T ]\" := (mixin (class _ _ _ : class_of T)) (at level 0, format \"[ 'umcMixin' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "2d070b11f9e6a2c76810ca7d1041ef59dd8e281f"
        ],
        [
            "Notation \"[ 'um_class' 'of' T 'for' C ]\" := (@clone _ _ T C _ id) (at level 0, format \"[ 'um_class' 'of' T 'for' C ]\") : form_scope.",
            "VernacNotation",
            "3fc4e40f34090b9153e85ed8b10064a9be265e90"
        ],
        [
            "Notation \"[ 'um_class' 'of' T ]\" := (@clone _ _ T _ _ id) (at level 0, format \"[ 'um_class' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "c66a93259ec462fc4ce02577072f51d9ac93d181"
        ],
        [
            "Notation cond := cond.",
            "VernacSyntacticDefinition",
            "a068303a00801b1d702b789d2e81dca94a1f7082"
        ],
        [
            "Notation um_undef := um_undef.",
            "VernacSyntacticDefinition",
            "7727c62d9c6861c9ab0f50cfc0fac24d7bffd997"
        ],
        [
            "Notation upd := upd.",
            "VernacSyntacticDefinition",
            "f516e1d320d1468e9479e13ed703ff9570b09331"
        ],
        [
            "Notation dom := dom.",
            "VernacSyntacticDefinition",
            "0e9ad2305da7769353991be42935eba8c49d18b5"
        ],
        [
            "Notation dom_eq := dom_eq.",
            "VernacSyntacticDefinition",
            "fb178c80c740a99f67063be97c3c97c5914677f0"
        ],
        [
            "Notation free := free.",
            "VernacSyntacticDefinition",
            "da4ca0a003af2b3d465170582c5a4c252bb3632f"
        ],
        [
            "Notation find := find.",
            "VernacSyntacticDefinition",
            "e013634e16b054edbe494daaa9c79d5af2e9a3f1"
        ],
        [
            "Notation um_filter := um_filter.",
            "VernacSyntacticDefinition",
            "1fe91c82c9a8bbba61528102f922f2822dde551d"
        ],
        [
            "Notation empb := empb.",
            "VernacSyntacticDefinition",
            "2e82b2f2a724443154f4ba8ea9b374849c9d75f9"
        ],
        [
            "Notation undefb := undefb.",
            "VernacSyntacticDefinition",
            "60559a85df087ddc3152eaddcd32d8582cb0a59d"
        ],
        [
            "Notation pts := pts.",
            "VernacSyntacticDefinition",
            "22f38d011710021a915776a76c9f9cca6be8f489"
        ],
        [
            "Definition umEX := (ftE, tfE, eqE, undefE, defE, emptyE, updE, domE, dom_eqE, freeE, findE, unionE, um_filterE, empbE, undefbE, ptsE, UM.umapE).",
            "VernacDefinition",
            "6af20c55f20e9d81f34b69823b07e56def7e51a6"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End UMC.",
            "VernacEndSegment",
            "96e24611aa960600bf4ab8e9eb856cbe464e76b1"
        ],
        [
            "Export UMC.Exports.",
            "VernacImport",
            "3705e536568f6ff76a3bc0d83ada2f762d0100d1"
        ],
        [
            "Module UnionMapClassPCM.",
            "VernacDefineModule",
            "93a6835e7fa5616c3e43bcac4cdb0327a8b06ad5"
        ],
        [
            "Section UnionMapClassPCM.",
            "VernacBeginSection",
            "5028b9e20e2d1b3104cddfd2af664aa6d8a69337"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Type f : U.",
            "VernacReserve",
            "1c2948d2dfe60715de7038f99869ca83f2ad4999"
        ],
        [
            "Local Notation \"f1 \\+ f2\" := (@UMC.union _ _ _ f1 f2) (at level 43, left associativity).",
            "VernacNotation",
            "e74763e59c607918b634f0d579ab2cd7222f4cc5"
        ],
        [
            "Local Notation valid := (@UMC.defined _ _ U).",
            "VernacSyntacticDefinition",
            "5265abe2ab41a58be180e4d8ad391deb0dd2c79c"
        ],
        [
            "Local Notation unit := (@UMC.empty _ _ U).",
            "VernacSyntacticDefinition",
            "7b19e4301da682bcc6a4bf1b90db08431df47efe"
        ],
        [
            "Lemma joinC f1 f2 : f1 \\+ f2 = f2 \\+ f1.",
            "VernacStartTheoremProof",
            "e66984f753627eb54517ccaed0695d734aea8051"
        ],
        [
            "rewrite !umEX /UM.union.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1)=>[|f1' H1]; case: (UMC.from f2)=>[|f2' H2] //.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by case: ifP=>E; rewrite disjC E // fcatC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinCA f1 f2 f3 : f1 \\+ (f2 \\+ f3) = f2 \\+ (f1 \\+ f3).",
            "VernacStartTheoremProof",
            "9c68c59dec71258485908dedb9e2b844486f31ce"
        ],
        [
            "rewrite !umEX /UM.union /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2) (UMC.from f3)=>[|f1' H1][|f2' H2][|f3' H3] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case E1: (disj f2' f3'); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case E2: (disj f1' f3')=>//; rewrite disj_fcat E1 andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite disj_fcat andbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case E2: (disj f1' f3')=>//; rewrite disj_fcat (disjC f2') E1 /= andbT.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case E3: (disj f1' f2')=>//; rewrite fcatAC // E1 E2 E3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinA f1 f2 f3 : f1 \\+ (f2 \\+ f3) = (f1 \\+ f2) \\+ f3.",
            "VernacStartTheoremProof",
            "69a2689115f897b6968c630d96da3bfb11d12a8b"
        ],
        [
            "by rewrite (joinC f2) joinCA joinC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validL f1 f2 : valid (f1 \\+ f2) -> valid f1.",
            "VernacStartTheoremProof",
            "174c239b8404cba9bc925a29fefc49805c4d8a48"
        ],
        [
            "by rewrite !umEX; case: (UMC.from f1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitL f : unit \\+ f = f.",
            "VernacStartTheoremProof",
            "9bdee2110f9e0c1c8d9b317554abeb1c6650ce63"
        ],
        [
            "rewrite -[f]UMC.tfE !umEX /UM.union /UM.empty.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[//|f' H]; rewrite disjC disj_nil fcat0s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validU : valid unit.",
            "VernacStartTheoremProof",
            "34b659acc0a7301a90d9e932d3a60e8a7573f052"
        ],
        [
            "by rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnionMapClassPCM.",
            "VernacEndSegment",
            "97a4e857e6177ceecca971183797a0aa79ac9ab2"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Definition union_map_classPCMMix := PCMMixin (@joinC K V U) (@joinA K V U) (@unitL K V U) (@validL K V U) (validU U).",
            "VernacDefinition",
            "b7b8f78d91dd20620b4a5a45fbe6f74937725ce5"
        ],
        [
            "Canonical union_map_classPCM := Eval hnf in PCM U union_map_classPCMMix.",
            "VernacDefinition",
            "50e1bb79fed142c157419f5b6096a394611f713f"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End UnionMapClassPCM.",
            "VernacEndSegment",
            "97a4e857e6177ceecca971183797a0aa79ac9ab2"
        ],
        [
            "Export UnionMapClassPCM.Exports.",
            "VernacImport",
            "07a05db8516982fb79373dde3b3f016e266f067a"
        ],
        [
            "Module UnionMapClassCPCM.",
            "VernacDefineModule",
            "29a2bfcb1056aeadb240a823e33b18923fd38398"
        ],
        [
            "Section Cancelativity.",
            "VernacBeginSection",
            "de334a435487ed9973fd879ad29e3535596319ef"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Type f : U.",
            "VernacReserve",
            "1c2948d2dfe60715de7038f99869ca83f2ad4999"
        ],
        [
            "Lemma joinKf f1 f2 f : valid (f1 \\+ f) -> f1 \\+ f = f2 \\+ f -> f1 = f2.",
            "VernacStartTheoremProof",
            "fc7c81ce36ec2b0fe831193af4d0f2e04fc7ea74"
        ],
        [
            "rewrite -{3}[f1]UMC.tfE -{2}[f2]UMC.tfE !pcmE /= !umEX /UM.valid /UM.union.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f) (UMC.from f1) (UMC.from f2)=> [|f' H]; case=>[|f1' H1]; case=>[|f2' H2] //; case: ifP=>//; case: ifP=>// D1 D2 _ E.",
            "VernacExtend",
            "3315099480193c926ba462960d9f0d5ca419b136"
        ],
        [
            "by apply: fcatsK E; rewrite D1 D2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Cancelativity.",
            "VernacEndSegment",
            "389934ae54b6e41d1f3fbee5b0e6b594d740028e"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Definition union_map_classCPCMMix := CPCMMixin (@joinKf K V U).",
            "VernacDefinition",
            "d8937827464b8194ffd7ccc6702312cfd7b2caa7"
        ],
        [
            "Canonical union_map_classCPCM := Eval hnf in CPCM U union_map_classCPCMMix.",
            "VernacDefinition",
            "a52681abe8eceece02b15c3d2e09752aeaf5392f"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End UnionMapClassCPCM.",
            "VernacEndSegment",
            "48e4cf135d9446b6cada4629e573b5bb6198cf14"
        ],
        [
            "Export UnionMapClassCPCM.Exports.",
            "VernacImport",
            "78ea116eb7e98e674b8185c5fae5b00f3f9253db"
        ],
        [
            "Module UnionMapEq.",
            "VernacDefineModule",
            "d050ece12ac393d0aaff821600e64273829fd27f"
        ],
        [
            "Section UnionMapEq.",
            "VernacBeginSection",
            "ed19b748356424cb0e23bc5b0cf153f493d4222c"
        ],
        [
            "Variables (K : ordType) (V : eqType) (p : pred K).",
            "VernacAssumption",
            "5c4968e789e2d4e227fed8bf26d2c0ddfff2f378"
        ],
        [
            "Variables (T : Type) (m : @UMC.mixin_of K V p T).",
            "VernacAssumption",
            "52d11cf38b1208976f1933581563c082fa4e7a1c"
        ],
        [
            "Definition unionmap_eq (f1 f2 : UMC T m) := match (UMC.from f1), (UMC.from f2) with | UM.Undef, UM.Undef => true | UM.Def f1' pf1, UM.Def f2' pf2 => f1' == f2' | _, _ => false end.",
            "VernacDefinition",
            "3cfc6bed66993cd1ccec5370798670e1b4cfc6bb"
        ],
        [
            "Lemma unionmap_eqP : Equality.axiom unionmap_eq.",
            "VernacStartTheoremProof",
            "ae134e25061dd24e6fc3866a4c2f630f30d35ab9"
        ],
        [
            "move=>x y; rewrite -{1}[x]UMC.tfE -{1}[y]UMC.tfE /unionmap_eq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: (UMC.from x)=>[|f1 H1]; case: (UMC.from y)=>[|f2 H2] /=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by constructor; move/(@UMC.eqE _ _ (UMC T m)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by constructor; move/(@UMC.eqE _ _ (UMC T m)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: eqP=>E; constructor; rewrite (@UMC.eqE _ _ (UMC T m)).",
            "VernacExtend",
            "2d56c942035865c5f6f26dbcc47b477f811d515c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite UM.umapE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnionMapEq.",
            "VernacEndSegment",
            "47c88fed96e117c0db51f8ac704687ea4729e574"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Variables (K : ordType) (V : eqType) (p : pred K).",
            "VernacAssumption",
            "5c4968e789e2d4e227fed8bf26d2c0ddfff2f378"
        ],
        [
            "Variables (T : Type) (m : @UMC.mixin_of K V p T).",
            "VernacAssumption",
            "52d11cf38b1208976f1933581563c082fa4e7a1c"
        ],
        [
            "Definition union_map_class_eqMix := EqMixin (@unionmap_eqP K V p T m).",
            "VernacDefinition",
            "3c5361c5737417a1e3f53be08170cba4d634dec4"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End UnionMapEq.",
            "VernacEndSegment",
            "47c88fed96e117c0db51f8ac704687ea4729e574"
        ],
        [
            "Export UnionMapEq.Exports.",
            "VernacImport",
            "bba672509800cc1c29cd42866211785927af9eec"
        ],
        [
            "Section DomLemmas.",
            "VernacBeginSection",
            "fa2e4b79fc11ea74a36ec45a83ddd8431d481822"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f g : U).",
            "VernacReserve",
            "cec78d04d01c7853f093601b8ec9f5352a45450a"
        ],
        [
            "Lemma dom_undef : dom (um_undef : U) = [::].",
            "VernacStartTheoremProof",
            "d4e99ae88ca97aa4e87db62ec6be6f5b02a9a050"
        ],
        [
            "by rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom0 : dom (Unit : U) = [::].",
            "VernacStartTheoremProof",
            "73f6e2d83a92ae79d51c83a53b4dfd994703db68"
        ],
        [
            "by rewrite pcmE /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom0E f : valid f -> dom f =i pred0 -> f = Unit.",
            "VernacStartTheoremProof",
            "1b489fd81e30c7ce5471379df7abc732faa0eee3"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.dom /UM.empty -{3}[f]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' S] //= _; rewrite !umEX fmapE /= {S}.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case: f'; case=>[|kv s] //= P /= /(_ kv.1); rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domU k v f : dom (upd k v f) =i [pred x | cond U k & if x == k then valid f else x \\in dom f].",
            "VernacStartTheoremProof",
            "0f4e00750e5e7de849c4557d0a7e3a9d5fe4bf03"
        ],
        [
            "rewrite pcmE /= !umEX /UM.dom /UM.upd /UM.valid /= /cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' H] /= x.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !inE /= andbC; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: decP; first by move=>->; rewrite supp_ins.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/(introF idP)=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domF k f : dom (free k f) =i [pred x | if k == x then false else x \\in dom f].",
            "VernacStartTheoremProof",
            "5da46b26d3edf852e0dfe12a598c7faf16b55bf6"
        ],
        [
            "rewrite !umEX; case: (UMC.from f)=>[|f' H] x; rewrite inE /=; by case: ifP=>// E; rewrite supp_rem inE /= eq_sym E.",
            "VernacExtend",
            "3a1c884d67b73cc2d8610889c94b3a9c60759a6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domUn f1 f2 : dom (f1 \\+ f2) =i [pred x | valid (f1 \\+ f2) & (x \\in dom f1) || (x \\in dom f2)].",
            "VernacStartTheoremProof",
            "bbb4e37e71143cded34b40a0af25389eea97adfa"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.dom /UM.valid /UM.union.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' H1] // [|f2' H2] // x.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: ifP=>E //; rewrite supp_fcat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_valid k f : k \\in dom f -> valid f.",
            "VernacStartTheoremProof",
            "0751d876ecf2566149ce35f63ff468a3eba89a80"
        ],
        [
            "by rewrite pcmE /= !umEX; case: (UMC.from f).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_cond k f : k \\in dom f -> cond U k.",
            "VernacStartTheoremProof",
            "b03e0b6fd3d7d8c7e8c933cab337caaa1156b3b0"
        ],
        [
            "by rewrite !umEX; case: (UMC.from f)=>[|f' F] // /(allP F).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_inIL k f1 f2 : valid (f1 \\+ f2) -> k \\in dom f1 -> k \\in dom (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "2f5dbb0ed2f6e64a582832a69cf6da1f1fbc50db"
        ],
        [
            "by rewrite domUn inE => ->->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_inIR k f1 f2 : valid (f1 \\+ f2) -> k \\in dom f2 -> k \\in dom (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "6e4d663dc20574247cc5e782e61a4ea53e6693ee"
        ],
        [
            "by rewrite joinC; apply: dom_inIL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_NNL k f1 f2 : valid (f1 \\+ f2) -> k \\notin dom (f1 \\+ f2) -> k \\notin dom f1.",
            "VernacStartTheoremProof",
            "0a18f832f4df503503794585b48b52b072e55059"
        ],
        [
            "by move=> D; apply/contra/dom_inIL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_NNR k f1 f2 : valid (f1 \\+ f2) -> k \\notin dom (f1 \\+ f2) -> k \\notin dom f2.",
            "VernacStartTheoremProof",
            "dbdfd1a0188704bc1f6fb3a05e0c65ccddf01a2b"
        ],
        [
            "by move=> D; apply/contra/dom_inIR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_free k f : k \\notin dom f -> free k f = f.",
            "VernacStartTheoremProof",
            "9cde1d8ab136bfbc70827e8bdb546df6c44e116f"
        ],
        [
            "rewrite -{3}[f]UMC.tfE !umEX /UM.dom /UM.free.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' H] //; apply: rem_supp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "CoInductive dom_find_spec k f : bool -> Type := | dom_find_none' : find k f = None -> dom_find_spec k f false | dom_find_some' v : find k f = Some v -> f = upd k v (free k f) -> dom_find_spec k f true.",
            "VernacInductive",
            "7bd6322b619cd7d14ea0fe6c8d059c9d9040054c"
        ],
        [
            "Lemma dom_find k f : dom_find_spec k f (k \\in dom f).",
            "VernacStartTheoremProof",
            "c69a421d82627125384ffc1c20273a572a658152"
        ],
        [
            "rewrite !umEX /UM.dom -{1}[f]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' H].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: dom_find_none'; rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: suppP (allP H k)=>[v|] H1 I; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: dom_find_none'; rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: (dom_find_some' (v:=v)); rewrite !umEX // /UM.upd /UM.free.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "case: decP=>H2; last by rewrite I in H2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/fmapP=>k'; rewrite fnd_ins.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: ifP=>[/eqP-> //|]; rewrite fnd_rem => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_some k v f : find k f = Some v -> k \\in dom f.",
            "VernacStartTheoremProof",
            "c972cc93dda98108d08f39dbffafe7128573b25f"
        ],
        [
            "by case: dom_find=>// ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_none k f : find k f = None -> k \\notin dom f.",
            "VernacStartTheoremProof",
            "32d9bdcf4a0aac3a4692bd486e195f034f53f09e"
        ],
        [
            "by case: dom_find=>// v ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_umfilt p f : dom (um_filter p f) =i [predI p & dom f].",
            "VernacStartTheoremProof",
            "9b5abe24d020777007efd5dae811cd8a584317d0"
        ],
        [
            "rewrite !umEX /UM.dom /UM.um_filter.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' H] x; first by rewrite !inE /= andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite supp_kfilt mem_filter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_prec f1 f2 g1 g2 : valid (f1 \\+ g1) -> f1 \\+ g1 = f2 \\+ g2 -> dom f1 =i dom f2 -> f1 = f2.",
            "VernacStartTheoremProof",
            "827ce7f71c7a4f85f0ae51020ca0efe895a928ee"
        ],
        [
            "rewrite -{4}[f1]UMC.tfE -{3}[f2]UMC.tfE !pcmE /= !umEX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /UM.valid /UM.union /UM.dom; move=>D E.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2) (UMC.from g1) (UMC.from g2) E D=> [|f1' F1][|f2' F2][|g1' G1][|g2' G2] //; case: ifP=>// D1; case: ifP=>// D2 E _ E1; apply/fmapP=>k.",
            "VernacExtend",
            "94fed8f996d92a6628ade93b3a674a3e677b4b98"
        ],
        [
            "move/(_ k): E1=>E1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case E2: (k \\in supp f2') in E1; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/negbT/fnd_supp: E1=>->; move/negbT/fnd_supp: E2=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff L: forall m s, k \\in supp m -> disj m s -> fnd k m = fnd k (fcat m s) :> option V.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (L _ _ E1 D1) (L _ _ E2 D2) E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>m s S; case: disjP=>//; move/(_ _ S)/negbTE; rewrite fnd_fcat=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domK f1 f2 g1 g2 : valid (f1 \\+ g1) -> valid (f2 \\+ g2) -> dom (f1 \\+ g1) =i dom (f2 \\+ g2) -> dom f1 =i dom f2 -> dom g1 =i dom g2.",
            "VernacStartTheoremProof",
            "d89746f87dcf2d8572bf9ee73657f3090cddd8a8"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.union /UM.dom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2) (UMC.from g1) (UMC.from g2)=> [|f1' F1][|f2' F2][|g1' G1][|g2' G2] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: disjP=>// D1 _; case: disjP=>// D2 _ E1 E2 x.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "move: {E1 E2} (E2 x) (E1 x); rewrite !supp_fcat !inE /= => E.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: {D1 D2} E (D1 x) (D2 x)=><- /implyP D1 /implyP D2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case _ : (x \\in supp f1') => //= in D1 D2 *.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move/negbTE: D1=>->; move/negbTE: D2=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_dom f1 f2 : valid (f1 \\+ f2) -> um_filter (mem (dom f1)) (f1 \\+ f2) = f1.",
            "VernacStartTheoremProof",
            "42337fa38aac3a2a81cc0617c1ddf7197da1b797"
        ],
        [
            "rewrite -{4}[f1]UMC.tfE !pcmE /= !umEX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /UM.valid /UM.union /UM.um_filter /UM.dom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ifP=>// D _; rewrite kfilt_fcat /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have E1: {in supp f1', supp f1' =i predT} by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have E2: {in supp f2', supp f1' =i pred0}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x; rewrite disjC in D; case: disjP D=>// D _ /D /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (eq_in_kfilter E1) (eq_in_kfilter E2).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite kfilter_predT kfilter_pred0 fcats0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_dom f : sorted (@ord K) (dom f).",
            "VernacStartTheoremProof",
            "248d5b396d0780df7d0a6109bcc865a2884c9754"
        ],
        [
            "by rewrite !umEX; case: (UMC.from f)=>[|[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_dom f : uniq (dom f).",
            "VernacStartTheoremProof",
            "133bc58af72d3b78a0b59258de29e1637c4c4d87"
        ],
        [
            "apply: sorted_uniq (sorted_dom f); by [apply: ordtype.trans | apply: ordtype.irr].",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_domUn f1 f2 : valid (f1 \\+ f2) -> perm_eq (dom (f1 \\+ f2)) (dom f1 ++ dom f2).",
            "VernacStartTheoremProof",
            "d9fb5b34297c15e8d0fb8f33733f536a90f2304c"
        ],
        [
            "move=>Vh; apply: uniq_perm_eq; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x; rewrite mem_cat domUn inE Vh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: uniq_dom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite cat_uniq !uniq_dom /= andbT; apply/hasPn=>x.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.union /UM.dom in Vh *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2) Vh=>// f1' H1 [//|f2' H2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: disjP=>// H _; apply: contraL (H x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_domUn f1 f2 : valid (f1 \\+ f2) -> size (dom (f1 \\+ f2)) = size (dom f1) + size (dom f2).",
            "VernacStartTheoremProof",
            "fdfa674fedf9e856550595ddaedf3e08d600da21"
        ],
        [
            "by move/perm_domUn/perm_eq_size; rewrite size_cat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DomLemmas.",
            "VernacEndSegment",
            "31b7b9ba6aea8b92c369b087e7bd9227e8075926"
        ],
        [
            "Hint Resolve sorted_dom uniq_dom : core.",
            "VernacHints",
            "1ff28b7a5940cca79d1d646032fb2f8b5d079620"
        ],
        [
            "Prenex Implicits find_some find_none.",
            "VernacExtend",
            "2b21f9318b1ede815200f6ed7a915e7a6507f217"
        ],
        [
            "Section FilterLemmas.",
            "VernacBeginSection",
            "99ee11b00db2d936eeed581fade29e4a96402ec9"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Type f : U.",
            "VernacReserve",
            "1c2948d2dfe60715de7038f99869ca83f2ad4999"
        ],
        [
            "Lemma eq_in_umfilt p1 p2 f : {in dom f, p1 =1 p2} -> um_filter p1 f = um_filter p2 f.",
            "VernacStartTheoremProof",
            "c22cdce2b2d304edf6199e2e17816c5bde3c4aa1"
        ],
        [
            "rewrite !umEX /UM.dom /UM.um_filter /= /dom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' H] //=; apply: eq_in_kfilter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt0 q : um_filter q Unit = Unit :> U.",
            "VernacStartTheoremProof",
            "2119d832b1825288e49f51eb6045ead883970ec1"
        ],
        [
            "by rewrite !pcmE /= !umEX /UM.um_filter /UM.empty kfilt_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_undef q : um_filter q um_undef = um_undef :> U.",
            "VernacStartTheoremProof",
            "38d419922310021ff1ddb1bbe3b3fe33569fc776"
        ],
        [
            "by rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltUn q f1 f2 : valid (f1 \\+ f2) -> um_filter q (f1 \\+ f2) = um_filter q f1 \\+ um_filter q f2.",
            "VernacStartTheoremProof",
            "18d416b1d656e4c56bd60e112cf3ed8fc6e9765e"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.union.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1)=>[|f1' H1]; case: (UMC.from f2)=>[|f2' H2] //=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by case: ifP=>D //= _; rewrite kfilt_fcat disj_kfilt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_pred0 f : valid f -> um_filter pred0 f = Unit.",
            "VernacStartTheoremProof",
            "af830c1504bd7f56c1ebd5aea40ed4e530544497"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.empty.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' H] //= _; case: f' H=>f' P H.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "by rewrite fmapE /= /kfilter' filter_pred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_predT f : um_filter predT f = f.",
            "VernacStartTheoremProof",
            "ca00ce00001b667c86fd01c82880656e1afba669"
        ],
        [
            "rewrite -[f]UMC.tfE !umEX /UM.um_filter.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' H] //; rewrite kfilter_predT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_predI p1 p2 f : um_filter (predI p1 p2) f = um_filter p1 (um_filter p2 f).",
            "VernacStartTheoremProof",
            "8dc7ab0a4a2307a97b2d0cae0b456d93794ef7be"
        ],
        [
            "rewrite -[f]UMC.tfE !umEX /UM.um_filter.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' H] //; rewrite kfilter_predI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_predU p1 p2 f : um_filter (predU p1 p2) f = um_filter p1 f \\+ um_filter (predD p2 p1) f.",
            "VernacStartTheoremProof",
            "4b41833249f2c6c53d3dd9f8c6bf7c50c99561a5"
        ],
        [
            "rewrite pcmE /= !umEX /UM.um_filter /UM.union /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' H] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite in_disj_kfilt; last by move=>x _; rewrite /= negb_and orbA orbN.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -kfilter_predU.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: eq_in_kfilter=>x _; rewrite /= orb_andr orbN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_dpredU f p q : {subset p <= predC q} -> um_filter (predU p q) f = um_filter p f \\+ um_filter q f.",
            "VernacStartTheoremProof",
            "f853fefe86c522240cdd88ba93055de7d835bd91"
        ],
        [
            "move=>D; rewrite umfilt_predU (eq_in_umfilt (p1:=predD q p) (p2:=q)) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move=>k _ /=; case X : (p k)=>//=; move/D/negbTE: X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltUnK p f1 f2 : valid (f1 \\+ f2) -> um_filter p (f1 \\+ f2) = f1 -> um_filter p f1 = f1 /\\ um_filter p f2 = Unit.",
            "VernacStartTheoremProof",
            "323b0698ac32b714a5fb6278b47c1b282cd2a0a5"
        ],
        [
            "move=>V'; rewrite (umfiltUn _ V') => E.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have {V'} V' : valid (um_filter p f1 \\+ um_filter p f2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite E; move/validL: V'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F : dom (um_filter p f1) =i dom f1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>x; rewrite dom_umfilt inE /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply/andP/idP=>[[//]| H1]; split=>//; move: H1.",
            "VernacExtend",
            "d75c2b7093da3254bf6211456cd2e96580f4cabc"
        ],
        [
            "rewrite -{1}E domUn inE /= !dom_umfilt inE /= inE /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (x \\in p)=>//=; rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{2}[f1]unitR in E F; move/(dom_prec V' E): F=>X.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by rewrite X in E V' *; rewrite (joinxK V' E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltU p k v f : um_filter p (upd k v f) = if p k then upd k v (um_filter p f) else if cond U k then um_filter p f else um_undef.",
            "VernacStartTheoremProof",
            "fba373d7395e2efd50b4ba6f7fce9a0ccc376294"
        ],
        [
            "rewrite !umEX /UM.um_filter /UM.upd /cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by case: ifP=>H1 //; case: ifP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>H1; case: decP=>H2 //=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !umEX kfilt_ins H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite H2 !umEX kfilt_ins H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: ifP H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltF p k f : um_filter p (free k f) = if p k then free k (um_filter p f) else um_filter p f.",
            "VernacStartTheoremProof",
            "85930a1b6f578aa87f59494df571acf2a9afb2ba"
        ],
        [
            "rewrite !umEX /UM.um_filter /UM.free.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' F]; case: ifP=>// E; rewrite !umEX kfilt_rem E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FilterLemmas.",
            "VernacEndSegment",
            "9d76d8fb6b35636b37cb89d71de10a3af5ad151a"
        ],
        [
            "Section ValidLemmas.",
            "VernacBeginSection",
            "757584e91403dac2ed47a2bbf9a4c70a49034d5e"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f g : U).",
            "VernacReserve",
            "cec78d04d01c7853f093601b8ec9f5352a45450a"
        ],
        [
            "Lemma invalidE f : ~~ valid f <-> f = um_undef.",
            "VernacStartTheoremProof",
            "1b75444fadaeca8450655aa82f325559ebe5c978"
        ],
        [
            "by rewrite !pcmE /= !umEX -2![f]UMC.tfE !umEX; case: (UMC.from f).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_undef : valid (um_undef : U) = false.",
            "VernacStartTheoremProof",
            "53c9d869281d3729239f911930a6c19cc51e96ae"
        ],
        [
            "by apply/negbTE; apply/invalidE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validU k v f : valid (upd k v f) = cond U k && valid f.",
            "VernacStartTheoremProof",
            "686b35f2cff903ba5b98b6ce6423c48d66eae7c4"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.upd /cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: decP=>[|/(introF idP)] ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validF k f : valid (free k f) = valid f.",
            "VernacStartTheoremProof",
            "2758c547f9a6e6206e7178c00d9b54400fe5c573"
        ],
        [
            "by rewrite !pcmE /= !umEX; case: (UMC.from f).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "CoInductive validUn_spec f1 f2 : bool -> Type := | valid_false1 of ~~ valid f1 : validUn_spec f1 f2 false | valid_false2 of ~~ valid f2 : validUn_spec f1 f2 false | valid_false3 k of k \\in dom f1 & k \\in dom f2 : validUn_spec f1 f2 false | valid_true of valid f1 & valid f2 & (forall x, x \\in dom f1 -> x \\notin dom f2) : validUn_spec f1 f2 true.",
            "VernacInductive",
            "0d9607abf8b4ce3714986856aad1efda9e371d7e"
        ],
        [
            "Lemma validUn f1 f2 : validUn_spec f1 f2 (valid (f1 \\+ f2)).",
            "VernacStartTheoremProof",
            "c71a2146440f2980aa8488b917139419c0d854f7"
        ],
        [
            "rewrite !pcmE /= !umEX -{1}[f1]UMC.tfE -{1}[f2]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /UM.valid /UM.union /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: valid_false1; rewrite pcmE /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: valid_false1; rewrite pcmE /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: valid_false2; rewrite pcmE /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP=>E.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: valid_true; try by rewrite !pcmE /= !umEX.",
            "VernacExtend",
            "04f36fb90226571591691114239c3303d9fa2968"
        ],
        [
            "by move=>k; rewrite !umEX => H; case: disjP E=>//; move/(_ _ H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: disjP E=>// k T1 T2 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply: (valid_false3 (k:=k)); rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validFUn k f1 f2 : valid (f1 \\+ f2) -> valid (free k f1 \\+ f2).",
            "VernacStartTheoremProof",
            "873d5049d749e16deeb3645ad3acc254f8f82064"
        ],
        [
            "case: validUn=>// V1 V2 H _; case: validUn=>//; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>k'; rewrite domF inE; case: eqP=>// _ /H/negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite validF V1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite V2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnF k f1 f2 : valid (f1 \\+ f2) -> valid (f1 \\+ free k f2).",
            "VernacStartTheoremProof",
            "bd86562c0d1c66978bce747a5e299cc6b9bcf5e6"
        ],
        [
            "by rewrite !(joinC f1); apply: validFUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnU k v f1 f2 : k \\in dom f2 -> valid (f1 \\+ upd k v f2) = valid (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "e0ad78c79178e54118249638ee43e599ea657b57"
        ],
        [
            "move=>D; apply/esym; move: D; case: validUn.",
            "VernacExtend",
            "aaa887e23dd2b95a287078812fee84eea952079f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>V' _; apply/esym/negbTE; apply: contra V'; move/validL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>V' _; apply/esym/negbTE; apply: contra V'; move/validR.",
            "VernacExtend",
            "29765d52d1ebc7805de64975ff26cf4e34248a22"
        ],
        [
            "by rewrite validU; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>k' H1 H2 _; case: validUn=>//; rewrite validU => D1 /andP [/= H D2].",
            "VernacExtend",
            "898083afbcb7f48eb38b81893aabf115193d46fd"
        ],
        [
            "by move/(_ k' H1); rewrite domU !inE H D2 H2; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>V1 V2 H1 H2; case: validUn=>//.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite V1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU V2 (dom_cond H2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k'; rewrite domU (dom_cond H2) inE /= V2; move/H1=>H3.",
            "VernacExtend",
            "40075a671b142e70c4190413219df8981418e910"
        ],
        [
            "by rewrite (negbTE H3); case: ifP H2 H3=>// /eqP ->->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUUn k v f1 f2 : k \\in dom f1 -> valid (upd k v f1 \\+ f2) = valid (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "7a45b9f6b152b1bb40b777970c65059b4359ec78"
        ],
        [
            "by move=>D; rewrite -!(joinC f2); apply: validUnU D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_umfilt p f : valid (um_filter p f) = valid f.",
            "VernacStartTheoremProof",
            "cbe5a8d96e874bb6a8ba484b1bf74d662d25a41d"
        ],
        [
            "by rewrite !pcmE /= !umEX; case: (UMC.from f).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_inNL k f1 f2 : valid (f1 \\+ f2) -> k \\in dom f1 -> k \\notin dom f2.",
            "VernacStartTheoremProof",
            "bf07bdda7d3dec05d5243a0d74f5389fb2bb094a"
        ],
        [
            "by case: validUn=>//_ _ H _; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_inNR k f1 f2 : valid (f1 \\+ f2) -> k \\in dom f2 -> k \\notin dom f1.",
            "VernacStartTheoremProof",
            "00e566ac1f2394da2685906407d098597b9a3ec3"
        ],
        [
            "by rewrite joinC; apply: dom_inNL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ValidLemmas.",
            "VernacEndSegment",
            "92b7f14b696a8505e6a0e69dd479900b95911075"
        ],
        [
            "Section DomEqLemmas.",
            "VernacBeginSection",
            "5f504d95d4bb62e7bec94282baeb6462310e58ce"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Type f : U.",
            "VernacReserve",
            "1c2948d2dfe60715de7038f99869ca83f2ad4999"
        ],
        [
            "Lemma domeqP f1 f2 : reflect (valid f1 = valid f2 /\\ dom f1 =i dom f2) (dom_eq f1 f2).",
            "VernacStartTheoremProof",
            "08da5aa91da1bf3696ca5469998ff973d345eceb"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.dom /UM.dom_eq /in_mem.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: eqP=>H; constructor; [rewrite H | case=>_ /suppE].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeq0E f : dom_eq f Unit -> f = Unit.",
            "VernacStartTheoremProof",
            "c22c4e1de343b8fadcd650ef42ed209f69f4024b"
        ],
        [
            "by case/domeqP; rewrite valid_unit dom0; apply: dom0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeq_refl f : dom_eq f f.",
            "VernacStartTheoremProof",
            "e4fffad0795d3aa9614c5b2602899d7e72359c89"
        ],
        [
            "by case: domeqP=>//; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve domeq_refl : core.",
            "VernacHints",
            "95e9722c5e1d2fafd3bc105c7f98d1afbc988bb2"
        ],
        [
            "Lemma domeq_sym f1 f2 : dom_eq f1 f2 = dom_eq f2 f1.",
            "VernacStartTheoremProof",
            "23601c3f73beaa594f0d5b26d85eba376dca6379"
        ],
        [
            "suff L f f' : dom_eq f f' -> dom_eq f' f by apply/idP/idP; apply: L.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case/domeqP=>H1 H2; apply/domeqP; split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeq_trans f1 f2 f3 : dom_eq f1 f2 -> dom_eq f2 f3 -> dom_eq f1 f3.",
            "VernacStartTheoremProof",
            "88a86f0b9a26efda866852854ece897fb955201c"
        ],
        [
            "case/domeqP=>E1 H1 /domeqP [E2 H2]; apply/domeqP=>//.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by split=>//; [rewrite E1 E2 | move=>x; rewrite H1 H2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqVUnE f1 f2 f1' f2' : dom_eq f1 f2 -> dom_eq f1' f2' -> valid (f1 \\+ f1') = valid (f2 \\+ f2').",
            "VernacStartTheoremProof",
            "f7ff491a52038ac3a3a57c056b01cf72876888fc"
        ],
        [
            "have L f f' g : dom_eq f f' -> valid (f \\+ g) -> valid (f' \\+ g).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/domeqP=>E F; case: validUn=>// Vg1 Vf H _; case: validUn=>//.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -E Vg1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite Vf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>x; rewrite -F; move/H/negbTE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>H H'; case X: (valid (f1 \\+ f1')); apply/esym.",
            "VernacExtend",
            "599696354cb09c8c644616c1d1d4983c13c50850"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/(L _ _ _ H): X; rewrite !(joinC f2); move/(L _ _ _ H').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domeq_sym in H; rewrite domeq_sym in H'.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "apply/negbTE; apply: contra (negbT X); move/(L _ _ _ H).",
            "VernacExtend",
            "6cee8938e4c92292ae66c56557669b6bd87a33e5"
        ],
        [
            "by rewrite !(joinC f1); move/(L _ _ _ H').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqVUn f1 f2 f1' f2' : dom_eq f1 f2 -> dom_eq f1' f2' -> valid (f1 \\+ f1') -> valid (f2 \\+ f2').",
            "VernacStartTheoremProof",
            "f144e020f0995624d604d1d9841e7c58ba0de3e1"
        ],
        [
            "by move=>D /(domeqVUnE D) ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqUn f1 f2 f1' f2' : dom_eq f1 f2 -> dom_eq f1' f2' -> dom_eq (f1 \\+ f1') (f2 \\+ f2').",
            "VernacStartTheoremProof",
            "dceb3751c4fb1c6d334de12623a64cb3a7b6380f"
        ],
        [
            "suff L f f' g : dom_eq f f' -> dom_eq (f \\+ g) (f' \\+ g).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>H H'; apply: domeq_trans (L _ _ _ H).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite !(joinC f1); apply: domeq_trans (L _ _ _ H').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>F; case/domeqP: (F)=>E H.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "apply/domeqP; split; first by apply: domeqVUnE F _.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>x; rewrite !domUn /= inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (domeqVUnE F (domeq_refl g)) H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqfUn f f1 f2 f1' f2' : dom_eq (f \\+ f1) f2 -> dom_eq f1' (f \\+ f2') -> dom_eq (f1 \\+ f1') (f2 \\+ f2').",
            "VernacStartTheoremProof",
            "df5e0999bb6b10863fcae8dbbd3f229e7f7fdf89"
        ],
        [
            "move=>D1 D2; apply: (domeq_trans (f2:=f1 \\+ f \\+ f2')).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -joinA; apply: domeqUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -joinA joinCA joinA; apply: domeqUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqUnf f f1 f2 f1' f2' : dom_eq f1 (f \\+ f2) -> dom_eq (f \\+ f1') f2' -> dom_eq (f1 \\+ f1') (f2 \\+ f2').",
            "VernacStartTheoremProof",
            "6e6bccdf5ca4c5b4cc35b19301c3e3f74f3d472e"
        ],
        [
            "by move=>D1 D2; rewrite (joinC f1) (joinC f2); apply: domeqfUn D2 D1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqK f1 f2 f1' f2' : valid (f1 \\+ f1') -> dom_eq (f1 \\+ f1') (f2 \\+ f2') -> dom_eq f1 f2 -> dom_eq f1' f2'.",
            "VernacStartTheoremProof",
            "71a4649bf5949e060a8a86d0d7eabdbacb979761"
        ],
        [
            "move=>V1 /domeqP [E1 H1] /domeqP [E2 H2]; move: (V1); rewrite E1=>V2.",
            "VernacExtend",
            "59558e378570fadf944f573c466a34c761bc9b23"
        ],
        [
            "apply/domeqP; split; first by rewrite (validR V1) (validR V2).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: domK V1 V2 H1 H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DomEqLemmas.",
            "VernacEndSegment",
            "d7cd232ca46661c3089ed225fe26210bb95bcac0"
        ],
        [
            "Hint Resolve domeq_refl : core.",
            "VernacHints",
            "95e9722c5e1d2fafd3bc105c7f98d1afbc988bb2"
        ],
        [
            "Section Precision.",
            "VernacBeginSection",
            "191c9d588bf17487ea336f11fcb07f0a2764e8ce"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (x y : U).",
            "VernacReserve",
            "6845f55f7968a3b91ef5050891113c6f7821c7cf"
        ],
        [
            "Lemma prec_flip x1 x2 y1 y2 : valid (x1 \\+ y1) -> x1 \\+ y1 = x2 \\+ y2 -> valid (y2 \\+ x2) /\\ y2 \\+ x2 = y1 \\+ x1.",
            "VernacStartTheoremProof",
            "33d92e4a8b4098ccce2ac9f2a201431184813b46"
        ],
        [
            "by move=>X /esym E; rewrite joinC E X joinC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prec_domV x1 x2 y1 y2 : valid (x1 \\+ y1) -> x1 \\+ y1 = x2 \\+ y2 -> reflect {subset dom x1 <= dom x2} (valid (x1 \\+ y2)).",
            "VernacStartTheoremProof",
            "24f798f4db472ba4e433970a1d003d402b2c3f8e"
        ],
        [
            "move=>V1 E; case V12 : (valid (x1 \\+ y2)); constructor.",
            "VernacExtend",
            "7f98ab22c7975b25dc038296df5607aecc708bb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>n Hs; have : n \\in dom (x1 \\+ y1) by rewrite domUn inE V1 Hs.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite E domUn inE -E V1 /= orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: validUn V12 Hs=>// _ _ L _ /L /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>Hs; case: validUn V12=>//.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (validL V1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite E in V1; rewrite (validR V1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>k /Hs; rewrite E in V1; case: validUn V1=>// _ _ L _ /L /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prec_filtV x1 x2 y1 y2 : valid (x1 \\+ y1) -> x1 \\+ y1 = x2 \\+ y2 -> reflect (x1 = um_filter (mem (dom x1)) x2) (valid (x1 \\+ y2)).",
            "VernacStartTheoremProof",
            "508f5b6b3a001e464c9446dd7b72eac3c4e5e955"
        ],
        [
            "move=>V1 E; case X : (valid (x1 \\+ y2)); constructor; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (prec_domV V1 E) X=>// St _ H; apply: St.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "by move=>n; rewrite H dom_umfilt inE; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (umfilt_dom V1); rewrite E umfiltUn -?E //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite (eq_in_umfilt (f:=y2) (p2:=pred0)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite umfilt_pred0 ?unitR //; rewrite E in V1; rewrite (validR V1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>n; case: validUn X=>// _ _ L _ /(contraL (L _)) /negbTE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Precision.",
            "VernacEndSegment",
            "2063b20f2b54f3f81126a14701a44b751da838cd"
        ],
        [
            "Section UpdateLemmas.",
            "VernacBeginSection",
            "dc3e253fb9d45dca09ad39ebc1e0ce61daca510a"
        ],
        [
            "Variable (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma upd_invalid k v : upd k v um_undef = um_undef :> U.",
            "VernacStartTheoremProof",
            "d1b8840b00946086b8b51008206907f06ea379da"
        ],
        [
            "by rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upd_inj k v1 v2 f : valid f -> cond U k -> upd k v1 f = upd k v2 f -> v1 = v2.",
            "VernacStartTheoremProof",
            "2105bc33481a4713276ae04a3c50ce02eeb81b3a"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.upd /cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F] // _; case: decP=>// H _ E.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "have: fnd k (ins k v1 f') = fnd k (ins k v2 f') by rewrite E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !fnd_ins eq_refl; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updU k1 k2 v1 v2 f : upd k1 v1 (upd k2 v2 f) = if k1 == k2 then upd k1 v1 f else upd k2 v2 (upd k1 v1 f).",
            "VernacStartTheoremProof",
            "f195aff0ca7547c8eb8ce4476c4d47603f10772f"
        ],
        [
            "rewrite !umEX /UM.upd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' H']; case: ifP=>// E; case: decP=>H1; case: decP=>H2 //; rewrite !umEX.",
            "VernacExtend",
            "23c38f3c3298320bf3245e48a170856c10a6530f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite ins_ins E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eqP E) in H2 *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ins_ins E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updF k1 k2 v f : upd k1 v (free k2 f) = if k1 == k2 then upd k1 v f else free k2 (upd k1 v f).",
            "VernacStartTheoremProof",
            "ac7f2880d04eada0e6304675d55c662985b8b388"
        ],
        [
            "rewrite !umEX /UM.dom /UM.upd /UM.free.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F] //; case: ifP=>// H1; by case: decP=>H2 //; rewrite !umEX ins_rem H1.",
            "VernacExtend",
            "05928a9db4d7951ab20c19816b8485c23bd4e06c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updUnL k v f1 f2 : upd k v (f1 \\+ f2) = if k \\in dom f1 then upd k v f1 \\+ f2 else f1 \\+ upd k v f2.",
            "VernacStartTheoremProof",
            "398c3c3724087f22e26fca541ea4300f39f7ed75"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.upd /UM.union /UM.dom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: ifP=>//; case: decP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP=>// D; case: ifP=>// H1; case: decP=>// H2.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite disjC disj_ins disjC D !umEX; case: disjP D=>// H _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite (H _ H1) /= fcat_inss // (H _ H1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite disj_ins H1 D /= !umEX fcat_sins.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite disjC disj_ins disjC D andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite disj_ins D andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updUnR k v f1 f2 : upd k v (f1 \\+ f2) = if k \\in dom f2 then f1 \\+ upd k v f2 else upd k v f1 \\+ f2.",
            "VernacStartTheoremProof",
            "3b27297b782d550ecb631fd87a9de9dab7d5a19a"
        ],
        [
            "by rewrite joinC updUnL (joinC f1) (joinC f2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UpdateLemmas.",
            "VernacEndSegment",
            "5df5ef57d591e9aaf213c3c35c8aaf220902083e"
        ],
        [
            "Section FreeLemmas.",
            "VernacBeginSection",
            "697ab8a884679a8ad178f3b3805e07d51d56f133"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma free0 k : free k Unit = Unit :> U.",
            "VernacStartTheoremProof",
            "232d41f47bf5f0d42ebd05505a8bf6e537d1f61f"
        ],
        [
            "by rewrite !pcmE /= !umEX /UM.free /UM.empty rem_empty.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeU k1 k2 v f : free k1 (upd k2 v f) = if k1 == k2 then if cond U k2 then free k1 f else um_undef else upd k2 v (free k1 f).",
            "VernacStartTheoremProof",
            "c47df5f7fa5d80ad8a14874bf3e7fc8b6512774c"
        ],
        [
            "rewrite !umEX /UM.free /UM.upd /cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by case: ifP=>H1 //; case: ifP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>H1; case: decP=>H2 //=.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite H2 !umEX rem_ins H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: ifP H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite !umEX rem_ins H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeF k1 k2 f : free k1 (free k2 f) = if k1 == k2 then free k1 f else free k2 (free k1 f).",
            "VernacStartTheoremProof",
            "55853947880138521861d29019180681de589cb9"
        ],
        [
            "rewrite !umEX /UM.free.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' F]; case: ifP=>// E; rewrite !umEX rem_rem E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUn k f1 f2 : free k (f1 \\+ f2) = if k \\in dom (f1 \\+ f2) then free k f1 \\+ free k f2 else f1 \\+ f2.",
            "VernacStartTheoremProof",
            "30d8286a57a946fc24d67772f99c3489c867781f"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.free /UM.union /UM.dom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ifP=>// E1; rewrite supp_fcat inE /=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: ifP=>E2; last by rewrite !umEX rem_supp // supp_fcat inE E2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite disj_rem; last by rewrite disjC disj_rem // disjC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !umEX; case/orP: E2=>E2.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "suff E3: k \\notin supp f2' by rewrite -fcat_rems // (rem_supp E3).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: disjP E1 E2=>// H _; move/H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff E3: k \\notin supp f1' by rewrite -fcat_srem // (rem_supp E3).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: disjP E1 E2=>// H _; move/contra: (H k); rewrite negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnV k f1 f2 : valid (f1 \\+ f2) -> free k (f1 \\+ f2) = free k f1 \\+ free k f2.",
            "VernacStartTheoremProof",
            "04a59b68eed3630bb5f5146385a7039b3c55daae"
        ],
        [
            "move=>V'; rewrite freeUn domUn V' /=; case: ifP=>//.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by move/negbT; rewrite negb_or; case/andP=>H1 H2; rewrite !dom_free.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnL k f1 f2 : k \\notin dom f1 -> free k (f1 \\+ f2) = f1 \\+ free k f2.",
            "VernacStartTheoremProof",
            "32be448c1db2b141966a6aa7692e38377350efa2"
        ],
        [
            "move=>V1; rewrite freeUn domUn inE (negbTE V1) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case: ifP; first by case/andP; rewrite dom_free.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/negbT; rewrite negb_and; case/orP=>V2; last by rewrite dom_free.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "suff: ~~ valid (f1 \\+ free k f2) by move/invalidE: V2=>-> /invalidE ->.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "apply: contra V2; case: validUn=>// H1 H2 H _.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "case: validUn=>//; first by rewrite H1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: H2; rewrite validF => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>x H3; move: (H _ H3); rewrite domF inE /=.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "by case: ifP H3 V1=>[|_ _ _]; [move/eqP=><- -> | move/negbTE=>->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnR k f1 f2 : k \\notin dom f2 -> free k (f1 \\+ f2) = free k f1 \\+ f2.",
            "VernacStartTheoremProof",
            "47a5c65814c298a3ec13380c48bcc7f1655f9432"
        ],
        [
            "by move=>H; rewrite joinC freeUnL // joinC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_umfilt p k f : free k (um_filter p f) = if p k then um_filter p (free k f) else um_filter p f.",
            "VernacStartTheoremProof",
            "557ca7a4333135167aafb17c1d0757d083dbc0ee"
        ],
        [
            "rewrite !umEX /UM.free /UM.um_filter.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; case: ifP=>// E; rewrite !umEX.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite kfilt_rem E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rem_kfilt E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FreeLemmas.",
            "VernacEndSegment",
            "6a13e5a561f17cefdb35d5e2aab0759582a4c13c"
        ],
        [
            "Section FindLemmas.",
            "VernacBeginSection",
            "e263932970d4daeb1b72b291c6cbef21f9b80d9b"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma find0E k : find k (Unit : U) = None.",
            "VernacStartTheoremProof",
            "6a986cc1caea113b9df484694a0b79a57f0ed7b2"
        ],
        [
            "by rewrite pcmE /= !umEX /UM.find /= fnd_empty.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_undef k : find k (um_undef : U) = None.",
            "VernacStartTheoremProof",
            "0de9250deebac6718541538d685bbd39178c9417"
        ],
        [
            "by rewrite !umEX /UM.find.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_cond k f : ~~ cond U k -> find k f = None.",
            "VernacStartTheoremProof",
            "64aa8a4c056b72d93ba3d9c1e46fc79576b5b21a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !umEX /UM.find; case: (UMC.from f)=>[|f' F] // H.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "suff: k \\notin supp f' by case: suppP.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply: contra H; case: allP F=>// F _ /F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findU k1 k2 v f : find k1 (upd k2 v f) = if k1 == k2 then if cond U k2 && valid f then Some v else None else if cond U k2 then find k1 f else None.",
            "VernacStartTheoremProof",
            "e798f3651cf6642c76f6f7d9d293ef33f7d9861f"
        ],
        [
            "rewrite pcmE /= !umEX /UM.valid /UM.find /UM.upd /cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by rewrite andbF !if_same.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: decP=>H; first by rewrite H /= fnd_ins.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (introF idP H) /= if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findF k1 k2 f : find k1 (free k2 f) = if k1 == k2 then None else find k1 f.",
            "VernacStartTheoremProof",
            "88a6e0729091e8f7522bdc679d1f3da48de53e32"
        ],
        [
            "rewrite !umEX /UM.find /UM.free.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by rewrite if_same.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite fnd_rem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findUnL k f1 f2 : valid (f1 \\+ f2) -> find k (f1 \\+ f2) = if k \\in dom f1 then find k f1 else find k f2.",
            "VernacStartTheoremProof",
            "91bceeac9ce3f431b67a1a61576f799dbcbf9d89"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.find /UM.union /UM.dom.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: ifP=>// D _; case: ifP=>E1; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite fnd_fcat; case: ifP=>// E2.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite fnd_supp ?E1 // fnd_supp ?E2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff E2: k \\notin supp f2' by rewrite fnd_fcat (negbTE E2).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: disjP D E1=>// H _; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findUnR k f1 f2 : valid (f1 \\+ f2) -> find k (f1 \\+ f2) = if k \\in dom f2 then find k f2 else find k f1.",
            "VernacStartTheoremProof",
            "36ccc05f2e0cedc4cd553631e305606b0682eea2"
        ],
        [
            "by rewrite joinC=>D; rewrite findUnL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_eta f1 f2 : valid f1 -> valid f2 -> (forall k, find k f1 = find k f2) -> f1 = f2.",
            "VernacStartTheoremProof",
            "45f317aba865897dd25e7e48b23d7d049c5817fc"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.find -{2 3}[f1]UMC.tfE -{2 3}[f2]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] // _ _ H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite !umEX; apply/fmapP=>k; move: (H k); rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_umfilt p k f : find k (um_filter p f) = if p k then find k f else None.",
            "VernacStartTheoremProof",
            "fdbde86b0463f69ef356ea93ef8d81086abb0a25"
        ],
        [
            "rewrite !umEX /UM.find /UM.um_filter.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by rewrite if_same.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite fnd_kfilt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FindLemmas.",
            "VernacEndSegment",
            "727339b5541ce06cddef05477c9d8a5c408e4a61"
        ],
        [
            "Lemma domeq_eta (K : ordType) (U : union_map_class K unit) (f1 f2 : U) : dom_eq f1 f2 -> f1 = f2.",
            "VernacStartTheoremProof",
            "f4695d228030b2dfc0791e28809281d8dc78fbf2"
        ],
        [
            "case/domeqP=>V E; case V1 : (valid f1); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: V1 (V1); rewrite {1}V; do 2![move/negbT/invalidE=>->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: find_eta=>//; first by rewrite -V.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>k; case D : (k \\in dom f1); move: D (D); rewrite {1}E.",
            "VernacExtend",
            "d1fbbc79c31c0ffc576ecac0185c7792ab1d7dac"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by do 2![case: dom_find=>// [[-> _]]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by do 2![case: dom_find=>// ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section EmpbLemmas.",
            "VernacBeginSection",
            "d3f4d8bd00f5825e12f04a50ec3b00f43c9e82b8"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma empb_undef : empb (um_undef : U) = false.",
            "VernacStartTheoremProof",
            "903e6c57b7c325b0e1fa2032ff38b698762dffd9"
        ],
        [
            "by rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbP f : reflect (f = Unit) (empb f).",
            "VernacStartTheoremProof",
            "752887ec4f0b4df2c199c6cf6b1988b7cf6d4d92"
        ],
        [
            "rewrite pcmE /= !umEX /UM.empty /UM.empb -{1}[f]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F]; first by apply: ReflectF; rewrite !umEX.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: eqP=>E; constructor; rewrite !umEX.",
            "VernacExtend",
            "2d56c942035865c5f6f26dbcc47b477f811d515c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/supp_nilE: E=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>H; rewrite H in E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbU k v f : empb (upd k v f) = false.",
            "VernacStartTheoremProof",
            "a99d66ae82fdea1faaaeb901bca8c851a5487637"
        ],
        [
            "rewrite !umEX /UM.empb /UM.upd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F] //; case: decP=>// H.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "suff: k \\in supp (ins k v f') by case: (supp _).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite supp_ins inE /= eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbUn f1 f2 : empb (f1 \\+ f2) = empb f1 && empb f2.",
            "VernacStartTheoremProof",
            "1f22e761dfb59f04d71b7feaa049aa5ba762def2"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.empb /UM.union.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP=>E; case: eqP=>E1; case: eqP=>E2 //; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: E2 E1; move/supp_nilE=>->; rewrite fcat0s; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: E1 E2 E; do 2![move/supp_nilE=>->]; case: disjP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/supp_nilE: E2 E1=>-> <-; rewrite fcat0s eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [k H3]: exists k, k \\in supp f1'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (supp f1') {E1 E} E2=>[|x s _] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists x; rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff: k \\in supp (fcat f1' f2') by rewrite E1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite supp_fcat inE /= H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbE f : f = Unit <-> empb f.",
            "VernacStartTheoremProof",
            "dcf54b03431575e5dc72f671944dad5990b78ed6"
        ],
        [
            "by case: empbP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empb0 : empb (Unit : U).",
            "VernacStartTheoremProof",
            "529f08293ed16793e9b3355ec489d783fced884d"
        ],
        [
            "by apply/empbE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join0E f1 f2 : f1 \\+ f2 = Unit <-> f1 = Unit /\\ f2 = Unit.",
            "VernacStartTheoremProof",
            "d832e70d34aaeceb99083f9f977aa5bf96cfbafb"
        ],
        [
            "by rewrite !empbE empbUn; case: andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validEb f : reflect (valid f /\\ forall k, k \\notin dom f) (empb f).",
            "VernacStartTheoremProof",
            "2131cf2aac380dd4c203d2078e116ded864a0ba4"
        ],
        [
            "case: empbP=>E; constructor; first by rewrite E valid_unit dom0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>V' H; apply: E; move: V' H.",
            "VernacExtend",
            "93a4251ace9142d2e02904d95040f1ebdf1b4c36"
        ],
        [
            "rewrite !pcmE /= !umEX /UM.valid /UM.dom /UM.empty -{3}[f]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F] // _ H; rewrite !umEX.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply/supp_nilE; case: (supp f') H=>// x s /(_ x).",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite inE eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnEb f : valid (f \\+ f) = empb f.",
            "VernacStartTheoremProof",
            "0d8c48d22aca2681da40c24d4c6b20edca23f06b"
        ],
        [
            "case E: (empb f); first by move/empbE: E=>->; rewrite unitL valid_unit.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: validUn=>// V' _ L; case: validEb E=>//; case; split=>// k.",
            "VernacExtend",
            "d74aaada141c338c690aecb6aa2f1ff3a6dfadaa"
        ],
        [
            "by case E: (k \\in dom f)=>//; move: (L k E); rewrite E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empb_umfilt p f : empb f -> empb (um_filter p f).",
            "VernacStartTheoremProof",
            "d0f2041a738d329b2d05bc1f816a71a00187695b"
        ],
        [
            "rewrite !umEX /UM.empb /UM.um_filter.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>[|f' F] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move/eqP/supp_nilE=>->; rewrite kfilt_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EmpbLemmas.",
            "VernacEndSegment",
            "e1831803893d5d2e8fc79ce2e8cb92b8c698ae96"
        ],
        [
            "Section UndefLemmas.",
            "VernacBeginSection",
            "131bdac2d91431cc936a7e97d3d8a5fe0d71d057"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma undefb_undef : undefb (um_undef : U).",
            "VernacStartTheoremProof",
            "1dd8881fb6a9b9385b4e8bc61a3b01188c9be55b"
        ],
        [
            "by rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefbP f : reflect (f = um_undef) (undefb f).",
            "VernacStartTheoremProof",
            "782ab37a327fe80d729496002d3bc1b0efcb88b0"
        ],
        [
            "rewrite !umEX /UM.undefb -{1}[f]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (UMC.from f)=>[|f' F]; constructor; rewrite !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefbE f : f = um_undef <-> undefb f.",
            "VernacStartTheoremProof",
            "3db64c7097529d0780869afd88a9c044036ccb76"
        ],
        [
            "by case: undefbP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_undefL f : um_undef \\+ f = um_undef.",
            "VernacStartTheoremProof",
            "f748c695e3157c4d194f0d3d6bb4d300f734216a"
        ],
        [
            "by rewrite /PCM.join /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_undefR f : f \\+ um_undef = um_undef.",
            "VernacStartTheoremProof",
            "4016a2fe509af39bd4d44255b3a186a3d72f91ba"
        ],
        [
            "by rewrite joinC join_undefL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UndefLemmas.",
            "VernacEndSegment",
            "5e2002861d59086b774dc7ee7a3b2586b445eecd"
        ],
        [
            "Section AllDefLemmas.",
            "VernacBeginSection",
            "e56518869dc71a529250d4587689331084b4176f"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V) (P : V -> Prop).",
            "VernacAssumption",
            "f63c6011a739064cdaa67adddcc36f224deb98c9"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Definition um_all f := forall k v, find k f = Some v -> P v.",
            "VernacDefinition",
            "0d4176ea09ebd02491b12fa9d8cc1a0b7190c5a4"
        ],
        [
            "Lemma umall_undef : um_all um_undef.",
            "VernacStartTheoremProof",
            "24eced9813060bbafa8801f39ff71048209d4e8e"
        ],
        [
            "by move=>k v; rewrite find_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve umall_undef : core.",
            "VernacHints",
            "2e57be37dd2ce01f5758bbd09ece7f233cffbdea"
        ],
        [
            "Lemma umall0 : um_all Unit.",
            "VernacStartTheoremProof",
            "714914ee79357dc5f4b8bf4f8f83931c450e3662"
        ],
        [
            "by move=>k v; rewrite find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallUn f1 f2 : um_all f1 -> um_all f2 -> um_all (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "ab210c52af6357e91bd4bc3d8ecbee764ad2f1bd"
        ],
        [
            "case W : (valid (f1 \\+ f2)); last by move/invalidE: (negbT W)=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>X Y k v; rewrite findUnL //; case: ifP=>_; [apply: X|apply: Y].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallUnL f1 f2 : valid (f1 \\+ f2) -> um_all (f1 \\+ f2) -> um_all f1.",
            "VernacStartTheoremProof",
            "2dda41aae2ad5ec6a05d82d84ff91d618276fa77"
        ],
        [
            "by move=>W H k v F; apply: (H k v); rewrite findUnL // (find_some F).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallUnR f1 f2 : valid (f1 \\+ f2) -> um_all (f1 \\+ f2) -> um_all f2.",
            "VernacStartTheoremProof",
            "12c5a130cc2c9918aa24b4a59a57bded29bea13f"
        ],
        [
            "by rewrite joinC; apply: umallUnL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AllDefLemmas.",
            "VernacEndSegment",
            "ab893c556ec59fc86a03d56dd83758141be15cdf"
        ],
        [
            "Hint Resolve umall_undef umall0 : core.",
            "VernacHints",
            "e3c1c32862aec826e388a4bd3fe69f3b3f280069"
        ],
        [
            "Section Interaction.",
            "VernacBeginSection",
            "72bf668afbfd83f5471e422925ccb3bbb721eb21"
        ],
        [
            "Variables (K : ordType) (A : Type) (U : union_map_class K A).",
            "VernacAssumption",
            "dc88d2dc9ce21023f592685923e4aee82a57c5ad"
        ],
        [
            "Implicit Types (x y a b : U) (p q : pred K).",
            "VernacReserve",
            "7044740ca7e80f3521def8095e4622258b1c0ccc"
        ],
        [
            "Lemma subdom_umfilt x p : {subset dom (um_filter p x) <= p}.",
            "VernacStartTheoremProof",
            "928616143908d131ab3c6bf8cf9cff7909939c35"
        ],
        [
            "by move=>a; rewrite dom_umfilt; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_indomE x p : {subset dom x <= p} = {in dom x, p =1 predT}.",
            "VernacStartTheoremProof",
            "09c8b17cc89a0ebc5e5156608e361413194af65b"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_umfiltE x p : {subset dom x <= p} <-> um_filter p x = x.",
            "VernacStartTheoremProof",
            "f4196b49922541bdf88ca10eb319297171b97793"
        ],
        [
            "split; last by move=><- a; rewrite dom_umfilt; case/andP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/eq_in_umfilt=>->; rewrite umfilt_predT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfilt_memdomE x : um_filter (mem (dom x)) x = x.",
            "VernacStartTheoremProof",
            "1db1f2a076aa9147642cb51d649df52f56fe4968"
        ],
        [
            "by apply/subdom_umfiltE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_disjE p q : {subset p <= predC q} <-> [predI p & q] =1 pred0.",
            "VernacStartTheoremProof",
            "0ac78530eb04ff82eb55e072d09705bb11fe61d1"
        ],
        [
            "split=>H a /=; first by case X: (a \\in p)=>//; move/H/negbTE: X.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>D; move: (H a); rewrite inE /= D; move/negbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_disjC p q : {subset p <= predC q} <-> {subset q <= predC p}.",
            "VernacStartTheoremProof",
            "b819c1f1ad40d913bf8b8f6b19b71de1a961e7d8"
        ],
        [
            "by split=>H a; apply: contraL (H a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_subdom x y : valid (x \\+ y) -> {subset dom x <= [predC dom y]}.",
            "VernacStartTheoremProof",
            "f1a2ab326634484fec7157e6dabfb4835d8d1185"
        ],
        [
            "by case: validUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_valid x y : {subset dom x <= [predC dom y]} -> valid x -> valid y -> valid (x \\+ y).",
            "VernacStartTheoremProof",
            "9ac6aa05157b0583322555c77a1780bdebe35536"
        ],
        [
            "by move=>H X Y; case: validUn; rewrite ?X ?Y=>// k /H /negbTE /= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_umfilt0 x p : valid x -> {subset dom x <= predC p} <-> um_filter p x = Unit.",
            "VernacStartTheoremProof",
            "d28fb40e420d236d6866f5f276161660ad04f55a"
        ],
        [
            "move=>V; split=>H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eq_in_umfilt (p2:=pred0)) ?umfilt_pred0 // => a /H /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k X; case: dom_find X H=>// a _ -> _; rewrite umfiltU !inE.",
            "VernacExtend",
            "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
        ],
        [
            "by case: ifP=>// _ /empbE; rewrite /= empbU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Interaction.",
            "VernacEndSegment",
            "f6853d2efca6979136bf9167dbb3ef82779cf620"
        ],
        [
            "Section UmpleqLemmas.",
            "VernacBeginSection",
            "dfefcfc5e34dee9a2b634890a6240ba8628509db"
        ],
        [
            "Variables (K : ordType) (A : Type) (U : union_map_class K A).",
            "VernacAssumption",
            "dc88d2dc9ce21023f592685923e4aee82a57c5ad"
        ],
        [
            "Implicit Types (x y a b : U) (p : pred K).",
            "VernacReserve",
            "3289feb0e227c0c727dd91cc2c3f1e0f4cbbf5f0"
        ],
        [
            "Lemma umpleq_undef x : [pcm x <= um_undef].",
            "VernacStartTheoremProof",
            "ce7a6bb6c690f7ad50d6ea7adcdcc0122df7892d"
        ],
        [
            "by exists um_undef; rewrite join_undefR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve umpleq_undef : core.",
            "VernacHints",
            "aed19c3e0016c6f4b547be23f6d59c4cd548e8f9"
        ],
        [
            "Lemma umpleq_asym x y : [pcm x <= y] -> [pcm y <= x] -> x = y.",
            "VernacStartTheoremProof",
            "1b5c5556a696449cdae971692f135d66bccef316"
        ],
        [
            "case=>a -> [b]; case V : (valid x); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/invalidE: (negbT V)=>->; rewrite join_undefL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1 2}[x]unitR -joinA in V *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/(joinxK V)/esym/join0E=>->; rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_filt2 x y p : [pcm x <= y] -> [pcm um_filter p x <= um_filter p y].",
            "VernacStartTheoremProof",
            "171515df3e7b44cc3aa5cc4986ee313902d22764"
        ],
        [
            "move=>H; case V : (valid y).",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: H V=>a -> V; rewrite umfiltUn //; eexists _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/invalidE: (negbT V)=>->; rewrite umfilt_undef; apply: umpleq_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_filtI x p : [pcm um_filter p x <= x].",
            "VernacStartTheoremProof",
            "d22ac56c86327027791c1968688ceb003fd448a9"
        ],
        [
            "exists (um_filter (predD predT p) x); rewrite -umfilt_predU.",
            "VernacExtend",
            "6f660e8a44dbb7494fde6b6235a29816855ba19c"
        ],
        [
            "by rewrite -{1}[x]umfilt_predT; apply: eq_in_umfilt=>a; rewrite /= orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve umpleq_filtI : core.",
            "VernacHints",
            "83605645b756a0231af9e401f86cf7d73e6b094d"
        ],
        [
            "Lemma umpleq_filtE a x : valid x -> [pcm a <= x] <-> um_filter (mem (dom a)) x = a.",
            "VernacStartTheoremProof",
            "7fdfd246b7512618538f0bbefce7d35b55557a77"
        ],
        [
            "by move=>V; split=>[|<-] // H; case: H V=>b ->; apply: umfilt_dom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_filt_meet a x p : {subset dom a <= p} -> [pcm a <= x] -> [pcm a <= um_filter p x].",
            "VernacStartTheoremProof",
            "70a3b6dfbc3f505a409147ba8928efd08d83f660"
        ],
        [
            "by move=>D /(umpleq_filt2 p); rewrite (eq_in_umfilt D) umfilt_predT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_join x a b : valid (a \\+ b) -> [pcm a <= x] -> [pcm b <= x] -> [pcm a \\+ b <= x].",
            "VernacStartTheoremProof",
            "d06c73e2525dec56883c4235e04a1a456564af1e"
        ],
        [
            "case Vx : (valid x); last by move/invalidE: (negbT Vx)=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>V /(umpleq_filtE _ Vx) <- /(umpleq_filtE _ Vx) <-.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite -umfilt_dpredU //; apply: valid_subdom V.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_subdom x y : valid y -> [pcm x <= y] -> {subset dom x <= dom y}.",
            "VernacStartTheoremProof",
            "31d382dbb971a8ff12cd669816cb870c1b42f6f0"
        ],
        [
            "by move=>V H; case: H V=>a -> V b D; rewrite domUn inE V D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subdom_umpleq a x y : valid (x \\+ y) -> [pcm a <= x \\+ y] -> {subset dom a <= dom x} -> [pcm a <= x].",
            "VernacStartTheoremProof",
            "3ee07c9a09ec2e5ef8233de9d0e538772004adad"
        ],
        [
            "move=>V H Sx; move: (umpleq_filt_meet Sx H); rewrite umfiltUn //.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "rewrite umfilt_memdomE; move/subset_disjC: (valid_subdom V).",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "by move/(subdom_umfilt0 _ (validR V))=>->; rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_meet a x y1 y2 : valid (x \\+ y1 \\+ y2) -> [pcm a <= x \\+ y1] -> [pcm a <= x \\+ y2] -> [pcm a <= x].",
            "VernacStartTheoremProof",
            "b6e3dc19a423f450658c520a61022e5c5073967b"
        ],
        [
            "move=>V H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have {V} [V1 V V2] : [/\\ valid (x \\+ y1), valid (y1 \\+ y2) & valid (x \\+ y2)].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (validL V); rewrite -joinA in V; rewrite (validR V).",
            "VernacExtend",
            "28d4a0fd202acc1c03d488729ef69db07a1b1b5b"
        ],
        [
            "by rewrite joinA joinAC in V; rewrite (validL V).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: subdom_umpleq (V1) (H1) _ => k D.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move: {D} (umpleq_subdom V1 H1 D) (umpleq_subdom V2 H2 D).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite !domUn !inE V1 V2 /=; case : (k \\in dom x)=>//=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: validUn V=>// _ _ L _ /L /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_some x1 x2 t s : valid x2 -> [pcm x1 <= x2] -> find t x1 = Some s -> find t x2 = Some s.",
            "VernacStartTheoremProof",
            "273ac8f1287792c55e72c599be049021a6e6ed44"
        ],
        [
            "by move=>V H; case: H V=>a -> V H; rewrite findUnL // (find_some H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umpleq_none x1 x2 t : valid x2 -> [pcm x1 <= x2] -> find t x2 = None -> find t x1 = None.",
            "VernacStartTheoremProof",
            "90315a508c6de31e09ab910737aab5ab9963aeee"
        ],
        [
            "by case E: (find t x1)=>[a|] // V H <-; rewrite (umpleq_some V H E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UmpleqLemmas.",
            "VernacEndSegment",
            "e6f8b98dad110e427da120a4e101956165434923"
        ],
        [
            "Section PointsToLemmas.",
            "VernacBeginSection",
            "759a53a37e218801bc346f42a7aad1b723bc4bf4"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma ptsU k v : pts k v = upd k v Unit :> U.",
            "VernacStartTheoremProof",
            "e93589adccdb4eecbef8aa9974796c8223f2b6df"
        ],
        [
            "by rewrite !pcmE /= !umEX /UM.pts /UM.upd; case: decP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPtK k v : dom (pts k v : U) = if cond U k then [:: k] else [::].",
            "VernacStartTheoremProof",
            "d03027edd5915262b57c522f73aca8f333770cf1"
        ],
        [
            "rewrite !umEX /= /UM.dom /supp /UM.pts /UM.upd /UM.empty /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case D : (decP _)=>[a|a] /=; rewrite ?a ?(introF idP a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPt k v : dom (pts k v : U) =i [pred x | cond U k & k == x].",
            "VernacStartTheoremProof",
            "8ea9cd11ef8468dc33a60d07c6aebfca41abe44f"
        ],
        [
            "by move=>x; rewrite ptsU domU !inE eq_sym valid_unit dom0; case: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validPt k v : valid (pts k v : U) = cond U k.",
            "VernacStartTheoremProof",
            "6d89d445042e687fe847c14fb031bc7f4b8ca4e9"
        ],
        [
            "by rewrite ptsU validU valid_unit andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqPt k v1 v2 : dom_eq (pts k v1 : U) (pts k v2).",
            "VernacStartTheoremProof",
            "57ece44c6ddbca2616803e6762924291b5b8f4c8"
        ],
        [
            "by apply/domeqP; rewrite !validPt; split=>// x; rewrite !domPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findPt k v : find k (pts k v : U) = if cond U k then Some v else None.",
            "VernacStartTheoremProof",
            "e7b5cae1f46ac9e2cedc67b2efac7887f33b7877"
        ],
        [
            "by rewrite ptsU findU eq_refl /= valid_unit andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findPt2 k1 k2 v : find k1 (pts k2 v : U) = if (k1 == k2) && cond U k2 then Some v else None.",
            "VernacStartTheoremProof",
            "60856024fa0c1b88a88c225b6af1a3dafd4605ad"
        ],
        [
            "by rewrite ptsU findU valid_unit andbT find0E; case: ifP=>//=; case: ifP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findPt_inv k1 k2 v w : find k1 (pts k2 v : U) = Some w -> [/\\ k1 = k2, v = w & cond U k2].",
            "VernacStartTheoremProof",
            "3b7cf534cd81bf5080924a8b35e98c88367b3284"
        ],
        [
            "rewrite ptsU findU; case: eqP; last by case: ifP=>//; rewrite find0E.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>->; rewrite valid_unit andbT; case: ifP=>// _ [->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freePt2 k1 k2 v : cond U k2 -> free k1 (pts k2 v : U) = if k1 == k2 then Unit else pts k2 v.",
            "VernacStartTheoremProof",
            "343a04e8046371c0192269f9e8bda0ee17f7fd1e"
        ],
        [
            "by move=>N; rewrite ptsU freeU free0 N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freePt k v : cond U k -> free k (pts k v : U) = Unit.",
            "VernacStartTheoremProof",
            "f8770ef19b793a08e1d3e83a7e2b4b2796e8bccb"
        ],
        [
            "by move=>N; rewrite freePt2 // eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancelPt k v1 v2 : valid (pts k v1 : U) -> pts k v1 = pts k v2 :> U -> v1 = v2.",
            "VernacStartTheoremProof",
            "213aaba9b8c3d1806e67c058c7d479dacc61bc45"
        ],
        [
            "by rewrite validPt !ptsU; apply: upd_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancelPt2 k1 k2 v1 v2 : valid (pts k1 v1 : U) -> pts k1 v1 = pts k2 v2 :> U -> (k1, v1) = (k2, v2).",
            "VernacStartTheoremProof",
            "fa668e93117c5b84143635363d124d96db8be04f"
        ],
        [
            "move=>H E; have : dom (pts k1 v1 : U) = dom (pts k2 v2 : U) by rewrite E.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite !domPtK -(validPt _ v1) -(validPt _ v2) -E H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case=>E'; rewrite -{k2}E' in E *; rewrite (cancelPt H E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updPt k v1 v2 : upd k v1 (pts k v2) = pts k v1 :> U.",
            "VernacStartTheoremProof",
            "62f71edd55917c896908ea5dbd9d5de6b0a3210c"
        ],
        [
            "by rewrite !ptsU updU eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbPt k v : empb (pts k v : U) = false.",
            "VernacStartTheoremProof",
            "784f68c7d5792ac063afdd4c0abda425cfa53d9a"
        ],
        [
            "by rewrite ptsU empbU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validPtUn k v f : valid (pts k v \\+ f) = [&& cond U k, valid f & k \\notin dom f].",
            "VernacStartTheoremProof",
            "6d03bd9b8ba5d9ff2ad0547d4b0fc2bce4f022a3"
        ],
        [
            "case: validUn=>//; last 1 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite validPt=>H1 -> H2; rewrite H1 (H2 k) //.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "by rewrite domPtK H1 inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validPt; move/negbTE=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/negbTE=>->; rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domPtK=>x; case: ifP=>// _.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "by rewrite inE=>/eqP ->->; rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnPt k v f : valid (f \\+ pts k v) = [&& cond U k, valid f & k \\notin dom f].",
            "VernacStartTheoremProof",
            "8b6cdb951744846dbc68c48b4f1e30381800e878"
        ],
        [
            "by rewrite joinC; apply: validPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validPtUn_cond k v f : valid (pts k v \\+ f) -> cond U k.",
            "VernacStartTheoremProof",
            "2f224947ca0395ecb4c4a5c00133bace084be643"
        ],
        [
            "by rewrite validPtUn; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnPt_cond k v f : valid (f \\+ pts k v) -> cond U k.",
            "VernacStartTheoremProof",
            "d93f14ae2aae0a6e1dea3bf7b11d5006b3acad31"
        ],
        [
            "by rewrite joinC; apply: validPtUn_cond.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validPtUnV k v f : valid (pts k v \\+ f) -> valid f.",
            "VernacStartTheoremProof",
            "79729c9403cabe0f16c5e419b7a3c0d67df164db"
        ],
        [
            "by rewrite validPtUn; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnPtV k v f : valid (f \\+ pts k v) -> valid f.",
            "VernacStartTheoremProof",
            "3fe8ed8dc1419659cfc129753c7aa3e8024a5c4e"
        ],
        [
            "by rewrite joinC; apply: validPtUnV.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validPtUnD k v f : valid (pts k v \\+ f) -> k \\notin dom f.",
            "VernacStartTheoremProof",
            "49d8db1c05662ddff23727e8055d1c9036d7c231"
        ],
        [
            "by rewrite validPtUn; case/and3P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validUnPtD k v f : valid (f \\+ pts k v) -> k \\notin dom f.",
            "VernacStartTheoremProof",
            "50ba4b297003e25cc77ff88a3135f15771b8c6a0"
        ],
        [
            "by rewrite joinC; apply: validPtUnD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPtUn k v f : dom (pts k v \\+ f) =i [pred x | valid (pts k v \\+ f) & (k == x) || (x \\in dom f)].",
            "VernacStartTheoremProof",
            "4c878a16a6f1e8f60426f28c09835852f46aab67"
        ],
        [
            "move=>x; rewrite domUn !inE !validPtUn domPt !inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -!andbA; case: (UMC.p _ k).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domUnPt k v f : dom (f \\+ pts k v) =i [pred x | valid (f \\+ pts k v) & (k == x) || (x \\in dom f)].",
            "VernacStartTheoremProof",
            "f8d0ec7402ee33a8dbd1dc49c3427d08c392d807"
        ],
        [
            "by rewrite joinC; apply: domPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domPtUnE k v f : k \\in dom (pts k v \\+ f) = valid (pts k v \\+ f).",
            "VernacStartTheoremProof",
            "67486fce13827af1eff8fa749d740b2be1a17801"
        ],
        [
            "by rewrite domPtUn inE eq_refl andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domUnPtE k v f : k \\in dom (f \\+ pts k v) = valid (f \\+ pts k v).",
            "VernacStartTheoremProof",
            "84b781e608cd582f1f56c365ca5a4adc8b9e2dbd"
        ],
        [
            "by rewrite joinC; apply: domPtUnE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma validxx f : valid (f \\+ f) -> dom f =i pred0.",
            "VernacStartTheoremProof",
            "0ad79f608a6be03d8645c2f962830248d2e2ab77"
        ],
        [
            "by case: validUn=>// _ _ L _ z; case: (_ \\in _) (L z)=>//; elim.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqPtUn k v1 v2 f1 f2 : dom_eq f1 f2 -> dom_eq (pts k v1 \\+ f1) (pts k v2 \\+ f2).",
            "VernacStartTheoremProof",
            "aaeb12bf6c8c56e1019398212b039749d55e0c4b"
        ],
        [
            "by apply: domeqUn=>//; apply: domeqPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domeqUnPt k v1 v2 f1 f2 : dom_eq f1 f2 -> dom_eq (f1 \\+ pts k v1) (f2 \\+ pts k v2).",
            "VernacStartTheoremProof",
            "4ea7c9a5de9de62966a57b419dd6d4934166091b"
        ],
        [
            "by rewrite (joinC f1) (joinC f2); apply: domeqPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findPtUn k v f : valid (pts k v \\+ f) -> find k (pts k v \\+ f) = Some v.",
            "VernacStartTheoremProof",
            "0b6d4caccb9a0f34ec3970a02ca9799278a16fc4"
        ],
        [
            "move=>V'; rewrite findUnL // domPt inE.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite ptsU findU eq_refl valid_unit (validPtUn_cond V').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findUnPt k v f : valid (f \\+ pts k v) -> find k (f \\+ pts k v) = Some v.",
            "VernacStartTheoremProof",
            "a91ccbb1f2abbcfddba63f189d2a455022403814"
        ],
        [
            "by rewrite joinC; apply: findPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findPtUn2 k1 k2 v f : valid (pts k2 v \\+ f) -> find k1 (pts k2 v \\+ f) = if k1 == k2 then Some v else find k1 f.",
            "VernacStartTheoremProof",
            "ca0865d511e00378f21df6240a60162febf7ddbc"
        ],
        [
            "move=>V'; rewrite findUnL // domPt inE eq_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite findPt2 (validPtUn_cond V') andbT /=; case: ifP=>// ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findUnPt2 k1 k2 v f : valid (f \\+ pts k2 v) -> find k1 (f \\+ pts k2 v) = if k1 == k2 then Some v else find k1 f.",
            "VernacStartTheoremProof",
            "7bd103eccdf196b7795834def116aa254e26d013"
        ],
        [
            "by rewrite joinC; apply: findPtUn2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freePtUn2 k1 k2 v f : valid (pts k2 v \\+ f) -> free k1 (pts k2 v \\+ f) = if k1 == k2 then f else pts k2 v \\+ free k1 f.",
            "VernacStartTheoremProof",
            "4db6e513c69cd8317e176b2d8a7305a29cb04a0a"
        ],
        [
            "move=>V'; rewrite freeUn domPtUn inE V' /= eq_sym.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite ptsU freeU (validPtUn_cond V') free0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP=>/= E; first by rewrite E unitL (dom_free (validPtUnD V')).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: ifP=>// N; rewrite dom_free // N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnPt2 k1 k2 v f : valid (f \\+ pts k2 v) -> free k1 (f \\+ pts k2 v) = if k1 == k2 then f else free k1 f \\+ pts k2 v.",
            "VernacStartTheoremProof",
            "640f2b09862c1b565c849f1fdc82ff2f83af3deb"
        ],
        [
            "by rewrite !(joinC _ (pts k2 v)); apply: freePtUn2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freePtUn k v f : valid (pts k v \\+ f) -> free k (pts k v \\+ f) = f.",
            "VernacStartTheoremProof",
            "6650b9ffd35b20407514be872b6c1010d80ac285"
        ],
        [
            "by move=>V'; rewrite freePtUn2 // eq_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeUnPt k v f : valid (f \\+ pts k v) -> free k (f \\+ pts k v) = f.",
            "VernacStartTheoremProof",
            "e27f0cb1fb5fbf01fd37c5fa5112dea0281a9b79"
        ],
        [
            "by rewrite joinC; apply: freePtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updPtUn k v1 v2 f : upd k v1 (pts k v2 \\+ f) = pts k v1 \\+ f.",
            "VernacStartTheoremProof",
            "97d5b24c223325c4d81e29e1abcb39f2270dddf7"
        ],
        [
            "case V1 : (valid (pts k v2 \\+ f)).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite updUnL domPt inE eq_refl updPt (validPtUn_cond V1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have V2 : valid (pts k v1 \\+ f) = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !validPtUn in V1 *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/negbT/invalidE: V1=>->; move/negbT/invalidE: V2=>->.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by apply: upd_invalid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updUnPt k v1 v2 f : upd k v1 (f \\+ pts k v2) = f \\+ pts k v1.",
            "VernacStartTheoremProof",
            "3fb96d5872d9fcc7416f847583922b5fb013481d"
        ],
        [
            "by rewrite !(joinC f); apply: updPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbPtUn k v f : empb (pts k v \\+ f) = false.",
            "VernacStartTheoremProof",
            "17eb2eb1b329bfcf08f538cfff211e8f16028cd5"
        ],
        [
            "by rewrite empbUn empbPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbUnPt k v f : empb (f \\+ pts k v) = false.",
            "VernacStartTheoremProof",
            "0229809e8042b0145b15fac93066eda5bbb81283"
        ],
        [
            "by rewrite joinC; apply: empbPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pts_undef k v1 v2 : pts k v1 \\+ pts k v2 = um_undef :> U.",
            "VernacStartTheoremProof",
            "18425f20121cbfca8ab8a8f06bcc95283130b525"
        ],
        [
            "apply/invalidE; rewrite validPtUn validPt domPt !negb_and negb_or eq_refl.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by case: (cond U k).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltPt p k v : um_filter p (pts k v : U) = if p k then pts k v else if cond U k then Unit else um_undef.",
            "VernacStartTheoremProof",
            "c6ce7a44ac70c52b9e9ff55eccb325c1c79d1bb3"
        ],
        [
            "by rewrite ptsU umfiltU umfilt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltPtUn p k v f : um_filter p (pts k v \\+ f) = if valid (pts k v \\+ f) then if p k then pts k v \\+ um_filter p f else um_filter p f else um_undef.",
            "VernacStartTheoremProof",
            "2e4f969d250dec2eef6366215cf037a0527a6b53"
        ],
        [
            "case: ifP=>X; last by move/invalidE: (negbT X)=>->; rewrite umfilt_undef.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite umfiltUn // umfiltPt (validPtUn_cond X).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ifP=>//; rewrite unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallPt (P : V -> Prop) k v : P v -> um_all P (pts k v : U).",
            "VernacStartTheoremProof",
            "3d8e51a54e33289bb0cf4fd1117e98d33aec549c"
        ],
        [
            "by move=>X u w /findPt_inv [_ <-].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallPtUn (P : V -> Prop) k v f : P v -> um_all P f -> um_all P (pts k v \\+ f).",
            "VernacStartTheoremProof",
            "b50090815d25ff1c25970139cfc19d5641bc4751"
        ],
        [
            "by move/(umallPt (k:=k)); apply: umallUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallPtE (P : V -> Prop) k v : cond U k -> um_all P (pts k v : U) -> P v.",
            "VernacStartTheoremProof",
            "b6bc4945702a222d8118954aabf3224b732de68a"
        ],
        [
            "by move=>C /(_ k v); rewrite findPt C; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umallPtUnE (P : V -> Prop) k v f : valid (pts k v \\+ f) -> um_all P (pts k v \\+ f) -> P v /\\ um_all P f.",
            "VernacStartTheoremProof",
            "416296ccd4af38c9d8585a5d5e9f9f469c39790d"
        ],
        [
            "move=>W H; move: (umallUnL W H) (umallUnR W H)=>{H} H1 H2.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by split=>//; apply: umallPtE H1; apply: validPtUn_cond W.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_eta k f : k \\in dom f -> exists v, find k f = Some v /\\ f = pts k v \\+ free k f.",
            "VernacStartTheoremProof",
            "351951ae4a72fcf3490d9cd928ff4e55faab80af"
        ],
        [
            "case: dom_find=>// v E1 E2 _; exists v; split=>//.",
            "VernacExtend",
            "a60465573b684d5ede0b6b76d2c8bb797e76b6d6"
        ],
        [
            "by rewrite {1}E2 -{1}[free k f]unitL updUnR domF inE /= eq_refl ptsU.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_eta2 k v f : find k f = Some v -> f = pts k v \\+ free k f.",
            "VernacStartTheoremProof",
            "d3d1ba11a0ef50b78babe655c9fcf0e970418e4c"
        ],
        [
            "by move=>E; case/um_eta: (find_some E)=>v' []; rewrite E; case=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel k v1 v2 f1 f2 : valid (pts k v1 \\+ f1) -> pts k v1 \\+ f1 = pts k v2 \\+ f2 -> [/\\ v1 = v2, valid f1 & f1 = f2].",
            "VernacStartTheoremProof",
            "46338e17227fadfb08d6fdeae9693e88056f4592"
        ],
        [
            "move=>V' E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have: find k (pts k v1 \\+ f1) = find k (pts k v2 \\+ f2) by rewrite E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !findPtUn -?E //; case=>X.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite -{}X in E *; rewrite -(joinxK V' E) (validR V').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cancel2 k1 k2 f1 f2 v1 v2 : valid (pts k1 v1 \\+ f1) -> pts k1 v1 \\+ f1 = pts k2 v2 \\+ f2 -> if k1 == k2 then v1 = v2 /\\ f1 = f2 else [/\\ free k1 f2 = free k2 f1, f1 = pts k2 v2 \\+ free k1 f2 & f2 = pts k1 v1 \\+ free k2 f1].",
            "VernacStartTheoremProof",
            "041421b3ddf35b648df33293e57bab31f8c314db"
        ],
        [
            "move=>V1 E; case: ifP=>X.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(eqP X) in E; case/(cancel V1): E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (V1); rewrite E => V2.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "have E' : f2 = pts k1 v1 \\+ free k2 f1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (erefl (free k2 (pts k1 v1 \\+ f1))).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite {2}E freeUn E domPtUn inE V2 eq_refl /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ptsU freeU eq_sym X free0 -ptsU freePtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff E'' : free k2 f1 = free k1 f2.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -E''; rewrite E' joinCA in E; case/(cancel V1): E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (erefl (free k1 f2)).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite {1}E' freePtUn // -E'; apply: (validR V2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_indf (P : U -> Prop) : P um_undef -> P Unit -> (forall k v f, P f -> valid (pts k v \\+ f) -> path ord k (dom f) -> P (pts k v \\+ f)) -> forall f, P f.",
            "VernacStartTheoremProof",
            "a3a68ad2ddde35fef5c9701f803e2fbba8209ad2"
        ],
        [
            "rewrite !pcmE /= !umEX => H1 H2 H3 f; rewrite -[f]UMC.tfE.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "apply: (UM.base_indf (P := (fun b => P (UMC.to b))))=>//.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move=>k v g H V1; move: (H3 k v _ H); rewrite !pcmE /= !umEX.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "by apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_indb (P : U -> Prop) : P um_undef -> P Unit -> (forall k v f, P f -> valid (pts k v \\+ f) -> (forall x, x \\in dom f -> ord x k) -> P (pts k v \\+ f)) -> forall f, P f.",
            "VernacStartTheoremProof",
            "5ce271ce90849b556443a17d74ff9b12bd2207a6"
        ],
        [
            "rewrite !pcmE /= !umEX => H1 H2 H3 f; rewrite -[f]UMC.tfE.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "apply: (UM.base_indb (P := (fun b => P (UMC.to b))))=>//.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move=>k v g H V1; move: (H3 k v _ H); rewrite !pcmE /= !umEX.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "by apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_valid3 f1 f2 f3 : valid (f1 \\+ f2 \\+ f3) = [&& valid (f1 \\+ f2), valid (f2 \\+ f3) & valid (f1 \\+ f3)].",
            "VernacStartTheoremProof",
            "e468a28f22d6df959f88243a4dd1faa796da06de"
        ],
        [
            "apply/idP/idP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>W; rewrite (validL W).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -joinA in W; rewrite (validR W).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite joinCA in W; rewrite (validR W).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/and3P=>V1 V2 V3; case: validUn=>//.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite V1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (validR V2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k; rewrite domUn inE V1; case/orP.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: validUn V3=>// _ _ X _ /X /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: validUn V2=>// _ _ X _ /X /negbTE ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um_prime f1 f2 k v : cond U k -> f1 \\+ f2 = pts k v -> f1 = pts k v /\\ f2 = Unit \\/ f1 = Unit /\\ f2 = pts k v.",
            "VernacStartTheoremProof",
            "a6cdd3ce1c3d3be669e2d548b0b93a7b2e033d1f"
        ],
        [
            "move: f1 f2; apply: um_indf=>[f1|f2 _|k2 w2 f1 _ _ _ f X E].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite join_undefL -(validPt _ v)=>W E.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -E in W; rewrite valid_undef in W.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite unitL=>->; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have W : valid (pts k2 w2 \\+ (f1 \\+ f)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(validPt _ v) -E -joinA in X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[pts k v]unitR -joinA in E.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/(cancel2 W): E; case: ifP.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/eqP=>-> [->] /join0E [->->]; rewrite unitR; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>_ [_ _] /esym/empbP; rewrite empbPtUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PointsToLemmas.",
            "VernacEndSegment",
            "d30961b20f15cffd4ec2f2c5d3e0622415278524"
        ],
        [
            "Hint Resolve domeqPt domeqPtUn domeqUnPt : core.",
            "VernacHints",
            "6bf6523d398a7d7482035543c5aa72e1399a1a76"
        ],
        [
            "Prenex Implicits validPtUn_cond findPt_inv um_eta2.",
            "VernacExtend",
            "092f33907b155c3955b26d0867aca396b32a0db9"
        ],
        [
            "Module UnionClassTPCM.",
            "VernacDefineModule",
            "363d4571730828841104c43b6636a5fe55e7abed"
        ],
        [
            "Section UnionClassTPCM.",
            "VernacBeginSection",
            "df9ecbea0685154cd9b8b085f529f7f4e2018cb5"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Type f : U.",
            "VernacReserve",
            "1c2948d2dfe60715de7038f99869ca83f2ad4999"
        ],
        [
            "Lemma join0E f1 f2 : f1 \\+ f2 = Unit -> f1 = Unit /\\ f2 = Unit.",
            "VernacStartTheoremProof",
            "2ad8bde6bc0da10e5b6f6261328da36de8c0ffcb"
        ],
        [
            "by rewrite join0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_undefN : ~~ valid (um_undef: U).",
            "VernacStartTheoremProof",
            "7a4a2c7d059886346d2bdefe31f9de7039ee27c6"
        ],
        [
            "by rewrite valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undef_join f : um_undef \\+ f = um_undef.",
            "VernacStartTheoremProof",
            "c04ebef2291b58b4b4fe206a4b9a83345902be8b"
        ],
        [
            "by rewrite join_undefL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UnionClassTPCM.",
            "VernacEndSegment",
            "e15917718869a3f53069b3c78efbb127e5094216"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Definition union_map_classTPCMMix K V (U : union_map_class K V) := TPCMMixin (@empbP K V U) (@join0E K V U) (@valid_undefN K V U) (@undef_join _ _ U).",
            "VernacDefinition",
            "e45af37a25e4df6bcf36efc6bcf11a94c8468967"
        ],
        [
            "Canonical union_map_classTPCM K V (U : union_map_class K V) := Eval hnf in TPCM _ (@union_map_classTPCMMix K V U).",
            "VernacDefinition",
            "607d240b6a14bfdf2b5d0dd58809ad632752fa22"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End UnionClassTPCM.",
            "VernacEndSegment",
            "e15917718869a3f53069b3c78efbb127e5094216"
        ],
        [
            "Export UnionClassTPCM.Exports.",
            "VernacImport",
            "dba1643c6fd855f375b3209186298d9aa9afcbcf"
        ],
        [
            "Module Type UMSig.",
            "VernacDeclareModuleType",
            "46a76379d0c8b933e5a24ee52813137fc5322478"
        ],
        [
            "Parameter tp : ordType -> Type -> Type.",
            "VernacAssumption",
            "0979ce162c0654f1697ec379d39c1dbd3332d5c5"
        ],
        [
            "Section Params.",
            "VernacBeginSection",
            "75d0af265c03c3cb55114f228b7a57defd667373"
        ],
        [
            "Variables (K : ordType) (V : Type).",
            "VernacAssumption",
            "e1d3a4273e13715e3010235ff1240b4ebe9e9727"
        ],
        [
            "Notation tp := (tp K V).",
            "VernacSyntacticDefinition",
            "72a15646fea56d7f720b5deee6f7ad458d665311"
        ],
        [
            "Parameter um_undef : tp.",
            "VernacAssumption",
            "271c62c7dfaad2c639b570051ee9772e842c8b13"
        ],
        [
            "Parameter defined : tp -> bool.",
            "VernacAssumption",
            "b51330da46392a851cf1fb99c0d5d1196efd38fa"
        ],
        [
            "Parameter empty : tp.",
            "VernacAssumption",
            "d58abaaa84f4c6a52ea47e939ffb819c6fbfd744"
        ],
        [
            "Parameter upd : K -> V -> tp -> tp.",
            "VernacAssumption",
            "888c7f65b6de5918bfcf553a51629661f9622cba"
        ],
        [
            "Parameter dom : tp -> seq K.",
            "VernacAssumption",
            "f716bbc1b91edc786b2d811bc6d6b523f0521bf8"
        ],
        [
            "Parameter dom_eq : tp -> tp -> bool.",
            "VernacAssumption",
            "370189ff3e0a16cedc7f80c6f9f96f6485decf15"
        ],
        [
            "Parameter free : K -> tp -> tp.",
            "VernacAssumption",
            "f10736b95f7b92d3ccfce7eed1d98269fae96a16"
        ],
        [
            "Parameter find : K -> tp -> option V.",
            "VernacAssumption",
            "937733fd9e1ea3322f3fb22178b893b1d0867047"
        ],
        [
            "Parameter union : tp -> tp -> tp.",
            "VernacAssumption",
            "4e9e067cc2fc164305a048a0a4274960b175accc"
        ],
        [
            "Parameter um_filter : pred K -> tp -> tp.",
            "VernacAssumption",
            "55c61709028879c01c8e8be84640f6f3e279011c"
        ],
        [
            "Parameter empb : tp -> bool.",
            "VernacAssumption",
            "c34d09502dda2decee08616a285d8fb9337245fd"
        ],
        [
            "Parameter undefb : tp -> bool.",
            "VernacAssumption",
            "8e6f73dde2070ff0fc101f53c2f560b40fb85255"
        ],
        [
            "Parameter pts : K -> V -> tp.",
            "VernacAssumption",
            "71c060343a4d70e285ba516eeaa411217dbcb9a7"
        ],
        [
            "Parameter from : tp -> @UM.base K V predT.",
            "VernacAssumption",
            "c891dae5401f0c4fff56b55020e28f8c3d05b4f1"
        ],
        [
            "Parameter to : @UM.base K V predT -> tp.",
            "VernacAssumption",
            "e77c71fb7a82246cd176c20a97fcc565bfb49e7d"
        ],
        [
            "Axiom ftE : forall b, from (to b) = b.",
            "VernacAssumption",
            "3b26803d447b75b8f34f2efd3ea970f1dc5552d0"
        ],
        [
            "Axiom tfE : forall f, to (from f) = f.",
            "VernacAssumption",
            "ecf6ff9e9224504cc640133a8119700e98b9ea13"
        ],
        [
            "Axiom undefE : um_undef = to (@UM.Undef K V predT).",
            "VernacAssumption",
            "e181c4f53854455db81c06edef706295bf2fc456"
        ],
        [
            "Axiom defE : forall f, defined f = UM.valid (from f).",
            "VernacAssumption",
            "edf8202818bb876ef7984b011d1064bf789c8aa3"
        ],
        [
            "Axiom emptyE : empty = to (@UM.empty K V predT).",
            "VernacAssumption",
            "5643cd400d4f75d0a03e1fd456a13bdea17e3943"
        ],
        [
            "Axiom updE : forall k v f, upd k v f = to (UM.upd k v (from f)).",
            "VernacAssumption",
            "e8b481952367ce29e41bbfcdbe0a16454f401335"
        ],
        [
            "Axiom domE : forall f, dom f = UM.dom (from f).",
            "VernacAssumption",
            "e79ee5fd00fbc6b1094e50165dbf4ee25ed04c54"
        ],
        [
            "Axiom dom_eqE : forall f1 f2, dom_eq f1 f2 = UM.dom_eq (from f1) (from f2).",
            "VernacAssumption",
            "4f74bf2fe4f591107c794d8dadbe40cb9ea25e53"
        ],
        [
            "Axiom freeE : forall k f, free k f = to (UM.free k (from f)).",
            "VernacAssumption",
            "7f2168fd34a59f91f36ce9a2492f6b081135ea75"
        ],
        [
            "Axiom findE : forall k f, find k f = UM.find k (from f).",
            "VernacAssumption",
            "c0ba2a9b46115844abdcbe880f351d564353683e"
        ],
        [
            "Axiom unionE : forall f1 f2, union f1 f2 = to (UM.union (from f1) (from f2)).",
            "VernacAssumption",
            "e62c762710c0fd21c9d8fa7b3ae91abd0fe68b94"
        ],
        [
            "Axiom umfiltE : forall q f, um_filter q f = to (UM.um_filter q (from f)).",
            "VernacAssumption",
            "cf752f93ab0c4f9de11c16df1eb40b50a537f905"
        ],
        [
            "Axiom empbE : forall f, empb f = UM.empb (from f).",
            "VernacAssumption",
            "698b204ff948ca9258f6f65179dfedbf809df9ba"
        ],
        [
            "Axiom undefbE : forall f, undefb f = UM.undefb (from f).",
            "VernacAssumption",
            "b991686e3312b618f8c53ee1d0b9a36146fab223"
        ],
        [
            "Axiom ptsE : forall k v, pts k v = to (@UM.pts K V predT k v).",
            "VernacAssumption",
            "524dec8d2ec71041f7d5612e5132fbd6f633ee0a"
        ],
        [
            "End Params.",
            "VernacEndSegment",
            "57e4b84196c6c1eda6bd206bf9071e28734f14b9"
        ],
        [
            "End UMSig.",
            "VernacEndSegment",
            "ac44e48e16d8087b003e8fdb68a4d8bd73bb1004"
        ],
        [
            "Module UMDef : UMSig.",
            "VernacDefineModule",
            "90df878eb297e61d3152a3a138e5dcce6afaa332"
        ],
        [
            "Section UMDef.",
            "VernacBeginSection",
            "02c84c49ac09915fefdc4a9a5fcf2d06e1acd0b2"
        ],
        [
            "Variables (K : ordType) (V : Type).",
            "VernacAssumption",
            "e1d3a4273e13715e3010235ff1240b4ebe9e9727"
        ],
        [
            "Definition tp : Type := @UM.base K V predT.",
            "VernacDefinition",
            "8aa0e3dd12c6a01116405822e23ef8b8cea42412"
        ],
        [
            "Definition um_undef := @UM.Undef K V predT.",
            "VernacDefinition",
            "341b8d7d6253489afbefcafb479d6232eae71d3c"
        ],
        [
            "Definition defined f := @UM.valid K V predT f.",
            "VernacDefinition",
            "474b82933aa8688b08a19c3063ed487c023ac451"
        ],
        [
            "Definition empty := @UM.empty K V predT.",
            "VernacDefinition",
            "d038731e8295b4f2fbf45c1120b57af880b6e027"
        ],
        [
            "Definition upd k v f := @UM.upd K V predT k v f.",
            "VernacDefinition",
            "b1524ee2f3316f17aa57f430c713bdea3195a4f7"
        ],
        [
            "Definition dom f := @UM.dom K V predT f.",
            "VernacDefinition",
            "0d5cb8b37e3a524758cbd838511eef5d985b9d32"
        ],
        [
            "Definition dom_eq f1 f2 := @UM.dom_eq K V predT f1 f2.",
            "VernacDefinition",
            "57c21c850bfde01920d8de831c2b8d0c71d6a683"
        ],
        [
            "Definition free k f := @UM.free K V predT k f.",
            "VernacDefinition",
            "a9e30dc04f29b26d53cbc7e3676e4d05d8813a06"
        ],
        [
            "Definition find k f := @UM.find K V predT k f.",
            "VernacDefinition",
            "1eaedd80c3b0f2d7b84f46713634b837812f4f14"
        ],
        [
            "Definition union f1 f2 := @UM.union K V predT f1 f2.",
            "VernacDefinition",
            "56fdfa63116fb47a4803d683394290e3add6760c"
        ],
        [
            "Definition um_filter q f := @UM.um_filter K V predT q f.",
            "VernacDefinition",
            "4a5e2b0bc67bbf596e2152bb64abdc3efb132a40"
        ],
        [
            "Definition empb f := @UM.empb K V predT f.",
            "VernacDefinition",
            "1f4a39e42110c4d05d012e12ed04383fb7efd6e1"
        ],
        [
            "Definition undefb f := @UM.undefb K V predT f.",
            "VernacDefinition",
            "569c20c3c34e5cc9719e0de01e66b254990194e9"
        ],
        [
            "Definition pts k v := @UM.pts K V predT k v.",
            "VernacDefinition",
            "f25bbd9ead1c18af516e0d0ec693aaf09925aa4e"
        ],
        [
            "Definition from (f : tp) : @UM.base K V predT := f.",
            "VernacDefinition",
            "85a3a6bcdfb1e21fb2b0163520448b77ba83f8f4"
        ],
        [
            "Definition to (b : @UM.base K V predT) : tp := b.",
            "VernacDefinition",
            "a135b71b96792ec872d8fc27d12314b4ef5a1ade"
        ],
        [
            "Lemma ftE b : from (to b) = b.",
            "VernacStartTheoremProof",
            "d0ec89c210aece01e6298d82153fbdfc80434e37"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tfE f : to (from f) = f.",
            "VernacStartTheoremProof",
            "a5994948bbb45c633e82745ef4a7b537896fbc38"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefE : um_undef = to (@UM.Undef K V predT).",
            "VernacStartTheoremProof",
            "3e81fb34c3686d2519918e2474c13fa2f6275d78"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defE f : defined f = UM.valid (from f).",
            "VernacStartTheoremProof",
            "88ab554033a552b87edfb02527fab941e515785d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma emptyE : empty = to (@UM.empty K V predT).",
            "VernacStartTheoremProof",
            "1082a693eca2a70d0e4be2829205ac7fc39676d6"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma updE k v f : upd k v f = to (UM.upd k v (from f)).",
            "VernacStartTheoremProof",
            "5bba736bce2fc187a06c9d98c0a5c48a77a61ebc"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma domE f : dom f = UM.dom (from f).",
            "VernacStartTheoremProof",
            "c39598874ba7039756c0c2607939ec852334ecdb"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_eqE f1 f2 : dom_eq f1 f2 = UM.dom_eq (from f1) (from f2).",
            "VernacStartTheoremProof",
            "be828b2e2ef264bab7b0d74b64490a705adb67ec"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeE k f : free k f = to (UM.free k (from f)).",
            "VernacStartTheoremProof",
            "a7f1442730dc45c339288f88fa39d09b87508a87"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findE k f : find k f = UM.find k (from f).",
            "VernacStartTheoremProof",
            "1bc8952274b1a9331d8cf96eb3c2c016d95bd0f4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unionE f1 f2 : union f1 f2 = to (UM.union (from f1) (from f2)).",
            "VernacStartTheoremProof",
            "f6441f1ee94257ded4629e50fd1d86c2e457bb70"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umfiltE q f : um_filter q f = to (UM.um_filter q (from f)).",
            "VernacStartTheoremProof",
            "38221f8d17117d2b3330f9e3ab7ee4198a0903f4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empbE f : empb f = UM.empb (from f).",
            "VernacStartTheoremProof",
            "86118bf64225c8947f0d91f52c61e91da6d614f3"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma undefbE f : undefb f = UM.undefb (from f).",
            "VernacStartTheoremProof",
            "d5cd615cfaf969e32900c90320bfc258d21adfbc"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ptsE k v : pts k v = to (@UM.pts K V predT k v).",
            "VernacStartTheoremProof",
            "0f885d94deca33fffbf7f1fa53b0ed721adf41a1"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UMDef.",
            "VernacEndSegment",
            "d934f4533db3661bff9d63948875a85fd913161f"
        ],
        [
            "End UMDef.",
            "VernacEndSegment",
            "d934f4533db3661bff9d63948875a85fd913161f"
        ],
        [
            "Notation union_map := UMDef.tp.",
            "VernacSyntacticDefinition",
            "31f3aa7cceb9279361140c3f9f00447042e6f5ce"
        ],
        [
            "Definition unionmapMixin K V := UMCMixin (@UMDef.ftE K V) (@UMDef.tfE K V) (@UMDef.defE K V) (@UMDef.undefE K V) (@UMDef.emptyE K V) (@UMDef.updE K V) (@UMDef.domE K V) (@UMDef.dom_eqE K V) (@UMDef.freeE K V) (@UMDef.findE K V) (@UMDef.unionE K V) (@UMDef.umfiltE K V) (@UMDef.empbE K V) (@UMDef.undefbE K V) (@UMDef.ptsE K V).",
            "VernacDefinition",
            "c6dd87121b95e5650cffbb080639d588ca650b64"
        ],
        [
            "Canonical union_mapUMC K V := Eval hnf in UMC (union_map K V) (@unionmapMixin K V).",
            "VernacDefinition",
            "ff7df64fa3464e4d2a3e55e6d8f43c3d41229ce9"
        ],
        [
            "Definition union_mapPCMMix K V := union_map_classPCMMix (union_mapUMC K V).",
            "VernacDefinition",
            "ff6c82f93438141e4c92cda410b48eb39707d639"
        ],
        [
            "Canonical union_mapPCM K V := Eval hnf in PCM (union_map K V) (@union_mapPCMMix K V).",
            "VernacDefinition",
            "6cb1c7512b93755f1294fc373fc0e314b6b068f1"
        ],
        [
            "Definition union_mapCPCMMix K V := union_map_classCPCMMix (@union_mapUMC K V).",
            "VernacDefinition",
            "7710e8238a8e5d5eccc085fe9eadab81125bd240"
        ],
        [
            "Canonical union_mapCPCM K V := Eval hnf in CPCM (union_map K V) (@union_mapCPCMMix K V).",
            "VernacDefinition",
            "becb4a6deef2af04c4e56777f29666794ec56a27"
        ],
        [
            "Definition union_mapTPCMMix K V := union_map_classTPCMMix (@union_mapUMC K V).",
            "VernacDefinition",
            "8b70179c9091c260662fb11c4a865916363e9f2c"
        ],
        [
            "Canonical union_mapTPCM K V := Eval hnf in TPCM (union_map K V) (@union_mapTPCMMix K V).",
            "VernacDefinition",
            "a65b5d99a888718ac7cad8ce0e0ff85a1105d2c5"
        ],
        [
            "Definition union_map_eqMix K (V : eqType) := @union_map_class_eqMix K V _ _ (@unionmapMixin K V).",
            "VernacDefinition",
            "94069d38a2a9ed68ec397774764d0dd9386d0bba"
        ],
        [
            "Canonical union_map_eqType K (V : eqType) := Eval hnf in EqType (union_map K V) (@union_map_eqMix K V).",
            "VernacDefinition",
            "7ce694284db180241f819a512bc879c23550336a"
        ],
        [
            "Definition um_pts (K : ordType) V (k : K) (v : V) := @UMC.pts K V (@union_mapUMC K V) k v.",
            "VernacDefinition",
            "ba080bf3788cd2ee5f80a4b1747460ed538d78b8"
        ],
        [
            "Notation \"x \\\\-> v\" := (@um_pts _ _ x v) (at level 30).",
            "VernacNotation",
            "e44ba430e9137fd9d2b9aba8094774295a0d9f19"
        ],
        [
            "Notation fset T := (@union_map T unit).",
            "VernacSyntacticDefinition",
            "a2d9e179006ea4bf9d1a56766223def07c61ea22"
        ],
        [
            "Notation \"# x\" := (x \\\\-> tt) (at level 20).",
            "VernacNotation",
            "71e8d64f147d26d911938f30de57c9c86f6b7d4c"
        ],
        [
            "Lemma xx : 1 \\\\-> true = 1 \\\\-> false.",
            "VernacStartTheoremProof",
            "8286dc5f7c43d445fc26cae752fc9689d434ba13"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma xx : ((1 \\\\-> true) \\+ (2 \\\\-> false)) == (1 \\\\-> false).",
            "VernacStartTheoremProof",
            "514cae9917124e66c14f4b03df49d0291fd32779"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite joinC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma xx (x : union_map nat_ordType nat) : x \\+ x == x \\+ x.",
            "VernacStartTheoremProof",
            "0ad6a4f4183e3ab99f214674b95ff7ee67a39ac3"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma xx (f : union_map nat_ordType nat) : 3 \\in dom (free 2 f).",
            "VernacStartTheoremProof",
            "a03ed07ee304dd7d13cf208c684681002cfce3af"
        ],
        [
            "try by rewrite domF' /=.",
            "VernacExtend",
            "5f3751a71c224ac97cd7cf1859a7a58c44908f88"
        ],
        [
            "rewrite (@domF _ _ (union_mapUMC _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma xx (f : union_map nat_ordType nat) : 3 \\in dom (free 2 f).",
            "VernacStartTheoremProof",
            "a03ed07ee304dd7d13cf208c684681002cfce3af"
        ],
        [
            "rewrite domF /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Lemma xx : 1 \\\\-> (1 \\\\-> 3) = 2 \\\\-> (7 \\\\-> 3).",
            "VernacStartTheoremProof",
            "353aeacead14dc48796d98010b475e2d7a5e803a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Section UMDecidableEquality.",
            "VernacBeginSection",
            "cee95e1471e2466362474004deeff14ec9697ad3"
        ],
        [
            "Variables (K : ordType) (V : eqType) (U : union_map_class K V).",
            "VernacAssumption",
            "e8a22b3ff091a09cdcfb6d40b48f0024938add1f"
        ],
        [
            "Lemma umPtPtE (k1 k2 : K) (v1 v2 : V) : (k1 \\\\-> v1 == k2 \\\\-> v2) = (k1 == k2) && (v1 == v2).",
            "VernacStartTheoremProof",
            "7dd25a1c4e66c60f1f53d727ab34ffa47b5111fa"
        ],
        [
            "rewrite {1}/eq_op /= /UnionMapEq.unionmap_eq /um_pts !umEX /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite {1}/eq_op /= /feq eqseq_cons andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umPt0E (k : K) (v : V) : (k \\\\-> v == Unit) = false.",
            "VernacStartTheoremProof",
            "71515297eb6ba37b433e80d45ab7d1f6892bbbd7"
        ],
        [
            "by apply: (introF idP)=>/eqP/empbP; rewrite empbPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um0PtE (k : K) (v : V) : (@Unit [pcm of union_map K V] == k \\\\-> v) = false.",
            "VernacStartTheoremProof",
            "311b91b12f82fb9e0a743b1a5eb9dae15f5d506c"
        ],
        [
            "by rewrite eq_sym umPt0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umPtUndefE (k : K) (v : V) : (k \\\\-> v == um_undef) = false.",
            "VernacStartTheoremProof",
            "464c3d401cc50a86a677a2adf154e8290ac21443"
        ],
        [
            "by rewrite /eq_op /= /UnionMapEq.unionmap_eq /um_pts !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umUndefPtE (k : K) (v : V) : ((um_undef : union_map_eqType K V) == k \\\\-> v) = false.",
            "VernacStartTheoremProof",
            "fa045c3176bcb2ce667d5f24e9e5220803f0e864"
        ],
        [
            "by rewrite eq_sym umPtUndefE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umUndef0E : ((um_undef : union_map_eqType K V) == Unit) = false.",
            "VernacStartTheoremProof",
            "dc459c59f7f49e09e9304bc042649398741f6191"
        ],
        [
            "by apply/(introF idP)=>/eqP/empbP; rewrite empb_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma um0UndefE : ((Unit : union_mapPCM K V) == um_undef) = false.",
            "VernacStartTheoremProof",
            "4d0866c0e4ce104103d23b8b6e604eff037aedce"
        ],
        [
            "by rewrite eq_sym umUndef0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umPtUE (k : K) (v : V) f : (k \\\\-> v \\+ f == Unit) = false.",
            "VernacStartTheoremProof",
            "b2e3e5447696d4927006b0773c753c07921fbf7e"
        ],
        [
            "by apply: (introF idP)=>/eqP/join0E/proj1/eqP; rewrite umPt0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umUPtE (k : K) (v : V) f : (f \\+ k \\\\-> v == Unit) = false.",
            "VernacStartTheoremProof",
            "d911dce393e03ea4b40d5370c5986084d5825ce1"
        ],
        [
            "by rewrite joinC umPtUE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umPtUPtE (k1 k2 : K) (v1 v2 : V) f : (k1 \\\\-> v1 \\+ f == k2 \\\\-> v2) = [&& k1 == k2, v1 == v2 & empb f].",
            "VernacStartTheoremProof",
            "b9fb0de2b206ed8be3fcb0b5dd680cab7d8ad1b6"
        ],
        [
            "apply/idP/idP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case/and3P=>/eqP -> /eqP -> /empbP ->; rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP/(um_prime _); case=>//; case.",
            "VernacExtend",
            "3497ca3656ecbfc9aa7f8fe93e14eaf3b843fede"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move/(cancelPt2 _); rewrite validPt=>/(_ (erefl _)).",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by case=>->->->; rewrite !eq_refl empb0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/empbP; rewrite empbPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umPtPtUE (k1 k2 : K) (v1 v2 : V) f : (k1 \\\\-> v1 == k2 \\\\-> v2 \\+ f) = [&& k1 == k2, v1 == v2 & empb f].",
            "VernacStartTheoremProof",
            "b2910091fd21083dbef96fb956985db8e151d31b"
        ],
        [
            "by rewrite eq_sym umPtUPtE (eq_sym k1) (eq_sym v1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umUPtPtE (k1 k2 : K) (v1 v2 : V) f : (f \\+ k1 \\\\-> v1 == k2 \\\\-> v2) = [&& k1 == k2, v1 == v2 & empb f].",
            "VernacStartTheoremProof",
            "6a08de7fa85000ff55a5ad0858ba94f135471cd3"
        ],
        [
            "by rewrite joinC umPtUPtE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma umPtUPt2E (k1 k2 : K) (v1 v2 : V) f : (k1 \\\\-> v1 == f \\+ k2 \\\\-> v2) = [&& k1 == k2, v1 == v2 & empb f].",
            "VernacStartTheoremProof",
            "7ed3599fbfcf80c11469ddb7a22a74af3468f5da"
        ],
        [
            "by rewrite joinC umPtPtUE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition umE := (umPtPtE, umPt0E, um0PtE, umPtUndefE, umUndefPtE, um0UndefE, umUndef0E, umPtUE, umUPtE, umPtUPtE, umPtPtUE, umUPtPtE, umPtUPt2E, unitL, unitR, validPt, valid_unit, eq_refl, empb0, empbPt, join_undefL, join_undefR, empb_undef).",
            "VernacDefinition",
            "fc2ac89a9d09a57ec47e1bd8e7240fb261f0772a"
        ],
        [
            "End UMDecidableEquality.",
            "VernacEndSegment",
            "69712337120a15467efa66ce72fadccf6b6618d0"
        ]
    ],
    "proofs": [
        {
            "name": "all_supp_insP",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2; apply/allP=>x; rewrite supp_ins inE /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: eqP=>[->|_] //=; move/(allP H2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_supp_remP",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "move=>H; apply/allP=>x; rewrite supp_rem inE /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: eqP=>[->|_] //=; move/(allP H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_supp_fcatP",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2; apply/allP=>x; rewrite supp_fcat inE /=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case/orP; [move/(allP H1) | move/(allP H2)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_supp_kfilterP",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "move=>H; apply/allP=>x; rewrite supp_kfilt mem_filter.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case/andP=>_ /(allP H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umapE",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "split; first by move=>->; case: g.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: f; case: g=>// f pf g pg E; rewrite {g}E in pg *.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "by congr Def; apply: bool_irrelevance.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ftE",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "by case: U b=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tfE",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "by case: U f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqE",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "by split=>[E|-> //]; rewrite -[b1]ftE -[b2]ftE E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defE",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "by case: U f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefE",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "by case: U=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "emptyE",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by case: U=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updE",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "by case: U k v f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domE",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "by case: U f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_eqE",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "by case: U f1 f2=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeE",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "by case: U k f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findE",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "by case: U k f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unionE",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "by case: U f1 f2=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "um_filterE",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "by case: U q f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbE",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "by case: U f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefbE",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "by case: U f=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptsE",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "by case: U k v=>x [p][*].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinC",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.union.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1)=>[|f1' H1]; case: (UMC.from f2)=>[|f2' H2] //.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>E; rewrite disjC E // fcatC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinCA",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.union /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2) (UMC.from f3)=>[|f1' H1][|f2' H2][|f3' H3] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case E1: (disj f2' f3'); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case E2: (disj f1' f3')=>//; rewrite disj_fcat E1 andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite disj_fcat andbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case E2: (disj f1' f3')=>//; rewrite disj_fcat (disjC f2') E1 /= andbT.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case E3: (disj f1' f2')=>//; rewrite fcatAC // E1 E2 E3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinA",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "by rewrite (joinC f2) joinCA joinC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validL",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX; case: (UMC.from f1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitL",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "rewrite -[f]UMC.tfE !umEX /UM.union /UM.empty.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[//|f' H]; rewrite disjC disj_nil fcat0s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validU",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinKf",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "rewrite -{3}[f1]UMC.tfE -{2}[f2]UMC.tfE !pcmE /= !umEX /UM.valid /UM.union.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f) (UMC.from f1) (UMC.from f2)=> [|f' H]; case=>[|f1' H1]; case=>[|f2' H2] //; case: ifP=>//; case: ifP=>// D1 D2 _ E.",
                        "VernacExtend",
                        "3315099480193c926ba462960d9f0d5ca419b136"
                    ]
                },
                {
                    "command": [
                        "by apply: fcatsK E; rewrite D1 D2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unionmap_eqP",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "move=>x y; rewrite -{1}[x]UMC.tfE -{1}[y]UMC.tfE /unionmap_eq.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from x)=>[|f1 H1]; case: (UMC.from y)=>[|f2 H2] /=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by constructor; move/(@UMC.eqE _ _ (UMC T m)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by constructor; move/(@UMC.eqE _ _ (UMC T m)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: eqP=>E; constructor; rewrite (@UMC.eqE _ _ (UMC T m)).",
                        "VernacExtend",
                        "2d56c942035865c5f6f26dbcc47b477f811d515c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite UM.umapE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_undef",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom0",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "by rewrite pcmE /= !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom0E",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.dom /UM.empty -{3}[f]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' S] //= _; rewrite !umEX fmapE /= {S}.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case: f'; case=>[|kv s] //= P /= /(_ kv.1); rewrite inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domU",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "rewrite pcmE /= !umEX /UM.dom /UM.upd /UM.valid /= /cond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' H] /= x.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !inE /= andbC; case: ifP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: decP; first by move=>->; rewrite supp_ins.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/(introF idP)=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domF",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX; case: (UMC.from f)=>[|f' H] x; rewrite inE /=; by case: ifP=>// E; rewrite supp_rem inE /= eq_sym E.",
                        "VernacExtend",
                        "3a1c884d67b73cc2d8610889c94b3a9c60759a6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domUn",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.dom /UM.valid /UM.union.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' H1] // [|f2' H2] // x.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>E //; rewrite supp_fcat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_valid",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "by rewrite pcmE /= !umEX; case: (UMC.from f).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_cond",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX; case: (UMC.from f)=>[|f' F] // /(allP F).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_inIL",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "by rewrite domUn inE => ->->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_inIR",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: dom_inIL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_NNL",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "by move=> D; apply/contra/dom_inIL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_NNR",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "by move=> D; apply/contra/dom_inIR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_free",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "rewrite -{3}[f]UMC.tfE !umEX /UM.dom /UM.free.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' H] //; apply: rem_supp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_find",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.dom -{1}[f]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' H].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: dom_find_none'; rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: suppP (allP H k)=>[v|] H1 I; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: dom_find_none'; rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: (dom_find_some' (v:=v)); rewrite !umEX // /UM.upd /UM.free.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "case: decP=>H2; last by rewrite I in H2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/fmapP=>k'; rewrite fnd_ins.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>[/eqP-> //|]; rewrite fnd_rem => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_some",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "by case: dom_find=>// ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_none",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "by case: dom_find=>// v ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_umfilt",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.dom /UM.um_filter.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' H] x; first by rewrite !inE /= andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_kfilt mem_filter.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_prec",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "rewrite -{4}[f1]UMC.tfE -{3}[f2]UMC.tfE !pcmE /= !umEX.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /UM.valid /UM.union /UM.dom; move=>D E.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2) (UMC.from g1) (UMC.from g2) E D=> [|f1' F1][|f2' F2][|g1' G1][|g2' G2] //; case: ifP=>// D1; case: ifP=>// D2 E _ E1; apply/fmapP=>k.",
                        "VernacExtend",
                        "94fed8f996d92a6628ade93b3a674a3e677b4b98"
                    ]
                },
                {
                    "command": [
                        "move/(_ k): E1=>E1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case E2: (k \\in supp f2') in E1; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/negbT/fnd_supp: E1=>->; move/negbT/fnd_supp: E2=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff L: forall m s, k \\in supp m -> disj m s -> fnd k m = fnd k (fcat m s) :> option V.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (L _ _ E1 D1) (L _ _ E2 D2) E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>m s S; case: disjP=>//; move/(_ _ S)/negbTE; rewrite fnd_fcat=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domK",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.union /UM.dom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2) (UMC.from g1) (UMC.from g2)=> [|f1' F1][|f2' F2][|g1' G1][|g2' G2] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: disjP=>// D1 _; case: disjP=>// D2 _ E1 E2 x.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "move: {E1 E2} (E2 x) (E1 x); rewrite !supp_fcat !inE /= => E.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: {D1 D2} E (D1 x) (D2 x)=><- /implyP D1 /implyP D2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case _ : (x \\in supp f1') => //= in D1 D2 *.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move/negbTE: D1=>->; move/negbTE: D2=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_dom",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "rewrite -{4}[f1]UMC.tfE !pcmE /= !umEX.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /UM.valid /UM.union /UM.um_filter /UM.dom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>// D _; rewrite kfilt_fcat /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have E1: {in supp f1', supp f1' =i predT} by [].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have E2: {in supp f2', supp f1' =i pred0}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>x; rewrite disjC in D; case: disjP D=>// D _ /D /negbTE ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_in_kfilter E1) (eq_in_kfilter E2).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite kfilter_predT kfilter_pred0 fcats0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_dom",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX; case: (UMC.from f)=>[|[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_dom",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "apply: sorted_uniq (sorted_dom f); by [apply: ordtype.trans | apply: ordtype.irr].",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_domUn",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "by move/perm_domUn/perm_eq_size; rewrite size_cat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_in_umfilt",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.dom /UM.um_filter /= /dom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' H] //=; apply: eq_in_kfilter.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt0",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "by rewrite !pcmE /= !umEX /UM.um_filter /UM.empty kfilt_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_undef",
            "line_nb": 447,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltUn",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.union.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1)=>[|f1' H1]; case: (UMC.from f2)=>[|f2' H2] //=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>D //= _; rewrite kfilt_fcat disj_kfilt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_pred0",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.empty.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' H] //= _; case: f' H=>f' P H.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "by rewrite fmapE /= /kfilter' filter_pred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_predT",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "rewrite -[f]UMC.tfE !umEX /UM.um_filter.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' H] //; rewrite kfilter_predT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_predI",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "rewrite -[f]UMC.tfE !umEX /UM.um_filter.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' H] //; rewrite kfilter_predI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_predU",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "rewrite pcmE /= !umEX /UM.um_filter /UM.union /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' H] //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite in_disj_kfilt; last by move=>x _; rewrite /= negb_and orbA orbN.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite -kfilter_predU.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: eq_in_kfilter=>x _; rewrite /= orb_andr orbN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_dpredU",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "move=>D; rewrite umfilt_predU (eq_in_umfilt (p1:=predD q p) (p2:=q)) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move=>k _ /=; case X : (p k)=>//=; move/D/negbTE: X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltUnK",
            "line_nb": 479,
            "steps": [
                {
                    "command": [
                        "move=>V'; rewrite (umfiltUn _ V') => E.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have {V'} V' : valid (um_filter p f1 \\+ um_filter p f2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite E; move/validL: V'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have F : dom (um_filter p f1) =i dom f1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>x; rewrite dom_umfilt inE /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "apply/andP/idP=>[[//]| H1]; split=>//; move: H1.",
                        "VernacExtend",
                        "d75c2b7093da3254bf6211456cd2e96580f4cabc"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}E domUn inE /= !dom_umfilt inE /= inE /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (x \\in p)=>//=; rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{2}[f1]unitR in E F; move/(dom_prec V' E): F=>X.",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "by rewrite X in E V' *; rewrite (joinxK V' E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltU",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.um_filter /UM.upd /cond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; first by case: ifP=>H1 //; case: ifP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H1; case: decP=>H2 //=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !umEX kfilt_ins H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite H2 !umEX kfilt_ins H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: ifP H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltF",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.um_filter /UM.free.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' F]; case: ifP=>// E; rewrite !umEX kfilt_rem E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invalidE",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "by rewrite !pcmE /= !umEX -2![f]UMC.tfE !umEX; case: (UMC.from f).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_undef",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "by apply/negbTE; apply/invalidE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validF",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "by rewrite !pcmE /= !umEX; case: (UMC.from f).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validFUn",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "case: validUn=>// V1 V2 H _; case: validUn=>//; last 1 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>k'; rewrite domF inE; case: eqP=>// _ /H/negbTE ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite validF V1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite V2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnF",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC f1); apply: validFUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnU",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "move=>D; apply/esym; move: D; case: validUn.",
                        "VernacExtend",
                        "aaa887e23dd2b95a287078812fee84eea952079f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>V' _; apply/esym/negbTE; apply: contra V'; move/validL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>V' _; apply/esym/negbTE; apply: contra V'; move/validR.",
                        "VernacExtend",
                        "29765d52d1ebc7805de64975ff26cf4e34248a22"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>k' H1 H2 _; case: validUn=>//; rewrite validU => D1 /andP [/= H D2].",
                        "VernacExtend",
                        "898083afbcb7f48eb38b81893aabf115193d46fd"
                    ]
                },
                {
                    "command": [
                        "by move/(_ k' H1); rewrite domU !inE H D2 H2; case: ifP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>V1 V2 H1 H2; case: validUn=>//.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite V1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU V2 (dom_cond H2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>k'; rewrite domU (dom_cond H2) inE /= V2; move/H1=>H3.",
                        "VernacExtend",
                        "40075a671b142e70c4190413219df8981418e910"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negbTE H3); case: ifP H2 H3=>// /eqP ->->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUUn",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "by move=>D; rewrite -!(joinC f2); apply: validUnU D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_umfilt",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "by rewrite !pcmE /= !umEX; case: (UMC.from f).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_inNL",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "by case: validUn=>//_ _ H _; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_inNR",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: dom_inNL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqP",
            "line_nb": 587,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.dom /UM.dom_eq /in_mem.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: eqP=>H; constructor; [rewrite H | case=>_ /suppE].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeq0E",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "by case/domeqP; rewrite valid_unit dom0; apply: dom0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeq_refl",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "by case: domeqP=>//; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeq_sym",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "suff L f f' : dom_eq f f' -> dom_eq f' f by apply/idP/idP; apply: L.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case/domeqP=>H1 H2; apply/domeqP; split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqVUn",
            "line_nb": 629,
            "steps": [
                {
                    "command": [
                        "by move=>D /(domeqVUnE D) ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqUnf",
            "line_nb": 648,
            "steps": [
                {
                    "command": [
                        "by move=>D1 D2; rewrite (joinC f1) (joinC f2); apply: domeqfUn D2 D1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqK",
            "line_nb": 651,
            "steps": [
                {
                    "command": [
                        "move=>V1 /domeqP [E1 H1] /domeqP [E2 H2]; move: (V1); rewrite E1=>V2.",
                        "VernacExtend",
                        "59558e378570fadf944f573c466a34c761bc9b23"
                    ]
                },
                {
                    "command": [
                        "apply/domeqP; split; first by rewrite (validR V1) (validR V2).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: domK V1 V2 H1 H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_flip",
            "line_nb": 661,
            "steps": [
                {
                    "command": [
                        "by move=>X /esym E; rewrite joinC E X joinC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_domV",
            "line_nb": 664,
            "steps": [
                {
                    "command": [
                        "move=>V1 E; case V12 : (valid (x1 \\+ y2)); constructor.",
                        "VernacExtend",
                        "7f98ab22c7975b25dc038296df5607aecc708bb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>n Hs; have : n \\in dom (x1 \\+ y1) by rewrite domUn inE V1 Hs.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite E domUn inE -E V1 /= orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: validUn V12 Hs=>// _ _ L _ /L /negbTE ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>Hs; case: validUn V12=>//.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (validL V1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite E in V1; rewrite (validR V1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>k /Hs; rewrite E in V1; case: validUn V1=>// _ _ L _ /L /negbTE ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prec_filtV",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "move=>V1 E; case X : (valid (x1 \\+ y2)); constructor; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (prec_domV V1 E) X=>// St _ H; apply: St.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "by move=>n; rewrite H dom_umfilt inE; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (umfilt_dom V1); rewrite E umfiltUn -?E //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_in_umfilt (f:=y2) (p2:=pred0)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite umfilt_pred0 ?unitR //; rewrite E in V1; rewrite (validR V1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>n; case: validUn X=>// _ _ L _ /(contraL (L _)) /negbTE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_invalid",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upd_inj",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.upd /cond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F] // _; case: decP=>// H _ E.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "have: fnd k (ins k v1 f') = fnd k (ins k v2 f') by rewrite E.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !fnd_ins eq_refl; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updU",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.upd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' H']; case: ifP=>// E; case: decP=>H1; case: decP=>H2 //; rewrite !umEX.",
                        "VernacExtend",
                        "23c38f3c3298320bf3245e48a170856c10a6530f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite ins_ins E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP E) in H2 *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite ins_ins E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updF",
            "line_nb": 710,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.dom /UM.upd /UM.free.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F] //; case: ifP=>// H1; by case: decP=>H2 //; rewrite !umEX ins_rem H1.",
                        "VernacExtend",
                        "05928a9db4d7951ab20c19816b8485c23bd4e06c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updUnL",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.upd /UM.union /UM.dom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>//; case: decP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>// D; case: ifP=>// H1; case: decP=>// H2.",
                        "VernacExtend",
                        "d4127243a8edd835b38ce1b186629bc51391e41f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite disjC disj_ins disjC D !umEX; case: disjP D=>// H _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite (H _ H1) /= fcat_inss // (H _ H1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite disj_ins H1 D /= !umEX fcat_sins.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite disjC disj_ins disjC D andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite disj_ins D andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updUnR",
            "line_nb": 729,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC updUnL (joinC f1) (joinC f2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free0",
            "line_nb": 736,
            "steps": [
                {
                    "command": [
                        "by rewrite !pcmE /= !umEX /UM.free /UM.empty rem_empty.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeU",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.free /UM.upd /cond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; first by case: ifP=>H1 //; case: ifP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>H1; case: decP=>H2 //=.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite H2 !umEX rem_ins H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: ifP H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !umEX rem_ins H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeF",
            "line_nb": 749,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.free.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' F]; case: ifP=>// E; rewrite !umEX rem_rem E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUn",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.free /UM.union /UM.dom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>// E1; rewrite supp_fcat inE /=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E2; last by rewrite !umEX rem_supp // supp_fcat inE E2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite disj_rem; last by rewrite disjC disj_rem // disjC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !umEX; case/orP: E2=>E2.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "suff E3: k \\notin supp f2' by rewrite -fcat_rems // (rem_supp E3).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: disjP E1 E2=>// H _; move/H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff E3: k \\notin supp f1' by rewrite -fcat_srem // (rem_supp E3).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: disjP E1 E2=>// H _; move/contra: (H k); rewrite negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnV",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "move=>V'; rewrite freeUn domUn V' /=; case: ifP=>//.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by move/negbT; rewrite negb_or; case/andP=>H1 H2; rewrite !dom_free.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnL",
            "line_nb": 770,
            "steps": [
                {
                    "command": [
                        "move=>V1; rewrite freeUn domUn inE (negbTE V1) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case: ifP; first by case/andP; rewrite dom_free.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/negbT; rewrite negb_and; case/orP=>V2; last by rewrite dom_free.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "suff: ~~ valid (f1 \\+ free k f2) by move/invalidE: V2=>-> /invalidE ->.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "apply: contra V2; case: validUn=>// H1 H2 H _.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "case: validUn=>//; first by rewrite H1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: H2; rewrite validF => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>x H3; move: (H _ H3); rewrite domF inE /=.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "by case: ifP H3 V1=>[|_ _ _]; [move/eqP=><- -> | move/negbTE=>->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnR",
            "line_nb": 782,
            "steps": [
                {
                    "command": [
                        "by move=>H; rewrite joinC freeUnL // joinC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_umfilt",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.free /UM.um_filter.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; case: ifP=>// E; rewrite !umEX.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite kfilt_rem E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rem_kfilt E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find0E",
            "line_nb": 796,
            "steps": [
                {
                    "command": [
                        "by rewrite pcmE /= !umEX /UM.find /= fnd_empty.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_undef",
            "line_nb": 799,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX /UM.find.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_cond",
            "line_nb": 802,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !umEX /UM.find; case: (UMC.from f)=>[|f' F] // H.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "suff: k \\notin supp f' by case: suppP.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply: contra H; case: allP F=>// F _ /F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findU",
            "line_nb": 808,
            "steps": [
                {
                    "command": [
                        "rewrite pcmE /= !umEX /UM.valid /UM.find /UM.upd /cond.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; first by rewrite andbF !if_same.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: decP=>H; first by rewrite H /= fnd_ins.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (introF idP H) /= if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findF",
            "line_nb": 814,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.find /UM.free.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; first by rewrite if_same.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite fnd_rem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findUnL",
            "line_nb": 819,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.find /UM.union /UM.dom.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>// D _; case: ifP=>E1; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite fnd_fcat; case: ifP=>// E2.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite fnd_supp ?E1 // fnd_supp ?E2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff E2: k \\notin supp f2' by rewrite fnd_fcat (negbTE E2).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: disjP D E1=>// H _; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findUnR",
            "line_nb": 829,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC=>D; rewrite findUnL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_eta",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.find -{2 3}[f1]UMC.tfE -{2 3}[f2]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] // _ _ H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite !umEX; apply/fmapP=>k; move: (H k); rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_umfilt",
            "line_nb": 837,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.find /UM.um_filter.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; first by rewrite if_same.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite fnd_kfilt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empb_undef",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbP",
            "line_nb": 859,
            "steps": [
                {
                    "command": [
                        "rewrite pcmE /= !umEX /UM.empty /UM.empb -{1}[f]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F]; first by apply: ReflectF; rewrite !umEX.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: eqP=>E; constructor; rewrite !umEX.",
                        "VernacExtend",
                        "2d56c942035865c5f6f26dbcc47b477f811d515c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/supp_nilE: E=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>H; rewrite H in E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbU",
            "line_nb": 867,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.empb /UM.upd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F] //; case: decP=>// H.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "suff: k \\in supp (ins k v f') by case: (supp _).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_ins inE /= eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbUn",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.empb /UM.union.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f1) (UMC.from f2)=>[|f1' F1][|f2' F2] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; case: eqP=>E1; case: eqP=>E2 //; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: E2 E1; move/supp_nilE=>->; rewrite fcat0s; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move: E1 E2 E; do 2![move/supp_nilE=>->]; case: disjP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/supp_nilE: E2 E1=>-> <-; rewrite fcat0s eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [k H3]: exists k, k \\in supp f1'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (supp f1') {E1 E} E2=>[|x s _] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff: k \\in supp (fcat f1' f2') by rewrite E1.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite supp_fcat inE /= H3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empb0",
            "line_nb": 895,
            "steps": [
                {
                    "command": [
                        "by apply/empbE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join0E",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "by rewrite !empbE empbUn; case: andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validEb",
            "line_nb": 901,
            "steps": [
                {
                    "command": [
                        "case: empbP=>E; constructor; first by rewrite E valid_unit dom0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case=>V' H; apply: E; move: V' H.",
                        "VernacExtend",
                        "93a4251ace9142d2e02904d95040f1ebdf1b4c36"
                    ]
                },
                {
                    "command": [
                        "rewrite !pcmE /= !umEX /UM.valid /UM.dom /UM.empty -{3}[f]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F] // _ H; rewrite !umEX.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "apply/supp_nilE; case: (supp f') H=>// x s /(_ x).",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnEb",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "case E: (empb f); first by move/empbE: E=>->; rewrite unitL valid_unit.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: validUn=>// V' _ L; case: validEb E=>//; case; split=>// k.",
                        "VernacExtend",
                        "d74aaada141c338c690aecb6aa2f1ff3a6dfadaa"
                    ]
                },
                {
                    "command": [
                        "by case E: (k \\in dom f)=>//; move: (L k E); rewrite E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empb_umfilt",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.empb /UM.um_filter.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>[|f' F] //.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move/eqP/supp_nilE=>->; rewrite kfilt_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefb_undef",
            "line_nb": 923,
            "steps": [
                {
                    "command": [
                        "by rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefbP",
            "line_nb": 926,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /UM.undefb -{1}[f]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (UMC.from f)=>[|f' F]; constructor; rewrite !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_undefL",
            "line_nb": 933,
            "steps": [
                {
                    "command": [
                        "by rewrite /PCM.join /= !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_undefR",
            "line_nb": 936,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC join_undefL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umall_undef",
            "line_nb": 944,
            "steps": [
                {
                    "command": [
                        "by move=>k v; rewrite find_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umall0",
            "line_nb": 948,
            "steps": [
                {
                    "command": [
                        "by move=>k v; rewrite find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallUn",
            "line_nb": 951,
            "steps": [
                {
                    "command": [
                        "case W : (valid (f1 \\+ f2)); last by move/invalidE: (negbT W)=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>X Y k v; rewrite findUnL //; case: ifP=>_; [apply: X|apply: Y].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallUnL",
            "line_nb": 955,
            "steps": [
                {
                    "command": [
                        "by move=>W H k v F; apply: (H k v); rewrite findUnL // (find_some F).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallUnR",
            "line_nb": 958,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: umallUnL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_umfilt",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "by move=>a; rewrite dom_umfilt; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_indomE",
            "line_nb": 969,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_umfiltE",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "split; last by move=><- a; rewrite dom_umfilt; case/andP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/eq_in_umfilt=>->; rewrite umfilt_predT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfilt_memdomE",
            "line_nb": 976,
            "steps": [
                {
                    "command": [
                        "by apply/subdom_umfiltE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_disjE",
            "line_nb": 979,
            "steps": [
                {
                    "command": [
                        "split=>H a /=; first by case X: (a \\in p)=>//; move/H/negbTE: X.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>D; move: (H a); rewrite inE /= D; move/negbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_disjC",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "by split=>H a; apply: contraL (H a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_subdom",
            "line_nb": 986,
            "steps": [
                {
                    "command": [
                        "by case: validUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_valid",
            "line_nb": 989,
            "steps": [
                {
                    "command": [
                        "by move=>H X Y; case: validUn; rewrite ?X ?Y=>// k /H /negbTE /= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_umfilt0",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "move=>V; split=>H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_in_umfilt (p2:=pred0)) ?umfilt_pred0 // => a /H /negbTE ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>k X; case: dom_find X H=>// a _ -> _; rewrite umfiltU !inE.",
                        "VernacExtend",
                        "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>// _ /empbE; rewrite /= empbU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_undef",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "by exists um_undef; rewrite join_undefR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_asym",
            "line_nb": 1007,
            "steps": [
                {
                    "command": [
                        "case=>a -> [b]; case V : (valid x); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/invalidE: (negbT V)=>->; rewrite join_undefL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1 2}[x]unitR -joinA in V *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/(joinxK V)/esym/join0E=>->; rewrite unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_filt2",
            "line_nb": 1014,
            "steps": [
                {
                    "command": [
                        "move=>H; case V : (valid y).",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: H V=>a -> V; rewrite umfiltUn //; eexists _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/invalidE: (negbT V)=>->; rewrite umfilt_undef; apply: umpleq_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_filtI",
            "line_nb": 1020,
            "steps": [
                {
                    "command": [
                        "exists (um_filter (predD predT p) x); rewrite -umfilt_predU.",
                        "VernacExtend",
                        "6f660e8a44dbb7494fde6b6235a29816855ba19c"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}[x]umfilt_predT; apply: eq_in_umfilt=>a; rewrite /= orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_filtE",
            "line_nb": 1025,
            "steps": [
                {
                    "command": [
                        "by move=>V; split=>[|<-] // H; case: H V=>b ->; apply: umfilt_dom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_filt_meet",
            "line_nb": 1028,
            "steps": [
                {
                    "command": [
                        "by move=>D /(umpleq_filt2 p); rewrite (eq_in_umfilt D) umfilt_predT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_join",
            "line_nb": 1031,
            "steps": [
                {
                    "command": [
                        "case Vx : (valid x); last by move/invalidE: (negbT Vx)=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>V /(umpleq_filtE _ Vx) <- /(umpleq_filtE _ Vx) <-.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite -umfilt_dpredU //; apply: valid_subdom V.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_subdom",
            "line_nb": 1036,
            "steps": [
                {
                    "command": [
                        "by move=>V H; case: H V=>a -> V b D; rewrite domUn inE V D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subdom_umpleq",
            "line_nb": 1039,
            "steps": [
                {
                    "command": [
                        "move=>V H Sx; move: (umpleq_filt_meet Sx H); rewrite umfiltUn //.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "rewrite umfilt_memdomE; move/subset_disjC: (valid_subdom V).",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "by move/(subdom_umfilt0 _ (validR V))=>->; rewrite unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_meet",
            "line_nb": 1044,
            "steps": [
                {
                    "command": [
                        "move=>V H1 H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have {V} [V1 V V2] : [/\\ valid (x \\+ y1), valid (y1 \\+ y2) & valid (x \\+ y2)].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (validL V); rewrite -joinA in V; rewrite (validR V).",
                        "VernacExtend",
                        "28d4a0fd202acc1c03d488729ef69db07a1b1b5b"
                    ]
                },
                {
                    "command": [
                        "by rewrite joinA joinAC in V; rewrite (validL V).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: subdom_umpleq (V1) (H1) _ => k D.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "move: {D} (umpleq_subdom V1 H1 D) (umpleq_subdom V2 H2 D).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite !domUn !inE V1 V2 /=; case : (k \\in dom x)=>//=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: validUn V=>// _ _ L _ /L /negbTE ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_some",
            "line_nb": 1055,
            "steps": [
                {
                    "command": [
                        "by move=>V H; case: H V=>a -> V H; rewrite findUnL // (find_some H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umpleq_none",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "by case E: (find t x1)=>[a|] // V H <-; rewrite (umpleq_some V H E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptsU",
            "line_nb": 1065,
            "steps": [
                {
                    "command": [
                        "by rewrite !pcmE /= !umEX /UM.pts /UM.upd; case: decP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPtK",
            "line_nb": 1068,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX /= /UM.dom /supp /UM.pts /UM.upd /UM.empty /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case D : (decP _)=>[a|a] /=; rewrite ?a ?(introF idP a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPt",
            "line_nb": 1072,
            "steps": [
                {
                    "command": [
                        "by move=>x; rewrite ptsU domU !inE eq_sym valid_unit dom0; case: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validPt",
            "line_nb": 1075,
            "steps": [
                {
                    "command": [
                        "by rewrite ptsU validU valid_unit andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqPt",
            "line_nb": 1078,
            "steps": [
                {
                    "command": [
                        "by apply/domeqP; rewrite !validPt; split=>// x; rewrite !domPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findPt",
            "line_nb": 1081,
            "steps": [
                {
                    "command": [
                        "by rewrite ptsU findU eq_refl /= valid_unit andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findPt2",
            "line_nb": 1084,
            "steps": [
                {
                    "command": [
                        "by rewrite ptsU findU valid_unit andbT find0E; case: ifP=>//=; case: ifP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findPt_inv",
            "line_nb": 1087,
            "steps": [
                {
                    "command": [
                        "rewrite ptsU findU; case: eqP; last by case: ifP=>//; rewrite find0E.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>->; rewrite valid_unit andbT; case: ifP=>// _ [->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freePt2",
            "line_nb": 1091,
            "steps": [
                {
                    "command": [
                        "by move=>N; rewrite ptsU freeU free0 N.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freePt",
            "line_nb": 1094,
            "steps": [
                {
                    "command": [
                        "by move=>N; rewrite freePt2 // eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancelPt",
            "line_nb": 1097,
            "steps": [
                {
                    "command": [
                        "by rewrite validPt !ptsU; apply: upd_inj.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancelPt2",
            "line_nb": 1100,
            "steps": [
                {
                    "command": [
                        "move=>H E; have : dom (pts k1 v1 : U) = dom (pts k2 v2 : U) by rewrite E.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite !domPtK -(validPt _ v1) -(validPt _ v2) -E H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case=>E'; rewrite -{k2}E' in E *; rewrite (cancelPt H E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updPt",
            "line_nb": 1105,
            "steps": [
                {
                    "command": [
                        "by rewrite !ptsU updU eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbPt",
            "line_nb": 1108,
            "steps": [
                {
                    "command": [
                        "by rewrite ptsU empbU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validPtUn",
            "line_nb": 1111,
            "steps": [
                {
                    "command": [
                        "case: validUn=>//; last 1 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite validPt=>H1 -> H2; rewrite H1 (H2 k) //.",
                        "VernacExtend",
                        "82d53976234637e3f0907eb36cddf61d028c6306"
                    ]
                },
                {
                    "command": [
                        "by rewrite domPtK H1 inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite validPt; move/negbTE=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/negbTE=>->; rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite domPtK=>x; case: ifP=>// _.",
                        "VernacExtend",
                        "4a95f82aca0fc9a50f43053eca44fc9141212abe"
                    ]
                },
                {
                    "command": [
                        "by rewrite inE=>/eqP ->->; rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnPt",
            "line_nb": 1123,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: validPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validPtUn_cond",
            "line_nb": 1126,
            "steps": [
                {
                    "command": [
                        "by rewrite validPtUn; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnPt_cond",
            "line_nb": 1129,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: validPtUn_cond.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validPtUnV",
            "line_nb": 1132,
            "steps": [
                {
                    "command": [
                        "by rewrite validPtUn; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnPtV",
            "line_nb": 1135,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: validPtUnV.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validPtUnD",
            "line_nb": 1138,
            "steps": [
                {
                    "command": [
                        "by rewrite validPtUn; case/and3P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validUnPtD",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: validPtUnD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPtUn",
            "line_nb": 1144,
            "steps": [
                {
                    "command": [
                        "move=>x; rewrite domUn !inE !validPtUn domPt !inE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!andbA; case: (UMC.p _ k).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domUnPt",
            "line_nb": 1148,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: domPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domPtUnE",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "by rewrite domPtUn inE eq_refl andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domUnPtE",
            "line_nb": 1154,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: domPtUnE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validxx",
            "line_nb": 1157,
            "steps": [
                {
                    "command": [
                        "by case: validUn=>// _ _ L _ z; case: (_ \\in _) (L z)=>//; elim.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqPtUn",
            "line_nb": 1160,
            "steps": [
                {
                    "command": [
                        "by apply: domeqUn=>//; apply: domeqPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqUnPt",
            "line_nb": 1163,
            "steps": [
                {
                    "command": [
                        "by rewrite (joinC f1) (joinC f2); apply: domeqPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findPtUn",
            "line_nb": 1166,
            "steps": [
                {
                    "command": [
                        "move=>V'; rewrite findUnL // domPt inE.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite ptsU findU eq_refl valid_unit (validPtUn_cond V').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findUnPt",
            "line_nb": 1170,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: findPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findPtUn2",
            "line_nb": 1173,
            "steps": [
                {
                    "command": [
                        "move=>V'; rewrite findUnL // domPt inE eq_sym.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite findPt2 (validPtUn_cond V') andbT /=; case: ifP=>// ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "findUnPt2",
            "line_nb": 1177,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: findPtUn2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freePtUn2",
            "line_nb": 1180,
            "steps": [
                {
                    "command": [
                        "move=>V'; rewrite freeUn domPtUn inE V' /= eq_sym.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite ptsU freeU (validPtUn_cond V') free0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP=>/= E; first by rewrite E unitL (dom_free (validPtUnD V')).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>// N; rewrite dom_free // N.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnPt2",
            "line_nb": 1186,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC _ (pts k2 v)); apply: freePtUn2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freePtUn",
            "line_nb": 1189,
            "steps": [
                {
                    "command": [
                        "by move=>V'; rewrite freePtUn2 // eq_refl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeUnPt",
            "line_nb": 1192,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: freePtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updPtUn",
            "line_nb": 1195,
            "steps": [
                {
                    "command": [
                        "case V1 : (valid (pts k v2 \\+ f)).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite updUnL domPt inE eq_refl updPt (validPtUn_cond V1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have V2 : valid (pts k v1 \\+ f) = false.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite !validPtUn in V1 *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/negbT/invalidE: V1=>->; move/negbT/invalidE: V2=>->.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by apply: upd_invalid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "updUnPt",
            "line_nb": 1205,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC f); apply: updPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbPtUn",
            "line_nb": 1208,
            "steps": [
                {
                    "command": [
                        "by rewrite empbUn empbPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empbUnPt",
            "line_nb": 1211,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: empbPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pts_undef",
            "line_nb": 1214,
            "steps": [
                {
                    "command": [
                        "apply/invalidE; rewrite validPtUn validPt domPt !negb_and negb_or eq_refl.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by case: (cond U k).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltPt",
            "line_nb": 1218,
            "steps": [
                {
                    "command": [
                        "by rewrite ptsU umfiltU umfilt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltPtUn",
            "line_nb": 1221,
            "steps": [
                {
                    "command": [
                        "case: ifP=>X; last by move/invalidE: (negbT X)=>->; rewrite umfilt_undef.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite umfiltUn // umfiltPt (validPtUn_cond X).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>//; rewrite unitL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallPt",
            "line_nb": 1226,
            "steps": [
                {
                    "command": [
                        "by move=>X u w /findPt_inv [_ <-].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallPtUn",
            "line_nb": 1229,
            "steps": [
                {
                    "command": [
                        "by move/(umallPt (k:=k)); apply: umallUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallPtE",
            "line_nb": 1232,
            "steps": [
                {
                    "command": [
                        "by move=>C /(_ k v); rewrite findPt C; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umallPtUnE",
            "line_nb": 1235,
            "steps": [
                {
                    "command": [
                        "move=>W H; move: (umallUnL W H) (umallUnR W H)=>{H} H1 H2.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by split=>//; apply: umallPtE H1; apply: validPtUn_cond W.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "um_eta",
            "line_nb": 1239,
            "steps": [
                {
                    "command": [
                        "case: dom_find=>// v E1 E2 _; exists v; split=>//.",
                        "VernacExtend",
                        "a60465573b684d5ede0b6b76d2c8bb797e76b6d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}E2 -{1}[free k f]unitL updUnR domF inE /= eq_refl ptsU.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "um_eta2",
            "line_nb": 1243,
            "steps": [
                {
                    "command": [
                        "by move=>E; case/um_eta: (find_some E)=>v' []; rewrite E; case=><-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel",
            "line_nb": 1246,
            "steps": [
                {
                    "command": [
                        "move=>V' E.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have: find k (pts k v1 \\+ f1) = find k (pts k v2 \\+ f2) by rewrite E.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite !findPtUn -?E //; case=>X.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{}X in E *; rewrite -(joinxK V' E) (validR V').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cancel2",
            "line_nb": 1252,
            "steps": [
                {
                    "command": [
                        "move=>V1 E; case: ifP=>X.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqP X) in E; case/(cancel V1): E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (V1); rewrite E => V2.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "have E' : f2 = pts k1 v1 \\+ free k2 f1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (erefl (free k2 (pts k1 v1 \\+ f1))).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite {2}E freeUn E domPtUn inE V2 eq_refl /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ptsU freeU eq_sym X free0 -ptsU freePtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff E'' : free k2 f1 = free k1 f2.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -E''; rewrite E' joinCA in E; case/(cancel V1): E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (erefl (free k1 f2)).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}E' freePtUn // -E'; apply: (validR V2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "um_prime",
            "line_nb": 1296,
            "steps": [
                {
                    "command": [
                        "move: f1 f2; apply: um_indf=>[f1|f2 _|k2 w2 f1 _ _ _ f X E].",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite join_undefL -(validPt _ v)=>W E.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -E in W; rewrite valid_undef in W.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite unitL=>->; right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have W : valid (pts k2 w2 \\+ (f1 \\+ f)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(validPt _ v) -E -joinA in X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[pts k v]unitR -joinA in E.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move/(cancel2 W): E; case: ifP.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/eqP=>-> [->] /join0E [->->]; rewrite unitR; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>_ [_ _] /esym/empbP; rewrite empbPtUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_undefN",
            "line_nb": 1322,
            "steps": [
                {
                    "command": [
                        "by rewrite valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undef_join",
            "line_nb": 1325,
            "steps": [
                {
                    "command": [
                        "by rewrite join_undefL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umfiltE",
            "line_nb": 1424,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umPtPtE",
            "line_nb": 1472,
            "steps": [
                {
                    "command": [
                        "rewrite {1}/eq_op /= /UnionMapEq.unionmap_eq /um_pts !umEX /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}/eq_op /= /feq eqseq_cons andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umPt0E",
            "line_nb": 1476,
            "steps": [
                {
                    "command": [
                        "by apply: (introF idP)=>/eqP/empbP; rewrite empbPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "um0PtE",
            "line_nb": 1479,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_sym umPt0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umPtUndefE",
            "line_nb": 1482,
            "steps": [
                {
                    "command": [
                        "by rewrite /eq_op /= /UnionMapEq.unionmap_eq /um_pts !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umUndefPtE",
            "line_nb": 1485,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_sym umPtUndefE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umUndef0E",
            "line_nb": 1488,
            "steps": [
                {
                    "command": [
                        "by apply/(introF idP)=>/eqP/empbP; rewrite empb_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "um0UndefE",
            "line_nb": 1491,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_sym umUndef0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umPtUE",
            "line_nb": 1494,
            "steps": [
                {
                    "command": [
                        "by apply: (introF idP)=>/eqP/join0E/proj1/eqP; rewrite umPt0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umUPtE",
            "line_nb": 1497,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC umPtUE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umPtPtUE",
            "line_nb": 1510,
            "steps": [
                {
                    "command": [
                        "by rewrite eq_sym umPtUPtE (eq_sym k1) (eq_sym v1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umUPtPtE",
            "line_nb": 1513,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC umPtUPtE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "umPtUPt2E",
            "line_nb": 1516,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC umPtPtUE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}