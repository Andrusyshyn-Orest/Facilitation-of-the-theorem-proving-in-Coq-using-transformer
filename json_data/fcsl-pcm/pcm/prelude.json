{
    "filename": "pcm/prelude.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun Eqdep.",
            "VernacRequire",
            "ab72e687699ea519072b356adfb386686d2abda7"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype.",
            "VernacRequire",
            "9e197fd62ce7a98c522063cd53f86e7329885990"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Definition inj_pair2 := @inj_pair2.",
            "VernacDefinition",
            "70ec7b95110f09d11eb809367fb07cd96cfa4022"
        ],
        [
            "Arguments inj_pair2 [U P p x y] _.",
            "VernacArguments",
            "7147fce27cdacf9356178ef232a680055d13e36d"
        ],
        [
            "Prenex Implicits inj_pair2.",
            "VernacExtend",
            "fe4379eed4dc4ccd58453a316fccc2a2ca142ec3"
        ],
        [
            "Notation prod_eta := surjective_pairing.",
            "VernacSyntacticDefinition",
            "6315195aca039c78161f7122501d02251920ca66"
        ],
        [
            "Lemma prod_inj A B (x y : A * B) : x = y <-> (x.1, x.2) = (y.1, y.2).",
            "VernacStartTheoremProof",
            "225146c07803108a66d3af0dd15bf37d692e3ae8"
        ],
        [
            "by case: x y=>x1 x2 [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Prenex Implicits Some_inj.",
            "VernacExtend",
            "afff88e4627e6b631336911e936750ef0b801858"
        ],
        [
            "Lemma compA A B C D (h : A -> B) (g : B -> C) (f : C -> D) : (f \\o g) \\o h = f \\o (g \\o h).",
            "VernacStartTheoremProof",
            "050d93fbfb94952aa3c8c522f6ef060d2a60b9c4"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fprod A1 A2 B1 B2 (f1 : A1 -> B1) (f2 : A2 -> B2) := fun (x : A1 * A2) => (f1 x.1, f2 x.2).",
            "VernacDefinition",
            "7acb6c3d6f2ae7358ff9f5504ada5cf4ba4b1945"
        ],
        [
            "Notation \"f1 \\* f2\" := (fprod f1 f2) (at level 42, left associativity).",
            "VernacNotation",
            "3f92021561e80bd2ea62409d7f62d966f57e8af4"
        ],
        [
            "Lemma ext A (B : A -> Type) (f1 f2 : forall x, B x) : f1 = f2 -> forall x, f1 x = f2 x.",
            "VernacStartTheoremProof",
            "cd03e34a7d7960c9550fa0878ce6d997990fb228"
        ],
        [
            "by move=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fsplice A B1 B2 (f1 : A -> B1) (f2 : A -> B2) := fun x : A => (f1 x, f2 x).",
            "VernacDefinition",
            "be2f6a1b01aa53b4ae4884996aea151a7db2b047"
        ],
        [
            "Notation \"[ 'fs' f1 , f2 ]\" := (fsplice f1 f2) (at level 0, format \"[ 'fs' f1 , f2 ]\").",
            "VernacNotation",
            "3d154b3d28b07ce456b10aa08e8d0fe29f0780e9"
        ],
        [
            "Definition relfuncomp A B (D : rel A) (f : B -> A) : rel B := fun x y => D (f x) (f y).",
            "VernacDefinition",
            "d98823d3d4607df833861756afd2a65ddf627ccc"
        ],
        [
            "Notation \"D \\\\o f\" := (@relfuncomp _ _ D f) (at level 42, left associativity).",
            "VernacNotation",
            "8e9c4dc38abd2bd34f41b4da2991a9f89e63d79d"
        ],
        [
            "Reserved Notation \"[ /\\ P1 , P2 , P3 , P4 , P5 & P6 ]\" (at level 0, format \"'[hv' [ /\\ '[' P1 , '/' P2 , '/' P3 , '/' P4 , '/' P5 ']' '/ ' & P6 ] ']'\").",
            "VernacSyntaxExtension",
            "2da16cb06ba5d084a7dd3143ac36da478eaefc94"
        ],
        [
            "Reserved Notation \"[ /\\ P1 , P2 , P3 , P4 , P5 , P6 & P7 ]\" (at level 0, format \"'[hv' [ /\\ '[' P1 , '/' P2 , '/' P3 , '/' P4 , '/' P5 , '/' P6 ']' '/ ' & P7 ] ']'\").",
            "VernacSyntaxExtension",
            "44a8fa679071cdaefd9e86a0666c714d3973b264"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 , P3 , P4 | P5 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 , '/' P3 , '/' P4 ']' '/ ' | P5 ] ']'\").",
            "VernacSyntaxExtension",
            "078d4216e622214ed6a204f6bba2d2753bbb9b20"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 , P3 , P4 , P5 | P6 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 , '/' P3 , '/' P4 , '/' P5 ']' '/ ' | P6 ] ']'\").",
            "VernacSyntaxExtension",
            "3f204c70f90a5b486a86b4b7b5184858f6aa0fec"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 , P3 , P4 , P5 , P6 | P7 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 , '/' P3 , '/' P4 , '/' P5 , '/' P6 ']' '/ ' | P7 ] ']'\").",
            "VernacSyntaxExtension",
            "7208f6fb20c77f62c48d9103804dd5271e90063e"
        ],
        [
            "Inductive and6 (P1 P2 P3 P4 P5 P6 : Prop) : Prop := And6 of P1 & P2 & P3 & P4 & P5 & P6.",
            "VernacInductive",
            "620d66fe89a40f8510d6ce624dfedfa95a0ef567"
        ],
        [
            "Inductive and7 (P1 P2 P3 P4 P5 P6 P7 : Prop) : Prop := And7 of P1 & P2 & P3 & P4 & P5 & P6 & P7.",
            "VernacInductive",
            "0e382b172f9dd6fc553f4e21c345fdf6a3734ea3"
        ],
        [
            "Inductive or5 (P1 P2 P3 P4 P5 : Prop) : Prop := Or51 of P1 | Or52 of P2 | Or53 of P3 | Or54 of P4 | Or55 of P5.",
            "VernacInductive",
            "1d39ee73c4ea7b67aaadf757cc28b9c242a922bd"
        ],
        [
            "Inductive or6 (P1 P2 P3 P4 P5 P6 : Prop) : Prop := Or61 of P1 | Or62 of P2 | Or63 of P3 | Or64 of P4 | Or65 of P5 | Or66 of P6.",
            "VernacInductive",
            "fca95668b0b6d52628c914aa834a13fe6b0bd47b"
        ],
        [
            "Inductive or7 (P1 P2 P3 P4 P5 P6 P7 : Prop) : Prop := Or71 of P1 | Or72 of P2 | Or73 of P3 | Or74 of P4 | Or75 of P5 | Or76 of P6 | Or77 of P7.",
            "VernacInductive",
            "7c9309bab5c72d57c1332edf7ad80a8a14d1ef10"
        ],
        [
            "Notation \"[ /\\ P1 , P2 , P3 , P4 , P5 & P6 ]\" := (and6 P1 P2 P3 P4 P5 P6) : type_scope.",
            "VernacNotation",
            "606eda6b8cb390777be8ddbeb44773dfecf0a73f"
        ],
        [
            "Notation \"[ /\\ P1 , P2 , P3 , P4 , P5 , P6 & P7 ]\" := (and7 P1 P2 P3 P4 P5 P6 P7) : type_scope.",
            "VernacNotation",
            "3c54f72b3f3e8d40093edce3b619272029a17833"
        ],
        [
            "Notation \"[ \\/ P1 , P2 , P3 , P4 | P5 ]\" := (or5 P1 P2 P3 P4 P5) : type_scope.",
            "VernacNotation",
            "56f90e6b154348f1e76ea9d199469d05f08597c8"
        ],
        [
            "Notation \"[ \\/ P1 , P2 , P3 , P4 , P5 | P6 ]\" := (or6 P1 P2 P3 P4 P5 P6) : type_scope.",
            "VernacNotation",
            "5ebdd8386c9238169c3e89daad10731c9605febb"
        ],
        [
            "Notation \"[ \\/ P1 , P2 , P3 , P4 , P5 , P6 | P7 ]\" := (or7 P1 P2 P3 P4 P5 P6 P7) : type_scope.",
            "VernacNotation",
            "c22c5569584159cfe00c16d9b9c0369b5f05ceaa"
        ],
        [
            "Section ReflectConnectives.",
            "VernacBeginSection",
            "02f0c4f6eee9257dbdbf8211bfe308231ac2ac4e"
        ],
        [
            "Variable b1 b2 b3 b4 b5 b6 b7 : bool.",
            "VernacAssumption",
            "6a0fe709ab69608ffdff46668d13421c7c9d4e8a"
        ],
        [
            "Lemma and6P : reflect [/\\ b1, b2, b3, b4, b5 & b6] [&& b1, b2, b3, b4, b5 & b6].",
            "VernacStartTheoremProof",
            "a0eccfdb82e04bb824f735b00a9308babed00556"
        ],
        [
            "by case b1; case b2; case b3; case b4; case b5; case b6; constructor; try by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and7P : reflect [/\\ b1, b2, b3, b4, b5, b6 & b7] [&& b1, b2, b3, b4, b5, b6 & b7].",
            "VernacStartTheoremProof",
            "21dd293b6eacdf9bf0181067da24fd6063d8f9ee"
        ],
        [
            "by case b1; case b2; case b3; case b4; case b5; case b6; case: b7; constructor; try by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or5P : reflect [\\/ b1, b2, b3, b4 | b5] [|| b1, b2, b3, b4 | b5].",
            "VernacStartTheoremProof",
            "7a1dc7529393185aedd7099bc0d0a218e589d1e2"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b4; first by constructor; constructor 4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b5; first by constructor; constructor 5.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or6P : reflect [\\/ b1, b2, b3, b4, b5 | b6] [|| b1, b2, b3, b4, b5 | b6].",
            "VernacStartTheoremProof",
            "b2354a6490e357c5713d2a1d9cd48457e2bf7861"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b4; first by constructor; constructor 4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b5; first by constructor; constructor 5.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b6; first by constructor; constructor 6.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or7P : reflect [\\/ b1, b2, b3, b4, b5, b6 | b7] [|| b1, b2, b3, b4, b5, b6 | b7].",
            "VernacStartTheoremProof",
            "2e67dbce2ddd7a254e284911c981beaeae030973"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b4; first by constructor; constructor 4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b5; first by constructor; constructor 5.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b6; first by constructor; constructor 6.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b7; first by constructor; constructor 7.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ReflectConnectives.",
            "VernacEndSegment",
            "6ab67952e45b808517773c4b3855540440e05eed"
        ],
        [
            "Arguments and6P [b1 b2 b3 b4 b5 b6].",
            "VernacArguments",
            "abed691b6cc709b2d9cc24c668684fca04326403"
        ],
        [
            "Arguments and7P [b1 b2 b3 b4 b5 b6 b7].",
            "VernacArguments",
            "881d9d319024fde533aaa911354e036ccf265001"
        ],
        [
            "Arguments or5P [b1 b2 b3 b4 b5].",
            "VernacArguments",
            "d5b59790ee6cc82a17ffbb3a3d2bfd3cbd814e42"
        ],
        [
            "Arguments or6P [b1 b2 b3 b4 b5 b6].",
            "VernacArguments",
            "ab8d29449b307dfd21d88fa4c7646c733bea6276"
        ],
        [
            "Arguments or7P [b1 b2 b3 b4 b5 b6 b7].",
            "VernacArguments",
            "384e755e03d8c5ecb28974e5aafa8a062106809a"
        ],
        [
            "Prenex Implicits and6P and7P or5P or6P or7P.",
            "VernacExtend",
            "123cfb75462e34e5256ecb3fe8dd4508f4428126"
        ],
        [
            "Lemma andX (a b : bool) : reflect (a * b) (a && b).",
            "VernacStartTheoremProof",
            "500d1894acf482c228aa1a228d09ad68f49b19a9"
        ],
        [
            "by case: a; case: b; constructor=>//; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments andX [a b].",
            "VernacArguments",
            "8e05b5ff36f0566380007ab3f42ab4ae93472ab2"
        ],
        [
            "Fixpoint iter' T (g : T -> T -> Prop) n s1 s2 := if n is n'.+1 then exists s, g s1 s /\\ iter' g n' s s2 else s1 = s2.",
            "VernacFixpoint",
            "b3d214052e7888d21f3c64bedd76e97c053bc4e3"
        ],
        [
            "Definition iter T (g : T -> T -> Prop) s1 s2 := exists n, iter' g n s1 s2.",
            "VernacDefinition",
            "cdf4fd849712afbeade1eca2dc2e436fc3f5e18a"
        ],
        [
            "Definition iterc A T (g : A -> T -> A -> T -> Prop) a1 s1 a2 s2 := iter (fun (a b : A * T) => g a.1 a.2 b.1 b.2) (a1, s1) (a2, s2).",
            "VernacDefinition",
            "93614811903753dd4f90b95e5f4659e563b346d6"
        ],
        [
            "Section IteratedRels.",
            "VernacBeginSection",
            "5afe85f102e59aee54d574324252074c1eeee662"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Implicit Type g : T -> T -> Prop.",
            "VernacReserve",
            "bd13e8dbb2e5a8dbd633918b1412849a502c9bbb"
        ],
        [
            "Lemma iter_refl g s : iter g s s.",
            "VernacStartTheoremProof",
            "51a59ff85e1ccb48e267a95e5eb05fa5c8354000"
        ],
        [
            "by exists 0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_trans g s1 s2 s3 : iter g s1 s2 -> iter g s2 s3 -> iter g s1 s3.",
            "VernacStartTheoremProof",
            "97a9398a9166d7d2760fc19c07f2f1151d62db5a"
        ],
        [
            "case=>n; elim: n s1 =>[|n IH] s1 /=; first by move=>->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>s [H1 H2] /(IH _ H2) [m]; exists m.+1, s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iterS g n s1 s2 : iter' g n.+1 s1 s2 <-> exists s, iter' g n s1 s /\\ g s s2.",
            "VernacStartTheoremProof",
            "dbad3205d2e48aed88ec9c6606b39fb8659f66a7"
        ],
        [
            "elim: n s1=>[|n IH] s1.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by split; [case=>s [H <-]; exists s1 | case=>s [<- H]; exists s2].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split; first by case=>s [H1] /IH [s'][H G]; exists s'; split=>//; exists s.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>s [[s'][H1 H G]]; exists s'; split=>//; apply/IH; exists s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter'_sub g g' n s1 s2 : (forall s1 s2, g s1 s2 -> g' s1 s2) -> iter' g n s1 s2 -> iter' g' n s1 s2.",
            "VernacStartTheoremProof",
            "d238606ebe29fd70fe10db4cff2153bff1fcbaf2"
        ],
        [
            "by move=>H; elim: n s1=>[|n IH] s1 //= [s][/H G] /IH; exists s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_sub g g' s1 s2 : (forall s1 s2, g s1 s2 -> g' s1 s2) -> iter g s1 s2 -> iter g' s1 s2.",
            "VernacStartTheoremProof",
            "dd404ef385e3d4d39d9af001350123ebe36d95a7"
        ],
        [
            "by move=>H [n]; exists n; apply: iter'_sub H _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter1 g s1 s2 : g s1 s2 -> iter g s1 s2.",
            "VernacStartTheoremProof",
            "154400c190d4d2f956a53290af5734d12656c759"
        ],
        [
            "by exists 1, s2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IteratedRels.",
            "VernacEndSegment",
            "abb4f74835ccab6e6b19476aa6b26929ba5f323d"
        ],
        [
            "Lemma iter2 A T (g : A -> T -> A -> T -> Prop) x1 s1 x2 s2 : g x1 s1 x2 s2 -> iterc g x1 s1 x2 s2.",
            "VernacStartTheoremProof",
            "6f183d3d40b9b302209a0b78052a9ead368a210d"
        ],
        [
            "by apply: iter1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Prenex Implicits iter1 iter2.",
            "VernacExtend",
            "cba80c4044dc8b13f493a7c75bc148588cee27c0"
        ],
        [
            "Arguments iter_refl [T g s].",
            "VernacArguments",
            "b5114b309641720575c9e5cc36ca12d217d5ed30"
        ],
        [
            "Hint Resolve iter_refl : core.",
            "VernacHints",
            "63bbe03ca87b30ee13213d6fab28c598f1ae2fea"
        ],
        [
            "Lemma emptyset_eqP : Equality.axiom (fun _ _ : Empty_set => true).",
            "VernacStartTheoremProof",
            "a510b08a91b540ea47594a7ec186d7f84f6177b6"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition emptysetEqMix := EqMixin emptyset_eqP.",
            "VernacDefinition",
            "e00d0e0b0379528b534548c85272f6c8d4eaf757"
        ],
        [
            "Canonical emptysetEqType := Eval hnf in EqType Empty_set emptysetEqMix.",
            "VernacDefinition",
            "0468b7623db4959220c8d5ddef25b39dddac13b0"
        ]
    ],
    "proofs": [
        {
            "name": "prod_inj",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "by case: x y=>x1 x2 [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compA",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "by move=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and6P",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; case b3; case b4; case b5; case b6; constructor; try by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and7P",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; case b3; case b4; case b5; case b6; case: b7; constructor; try by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or5P",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "case b1; first by constructor; constructor 1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b2; first by constructor; constructor 2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b3; first by constructor; constructor 3.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b4; first by constructor; constructor 4.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b5; first by constructor; constructor 5.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or6P",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "case b1; first by constructor; constructor 1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b2; first by constructor; constructor 2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b3; first by constructor; constructor 3.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b4; first by constructor; constructor 4.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b5; first by constructor; constructor 5.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b6; first by constructor; constructor 6.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or7P",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "case b1; first by constructor; constructor 1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b2; first by constructor; constructor 2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b3; first by constructor; constructor 3.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b4; first by constructor; constructor 4.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b5; first by constructor; constructor 5.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b6; first by constructor; constructor 6.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b7; first by constructor; constructor 7.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andX",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; constructor=>//; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_refl",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "by exists 0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_trans",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s1 =>[|n IH] s1 /=; first by move=>->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case=>s [H1 H2] /(IH _ H2) [m]; exists m.+1, s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iterS",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "elim: n s1=>[|n IH] s1.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by split; [case=>s [H <-]; exists s1 | case=>s [<- H]; exists s2].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split; first by case=>s [H1] /IH [s'][H G]; exists s'; split=>//; exists s.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case=>s [[s'][H1 H G]]; exists s'; split=>//; apply/IH; exists s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter'_sub",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by move=>H; elim: n s1=>[|n IH] s1 //= [s][/H G] /IH; exists s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_sub",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "by move=>H [n]; exists n; apply: iter'_sub H _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter1",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by exists 1, s2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter2",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "by apply: iter1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "emptyset_eqP",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}