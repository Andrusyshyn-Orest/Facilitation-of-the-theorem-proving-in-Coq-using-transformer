{
    "filename": "pcm/automap.v",
    "coq_project": "fcsl-pcm",
    "vernac_cmds": [
        [
            "From Coq Require Import ssreflect ssrbool ssrfun.",
            "VernacRequire",
            "9a4de89d59148438778876f3d359c83206dca702"
        ],
        [
            "From mathcomp Require Import ssrnat eqtype seq.",
            "VernacRequire",
            "a978f1e4e7438b8f721d91e8ee860f6373039d8c"
        ],
        [
            "From fcsl Require Import pred ordtype pcm unionmap.",
            "VernacRequire",
            "ab7b2098d7fbfbcb24ac07fa8f580c8c42c4ae51"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Section Helpers.",
            "VernacBeginSection",
            "0284d0fc5280a24c4ab4f84d27b25ff6b5da53d8"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Fixpoint onth (s : seq A) n : option A := if s is x::sx then if n is nx.+1 then onth sx nx else Some x else None.",
            "VernacFixpoint",
            "2cb62844a5c87fe8a3e189071d309540ab458ee6"
        ],
        [
            "Definition prefix s1 s2 := forall n x, onth s1 n = some x -> onth s2 n = some x.",
            "VernacDefinition",
            "7763e5e04010598607e03bf288311ff4faa45831"
        ],
        [
            "Lemma size_onth s n : n < size s -> exists x, onth s n = Some x.",
            "VernacStartTheoremProof",
            "ec3731a28a6f0a5db70a103beb17e74562b9c1d2"
        ],
        [
            "elim: s n=>[//|a s IH] [|n] /=; first by exists a.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(addn1 n) -(addn1 (size s)) ltn_add2r; apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma onth_size s n x : onth s n = Some x -> n < size s.",
            "VernacStartTheoremProof",
            "953e2e0f814b2652b511ce59c2a0770a04f3e702"
        ],
        [
            "by elim: s n=>[//|a s IH] [//|n]; apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_refl s : prefix s s.",
            "VernacStartTheoremProof",
            "3fd19fdee42baae38947b54b59ebc6d3831e435a"
        ],
        [
            "by move=>n x <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_trans s2 s1 s3 : prefix s1 s2 -> prefix s2 s3 -> prefix s1 s3.",
            "VernacStartTheoremProof",
            "58050e21560909036e4cb8da42808a0497440871"
        ],
        [
            "by move=>H1 H2 n x E; apply: H2; apply: H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_cons x s1 s2 : prefix (x :: s1) (x :: s2) <-> prefix s1 s2.",
            "VernacStartTheoremProof",
            "a06cbcc334ba517d25b4ad448e5e1ca69af13d7c"
        ],
        [
            "by split=>E n; [apply: (E n.+1) | case: n].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_cons' x y s1 s2 : prefix (x :: s1) (y :: s2) -> x = y /\\ prefix s1 s2.",
            "VernacStartTheoremProof",
            "c8023c86df9fa7f1513fee03cc019d3b56bbef94"
        ],
        [
            "by move=>H; case: (H 0 x (erefl _)) (H)=>-> /prefix_cons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_size s1 s2 : prefix s1 s2 -> size s1 <= size s2.",
            "VernacStartTheoremProof",
            "1f45c862325ca44b76e22aeb18996d899fb4b657"
        ],
        [
            "elim: s1 s2=>[//|a s1 IH] [|b s2] H; first by move: (H 0 a (erefl _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltnS; apply: (IH _ (proj2 (prefix_cons' H))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prefix_onth s t x : x < size s -> prefix s t -> onth s x = onth t x.",
            "VernacStartTheoremProof",
            "6a72dea1ce83e9506046bf4ce9237d52399753a2"
        ],
        [
            "elim:s t x =>[//|a s IH] [|b t] x H1 H2; first by move: (H2 0 a (erefl _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/prefix_cons': H2=><- H2; case: x H1=>[|n] //= H1; apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Helpers.",
            "VernacEndSegment",
            "f72fad4c589792c9ace3072f273a315db9533226"
        ],
        [
            "Hint Resolve prefix_refl : core.",
            "VernacHints",
            "b61fa3a5d5e038e90e5169c438de6516fead335f"
        ],
        [
            "Lemma onth_mem (A : eqType) (s : seq A) n x : onth s n = Some x -> x \\in s.",
            "VernacStartTheoremProof",
            "bb6b7be1c75fcb9771d6df3ae107f4e42eb3744e"
        ],
        [
            "by elim: s n=>//= a s IH [[->]|n /IH]; rewrite inE ?eq_refl // orbC => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ReflectionContexts.",
            "VernacBeginSection",
            "c873f0625fd76f4ff1e1ab0598aa1fd44d05019c"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Structure ctx := Context {keyx : seq K; varx : seq U}.",
            "VernacInductive",
            "6448dea270e13c920d5c1eb181380a5ac31c32e5"
        ],
        [
            "Definition empx := Context [::] [::].",
            "VernacDefinition",
            "aecb5bf42cb2348f174ad7496cb83535cdfea786"
        ],
        [
            "Definition sub_ctx i j := prefix (keyx i) (keyx j) /\\ prefix (varx i) (varx j).",
            "VernacDefinition",
            "4fe83c49dae0ec06edcd69b9ea99a5d3e970ce17"
        ],
        [
            "Lemma sc_refl i : sub_ctx i i.",
            "VernacStartTheoremProof",
            "969c84c8eb04d6fadb8c810a9b9c7d702e8bf4c2"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sc_trans i j k : sub_ctx i j -> sub_ctx j k -> sub_ctx i k.",
            "VernacStartTheoremProof",
            "76a6d2724b360ae547883998cab609a2ce78c24f"
        ],
        [
            "by case=>K1 V1 [K2 V2]; split; [move: K2 | move: V2]; apply: prefix_trans.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ReflectionContexts.",
            "VernacEndSegment",
            "dcbf89c9710b92b33c8103c81076c92d07c417fa"
        ],
        [
            "Section OneShotFilter.",
            "VernacBeginSection",
            "7a00a23cac17a4dd3264a44a5814a6f2e9a1221c"
        ],
        [
            "Variables (A : Type) (p : pred A).",
            "VernacAssumption",
            "b7c2582995e09058a4b2e175bb1cb2785fa489f3"
        ],
        [
            "Fixpoint rfilter ts : seq A := if ts is t :: ts' then if p t then ts' else t :: rfilter ts' else [::].",
            "VernacFixpoint",
            "892c71db83f88c3b4e459d5c5e51d8e904784c48"
        ],
        [
            "End OneShotFilter.",
            "VernacEndSegment",
            "d2bd3f4a0e5be8f60f4afefdd95a08773771a943"
        ],
        [
            "Section Reflection.",
            "VernacBeginSection",
            "c643a04cf4e3533b5f172ab7fc302f86a0b9a44d"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Type i : ctx U.",
            "VernacReserve",
            "1d2125480876aba7a16604ef8430d771c7458691"
        ],
        [
            "Inductive term := Pts of nat & T | Var of nat.",
            "VernacInductive",
            "a8a6cf57ced843b37ae984223c29dab17875185c"
        ],
        [
            "Definition interp' i t := match t with Pts n v => if onth (keyx i) n is Some k then pts k v else um_undef | Var n => if onth (varx i) n is Some f then f else um_undef end.",
            "VernacDefinition",
            "5768a86d1c6edbf94b9f9022b1902b5c25619e08"
        ],
        [
            "Notation fx i := (fun t f => interp' i t \\+ f).",
            "VernacSyntacticDefinition",
            "24dc27970f6a4cf4e524342f4370d3a97c2db17f"
        ],
        [
            "Definition interp i ts := foldr (fx i) Unit ts.",
            "VernacDefinition",
            "ba14e1809d5e39af58fc48d58c63ffdcace21bf5"
        ],
        [
            "Lemma fE i ts x : foldr (fx i) x ts = x \\+ interp i ts.",
            "VernacStartTheoremProof",
            "644f2ffa639b98f25d1f4bc74e6e8b41024cf86d"
        ],
        [
            "by elim: ts x=>[|t ts IH] x; rewrite /= ?unitR // IH joinCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_rev i ts : interp i (rev ts) = interp i ts.",
            "VernacStartTheoremProof",
            "4e443658db61e24f6400e339458f24cb90d31656"
        ],
        [
            "elim: ts=>[|t ts IH] //=; rewrite rev_cons -cats1.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "by rewrite /interp foldr_cat fE /= unitR IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint pprint i ts := if ts is t :: ts' then if ts' is [::] then interp' i t else interp' i t \\+ pprint i ts' else Unit.",
            "VernacFixpoint",
            "14642d3ee79cc3f455264bd97771e20c4ccad529"
        ],
        [
            "Lemma pp_interp i ts : pprint i ts = interp i ts.",
            "VernacStartTheoremProof",
            "78379a4ee41ca4b470d0c9eb00db13f7f4936b1e"
        ],
        [
            "by elim: ts=>[|t ts /= <-] //; case: ts=>//; rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition key n t := if t is Pts m _ then n == m else false.",
            "VernacDefinition",
            "662a8ed72e9876d687701426f35b8928c18ddb90"
        ],
        [
            "Definition var n t := if t is Var m then n == m else false.",
            "VernacDefinition",
            "3241c2cfd47de73cc56028870ae91619dcee97a8"
        ],
        [
            "Definition kfree n t := rfilter (key n) t.",
            "VernacDefinition",
            "cdd36b5d4a41cbaa6c17b2bc81d74a7aa073e8dc"
        ],
        [
            "Definition vfree n t := rfilter (var n) t.",
            "VernacDefinition",
            "006f56ef9a4a67e65a481661458233024b0a1655"
        ],
        [
            "Lemma keyN i n ts : ~~ has (key n) ts -> interp i (kfree n ts) = interp i ts.",
            "VernacStartTheoremProof",
            "a345ac4f4a744f2cb6f9a8dacce3102c790bd89f"
        ],
        [
            "by elim: ts=>[|t ts IH] //=; case: ifP=>//= _ /IH ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma varN i n ts : ~~ has (var n) ts -> interp i (vfree n ts) = interp i ts.",
            "VernacStartTheoremProof",
            "c0efee219d9db8ed75e4595f7cbc44ddfd452bb1"
        ],
        [
            "by elim: ts=>[|t ts IH] //=; case: ifP=>//= _ /IH ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma keyP i n k ts : has (key n) ts -> onth (keyx i) n = Some k -> exists v, interp i ts = pts k v \\+ interp i (kfree n ts).",
            "VernacStartTheoremProof",
            "5e8441c6436d94cd94f134d30d68439d49f3df96"
        ],
        [
            "elim: ts=>[|t ts IH] //=; case: ifP=>[|_ H].",
            "VernacExtend",
            "df63f96bedbb0673aecb42521d90011325a86c94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: t=>//= _ v /eqP <- _ ->; exists v.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/(IH H)=>v ->; exists v; rewrite joinCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma varP i n u ts : has (var n) ts -> onth (varx i) n = Some u -> interp i ts = u \\+ interp i (vfree n ts).",
            "VernacStartTheoremProof",
            "70d84779a973b0ca6ff732e63301a9ee972e562f"
        ],
        [
            "elim: ts=>[|t ts IH] //=; case: ifP=>[|_ H].",
            "VernacExtend",
            "df63f96bedbb0673aecb42521d90011325a86c94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: t=>//= _ /eqP <- _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/(IH H)=>->; rewrite joinCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition wf i t := match t with Pts n _ => n < size (keyx i) | Var n => n < size (varx i) end.",
            "VernacDefinition",
            "102a404c33df25e52be450588814b93fdecf1173"
        ],
        [
            "Lemma sc_wf i j ts : sub_ctx i j -> all (wf i) ts -> all (wf j) ts.",
            "VernacStartTheoremProof",
            "1f4708e064db89ced1e12ee9bdc56dc2bee39640"
        ],
        [
            "case=>/prefix_size H1 /prefix_size H2; elim: ts=>[|t ts IH] //=.",
            "VernacExtend",
            "1821533cafd21deefc2f797d67a58b45e0a54e79"
        ],
        [
            "case/andP=>H /IH ->; rewrite andbT.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case: t H=>[n v|v] H; apply: leq_trans H _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sc_interp i j ts : sub_ctx i j -> all (wf i) ts -> interp i ts = interp j ts.",
            "VernacStartTheoremProof",
            "1c9a6c85ba8a476c06ce54730ecc69e911056c00"
        ],
        [
            "case=>H1 H2; elim: ts=>[|t ts IH] //= /andP [H] /IH ->.",
            "VernacExtend",
            "1821533cafd21deefc2f797d67a58b45e0a54e79"
        ],
        [
            "by case: t H=>[n v|n] /= /prefix_onth <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_wf i ts : valid (interp i ts) -> all (wf i) ts.",
            "VernacStartTheoremProof",
            "8dc5473f408bab905a079e33ee9410818703805f"
        ],
        [
            "elim: ts=>[|t ts IH] //= V; rewrite (IH (validR V)) andbT.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case: t {V IH} (validL V)=>[n v|n] /=; by case X : (onth _ _)=>[a|]; rewrite ?(onth_size X) // valid_undef.",
            "VernacExtend",
            "14b141a2d70f00681f703015bc169478d399fe62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wf_kfree i n ts : all (wf i) ts -> all (wf i) (kfree n ts).",
            "VernacStartTheoremProof",
            "6bc1700db2ca707f1fc555bbe883c35c45889c49"
        ],
        [
            "by elim: ts=>//= t ts IH; case: ifP=>_ /andP [] //= -> /IH ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wf_vfree i n ts : all (wf i) ts -> all (wf i) (vfree n ts).",
            "VernacStartTheoremProof",
            "6cbc229974e8a95283b6b3973f8dd11b24feda7c"
        ],
        [
            "by elim: ts=>//= t ts IH; case: ifP=>_ /andP [] //= -> /IH ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition getkeys := foldr (fun t ks => if t is Pts k _ then k :: ks else ks) [::].",
            "VernacDefinition",
            "5d4b0cc1cefd92210b8db4fd5c2d26cf590498c0"
        ],
        [
            "Lemma has_getkeys ts n : n \\in getkeys ts = has (key n) ts.",
            "VernacStartTheoremProof",
            "46917cae75bb290385b18a9fa2bc4b9f19b1a27b"
        ],
        [
            "by elim: ts=>//= t ts IH; case: t=>[m v|m] //; rewrite inE IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Reflection.",
            "VernacEndSegment",
            "0885789114fbe0a4aa813e23dcd6f9ad0b3f4b3c"
        ],
        [
            "Section Subterm.",
            "VernacBeginSection",
            "151da4bf7f148762d6578923efa30a187b992b08"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Fixpoint subterm ts1 ts2 := match ts1 with Pts n _ :: tsx1 => if has (key n) ts2 then subterm tsx1 (kfree n ts2) else false | Var n :: tsx1 => if has (var n) ts2 then subterm tsx1 (vfree n ts2) else false | [::] => true end.",
            "VernacFixpoint",
            "4dc266e7301bca2721ddb5f69d4817bafb2bd8c3"
        ],
        [
            "Lemma subterm_sound i ts1 ts2 : all (wf i) ts1 -> all (wf i) ts2 -> subterm ts1 ts2 -> exists u, dom_eq (interp i ts1 \\+ u) (interp i ts2).",
            "VernacStartTheoremProof",
            "53ee54c7829773e9a2a75fe8bc9fd0815422ff34"
        ],
        [
            "elim: ts1 ts2=>[|t ts1 IH] ts2 /= A1 A2.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by exists (interp i ts2); rewrite unitL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP: A1; case: t=>[n v|n] /= /size_onth [k] X A1; rewrite X; case: ifP=>Y //.",
            "VernacExtend",
            "35227c4be97b8786af2373799b756bc83d64559e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (keyP Y X)=>w -> /(IH _ A1 (wf_kfree n A2)) [xs D].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists xs; rewrite -joinA; apply: domeqUn D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (varP Y X)=>-> /(IH _ A1 (wf_vfree n A2)) [xs D].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by exists xs; rewrite -joinA; apply: domeqUn D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Subterm.",
            "VernacEndSegment",
            "00c81231ab7151bb3209783e1f769dba0eff7339"
        ],
        [
            "Section Subtract.",
            "VernacBeginSection",
            "e28eeb4267fc45c4dd16b9476b1e22d61d4d1455"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Fixpoint subtract ts1 ts2 xs := match ts1 with Pts n v :: tsx1 => if has (key n) ts2 then subtract tsx1 (kfree n ts2) xs else subtract tsx1 ts2 (Pts n v :: xs) | Var n :: tsx1 => if has (var n) ts2 then subtract tsx1 (vfree n ts2) xs else subtract tsx1 ts2 (Var T n :: xs) | [::] => (xs, ts2) end.",
            "VernacFixpoint",
            "c7185f8280dd1db0c17da261609dfa44e17800de"
        ],
        [
            "Lemma subtract_sound i ts1 ts2 rs1 rs2 xs : all (wf i) ts1 -> all (wf i) ts2 -> subtract ts1 ts2 xs = (rs1, rs2) -> exists u, dom_eq (interp i ts1 \\+ interp i xs) (interp i rs1 \\+ u) /\\ dom_eq (interp i ts2) (interp i rs2 \\+ u).",
            "VernacStartTheoremProof",
            "fd3f0b8598d2db1f0a2e9e37a5a32ea2476b4ca5"
        ],
        [
            "elim: ts1 ts2 xs=>[|t ts1 IH] ts2 xs /= A1 A2.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case=><-<-; exists Unit; rewrite unitL !unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP: A1; case: t=>[n v|n] /= /size_onth [x X] A1; rewrite X; case: ifP=>Y.",
            "VernacExtend",
            "35227c4be97b8786af2373799b756bc83d64559e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (keyP Y X)=>w -> /(IH _ _ A1 (wf_kfree n A2)) [u][H1 H2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (pts x v \\+ u); rewrite -joinA !(pull (pts x _)).",
            "VernacExtend",
            "7547c9f4a64c16538cbf1d67b5ba8be40d5b986a"
        ],
        [
            "by split=>//; apply: domeqUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case/(IH _ _ A1 A2)=>u [/= H1 H2]; rewrite X joinCA joinA in H1; exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (varP Y X)=>-> /(IH _ _ A1 (wf_vfree n A2)) [u][H1 H2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by exists (x \\+ u); rewrite -joinA !(pull x); split=>//; apply: domeqUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/(IH _ _ A1 A2)=>u [/= H1 H2]; rewrite X joinCA joinA in H1; exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Subtract.",
            "VernacEndSegment",
            "f9bd2def6fceae3bd9b7bbbb23975683c6852a21"
        ],
        [
            "Section Invalid.",
            "VernacBeginSection",
            "a7a065bd7e39da742b90f7e0842beb94e755c46b"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (t : term T) (ts : seq (term T)).",
            "VernacReserve",
            "104006735ba91e6644f04dde438f15cdf63c523e"
        ],
        [
            "Definition undefx i t := if t is Var n then if onth (varx i) n is Some x then undefb x else false else false.",
            "VernacDefinition",
            "02a017128cb10dab31681718b7e9311bc9936df9"
        ],
        [
            "Definition isundef i ts := ~~ uniq (getkeys ts) || has (undefx i) ts.",
            "VernacDefinition",
            "5d0f37a4c1d9c775f3b9a7316a22e54565611b62"
        ],
        [
            "Lemma isundef_sound i ts : all (wf i) ts -> isundef i ts -> ~~ valid (interp i ts).",
            "VernacStartTheoremProof",
            "2efdc23bd8945a04f67a21f66f45957ddca56894"
        ],
        [
            "elim: ts=>[|t ts IH] //= /andP [W A].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: t W=>[n v|n] /= /size_onth [k] X; rewrite /isundef /= X; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite orbCA=>H; case: validUn=>// V; rewrite (negbTE (IH A _)) //.",
            "VernacExtend",
            "2ec7e94e3b7153a35df793e01cb5c36a154cc563"
        ],
        [
            "by case/orP: H V=>// /undefbE ->; rewrite valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite negb_and negbK has_getkeys -orbA /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/orP=>// V; last by rewrite validPtUn andbCA (negbTE (IH A _)).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (keyP V X)=>u ->; rewrite joinA pts_undef join_undefL valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Invalid.",
            "VernacEndSegment",
            "e4d8611c81466bf81153608360bf4a2cc3a521b8"
        ],
        [
            "Section XFind.",
            "VernacBeginSection",
            "9910d7157f5e650be0902f634a5b91cb2c67bfb2"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Structure tagged_elem := XTag {xuntag :> A}.",
            "VernacInductive",
            "283b6a49d8fbb96e6e8a492bc96ce1e9b1173143"
        ],
        [
            "Definition extend_tag := XTag.",
            "VernacDefinition",
            "8f9729f1f9ad4e8b3aa8265ea443194ecc2a96a3"
        ],
        [
            "Definition recurse_tag := extend_tag.",
            "VernacDefinition",
            "6ceccf3652c5e1547578e3745404eadc5b2956f9"
        ],
        [
            "Canonical found_tag x := recurse_tag x.",
            "VernacDefinition",
            "4654064f9cd54bfa5f6cd96ad8a455664fe4c702"
        ],
        [
            "Definition axiom xs1 xs2 i (pivot : tagged_elem) := onth xs2 i = Some (xuntag pivot) /\\ prefix xs1 xs2.",
            "VernacDefinition",
            "ef5cd2690be4ed713b7c5fc9c0f2f18875c86df6"
        ],
        [
            "Structure xfind (xs1 xs2 : seq A) (i : nat) := Form {pivot :> tagged_elem; _ : axiom xs1 xs2 i pivot}.",
            "VernacInductive",
            "bf63b9b95b09ed8fe8c6479207205c4bf67b3706"
        ],
        [
            "Lemma found_pf x t : axiom (x :: t) (x :: t) 0 (found_tag x).",
            "VernacStartTheoremProof",
            "4a7801949c9bc1dd8e2bdf4d9a6aabaaa342eb8f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical found_form x t := Form (@found_pf x t).",
            "VernacDefinition",
            "daf7ba972caddffd40b66c8cddb2bec300dca1a8"
        ],
        [
            "Lemma recurse_pf i x xs1 xs2 (f : xfind xs1 xs2 i) : axiom (x :: xs1) (x :: xs2) i.+1 (recurse_tag (xuntag f)).",
            "VernacStartTheoremProof",
            "4e44c717d079322fa85edfa2dc1cb3a316157bbc"
        ],
        [
            "by case: f=>pv [H1 H2]; split=>//; apply/prefix_cons.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical recurse_form i x xs1 xs2 f := Form (@recurse_pf i x xs1 xs2 f).",
            "VernacDefinition",
            "6dc131fae229fa63a804393eda697279c2d6395a"
        ],
        [
            "Lemma extend_pf x : axiom [::] [:: x] 0 (extend_tag x).",
            "VernacStartTheoremProof",
            "cb8ea8d187d052e61bfbad2d2f427db17b8a83a5"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical extend_form x := Form (@extend_pf x).",
            "VernacDefinition",
            "8de7af5ca22d5e419870241058a353694a41ed89"
        ],
        [
            "End XFind.",
            "VernacEndSegment",
            "0b76ec9288e79c9d27d52f708ae7e3c0726b5e57"
        ],
        [
            "Module Syntactify.",
            "VernacDefineModule",
            "95ba5c64cdbe3400bfd068ea4d5851830e91c7ec"
        ],
        [
            "Section Syntactify.",
            "VernacBeginSection",
            "2152001e26b1350ca39f98f6bd10341397826874"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Structure tagged_map := Tag {untag : U}.",
            "VernacInductive",
            "9a3582fc764f46307d7d4b5ab8d6859a876fa28e"
        ],
        [
            "Local Coercion untag : tagged_map >-> UMC.sort.",
            "VernacCoercion",
            "eb1dfd7f62cbbfb94f84cd64330925df9af5e768"
        ],
        [
            "Definition var_tag := Tag.",
            "VernacDefinition",
            "41f7f99ec393feb1635fb2a404a2e6b18b3ce0d0"
        ],
        [
            "Definition key_tag := var_tag.",
            "VernacDefinition",
            "94b63dba915eff858dd757e8452ad73cf1dd7072"
        ],
        [
            "Definition empty_tag := key_tag.",
            "VernacDefinition",
            "137071c396ba392f48f8264050edc4abb1a011b1"
        ],
        [
            "Canonical Structure union_tag hc := empty_tag hc.",
            "VernacDefinition",
            "c4359adf19a7acc1038c2ed47c1e536d6393d120"
        ],
        [
            "Definition axiom i j ts (pivot : tagged_map) := [/\\ interp j ts = pivot :> U, sub_ctx i j & all (wf j) ts].",
            "VernacDefinition",
            "7c40a90b11c791823baf855940f653428332772f"
        ],
        [
            "Structure form i j ts := Form {pivot : tagged_map; _ : axiom i j ts pivot}.",
            "VernacInductive",
            "ca622fee3901f7f45baa852b67532199f7db2887"
        ],
        [
            "Local Coercion pivot : form >-> tagged_map.",
            "VernacCoercion",
            "19846e6462cd2e9de7be3469fc8dcb9d3a0e0316"
        ],
        [
            "Lemma union_pf i j k ts1 ts2 (f1 : form i j ts1) (f2 : form j k ts2) : axiom i k (ts1 ++ ts2) (union_tag (untag f1 \\+ untag f2)).",
            "VernacStartTheoremProof",
            "25e3a8036ddb00faa4ff60074a37693895966707"
        ],
        [
            "case: f1 f2=>_ [<- S1 W1][_][<- S2 W2]; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /interp foldr_cat fE joinC -(sc_interp S2 W1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: sc_trans S1 S2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite all_cat (sc_wf S2 W1) W2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical union_form i j k ts1 ts2 f1 f2 := Form (@union_pf i j k ts1 ts2 f1 f2).",
            "VernacDefinition",
            "a82cad4151ffa2ffca83d39651fcc3aaf61541cb"
        ],
        [
            "Lemma empty_pf i : axiom i i [::] (empty_tag Unit).",
            "VernacStartTheoremProof",
            "6ef28a643d3912124c1c24c924b030142f72998d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical empty_form i := Form (@empty_pf i).",
            "VernacDefinition",
            "aa120a2a4f4260933795d2a001d4678e74152d96"
        ],
        [
            "Lemma pts_pf vars keys1 keys2 k v (f : xfind keys1 keys2 k): axiom (Context keys1 vars) (Context keys2 vars) [:: Pts k v] (key_tag (pts (xuntag f) v)).",
            "VernacStartTheoremProof",
            "60a51d3ae384de442d5fa65d67ae5b2980cdf048"
        ],
        [
            "by case: f=>p [E H]; split=>//=; rewrite ?E ?unitR // (onth_size E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical pts_form vars keys1 keys2 k v f := Form (@pts_pf vars keys1 keys2 k v f).",
            "VernacDefinition",
            "f2b25ef24d55f6d4f3db606ea549032f0b1f0dbd"
        ],
        [
            "Lemma var_pf keys vars1 vars2 n (f : xfind vars1 vars2 n) : axiom (Context keys vars1) (Context keys vars2) [:: Var T n] (var_tag (xuntag f)).",
            "VernacStartTheoremProof",
            "7f0adf2cb257c3994e2aa7e4cf9a019e34a8cac5"
        ],
        [
            "by case: f=>p [E H]; split=>//=; rewrite ?E ?unitR // (onth_size E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical var_form keys vars1 vars2 v f := Form (@var_pf keys vars1 vars2 v f).",
            "VernacDefinition",
            "2570dc82e5b5b51b67b74484d0b21434e10090d1"
        ],
        [
            "End Syntactify.",
            "VernacEndSegment",
            "0d8bee64c0780a8c7b9d0f8ef50ae26087320b1b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion untag : tagged_map >-> UMC.sort.",
            "VernacCoercion",
            "47a95eb032a8b51fcbe8b88dd0b45f4c41c69ee6"
        ],
        [
            "Coercion pivot : form >-> tagged_map.",
            "VernacCoercion",
            "51404bfbf98c45d0cc83156b551ac3f18ee71760"
        ],
        [
            "Canonical union_tag.",
            "VernacCanonical",
            "3bdad92f45f8b12bf46086f7497afa02bd656459"
        ],
        [
            "Canonical union_form.",
            "VernacCanonical",
            "97382156ee4667683e33db2f93ac989f3c2bf5e7"
        ],
        [
            "Canonical empty_form.",
            "VernacCanonical",
            "fbd6cd956561079a397ea2d15d6671bd24abde8c"
        ],
        [
            "Canonical pts_form.",
            "VernacCanonical",
            "b6203a0138a2e1bc1ae4b060689d9010ecf45e22"
        ],
        [
            "Canonical var_form.",
            "VernacCanonical",
            "7a9637c54d04f7ef0a90987c00e44ecff27e37ea"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Syntactify.",
            "VernacEndSegment",
            "0d8bee64c0780a8c7b9d0f8ef50ae26087320b1b"
        ],
        [
            "Export Syntactify.Exports.",
            "VernacImport",
            "0dd0310dda47817eed41c3a35762a4684e49e1c8"
        ],
        [
            "Section ValidO.",
            "VernacBeginSection",
            "b0aec63682cc30ee627f6ac45060eac63606389a"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Lemma validO j k ts1 ts2 (f1 : form (@empx K T U) j ts1) (f2 : form j k ts2) : valid (untag f1) -> subterm ts2 ts1 -> valid (untag f2).",
            "VernacStartTheoremProof",
            "52c4398c735f0b34aee1e72d973d29ac4b89a156"
        ],
        [
            "case: f1 f2=>f1 [<- _ A1][f2][<- S2 A2] /= V; rewrite (sc_interp S2 A1) in V.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case/(subterm_sound A2 (sc_wf S2 A1))=>xs /domeqP []; rewrite V=>/validL ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ValidO.",
            "VernacEndSegment",
            "79863d8b896000eafaf0dbca5cb253aa82d0b023"
        ],
        [
            "Arguments validO [K T U j k ts1 ts2 f1 f2] _ _.",
            "VernacArguments",
            "3260e2c25994f5802819e3682234832196075894"
        ],
        [
            "Example ex0 (x y z : nat) (v1 v2 : nat) h: valid (Unit \\+ y \\\\-> v1 \\+ h \\+ x \\\\-> v1) -> valid (x \\\\-> v2 \\+ Unit).",
            "VernacDefinition",
            "f3f543f9a907f3ac4223b9bed0e993f44fcc9a14"
        ],
        [
            "by move=>V; rewrite (validO V).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Module ValidX.",
            "VernacDefineModule",
            "e07f11b5cf98b1fe01b4dd520c2c607fa77e74d9"
        ],
        [
            "Section ValidX.",
            "VernacBeginSection",
            "d7457203e737b38ff6b64aaff9a3a5c533b87eb1"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (j : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "608a0d90d5bd445ef9bfa57b48798eec121f55b4"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Structure packed_map (m : U) := Pack {unpack : U}.",
            "VernacInductive",
            "4074a09094891d5635c60820164eb80cf9919364"
        ],
        [
            "Canonical equate (m : U) := Pack m m.",
            "VernacDefinition",
            "b62b9dc751da2feeaf3740c305059e657eb4a81d"
        ],
        [
            "Definition raxiom j ts1 m (b : bool) (pivot : packed_map m) := all (wf j) ts1 -> valid (interp j ts1) -> b -> valid (unpack pivot).",
            "VernacDefinition",
            "b9dda39e63ef79b6e278f6970b9477b5a85406dc"
        ],
        [
            "Structure rform j ts1 m b := RForm {pivot :> packed_map m; _ : raxiom j ts1 b pivot}.",
            "VernacInductive",
            "af6c9501b579af459f5e5d06c3e320ef418e7c7a"
        ],
        [
            "Lemma start_pf j k ts1 ts2 (f2 : form j k ts2) : @raxiom j ts1 (untag f2) (subterm ts2 ts1) (equate f2).",
            "VernacStartTheoremProof",
            "e625451302104b298a35b6ce407c606a4d3c86eb"
        ],
        [
            "case: f2=>f2 [<- S A2] A1; rewrite (sc_interp S A1)=>V.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case/(subterm_sound A2 (sc_wf S A1))=>xs.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case/domeqP; rewrite V=>/validL ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical start j k ts1 ts2 f2 := RForm (@start_pf j k ts1 ts2 f2).",
            "VernacDefinition",
            "89e55072b1e884aa14f24f424b23fcfe9ef424e8"
        ],
        [
            "End ValidX.",
            "VernacEndSegment",
            "5e3b8c2194d87e8a70f55e3f59960f2a3ff42159"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical equate.",
            "VernacCanonical",
            "d4a3453d82e3cb8ec634f9030536c996df18012f"
        ],
        [
            "Canonical start.",
            "VernacCanonical",
            "3105bbfa385a529bfbdfe970fc92907049989d91"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (j : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "608a0d90d5bd445ef9bfa57b48798eec121f55b4"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Lemma validX m j ts1 (f1 : form (empx U) j ts1) (g: rform j ts1 m true) : valid (untag f1) -> valid (unpack (pivot g)).",
            "VernacStartTheoremProof",
            "fa0ab3de1940d61eb3d83a5c9d142334d8ea2e98"
        ],
        [
            "by case: g f1; case=>pivot H [f1][<- Sc A] /(H A); apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "Arguments validX [K T U m j ts1 f1 g] _.",
            "VernacArguments",
            "c7f2dc1f0146aeb9efeab0dbd3b31f241ee39254"
        ],
        [
            "Example ex0 (x y z : nat) (v1 v2 : nat) h: valid (Unit \\+ y \\\\-> v1 \\+ h \\+ x \\\\-> v1) -> valid (x \\\\-> v2 \\+ Unit).",
            "VernacDefinition",
            "f3f543f9a907f3ac4223b9bed0e993f44fcc9a14"
        ],
        [
            "apply: validX.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End ValidX.",
            "VernacEndSegment",
            "5e3b8c2194d87e8a70f55e3f59960f2a3ff42159"
        ],
        [
            "Export ValidX.Exports.",
            "VernacImport",
            "60b28d00c26487b265214e316a456f883179430f"
        ],
        [
            "Section DomeqO.",
            "VernacBeginSection",
            "2da53426697bbb1aa4c8370c5ebbe37d0376b3c7"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (j : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "608a0d90d5bd445ef9bfa57b48798eec121f55b4"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Lemma domeqO j k rs1 rs2 ts1 ts2 (f1 : form (empx U) j ts1) (f2 : form j k ts2) : subtract ts1 ts2 [::] = (rs1, rs2) -> dom_eq (pprint k (rev rs1)) (pprint k rs2) -> dom_eq (untag f1) (untag f2).",
            "VernacStartTheoremProof",
            "66c08ecaace6927a451513e2aecb566c1fa07ea6"
        ],
        [
            "case: f1 f2=>f1 [<- _ A1][f2][<- S A2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/(subtract_sound (sc_wf S A1) A2)=>// ys [/= D1 D2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite unitR in D1; rewrite (sc_interp S A1).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite !pp_interp interp_rev => D; apply: domeq_trans D1 _.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "rewrite domeq_sym; apply: domeq_trans D2 _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite domeq_sym; apply: domeqUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DomeqO.",
            "VernacEndSegment",
            "722ca7311e6e157e237aa07087a18f011c511a82"
        ],
        [
            "Example ex0 (x y z : nat) (v1 v2 : nat) h: dom_eq (Unit \\+ y \\\\-> v1 \\+ h \\+ x \\\\-> v1) (x \\\\-> v2 \\+ Unit).",
            "VernacDefinition",
            "8629a0d8edf435eb002cb1f48622399d8fc68137"
        ],
        [
            "apply: domeqO=>//=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Module DomeqX.",
            "VernacDefineModule",
            "6c3ba181768f0ac96aae56e48edf07bb51df9eb5"
        ],
        [
            "Section DomeqX.",
            "VernacBeginSection",
            "c0d90dc95d7b12c0eca6e5094750b83bb873ad29"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (j : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "608a0d90d5bd445ef9bfa57b48798eec121f55b4"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Structure packed_map (m : U) := Pack {unpack : U}.",
            "VernacInductive",
            "4074a09094891d5635c60820164eb80cf9919364"
        ],
        [
            "Canonical equate (m : U) := Pack m m.",
            "VernacDefinition",
            "b62b9dc751da2feeaf3740c305059e657eb4a81d"
        ],
        [
            "Definition raxiom j k ts1 m b (pivot : packed_map m) := all (wf j) ts1 -> sub_ctx j k /\\ (dom_eq (interp k b.1) (interp k b.2) -> dom_eq (interp k ts1) (unpack pivot)).",
            "VernacDefinition",
            "26453443126c4c691102e995f93ca0fa8d9340c4"
        ],
        [
            "Structure rform j k ts1 m b := RForm {pivot :> packed_map m; _ : raxiom j k ts1 b pivot}.",
            "VernacInductive",
            "f98fdb06b6aef482f6387477f21480914704f958"
        ],
        [
            "Lemma start_pf j k ts1 ts2 (f2 : form j k ts2) : @raxiom j k ts1 (untag f2) (subtract ts1 ts2 [::]) (equate f2).",
            "VernacStartTheoremProof",
            "46fe7ada8c97d45a54b0da87f91e8749c50df6d6"
        ],
        [
            "case: f2=>f2 [<- S A2]; case E : (subtract _ _ _)=>[rs1 rs2] A1; split=>//.",
            "VernacExtend",
            "6042dc43156302d23b188b05386d953cdb248e4f"
        ],
        [
            "case/(subtract_sound (sc_wf S A1) A2): E=>ys [/= D1 D2 D].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite unitR in D1; apply: domeq_trans D1 _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "rewrite domeq_sym; apply: domeq_trans D2 _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite domeq_sym; apply: domeqUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical start j k ts1 ts2 f2 := RForm (@start_pf j k ts1 ts2 f2).",
            "VernacDefinition",
            "89e55072b1e884aa14f24f424b23fcfe9ef424e8"
        ],
        [
            "End DomeqX.",
            "VernacEndSegment",
            "84a247f10cb85a5e7469c059b5a7886c43698b86"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical equate.",
            "VernacCanonical",
            "d4a3453d82e3cb8ec634f9030536c996df18012f"
        ],
        [
            "Canonical start.",
            "VernacCanonical",
            "3105bbfa385a529bfbdfe970fc92907049989d91"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (j : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "608a0d90d5bd445ef9bfa57b48798eec121f55b4"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Lemma domeqX m j k rs1 rs2 ts1 (f1 : form (empx U) j ts1) (g : rform j k ts1 m (rs1, rs2)) : dom_eq (pprint k (rev rs1)) (pprint k rs2) -> dom_eq (untag f1) (unpack (pivot g)).",
            "VernacStartTheoremProof",
            "db2172241c7b443be1a4a6634638de138669545e"
        ],
        [
            "case: g f1; case=>pivot R [f1][<- _ A1] /=; case/(_ A1): R=>S D.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "by rewrite !pp_interp interp_rev (sc_interp S A1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "Arguments domeqX [K T U m j k rs1 rs2 ts1 f1 g] _.",
            "VernacArguments",
            "e38c7aef41309d5d3473bb70546615f8e5e28ab4"
        ],
        [
            "Example ex0 (x y z : nat) (v1 v2 : nat) h: dom_eq (Unit \\+ y \\\\-> v1 \\+ h \\+ x \\\\-> v1) (x \\\\-> v2 \\+ Unit).",
            "VernacDefinition",
            "8629a0d8edf435eb002cb1f48622399d8fc68137"
        ],
        [
            "apply: domeqX=>/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End DomeqX.",
            "VernacEndSegment",
            "84a247f10cb85a5e7469c059b5a7886c43698b86"
        ],
        [
            "Export DomeqX.Exports.",
            "VernacImport",
            "71ba8abd4324dd4d7bb206c3fe2b17e749065c85"
        ],
        [
            "Section InvalidO.",
            "VernacBeginSection",
            "8f4e4a0bfc1ecacbb80309a3f9691d3c4ba24501"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Lemma undefO i ts (f : form (empx U) i ts) : isundef i ts -> untag f = um_undef.",
            "VernacStartTheoremProof",
            "2138e57fb5f37d6fb738340ff8640d995264b5f5"
        ],
        [
            "by case: f=>f [<- _ A] /(isundef_sound A)/invalidE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invalidO i ts (f : form (empx U) i ts) : isundef i ts -> valid (untag f) = false.",
            "VernacStartTheoremProof",
            "65bad9394e744a8f008fb323a9c2785d4b410bbc"
        ],
        [
            "by move/undefO=>->; rewrite valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InvalidO.",
            "VernacEndSegment",
            "4602959c645f5f8eca2490a9a8110bdcd53b722a"
        ],
        [
            "Example ex0 (x y z : nat) (v1 v2 : nat) h: (Unit \\+ y \\\\-> v1 \\+ h \\+ y \\\\-> v1) = um_undef.",
            "VernacDefinition",
            "0093118e8f12eefb4b7ad7fd01d6e7e68940c1b0"
        ],
        [
            "by apply: undefO.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "Module InvalidX.",
            "VernacDefineModule",
            "76f410d0118cb7a794cd528cb32bab7a0e8ad917"
        ],
        [
            "Section InvalidX.",
            "VernacBeginSection",
            "1988504784818480aa80fac68e973db6fb96ce97"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Structure packed_map (m : U) := Pack {unpack : U}.",
            "VernacInductive",
            "4074a09094891d5635c60820164eb80cf9919364"
        ],
        [
            "Canonical equate (m : U) := Pack m m.",
            "VernacDefinition",
            "b62b9dc751da2feeaf3740c305059e657eb4a81d"
        ],
        [
            "Definition raxiom i ts m b (pivot : packed_map m) := b -> valid (unpack pivot) = false.",
            "VernacDefinition",
            "ec92456ade1c999e91f451b5c11e0350254aa3eb"
        ],
        [
            "Structure rform i ts m b := RForm {pivot :> packed_map m; _ : raxiom i ts b pivot}.",
            "VernacInductive",
            "349c3d4499e365413f844ecc576ea67fd8724ebf"
        ],
        [
            "Lemma start_pf i ts (f : form (empx U) i ts) : @raxiom i ts (untag f) (isundef i ts) (equate f).",
            "VernacStartTheoremProof",
            "fb0e093023deb69aaea5041397bfd3f2845f7679"
        ],
        [
            "by case: f=>f [<- S A] /(isundef_sound A) /negbTE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical start i ts f := RForm (@start_pf i ts f).",
            "VernacDefinition",
            "6fbddb585c903ea085f1557b593798289bca28ef"
        ],
        [
            "End InvalidX.",
            "VernacEndSegment",
            "403e8f9bfe5e6be1eeaf51dc64c474104c4c8b8f"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Canonical equate.",
            "VernacCanonical",
            "d4a3453d82e3cb8ec634f9030536c996df18012f"
        ],
        [
            "Canonical start.",
            "VernacCanonical",
            "3105bbfa385a529bfbdfe970fc92907049989d91"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Variables (K : ordType) (T : Type) (U : union_map_class K T).",
            "VernacAssumption",
            "70e2003a494e9cdb3172369a5a5edf009db6a53d"
        ],
        [
            "Implicit Types (i : ctx U) (ts : seq (term T)).",
            "VernacReserve",
            "035e4cf9405e0cf33a62dc0abd4358f8eecc2c24"
        ],
        [
            "Notation form := Syntactify.form.",
            "VernacSyntacticDefinition",
            "81c380f74c726a70d4d2fae2624d43a20d1f8254"
        ],
        [
            "Notation untag := Syntactify.untag.",
            "VernacSyntacticDefinition",
            "934a86b29ac8f872c7dceb459787bcb192ecbb2d"
        ],
        [
            "Lemma undefX m i ts (g : rform i ts m true) : unpack (pivot g) = um_undef.",
            "VernacStartTheoremProof",
            "b5670a62b01bb13f5ed5d22752ea13b7a95102fe"
        ],
        [
            "by case: g; case=>pivot /= /(_ (erefl _))/negbT/invalidE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invalidX m i ts (g : rform i ts m true) : valid (unpack (pivot g)) = false.",
            "VernacStartTheoremProof",
            "f4dfcadae0728879c2338829867f50c2d04ab54a"
        ],
        [
            "by rewrite undefX valid_undef.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "Arguments invalidX [K T U m i ts g].",
            "VernacArguments",
            "10e293a03681f24639b16195c73a53b435acf960"
        ],
        [
            "Example ex0 (x y z : nat) (v1 v2 : nat) h: valid (Unit \\+ y \\\\-> v1 \\+ h \\+ y \\\\-> v1).",
            "VernacDefinition",
            "6ac41c567989419ce321e1dab6c0278fb66d00b2"
        ],
        [
            "rewrite invalidX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "Abort.",
            "VernacAbort",
            "c7c176802253f03c8ef9f27e1c3c9d26e4650d85"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End InvalidX.",
            "VernacEndSegment",
            "403e8f9bfe5e6be1eeaf51dc64c474104c4c8b8f"
        ],
        [
            "Export InvalidX.Exports.",
            "VernacImport",
            "038bc92e34358a8ca1d33dba76fc12c77d321c00"
        ]
    ],
    "proofs": [
        {
            "name": "size_onth",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "elim: s n=>[//|a s IH] [|n] /=; first by exists a.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(addn1 n) -(addn1 (size s)) ltn_add2r; apply: IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "onth_size",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "by elim: s n=>[//|a s IH] [//|n]; apply: IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_refl",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "by move=>n x <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_trans",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "by move=>H1 H2 n x E; apply: H2; apply: H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_cons",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "by split=>E n; [apply: (E n.+1) | case: n].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_cons'",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "by move=>H; case: (H 0 x (erefl _)) (H)=>-> /prefix_cons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_size",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "elim: s1 s2=>[//|a s1 IH] [|b s2] H; first by move: (H 0 a (erefl _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnS; apply: (IH _ (proj2 (prefix_cons' H))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_onth",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "elim:s t x =>[//|a s IH] [|b t] x H1 H2; first by move: (H2 0 a (erefl _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/prefix_cons': H2=><- H2; case: x H1=>[|n] //= H1; apply: IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "onth_mem",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "by elim: s n=>//= a s IH [[->]|n /IH]; rewrite inE ?eq_refl // orbC => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sc_refl",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sc_trans",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case=>K1 V1 [K2 V2]; split; [move: K2 | move: V2]; apply: prefix_trans.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fE",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "by elim: ts x=>[|t ts IH] x; rewrite /= ?unitR // IH joinCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_rev",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "elim: ts=>[|t ts IH] //=; rewrite rev_cons -cats1.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "by rewrite /interp foldr_cat fE /= unitR IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pp_interp",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "by elim: ts=>[|t ts /= <-] //; case: ts=>//; rewrite unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "keyN",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "by elim: ts=>[|t ts IH] //=; case: ifP=>//= _ /IH ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "varN",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by elim: ts=>[|t ts IH] //=; case: ifP=>//= _ /IH ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "keyP",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "elim: ts=>[|t ts IH] //=; case: ifP=>[|_ H].",
                        "VernacExtend",
                        "df63f96bedbb0673aecb42521d90011325a86c94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: t=>//= _ v /eqP <- _ ->; exists v.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/(IH H)=>v ->; exists v; rewrite joinCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "varP",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "elim: ts=>[|t ts IH] //=; case: ifP=>[|_ H].",
                        "VernacExtend",
                        "df63f96bedbb0673aecb42521d90011325a86c94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: t=>//= _ /eqP <- _ ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/(IH H)=>->; rewrite joinCA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sc_wf",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "case=>/prefix_size H1 /prefix_size H2; elim: ts=>[|t ts IH] //=.",
                        "VernacExtend",
                        "1821533cafd21deefc2f797d67a58b45e0a54e79"
                    ]
                },
                {
                    "command": [
                        "case/andP=>H /IH ->; rewrite andbT.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case: t H=>[n v|v] H; apply: leq_trans H _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sc_interp",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "case=>H1 H2; elim: ts=>[|t ts IH] //= /andP [H] /IH ->.",
                        "VernacExtend",
                        "1821533cafd21deefc2f797d67a58b45e0a54e79"
                    ]
                },
                {
                    "command": [
                        "by case: t H=>[n v|n] /= /prefix_onth <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_wf",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "elim: ts=>[|t ts IH] //= V; rewrite (IH (validR V)) andbT.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "case: t {V IH} (validL V)=>[n v|n] /=; by case X : (onth _ _)=>[a|]; rewrite ?(onth_size X) // valid_undef.",
                        "VernacExtend",
                        "14b141a2d70f00681f703015bc169478d399fe62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wf_kfree",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by elim: ts=>//= t ts IH; case: ifP=>_ /andP [] //= -> /IH ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wf_vfree",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "by elim: ts=>//= t ts IH; case: ifP=>_ /andP [] //= -> /IH ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_getkeys",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "by elim: ts=>//= t ts IH; case: t=>[m v|m] //; rewrite inE IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subterm_sound",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "elim: ts1 ts2=>[|t ts1 IH] ts2 /= A1 A2.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by exists (interp i ts2); rewrite unitL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/andP: A1; case: t=>[n v|n] /= /size_onth [k] X A1; rewrite X; case: ifP=>Y //.",
                        "VernacExtend",
                        "35227c4be97b8786af2373799b756bc83d64559e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (keyP Y X)=>w -> /(IH _ A1 (wf_kfree n A2)) [xs D].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by exists xs; rewrite -joinA; apply: domeqUn D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (varP Y X)=>-> /(IH _ A1 (wf_vfree n A2)) [xs D].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by exists xs; rewrite -joinA; apply: domeqUn D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subtract_sound",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "elim: ts1 ts2 xs=>[|t ts1 IH] ts2 xs /= A1 A2.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case=><-<-; exists Unit; rewrite unitL !unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/andP: A1; case: t=>[n v|n] /= /size_onth [x X] A1; rewrite X; case: ifP=>Y.",
                        "VernacExtend",
                        "35227c4be97b8786af2373799b756bc83d64559e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (keyP Y X)=>w -> /(IH _ _ A1 (wf_kfree n A2)) [u][H1 H2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists (pts x v \\+ u); rewrite -joinA !(pull (pts x _)).",
                        "VernacExtend",
                        "7547c9f4a64c16538cbf1d67b5ba8be40d5b986a"
                    ]
                },
                {
                    "command": [
                        "by split=>//; apply: domeqUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case/(IH _ _ A1 A2)=>u [/= H1 H2]; rewrite X joinCA joinA in H1; exists u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (varP Y X)=>-> /(IH _ _ A1 (wf_vfree n A2)) [u][H1 H2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by exists (x \\+ u); rewrite -joinA !(pull x); split=>//; apply: domeqUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case/(IH _ _ A1 A2)=>u [/= H1 H2]; rewrite X joinCA joinA in H1; exists u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isundef_sound",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "elim: ts=>[|t ts IH] //= /andP [W A].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "case: t W=>[n v|n] /= /size_onth [k] X; rewrite /isundef /= X; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite orbCA=>H; case: validUn=>// V; rewrite (negbTE (IH A _)) //.",
                        "VernacExtend",
                        "2ec7e94e3b7153a35df793e01cb5c36a154cc563"
                    ]
                },
                {
                    "command": [
                        "by case/orP: H V=>// /undefbE ->; rewrite valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_and negbK has_getkeys -orbA /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/orP=>// V; last by rewrite validPtUn andbCA (negbTE (IH A _)).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: (keyP V X)=>u ->; rewrite joinA pts_undef join_undefL valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "found_pf",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "recurse_pf",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "by case: f=>pv [H1 H2]; split=>//; apply/prefix_cons.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_pf",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_pf",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "case: f1 f2=>_ [<- S1 W1][_][<- S2 W2]; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /interp foldr_cat fE joinC -(sc_interp S2 W1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: sc_trans S1 S2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite all_cat (sc_wf S2 W1) W2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_pf",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pts_pf",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "by case: f=>p [E H]; split=>//=; rewrite ?E ?unitR // (onth_size E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "var_pf",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "by case: f=>p [E H]; split=>//=; rewrite ?E ?unitR // (onth_size E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validO",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "case: f1 f2=>f1 [<- _ A1][f2][<- S2 A2] /= V; rewrite (sc_interp S2 A1) in V.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case/(subterm_sound A2 (sc_wf S2 A1))=>xs /domeqP []; rewrite V=>/validL ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "start_pf",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "case: f2=>f2 [<- S A2] A1; rewrite (sc_interp S A1)=>V.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case/(subterm_sound A2 (sc_wf S A1))=>xs.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case/domeqP; rewrite V=>/validL ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "validX",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "by case: g f1; case=>pivot H [f1][<- Sc A] /(H A); apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqO",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "case: f1 f2=>f1 [<- _ A1][f2][<- S A2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/(subtract_sound (sc_wf S A1) A2)=>// ys [/= D1 D2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite unitR in D1; rewrite (sc_interp S A1).",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "rewrite !pp_interp interp_rev => D; apply: domeq_trans D1 _.",
                        "VernacExtend",
                        "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
                    ]
                },
                {
                    "command": [
                        "rewrite domeq_sym; apply: domeq_trans D2 _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite domeq_sym; apply: domeqUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "domeqX",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "case: g f1; case=>pivot R [f1][<- _ A1] /=; case/(_ A1): R=>S D.",
                        "VernacExtend",
                        "d4127243a8edd835b38ce1b186629bc51391e41f"
                    ]
                },
                {
                    "command": [
                        "by rewrite !pp_interp interp_rev (sc_interp S A1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefO",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "by case: f=>f [<- _ A] /(isundef_sound A)/invalidE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invalidO",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "by move/undefO=>->; rewrite valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "undefX",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "by case: g; case=>pivot /= /(_ (erefl _))/negbT/invalidE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invalidX",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "by rewrite undefX valid_undef.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}