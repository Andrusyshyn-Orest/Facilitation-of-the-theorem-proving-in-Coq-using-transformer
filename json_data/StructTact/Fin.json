{
    "filename": "Fin.v",
    "coq_project": "StructTact",
    "vernac_cmds": [
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Require Import StructTact.StructTactics.",
            "VernacRequire",
            "38f6d2cc08bbb87183850d39d33eebaeff475956"
        ],
        [
            "Require Import StructTact.ListUtil.",
            "VernacRequire",
            "6316397b53b2604d9ef423cc991532d8dcb97eea"
        ],
        [
            "Require Import OrderedType.",
            "VernacRequire",
            "0570fbfcbf725d35a8db5f66bfbba69ef0f09ff2"
        ],
        [
            "Require Import OrderedTypeEx.",
            "VernacRequire",
            "64d8e4b0f546045022584c719d6e62cc6ba5221b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Fixpoint fin (n : nat) : Type := match n with | 0 => False | S n' => option (fin n') end.",
            "VernacFixpoint",
            "eada7c53b5ad3f6af215341fe7843848ca72da32"
        ],
        [
            "Fixpoint fin_eq_dec (n : nat) : forall (a b : fin n), {a = b} + {a <> b}.",
            "VernacFixpoint",
            "d9cfcc0624ce739041e13acee7f0262f5f015213"
        ],
        [
            "refine (match n with | 0 => fun a b : fin 0 => right (match b with end) | S n' => fun a b : fin (S n') => match a, b with | Some a', Some b' => match fin_eq_dec n' a' b' with | left _ _ => left _ | right _ _ => right _ end | Some a', None => right _ | None, Some b' => right _ | None, None => left eq_refl end end); congruence.",
            "VernacExtend",
            "138e356ed7c927464b5e66f738d48607c47bf295"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint all_fin (n : nat) : list (fin n) := match n with | 0 => [] | S n' => None :: map (fun x => Some x) (all_fin n') end.",
            "VernacFixpoint",
            "1fd1622f92d59868fc8429e910f4e0febfb90e99"
        ],
        [
            "Lemma all_fin_all : forall n (x : fin n), In x (all_fin n).",
            "VernacStartTheoremProof",
            "9b12b291b1adedc8fec65003ff2a53724fe01873"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "solve_by_inversion.",
            "VernacExtend",
            "e729de5a441773086f8e5c87714b9e4e67a1f701"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct x; auto using in_map.",
            "VernacExtend",
            "7651bf9e93f8dd89278ebb45bf42f624582303a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_fin_NoDup : forall n, NoDup (all_fin n).",
            "VernacStartTheoremProof",
            "7a3d6fc15bb68fd23718a577917a90e6ea045e6b"
        ],
        [
            "induction n; intros; simpl; constructor.",
            "VernacExtend",
            "c586f30336c0c4425ceb1c934181b0c167fdb657"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply in_map_iff in H.",
            "VernacExtend",
            "0ccb424eeec90f727150b5eaff0aa48fb66e5ab0"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply NoDup_map_injective; auto.",
            "VernacExtend",
            "f2ef7be4a532a74c34c8ce1361064d763aeabd42"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fin_to_nat {n : nat} : fin n -> nat := match n with | 0 => fun x : fin 0 => match x with end | S n' => fun x : fin (S n') => match x with | None => 0 | Some y => S (fin_to_nat y) end end.",
            "VernacFixpoint",
            "26159dfefe787c2533aa1cd904cfb5720bdeaf8f"
        ],
        [
            "Definition fin_lt {n : nat} (a b : fin n) : Prop := lt (fin_to_nat a) (fin_to_nat b).",
            "VernacDefinition",
            "dc5c82f986f9067c7cabd411e6efe7b8facdb668"
        ],
        [
            "Lemma fin_lt_Some_elim : forall n (a b : fin n), @fin_lt (S n) (Some a) (Some b) -> fin_lt a b.",
            "VernacStartTheoremProof",
            "5fa2e5c17a914f4ddc0148977227e7dfe0712cd4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fin_lt.",
            "VernacExtend",
            "c84517692de2744d8fa9ddde54dc0abc3c062592"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fin_lt_Some_intro : forall n (a b : fin n), fin_lt a b -> @fin_lt (S n) (Some a) (Some b).",
            "VernacStartTheoremProof",
            "be588ec35f71c4cae607fd0c5ebc0e765bf50059"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold fin_lt.",
            "VernacExtend",
            "c84517692de2744d8fa9ddde54dc0abc3c062592"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma None_lt_Some : forall n (x : fin n), @fin_lt (S n) None (Some x).",
            "VernacStartTheoremProof",
            "8edeefa570148ac6496c7942ddb39cdb887cea07"
        ],
        [
            "unfold fin_lt.",
            "VernacExtend",
            "c84517692de2744d8fa9ddde54dc0abc3c062592"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fin_lt_trans : forall n (x y z : fin n), fin_lt x y -> fin_lt y z -> fin_lt x z.",
            "VernacStartTheoremProof",
            "57961f4fbdbc5f03550814c77929402e39b790e0"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct x, y, z; simpl in *; repeat match goal with | [ H : fin_lt (Some _) (Some _) |- _ ] => apply fin_lt_Some_elim in H | [ |- fin_lt (Some _) (Some _) ] => apply fin_lt_Some_intro end; eauto using None_lt_Some; solve_by_inversion.",
            "VernacExtend",
            "a8190a665cbd7c5ebaca8787de895249fb963932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fin_lt_not_eq : forall n (x y : fin n), fin_lt x y -> x <> y.",
            "VernacStartTheoremProof",
            "97ae7783f8a5814e76f9c005db800c72218bc293"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct x, y; repeat match goal with | [ H : fin_lt (Some _) (Some _) |- _ ] => apply fin_lt_Some_elim in H | [ |- fin_lt (Some _) (Some _) ] => apply fin_lt_Some_intro end; try congruence.",
            "VernacExtend",
            "6a60437c13ce8279d6b93ce3041fe8928a3b1c9c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize (IHn f f0).",
            "VernacExtend",
            "b163145168e36182d9de3ea80dee9401b453b260"
        ],
        [
            "concludes.",
            "VernacExtend",
            "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "solve_by_inversion.",
            "VernacExtend",
            "e729de5a441773086f8e5c87714b9e4e67a1f701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fin_compare_compat (n : nat) : forall (x y : fin n), Compare fin_lt eq x y := match n with | 0 => fun x y : fin 0 => match x with end | S n' => fun x y : fin (S n') => match x, y with | Some x', Some y' => match fin_compare_compat n' x' y' with | LT pf => LT (fin_lt_Some_intro pf) | EQ pf => EQ (f_equal _ pf) | GT pf => GT (fin_lt_Some_intro pf) end | Some x', None => GT (None_lt_Some n' x') | None, Some y' => LT (None_lt_Some n' y') | None, None => EQ eq_refl end end.",
            "VernacFixpoint",
            "d92f79cef1ca5e40668e13fbf622af0c08b47f42"
        ],
        [
            "Module Type NatValue.",
            "VernacDeclareModuleType",
            "055c024f34b3a65f377417b38e0062c7bede2792"
        ],
        [
            "Parameter n : nat.",
            "VernacAssumption",
            "c5b43a99c0a5572fe3e757e048d53742342cc58f"
        ],
        [
            "End NatValue.",
            "VernacEndSegment",
            "fd8a62bee5e20fec3b4db18df5cd14343c58e108"
        ],
        [
            "Module fin_OT_compat (Import N : NatValue) <: UsualOrderedType.",
            "VernacDefineModule",
            "02604cd32c59a63d44ffaae921480ba114ea0bae"
        ],
        [
            "Definition t := fin n.",
            "VernacDefinition",
            "bf53553efaa48209f84e72aa2be1463169036480"
        ],
        [
            "Definition eq := @eq (fin n).",
            "VernacDefinition",
            "8c1c92e2e3e74f875f4a62597a86f9a791bbea40"
        ],
        [
            "Definition lt := @fin_lt n.",
            "VernacDefinition",
            "2ec8bd1391b033317f566287a11be621fd7916be"
        ],
        [
            "Definition eq_refl := @eq_refl (fin n).",
            "VernacDefinition",
            "ed5981406badd9746a43a80df1515464fba30a57"
        ],
        [
            "Definition eq_sym := @eq_sym (fin n).",
            "VernacDefinition",
            "e864f607a706bda17b0e57e1491c3b2664f1b99f"
        ],
        [
            "Definition eq_trans := @eq_trans (fin n).",
            "VernacDefinition",
            "54de1aa4f61a6d7b27b3bcb72e7d86c2aa4bcb39"
        ],
        [
            "Definition lt_trans := @fin_lt_trans n.",
            "VernacDefinition",
            "798aefb20eac7b41d770521b70f7836aadee4bb8"
        ],
        [
            "Definition lt_not_eq := @fin_lt_not_eq n.",
            "VernacDefinition",
            "354bf1627d4624eba568961a7c5fc6de0d213aef"
        ],
        [
            "Definition compare := fin_compare_compat n.",
            "VernacDefinition",
            "4ff65b069d4c948a07047db857a9ecfa917acd53"
        ],
        [
            "Definition eq_dec := fin_eq_dec n.",
            "VernacDefinition",
            "4ba12950d3c93b1bf1ce612e113ce801436b114d"
        ],
        [
            "End fin_OT_compat.",
            "VernacEndSegment",
            "13a817097ae8156af3ac7619150cdef95a26b431"
        ],
        [
            "Require Import Orders.",
            "VernacRequire",
            "d67f88dc745fe90e97a6549f11c8ff812e3fb5ee"
        ],
        [
            "Lemma fin_lt_irrefl : forall n, Irreflexive (@fin_lt n).",
            "VernacStartTheoremProof",
            "e974d0f97c9cf008902ff74fa109f306ca3b1578"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Irreflexive, complement, Reflexive, fin_lt.",
            "VernacExtend",
            "43bead6db14fbfc17089fd08217065655ec2dc1b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fin_lt_strorder : forall n, StrictOrder (@fin_lt n).",
            "VernacStartTheoremProof",
            "b2f59b315124f74d09cedf976698c10d75a7e23a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (Build_StrictOrder _ (@fin_lt_irrefl n) (@fin_lt_trans n)).",
            "VernacExtend",
            "6287f583d5f9869fcd71883c80a05ce755b01997"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fin_lt_lt_compat : forall n, Proper (eq ==> eq ==> iff) (@fin_lt n).",
            "VernacStartTheoremProof",
            "cb5ee011048fdad1c4d112494012914c84b607bf"
        ],
        [
            "intros; split; intros; repeat find_rewrite; assumption.",
            "VernacExtend",
            "70faa45416a28b702cdca23e9f4755b5d3c5734e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CompSpec_Eq_Some : forall n' (x' y' : fin n'), CompSpec eq fin_lt x' y' Eq -> Some x' = Some y'.",
            "VernacStartTheoremProof",
            "b61c2c9529166c9034305d0d71199ed1958b1a8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "solve_by_inversion.",
            "VernacExtend",
            "e729de5a441773086f8e5c87714b9e4e67a1f701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CompSpec_Lt : forall n' (x' y' : fin n'), CompSpec eq fin_lt x' y' Lt -> fin_lt x' y'.",
            "VernacStartTheoremProof",
            "dd2793c4d674f04a43af3fcf066ed58d4ba23df0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "solve_by_inversion.",
            "VernacExtend",
            "e729de5a441773086f8e5c87714b9e4e67a1f701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CompSpec_Gt : forall n' (x' y' : fin n'), CompSpec eq fin_lt x' y' Gt -> fin_lt y' x'.",
            "VernacStartTheoremProof",
            "289a39580e2bdf1012c46703cf3e1f055cd84c7a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "solve_by_inversion.",
            "VernacExtend",
            "e729de5a441773086f8e5c87714b9e4e67a1f701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fin_compare (n : nat) : forall (x y : fin n), { cmp : comparison | CompSpec eq fin_lt x y cmp } := match n with | 0 => fun x y : fin 0 => match x with end | S n' => fun x y : fin (S n') => match x, y with | Some x', Some y' => match fin_compare n' x' y' with | exist _ Lt Hc => exist _ Lt (CompLt _ _ (fin_lt_Some_intro (CompSpec_Lt Hc))) | exist _ Eq Hc => exist _ Eq (CompEq _ _ (CompSpec_Eq_Some Hc)) | exist _ Gt Hc => exist _ Gt (CompGt _ _ (fin_lt_Some_intro (CompSpec_Gt Hc))) end | Some x', None => exist _ Gt (CompGt _ _ (None_lt_Some n' x')) | None, Some y' => exist _ Lt (CompLt _ _ (None_lt_Some n' y')) | None, None => exist _ Eq (CompEq _ _ eq_refl) end end.",
            "VernacFixpoint",
            "ca32f6f60ef66207fd75f97a8fcb4669843e3727"
        ],
        [
            "Module fin_OT (Import N : NatValue) <: UsualOrderedType.",
            "VernacDefineModule",
            "7c4f70f0cc039bce33ed0c33d2034a4a03353431"
        ],
        [
            "Definition t := fin n.",
            "VernacDefinition",
            "bf53553efaa48209f84e72aa2be1463169036480"
        ],
        [
            "Definition eq := @eq (fin n).",
            "VernacDefinition",
            "8c1c92e2e3e74f875f4a62597a86f9a791bbea40"
        ],
        [
            "Definition eq_equiv := @eq_equivalence (fin n).",
            "VernacDefinition",
            "cff0adbeaf96be4f680a93d304c68d7da67f7073"
        ],
        [
            "Definition lt := @fin_lt n.",
            "VernacDefinition",
            "2ec8bd1391b033317f566287a11be621fd7916be"
        ],
        [
            "Definition lt_strorder := fin_lt_strorder n.",
            "VernacDefinition",
            "330907c97af1c195fcb6a3ccdf606e52d4e0f279"
        ],
        [
            "Definition lt_compat := fin_lt_lt_compat n.",
            "VernacDefinition",
            "32963532987882b2fb7f09ff3b9d0ac2bf22e413"
        ],
        [
            "Definition compare := fun x y => proj1_sig (fin_compare n x y).",
            "VernacDefinition",
            "2c5fd045d510d9efebd42674bc8ef396db3c3064"
        ],
        [
            "Definition compare_spec := fun x y => proj2_sig (fin_compare n x y).",
            "VernacDefinition",
            "181ab1ab99df65ab81c5401dbf32d1bf69d62c3b"
        ],
        [
            "Definition eq_dec := fin_eq_dec n.",
            "VernacDefinition",
            "4ba12950d3c93b1bf1ce612e113ce801436b114d"
        ],
        [
            "End fin_OT.",
            "VernacEndSegment",
            "739fdc0d4e47ce47aa6d9da4516c046b1b5d5ea1"
        ],
        [
            "Fixpoint fin_of_nat (m n : nat) : fin n + {exists p, m = n + p} := match n with | 0 => inright (ex_intro _ _ eq_refl) | S n' => match m with | 0 => inleft None | S m' => match fin_of_nat m' n' with | inleft f => inleft (Some f) | inright pf => inright (match pf with | ex_intro _ x H => ex_intro _ x (f_equal _ H) end) end end end.",
            "VernacFixpoint",
            "319b70b7072e62ff6e154f652382a1d27561a2d4"
        ],
        [
            "Lemma fin_of_nat_fin_to_nat : forall (n : nat) (a : fin n), fin_of_nat (fin_to_nat a) n = inleft a.",
            "VernacStartTheoremProof",
            "374936e8109550565f93f23d8df37f2cbe04d921"
        ],
        [
            "induction n; simpl; intuition.",
            "VernacExtend",
            "a5786ef40bd438fd1de045333f2f66fb21111ff4"
        ],
        [
            "destruct a; simpl in *; auto.",
            "VernacExtend",
            "a39552b971f28a1ebdd4680c5bbd1039ec6ef579"
        ],
        [
            "now rewrite IHn.",
            "VernacExtend",
            "69a05b29042c8d8517dcdaf6102502fc203ee4a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "fin_eq_dec",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "refine (match n with | 0 => fun a b : fin 0 => right (match b with end) | S n' => fun a b : fin (S n') => match a, b with | Some a', Some b' => match fin_eq_dec n' a' b' with | left _ _ => left _ | right _ _ => right _ end | Some a', None => right _ | None, Some b' => right _ | None, None => left eq_refl end end); congruence.",
                        "VernacExtend",
                        "138e356ed7c927464b5e66f738d48607c47bf295"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "all_fin_all",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "solve_by_inversion.",
                        "VernacExtend",
                        "e729de5a441773086f8e5c87714b9e4e67a1f701"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct x; auto using in_map.",
                        "VernacExtend",
                        "7651bf9e93f8dd89278ebb45bf42f624582303a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_fin_NoDup",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "induction n; intros; simpl; constructor.",
                        "VernacExtend",
                        "c586f30336c0c4425ceb1c934181b0c167fdb657"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff in H.",
                        "VernacExtend",
                        "0ccb424eeec90f727150b5eaff0aa48fb66e5ab0"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_map_injective; auto.",
                        "VernacExtend",
                        "f2ef7be4a532a74c34c8ce1361064d763aeabd42"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_Some_elim",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fin_lt.",
                        "VernacExtend",
                        "c84517692de2744d8fa9ddde54dc0abc3c062592"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_Some_intro",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold fin_lt.",
                        "VernacExtend",
                        "c84517692de2744d8fa9ddde54dc0abc3c062592"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "None_lt_Some",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "unfold fin_lt.",
                        "VernacExtend",
                        "c84517692de2744d8fa9ddde54dc0abc3c062592"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_trans",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct x, y, z; simpl in *; repeat match goal with | [ H : fin_lt (Some _) (Some _) |- _ ] => apply fin_lt_Some_elim in H | [ |- fin_lt (Some _) (Some _) ] => apply fin_lt_Some_intro end; eauto using None_lt_Some; solve_by_inversion.",
                        "VernacExtend",
                        "a8190a665cbd7c5ebaca8787de895249fb963932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_not_eq",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct x, y; repeat match goal with | [ H : fin_lt (Some _) (Some _) |- _ ] => apply fin_lt_Some_elim in H | [ |- fin_lt (Some _) (Some _) ] => apply fin_lt_Some_intro end; try congruence.",
                        "VernacExtend",
                        "6a60437c13ce8279d6b93ce3041fe8928a3b1c9c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize (IHn f f0).",
                        "VernacExtend",
                        "b163145168e36182d9de3ea80dee9401b453b260"
                    ]
                },
                {
                    "command": [
                        "concludes.",
                        "VernacExtend",
                        "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "solve_by_inversion.",
                        "VernacExtend",
                        "e729de5a441773086f8e5c87714b9e4e67a1f701"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_irrefl",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Irreflexive, complement, Reflexive, fin_lt.",
                        "VernacExtend",
                        "43bead6db14fbfc17089fd08217065655ec2dc1b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_strorder",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (Build_StrictOrder _ (@fin_lt_irrefl n) (@fin_lt_trans n)).",
                        "VernacExtend",
                        "6287f583d5f9869fcd71883c80a05ce755b01997"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_lt_lt_compat",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros; split; intros; repeat find_rewrite; assumption.",
                        "VernacExtend",
                        "70faa45416a28b702cdca23e9f4755b5d3c5734e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CompSpec_Eq_Some",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "solve_by_inversion.",
                        "VernacExtend",
                        "e729de5a441773086f8e5c87714b9e4e67a1f701"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CompSpec_Lt",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "solve_by_inversion.",
                        "VernacExtend",
                        "e729de5a441773086f8e5c87714b9e4e67a1f701"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CompSpec_Gt",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "solve_by_inversion.",
                        "VernacExtend",
                        "e729de5a441773086f8e5c87714b9e4e67a1f701"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fin_of_nat_fin_to_nat",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intuition.",
                        "VernacExtend",
                        "a5786ef40bd438fd1de045333f2f66fb21111ff4"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl in *; auto.",
                        "VernacExtend",
                        "a39552b971f28a1ebdd4680c5bbd1039ec6ef579"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHn.",
                        "VernacExtend",
                        "69a05b29042c8d8517dcdaf6102502fc203ee4a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}