{
    "filename": "openIsSecure.v",
    "coq_project": "fssec-model",
    "vernac_cmds": [
        [
            "Require Import ModelProperties.",
            "VernacRequire",
            "36aeb2145b633bf3f167714cc4cbe97055268f14"
        ],
        [
            "Require Import AuxiliaryLemmas.",
            "VernacRequire",
            "41bddd0878d8a575e0d9d8b778ab8a11c3abf46b"
        ],
        [
            "Section openIsSecure.",
            "VernacBeginSection",
            "c92ef0e425abab4463b32fd25a914bf7d143bd14"
        ],
        [
            "Lemma OpenPSS : forall (s t : SFSstate) (u : SUBJECT), FuncPre5 s -> SecureState s -> TransFunc u s Open t -> SecureState t.",
            "VernacStartTheoremProof",
            "609f9de9e6d2070fcd66ccc381e921d483ec6c18"
        ],
        [
            "intros s t Sub FP5 SS TF; inversion TF.",
            "VernacExtend",
            "96837ae6992457924f39f01923dd170b389ac7b3"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "unfold SecureState, DACSecureState, MACSecureState in |- *; simpl in |- *; BreakSS.",
            "VernacExtend",
            "fe383f2ad082296d9bed2e20b607caf361e7a661"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim (OBJeq_dec o o0); intro EQo.",
            "VernacExtend",
            "35911e292c59a6802c5e0505fc8f9058b26c4daf"
        ],
        [
            "rewrite <- EQo.",
            "VernacExtend",
            "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "unfold open_sm at 1, PreDACRead, PreDACWrite in |- *; simpl in |- *.",
            "VernacExtend",
            "dd207d96ad31407e1746a28dcb1a6ade339aa807"
        ],
        [
            "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
            "VernacExtend",
            "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
        ],
        [
            "cut match fsecmat (secmat s) o with | None => True | Some y => set_In Sub (ActWriters y) -> PreDACWrite s Sub o end.",
            "VernacExtend",
            "79ba2d6a614f3e46af2f9736311f7c52c0d47434"
        ],
        [
            "elim (fsecmat (secmat s) o).",
            "VernacExtend",
            "97a497d4877bca12d266db055be48f9a0489e34c"
        ],
        [
            "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (set_add SUBeq_dec Sub (ActReaders a)) (ActWriters a)) (set_remove SECMATeq_dec (o, a) (secmat s))) o) with (Some (mkRW (set_add SUBeq_dec Sub (ActReaders a)) (ActWriters a))).",
            "VernacExtend",
            "cb5c392a80974776fcf3de8103d5cb980a10d054"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold PreDACWrite in H9; apply H9; auto.",
            "VernacExtend",
            "a73f7b1298aeb4e881caca6f8e382f82391c226a"
        ],
        [
            "unfold fsecmat in |- *; apply AddEq1.",
            "VernacExtend",
            "a1aede84c7f14ee9f482652ad8fd8d9d9ca38244"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (Sub :: nil) (empty_set SUBJECT)) (secmat s)) o) with (Some (mkRW (Sub :: nil) (empty_set SUBJECT))).",
            "VernacExtend",
            "4abe8f882557d6f0b69859409eacc15f05f9da16"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; (intro H12; elim H12).",
            "VernacExtend",
            "9eba16738d8830f6f5c2cb7e128fbee5b719e643"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold fsecmat in |- *; apply AddEq1; auto.",
            "VernacExtend",
            "ce9b7bc3063eaa030e0d198baad2df307744fc71"
        ],
        [
            "apply ReadWriteImpWrite; auto.",
            "VernacExtend",
            "029cf9b43eb3f2255aa6a6f25bab88037647f8bf"
        ],
        [
            "unfold fsecmat in |- *; apply DOMFuncRel4.",
            "VernacExtend",
            "3e71c5c26a1749350a90000b071c407532ed0128"
        ],
        [
            "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "0ad810d7c75314e4dc733f19ab5ce7aa036895f1"
        ],
        [
            "cut match fsecmat (secmat s) o with | None => True | Some y => (set_In u0 (ActReaders y) -> PreDACRead s u0 o) /\\ (set_In u0 (ActWriters y) -> PreDACWrite s u0 o) end.",
            "VernacExtend",
            "f9f3a9ca0954363eae52ada79032c697490c95cf"
        ],
        [
            "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; elim (fsecmat (secmat s) o); elim (fsecmat (open_sm s Sub o READ) o).",
            "VernacExtend",
            "a2c32049e0e986e9e2e149a19ccb3c3871344f68"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim H10; intros.",
            "VernacExtend",
            "2a1b8ee38a88a74aba2a10a94540a046496421a7"
        ],
        [
            "absurd (Sub = u0); auto.",
            "VernacExtend",
            "e5e2fa8d90cdc72b357d4f860060c5b49f9008c0"
        ],
        [
            "rewrite H12 in H11.",
            "VernacExtend",
            "4bef6c6c4fd0a010878915d10fc3950ae8905d1e"
        ],
        [
            "simpl in H11.",
            "VernacExtend",
            "f2ac9771be73bd1822b73a4ad13392ccef382f09"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "elim H10; intros H12 H13; rewrite H13 in H11; simpl in H13; contradiction.",
            "VernacExtend",
            "c59c382aa64b0b94b7800e846edf3ca118ef057a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply DAC.",
            "VernacExtend",
            "2f6d6e2d913db290fe4c921ca94ea019700709e8"
        ],
        [
            "apply Open_smCorr21; auto.",
            "VernacExtend",
            "e410b604f71415aa96020d93d4840953ff00086f"
        ],
        [
            "replace (fsecmat (open_sm s Sub o READ) o0) with (fsecmat (secmat s) o0).",
            "VernacExtend",
            "63a0963a96adc69fe69cf6c95b1139fa6e4aa9b5"
        ],
        [
            "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; unfold DACSecureState, PreDACRead, PreDACWrite in DAC; apply DAC.",
            "VernacExtend",
            "43e469f0f6bc59b1152cdbffcf768d5d7051cad7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold MACSecureState in |- *; intros; simpl in |- *.",
            "VernacExtend",
            "2b152f0f13bd561138fc059b576f3d8a5623f4d9"
        ],
        [
            "elim (OBJeq_dec o o0); intro EQo.",
            "VernacExtend",
            "35911e292c59a6802c5e0505fc8f9058b26c4daf"
        ],
        [
            "rewrite <- EQo.",
            "VernacExtend",
            "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "unfold open_sm in |- *; simpl in |- *.",
            "VernacExtend",
            "94961ac98c3f0215da3221a6c010186e53a357e1"
        ],
        [
            "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
            "VernacExtend",
            "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
        ],
        [
            "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
            "VernacExtend",
            "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
            "VernacExtend",
            "9bb09d7ea8f3310df34849e08c4f70eabb307489"
        ],
        [
            "intros until a1; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (set_add SUBeq_dec Sub (ActReaders a1)) (ActWriters a1)) (set_remove SECMATeq_dec (o, a1) (secmat s))) o); auto.",
            "VernacExtend",
            "eb772e98ae4e5f5499c1d1ba1cb46c2cd8db79ae"
        ],
        [
            "intros until a0; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (Sub :: nil) (empty_set SUBJECT)) (secmat s)) o); auto.",
            "VernacExtend",
            "a71de458bbe4f28b888f7cc8e44ba6060ec6089f"
        ],
        [
            "unfold PreMAC in H5.",
            "VernacExtend",
            "253ae08064ca29f6b6f0e07b92905cb1dd14afde"
        ],
        [
            "cut (match fSSC (subjectSC s) Sub with | Some _ => False | None => False end = False).",
            "VernacExtend",
            "995009bd136a447b9216211f7fdb5bb4a8696369"
        ],
        [
            "intro; rewrite H9.",
            "VernacExtend",
            "113a81deff5a92442fa9761d11221e87230ff544"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "case (fSSC (subjectSC s) Sub); reflexivity.",
            "VernacExtend",
            "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
        ],
        [
            "unfold fsecmat in |- *; apply DOMFuncRel4.",
            "VernacExtend",
            "3e71c5c26a1749350a90000b071c407532ed0128"
        ],
        [
            "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "0ad810d7c75314e4dc733f19ab5ce7aa036895f1"
        ],
        [
            "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
            "VernacExtend",
            "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
        ],
        [
            "cut match fsecmat (secmat s) o, fOSC (objectSC s) o, fSSC (subjectSC s) u0 with | None, _, _ => True | _, None, _ => True | _, _, None => True | Some x, Some y, Some z => set_In u0 (ActReaders x) \\/ set_In u0 (ActWriters x) -> le_sc y z end.",
            "VernacExtend",
            "bd4ca9fa125e82943f08317cacb012393e1b4a55"
        ],
        [
            "elim (fSSC (subjectSC s) u0); elim (fsecmat (open_sm s Sub o READ) o); elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
            "VernacExtend",
            "411bb75f41e17a656956b168344488f4485a5aff"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H11; intros H13 H14; rewrite H13 in H12; rewrite H14 in H12; simpl in H12; tauto.",
            "VernacExtend",
            "1b203b5622c736cee84ffa554d97418ad3bd367e"
        ],
        [
            "unfold MACSecureState in MAC; apply MAC; auto.",
            "VernacExtend",
            "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
        ],
        [
            "replace match fSSC (subjectSC s) Sub with | Some _ => False | None => False end with False.",
            "VernacExtend",
            "5ebe00f195242353db5f424d77cd3f56b511212f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "case (fSSC (subjectSC s) Sub); reflexivity.",
            "VernacExtend",
            "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
        ],
        [
            "apply Open_smCorr21; auto.",
            "VernacExtend",
            "e410b604f71415aa96020d93d4840953ff00086f"
        ],
        [
            "replace (fsecmat (open_sm s Sub o READ) o0) with (fsecmat (secmat s) o0).",
            "VernacExtend",
            "63a0963a96adc69fe69cf6c95b1139fa6e4aa9b5"
        ],
        [
            "unfold MACSecureState in MAC; apply MAC; auto.",
            "VernacExtend",
            "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold SecureState, DACSecureState, MACSecureState in |- *; simpl in |- *; BreakSS.",
            "VernacExtend",
            "fe383f2ad082296d9bed2e20b607caf361e7a661"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim (OBJeq_dec o o0); intro EQo.",
            "VernacExtend",
            "35911e292c59a6802c5e0505fc8f9058b26c4daf"
        ],
        [
            "rewrite <- EQo.",
            "VernacExtend",
            "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "unfold open_sm at 1, PreDACRead, PreDACWrite in |- *; simpl in |- *.",
            "VernacExtend",
            "dd207d96ad31407e1746a28dcb1a6ade339aa807"
        ],
        [
            "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
            "VernacExtend",
            "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
        ],
        [
            "cut match fsecmat (secmat s) o with | None => True | Some y => set_In Sub (ActReaders y) -> PreDACRead s Sub o end.",
            "VernacExtend",
            "8af132c54933d3c47c6be01d574885bb38c5dcb0"
        ],
        [
            "elim (fsecmat (secmat s) o).",
            "VernacExtend",
            "97a497d4877bca12d266db055be48f9a0489e34c"
        ],
        [
            "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (ActReaders a) (set_add SUBeq_dec Sub (ActWriters a))) (set_remove SECMATeq_dec (o, a) (secmat s))) o) with (Some (mkRW (ActReaders a) (set_add SUBeq_dec Sub (ActWriters a)))).",
            "VernacExtend",
            "24b065146942b85fc9451c5c7de72a56666d8469"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "unfold PreDACRead in H9; apply H9; auto.",
            "VernacExtend",
            "6d90af1b9731debad1b019c6a13ef0a559b17793"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold fsecmat in |- *; apply AddEq1; auto.",
            "VernacExtend",
            "ce9b7bc3063eaa030e0d198baad2df307744fc71"
        ],
        [
            "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (empty_set SUBJECT) (Sub :: nil)) (secmat s)) o) with (Some (mkRW (empty_set SUBJECT) (Sub :: nil))).",
            "VernacExtend",
            "9baf64496bcf1bd0d72256524b19138feef3c2ac"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; (intro H11; elim H11).",
            "VernacExtend",
            "77d74da203c524a2afee1960f733e27eaa287e11"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold fsecmat in |- *; apply AddEq1; auto.",
            "VernacExtend",
            "ce9b7bc3063eaa030e0d198baad2df307744fc71"
        ],
        [
            "apply ReadWriteImpRead; auto.",
            "VernacExtend",
            "df94d84e2a7c2838b83bdea25aa466dca84259e3"
        ],
        [
            "unfold fsecmat in |- *; apply DOMFuncRel4.",
            "VernacExtend",
            "3e71c5c26a1749350a90000b071c407532ed0128"
        ],
        [
            "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "d37848f715e57e8876e460d50c6f5904004c2897"
        ],
        [
            "cut match fsecmat (secmat s) o with | None => True | Some y => (set_In u0 (ActReaders y) -> PreDACRead s u0 o) /\\ (set_In u0 (ActWriters y) -> PreDACWrite s u0 o) end.",
            "VernacExtend",
            "f9f3a9ca0954363eae52ada79032c697490c95cf"
        ],
        [
            "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; elim (fsecmat (secmat s) o); elim (fsecmat (open_sm s Sub o WRITE) o).",
            "VernacExtend",
            "989a6a99d7dc5dff3f2fef2b9124cf29264eaaf9"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "elim H10; intros.",
            "VernacExtend",
            "2a1b8ee38a88a74aba2a10a94540a046496421a7"
        ],
        [
            "absurd (Sub = u0); auto.",
            "VernacExtend",
            "e5e2fa8d90cdc72b357d4f860060c5b49f9008c0"
        ],
        [
            "rewrite H13 in H11.",
            "VernacExtend",
            "127222eef41ce89095b0ee60c2cc77e194b3c54e"
        ],
        [
            "simpl in H11.",
            "VernacExtend",
            "f2ac9771be73bd1822b73a4ad13392ccef382f09"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "elim H10; intros H12 H13; rewrite H12 in H11; simpl in H11; tauto.",
            "VernacExtend",
            "8c4bce13a98f55ef2fbc843a6b9ada0593a3c2c8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply DAC.",
            "VernacExtend",
            "2f6d6e2d913db290fe4c921ca94ea019700709e8"
        ],
        [
            "apply Open_smCorr22; auto.",
            "VernacExtend",
            "08d5acda77d3104220c6a44f84a28c84c835bec2"
        ],
        [
            "replace (fsecmat (open_sm s Sub o WRITE) o0) with (fsecmat (secmat s) o0).",
            "VernacExtend",
            "30194126f109e297ea8e1b18ba87bcafbf50e8cb"
        ],
        [
            "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; unfold DACSecureState, PreDACRead, PreDACWrite in DAC; apply DAC.",
            "VernacExtend",
            "43e469f0f6bc59b1152cdbffcf768d5d7051cad7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold MACSecureState in |- *; intros; simpl in |- *.",
            "VernacExtend",
            "2b152f0f13bd561138fc059b576f3d8a5623f4d9"
        ],
        [
            "elim (OBJeq_dec o o0); intro EQo.",
            "VernacExtend",
            "35911e292c59a6802c5e0505fc8f9058b26c4daf"
        ],
        [
            "rewrite <- EQo.",
            "VernacExtend",
            "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "unfold open_sm in |- *; simpl in |- *.",
            "VernacExtend",
            "94961ac98c3f0215da3221a6c010186e53a357e1"
        ],
        [
            "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
            "VernacExtend",
            "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
        ],
        [
            "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
            "VernacExtend",
            "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
            "VernacExtend",
            "9bb09d7ea8f3310df34849e08c4f70eabb307489"
        ],
        [
            "intros until a1; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (ActReaders a1) (set_add SUBeq_dec Sub (ActWriters a1))) (set_remove SECMATeq_dec (o, a1) (secmat s))) o); auto.",
            "VernacExtend",
            "36fd683a2905e4377457804f1df709bfcf002f79"
        ],
        [
            "intros until a0; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (empty_set SUBJECT) (Sub :: nil)) (secmat s)) o); auto.",
            "VernacExtend",
            "9f805e4da6d84938f08f27844868ccd0c0f7cea3"
        ],
        [
            "replace match fSSC (subjectSC s) Sub with | Some _ => False | None => False end with False.",
            "VernacExtend",
            "5ebe00f195242353db5f424d77cd3f56b511212f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "case (fSSC (subjectSC s) Sub); reflexivity.",
            "VernacExtend",
            "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
        ],
        [
            "unfold fsecmat in |- *; apply DOMFuncRel4.",
            "VernacExtend",
            "3e71c5c26a1749350a90000b071c407532ed0128"
        ],
        [
            "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "d37848f715e57e8876e460d50c6f5904004c2897"
        ],
        [
            "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
            "VernacExtend",
            "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
        ],
        [
            "cut match fsecmat (secmat s) o, fOSC (objectSC s) o, fSSC (subjectSC s) u0 with | None, _, _ => True | _, None, _ => True | _, _, None => True | Some x, Some y, Some z => set_In u0 (ActReaders x) \\/ set_In u0 (ActWriters x) -> le_sc y z end.",
            "VernacExtend",
            "bd4ca9fa125e82943f08317cacb012393e1b4a55"
        ],
        [
            "elim (fSSC (subjectSC s) u0); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
            "VernacExtend",
            "9fb838c37ef11e17ad882ef5ae79f5f99fe78a59"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H11; intros H13 H14; rewrite H13 in H12; rewrite H14 in H12; simpl in H12; tauto.",
            "VernacExtend",
            "1b203b5622c736cee84ffa554d97418ad3bd367e"
        ],
        [
            "unfold MACSecureState in MAC; apply MAC; auto.",
            "VernacExtend",
            "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
        ],
        [
            "replace match fSSC (subjectSC s) Sub with | Some _ => False | None => False end with False.",
            "VernacExtend",
            "5ebe00f195242353db5f424d77cd3f56b511212f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "case (fSSC (subjectSC s) Sub); reflexivity.",
            "VernacExtend",
            "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
        ],
        [
            "apply Open_smCorr22; auto.",
            "VernacExtend",
            "08d5acda77d3104220c6a44f84a28c84c835bec2"
        ],
        [
            "replace (fsecmat (open_sm s Sub o WRITE) o0) with (fsecmat (secmat s) o0).",
            "VernacExtend",
            "30194126f109e297ea8e1b18ba87bcafbf50e8cb"
        ],
        [
            "unfold MACSecureState in MAC; apply MAC; auto.",
            "VernacExtend",
            "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma OpenPSP : forall (s t : SFSstate) (u : SUBJECT), FuncPre5 s -> StarProperty s -> TransFunc u s Open t -> StarProperty t.",
            "VernacStartTheoremProof",
            "705079e80c72f2694355ccaed3665613bd1e9443"
        ],
        [
            "intros s t Sub FP5 SP TF; inversion TF.",
            "VernacExtend",
            "c66de50a982c55604fe6bbc9b5f256b0e5c505c6"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "unfold StarProperty in |- *; simpl in |- *; intros.",
            "VernacExtend",
            "e8be7ca5cde24677c8250848fb8f09cdf9d2bb29"
        ],
        [
            "cut match fsecmat (secmat s) o1, fsecmat (secmat s) o2, fOSC (objectSC s) o2, fOSC (objectSC s) o1 with | None, _, _, _ => True | _, None, _, _ => True | _, _, None, _ => True | _, _, _, None => True | Some w, Some x, Some y, Some z => set_In u0 (ActWriters w) -> set_In u0 (ActReaders x) -> le_sc y z end.",
            "VernacExtend",
            "976496c2502e75806a722953eaffb4df0dd0e977"
        ],
        [
            "elim (OBJeq_dec o o1); elim (OBJeq_dec o o2); intros EQ2 EQ1.",
            "VernacExtend",
            "556b2bdc98752f2a8b669378f0a11d00966187f8"
        ],
        [
            "rewrite <- EQ1; rewrite <- EQ2.",
            "VernacExtend",
            "fd41ba1eb2825b98b8dfd2197d0b80dc285f159e"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (open_sm s Sub o READ) o); auto.",
            "VernacExtend",
            "cd0f9dbc4b3973430d11b213bbae885df5b56000"
        ],
        [
            "rewrite <- EQ1.",
            "VernacExtend",
            "b92e83c4536bd262dd6320d59eb18e271ed9d40d"
        ],
        [
            "replace (fsecmat (open_sm s Sub o READ) o2) with (fsecmat (secmat s) o2).",
            "VernacExtend",
            "1d63b21308920849be480ca8de6b7b2abf9e751d"
        ],
        [
            "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | None, _ => False | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | Some x, Some y => set_In u0 (ActWriters x) -> set_In u0 (ActWriters y) end.",
            "VernacExtend",
            "7bb33d5fb68571e44c4940e2bf2c58a6a6c86a05"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o2); elim (fsecmat (open_sm s Sub o READ) o); elim (fOSC (objectSC s) o2); auto.",
            "VernacExtend",
            "14d499abcb852428a85c208d010ffb8b61f65d6b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H9; intros H16 H17; rewrite H17 in H11; simpl in H11; contradiction.",
            "VernacExtend",
            "4f784788d6e56a1f7ecfa8d7e5cc2a705a697c3f"
        ],
        [
            "apply Open_smCorr31; auto.",
            "VernacExtend",
            "7a46668962e8b9553b156006fea79dfa275a79e1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- EQ2.",
            "VernacExtend",
            "681d28912b80a73973932919e02efd4f68e2a471"
        ],
        [
            "replace (fsecmat (open_sm s Sub o READ) o1) with (fsecmat (secmat s) o1).",
            "VernacExtend",
            "a5f60ff00f709e8374f996c64a2e9a3323aa47cb"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "cut match fsecmat (secmat s) o1, fOSC (objectSC s) o, fOSC (objectSC s) o1 with | None, _, _ => False | _, None, _ => False | _, _, None => False | Some x, Some y, Some z => set_In Sub (ActWriters x) -> le_sc y z end.",
            "VernacExtend",
            "a271d2265b5b31bc037ee0782ec2afafee3e3a0f"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o READ) o); elim (fOSC (objectSC s) o1); auto.",
            "VernacExtend",
            "ae9afa19db46a53d7b8708ea878b31343d9441bb"
        ],
        [
            "unfold PreStarPropRead in H6; apply H6.",
            "VernacExtend",
            "6601250f1d718a8ec565f06a9972e1da1b8e3b99"
        ],
        [
            "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "0ad810d7c75314e4dc733f19ab5ce7aa036895f1"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o READ) o); elim (fOSC (objectSC s) o1); auto.",
            "VernacExtend",
            "ae9afa19db46a53d7b8708ea878b31343d9441bb"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H9; intros H16 H17; rewrite H16 in H12; simpl in H12; elim H12; intro; contradiction.",
            "VernacExtend",
            "4184623fc666a4ef323aeb6083c38382ae777a5b"
        ],
        [
            "apply Open_smCorr21; auto.",
            "VernacExtend",
            "e410b604f71415aa96020d93d4840953ff00086f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (fsecmat (open_sm s Sub o READ) o1) with (fsecmat (secmat s) o1).",
            "VernacExtend",
            "a5f60ff00f709e8374f996c64a2e9a3323aa47cb"
        ],
        [
            "replace (fsecmat (open_sm s Sub o READ) o2) with (fsecmat (secmat s) o2).",
            "VernacExtend",
            "1d63b21308920849be480ca8de6b7b2abf9e751d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold StarProperty in SP; apply SP; auto.",
            "VernacExtend",
            "4d0b660a95178d72a207c2a9d6892be8b7107c2e"
        ],
        [
            "unfold StarProperty in |- *; simpl in |- *; intros.",
            "VernacExtend",
            "e8be7ca5cde24677c8250848fb8f09cdf9d2bb29"
        ],
        [
            "cut match fsecmat (secmat s) o1, fsecmat (secmat s) o2, fOSC (objectSC s) o2, fOSC (objectSC s) o1 with | None, _, _, _ => True | _, None, _, _ => True | _, _, None, _ => True | _, _, _, None => True | Some w, Some x, Some y, Some z => set_In u0 (ActWriters w) -> set_In u0 (ActReaders x) -> le_sc y z end.",
            "VernacExtend",
            "976496c2502e75806a722953eaffb4df0dd0e977"
        ],
        [
            "elim (OBJeq_dec o o1); elim (OBJeq_dec o o2); intros EQ2 EQ1.",
            "VernacExtend",
            "556b2bdc98752f2a8b669378f0a11d00966187f8"
        ],
        [
            "rewrite <- EQ1; rewrite <- EQ2.",
            "VernacExtend",
            "fd41ba1eb2825b98b8dfd2197d0b80dc285f159e"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (open_sm s Sub o WRITE) o); auto.",
            "VernacExtend",
            "c57c60c4adcbd030ee91b389650e018e251e4473"
        ],
        [
            "rewrite <- EQ1.",
            "VernacExtend",
            "b92e83c4536bd262dd6320d59eb18e271ed9d40d"
        ],
        [
            "replace (fsecmat (open_sm s Sub o WRITE) o2) with (fsecmat (secmat s) o2).",
            "VernacExtend",
            "eba84c53fd870653f7e77fec4ae5bdf54e6b3554"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "cut match fsecmat (secmat s) o2, fOSC (objectSC s) o, fOSC (objectSC s) o2 with | None, _, _ => False | _, None, _ => False | _, _, None => False | Some x, Some y, Some z => set_In Sub (ActReaders x) -> le_sc z y end.",
            "VernacExtend",
            "59bf68ece1babb28db4d20d4e30353477beb1cd9"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o2); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o2); auto.",
            "VernacExtend",
            "53a5aacd1753152e3ab637a184e33ed5bb13a4b1"
        ],
        [
            "unfold PreStarPropWrite in H6; apply H6.",
            "VernacExtend",
            "77506c357971305d85dd904144e8570004803384"
        ],
        [
            "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "d37848f715e57e8876e460d50c6f5904004c2897"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o2); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o2); auto.",
            "VernacExtend",
            "53a5aacd1753152e3ab637a184e33ed5bb13a4b1"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H9; intros H15 H16.",
            "VernacExtend",
            "ac09ad3d4324c271577ffc1476990d472072bcc1"
        ],
        [
            "rewrite H15 in H11; simpl in H11; elim H11; intro; try contradiction.",
            "VernacExtend",
            "26ddc7aa49f86089c2de55176d1bbe4199b97c13"
        ],
        [
            "apply Open_smCorr22; auto.",
            "VernacExtend",
            "08d5acda77d3104220c6a44f84a28c84c835bec2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- EQ2.",
            "VernacExtend",
            "681d28912b80a73973932919e02efd4f68e2a471"
        ],
        [
            "replace (fsecmat (open_sm s Sub o WRITE) o1) with (fsecmat (secmat s) o1).",
            "VernacExtend",
            "3b92112f77dfbbbf227ab7d4fb0158cca4ede259"
        ],
        [
            "elim (SUBeq_dec Sub u0); intro EQu.",
            "VernacExtend",
            "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
        ],
        [
            "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => set_In u0 (ActReaders y) -> set_In u0 (ActReaders z) end.",
            "VernacExtend",
            "f8ffc300d6f522e7c633bb36f9cd0f3f04f13097"
        ],
        [
            "rewrite <- EQu.",
            "VernacExtend",
            "6ab4853fd3dd097ceec640c7f715c7af620d687f"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o1); auto.",
            "VernacExtend",
            "cd579e1e97a2fe973304ce93cebceba2608c2743"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H9; intros H14 H15; rewrite H15 in H12; simpl in H12; contradiction.",
            "VernacExtend",
            "dc83238929db485bab66afc1ded92b7090c0d8b5"
        ],
        [
            "apply Open_smCorr32; auto.",
            "VernacExtend",
            "70a5303b494962946e7a596587a11d9fc626a06d"
        ],
        [
            "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
            "VernacExtend",
            "d37848f715e57e8876e460d50c6f5904004c2897"
        ],
        [
            "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o1); auto.",
            "VernacExtend",
            "cd579e1e97a2fe973304ce93cebceba2608c2743"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H9; intros H14 H15; rewrite H15 in H12; simpl in H12; contradiction.",
            "VernacExtend",
            "dc83238929db485bab66afc1ded92b7090c0d8b5"
        ],
        [
            "apply Open_smCorr22; auto.",
            "VernacExtend",
            "08d5acda77d3104220c6a44f84a28c84c835bec2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (fsecmat (open_sm s Sub o WRITE) o1) with (fsecmat (secmat s) o1).",
            "VernacExtend",
            "3b92112f77dfbbbf227ab7d4fb0158cca4ede259"
        ],
        [
            "replace (fsecmat (open_sm s Sub o WRITE) o2) with (fsecmat (secmat s) o2).",
            "VernacExtend",
            "eba84c53fd870653f7e77fec4ae5bdf54e6b3554"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold StarProperty in SP; apply SP; auto.",
            "VernacExtend",
            "4d0b660a95178d72a207c2a9d6892be8b7107c2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma OpenPCP : forall s t : SFSstate, PreservesControlProp s Open t.",
            "VernacStartTheoremProof",
            "fefe219c99e4a58bf56473495aea6b4f7fae6156"
        ],
        [
            "intros; unfold PreservesControlProp in |- *; intros Sub TF; inversion TF; unfold ControlProperty in |- *.",
            "VernacExtend",
            "cb89a7246511afaf66c06dd1c902bc1192b4f982"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros; absurd (DACCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o READ) (files s) (directories s)) o0); auto.",
            "VernacExtend",
            "4d4a86d94405e3e7e3a25dfe45c68cd8a724fffe"
        ],
        [
            "intros; absurd (MACObjCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o READ) (files s) (directories s)) o0); auto.",
            "VernacExtend",
            "b13af532fb4b6e96f526245260aeeed792d13645"
        ],
        [
            "intros; absurd (MACSubCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o READ) (files s) (directories s)) u0); auto.",
            "VernacExtend",
            "fbb95535df7441d7ffb7916a0b6e9f2266030005"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros; absurd (DACCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o WRITE) (files s) (directories s)) o0); auto.",
            "VernacExtend",
            "5d3f73ba980a42548fc6c63ec99d11b4dfdae39f"
        ],
        [
            "intros; absurd (MACObjCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o WRITE) (files s) (directories s)) o0); auto.",
            "VernacExtend",
            "b5edee87989c154d1d04ddbbaeccb93dae5cfd80"
        ],
        [
            "intros; absurd (MACSubCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o WRITE) (files s) (directories s)) u0); auto.",
            "VernacExtend",
            "d01eae2a7dc7befa8915b46086045848777c8b88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End openIsSecure.",
            "VernacEndSegment",
            "416d2aa7da4b9124fe776bf6e99539099cafb5e7"
        ],
        [
            "Hint Resolve OpenPSS OpenPSP OpenPCP.",
            "VernacHints",
            "d359d5d455fec251a00e6e782109deb23cac7fb3"
        ]
    ],
    "proofs": [
        {
            "name": "OpenPSS",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros s t Sub FP5 SS TF; inversion TF.",
                        "VernacExtend",
                        "96837ae6992457924f39f01923dd170b389ac7b3"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "unfold SecureState, DACSecureState, MACSecureState in |- *; simpl in |- *; BreakSS.",
                        "VernacExtend",
                        "fe383f2ad082296d9bed2e20b607caf361e7a661"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim (OBJeq_dec o o0); intro EQo.",
                        "VernacExtend",
                        "35911e292c59a6802c5e0505fc8f9058b26c4daf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQo.",
                        "VernacExtend",
                        "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "unfold open_sm at 1, PreDACRead, PreDACWrite in |- *; simpl in |- *.",
                        "VernacExtend",
                        "dd207d96ad31407e1746a28dcb1a6ade339aa807"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
                        "VernacExtend",
                        "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | None => True | Some y => set_In Sub (ActWriters y) -> PreDACWrite s Sub o end.",
                        "VernacExtend",
                        "79ba2d6a614f3e46af2f9736311f7c52c0d47434"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o).",
                        "VernacExtend",
                        "97a497d4877bca12d266db055be48f9a0489e34c"
                    ]
                },
                {
                    "command": [
                        "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (set_add SUBeq_dec Sub (ActReaders a)) (ActWriters a)) (set_remove SECMATeq_dec (o, a) (secmat s))) o) with (Some (mkRW (set_add SUBeq_dec Sub (ActReaders a)) (ActWriters a))).",
                        "VernacExtend",
                        "cb5c392a80974776fcf3de8103d5cb980a10d054"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold PreDACWrite in H9; apply H9; auto.",
                        "VernacExtend",
                        "a73f7b1298aeb4e881caca6f8e382f82391c226a"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply AddEq1.",
                        "VernacExtend",
                        "a1aede84c7f14ee9f482652ad8fd8d9d9ca38244"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (Sub :: nil) (empty_set SUBJECT)) (secmat s)) o) with (Some (mkRW (Sub :: nil) (empty_set SUBJECT))).",
                        "VernacExtend",
                        "4abe8f882557d6f0b69859409eacc15f05f9da16"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; (intro H12; elim H12).",
                        "VernacExtend",
                        "9eba16738d8830f6f5c2cb7e128fbee5b719e643"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply AddEq1; auto.",
                        "VernacExtend",
                        "ce9b7bc3063eaa030e0d198baad2df307744fc71"
                    ]
                },
                {
                    "command": [
                        "apply ReadWriteImpWrite; auto.",
                        "VernacExtend",
                        "029cf9b43eb3f2255aa6a6f25bab88037647f8bf"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply DOMFuncRel4.",
                        "VernacExtend",
                        "3e71c5c26a1749350a90000b071c407532ed0128"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "0ad810d7c75314e4dc733f19ab5ce7aa036895f1"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | None => True | Some y => (set_In u0 (ActReaders y) -> PreDACRead s u0 o) /\\ (set_In u0 (ActWriters y) -> PreDACWrite s u0 o) end.",
                        "VernacExtend",
                        "f9f3a9ca0954363eae52ada79032c697490c95cf"
                    ]
                },
                {
                    "command": [
                        "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; elim (fsecmat (secmat s) o); elim (fsecmat (open_sm s Sub o READ) o).",
                        "VernacExtend",
                        "a2c32049e0e986e9e2e149a19ccb3c3871344f68"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim H10; intros.",
                        "VernacExtend",
                        "2a1b8ee38a88a74aba2a10a94540a046496421a7"
                    ]
                },
                {
                    "command": [
                        "absurd (Sub = u0); auto.",
                        "VernacExtend",
                        "e5e2fa8d90cdc72b357d4f860060c5b49f9008c0"
                    ]
                },
                {
                    "command": [
                        "rewrite H12 in H11.",
                        "VernacExtend",
                        "4bef6c6c4fd0a010878915d10fc3950ae8905d1e"
                    ]
                },
                {
                    "command": [
                        "simpl in H11.",
                        "VernacExtend",
                        "f2ac9771be73bd1822b73a4ad13392ccef382f09"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "elim H10; intros H12 H13; rewrite H13 in H11; simpl in H13; contradiction.",
                        "VernacExtend",
                        "c59c382aa64b0b94b7800e846edf3ca118ef057a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply DAC.",
                        "VernacExtend",
                        "2f6d6e2d913db290fe4c921ca94ea019700709e8"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr21; auto.",
                        "VernacExtend",
                        "e410b604f71415aa96020d93d4840953ff00086f"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o READ) o0) with (fsecmat (secmat s) o0).",
                        "VernacExtend",
                        "63a0963a96adc69fe69cf6c95b1139fa6e4aa9b5"
                    ]
                },
                {
                    "command": [
                        "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; unfold DACSecureState, PreDACRead, PreDACWrite in DAC; apply DAC.",
                        "VernacExtend",
                        "43e469f0f6bc59b1152cdbffcf768d5d7051cad7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold MACSecureState in |- *; intros; simpl in |- *.",
                        "VernacExtend",
                        "2b152f0f13bd561138fc059b576f3d8a5623f4d9"
                    ]
                },
                {
                    "command": [
                        "elim (OBJeq_dec o o0); intro EQo.",
                        "VernacExtend",
                        "35911e292c59a6802c5e0505fc8f9058b26c4daf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQo.",
                        "VernacExtend",
                        "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "unfold open_sm in |- *; simpl in |- *.",
                        "VernacExtend",
                        "94961ac98c3f0215da3221a6c010186e53a357e1"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
                        "VernacExtend",
                        "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
                    ]
                },
                {
                    "command": [
                        "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
                        "VernacExtend",
                        "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
                        "VernacExtend",
                        "9bb09d7ea8f3310df34849e08c4f70eabb307489"
                    ]
                },
                {
                    "command": [
                        "intros until a1; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (set_add SUBeq_dec Sub (ActReaders a1)) (ActWriters a1)) (set_remove SECMATeq_dec (o, a1) (secmat s))) o); auto.",
                        "VernacExtend",
                        "eb772e98ae4e5f5499c1d1ba1cb46c2cd8db79ae"
                    ]
                },
                {
                    "command": [
                        "intros until a0; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (Sub :: nil) (empty_set SUBJECT)) (secmat s)) o); auto.",
                        "VernacExtend",
                        "a71de458bbe4f28b888f7cc8e44ba6060ec6089f"
                    ]
                },
                {
                    "command": [
                        "unfold PreMAC in H5.",
                        "VernacExtend",
                        "253ae08064ca29f6b6f0e07b92905cb1dd14afde"
                    ]
                },
                {
                    "command": [
                        "cut (match fSSC (subjectSC s) Sub with | Some _ => False | None => False end = False).",
                        "VernacExtend",
                        "995009bd136a447b9216211f7fdb5bb4a8696369"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H9.",
                        "VernacExtend",
                        "113a81deff5a92442fa9761d11221e87230ff544"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "case (fSSC (subjectSC s) Sub); reflexivity.",
                        "VernacExtend",
                        "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply DOMFuncRel4.",
                        "VernacExtend",
                        "3e71c5c26a1749350a90000b071c407532ed0128"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "0ad810d7c75314e4dc733f19ab5ce7aa036895f1"
                    ]
                },
                {
                    "command": [
                        "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
                        "VernacExtend",
                        "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o, fOSC (objectSC s) o, fSSC (subjectSC s) u0 with | None, _, _ => True | _, None, _ => True | _, _, None => True | Some x, Some y, Some z => set_In u0 (ActReaders x) \\/ set_In u0 (ActWriters x) -> le_sc y z end.",
                        "VernacExtend",
                        "bd4ca9fa125e82943f08317cacb012393e1b4a55"
                    ]
                },
                {
                    "command": [
                        "elim (fSSC (subjectSC s) u0); elim (fsecmat (open_sm s Sub o READ) o); elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
                        "VernacExtend",
                        "411bb75f41e17a656956b168344488f4485a5aff"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H11; intros H13 H14; rewrite H13 in H12; rewrite H14 in H12; simpl in H12; tauto.",
                        "VernacExtend",
                        "1b203b5622c736cee84ffa554d97418ad3bd367e"
                    ]
                },
                {
                    "command": [
                        "unfold MACSecureState in MAC; apply MAC; auto.",
                        "VernacExtend",
                        "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
                    ]
                },
                {
                    "command": [
                        "replace match fSSC (subjectSC s) Sub with | Some _ => False | None => False end with False.",
                        "VernacExtend",
                        "5ebe00f195242353db5f424d77cd3f56b511212f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "case (fSSC (subjectSC s) Sub); reflexivity.",
                        "VernacExtend",
                        "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr21; auto.",
                        "VernacExtend",
                        "e410b604f71415aa96020d93d4840953ff00086f"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o READ) o0) with (fsecmat (secmat s) o0).",
                        "VernacExtend",
                        "63a0963a96adc69fe69cf6c95b1139fa6e4aa9b5"
                    ]
                },
                {
                    "command": [
                        "unfold MACSecureState in MAC; apply MAC; auto.",
                        "VernacExtend",
                        "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold SecureState, DACSecureState, MACSecureState in |- *; simpl in |- *; BreakSS.",
                        "VernacExtend",
                        "fe383f2ad082296d9bed2e20b607caf361e7a661"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim (OBJeq_dec o o0); intro EQo.",
                        "VernacExtend",
                        "35911e292c59a6802c5e0505fc8f9058b26c4daf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQo.",
                        "VernacExtend",
                        "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "unfold open_sm at 1, PreDACRead, PreDACWrite in |- *; simpl in |- *.",
                        "VernacExtend",
                        "dd207d96ad31407e1746a28dcb1a6ade339aa807"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
                        "VernacExtend",
                        "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | None => True | Some y => set_In Sub (ActReaders y) -> PreDACRead s Sub o end.",
                        "VernacExtend",
                        "8af132c54933d3c47c6be01d574885bb38c5dcb0"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o).",
                        "VernacExtend",
                        "97a497d4877bca12d266db055be48f9a0489e34c"
                    ]
                },
                {
                    "command": [
                        "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (ActReaders a) (set_add SUBeq_dec Sub (ActWriters a))) (set_remove SECMATeq_dec (o, a) (secmat s))) o) with (Some (mkRW (ActReaders a) (set_add SUBeq_dec Sub (ActWriters a)))).",
                        "VernacExtend",
                        "24b065146942b85fc9451c5c7de72a56666d8469"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "unfold PreDACRead in H9; apply H9; auto.",
                        "VernacExtend",
                        "6d90af1b9731debad1b019c6a13ef0a559b17793"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply AddEq1; auto.",
                        "VernacExtend",
                        "ce9b7bc3063eaa030e0d198baad2df307744fc71"
                    ]
                },
                {
                    "command": [
                        "intros; replace (fsecmat (set_add SECMATeq_dec (o, mkRW (empty_set SUBJECT) (Sub :: nil)) (secmat s)) o) with (Some (mkRW (empty_set SUBJECT) (Sub :: nil))).",
                        "VernacExtend",
                        "9baf64496bcf1bd0d72256524b19138feef3c2ac"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; (intro H11; elim H11).",
                        "VernacExtend",
                        "77d74da203c524a2afee1960f733e27eaa287e11"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply AddEq1; auto.",
                        "VernacExtend",
                        "ce9b7bc3063eaa030e0d198baad2df307744fc71"
                    ]
                },
                {
                    "command": [
                        "apply ReadWriteImpRead; auto.",
                        "VernacExtend",
                        "df94d84e2a7c2838b83bdea25aa466dca84259e3"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply DOMFuncRel4.",
                        "VernacExtend",
                        "3e71c5c26a1749350a90000b071c407532ed0128"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "d37848f715e57e8876e460d50c6f5904004c2897"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | None => True | Some y => (set_In u0 (ActReaders y) -> PreDACRead s u0 o) /\\ (set_In u0 (ActWriters y) -> PreDACWrite s u0 o) end.",
                        "VernacExtend",
                        "f9f3a9ca0954363eae52ada79032c697490c95cf"
                    ]
                },
                {
                    "command": [
                        "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; elim (fsecmat (secmat s) o); elim (fsecmat (open_sm s Sub o WRITE) o).",
                        "VernacExtend",
                        "989a6a99d7dc5dff3f2fef2b9124cf29264eaaf9"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "elim H10; intros.",
                        "VernacExtend",
                        "2a1b8ee38a88a74aba2a10a94540a046496421a7"
                    ]
                },
                {
                    "command": [
                        "absurd (Sub = u0); auto.",
                        "VernacExtend",
                        "e5e2fa8d90cdc72b357d4f860060c5b49f9008c0"
                    ]
                },
                {
                    "command": [
                        "rewrite H13 in H11.",
                        "VernacExtend",
                        "127222eef41ce89095b0ee60c2cc77e194b3c54e"
                    ]
                },
                {
                    "command": [
                        "simpl in H11.",
                        "VernacExtend",
                        "f2ac9771be73bd1822b73a4ad13392ccef382f09"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "elim H10; intros H12 H13; rewrite H12 in H11; simpl in H11; tauto.",
                        "VernacExtend",
                        "8c4bce13a98f55ef2fbc843a6b9ada0593a3c2c8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply DAC.",
                        "VernacExtend",
                        "2f6d6e2d913db290fe4c921ca94ea019700709e8"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr22; auto.",
                        "VernacExtend",
                        "08d5acda77d3104220c6a44f84a28c84c835bec2"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o WRITE) o0) with (fsecmat (secmat s) o0).",
                        "VernacExtend",
                        "30194126f109e297ea8e1b18ba87bcafbf50e8cb"
                    ]
                },
                {
                    "command": [
                        "unfold PreDACRead, PreDACWrite in |- *; simpl in |- *; unfold DACSecureState, PreDACRead, PreDACWrite in DAC; apply DAC.",
                        "VernacExtend",
                        "43e469f0f6bc59b1152cdbffcf768d5d7051cad7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold MACSecureState in |- *; intros; simpl in |- *.",
                        "VernacExtend",
                        "2b152f0f13bd561138fc059b576f3d8a5623f4d9"
                    ]
                },
                {
                    "command": [
                        "elim (OBJeq_dec o o0); intro EQo.",
                        "VernacExtend",
                        "35911e292c59a6802c5e0505fc8f9058b26c4daf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQo.",
                        "VernacExtend",
                        "e33b8f561f6dc7c91847749c07c0e22b65e0b8da"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "unfold open_sm in |- *; simpl in |- *.",
                        "VernacExtend",
                        "94961ac98c3f0215da3221a6c010186e53a357e1"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o with | Some y => set_In (o, y) (secmat s) | None => ~ set_In o (DOM OBJeq_dec (secmat s)) end.",
                        "VernacExtend",
                        "7ef2f3f8eff420c01f3882d2dc9d9531297b4782"
                    ]
                },
                {
                    "command": [
                        "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
                        "VernacExtend",
                        "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
                        "VernacExtend",
                        "9bb09d7ea8f3310df34849e08c4f70eabb307489"
                    ]
                },
                {
                    "command": [
                        "intros until a1; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (ActReaders a1) (set_add SUBeq_dec Sub (ActWriters a1))) (set_remove SECMATeq_dec (o, a1) (secmat s))) o); auto.",
                        "VernacExtend",
                        "36fd683a2905e4377457804f1df709bfcf002f79"
                    ]
                },
                {
                    "command": [
                        "intros until a0; elim (fsecmat (set_add SECMATeq_dec (o, mkRW (empty_set SUBJECT) (Sub :: nil)) (secmat s)) o); auto.",
                        "VernacExtend",
                        "9f805e4da6d84938f08f27844868ccd0c0f7cea3"
                    ]
                },
                {
                    "command": [
                        "replace match fSSC (subjectSC s) Sub with | Some _ => False | None => False end with False.",
                        "VernacExtend",
                        "5ebe00f195242353db5f424d77cd3f56b511212f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "case (fSSC (subjectSC s) Sub); reflexivity.",
                        "VernacExtend",
                        "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
                    ]
                },
                {
                    "command": [
                        "unfold fsecmat in |- *; apply DOMFuncRel4.",
                        "VernacExtend",
                        "3e71c5c26a1749350a90000b071c407532ed0128"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "d37848f715e57e8876e460d50c6f5904004c2897"
                    ]
                },
                {
                    "command": [
                        "cut match fOSC (objectSC s) o with | Some t => match fSSC (subjectSC s) Sub with | Some b => le_sc t b | None => False end | None => match fSSC (subjectSC s) Sub with | Some _ => False | None => False end end.",
                        "VernacExtend",
                        "ef22ff6af8d56216b9edb4b93ec017fb389379a0"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o, fOSC (objectSC s) o, fSSC (subjectSC s) u0 with | None, _, _ => True | _, None, _ => True | _, _, None => True | Some x, Some y, Some z => set_In u0 (ActReaders x) \\/ set_In u0 (ActWriters x) -> le_sc y z end.",
                        "VernacExtend",
                        "bd4ca9fa125e82943f08317cacb012393e1b4a55"
                    ]
                },
                {
                    "command": [
                        "elim (fSSC (subjectSC s) u0); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fSSC (subjectSC s) Sub); contradiction || auto.",
                        "VernacExtend",
                        "9fb838c37ef11e17ad882ef5ae79f5f99fe78a59"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H11; intros H13 H14; rewrite H13 in H12; rewrite H14 in H12; simpl in H12; tauto.",
                        "VernacExtend",
                        "1b203b5622c736cee84ffa554d97418ad3bd367e"
                    ]
                },
                {
                    "command": [
                        "unfold MACSecureState in MAC; apply MAC; auto.",
                        "VernacExtend",
                        "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
                    ]
                },
                {
                    "command": [
                        "replace match fSSC (subjectSC s) Sub with | Some _ => False | None => False end with False.",
                        "VernacExtend",
                        "5ebe00f195242353db5f424d77cd3f56b511212f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "case (fSSC (subjectSC s) Sub); reflexivity.",
                        "VernacExtend",
                        "7eebecc69ff239cd1ad08dbe254fc3b07f00c005"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr22; auto.",
                        "VernacExtend",
                        "08d5acda77d3104220c6a44f84a28c84c835bec2"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o WRITE) o0) with (fsecmat (secmat s) o0).",
                        "VernacExtend",
                        "30194126f109e297ea8e1b18ba87bcafbf50e8cb"
                    ]
                },
                {
                    "command": [
                        "unfold MACSecureState in MAC; apply MAC; auto.",
                        "VernacExtend",
                        "ccc9e7ba03d992545dc596b0cd81c01934f8dbf0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OpenPSP",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros s t Sub FP5 SP TF; inversion TF.",
                        "VernacExtend",
                        "c66de50a982c55604fe6bbc9b5f256b0e5c505c6"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "unfold StarProperty in |- *; simpl in |- *; intros.",
                        "VernacExtend",
                        "e8be7ca5cde24677c8250848fb8f09cdf9d2bb29"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o1, fsecmat (secmat s) o2, fOSC (objectSC s) o2, fOSC (objectSC s) o1 with | None, _, _, _ => True | _, None, _, _ => True | _, _, None, _ => True | _, _, _, None => True | Some w, Some x, Some y, Some z => set_In u0 (ActWriters w) -> set_In u0 (ActReaders x) -> le_sc y z end.",
                        "VernacExtend",
                        "976496c2502e75806a722953eaffb4df0dd0e977"
                    ]
                },
                {
                    "command": [
                        "elim (OBJeq_dec o o1); elim (OBJeq_dec o o2); intros EQ2 EQ1.",
                        "VernacExtend",
                        "556b2bdc98752f2a8b669378f0a11d00966187f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ1; rewrite <- EQ2.",
                        "VernacExtend",
                        "fd41ba1eb2825b98b8dfd2197d0b80dc285f159e"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (open_sm s Sub o READ) o); auto.",
                        "VernacExtend",
                        "cd0f9dbc4b3973430d11b213bbae885df5b56000"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ1.",
                        "VernacExtend",
                        "b92e83c4536bd262dd6320d59eb18e271ed9d40d"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o READ) o2) with (fsecmat (secmat s) o2).",
                        "VernacExtend",
                        "1d63b21308920849be480ca8de6b7b2abf9e751d"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | None, _ => False | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | Some x, Some y => set_In u0 (ActWriters x) -> set_In u0 (ActWriters y) end.",
                        "VernacExtend",
                        "7bb33d5fb68571e44c4940e2bf2c58a6a6c86a05"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o2); elim (fsecmat (open_sm s Sub o READ) o); elim (fOSC (objectSC s) o2); auto.",
                        "VernacExtend",
                        "14d499abcb852428a85c208d010ffb8b61f65d6b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros H16 H17; rewrite H17 in H11; simpl in H11; contradiction.",
                        "VernacExtend",
                        "4f784788d6e56a1f7ecfa8d7e5cc2a705a697c3f"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr31; auto.",
                        "VernacExtend",
                        "7a46668962e8b9553b156006fea79dfa275a79e1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ2.",
                        "VernacExtend",
                        "681d28912b80a73973932919e02efd4f68e2a471"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o READ) o1) with (fsecmat (secmat s) o1).",
                        "VernacExtend",
                        "a5f60ff00f709e8374f996c64a2e9a3323aa47cb"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o1, fOSC (objectSC s) o, fOSC (objectSC s) o1 with | None, _, _ => False | _, None, _ => False | _, _, None => False | Some x, Some y, Some z => set_In Sub (ActWriters x) -> le_sc y z end.",
                        "VernacExtend",
                        "a271d2265b5b31bc037ee0782ec2afafee3e3a0f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o READ) o); elim (fOSC (objectSC s) o1); auto.",
                        "VernacExtend",
                        "ae9afa19db46a53d7b8708ea878b31343d9441bb"
                    ]
                },
                {
                    "command": [
                        "unfold PreStarPropRead in H6; apply H6.",
                        "VernacExtend",
                        "6601250f1d718a8ec565f06a9972e1da1b8e3b99"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o READ) o, fsecmat (secmat s) o with | Some y, None => ActReaders y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActWriters y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "0ad810d7c75314e4dc733f19ab5ce7aa036895f1"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o READ) o); elim (fOSC (objectSC s) o1); auto.",
                        "VernacExtend",
                        "ae9afa19db46a53d7b8708ea878b31343d9441bb"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros H16 H17; rewrite H16 in H12; simpl in H12; elim H12; intro; contradiction.",
                        "VernacExtend",
                        "4184623fc666a4ef323aeb6083c38382ae777a5b"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr21; auto.",
                        "VernacExtend",
                        "e410b604f71415aa96020d93d4840953ff00086f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o READ) o1) with (fsecmat (secmat s) o1).",
                        "VernacExtend",
                        "a5f60ff00f709e8374f996c64a2e9a3323aa47cb"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o READ) o2) with (fsecmat (secmat s) o2).",
                        "VernacExtend",
                        "1d63b21308920849be480ca8de6b7b2abf9e751d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold StarProperty in SP; apply SP; auto.",
                        "VernacExtend",
                        "4d0b660a95178d72a207c2a9d6892be8b7107c2e"
                    ]
                },
                {
                    "command": [
                        "unfold StarProperty in |- *; simpl in |- *; intros.",
                        "VernacExtend",
                        "e8be7ca5cde24677c8250848fb8f09cdf9d2bb29"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o1, fsecmat (secmat s) o2, fOSC (objectSC s) o2, fOSC (objectSC s) o1 with | None, _, _, _ => True | _, None, _, _ => True | _, _, None, _ => True | _, _, _, None => True | Some w, Some x, Some y, Some z => set_In u0 (ActWriters w) -> set_In u0 (ActReaders x) -> le_sc y z end.",
                        "VernacExtend",
                        "976496c2502e75806a722953eaffb4df0dd0e977"
                    ]
                },
                {
                    "command": [
                        "elim (OBJeq_dec o o1); elim (OBJeq_dec o o2); intros EQ2 EQ1.",
                        "VernacExtend",
                        "556b2bdc98752f2a8b669378f0a11d00966187f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ1; rewrite <- EQ2.",
                        "VernacExtend",
                        "fd41ba1eb2825b98b8dfd2197d0b80dc285f159e"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (open_sm s Sub o WRITE) o); auto.",
                        "VernacExtend",
                        "c57c60c4adcbd030ee91b389650e018e251e4473"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ1.",
                        "VernacExtend",
                        "b92e83c4536bd262dd6320d59eb18e271ed9d40d"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o WRITE) o2) with (fsecmat (secmat s) o2).",
                        "VernacExtend",
                        "eba84c53fd870653f7e77fec4ae5bdf54e6b3554"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (secmat s) o2, fOSC (objectSC s) o, fOSC (objectSC s) o2 with | None, _, _ => False | _, None, _ => False | _, _, None => False | Some x, Some y, Some z => set_In Sub (ActReaders x) -> le_sc z y end.",
                        "VernacExtend",
                        "59bf68ece1babb28db4d20d4e30353477beb1cd9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o2); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o2); auto.",
                        "VernacExtend",
                        "53a5aacd1753152e3ab637a184e33ed5bb13a4b1"
                    ]
                },
                {
                    "command": [
                        "unfold PreStarPropWrite in H6; apply H6.",
                        "VernacExtend",
                        "77506c357971305d85dd904144e8570004803384"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "d37848f715e57e8876e460d50c6f5904004c2897"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o2); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o2); auto.",
                        "VernacExtend",
                        "53a5aacd1753152e3ab637a184e33ed5bb13a4b1"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros H15 H16.",
                        "VernacExtend",
                        "ac09ad3d4324c271577ffc1476990d472072bcc1"
                    ]
                },
                {
                    "command": [
                        "rewrite H15 in H11; simpl in H11; elim H11; intro; try contradiction.",
                        "VernacExtend",
                        "26ddc7aa49f86089c2de55176d1bbe4199b97c13"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr22; auto.",
                        "VernacExtend",
                        "08d5acda77d3104220c6a44f84a28c84c835bec2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ2.",
                        "VernacExtend",
                        "681d28912b80a73973932919e02efd4f68e2a471"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o WRITE) o1) with (fsecmat (secmat s) o1).",
                        "VernacExtend",
                        "3b92112f77dfbbbf227ab7d4fb0158cca4ede259"
                    ]
                },
                {
                    "command": [
                        "elim (SUBeq_dec Sub u0); intro EQu.",
                        "VernacExtend",
                        "8bf0255bc3cfeab82ad876a78e939e5fa519aefa"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => set_In u0 (ActReaders y) -> set_In u0 (ActReaders z) end.",
                        "VernacExtend",
                        "f8ffc300d6f522e7c633bb36f9cd0f3f04f13097"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQu.",
                        "VernacExtend",
                        "6ab4853fd3dd097ceec640c7f715c7af620d687f"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o1); auto.",
                        "VernacExtend",
                        "cd579e1e97a2fe973304ce93cebceba2608c2743"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros H14 H15; rewrite H15 in H12; simpl in H12; contradiction.",
                        "VernacExtend",
                        "dc83238929db485bab66afc1ded92b7090c0d8b5"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr32; auto.",
                        "VernacExtend",
                        "70a5303b494962946e7a596587a11d9fc626a06d"
                    ]
                },
                {
                    "command": [
                        "cut match fsecmat (open_sm s Sub o WRITE) o, fsecmat (secmat s) o with | Some y, None => ActWriters y = set_add SUBeq_dec Sub (empty_set SUBJECT) /\\ ActReaders y = empty_set SUBJECT | None, _ => False | Some y, Some z => (set_In u0 (ActReaders y) -> set_In u0 (ActReaders z)) /\\ (set_In u0 (ActWriters y) -> set_In u0 (ActWriters z)) end.",
                        "VernacExtend",
                        "d37848f715e57e8876e460d50c6f5904004c2897"
                    ]
                },
                {
                    "command": [
                        "elim (fsecmat (secmat s) o); elim (fOSC (objectSC s) o); elim (fsecmat (secmat s) o1); elim (fsecmat (open_sm s Sub o WRITE) o); elim (fOSC (objectSC s) o1); auto.",
                        "VernacExtend",
                        "cd579e1e97a2fe973304ce93cebceba2608c2743"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros H14 H15; rewrite H15 in H12; simpl in H12; contradiction.",
                        "VernacExtend",
                        "dc83238929db485bab66afc1ded92b7090c0d8b5"
                    ]
                },
                {
                    "command": [
                        "apply Open_smCorr22; auto.",
                        "VernacExtend",
                        "08d5acda77d3104220c6a44f84a28c84c835bec2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o WRITE) o1) with (fsecmat (secmat s) o1).",
                        "VernacExtend",
                        "3b92112f77dfbbbf227ab7d4fb0158cca4ede259"
                    ]
                },
                {
                    "command": [
                        "replace (fsecmat (open_sm s Sub o WRITE) o2) with (fsecmat (secmat s) o2).",
                        "VernacExtend",
                        "eba84c53fd870653f7e77fec4ae5bdf54e6b3554"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold StarProperty in SP; apply SP; auto.",
                        "VernacExtend",
                        "4d0b660a95178d72a207c2a9d6892be8b7107c2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OpenPCP",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros; unfold PreservesControlProp in |- *; intros Sub TF; inversion TF; unfold ControlProperty in |- *.",
                        "VernacExtend",
                        "cb89a7246511afaf66c06dd1c902bc1192b4f982"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (DACCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o READ) (files s) (directories s)) o0); auto.",
                        "VernacExtend",
                        "4d4a86d94405e3e7e3a25dfe45c68cd8a724fffe"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (MACObjCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o READ) (files s) (directories s)) o0); auto.",
                        "VernacExtend",
                        "b13af532fb4b6e96f526245260aeeed792d13645"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (MACSubCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o READ) (files s) (directories s)) u0); auto.",
                        "VernacExtend",
                        "fbb95535df7441d7ffb7916a0b6e9f2266030005"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (DACCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o WRITE) (files s) (directories s)) o0); auto.",
                        "VernacExtend",
                        "5d3f73ba980a42548fc6c63ec99d11b4dfdae39f"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (MACObjCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o WRITE) (files s) (directories s)) o0); auto.",
                        "VernacExtend",
                        "b5edee87989c154d1d04ddbbaeccb93dae5cfd80"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (MACSubCtrlAttrHaveChanged s (mkSFS (groups s) (primaryGrp s) (subjectSC s) (AllGrp s) (RootGrp s) (SecAdmGrp s) (objectSC s) (acl s) (open_sm s Sub o WRITE) (files s) (directories s)) u0); auto.",
                        "VernacExtend",
                        "d01eae2a7dc7befa8915b46086045848777c8b88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}