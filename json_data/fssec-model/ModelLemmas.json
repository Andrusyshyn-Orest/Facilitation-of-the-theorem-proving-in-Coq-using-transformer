{
    "filename": "ModelLemmas.v",
    "coq_project": "fssec-model",
    "vernac_cmds": [
        [
            "Require Export ModelProperties.",
            "VernacRequire",
            "6a9586a9d25c144f2d6dcea15ed39233dda33d81"
        ],
        [
            "Require Export aclstatIsSecure.",
            "VernacRequire",
            "2fa71f1d7ebbf30da07857962c1ca313fc9c2f80"
        ],
        [
            "Require Export chmodIsSecure.",
            "VernacRequire",
            "5b905c7e1c17abd71b2dd18db11ab7b3fba1380c"
        ],
        [
            "Require Export createIsSecure.",
            "VernacRequire",
            "407162073ca61b17f3cdfae4484518ae7e316af2"
        ],
        [
            "Require Export mkdirIsSecure.",
            "VernacRequire",
            "ca1c4bd57f86714e14ef153c166cd9a9709ec3ff"
        ],
        [
            "Require Export openIsSecure.",
            "VernacRequire",
            "3f21d5c3b1266123c05308d02bed08a1340a21ef"
        ],
        [
            "Require Export addUsrGrpToAclIsSecure.",
            "VernacRequire",
            "f277728cbaaaa7e6355578d596038449f92f36cd"
        ],
        [
            "Require Export chobjscIsSecure.",
            "VernacRequire",
            "8ddf0a1bde748721cc9bc23c7178b55be4927057"
        ],
        [
            "Require Export chownIsSecure.",
            "VernacRequire",
            "89572d8e6aa955de4870bcbf842963f879cf9394"
        ],
        [
            "Require Export chsubscIsSecure.",
            "VernacRequire",
            "6d6fec6b5d2ebeadb19003f2eebe4414527e75d7"
        ],
        [
            "Require Export closeIsSecure.",
            "VernacRequire",
            "8a46cbe164867862ab1e906eb480670fe9af04ab"
        ],
        [
            "Require Export delUsrGrpFromAclIsSecure.",
            "VernacRequire",
            "ae8bd700260a03d0c8105c8fc8e3aa9038abe5ab"
        ],
        [
            "Require Export oscstatIsSecure.",
            "VernacRequire",
            "d7f0684aaf77da9ef045d3853581466aa3cdd08d"
        ],
        [
            "Require Export owner_closeIsSecure.",
            "VernacRequire",
            "e95dd3432bc070018147aad6a26cb6a1bdf3006e"
        ],
        [
            "Require Export readIsSecure.",
            "VernacRequire",
            "718cf65fcb97d3584e4f8d6aa6b0585d706c8af6"
        ],
        [
            "Require Export readdirIsSecure.",
            "VernacRequire",
            "81c7742b3f5785215eb5498671658da1c485fef0"
        ],
        [
            "Require Export rmdirIsSecure.",
            "VernacRequire",
            "2e6d99275e9b831bb30902ec77e16e74698772d8"
        ],
        [
            "Require Export sscstatIsSecure.",
            "VernacRequire",
            "99762032ae79781593645d2ecfcdb51933593633"
        ],
        [
            "Require Export statIsSecure.",
            "VernacRequire",
            "862e494ebd1607cd05ac89f3a28eecde02f52644"
        ],
        [
            "Require Export unlinkIsSecure.",
            "VernacRequire",
            "cd9778428c01ea3301b0b16e0af657b048d3398b"
        ],
        [
            "Require Export writeIsSecure.",
            "VernacRequire",
            "1c6196a150e9c2106b4d1859824e8cbe6089588b"
        ],
        [
            "Require Import InitialState.",
            "VernacRequire",
            "019665cdb483df5d429db1ddcdd6cbfcc3c1b630"
        ],
        [
            "Require Export Le.",
            "VernacRequire",
            "441193f947c6f223b50f2cfcd76775e875e10790"
        ],
        [
            "Definition GeneralSecureState (s : SFSstate) : Prop := SecureState s /\\ StarProperty s /\\ FuncPre1 s /\\ FuncPre2 s /\\ FuncPre3 s /\\ FuncPre4 s /\\ FuncPre5 s /\\ FuncPre6 s /\\ FuncPre7 s.",
            "VernacDefinition",
            "73473622990024d4323273fc26118c2fbb35a348"
        ],
        [
            "Lemma InitialStateIsSecure : GeneralSecureState InitState.",
            "VernacStartTheoremProof",
            "d9b7f60f87c2dc99ac79b9c4d80c9fd3374e0d57"
        ],
        [
            "unfold GeneralSecureState, SecureState, InitState, DACSecureState, MACSecureState, StarProperty, FuncPre1, FuncPre2, FuncPre3, FuncPre4, FuncPre5, FuncPre6, FuncPre7 in |- *; simpl in |- *.",
            "VernacExtend",
            "2666af4036030d1379eb63dc3fea450c4abf7dfd"
        ],
        [
            "repeat (split; auto).",
            "VernacExtend",
            "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (fSSC SysSubjectSC root); auto.",
            "VernacExtend",
            "1bb2aee8363ad67d4dc5d21fa44e5d6bbb18fa7c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Parameter defaultState : SFSstate.",
            "VernacAssumption",
            "4f1f44801c89b09086ac286fba4e46af204078f3"
        ],
        [
            "Lemma BasicSecurityTheorem : forall tr : list SFSstate, GeneralSecureState (nth 0 tr defaultState) -> (forall n : nat, n < length tr -> exists op : Operation, (exists u : SUBJECT, TransFunc u (nth n tr defaultState) op (nth (S n) tr defaultState))) -> forall n : nat, n <= length tr -> GeneralSecureState (nth n tr defaultState).",
            "VernacStartTheoremProof",
            "7824ad6b83ea37a2d355f9dfc0481d8655d6d063"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize Hrecn.",
            "VernacExtend",
            "f30f54648280c76e5aaa3f097a6c70b494d5ef2b"
        ],
        [
            "cut (exists op : Operation, (exists u : SUBJECT, TransFunc u (nth n tr defaultState) op (nth (S n) tr defaultState))).",
            "VernacExtend",
            "82b24bb0837d29150be9b5f39a240a446267770c"
        ],
        [
            "elim (nth n tr defaultState).",
            "VernacExtend",
            "d1a7162e34f653f79915352b59f81c3f5ebc4dce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H2; intros.",
            "VernacExtend",
            "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
        ],
        [
            "elim H3; intros.",
            "VernacExtend",
            "22aefe300e56cd9b3f5be8a9d6799fb568928bf1"
        ],
        [
            "cut (forall u : SUBJECT, GeneralSecureState (mkSFS groups primaryGrp subjectSC AllGrp RootGrp SecAdmGrp objectSC acl secmat files directories) -> TransFunc u (mkSFS groups primaryGrp subjectSC AllGrp RootGrp SecAdmGrp objectSC acl secmat files directories) x (nth (S n) tr defaultState) -> GeneralSecureState (nth (S n) tr defaultState)).",
            "VernacExtend",
            "27ecf26e487e020337bcbc3ecdec86d741ad937f"
        ],
        [
            "intro GTR; apply (GTR x0).",
            "VernacExtend",
            "a7f65823c06b90d8dee55b398f17e96d39d76e85"
        ],
        [
            "apply Hrecn0; auto with *.",
            "VernacExtend",
            "5e73e3f4161f0ea22e714870bed977d236901d59"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold GeneralSecureState in |- *; intros u GSSi TF; decompose [and] GSSi; clear GSSi.",
            "VernacExtend",
            "e9eb9ff80b81aca9883a94382d4020bf3716f1fd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "induction x as [| | | | | | | | | | | | | | | | | | | ]; prolog [ AclstatPSS AddUsrGrpToAclPSS ChmodPSS ChobjscPSS ChownPSS ChsubscPSS ClosePSS CreatePSS DelUsrGrpFromAclPSS MkdirPSS OpenPSS OscstatPSS Owner_ClosePSS ReadPSS ReaddirPSS RmdirPSS SscstatPSS StatPSS UnlinkPSS WritePSS ] 2.",
            "VernacExtend",
            "d6041a0f2b1e9af738d3b4ec822f2e43b306dd10"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "induction x as [| | | | | | | | | | | | | | | | | | | ]; prolog [ AclstatPSP AddUsrGrpToAclPSP ChmodPSP ChobjscPSP ChownPSP ChsubscPSP ClosePSP CreatePSP DelUsrGrpFromAclPSP MkdirPSP OpenPSP OscstatPSP Owner_ClosePSP ReadPSP ReaddirPSP RmdirPSP SscstatPSP StatPSP UnlinkPSP WritePSP ] 2.",
            "VernacExtend",
            "909e7ba626ebb94ee89d7975f4b0d8ea0ec7d9ae"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold FuncPre1 in |- *; unfold FuncPre1 in H6; decompose [and] H6; repeat (split; eauto).",
            "VernacExtend",
            "5e80c4277c5c88766f1a01a0b9b936cff160d498"
        ],
        [
            "unfold FuncPre2, FuncPre3, FuncPre4, FuncPre5, FuncPre6, FuncPre7 in |- *; unfold FuncPre2, FuncPre3, FuncPre4, FuncPre5, FuncPre6, FuncPre7 in H8, H9, H10, H11, H12, H14; repeat (split; eauto).",
            "VernacExtend",
            "73e6eb120bf1dcf926c692129a6ae755833fa313"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "InitialStateIsSecure",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "unfold GeneralSecureState, SecureState, InitState, DACSecureState, MACSecureState, StarProperty, FuncPre1, FuncPre2, FuncPre3, FuncPre4, FuncPre5, FuncPre6, FuncPre7 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2666af4036030d1379eb63dc3fea450c4abf7dfd"
                    ]
                },
                {
                    "command": [
                        "repeat (split; auto).",
                        "VernacExtend",
                        "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (fSSC SysSubjectSC root); auto.",
                        "VernacExtend",
                        "1bb2aee8363ad67d4dc5d21fa44e5d6bbb18fa7c"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BasicSecurityTheorem",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize Hrecn.",
                        "VernacExtend",
                        "f30f54648280c76e5aaa3f097a6c70b494d5ef2b"
                    ]
                },
                {
                    "command": [
                        "cut (exists op : Operation, (exists u : SUBJECT, TransFunc u (nth n tr defaultState) op (nth (S n) tr defaultState))).",
                        "VernacExtend",
                        "82b24bb0837d29150be9b5f39a240a446267770c"
                    ]
                },
                {
                    "command": [
                        "elim (nth n tr defaultState).",
                        "VernacExtend",
                        "d1a7162e34f653f79915352b59f81c3f5ebc4dce"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros.",
                        "VernacExtend",
                        "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
                    ]
                },
                {
                    "command": [
                        "elim H3; intros.",
                        "VernacExtend",
                        "22aefe300e56cd9b3f5be8a9d6799fb568928bf1"
                    ]
                },
                {
                    "command": [
                        "cut (forall u : SUBJECT, GeneralSecureState (mkSFS groups primaryGrp subjectSC AllGrp RootGrp SecAdmGrp objectSC acl secmat files directories) -> TransFunc u (mkSFS groups primaryGrp subjectSC AllGrp RootGrp SecAdmGrp objectSC acl secmat files directories) x (nth (S n) tr defaultState) -> GeneralSecureState (nth (S n) tr defaultState)).",
                        "VernacExtend",
                        "27ecf26e487e020337bcbc3ecdec86d741ad937f"
                    ]
                },
                {
                    "command": [
                        "intro GTR; apply (GTR x0).",
                        "VernacExtend",
                        "a7f65823c06b90d8dee55b398f17e96d39d76e85"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn0; auto with *.",
                        "VernacExtend",
                        "5e73e3f4161f0ea22e714870bed977d236901d59"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold GeneralSecureState in |- *; intros u GSSi TF; decompose [and] GSSi; clear GSSi.",
                        "VernacExtend",
                        "e9eb9ff80b81aca9883a94382d4020bf3716f1fd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "induction x as [| | | | | | | | | | | | | | | | | | | ]; prolog [ AclstatPSS AddUsrGrpToAclPSS ChmodPSS ChobjscPSS ChownPSS ChsubscPSS ClosePSS CreatePSS DelUsrGrpFromAclPSS MkdirPSS OpenPSS OscstatPSS Owner_ClosePSS ReadPSS ReaddirPSS RmdirPSS SscstatPSS StatPSS UnlinkPSS WritePSS ] 2.",
                        "VernacExtend",
                        "d6041a0f2b1e9af738d3b4ec822f2e43b306dd10"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "induction x as [| | | | | | | | | | | | | | | | | | | ]; prolog [ AclstatPSP AddUsrGrpToAclPSP ChmodPSP ChobjscPSP ChownPSP ChsubscPSP ClosePSP CreatePSP DelUsrGrpFromAclPSP MkdirPSP OpenPSP OscstatPSP Owner_ClosePSP ReadPSP ReaddirPSP RmdirPSP SscstatPSP StatPSP UnlinkPSP WritePSP ] 2.",
                        "VernacExtend",
                        "909e7ba626ebb94ee89d7975f4b0d8ea0ec7d9ae"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold FuncPre1 in |- *; unfold FuncPre1 in H6; decompose [and] H6; repeat (split; eauto).",
                        "VernacExtend",
                        "5e80c4277c5c88766f1a01a0b9b936cff160d498"
                    ]
                },
                {
                    "command": [
                        "unfold FuncPre2, FuncPre3, FuncPre4, FuncPre5, FuncPre6, FuncPre7 in |- *; unfold FuncPre2, FuncPre3, FuncPre4, FuncPre5, FuncPre6, FuncPre7 in H8, H9, H10, H11, H12, H14; repeat (split; eauto).",
                        "VernacExtend",
                        "73e6eb120bf1dcf926c692129a6ae755833fa313"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}