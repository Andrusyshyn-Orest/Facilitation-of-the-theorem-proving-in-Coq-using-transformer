{
    "filename": "FreeGroups.v",
    "coq_project": "free-groups",
    "vernac_cmds": [
        [
            "Require Export List.",
            "VernacRequire",
            "d626cb98fe764077098989d26509c9f7407e0464"
        ],
        [
            "Require Export Setoid.",
            "VernacRequire",
            "a0df4327e58518a5282381a0591ee590a2104408"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Section FreeGroups.",
            "VernacBeginSection",
            "4195016431a298d240c3ca8fe944baec9d1de9cd"
        ],
        [
            "Variable generators: Type.",
            "VernacAssumption",
            "18ac74a5b71b9a220cda6c853f49c761a3a0c46b"
        ],
        [
            "Hypothesis generator_eq_dec: forall g1 g2:generators, { g1=g2 } + { g1<>g2 }.",
            "VernacAssumption",
            "99a65fd8ccf9fc7f98aeee3e87f95d2f2236f119"
        ],
        [
            "Inductive alphabet: Type := | intro_gen: generators -> alphabet | intro_gen_inv: generators -> alphabet.",
            "VernacInductive",
            "c1148c21cb2cc9f977feea9b2d61a5bd1de75105"
        ],
        [
            "Definition group_str := list alphabet.",
            "VernacDefinition",
            "781797d15deb111e36a310eae02aba39927b9126"
        ],
        [
            "Definition opposite (letter:alphabet) := match letter with | intro_gen a => intro_gen_inv a | intro_gen_inv a => intro_gen a end.",
            "VernacDefinition",
            "bc5658c216af501e51c844a4637af2e02afc969f"
        ],
        [
            "Lemma opposite_involution: forall a:alphabet, opposite (opposite a) = a.",
            "VernacStartTheoremProof",
            "176bfd75a861e96a48b088355ce93137ac0ba638"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case a.",
            "VernacExtend",
            "9bc0f7a1b1c171bd37232c7a1605304b61d5baa4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive non_reduced: group_str -> Prop := | intro_letter_inverse: forall (S T: group_str) (a: alphabet), non_reduced (S ++ (opposite a) :: a :: T).",
            "VernacInductive",
            "9ebc8c051062625b030ad4bd6eb356e5e8d8f722"
        ],
        [
            "Definition reduced (S: group_str) : Prop := not (non_reduced S).",
            "VernacDefinition",
            "5a04749a2fe1e124499a1f54be504ca30bce7206"
        ],
        [
            "Lemma empty_str_reduced: reduced (@nil alphabet).",
            "VernacStartTheoremProof",
            "2f9a588f38db33f4ea70a7d41d4a734338dc898a"
        ],
        [
            "unfold reduced.",
            "VernacExtend",
            "19e242f247a5b269a067cf96763a85cf253e187a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma single_letter_reduced: forall a:alphabet, reduced (a :: nil).",
            "VernacStartTheoremProof",
            "f86226dfbd597c726ccba67f8a142c82928ec94a"
        ],
        [
            "unfold reduced.",
            "VernacExtend",
            "19e242f247a5b269a067cf96763a85cf253e187a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cons_to_nonreduced_gives_nonreduced: forall (S:group_str) (a:alphabet), non_reduced S -> non_reduced (a :: S).",
            "VernacStartTheoremProof",
            "0468e229dbb77e334db77dc252b993783c0c620c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case H.",
            "VernacExtend",
            "ed133bc3c18fb327812c50c4771060c04c7f32b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (intro_letter_inverse (a :: S0) T a0).",
            "VernacExtend",
            "a8e58344669ab5f82ef9cc83c1f314bed71f37bc"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_non_reduced: forall (S: group_str) (a b:alphabet), non_reduced (a :: b :: S) -> non_reduced (b :: S) \\/ a = opposite b.",
            "VernacStartTheoremProof",
            "0ab1a0084dc93b7ca97468d2b37864b3fee1492d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct S0.",
            "VernacExtend",
            "3548917a5617c38e890a146fded1f90f106560d9"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "injection H1.",
            "VernacExtend",
            "31268d1530b64cc45d910c4f0cd0563cee63009e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "injection H1.",
            "VernacExtend",
            "31268d1530b64cc45d910c4f0cd0563cee63009e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary join_reduced: forall (S:group_str) (a b:alphabet), reduced (b :: S) -> a <> opposite b -> reduced (a :: b :: S).",
            "VernacStartTheoremProof",
            "a020a1d1f5ebc37020d0419cdc62d4eb281f848a"
        ],
        [
            "unfold reduced.",
            "VernacExtend",
            "19e242f247a5b269a067cf96763a85cf253e187a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "pose proof (split_non_reduced S a b H1).",
            "VernacExtend",
            "357ede3aecd00a201005a1dbcb4d5fd625f5ea2b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition alphabet_eq_dec: forall a b:alphabet, {a=b} + {a<>b}.",
            "VernacDefinition",
            "ca52ad5e0412d5aef646d9962847a76ab6f21d2d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition letter_action (a:alphabet) (S:group_str) : group_str := match S with | nil => a :: nil | b :: S0 => (if alphabet_eq_dec a (opposite b) then S0 else a :: b :: S0) end.",
            "VernacDefinition",
            "4d4e5b53a635dfbda54603ea2469fe85e1949e9e"
        ],
        [
            "Lemma reduced_closed_under_letter_action: forall (a:alphabet) (S:group_str), reduced S -> reduced (letter_action a S).",
            "VernacStartTheoremProof",
            "9b4016d8f841e7ee726e23c4f179f9081008ce84"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply single_letter_reduced.",
            "VernacExtend",
            "85c77c4e36277b66d05df8cfab8bc7bba7377e87"
        ],
        [
            "case (alphabet_eq_dec a (opposite a0)).",
            "VernacExtend",
            "e70aec385062fbebc1116432200e1419c1148b1e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct alphabet_eq_dec.",
            "VernacExtend",
            "d050c7b88aee855c27f99c783f8b513b142fc3b0"
        ],
        [
            "unfold reduced.",
            "VernacExtend",
            "19e242f247a5b269a067cf96763a85cf253e187a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold reduced in H.",
            "VernacExtend",
            "bf60faf40738cd1cbc2812fb8bfab718847c7043"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply cons_to_nonreduced_gives_nonreduced.",
            "VernacExtend",
            "efdf290c6303037bc9b782f9181b597e99f92ff2"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct alphabet_eq_dec.",
            "VernacExtend",
            "d050c7b88aee855c27f99c783f8b513b142fc3b0"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "apply join_reduced.",
            "VernacExtend",
            "b52c6ec6e09cca37e72cfae451bd56ba814245a4"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opposites_give_inverse_actions: forall (S:group_str) (a:alphabet), reduced S -> letter_action (opposite a) (letter_action a S) = S.",
            "VernacStartTheoremProof",
            "ba5533d68e0dd7f9f4b6592475bea6a824104cff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case alphabet_eq_dec.",
            "VernacExtend",
            "a73497ab3d71935b405490dc709d5ea5f1640959"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case alphabet_eq_dec.",
            "VernacExtend",
            "a73497ab3d71935b405490dc709d5ea5f1640959"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite opposite_involution.",
            "VernacExtend",
            "c4fcca44e7215e5d7d217eca7f3a8ec572939bf7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case alphabet_eq_dec.",
            "VernacExtend",
            "a73497ab3d71935b405490dc709d5ea5f1640959"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite e in e0.",
            "VernacExtend",
            "b92e1a630984bc87d18343816acbab6fe2bbb7a7"
        ],
        [
            "rewrite opposite_involution in e0.",
            "VernacExtend",
            "ee374ab34527aa1fafb590abb83880e4524980ee"
        ],
        [
            "rewrite e0 in H.",
            "VernacExtend",
            "2681ac6110e27d4798600a8b5abdff7a9fa00a97"
        ],
        [
            "contradiction H.",
            "VernacExtend",
            "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
        ],
        [
            "pose proof (intro_letter_inverse nil S a1).",
            "VernacExtend",
            "72426f78e6b717abbca89fea1c2587afe9614253"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "rewrite opposite_involution.",
            "VernacExtend",
            "c4fcca44e7215e5d7d217eca7f3a8ec572939bf7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case alphabet_eq_dec.",
            "VernacExtend",
            "a73497ab3d71935b405490dc709d5ea5f1640959"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint group_str_action (S T:group_str) := match S with | nil => T | a :: S0 => letter_action a (group_str_action S0 T) end.",
            "VernacFixpoint",
            "46a8177eb4277053359d475cc90ced23b5092cbb"
        ],
        [
            "Lemma reduced_closed_under_str_action: forall (S T:group_str), reduced T -> reduced (group_str_action S T).",
            "VernacStartTheoremProof",
            "9c07002bec6e96160ff7a9a82d3fe091f0dbbe83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply reduced_closed_under_letter_action.",
            "VernacExtend",
            "c92193c6ed819e5a7c1b9155799943c56f2c4cf9"
        ],
        [
            "exact IHS.",
            "VernacExtend",
            "4ffa1c4b45be93181f0cfb78964273e2f0854e9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reduction (S:group_str) := group_str_action S nil.",
            "VernacDefinition",
            "9a3b67adc2bf9dbbd67cea5819ea534b508be0f5"
        ],
        [
            "Lemma reduction_is_reduced: forall S:group_str, reduced (reduction S).",
            "VernacStartTheoremProof",
            "1ed79407272a31a4e99dc57a97b2c9598cff2817"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold reduction.",
            "VernacExtend",
            "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
        ],
        [
            "apply reduced_closed_under_str_action.",
            "VernacExtend",
            "d9dec50f12bf60280f5705d2420d2a47830fa43c"
        ],
        [
            "apply empty_str_reduced.",
            "VernacExtend",
            "2f5502c36cb14111ba39b042899d6fbd4b31d430"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduction_fixes_reduced: forall S:group_str, reduced S -> reduction S = S.",
            "VernacStartTheoremProof",
            "5ea0a0ef855ed92f94d3f64bb3e49e1c3f80794c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold reduction.",
            "VernacExtend",
            "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (reduced (a0 :: S)).",
            "VernacExtend",
            "d35a5d54efbb557bb2809194b01d439722acd9ec"
        ],
        [
            "unfold reduced.",
            "VernacExtend",
            "19e242f247a5b269a067cf96763a85cf253e187a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (non_reduced (a :: a0 :: S)).",
            "VernacExtend",
            "84b24f6a50abea9346d57fbd6767bc1074754c23"
        ],
        [
            "apply (cons_to_nonreduced_gives_nonreduced).",
            "VernacExtend",
            "efdf290c6303037bc9b782f9181b597e99f92ff2"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "contradiction H1.",
            "VernacExtend",
            "93a068a62d2389ca7d67d8eaeabac4ea3b9ebd83"
        ],
        [
            "apply IHS in H0.",
            "VernacExtend",
            "a39370ded7ae3b77e8678d7a36c00c7a4ec89666"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case alphabet_eq_dec.",
            "VernacExtend",
            "a73497ab3d71935b405490dc709d5ea5f1640959"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pose proof (intro_letter_inverse nil S a0).",
            "VernacExtend",
            "93e9f09fa3c4640f42ecb41a66ea427870d4d509"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "rewrite <- e in H1.",
            "VernacExtend",
            "ae67fbd2fb25d9b2d394b5e7b48f6937ee3fe73f"
        ],
        [
            "contradiction H.",
            "VernacExtend",
            "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive group_str_equiv : group_str -> group_str -> Prop := | insert_opposite_pair: forall (S T:group_str) (a:alphabet), group_str_equiv (S ++ T) (S ++ opposite a :: a :: T) | group_str_equiv_refl: forall S:group_str, group_str_equiv S S | group_str_equiv_sym: forall S T:group_str, group_str_equiv S T -> group_str_equiv T S | group_str_equiv_trans: forall S T U:group_str, group_str_equiv S T -> group_str_equiv T U -> group_str_equiv S U.",
            "VernacInductive",
            "30087045aae0a605e9c6852cfa624681cc7976c0"
        ],
        [
            "Notation \"S ~~ T\" := (group_str_equiv S T) (at level 80).",
            "VernacNotation",
            "8be1eaca32a60cda8480bee5cab9d738b7f74fdf"
        ],
        [
            "Add Parametric Relation: group_str group_str_equiv reflexivity proved by group_str_equiv_refl symmetry proved by group_str_equiv_sym transitivity proved by group_str_equiv_trans as group_str_equiv_rel.",
            "VernacExtend",
            "c8c76a192c609bc90a8cdb601a0132a4ebf377c4"
        ],
        [
            "Lemma cons_respects_group_str_equiv: forall (S T:group_str) (a:alphabet), S ~~ T -> (a :: S) ~~ (a :: T).",
            "VernacStartTheoremProof",
            "7003d888bed0c9e70971323e2d0192d17e725647"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "pose proof (insert_opposite_pair (a :: S) T a0).",
            "VernacExtend",
            "0d37950078836774551b670ba53b243bdcb4670a"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "transitivity (a :: T).",
            "VernacExtend",
            "c78945bb1b2ddd38fe2f1367025870c5e179e38f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism: (@cons alphabet) with signature (@eq alphabet) ==> (group_str_equiv) ==> (group_str_equiv) as cons_group_str_mor.",
            "VernacExtend",
            "a8efafcb7f5c42408cad0bf4d4bd6fc4a4809bfd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cons_respects_group_str_equiv.",
            "VernacExtend",
            "6a4818fdcfe8106544c910b6f4d25e8e166f6e6c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma concat_respects_group_str_equiv: forall (S1 S2 T1 T2:group_str), S1 ~~ S2 -> T1 ~~ T2 -> (S1 ++ T1) ~~ (S2 ++ T2).",
            "VernacStartTheoremProof",
            "c042afc8e214dbbf65b5176d5bb88c917a01a099"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (S2 ++ T1).",
            "VernacExtend",
            "d4c660daa264dd79f70bbe2ffa592c45be1eabf2"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "pose proof (insert_opposite_pair S (T ++ T1) a).",
            "VernacExtend",
            "84359e75891ac83debedda0623a790c97040a557"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "transitivity (T ++ T1).",
            "VernacExtend",
            "300bc2c7b644e169960720894879a67d42182c73"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "pose proof (insert_opposite_pair (S2 ++ S) T a).",
            "VernacExtend",
            "6be5562ed1b559c5e483247e0960a846264431c4"
        ],
        [
            "rewrite app_ass in H0.",
            "VernacExtend",
            "51df5e470c3c56350fda94a8b891fb191c5b129f"
        ],
        [
            "rewrite app_ass in H0.",
            "VernacExtend",
            "51df5e470c3c56350fda94a8b891fb191c5b129f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "transitivity (S2 ++ T).",
            "VernacExtend",
            "f599467dded34ab61f65d60edfc9667968910305"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism: (@app alphabet) with signature (group_str_equiv) ==> (group_str_equiv) ==> (group_str_equiv) as concat_mor.",
            "VernacExtend",
            "a0e3608e47bddc71c5e07cb06339a9ab3a3cdb11"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply concat_respects_group_str_equiv.",
            "VernacExtend",
            "456818cf013e69ae9c1d517156c17a51751c02bd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduction_equiv: forall S:group_str, reduction S ~~ S.",
            "VernacStartTheoremProof",
            "f36962ea744fe973cd04bd45b57502d0e80f43ec"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold reduction.",
            "VernacExtend",
            "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "remember (group_str_action S nil) as redS.",
            "VernacExtend",
            "366704cd5a18f42860964beb149e5bbb61ff9fb0"
        ],
        [
            "destruct redS.",
            "VernacExtend",
            "a1022ad134fc2b0bb3a96ddc3ce7f30779092ba1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cons_respects_group_str_equiv.",
            "VernacExtend",
            "6a4818fdcfe8106544c910b6f4d25e8e166f6e6c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case alphabet_eq_dec.",
            "VernacExtend",
            "a73497ab3d71935b405490dc709d5ea5f1640959"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "transitivity (a :: a0 :: redS).",
            "VernacExtend",
            "e0bda0947791d9ba21d64e9892aea47a136448c4"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "pose proof (insert_opposite_pair nil redS a0).",
            "VernacExtend",
            "d5972da1e9d3a517ffbd9f59fed478dc4c14b90e"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite IHS.",
            "VernacExtend",
            "10e48cd34d3abd6639532681cf972b5e1a17e76d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite IHS.",
            "VernacExtend",
            "10e48cd34d3abd6639532681cf972b5e1a17e76d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma string_action_takes_concat_to_composition: forall (S1 S2 S3:group_str), group_str_action S1 (group_str_action S2 S3) = group_str_action (S1 ++ S2) S3.",
            "VernacStartTheoremProof",
            "f19f5c2b7d50487c85fe3cc238055e06e36abb94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction S1.",
            "VernacExtend",
            "e203f097238e64a7d55b10ebdcbb46dd8022a790"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHS1.",
            "VernacExtend",
            "6a114d0e309fe7b79cbe6b1f5a665707373f3ae5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_strings_have_same_actions: forall (S1 S2 T:group_str), reduced T -> S1 ~~ S2 -> group_str_action S1 T = group_str_action S2 T.",
            "VernacStartTheoremProof",
            "ec6506b62eabc11ff6fd43aad73f2fef3e43d0ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "rewrite <- string_action_takes_concat_to_composition.",
            "VernacExtend",
            "e5b8c5d4ee10a10787101c5e5f9c5747268b32d0"
        ],
        [
            "rewrite <- string_action_takes_concat_to_composition.",
            "VernacExtend",
            "e5b8c5d4ee10a10787101c5e5f9c5747268b32d0"
        ],
        [
            "assert (group_str_action T0 T = group_str_action (opposite a :: a :: T0) T).",
            "VernacExtend",
            "4b3c6fe3b2dcb13ab6cb9fae48d10cf3e3811341"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite opposites_give_inverse_actions.",
            "VernacExtend",
            "bdef85c458b3ef5ef781709575b14956ac5705c4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply reduced_closed_under_str_action.",
            "VernacExtend",
            "d9dec50f12bf60280f5705d2420d2a47830fa43c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "transitivity (group_str_action T0 T).",
            "VernacExtend",
            "282f20fdf01fa766a82d509a0290984f288499cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary equiv_strings_have_same_reductions: forall S T:group_str, S ~~ T -> reduction S = reduction T.",
            "VernacStartTheoremProof",
            "4cb2c28172194bfcc796a7a429f130f66e7e454d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold reduction.",
            "VernacExtend",
            "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
        ],
        [
            "apply equiv_strings_have_same_actions.",
            "VernacExtend",
            "515ff8542ce6d22274574d8a58c54cb6beda37d1"
        ],
        [
            "apply empty_str_reduced.",
            "VernacExtend",
            "2f5502c36cb14111ba39b042899d6fbd4b31d430"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism: reduction with signature (group_str_equiv) ==> (@eq group_str) as reduction_mor.",
            "VernacExtend",
            "2b03446c46110be89ac7240a6fb70873455c8ce3"
        ],
        [
            "exact equiv_strings_have_same_reductions.",
            "VernacExtend",
            "276ff0a36d32be2dbed23cdf91f64ab7bc143ae0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equivalence_is_equality_on_reduced_strings: forall S T:group_str, reduced S -> reduced T -> S ~~ T -> S = T.",
            "VernacStartTheoremProof",
            "2a11f520087d1171c78b301f37c58e2edc213984"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (reduction S).",
            "VernacExtend",
            "8385da95fac15075e1cf609c8e58e17090625510"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply reduction_fixes_reduced.",
            "VernacExtend",
            "dccaecef2e37d649f67533c2516554dce95b1d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply reduction_fixes_reduced.",
            "VernacExtend",
            "dccaecef2e37d649f67533c2516554dce95b1d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unique_reduction: forall S:group_str, exists! R:group_str, S ~~ R /\\ reduced R.",
            "VernacStartTheoremProof",
            "5da5189899821b9054b27351a603b90a378739fe"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exists (reduction S).",
            "VernacExtend",
            "dbc8f9dd7c27d38cbbfb80300ff1c3a54c35fb75"
        ],
        [
            "unfold unique.",
            "VernacExtend",
            "9aca0558aae7cfdaed3b7738b9e92bfc17f94a1d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply reduction_equiv.",
            "VernacExtend",
            "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
        ],
        [
            "apply reduction_is_reduced.",
            "VernacExtend",
            "6221ba525d7f780963b1cf13a28bb8e1b9309fb7"
        ],
        [
            "transitivity (reduction x').",
            "VernacExtend",
            "69474882dbc259bdebe7c72ca124fed0fa63039d"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply reduction_fixes_reduced.",
            "VernacExtend",
            "dccaecef2e37d649f67533c2516554dce95b1d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reduced_string_product (S1 S2:group_str) : group_str := reduction (S1 ++ S2).",
            "VernacDefinition",
            "3e32eab00eb48640ecfd724b49d177b7961babcd"
        ],
        [
            "Lemma reduced_string_product_equiv_to_concat: forall S1 S2:group_str, (reduced_string_product S1 S2) ~~ (S1 ++ S2).",
            "VernacStartTheoremProof",
            "0d371b0dd7c8385a97296952a3d0bd8a0d7a7a4c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold reduced_string_product.",
            "VernacExtend",
            "65157fe67703fb72a510c408c3deafb8d9d3c661"
        ],
        [
            "apply reduction_equiv.",
            "VernacExtend",
            "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem reduced_string_product_assoc: forall (S1 S2 S3:group_str), reduced_string_product (reduced_string_product S1 S2) S3 = reduced_string_product S1 (reduced_string_product S2 S3).",
            "VernacStartTheoremProof",
            "8382747b373294664d317ba78d8a920f6ec3eba2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply equivalence_is_equality_on_reduced_strings.",
            "VernacExtend",
            "49f9236d32ebd401a48a34cee33b709acb4f9cd3"
        ],
        [
            "apply reduction_is_reduced.",
            "VernacExtend",
            "6221ba525d7f780963b1cf13a28bb8e1b9309fb7"
        ],
        [
            "apply reduction_is_reduced.",
            "VernacExtend",
            "6221ba525d7f780963b1cf13a28bb8e1b9309fb7"
        ],
        [
            "repeat rewrite reduced_string_product_equiv_to_concat.",
            "VernacExtend",
            "c5adaf9741a4b2b4bbd871913d15194d1f10a086"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_str_is_left_id: forall S: group_str, reduced S -> reduced_string_product nil S = S.",
            "VernacStartTheoremProof",
            "4f0ab0e279241b1a5a70df5f4f81a398c4430ef9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply reduction_fixes_reduced.",
            "VernacExtend",
            "dccaecef2e37d649f67533c2516554dce95b1d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_str_is_right_id: forall S:group_str, reduced S -> reduced_string_product S nil = S.",
            "VernacStartTheoremProof",
            "d0094cba925f90ca1e7149311fc02103d70a3f12"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold reduced_string_product.",
            "VernacExtend",
            "65157fe67703fb72a510c408c3deafb8d9d3c661"
        ],
        [
            "rewrite <- app_nil_end.",
            "VernacExtend",
            "7a5afb73f1079eefc4f038825f65236213f003d9"
        ],
        [
            "apply reduction_fixes_reduced.",
            "VernacExtend",
            "dccaecef2e37d649f67533c2516554dce95b1d3b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint inverse_str (S:group_str) : group_str := match S with | nil => nil | a :: S0 => (inverse_str S0) ++ (opposite a) :: nil end.",
            "VernacFixpoint",
            "1742586b8807573b378eea4dd8d906f41e4c2078"
        ],
        [
            "Lemma inverse_str_reverses_concat: forall (S T:group_str), inverse_str (S ++ T) = (inverse_str T) ++ (inverse_str S).",
            "VernacStartTheoremProof",
            "f5edc65ecbd82a56d977b81f4b87018b45756077"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply app_nil_end.",
            "VernacExtend",
            "3221fdb59498f8e19e67dd95c8c5a8bf30515cbc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHS.",
            "VernacExtend",
            "10e48cd34d3abd6639532681cf972b5e1a17e76d"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inverse_str_involution: forall (S:group_str), inverse_str (inverse_str S) = S.",
            "VernacStartTheoremProof",
            "9a8db0ed1fe07d324651152478d7c62d31b320b3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite inverse_str_reverses_concat.",
            "VernacExtend",
            "370aad86927516c9083ce6d37d1cd7a5911a3a02"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHS.",
            "VernacExtend",
            "10e48cd34d3abd6639532681cf972b5e1a17e76d"
        ],
        [
            "rewrite opposite_involution.",
            "VernacExtend",
            "c4fcca44e7215e5d7d217eca7f3a8ec572939bf7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inverse_str_is_left_inverse: forall (S:group_str), reduced_string_product (inverse_str S) S = nil.",
            "VernacStartTheoremProof",
            "a4e4486666f796fb1a0016a130ac1eaa316a9879"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold reduced_string_product.",
            "VernacExtend",
            "65157fe67703fb72a510c408c3deafb8d9d3c661"
        ],
        [
            "assert (inverse_str S ++ S ~~ nil).",
            "VernacExtend",
            "e58adf75ba88f77fb3d4d7972d9ccbc15025d984"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite app_ass.",
            "VernacExtend",
            "1e8737a155ba47802e4df29a56a47a094af2082d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "transitivity (inverse_str S ++ S).",
            "VernacExtend",
            "d6a2d16bfc69f63c09bce3648b0a71dbd7c0b5e9"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply insert_opposite_pair.",
            "VernacExtend",
            "3f5768f22bc426822e093c7b7302109200577947"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "unfold reduction.",
            "VernacExtend",
            "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inverse_str_is_right_inverse: forall (S:group_str), reduced_string_product S (inverse_str S) = nil.",
            "VernacStartTheoremProof",
            "32245cbccd3b480505025f4e2ce0090777671599"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pose proof (inverse_str_is_left_inverse (inverse_str S)).",
            "VernacExtend",
            "7a1ef41fd2f321a0973f750b07f1094fed97c677"
        ],
        [
            "rewrite inverse_str_involution in H.",
            "VernacExtend",
            "9dccdb9383ee6db342ae227148bac7426f1113f5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reduced_dec: forall S: group_str, { reduced S } + { non_reduced S }.",
            "VernacDefinition",
            "41b9e47955e4e34df7477b762ac9e86e8b2c0f95"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction S.",
            "VernacExtend",
            "4af910368260b32b834df4e7497fdc1a14231f64"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply empty_str_reduced.",
            "VernacExtend",
            "2f5502c36cb14111ba39b042899d6fbd4b31d430"
        ],
        [
            "destruct S.",
            "VernacExtend",
            "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply single_letter_reduced.",
            "VernacExtend",
            "85c77c4e36277b66d05df8cfab8bc7bba7377e87"
        ],
        [
            "case IHS.",
            "VernacExtend",
            "157aa5d01a2f232e3ff74566ce08f7c6bdfffc7e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case (alphabet_eq_dec a (opposite a0)).",
            "VernacExtend",
            "e70aec385062fbebc1116432200e1419c1148b1e"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "pose proof (intro_letter_inverse nil S a0).",
            "VernacExtend",
            "93e9f09fa3c4640f42ecb41a66ea427870d4d509"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply join_reduced.",
            "VernacExtend",
            "b52c6ec6e09cca37e72cfae451bd56ba814245a4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply cons_to_nonreduced_gives_nonreduced.",
            "VernacExtend",
            "efdf290c6303037bc9b782f9181b597e99f92ff2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition free_group_word_problem_dec: forall S1 S2: group_str, { S1 ~~ S2 } + { ~ (S1 ~~ S2) }.",
            "VernacDefinition",
            "fe406796e2b235bbc98b5ff6721aa1fdac8dcf5d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (list_eq_dec alphabet_eq_dec (reduction S1) (reduction S2)).",
            "VernacExtend",
            "aeb4404ee985e775efb24a77462cb052e8f4579d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "transitivity (reduction S1).",
            "VernacExtend",
            "63413621b8797a6ca503b92a29ac6adb92185543"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply reduction_equiv.",
            "VernacExtend",
            "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
        ],
        [
            "transitivity (reduction S2).",
            "VernacExtend",
            "5a7e6beae8bfac18adb69332381a621e447157b1"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply reduction_equiv.",
            "VernacExtend",
            "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End FreeGroups.",
            "VernacEndSegment",
            "453943e2454e0edb2f4cf3daf271d5385bc59e86"
        ]
    ],
    "proofs": [
        {
            "name": "opposite_involution",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case a.",
                        "VernacExtend",
                        "9bc0f7a1b1c171bd37232c7a1605304b61d5baa4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_str_reduced",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold reduced.",
                        "VernacExtend",
                        "19e242f247a5b269a067cf96763a85cf253e187a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "single_letter_reduced",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold reduced.",
                        "VernacExtend",
                        "19e242f247a5b269a067cf96763a85cf253e187a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_to_nonreduced_gives_nonreduced",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case H.",
                        "VernacExtend",
                        "ed133bc3c18fb327812c50c4771060c04c7f32b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (intro_letter_inverse (a :: S0) T a0).",
                        "VernacExtend",
                        "a8e58344669ab5f82ef9cc83c1f314bed71f37bc"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_non_reduced",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct S0.",
                        "VernacExtend",
                        "3548917a5617c38e890a146fded1f90f106560d9"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "injection H1.",
                        "VernacExtend",
                        "31268d1530b64cc45d910c4f0cd0563cee63009e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "injection H1.",
                        "VernacExtend",
                        "31268d1530b64cc45d910c4f0cd0563cee63009e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_reduced",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "unfold reduced.",
                        "VernacExtend",
                        "19e242f247a5b269a067cf96763a85cf253e187a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "pose proof (split_non_reduced S a b H1).",
                        "VernacExtend",
                        "357ede3aecd00a201005a1dbcb4d5fd625f5ea2b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alphabet_eq_dec",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduced_closed_under_letter_action",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply single_letter_reduced.",
                        "VernacExtend",
                        "85c77c4e36277b66d05df8cfab8bc7bba7377e87"
                    ]
                },
                {
                    "command": [
                        "case (alphabet_eq_dec a (opposite a0)).",
                        "VernacExtend",
                        "e70aec385062fbebc1116432200e1419c1148b1e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct alphabet_eq_dec.",
                        "VernacExtend",
                        "d050c7b88aee855c27f99c783f8b513b142fc3b0"
                    ]
                },
                {
                    "command": [
                        "unfold reduced.",
                        "VernacExtend",
                        "19e242f247a5b269a067cf96763a85cf253e187a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold reduced in H.",
                        "VernacExtend",
                        "bf60faf40738cd1cbc2812fb8bfab718847c7043"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply cons_to_nonreduced_gives_nonreduced.",
                        "VernacExtend",
                        "efdf290c6303037bc9b782f9181b597e99f92ff2"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct alphabet_eq_dec.",
                        "VernacExtend",
                        "d050c7b88aee855c27f99c783f8b513b142fc3b0"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "apply join_reduced.",
                        "VernacExtend",
                        "b52c6ec6e09cca37e72cfae451bd56ba814245a4"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opposites_give_inverse_actions",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case alphabet_eq_dec.",
                        "VernacExtend",
                        "a73497ab3d71935b405490dc709d5ea5f1640959"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case alphabet_eq_dec.",
                        "VernacExtend",
                        "a73497ab3d71935b405490dc709d5ea5f1640959"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite opposite_involution.",
                        "VernacExtend",
                        "c4fcca44e7215e5d7d217eca7f3a8ec572939bf7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case alphabet_eq_dec.",
                        "VernacExtend",
                        "a73497ab3d71935b405490dc709d5ea5f1640959"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite e in e0.",
                        "VernacExtend",
                        "b92e1a630984bc87d18343816acbab6fe2bbb7a7"
                    ]
                },
                {
                    "command": [
                        "rewrite opposite_involution in e0.",
                        "VernacExtend",
                        "ee374ab34527aa1fafb590abb83880e4524980ee"
                    ]
                },
                {
                    "command": [
                        "rewrite e0 in H.",
                        "VernacExtend",
                        "2681ac6110e27d4798600a8b5abdff7a9fa00a97"
                    ]
                },
                {
                    "command": [
                        "contradiction H.",
                        "VernacExtend",
                        "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
                    ]
                },
                {
                    "command": [
                        "pose proof (intro_letter_inverse nil S a1).",
                        "VernacExtend",
                        "72426f78e6b717abbca89fea1c2587afe9614253"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "rewrite opposite_involution.",
                        "VernacExtend",
                        "c4fcca44e7215e5d7d217eca7f3a8ec572939bf7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case alphabet_eq_dec.",
                        "VernacExtend",
                        "a73497ab3d71935b405490dc709d5ea5f1640959"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduced_closed_under_str_action",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply reduced_closed_under_letter_action.",
                        "VernacExtend",
                        "c92193c6ed819e5a7c1b9155799943c56f2c4cf9"
                    ]
                },
                {
                    "command": [
                        "exact IHS.",
                        "VernacExtend",
                        "4ffa1c4b45be93181f0cfb78964273e2f0854e9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduction_is_reduced",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold reduction.",
                        "VernacExtend",
                        "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
                    ]
                },
                {
                    "command": [
                        "apply reduced_closed_under_str_action.",
                        "VernacExtend",
                        "d9dec50f12bf60280f5705d2420d2a47830fa43c"
                    ]
                },
                {
                    "command": [
                        "apply empty_str_reduced.",
                        "VernacExtend",
                        "2f5502c36cb14111ba39b042899d6fbd4b31d430"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduction_fixes_reduced",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold reduction.",
                        "VernacExtend",
                        "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (reduced (a0 :: S)).",
                        "VernacExtend",
                        "d35a5d54efbb557bb2809194b01d439722acd9ec"
                    ]
                },
                {
                    "command": [
                        "unfold reduced.",
                        "VernacExtend",
                        "19e242f247a5b269a067cf96763a85cf253e187a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assert (non_reduced (a :: a0 :: S)).",
                        "VernacExtend",
                        "84b24f6a50abea9346d57fbd6767bc1074754c23"
                    ]
                },
                {
                    "command": [
                        "apply (cons_to_nonreduced_gives_nonreduced).",
                        "VernacExtend",
                        "efdf290c6303037bc9b782f9181b597e99f92ff2"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "contradiction H1.",
                        "VernacExtend",
                        "93a068a62d2389ca7d67d8eaeabac4ea3b9ebd83"
                    ]
                },
                {
                    "command": [
                        "apply IHS in H0.",
                        "VernacExtend",
                        "a39370ded7ae3b77e8678d7a36c00c7a4ec89666"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case alphabet_eq_dec.",
                        "VernacExtend",
                        "a73497ab3d71935b405490dc709d5ea5f1640959"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "pose proof (intro_letter_inverse nil S a0).",
                        "VernacExtend",
                        "93e9f09fa3c4640f42ecb41a66ea427870d4d509"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- e in H1.",
                        "VernacExtend",
                        "ae67fbd2fb25d9b2d394b5e7b48f6937ee3fe73f"
                    ]
                },
                {
                    "command": [
                        "contradiction H.",
                        "VernacExtend",
                        "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_respects_group_str_equiv",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "pose proof (insert_opposite_pair (a :: S) T a0).",
                        "VernacExtend",
                        "0d37950078836774551b670ba53b243bdcb4670a"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "transitivity (a :: T).",
                        "VernacExtend",
                        "c78945bb1b2ddd38fe2f1367025870c5e179e38f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_group_str_mor_Proper",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply cons_respects_group_str_equiv.",
                        "VernacExtend",
                        "6a4818fdcfe8106544c910b6f4d25e8e166f6e6c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concat_respects_group_str_equiv",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (S2 ++ T1).",
                        "VernacExtend",
                        "d4c660daa264dd79f70bbe2ffa592c45be1eabf2"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "pose proof (insert_opposite_pair S (T ++ T1) a).",
                        "VernacExtend",
                        "84359e75891ac83debedda0623a790c97040a557"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "transitivity (T ++ T1).",
                        "VernacExtend",
                        "300bc2c7b644e169960720894879a67d42182c73"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "pose proof (insert_opposite_pair (S2 ++ S) T a).",
                        "VernacExtend",
                        "6be5562ed1b559c5e483247e0960a846264431c4"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass in H0.",
                        "VernacExtend",
                        "51df5e470c3c56350fda94a8b891fb191c5b129f"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass in H0.",
                        "VernacExtend",
                        "51df5e470c3c56350fda94a8b891fb191c5b129f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "transitivity (S2 ++ T).",
                        "VernacExtend",
                        "f599467dded34ab61f65d60edfc9667968910305"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concat_mor_Proper",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply concat_respects_group_str_equiv.",
                        "VernacExtend",
                        "456818cf013e69ae9c1d517156c17a51751c02bd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduction_equiv",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold reduction.",
                        "VernacExtend",
                        "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "remember (group_str_action S nil) as redS.",
                        "VernacExtend",
                        "366704cd5a18f42860964beb149e5bbb61ff9fb0"
                    ]
                },
                {
                    "command": [
                        "destruct redS.",
                        "VernacExtend",
                        "a1022ad134fc2b0bb3a96ddc3ce7f30779092ba1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply cons_respects_group_str_equiv.",
                        "VernacExtend",
                        "6a4818fdcfe8106544c910b6f4d25e8e166f6e6c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case alphabet_eq_dec.",
                        "VernacExtend",
                        "a73497ab3d71935b405490dc709d5ea5f1640959"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "transitivity (a :: a0 :: redS).",
                        "VernacExtend",
                        "e0bda0947791d9ba21d64e9892aea47a136448c4"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "pose proof (insert_opposite_pair nil redS a0).",
                        "VernacExtend",
                        "d5972da1e9d3a517ffbd9f59fed478dc4c14b90e"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite IHS.",
                        "VernacExtend",
                        "10e48cd34d3abd6639532681cf972b5e1a17e76d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite IHS.",
                        "VernacExtend",
                        "10e48cd34d3abd6639532681cf972b5e1a17e76d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "string_action_takes_concat_to_composition",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction S1.",
                        "VernacExtend",
                        "e203f097238e64a7d55b10ebdcbb46dd8022a790"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHS1.",
                        "VernacExtend",
                        "6a114d0e309fe7b79cbe6b1f5a665707373f3ae5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_strings_have_same_actions",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- string_action_takes_concat_to_composition.",
                        "VernacExtend",
                        "e5b8c5d4ee10a10787101c5e5f9c5747268b32d0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- string_action_takes_concat_to_composition.",
                        "VernacExtend",
                        "e5b8c5d4ee10a10787101c5e5f9c5747268b32d0"
                    ]
                },
                {
                    "command": [
                        "assert (group_str_action T0 T = group_str_action (opposite a :: a :: T0) T).",
                        "VernacExtend",
                        "4b3c6fe3b2dcb13ab6cb9fae48d10cf3e3811341"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite opposites_give_inverse_actions.",
                        "VernacExtend",
                        "bdef85c458b3ef5ef781709575b14956ac5705c4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply reduced_closed_under_str_action.",
                        "VernacExtend",
                        "d9dec50f12bf60280f5705d2420d2a47830fa43c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "transitivity (group_str_action T0 T).",
                        "VernacExtend",
                        "282f20fdf01fa766a82d509a0290984f288499cc"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_strings_have_same_reductions",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold reduction.",
                        "VernacExtend",
                        "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
                    ]
                },
                {
                    "command": [
                        "apply equiv_strings_have_same_actions.",
                        "VernacExtend",
                        "515ff8542ce6d22274574d8a58c54cb6beda37d1"
                    ]
                },
                {
                    "command": [
                        "apply empty_str_reduced.",
                        "VernacExtend",
                        "2f5502c36cb14111ba39b042899d6fbd4b31d430"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduction_mor_Proper",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "exact equiv_strings_have_same_reductions.",
                        "VernacExtend",
                        "276ff0a36d32be2dbed23cdf91f64ab7bc143ae0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equivalence_is_equality_on_reduced_strings",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (reduction S).",
                        "VernacExtend",
                        "8385da95fac15075e1cf609c8e58e17090625510"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply reduction_fixes_reduced.",
                        "VernacExtend",
                        "dccaecef2e37d649f67533c2516554dce95b1d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply reduction_fixes_reduced.",
                        "VernacExtend",
                        "dccaecef2e37d649f67533c2516554dce95b1d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_reduction",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exists (reduction S).",
                        "VernacExtend",
                        "dbc8f9dd7c27d38cbbfb80300ff1c3a54c35fb75"
                    ]
                },
                {
                    "command": [
                        "unfold unique.",
                        "VernacExtend",
                        "9aca0558aae7cfdaed3b7738b9e92bfc17f94a1d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply reduction_equiv.",
                        "VernacExtend",
                        "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
                    ]
                },
                {
                    "command": [
                        "apply reduction_is_reduced.",
                        "VernacExtend",
                        "6221ba525d7f780963b1cf13a28bb8e1b9309fb7"
                    ]
                },
                {
                    "command": [
                        "transitivity (reduction x').",
                        "VernacExtend",
                        "69474882dbc259bdebe7c72ca124fed0fa63039d"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply reduction_fixes_reduced.",
                        "VernacExtend",
                        "dccaecef2e37d649f67533c2516554dce95b1d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduced_string_product_equiv_to_concat",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold reduced_string_product.",
                        "VernacExtend",
                        "65157fe67703fb72a510c408c3deafb8d9d3c661"
                    ]
                },
                {
                    "command": [
                        "apply reduction_equiv.",
                        "VernacExtend",
                        "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduced_string_product_assoc",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply equivalence_is_equality_on_reduced_strings.",
                        "VernacExtend",
                        "49f9236d32ebd401a48a34cee33b709acb4f9cd3"
                    ]
                },
                {
                    "command": [
                        "apply reduction_is_reduced.",
                        "VernacExtend",
                        "6221ba525d7f780963b1cf13a28bb8e1b9309fb7"
                    ]
                },
                {
                    "command": [
                        "apply reduction_is_reduced.",
                        "VernacExtend",
                        "6221ba525d7f780963b1cf13a28bb8e1b9309fb7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite reduced_string_product_equiv_to_concat.",
                        "VernacExtend",
                        "c5adaf9741a4b2b4bbd871913d15194d1f10a086"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_str_is_left_id",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply reduction_fixes_reduced.",
                        "VernacExtend",
                        "dccaecef2e37d649f67533c2516554dce95b1d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_str_is_right_id",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold reduced_string_product.",
                        "VernacExtend",
                        "65157fe67703fb72a510c408c3deafb8d9d3c661"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end.",
                        "VernacExtend",
                        "7a5afb73f1079eefc4f038825f65236213f003d9"
                    ]
                },
                {
                    "command": [
                        "apply reduction_fixes_reduced.",
                        "VernacExtend",
                        "dccaecef2e37d649f67533c2516554dce95b1d3b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inverse_str_reverses_concat",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply app_nil_end.",
                        "VernacExtend",
                        "3221fdb59498f8e19e67dd95c8c5a8bf30515cbc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHS.",
                        "VernacExtend",
                        "10e48cd34d3abd6639532681cf972b5e1a17e76d"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inverse_str_involution",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite inverse_str_reverses_concat.",
                        "VernacExtend",
                        "370aad86927516c9083ce6d37d1cd7a5911a3a02"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHS.",
                        "VernacExtend",
                        "10e48cd34d3abd6639532681cf972b5e1a17e76d"
                    ]
                },
                {
                    "command": [
                        "rewrite opposite_involution.",
                        "VernacExtend",
                        "c4fcca44e7215e5d7d217eca7f3a8ec572939bf7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inverse_str_is_left_inverse",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold reduced_string_product.",
                        "VernacExtend",
                        "65157fe67703fb72a510c408c3deafb8d9d3c661"
                    ]
                },
                {
                    "command": [
                        "assert (inverse_str S ++ S ~~ nil).",
                        "VernacExtend",
                        "e58adf75ba88f77fb3d4d7972d9ccbc15025d984"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass.",
                        "VernacExtend",
                        "1e8737a155ba47802e4df29a56a47a094af2082d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "transitivity (inverse_str S ++ S).",
                        "VernacExtend",
                        "d6a2d16bfc69f63c09bce3648b0a71dbd7c0b5e9"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply insert_opposite_pair.",
                        "VernacExtend",
                        "3f5768f22bc426822e093c7b7302109200577947"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "unfold reduction.",
                        "VernacExtend",
                        "ea1333739a7827290baa10350e6f8fcb1b6d1ed5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inverse_str_is_right_inverse",
            "line_nb": 406,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "pose proof (inverse_str_is_left_inverse (inverse_str S)).",
                        "VernacExtend",
                        "7a1ef41fd2f321a0973f750b07f1094fed97c677"
                    ]
                },
                {
                    "command": [
                        "rewrite inverse_str_involution in H.",
                        "VernacExtend",
                        "9dccdb9383ee6db342ae227148bac7426f1113f5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduced_dec",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction S.",
                        "VernacExtend",
                        "4af910368260b32b834df4e7497fdc1a14231f64"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply empty_str_reduced.",
                        "VernacExtend",
                        "2f5502c36cb14111ba39b042899d6fbd4b31d430"
                    ]
                },
                {
                    "command": [
                        "destruct S.",
                        "VernacExtend",
                        "35c9c2e93eb34e2d7318cabd6a97a68f4e08b89d"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply single_letter_reduced.",
                        "VernacExtend",
                        "85c77c4e36277b66d05df8cfab8bc7bba7377e87"
                    ]
                },
                {
                    "command": [
                        "case IHS.",
                        "VernacExtend",
                        "157aa5d01a2f232e3ff74566ce08f7c6bdfffc7e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case (alphabet_eq_dec a (opposite a0)).",
                        "VernacExtend",
                        "e70aec385062fbebc1116432200e1419c1148b1e"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "pose proof (intro_letter_inverse nil S a0).",
                        "VernacExtend",
                        "93e9f09fa3c4640f42ecb41a66ea427870d4d509"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply join_reduced.",
                        "VernacExtend",
                        "b52c6ec6e09cca37e72cfae451bd56ba814245a4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply cons_to_nonreduced_gives_nonreduced.",
                        "VernacExtend",
                        "efdf290c6303037bc9b782f9181b597e99f92ff2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "free_group_word_problem_dec",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (list_eq_dec alphabet_eq_dec (reduction S1) (reduction S2)).",
                        "VernacExtend",
                        "aeb4404ee985e775efb24a77462cb052e8f4579d"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "transitivity (reduction S1).",
                        "VernacExtend",
                        "63413621b8797a6ca503b92a29ac6adb92185543"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply reduction_equiv.",
                        "VernacExtend",
                        "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
                    ]
                },
                {
                    "command": [
                        "transitivity (reduction S2).",
                        "VernacExtend",
                        "5a7e6beae8bfac18adb69332381a621e447157b1"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply reduction_equiv.",
                        "VernacExtend",
                        "7a9e52368a7b3bae4a6baf1434305cddc463de4e"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}