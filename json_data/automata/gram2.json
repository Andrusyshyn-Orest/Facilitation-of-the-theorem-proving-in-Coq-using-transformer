{
    "filename": "gram2.v",
    "coq_project": "automata",
    "vernac_cmds": [
        [
            "Require Import Ensf.",
            "VernacRequire",
            "0eef339a8702c2ffbe4b6d6652f4262e87a9cc51"
        ],
        [
            "Require Import Words.",
            "VernacRequire",
            "2af28d54c83d8fc6ccdd83d2efbe89ec4d6eff34"
        ],
        [
            "Require Import more_words.",
            "VernacRequire",
            "42bdc7795d087d1127136b152cdc0b4f61bae0b7"
        ],
        [
            "Require Import need.",
            "VernacRequire",
            "9a1afe2eef8b71698863d342559c97dd02c5052b"
        ],
        [
            "Require Import fonctions.",
            "VernacRequire",
            "827b14fe5063132d9c325153db4f6b45dd7f4e8a"
        ],
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require Import gram.",
            "VernacRequire",
            "c5b6ab81d174d68ec0a03ed91f4647fd7b3484b0"
        ],
        [
            "Hint Resolve extension_Id.",
            "VernacHints",
            "34da2438cc9d0d7e00ccb047084a01a5c25eaea4"
        ],
        [
            "Section resultats.",
            "VernacBeginSection",
            "c04a306edac23bc1aa4ef545f6885288e616252e"
        ],
        [
            "Variable X V1 R1 : Ensf.",
            "VernacAssumption",
            "23ed2767b06a702bf1d9fcc2350a43e7518903b9"
        ],
        [
            "Variable S1 : Elt.",
            "VernacAssumption",
            "e20e86027b709321ae0fa1d153fe09676aed0976"
        ],
        [
            "Variable V2 R2 : Ensf.",
            "VernacAssumption",
            "22b3158a9040186defc25d909134a07caa8433dc"
        ],
        [
            "Variable S2 : Elt.",
            "VernacAssumption",
            "0387d5d4de934ad3a81671cd855535127ca46e29"
        ],
        [
            "Let C := Gunion V1 R1 V2 R2.",
            "VernacDefinition",
            "d66784d20dc58f8d3601b0c8f5719a8fd1168f93"
        ],
        [
            "Let Vu := fst C.",
            "VernacDefinition",
            "03991c35c64d049efb4568b382f4a730f390330c"
        ],
        [
            "Let Ru := snd C.",
            "VernacDefinition",
            "4ee076150dd24de22f55f4091873ac71c6bc4ba7"
        ],
        [
            "Lemma inter_X_Vu : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter X Vu empty.",
            "VernacStartTheoremProof",
            "a01727737d093404d64ce902d99bf065f7139f1c"
        ],
        [
            "intro G1.",
            "VernacExtend",
            "b1670fed783b500e8f6f6f9d1f4b2900562d1b2a"
        ],
        [
            "intro G2.",
            "VernacExtend",
            "435124fbfb9792301209594d3283c53c69b55fe6"
        ],
        [
            "unfold Vu in |- *.",
            "VernacExtend",
            "a0b6b43c6895739e66dddf503856b5e9afb6b63d"
        ],
        [
            "unfold C in |- *.",
            "VernacExtend",
            "cb35f243768bdbad0fe05a3ae5cac30a865b5759"
        ],
        [
            "unfold Gunion in |- *.",
            "VernacExtend",
            "097bd60b6e2b710426414356681619cd28792e3a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply union_inter.",
            "VernacExtend",
            "d3e2f23631a635f7399b9affdce6a08d07506669"
        ],
        [
            "apply isGram2 with R1 S1; assumption.",
            "VernacExtend",
            "0df12f0d1f68c7156ff78decf0168546a6069fb8"
        ],
        [
            "apply isGram2 with R2 S2; assumption.",
            "VernacExtend",
            "0577a9c81b46addd5c4fa73cfbbac2a0cea58a9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_Regles : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> Regles X Vu Ru.",
            "VernacStartTheoremProof",
            "cb29596a1fca85b0fc29574072f1e0cb8cd9e132"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Ru in |- *; unfold C in |- *; unfold Gunion in |- *; simpl in |- *.",
            "VernacExtend",
            "a6de75a95939b8d1318b67e217813c248061c4e2"
        ],
        [
            "apply Regles_union; unfold Vu in |- *; unfold C in |- *; unfold Gunion in |- *; simpl in |- *.",
            "VernacExtend",
            "2f14ff5a1960b7d5fef74416ba1bb4918a57b2c2"
        ],
        [
            "apply Regles_V with V1; [ auto | apply isGram4 with S1; auto ].",
            "VernacExtend",
            "1d7eb23b2de279c145b8a0ba13faeab2686f978b"
        ],
        [
            "apply Regles_V with V2; [ auto | apply isGram4 with S2; auto ].",
            "VernacExtend",
            "ca62057b784a91611afebea7123d4918144de46f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_Der : Regles X V1 R1 -> Regles X V2 R2 -> inter (union X V1) V2 empty -> forall u v : Word, Derive Ru u v -> inmonoid (union X V1) u -> Derive R1 u v.",
            "VernacStartTheoremProof",
            "4902524c65507c68ebecdd44190feda0128ae919"
        ],
        [
            "intros Re_1 Re_2 inter_X_V1_V2_empty u v Der_Ru_u.",
            "VernacExtend",
            "974a24dc033b9d5aa81fdf214eb0caac83cb9ba1"
        ],
        [
            "elim Der_Ru_u.",
            "VernacExtend",
            "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
        ],
        [
            "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
            "VernacExtend",
            "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
        ],
        [
            "apply Derive1.",
            "VernacExtend",
            "a314a3be2884376f829b2527f1b21e123a904876"
        ],
        [
            "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
            "VernacExtend",
            "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro dans_R2.",
            "VernacExtend",
            "f74bc22d45f071ae7e5220095cdf7f3122f6be4b"
        ],
        [
            "absurd (inter (union X V1) V2 empty).",
            "VernacExtend",
            "e0b89849b926aa42abf85530941fb3ba029c2a5c"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold inter in |- *.",
            "VernacExtend",
            "0cda10a713e20ded51dc208d6b76935d284c91eb"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros incl_empty_X_V1 temp; elim temp; clear temp.",
            "VernacExtend",
            "3945229d5f45940c2058dc64cbc31e242aaa9bbf"
        ],
        [
            "intros incl_empty_V2 imp.",
            "VernacExtend",
            "e7a0ee2e305fbeb8192aaeb145980236f05c05f7"
        ],
        [
            "apply dans_empty_imp_P with A.",
            "VernacExtend",
            "9c4b46c9a342786ba5dda394a0e60a9ba541dfb2"
        ],
        [
            "apply imp.",
            "VernacExtend",
            "56297aabf8c6a9cceeab9d526c06fd7b26ef4b32"
        ],
        [
            "apply inmonoid_cons_inv2 with v0; assumption.",
            "VernacExtend",
            "70b8f86851eb836c9cb7ea99f153189c7aa04a1c"
        ],
        [
            "apply Regles_inv1 with X R2 (word u0); assumption.",
            "VernacExtend",
            "c57f08d36b42080260969161b1bd937e2f022615"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply dans_union; assumption.",
            "VernacExtend",
            "4f33cbaa2c19da0422f5353729c28a0331c60a06"
        ],
        [
            "intros u0 v0 x Der_Ru imp inmon_cons_x_u0.",
            "VernacExtend",
            "36f8cbb16947e562e817126b0907f40456d5d84b"
        ],
        [
            "apply Derive2.",
            "VernacExtend",
            "5976c2958a6e141bbf470ca9dc6486fadef5e3eb"
        ],
        [
            "apply imp.",
            "VernacExtend",
            "56297aabf8c6a9cceeab9d526c06fd7b26ef4b32"
        ],
        [
            "apply inmonoid_cons_inv with x.",
            "VernacExtend",
            "06adbc71867d32f128a182d88064400b2a4fca41"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_R1 : forall u v : Word, Regles X V1 R1 -> Derive R1 u v -> inmonoid (union X V1) u -> inmonoid (union X V1) v.",
            "VernacStartTheoremProof",
            "ed888de181a9e959f3b7cac5165b132a48ac9367"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply in_mon_X_Der_imp_inmon_X with R1 u; assumption.",
            "VernacExtend",
            "20d970603b5b08ae879c5d20a971b4474d54be5f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon : forall u v : Word, isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> inmonoid (union X V1) u -> Derive Ru u v -> inmonoid (union X V1) v.",
            "VernacStartTheoremProof",
            "70a3148ce42237cc4b3222c130c7c4a93355a469"
        ],
        [
            "intros u v G_R1 G_R2 inter_V1_V2_empty inmon_X_V1_u Der_Ru_u_v.",
            "VernacExtend",
            "0e262cf2d81eee0e7401740a1f16e7f9c07098c1"
        ],
        [
            "apply inmon_Der_imp_inmon_R1 with u.",
            "VernacExtend",
            "ad34d4e7b07c0c0d14343b50531f32104edf605c"
        ],
        [
            "apply isGram4 with S1; assumption.",
            "VernacExtend",
            "0ad940b3e61977c6fad76eb00c7c305fc564ebc3"
        ],
        [
            "apply inmon_Der_imp_Der.",
            "VernacExtend",
            "7fab38aad06b32e2c8a476c97aa2ce997e4e0f7d"
        ],
        [
            "apply isGram4 with S1; assumption.",
            "VernacExtend",
            "0ad940b3e61977c6fad76eb00c7c305fc564ebc3"
        ],
        [
            "apply isGram4 with S2; assumption.",
            "VernacExtend",
            "719fc60b900dcadddacd64c43cf3b4c21d040f50"
        ],
        [
            "apply inter_union.",
            "VernacExtend",
            "ae2a40a333ff452c9e2d13696ac5ea96bdc3a6ff"
        ],
        [
            "apply isGram2 with R2 S2; assumption.",
            "VernacExtend",
            "0577a9c81b46addd5c4fa73cfbbac2a0cea58a9e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_Derivestar : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> forall u v : Word, Derivestar Ru u v -> inmonoid (union X V1) u -> Derivestar R1 u v.",
            "VernacStartTheoremProof",
            "5ae3f83cd05b97ea4086a73f149bc8404a8c9fb6"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "intros G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
            "VernacExtend",
            "dae2326a82e7ae2e010df327d26994decf5c9655"
        ],
        [
            "pattern u, v in |- *.",
            "VernacExtend",
            "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
        ],
        [
            "apply Derivestar_Ru.",
            "VernacExtend",
            "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R1_v0 inmon_u0.",
            "VernacExtend",
            "67bb24b1ec9f9f5794a47ebdfc02cc7703b3cf3e"
        ],
        [
            "apply Rstar_R with v0.",
            "VernacExtend",
            "eeb7b3c39e07ad9435e888ba61edc8959e8edc03"
        ],
        [
            "prolog [ inmon_Der_imp_Der isGram4 inter_union isGram2 ] 5.",
            "VernacExtend",
            "fc7063153c5a45295a1a5b25a0bdd1c481d8e111"
        ],
        [
            "prolog [ inmon_Der_imp_inmon ] 3.",
            "VernacExtend",
            "dc7046004c87a235a15e47d0cf7d2eae6cdcc953"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_Der2 : Regles X V1 R1 -> Regles X V2 R2 -> inter (union X V2) V1 empty -> forall u v : Word, Derive Ru u v -> inmonoid (union X V2) u -> Derive R2 u v.",
            "VernacStartTheoremProof",
            "8639a45302bf4b158fadd4642a4133b9f96db23e"
        ],
        [
            "intros Re_1 Re_2 inter_X_V2_V1_empty u v Der_Ru_u.",
            "VernacExtend",
            "122a7ed04e9afdd8f0aef81ab691ed4c04d73c43"
        ],
        [
            "elim Der_Ru_u.",
            "VernacExtend",
            "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
        ],
        [
            "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
            "VernacExtend",
            "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
        ],
        [
            "apply Derive1.",
            "VernacExtend",
            "a314a3be2884376f829b2527f1b21e123a904876"
        ],
        [
            "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
            "VernacExtend",
            "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro dans_R1.",
            "VernacExtend",
            "3467c219901f4e44579bd5dbe0e624e5f9768d54"
        ],
        [
            "absurd (inter (union X V2) V1 empty).",
            "VernacExtend",
            "fa85989802afd26eeb108b42a7b4d899928f73e4"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold inter in |- *.",
            "VernacExtend",
            "0cda10a713e20ded51dc208d6b76935d284c91eb"
        ],
        [
            "intros (H1, (H2, H3)).",
            "VernacExtend",
            "fbffe239ce87a668f983eee6c400377bd7bf8d72"
        ],
        [
            "apply dans_empty_imp_P with A.",
            "VernacExtend",
            "9c4b46c9a342786ba5dda394a0e60a9ba541dfb2"
        ],
        [
            "prolog [ inmonoid_cons_inv2 Regles_inv1 ] 3.",
            "VernacExtend",
            "c58372b66e39d8236734dfaa599620f900520d25"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "prolog [ Derive2 inmonoid_cons_inv ] 10.",
            "VernacExtend",
            "b46f15fe5d116115263195efcf4a06367ffff56d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_R2 : forall u v : Word, Regles X V2 R2 -> Derive R2 u v -> inmonoid (union X V2) u -> inmonoid (union X V2) v.",
            "VernacStartTheoremProof",
            "a761768b9331d400333838a2adec2ab238dd3185"
        ],
        [
            "intros u v Regles_R2 Der_R2.",
            "VernacExtend",
            "1bd95f0b87f7bdeaf337cf32518d89ee23c51c56"
        ],
        [
            "elim Der_R2.",
            "VernacExtend",
            "a356f89a79320be29fdb096d030f5c90094666ba"
        ],
        [
            "intros; prolog [ inmonoid_cons_inv Regles_inv2 inmonoid_Append ] 3.",
            "VernacExtend",
            "6d9e208a9fbe2587ae43f0766e5475e412c831f7"
        ],
        [
            "intros; prolog [ inmonoid_cons_inv2 inmonoid_cons_inv inmonoid_cons ] 4.",
            "VernacExtend",
            "35ffe6adbf15621cbfd9f575efd3a710f92067e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_2 : forall u v : Word, isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> inmonoid (union X V2) u -> Derive Ru u v -> inmonoid (union X V2) v.",
            "VernacStartTheoremProof",
            "5568a33944e32a9b5cdc14c5907e54ad6f282e7f"
        ],
        [
            "intros; prolog [ inmon_Der_imp_inmon_R2 sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der2 ] 5.",
            "VernacExtend",
            "1bd55d6c14a93e56094e37aafc2012f23e9499d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_Derivestar2 : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> forall u v : Word, Derivestar Ru u v -> inmonoid (union X V2) u -> Derivestar R2 u v.",
            "VernacStartTheoremProof",
            "d52b150f68791dafa14520155af24a5d2b16b611"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "intros G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
            "VernacExtend",
            "dae2326a82e7ae2e010df327d26994decf5c9655"
        ],
        [
            "pattern u, v in |- *.",
            "VernacExtend",
            "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
        ],
        [
            "apply Derivestar_Ru.",
            "VernacExtend",
            "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R2_v0 inmon_u0.",
            "VernacExtend",
            "a7dcd96b702b4ad18de9592a9830812e54cd3862"
        ],
        [
            "apply Rstar_R with v0.",
            "VernacExtend",
            "eeb7b3c39e07ad9435e888ba61edc8959e8edc03"
        ],
        [
            "prolog [ sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der2 ] 4.",
            "VernacExtend",
            "3b66f70bfffb3d93a55b2f24ac1c86620a403d2e"
        ],
        [
            "prolog [ inmon_Der_imp_inmon_2 ] 3.",
            "VernacExtend",
            "13d0aaa053dbcb850c6140da2d876392d3396751"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_isGram : forall S : Elt, isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> dans S Vu -> isGram X Vu Ru S.",
            "VernacStartTheoremProof",
            "7eca6790ed9c2501e7c5e0fddbea2642dad839be"
        ],
        [
            "prolog [ isGram5 isGram1 inter_X_Vu Gunion_Regles ] 7.",
            "VernacExtend",
            "7cbe4e5ecec506a94714b62a3c081ccbd5711871"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable f : Elt -> Elt.",
            "VernacAssumption",
            "265c0ce78a59c9c68a888f7e1cf3b7e683dd2ed5"
        ],
        [
            "Let wef := Word_ext f.",
            "VernacDefinition",
            "2f1e623743f25f2dcc660f7c37b35191bfa0a31f"
        ],
        [
            "Let fet (w : Elt) := word (wef (word_inv w)).",
            "VernacDefinition",
            "d9330a4b19df71606b2fe980c706ed6bae6b5205"
        ],
        [
            "Let fonc (P : Elt) := couple (f (first P)) (fet (second P)).",
            "VernacDefinition",
            "96de39445ed984c47ec87b0abcc4dd9a37f6607d"
        ],
        [
            "Let Gim := imageGram f X V1 R1 S1.",
            "VernacDefinition",
            "8d6544e848814f239a2132f7a9d2530dfc27df58"
        ],
        [
            "Let Xim := fst Gim.",
            "VernacDefinition",
            "6a0634c16853e804d77e9e6a783048e65206dab5"
        ],
        [
            "Let Gim2 := snd Gim.",
            "VernacDefinition",
            "a69348f4d25755d3900a388eb9e85ad6bcfc0a7f"
        ],
        [
            "Let Vim := fst Gim2.",
            "VernacDefinition",
            "1412fe4193117be8e8b62a57144b5e8d9ddd495c"
        ],
        [
            "Let Gim3 := snd Gim2.",
            "VernacDefinition",
            "a8919c49761921dbae30ba095a38a00fa9c3f2cd"
        ],
        [
            "Let Rim := fst Gim3.",
            "VernacDefinition",
            "60c89d02d06de020f4f1cf4b4bf586deed553ea1"
        ],
        [
            "Let Sim := snd Gim3.",
            "VernacDefinition",
            "561e2d4dd55907a7a869ae8f02d505f2aacac92c"
        ],
        [
            "Lemma dans_Rim : forall (A : Elt) (u : Word), dans (couple A (word u)) R1 -> dans (couple (f A) (word (wef u))) Rim.",
            "VernacStartTheoremProof",
            "7ca6533dd36fff67011623788d6b35b01f9bb3ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "fa433230c029ba620837416a3e72ce3464cf7848"
        ],
        [
            "replace (couple (f A) (word (wef u))) with (fonc (couple A (word u))); auto.",
            "VernacExtend",
            "7842c1d2bd4b53da27b94875d6312c525b47840f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dans_Rim.",
            "VernacHints",
            "d374ab762eb1ba03da8a46060af0645e43c596fe"
        ],
        [
            "Lemma image_Regles : Regles X V1 R1 -> Regles Xim Vim Rim.",
            "VernacStartTheoremProof",
            "4c7e70d6cebf7cb862a770a6f2c8c761b775ce2b"
        ],
        [
            "unfold Rim, Vim, Xim, Gim3, Gim2, Gim, imageGram, Regles in |- *; simpl in |- *.",
            "VernacExtend",
            "ba272ede13343433ed4fba06b104abd0da2ffcab"
        ],
        [
            "intros R_R1 x dans_x.",
            "VernacExtend",
            "c24f28d0a18a61caebcb16cf138c7156f1225ca4"
        ],
        [
            "cut (exists x_ant : Elt, dans x_ant R1 /\\ x = fonc x_ant :>Elt).",
            "VernacExtend",
            "472c137e265539aa58c70b7a2cb2bfa3360071f8"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros x_ant temp; elim temp; clear temp; intros x_ant_in_R1 x_egal.",
            "VernacExtend",
            "03f358309fee89140b4b38fc5ee0a585e4ead216"
        ],
        [
            "elim (R_R1 x_ant x_ant_in_R1).",
            "VernacExtend",
            "7c430c77efa960fd4111986e654b575a4f05440f"
        ],
        [
            "intros A_ant dans_A_ant_V1 temp; elim temp; clear temp.",
            "VernacExtend",
            "e3f80a8dd4e35ba4be94234e82238fdbce3096bd"
        ],
        [
            "intros B_ant x_ant_egal inmonoid_x_ant.",
            "VernacExtend",
            "83e25fee3f694ba67ee97bb68687e38f59ee6148"
        ],
        [
            "exists (f A_ant).",
            "VernacExtend",
            "2647bf2ee7ee34ca4052b9fbe80c4475890abf64"
        ],
        [
            "apply dans_map_inv; assumption.",
            "VernacExtend",
            "555283e9058a82b84f7fd7142962a14865cbcf1b"
        ],
        [
            "exists (Word_ext f B_ant).",
            "VernacExtend",
            "f19df36115c38c514b121ed113010000298e1a5a"
        ],
        [
            "rewrite x_egal; unfold fonc in |- *; unfold fet in |- *.",
            "VernacExtend",
            "35366abdce1152b5ff704c2974e703a1b7b23240"
        ],
        [
            "rewrite x_ant_egal; unfold first in |- *; unfold second in |- *; unfold word_inv in |- *; simpl in |- *.",
            "VernacExtend",
            "484844c0fc88467044891b7138cfc9ffaaa97dda"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "replace (union (map f X) (map f V1)) with (map f (union X V1)); auto.",
            "VernacExtend",
            "928e18ea124f879bca8922b25a66c6f2eab1f8b9"
        ],
        [
            "apply dans_map; assumption.",
            "VernacExtend",
            "bfa97e05a53fca03042fd601fdaae38a01520727"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_isGram : isGram X V1 R1 S1 -> Mots Xim -> inter Xim Vim empty -> isGram Xim Vim Rim Sim.",
            "VernacStartTheoremProof",
            "cc174cd66fba87df605b173a5b858984e1229432"
        ],
        [
            "unfold Sim, Rim, Gim3, Vim, Gim2, Xim, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "e5f3e89b7c3add3dcd457cbf25c07118b47b2036"
        ],
        [
            "prolog [ isGram4 image_Regles isGram3 dans_map_inv isGram5 ] 7.",
            "VernacExtend",
            "340af3bd3d7cf4363da16365a046f6dd0447351f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Id_image_X : Id (union X V1) f -> Xim = X :>Ensf.",
            "VernacStartTheoremProof",
            "a20b4134add110bf8293d5e84daed7e8a6d1f786"
        ],
        [
            "unfold Xim, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "9fda3994587688a5c5ecddc2e620a334738018dd"
        ],
        [
            "elim X.",
            "VernacExtend",
            "9f4e7f48cf915170f633c78e97f27532c28fb31a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros a X' Hyp Id_a_X_V1_f.",
            "VernacExtend",
            "1ec8e35dc3a5049152448f0bf4e35f8f8e7d6483"
        ],
        [
            "unfold map in |- *.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply add_add.",
            "VernacExtend",
            "3d9ca9b6112112511de32341ac864e3e4b1c5bda"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Hyp.",
            "VernacExtend",
            "de6001680dad5327ceb4bc78c14e76d2f7e511ca"
        ],
        [
            "apply Id_inclus with (union (add a X') V1).",
            "VernacExtend",
            "98de349378e4bcee76bcea85c39b6b0040831b4c"
        ],
        [
            "red in |- *; intros x dans_x_union_X_V1.",
            "VernacExtend",
            "3a800ee7cecd6741d65e9588eb9c6a5b095a19f2"
        ],
        [
            "cut (dans x X' \\/ dans x V1).",
            "VernacExtend",
            "e0329e8674dc9f49cf3f74b8431149d30a8015a1"
        ],
        [
            "intros [HX| HV1]; auto.",
            "VernacExtend",
            "e1c9a1a9be3fed1ca8fd07a715bb61af48642b1a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Id_image_V : Id (union X V1) f -> Vim = V1 :>Ensf.",
            "VernacStartTheoremProof",
            "f9f109318c2777452316ffd4a30dbe19672e8dca"
        ],
        [
            "unfold Vim, Gim2, Gim, imageGram; simpl in |- *.",
            "VernacExtend",
            "ad5a25bb4d219ccd3a48522c44ba6f68bcd86c74"
        ],
        [
            "generalize V1; clearbody C Gim; clear V1.",
            "VernacExtend",
            "5790c47bef059c410eb44acec3265d575937c410"
        ],
        [
            "simple induction V1; auto.",
            "VernacExtend",
            "cb4c82aa23caa1cdbc5fcf555cba6dba2abe0495"
        ],
        [
            "intros a V1' Hyp Id_X_a_V1_f.",
            "VernacExtend",
            "2dbb92219c6ee6b6398974cea0538c95a5d9019f"
        ],
        [
            "unfold map in |- *.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply add_add.",
            "VernacExtend",
            "3d9ca9b6112112511de32341ac864e3e4b1c5bda"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Hyp.",
            "VernacExtend",
            "de6001680dad5327ceb4bc78c14e76d2f7e511ca"
        ],
        [
            "apply Id_inclus with (union X (add a V1')).",
            "VernacExtend",
            "5ab72f191d270aa917f0bdb174a43fae2b627708"
        ],
        [
            "red in |- *; intros x dans_x_union_X_V1.",
            "VernacExtend",
            "3a800ee7cecd6741d65e9588eb9c6a5b095a19f2"
        ],
        [
            "cut (dans x X \\/ dans x V1').",
            "VernacExtend",
            "79cee785fa15556674121b19093ac43f72180550"
        ],
        [
            "intros [HX| HV1]; auto.",
            "VernacExtend",
            "e1c9a1a9be3fed1ca8fd07a715bb61af48642b1a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Id_image_R : Id (union X V1) f -> isGram X V1 R1 S1 -> Rim = R1 :>Ensf.",
            "VernacStartTheoremProof",
            "9b0205f73ef392f58608b1d84b8a2723cb301577"
        ],
        [
            "intros Id_X_V1_f.",
            "VernacExtend",
            "120b26877c0351321e5a41d8629d8ac07ad327f2"
        ],
        [
            "unfold Rim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "fa433230c029ba620837416a3e72ce3464cf7848"
        ],
        [
            "elim R1.",
            "VernacExtend",
            "3c07d79ec60e1c116ce517c5a1ac72db40b2cb62"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros a R Hyp isGram_X_V1_R1_S1.",
            "VernacExtend",
            "ac841df27379ce3ac83109572cce0e7bd635a198"
        ],
        [
            "unfold map in |- *.",
            "VernacExtend",
            "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply add_add.",
            "VernacExtend",
            "3d9ca9b6112112511de32341ac864e3e4b1c5bda"
        ],
        [
            "cut (Regles X V1 (add a R)).",
            "VernacExtend",
            "2db9060dea9018d89a71d5316ec4c4af45602ae4"
        ],
        [
            "unfold Regles in |- *.",
            "VernacExtend",
            "6a2f5f883b317a2548318b43e1f61900e4e85817"
        ],
        [
            "intro R_a_R.",
            "VernacExtend",
            "458a531182ac5bd82bbcbcb34b6ee566fa07c891"
        ],
        [
            "elim (R_a_R a).",
            "VernacExtend",
            "be1ad2a7c26f452d738d6b97919b68c2e0821e62"
        ],
        [
            "intros x dans_x_V1 temp; elim temp; clear temp.",
            "VernacExtend",
            "032a886db294c6e40badb7b12e9f139a98489c64"
        ],
        [
            "intros B egal_a inmonoid_B.",
            "VernacExtend",
            "37a725e6d9b334d24cad9730e3f1e6461db9b457"
        ],
        [
            "rewrite egal_a.",
            "VernacExtend",
            "6656137fda7f13408497f4a65b17e5bddbd3fef7"
        ],
        [
            "apply couple_couple; unfold first, second, word_inv in |- *; simpl in |- *.",
            "VernacExtend",
            "86fd054b3ddf044a7d1a1c9e4d18fe6773024395"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply word_word.",
            "VernacExtend",
            "4be0ca306f3186ecd9b9bf00040316f4f141c0d7"
        ],
        [
            "cut (Id_words (union X V1) (Word_ext f)); auto.",
            "VernacExtend",
            "ee8c8dfd788d87977caff1320ab8a611a685f3cb"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply isGram4 with S1; trivial.",
            "VernacExtend",
            "2e463f9f03214217e5e27fe092a127c6795f70a8"
        ],
        [
            "prolog [ isGram_inclus3 ] 3.",
            "VernacExtend",
            "6c30c104e259c6d0a17b7c30768c1deaf158d8e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Id_image_S : Id (union X V1) f -> isGram X V1 R1 S1 -> Sim = S1 :>Elt.",
            "VernacStartTheoremProof",
            "cf627e9f6ac1bd8e50c2cc49bd3de033766d0988"
        ],
        [
            "unfold Sim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "7fba2c96f5c2f99795a5f9e8799be29d92ce8ee6"
        ],
        [
            "prolog [ isGram3 union_d ] 6.",
            "VernacExtend",
            "89aa7a659ff1347dc86268224ca28602102944ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gim_egal : Gim = (Xim, (Vim, (Rim, Sim))).",
            "VernacStartTheoremProof",
            "3eb03ddee74ffc3eaf6d908afb5c4efe04130bf1"
        ],
        [
            "unfold Sim, Rim, Gim3, Vim, Gim2, Xim in |- *.",
            "VernacExtend",
            "92bfceb547428f0b97b7873e0d40f202284b8250"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Id_image_G : Id (union X V1) f -> isGram X V1 R1 S1 -> Gim = (X, (V1, (R1, S1))).",
            "VernacStartTheoremProof",
            "a133c6a0876cc7f0645aace5d9c07ca3c5e9713c"
        ],
        [
            "intros Id_u_X_V1_f isG_X_V1_R1_S1.",
            "VernacExtend",
            "d4be973652c29fd7fd1d8874eeffa40043d8ac4e"
        ],
        [
            "rewrite Gim_egal.",
            "VernacExtend",
            "ab2ea9f549be17c27a32a5d91a33d7a28f153a58"
        ],
        [
            "rewrite (Id_image_S Id_u_X_V1_f isG_X_V1_R1_S1).",
            "VernacExtend",
            "1671ac18222f8da1e4b2d761f7f2b2a9c0c9558c"
        ],
        [
            "rewrite (Id_image_R Id_u_X_V1_f isG_X_V1_R1_S1).",
            "VernacExtend",
            "f5b4dd58a747a3fb0e2f232993b9878e5cb65abb"
        ],
        [
            "rewrite (Id_image_V Id_u_X_V1_f).",
            "VernacExtend",
            "30f7833faecf1118fcc14c08967fc5a3d4fcb11c"
        ],
        [
            "rewrite (Id_image_X Id_u_X_V1_f).",
            "VernacExtend",
            "f75b4488a643b95cca41c6b493c2592bb9bd976a"
        ],
        [
            "apply refl_equal.",
            "VernacExtend",
            "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_image : forall u v : Word, Derive R1 u v -> Derive Rim (wef u) (wef v).",
            "VernacStartTheoremProof",
            "f1fffed64cc39e113c6eed54d6c2b7f80c473151"
        ],
        [
            "intros u v H.",
            "VernacExtend",
            "52f0f14b31f2a55e4a70ff287fcea8fddb0ec657"
        ],
        [
            "elim H; clear H u v.",
            "VernacExtend",
            "965ae940c3444e824ba91cc365a327a8d66f5e4d"
        ],
        [
            "intros u v A dans_A.",
            "VernacExtend",
            "a08030e6956666ef5df0449de24a4cf0f4a2f9f1"
        ],
        [
            "replace (wef (cons A v)) with (cons (f A) (wef v)).",
            "VernacExtend",
            "1d0f6ef249d1643deff6366f406775339987dbc1"
        ],
        [
            "replace (wef (Append u v)) with (Append (wef u) (wef v)).",
            "VernacExtend",
            "c4db7aa677643234c322018a90b9f5a18df16e76"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply sym_equal; unfold wef in |- *; apply wef_append; auto.",
            "VernacExtend",
            "49c2a8e4b2071a79ab79a50cdfee8a691afb7418"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (wef (cons x u)) with (cons (f x) (wef u)).",
            "VernacExtend",
            "2e174d839751a1505ee050ffa164fc2cc3aeba33"
        ],
        [
            "replace (wef (cons x v)) with (cons (f x) (wef v)); auto.",
            "VernacExtend",
            "81f45c910c28b5073de7abd42ebb74e044f39231"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Derive_image.",
            "VernacHints",
            "33d5a176debdb7468427505f148fbda2cce5eec4"
        ],
        [
            "Lemma Derivestar_image : forall u v : Word, Derivestar R1 u v -> Derivestar Rim (wef u) (wef v).",
            "VernacStartTheoremProof",
            "a1a5547962f63e2a46bd5c1a4de56a429556f894"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "intros u v Hyp.",
            "VernacExtend",
            "e8dd42613ee138300eb0abd5e5ee0eb0a5d3a8d5"
        ],
        [
            "unfold Derivestar, Rstar in Hyp.",
            "VernacExtend",
            "d867466bc82dc1bf6b97612a9a9e9dde15b886ad"
        ],
        [
            "pattern u, v in |- *.",
            "VernacExtend",
            "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
        ],
        [
            "apply Hyp.",
            "VernacExtend",
            "de6001680dad5327ceb4bc78c14e76d2f7e511ca"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros a b c DeriveR1 Rst.",
            "VernacExtend",
            "a8f01bd46d76f3f23318b6926b57c1f0ecd849b4"
        ],
        [
            "apply Rstar_R with (y := wef b); auto.",
            "VernacExtend",
            "1b430f09cb0ef28180e7e5de02faf01e35edf727"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Derivestar_image.",
            "VernacHints",
            "0713ee650b973bcece0f8fbb5e3f513494175896"
        ],
        [
            "Lemma Reconnait_imageGram : forall w : Word, LG X V1 R1 S1 w -> LG Xim Vim Rim Sim (wef w).",
            "VernacStartTheoremProof",
            "1e6523a87c9dee4889283bfd30734a28c72fc084"
        ],
        [
            "intro w.",
            "VernacExtend",
            "dfee15f93db1f552e6b7328c90ebe9aa89c457ff"
        ],
        [
            "unfold LG in |- *.",
            "VernacExtend",
            "343b9338ef9ed31b98c91f9133563b9abde9420d"
        ],
        [
            "intro temp; split; elim temp; clear temp; intros Der inmo.",
            "VernacExtend",
            "264bff8fc6917762973083a8a1fc4cabb7f291e8"
        ],
        [
            "unfold Sim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "7fba2c96f5c2f99795a5f9e8799be29d92ce8ee6"
        ],
        [
            "replace (cons (f S1) nil) with (wef (cons S1 nil)); auto.",
            "VernacExtend",
            "71aba1f628d2d34681b1dd4c587688f50efde04d"
        ],
        [
            "elim inmo.",
            "VernacExtend",
            "a2b75adf21e5b6b8e7741557281db3e1846a675e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros wo el.",
            "VernacExtend",
            "e77c7fe998d5dfb4303e4ba75569d638e0681823"
        ],
        [
            "unfold Xim, Gim, imageGram in |- *; simpl in |- *.",
            "VernacExtend",
            "9fda3994587688a5c5ecddc2e620a334738018dd"
        ],
        [
            "replace (wef (cons el wo)) with (cons (f el) (wef wo)); auto.",
            "VernacExtend",
            "aba94b4f48ba34b6d8553053f9bc144cea0dc5c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End resultats.",
            "VernacEndSegment",
            "3dad255a2a3466ddd84e71df64904f0d2e15fcf2"
        ],
        [
            "Hint Resolve dans_Rim.",
            "VernacHints",
            "d374ab762eb1ba03da8a46060af0645e43c596fe"
        ],
        [
            "Hint Resolve Derive_image.",
            "VernacHints",
            "33d5a176debdb7468427505f148fbda2cce5eec4"
        ],
        [
            "Hint Resolve Derivestar_image.",
            "VernacHints",
            "0713ee650b973bcece0f8fbb5e3f513494175896"
        ],
        [
            "Hint Resolve Reconnait_imageGram.",
            "VernacHints",
            "075d4ca268c99ec59f925f95427a7b5346e39bfa"
        ]
    ],
    "proofs": [
        {
            "name": "inter_X_Vu",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intro G1.",
                        "VernacExtend",
                        "b1670fed783b500e8f6f6f9d1f4b2900562d1b2a"
                    ]
                },
                {
                    "command": [
                        "intro G2.",
                        "VernacExtend",
                        "435124fbfb9792301209594d3283c53c69b55fe6"
                    ]
                },
                {
                    "command": [
                        "unfold Vu in |- *.",
                        "VernacExtend",
                        "a0b6b43c6895739e66dddf503856b5e9afb6b63d"
                    ]
                },
                {
                    "command": [
                        "unfold C in |- *.",
                        "VernacExtend",
                        "cb35f243768bdbad0fe05a3ae5cac30a865b5759"
                    ]
                },
                {
                    "command": [
                        "unfold Gunion in |- *.",
                        "VernacExtend",
                        "097bd60b6e2b710426414356681619cd28792e3a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply union_inter.",
                        "VernacExtend",
                        "d3e2f23631a635f7399b9affdce6a08d07506669"
                    ]
                },
                {
                    "command": [
                        "apply isGram2 with R1 S1; assumption.",
                        "VernacExtend",
                        "0df12f0d1f68c7156ff78decf0168546a6069fb8"
                    ]
                },
                {
                    "command": [
                        "apply isGram2 with R2 S2; assumption.",
                        "VernacExtend",
                        "0577a9c81b46addd5c4fa73cfbbac2a0cea58a9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_Regles",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Ru in |- *; unfold C in |- *; unfold Gunion in |- *; simpl in |- *.",
                        "VernacExtend",
                        "a6de75a95939b8d1318b67e217813c248061c4e2"
                    ]
                },
                {
                    "command": [
                        "apply Regles_union; unfold Vu in |- *; unfold C in |- *; unfold Gunion in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2f14ff5a1960b7d5fef74416ba1bb4918a57b2c2"
                    ]
                },
                {
                    "command": [
                        "apply Regles_V with V1; [ auto | apply isGram4 with S1; auto ].",
                        "VernacExtend",
                        "1d7eb23b2de279c145b8a0ba13faeab2686f978b"
                    ]
                },
                {
                    "command": [
                        "apply Regles_V with V2; [ auto | apply isGram4 with S2; auto ].",
                        "VernacExtend",
                        "ca62057b784a91611afebea7123d4918144de46f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_Der",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros Re_1 Re_2 inter_X_V1_V2_empty u v Der_Ru_u.",
                        "VernacExtend",
                        "974a24dc033b9d5aa81fdf214eb0caac83cb9ba1"
                    ]
                },
                {
                    "command": [
                        "elim Der_Ru_u.",
                        "VernacExtend",
                        "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
                        "VernacExtend",
                        "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
                    ]
                },
                {
                    "command": [
                        "apply Derive1.",
                        "VernacExtend",
                        "a314a3be2884376f829b2527f1b21e123a904876"
                    ]
                },
                {
                    "command": [
                        "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
                        "VernacExtend",
                        "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intro dans_R2.",
                        "VernacExtend",
                        "f74bc22d45f071ae7e5220095cdf7f3122f6be4b"
                    ]
                },
                {
                    "command": [
                        "absurd (inter (union X V1) V2 empty).",
                        "VernacExtend",
                        "e0b89849b926aa42abf85530941fb3ba029c2a5c"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold inter in |- *.",
                        "VernacExtend",
                        "0cda10a713e20ded51dc208d6b76935d284c91eb"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros incl_empty_X_V1 temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3945229d5f45940c2058dc64cbc31e242aaa9bbf"
                    ]
                },
                {
                    "command": [
                        "intros incl_empty_V2 imp.",
                        "VernacExtend",
                        "e7a0ee2e305fbeb8192aaeb145980236f05c05f7"
                    ]
                },
                {
                    "command": [
                        "apply dans_empty_imp_P with A.",
                        "VernacExtend",
                        "9c4b46c9a342786ba5dda394a0e60a9ba541dfb2"
                    ]
                },
                {
                    "command": [
                        "apply imp.",
                        "VernacExtend",
                        "56297aabf8c6a9cceeab9d526c06fd7b26ef4b32"
                    ]
                },
                {
                    "command": [
                        "apply inmonoid_cons_inv2 with v0; assumption.",
                        "VernacExtend",
                        "70b8f86851eb836c9cb7ea99f153189c7aa04a1c"
                    ]
                },
                {
                    "command": [
                        "apply Regles_inv1 with X R2 (word u0); assumption.",
                        "VernacExtend",
                        "c57f08d36b42080260969161b1bd937e2f022615"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply dans_union; assumption.",
                        "VernacExtend",
                        "4f33cbaa2c19da0422f5353729c28a0331c60a06"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 x Der_Ru imp inmon_cons_x_u0.",
                        "VernacExtend",
                        "36f8cbb16947e562e817126b0907f40456d5d84b"
                    ]
                },
                {
                    "command": [
                        "apply Derive2.",
                        "VernacExtend",
                        "5976c2958a6e141bbf470ca9dc6486fadef5e3eb"
                    ]
                },
                {
                    "command": [
                        "apply imp.",
                        "VernacExtend",
                        "56297aabf8c6a9cceeab9d526c06fd7b26ef4b32"
                    ]
                },
                {
                    "command": [
                        "apply inmonoid_cons_inv with x.",
                        "VernacExtend",
                        "06adbc71867d32f128a182d88064400b2a4fca41"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_R1",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply in_mon_X_Der_imp_inmon_X with R1 u; assumption.",
                        "VernacExtend",
                        "20d970603b5b08ae879c5d20a971b4474d54be5f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros u v G_R1 G_R2 inter_V1_V2_empty inmon_X_V1_u Der_Ru_u_v.",
                        "VernacExtend",
                        "0e262cf2d81eee0e7401740a1f16e7f9c07098c1"
                    ]
                },
                {
                    "command": [
                        "apply inmon_Der_imp_inmon_R1 with u.",
                        "VernacExtend",
                        "ad34d4e7b07c0c0d14343b50531f32104edf605c"
                    ]
                },
                {
                    "command": [
                        "apply isGram4 with S1; assumption.",
                        "VernacExtend",
                        "0ad940b3e61977c6fad76eb00c7c305fc564ebc3"
                    ]
                },
                {
                    "command": [
                        "apply inmon_Der_imp_Der.",
                        "VernacExtend",
                        "7fab38aad06b32e2c8a476c97aa2ce997e4e0f7d"
                    ]
                },
                {
                    "command": [
                        "apply isGram4 with S1; assumption.",
                        "VernacExtend",
                        "0ad940b3e61977c6fad76eb00c7c305fc564ebc3"
                    ]
                },
                {
                    "command": [
                        "apply isGram4 with S2; assumption.",
                        "VernacExtend",
                        "719fc60b900dcadddacd64c43cf3b4c21d040f50"
                    ]
                },
                {
                    "command": [
                        "apply inter_union.",
                        "VernacExtend",
                        "ae2a40a333ff452c9e2d13696ac5ea96bdc3a6ff"
                    ]
                },
                {
                    "command": [
                        "apply isGram2 with R2 S2; assumption.",
                        "VernacExtend",
                        "0577a9c81b46addd5c4fa73cfbbac2a0cea58a9e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_Derivestar",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "intros G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
                        "VernacExtend",
                        "dae2326a82e7ae2e010df327d26994decf5c9655"
                    ]
                },
                {
                    "command": [
                        "pattern u, v in |- *.",
                        "VernacExtend",
                        "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_Ru.",
                        "VernacExtend",
                        "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R1_v0 inmon_u0.",
                        "VernacExtend",
                        "67bb24b1ec9f9f5794a47ebdfc02cc7703b3cf3e"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_R with v0.",
                        "VernacExtend",
                        "eeb7b3c39e07ad9435e888ba61edc8959e8edc03"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmon_Der_imp_Der isGram4 inter_union isGram2 ] 5.",
                        "VernacExtend",
                        "fc7063153c5a45295a1a5b25a0bdd1c481d8e111"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmon_Der_imp_inmon ] 3.",
                        "VernacExtend",
                        "dc7046004c87a235a15e47d0cf7d2eae6cdcc953"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_Der2",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros Re_1 Re_2 inter_X_V2_V1_empty u v Der_Ru_u.",
                        "VernacExtend",
                        "122a7ed04e9afdd8f0aef81ab691ed4c04d73c43"
                    ]
                },
                {
                    "command": [
                        "elim Der_Ru_u.",
                        "VernacExtend",
                        "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
                        "VernacExtend",
                        "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
                    ]
                },
                {
                    "command": [
                        "apply Derive1.",
                        "VernacExtend",
                        "a314a3be2884376f829b2527f1b21e123a904876"
                    ]
                },
                {
                    "command": [
                        "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
                        "VernacExtend",
                        "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro dans_R1.",
                        "VernacExtend",
                        "3467c219901f4e44579bd5dbe0e624e5f9768d54"
                    ]
                },
                {
                    "command": [
                        "absurd (inter (union X V2) V1 empty).",
                        "VernacExtend",
                        "fa85989802afd26eeb108b42a7b4d899928f73e4"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold inter in |- *.",
                        "VernacExtend",
                        "0cda10a713e20ded51dc208d6b76935d284c91eb"
                    ]
                },
                {
                    "command": [
                        "intros (H1, (H2, H3)).",
                        "VernacExtend",
                        "fbffe239ce87a668f983eee6c400377bd7bf8d72"
                    ]
                },
                {
                    "command": [
                        "apply dans_empty_imp_P with A.",
                        "VernacExtend",
                        "9c4b46c9a342786ba5dda394a0e60a9ba541dfb2"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv2 Regles_inv1 ] 3.",
                        "VernacExtend",
                        "c58372b66e39d8236734dfaa599620f900520d25"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "prolog [ Derive2 inmonoid_cons_inv ] 10.",
                        "VernacExtend",
                        "b46f15fe5d116115263195efcf4a06367ffff56d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_R2",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros u v Regles_R2 Der_R2.",
                        "VernacExtend",
                        "1bd95f0b87f7bdeaf337cf32518d89ee23c51c56"
                    ]
                },
                {
                    "command": [
                        "elim Der_R2.",
                        "VernacExtend",
                        "a356f89a79320be29fdb096d030f5c90094666ba"
                    ]
                },
                {
                    "command": [
                        "intros; prolog [ inmonoid_cons_inv Regles_inv2 inmonoid_Append ] 3.",
                        "VernacExtend",
                        "6d9e208a9fbe2587ae43f0766e5475e412c831f7"
                    ]
                },
                {
                    "command": [
                        "intros; prolog [ inmonoid_cons_inv2 inmonoid_cons_inv inmonoid_cons ] 4.",
                        "VernacExtend",
                        "35ffe6adbf15621cbfd9f575efd3a710f92067e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_2",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros; prolog [ inmon_Der_imp_inmon_R2 sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der2 ] 5.",
                        "VernacExtend",
                        "1bd55d6c14a93e56094e37aafc2012f23e9499d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_Derivestar2",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "intros G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
                        "VernacExtend",
                        "dae2326a82e7ae2e010df327d26994decf5c9655"
                    ]
                },
                {
                    "command": [
                        "pattern u, v in |- *.",
                        "VernacExtend",
                        "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_Ru.",
                        "VernacExtend",
                        "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R2_v0 inmon_u0.",
                        "VernacExtend",
                        "a7dcd96b702b4ad18de9592a9830812e54cd3862"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_R with v0.",
                        "VernacExtend",
                        "eeb7b3c39e07ad9435e888ba61edc8959e8edc03"
                    ]
                },
                {
                    "command": [
                        "prolog [ sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der2 ] 4.",
                        "VernacExtend",
                        "3b66f70bfffb3d93a55b2f24ac1c86620a403d2e"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmon_Der_imp_inmon_2 ] 3.",
                        "VernacExtend",
                        "13d0aaa053dbcb850c6140da2d876392d3396751"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_isGram",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "prolog [ isGram5 isGram1 inter_X_Vu Gunion_Regles ] 7.",
                        "VernacExtend",
                        "7cbe4e5ecec506a94714b62a3c081ccbd5711871"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dans_Rim",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Rim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "fa433230c029ba620837416a3e72ce3464cf7848"
                    ]
                },
                {
                    "command": [
                        "replace (couple (f A) (word (wef u))) with (fonc (couple A (word u))); auto.",
                        "VernacExtend",
                        "7842c1d2bd4b53da27b94875d6312c525b47840f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_Regles",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "unfold Rim, Vim, Xim, Gim3, Gim2, Gim, imageGram, Regles in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ba272ede13343433ed4fba06b104abd0da2ffcab"
                    ]
                },
                {
                    "command": [
                        "intros R_R1 x dans_x.",
                        "VernacExtend",
                        "c24f28d0a18a61caebcb16cf138c7156f1225ca4"
                    ]
                },
                {
                    "command": [
                        "cut (exists x_ant : Elt, dans x_ant R1 /\\ x = fonc x_ant :>Elt).",
                        "VernacExtend",
                        "472c137e265539aa58c70b7a2cb2bfa3360071f8"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros x_ant temp; elim temp; clear temp; intros x_ant_in_R1 x_egal.",
                        "VernacExtend",
                        "03f358309fee89140b4b38fc5ee0a585e4ead216"
                    ]
                },
                {
                    "command": [
                        "elim (R_R1 x_ant x_ant_in_R1).",
                        "VernacExtend",
                        "7c430c77efa960fd4111986e654b575a4f05440f"
                    ]
                },
                {
                    "command": [
                        "intros A_ant dans_A_ant_V1 temp; elim temp; clear temp.",
                        "VernacExtend",
                        "e3f80a8dd4e35ba4be94234e82238fdbce3096bd"
                    ]
                },
                {
                    "command": [
                        "intros B_ant x_ant_egal inmonoid_x_ant.",
                        "VernacExtend",
                        "83e25fee3f694ba67ee97bb68687e38f59ee6148"
                    ]
                },
                {
                    "command": [
                        "exists (f A_ant).",
                        "VernacExtend",
                        "2647bf2ee7ee34ca4052b9fbe80c4475890abf64"
                    ]
                },
                {
                    "command": [
                        "apply dans_map_inv; assumption.",
                        "VernacExtend",
                        "555283e9058a82b84f7fd7142962a14865cbcf1b"
                    ]
                },
                {
                    "command": [
                        "exists (Word_ext f B_ant).",
                        "VernacExtend",
                        "f19df36115c38c514b121ed113010000298e1a5a"
                    ]
                },
                {
                    "command": [
                        "rewrite x_egal; unfold fonc in |- *; unfold fet in |- *.",
                        "VernacExtend",
                        "35366abdce1152b5ff704c2974e703a1b7b23240"
                    ]
                },
                {
                    "command": [
                        "rewrite x_ant_egal; unfold first in |- *; unfold second in |- *; unfold word_inv in |- *; simpl in |- *.",
                        "VernacExtend",
                        "484844c0fc88467044891b7138cfc9ffaaa97dda"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "replace (union (map f X) (map f V1)) with (map f (union X V1)); auto.",
                        "VernacExtend",
                        "928e18ea124f879bca8922b25a66c6f2eab1f8b9"
                    ]
                },
                {
                    "command": [
                        "apply dans_map; assumption.",
                        "VernacExtend",
                        "bfa97e05a53fca03042fd601fdaae38a01520727"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_isGram",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "unfold Sim, Rim, Gim3, Vim, Gim2, Xim, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "e5f3e89b7c3add3dcd457cbf25c07118b47b2036"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram4 image_Regles isGram3 dans_map_inv isGram5 ] 7.",
                        "VernacExtend",
                        "340af3bd3d7cf4363da16365a046f6dd0447351f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Id_image_X",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "unfold Xim, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "9fda3994587688a5c5ecddc2e620a334738018dd"
                    ]
                },
                {
                    "command": [
                        "elim X.",
                        "VernacExtend",
                        "9f4e7f48cf915170f633c78e97f27532c28fb31a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros a X' Hyp Id_a_X_V1_f.",
                        "VernacExtend",
                        "1ec8e35dc3a5049152448f0bf4e35f8f8e7d6483"
                    ]
                },
                {
                    "command": [
                        "unfold map in |- *.",
                        "VernacExtend",
                        "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply add_add.",
                        "VernacExtend",
                        "3d9ca9b6112112511de32341ac864e3e4b1c5bda"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Hyp.",
                        "VernacExtend",
                        "de6001680dad5327ceb4bc78c14e76d2f7e511ca"
                    ]
                },
                {
                    "command": [
                        "apply Id_inclus with (union (add a X') V1).",
                        "VernacExtend",
                        "98de349378e4bcee76bcea85c39b6b0040831b4c"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros x dans_x_union_X_V1.",
                        "VernacExtend",
                        "3a800ee7cecd6741d65e9588eb9c6a5b095a19f2"
                    ]
                },
                {
                    "command": [
                        "cut (dans x X' \\/ dans x V1).",
                        "VernacExtend",
                        "e0329e8674dc9f49cf3f74b8431149d30a8015a1"
                    ]
                },
                {
                    "command": [
                        "intros [HX| HV1]; auto.",
                        "VernacExtend",
                        "e1c9a1a9be3fed1ca8fd07a715bb61af48642b1a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Id_image_V",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "unfold Vim, Gim2, Gim, imageGram; simpl in |- *.",
                        "VernacExtend",
                        "ad5a25bb4d219ccd3a48522c44ba6f68bcd86c74"
                    ]
                },
                {
                    "command": [
                        "generalize V1; clearbody C Gim; clear V1.",
                        "VernacExtend",
                        "5790c47bef059c410eb44acec3265d575937c410"
                    ]
                },
                {
                    "command": [
                        "simple induction V1; auto.",
                        "VernacExtend",
                        "cb4c82aa23caa1cdbc5fcf555cba6dba2abe0495"
                    ]
                },
                {
                    "command": [
                        "intros a V1' Hyp Id_X_a_V1_f.",
                        "VernacExtend",
                        "2dbb92219c6ee6b6398974cea0538c95a5d9019f"
                    ]
                },
                {
                    "command": [
                        "unfold map in |- *.",
                        "VernacExtend",
                        "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply add_add.",
                        "VernacExtend",
                        "3d9ca9b6112112511de32341ac864e3e4b1c5bda"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Hyp.",
                        "VernacExtend",
                        "de6001680dad5327ceb4bc78c14e76d2f7e511ca"
                    ]
                },
                {
                    "command": [
                        "apply Id_inclus with (union X (add a V1')).",
                        "VernacExtend",
                        "5ab72f191d270aa917f0bdb174a43fae2b627708"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros x dans_x_union_X_V1.",
                        "VernacExtend",
                        "3a800ee7cecd6741d65e9588eb9c6a5b095a19f2"
                    ]
                },
                {
                    "command": [
                        "cut (dans x X \\/ dans x V1').",
                        "VernacExtend",
                        "79cee785fa15556674121b19093ac43f72180550"
                    ]
                },
                {
                    "command": [
                        "intros [HX| HV1]; auto.",
                        "VernacExtend",
                        "e1c9a1a9be3fed1ca8fd07a715bb61af48642b1a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Id_image_R",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "intros Id_X_V1_f.",
                        "VernacExtend",
                        "120b26877c0351321e5a41d8629d8ac07ad327f2"
                    ]
                },
                {
                    "command": [
                        "unfold Rim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "fa433230c029ba620837416a3e72ce3464cf7848"
                    ]
                },
                {
                    "command": [
                        "elim R1.",
                        "VernacExtend",
                        "3c07d79ec60e1c116ce517c5a1ac72db40b2cb62"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros a R Hyp isGram_X_V1_R1_S1.",
                        "VernacExtend",
                        "ac841df27379ce3ac83109572cce0e7bd635a198"
                    ]
                },
                {
                    "command": [
                        "unfold map in |- *.",
                        "VernacExtend",
                        "d6f3bc771467f8d4970eb68d25db08fab4a0a015"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply add_add.",
                        "VernacExtend",
                        "3d9ca9b6112112511de32341ac864e3e4b1c5bda"
                    ]
                },
                {
                    "command": [
                        "cut (Regles X V1 (add a R)).",
                        "VernacExtend",
                        "2db9060dea9018d89a71d5316ec4c4af45602ae4"
                    ]
                },
                {
                    "command": [
                        "unfold Regles in |- *.",
                        "VernacExtend",
                        "6a2f5f883b317a2548318b43e1f61900e4e85817"
                    ]
                },
                {
                    "command": [
                        "intro R_a_R.",
                        "VernacExtend",
                        "458a531182ac5bd82bbcbcb34b6ee566fa07c891"
                    ]
                },
                {
                    "command": [
                        "elim (R_a_R a).",
                        "VernacExtend",
                        "be1ad2a7c26f452d738d6b97919b68c2e0821e62"
                    ]
                },
                {
                    "command": [
                        "intros x dans_x_V1 temp; elim temp; clear temp.",
                        "VernacExtend",
                        "032a886db294c6e40badb7b12e9f139a98489c64"
                    ]
                },
                {
                    "command": [
                        "intros B egal_a inmonoid_B.",
                        "VernacExtend",
                        "37a725e6d9b334d24cad9730e3f1e6461db9b457"
                    ]
                },
                {
                    "command": [
                        "rewrite egal_a.",
                        "VernacExtend",
                        "6656137fda7f13408497f4a65b17e5bddbd3fef7"
                    ]
                },
                {
                    "command": [
                        "apply couple_couple; unfold first, second, word_inv in |- *; simpl in |- *.",
                        "VernacExtend",
                        "86fd054b3ddf044a7d1a1c9e4d18fe6773024395"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply word_word.",
                        "VernacExtend",
                        "4be0ca306f3186ecd9b9bf00040316f4f141c0d7"
                    ]
                },
                {
                    "command": [
                        "cut (Id_words (union X V1) (Word_ext f)); auto.",
                        "VernacExtend",
                        "ee8c8dfd788d87977caff1320ab8a611a685f3cb"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply isGram4 with S1; trivial.",
                        "VernacExtend",
                        "2e463f9f03214217e5e27fe092a127c6795f70a8"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram_inclus3 ] 3.",
                        "VernacExtend",
                        "6c30c104e259c6d0a17b7c30768c1deaf158d8e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Id_image_S",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "unfold Sim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7fba2c96f5c2f99795a5f9e8799be29d92ce8ee6"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram3 union_d ] 6.",
                        "VernacExtend",
                        "89aa7a659ff1347dc86268224ca28602102944ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gim_egal",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "unfold Sim, Rim, Gim3, Vim, Gim2, Xim in |- *.",
                        "VernacExtend",
                        "92bfceb547428f0b97b7873e0d40f202284b8250"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Id_image_G",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "intros Id_u_X_V1_f isG_X_V1_R1_S1.",
                        "VernacExtend",
                        "d4be973652c29fd7fd1d8874eeffa40043d8ac4e"
                    ]
                },
                {
                    "command": [
                        "rewrite Gim_egal.",
                        "VernacExtend",
                        "ab2ea9f549be17c27a32a5d91a33d7a28f153a58"
                    ]
                },
                {
                    "command": [
                        "rewrite (Id_image_S Id_u_X_V1_f isG_X_V1_R1_S1).",
                        "VernacExtend",
                        "1671ac18222f8da1e4b2d761f7f2b2a9c0c9558c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Id_image_R Id_u_X_V1_f isG_X_V1_R1_S1).",
                        "VernacExtend",
                        "f5b4dd58a747a3fb0e2f232993b9878e5cb65abb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Id_image_V Id_u_X_V1_f).",
                        "VernacExtend",
                        "30f7833faecf1118fcc14c08967fc5a3d4fcb11c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Id_image_X Id_u_X_V1_f).",
                        "VernacExtend",
                        "f75b4488a643b95cca41c6b493c2592bb9bd976a"
                    ]
                },
                {
                    "command": [
                        "apply refl_equal.",
                        "VernacExtend",
                        "37304a26ede0d38318cdc32c46bfa45cfbc5e7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_image",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros u v H.",
                        "VernacExtend",
                        "52f0f14b31f2a55e4a70ff287fcea8fddb0ec657"
                    ]
                },
                {
                    "command": [
                        "elim H; clear H u v.",
                        "VernacExtend",
                        "965ae940c3444e824ba91cc365a327a8d66f5e4d"
                    ]
                },
                {
                    "command": [
                        "intros u v A dans_A.",
                        "VernacExtend",
                        "a08030e6956666ef5df0449de24a4cf0f4a2f9f1"
                    ]
                },
                {
                    "command": [
                        "replace (wef (cons A v)) with (cons (f A) (wef v)).",
                        "VernacExtend",
                        "1d0f6ef249d1643deff6366f406775339987dbc1"
                    ]
                },
                {
                    "command": [
                        "replace (wef (Append u v)) with (Append (wef u) (wef v)).",
                        "VernacExtend",
                        "c4db7aa677643234c322018a90b9f5a18df16e76"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; unfold wef in |- *; apply wef_append; auto.",
                        "VernacExtend",
                        "49c2a8e4b2071a79ab79a50cdfee8a691afb7418"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (wef (cons x u)) with (cons (f x) (wef u)).",
                        "VernacExtend",
                        "2e174d839751a1505ee050ffa164fc2cc3aeba33"
                    ]
                },
                {
                    "command": [
                        "replace (wef (cons x v)) with (cons (f x) (wef v)); auto.",
                        "VernacExtend",
                        "81f45c910c28b5073de7abd42ebb74e044f39231"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derivestar_image",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "intros u v Hyp.",
                        "VernacExtend",
                        "e8dd42613ee138300eb0abd5e5ee0eb0a5d3a8d5"
                    ]
                },
                {
                    "command": [
                        "unfold Derivestar, Rstar in Hyp.",
                        "VernacExtend",
                        "d867466bc82dc1bf6b97612a9a9e9dde15b886ad"
                    ]
                },
                {
                    "command": [
                        "pattern u, v in |- *.",
                        "VernacExtend",
                        "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
                    ]
                },
                {
                    "command": [
                        "apply Hyp.",
                        "VernacExtend",
                        "de6001680dad5327ceb4bc78c14e76d2f7e511ca"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros a b c DeriveR1 Rst.",
                        "VernacExtend",
                        "a8f01bd46d76f3f23318b6926b57c1f0ecd849b4"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_R with (y := wef b); auto.",
                        "VernacExtend",
                        "1b430f09cb0ef28180e7e5de02faf01e35edf727"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Reconnait_imageGram",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intro w.",
                        "VernacExtend",
                        "dfee15f93db1f552e6b7328c90ebe9aa89c457ff"
                    ]
                },
                {
                    "command": [
                        "unfold LG in |- *.",
                        "VernacExtend",
                        "343b9338ef9ed31b98c91f9133563b9abde9420d"
                    ]
                },
                {
                    "command": [
                        "intro temp; split; elim temp; clear temp; intros Der inmo.",
                        "VernacExtend",
                        "264bff8fc6917762973083a8a1fc4cabb7f291e8"
                    ]
                },
                {
                    "command": [
                        "unfold Sim, Gim3, Gim2, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7fba2c96f5c2f99795a5f9e8799be29d92ce8ee6"
                    ]
                },
                {
                    "command": [
                        "replace (cons (f S1) nil) with (wef (cons S1 nil)); auto.",
                        "VernacExtend",
                        "71aba1f628d2d34681b1dd4c587688f50efde04d"
                    ]
                },
                {
                    "command": [
                        "elim inmo.",
                        "VernacExtend",
                        "a2b75adf21e5b6b8e7741557281db3e1846a675e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros wo el.",
                        "VernacExtend",
                        "e77c7fe998d5dfb4303e4ba75569d638e0681823"
                    ]
                },
                {
                    "command": [
                        "unfold Xim, Gim, imageGram in |- *; simpl in |- *.",
                        "VernacExtend",
                        "9fda3994587688a5c5ecddc2e620a334738018dd"
                    ]
                },
                {
                    "command": [
                        "replace (wef (cons el wo)) with (cons (f el) (wef wo)); auto.",
                        "VernacExtend",
                        "aba94b4f48ba34b6d8553053f9bc144cea0dc5c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}