{
    "filename": "Ensf_dans.v",
    "coq_project": "automata",
    "vernac_cmds": [
        [
            "Require Import Ensf_types.",
            "VernacRequire",
            "c96e3b7b29a18b9cba28b482e793a88a30386b19"
        ],
        [
            "Inductive dans : Elt -> Ensf -> Prop := | dans_add1 : forall (x : Elt) (e : Ensf), dans x (add x e) | dans_add2 : forall (x y : Elt) (e : Ensf), dans x e -> dans x (add y e).",
            "VernacInductive",
            "7c6517b2b072f2e528b9726722feb8fd17faee2c"
        ],
        [
            "Hint Resolve dans_add1 dans_add2.",
            "VernacHints",
            "798462e5c57064b34f597a5885255bb5235fb969"
        ],
        [
            "Lemma dans_add : forall (x y : Elt) (e : Ensf), dans x (add y e) -> y = x \\/ dans x e.",
            "VernacStartTheoremProof",
            "33c8b30a97527f4602c341e9ba3de527fd4e4063"
        ],
        [
            "intros x y e H.",
            "VernacExtend",
            "06e2249fc849d94fe37850dbb76348aef5795811"
        ],
        [
            "simple inversion H.",
            "VernacExtend",
            "62ed20c5c84ef7240afb55df72216607b635568c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "injection H1.",
            "VernacExtend",
            "31268d1530b64cc45d910c4f0cd0563cee63009e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply trans_equal with x0; [ auto | assumption ].",
            "VernacExtend",
            "80f12c6f9947d44ffa7eecac4fd60de2e3d62f73"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "injection H2.",
            "VernacExtend",
            "9cc0ea2defc54a965c0eba85b7e316da78406032"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dans_add_contr : forall (x y : Elt) (e : Ensf), y <> x -> ~ dans x e -> ~ dans x (add y e).",
            "VernacStartTheoremProof",
            "890fd6d6b245832a17fb9c4bd0253915b1250b11"
        ],
        [
            "intros; red in |- *; intro.",
            "VernacExtend",
            "8efb0e8eb13e9c212c108e6c3da452eb08ee81d1"
        ],
        [
            "absurd (y = x \\/ dans x e).",
            "VernacExtend",
            "298ef19a36b06aa3bd5cc0698f2348649e355db7"
        ],
        [
            "2: apply dans_add; auto.",
            "VernacExtend",
            "36421d7e24a0d94a4aac40669d87998729f8c7b7"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim H2; auto.",
            "VernacExtend",
            "8a627dcf0fcd94e45a028b6ccd1e368d5ddc7cc5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_empty : forall E : Elt, ~ dans E empty.",
            "VernacStartTheoremProof",
            "d1e364f762785b8acbd6ba990d24c8709df2969d"
        ],
        [
            "unfold not in |- *; intros E H.",
            "VernacExtend",
            "97920e8ed340cb837d364b0be880b6ab2819ac2d"
        ],
        [
            "simple inversion H; [ discriminate H1 | discriminate H2 ].",
            "VernacExtend",
            "da5cf061e383005d3fd7dc3b4e05b6fef5298e68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve empty_empty.",
            "VernacHints",
            "bda1056d1b33847008a16266e7a2ef0c2a3dcad2"
        ],
        [
            "Lemma dans_empty_imp_P : forall (x : Elt) (P : Prop), dans x empty -> P.",
            "VernacStartTheoremProof",
            "bfea40465d54322abab51c9e0353b908b0d3e7e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "cut (~ dans x empty); auto.",
            "VernacExtend",
            "eb67350813990f7630e2f30b8d8b35b00335402e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singl2 : forall x : Elt, dans x (singleton x).",
            "VernacStartTheoremProof",
            "514b4fde902dc5e21791e362848929be0b9756b0"
        ],
        [
            "unfold singleton in |- *.",
            "VernacExtend",
            "d48231ab09044fce8213c56091dcbe5ff3e52d20"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve singl2.",
            "VernacHints",
            "afac9e573b944493d1a4749f0a8b1cad8332ce16"
        ],
        [
            "Unset Structural Injection.",
            "VernacUnsetOption",
            "5da2b9e61866f7d32cb637a9aa56fa7e8436a679"
        ],
        [
            "Lemma singl2_inv : forall x e : Elt, dans x (singleton e) -> x = e :>Elt.",
            "VernacStartTheoremProof",
            "b43ca299eb9c022b1056a049cd0a98bed72b2454"
        ],
        [
            "unfold singleton in |- *.",
            "VernacExtend",
            "d48231ab09044fce8213c56091dcbe5ff3e52d20"
        ],
        [
            "intros x e H.",
            "VernacExtend",
            "4a570b77a3b9d2106e97b6d9c5fd4c586fcd274a"
        ],
        [
            "simple inversion H.",
            "VernacExtend",
            "62ed20c5c84ef7240afb55df72216607b635568c"
        ],
        [
            "injection H1; intros.",
            "VernacExtend",
            "e85fdf9e0584495092fb3b572756f7424e9c4db8"
        ],
        [
            "rewrite <- H0; assumption.",
            "VernacExtend",
            "a53e1e82c1888ea3124ec3c0077c4a45671434ed"
        ],
        [
            "injection H2; intros.",
            "VernacExtend",
            "34557a86268c5c56e0342380388660eaaaaa564e"
        ],
        [
            "apply dans_empty_imp_P with x0.",
            "VernacExtend",
            "63bac2e2f0694a31ce47b30cb076014da6381caa"
        ],
        [
            "rewrite <- H0; assumption.",
            "VernacExtend",
            "a53e1e82c1888ea3124ec3c0077c4a45671434ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve singl2_inv.",
            "VernacHints",
            "ca760a50f83ff96b2994edfb242d9fea1cf2a704"
        ]
    ],
    "proofs": [
        {
            "name": "dans_add",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros x y e H.",
                        "VernacExtend",
                        "06e2249fc849d94fe37850dbb76348aef5795811"
                    ]
                },
                {
                    "command": [
                        "simple inversion H.",
                        "VernacExtend",
                        "62ed20c5c84ef7240afb55df72216607b635568c"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "injection H1.",
                        "VernacExtend",
                        "31268d1530b64cc45d910c4f0cd0563cee63009e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply trans_equal with x0; [ auto | assumption ].",
                        "VernacExtend",
                        "80f12c6f9947d44ffa7eecac4fd60de2e3d62f73"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "injection H2.",
                        "VernacExtend",
                        "9cc0ea2defc54a965c0eba85b7e316da78406032"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3.",
                        "VernacExtend",
                        "1eb91ccefb59c504d04364b76e0995592b63f60e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_empty",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros E H.",
                        "VernacExtend",
                        "97920e8ed340cb837d364b0be880b6ab2819ac2d"
                    ]
                },
                {
                    "command": [
                        "simple inversion H; [ discriminate H1 | discriminate H2 ].",
                        "VernacExtend",
                        "da5cf061e383005d3fd7dc3b4e05b6fef5298e68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dans_empty_imp_P",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "cut (~ dans x empty); auto.",
                        "VernacExtend",
                        "eb67350813990f7630e2f30b8d8b35b00335402e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singl2",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold singleton in |- *.",
                        "VernacExtend",
                        "d48231ab09044fce8213c56091dcbe5ff3e52d20"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singl2_inv",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "unfold singleton in |- *.",
                        "VernacExtend",
                        "d48231ab09044fce8213c56091dcbe5ff3e52d20"
                    ]
                },
                {
                    "command": [
                        "intros x e H.",
                        "VernacExtend",
                        "4a570b77a3b9d2106e97b6d9c5fd4c586fcd274a"
                    ]
                },
                {
                    "command": [
                        "simple inversion H.",
                        "VernacExtend",
                        "62ed20c5c84ef7240afb55df72216607b635568c"
                    ]
                },
                {
                    "command": [
                        "injection H1; intros.",
                        "VernacExtend",
                        "e85fdf9e0584495092fb3b572756f7424e9c4db8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; assumption.",
                        "VernacExtend",
                        "a53e1e82c1888ea3124ec3c0077c4a45671434ed"
                    ]
                },
                {
                    "command": [
                        "injection H2; intros.",
                        "VernacExtend",
                        "34557a86268c5c56e0342380388660eaaaaa564e"
                    ]
                },
                {
                    "command": [
                        "apply dans_empty_imp_P with x0.",
                        "VernacExtend",
                        "63bac2e2f0694a31ce47b30cb076014da6381caa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; assumption.",
                        "VernacExtend",
                        "a53e1e82c1888ea3124ec3c0077c4a45671434ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}