{
    "filename": "gram.v",
    "coq_project": "automata",
    "vernac_cmds": [
        [
            "Require Import Ensf.",
            "VernacRequire",
            "0eef339a8702c2ffbe4b6d6652f4262e87a9cc51"
        ],
        [
            "Require Import Words.",
            "VernacRequire",
            "2af28d54c83d8fc6ccdd83d2efbe89ec4d6eff34"
        ],
        [
            "Require Import more_words.",
            "VernacRequire",
            "42bdc7795d087d1127136b152cdc0b4f61bae0b7"
        ],
        [
            "Require Import need.",
            "VernacRequire",
            "9a1afe2eef8b71698863d342559c97dd02c5052b"
        ],
        [
            "Require Import fonctions.",
            "VernacRequire",
            "827b14fe5063132d9c325153db4f6b45dd7f4e8a"
        ],
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Definition Mots (X : Ensf) := forall a : Elt, dans a X -> exists w : Word, word w = a.",
            "VernacDefinition",
            "e5563e5ee5c07c621255b62be3fb253f9b48460c"
        ],
        [
            "Definition Regles (X V R : Ensf) := forall x : Elt, dans x R -> ex2 (fun A : Elt => dans A V) (fun A : Elt => ex2 (fun B : Word => x = couple A (word B)) (fun B : Word => inmonoid (union X V) B)).",
            "VernacDefinition",
            "7735ed26efbab3828cdb82ef9fceb668ce270a92"
        ],
        [
            "Lemma Regles_inv1 : forall (X V R : Ensf) (x y : Elt), Regles X V R -> dans (couple x y) R -> dans x V.",
            "VernacStartTheoremProof",
            "9f2b1acf263b3b6d2ac087d58f02ad8e47133e94"
        ],
        [
            "intros X V R x y Regles_R dans_couple_R.",
            "VernacExtend",
            "25a25b89f990b978079896d2de8f2fff914c4acd"
        ],
        [
            "cut (ex2 (fun A : Elt => dans A V) (fun A : Elt => ex2 (fun B : Word => couple x y = couple A (word B)) (fun B : Word => inmonoid (union X V) B))).",
            "VernacExtend",
            "a056a074724bb0a59ee5fc33ae560f423477563b"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros x0 dans_x0_V temp; elim temp; clear temp.",
            "VernacExtend",
            "8363b31b4979f238d669642e1ae68351a92871e7"
        ],
        [
            "intros u eg_couple inmonoid_u.",
            "VernacExtend",
            "8ae6920fa057671a43a8c7cb2d961be92fe35ef1"
        ],
        [
            "replace x with x0; prolog [ sym_equal couple_couple_inv1 ] 3.",
            "VernacExtend",
            "d27e191d8666b599631ecba71a0445cd98b57d00"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Regles_inv2 : forall (X V R : Ensf) (x : Elt) (u : Word), Regles X V R -> dans (couple x (word u)) R -> inmonoid (union X V) u.",
            "VernacStartTheoremProof",
            "f5208fcc878fbbd3984ede3b8b04ba58fc9e04a1"
        ],
        [
            "intros X V R x u Regles_R dans_couple_R.",
            "VernacExtend",
            "6e22eefd707bd030c040642c5c23fa918a43ab7d"
        ],
        [
            "cut (ex2 (fun A : Elt => dans A V) (fun A : Elt => ex2 (fun B : Word => couple x (word u) = couple A (word B)) (fun B : Word => inmonoid (union X V) B))).",
            "VernacExtend",
            "9925f4ecab696d7c2a0e5a716db427e487733e37"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros x0 dans_x0_V temp; elim temp; clear temp.",
            "VernacExtend",
            "8363b31b4979f238d669642e1ae68351a92871e7"
        ],
        [
            "intros u0 eg_couple inmonoid_u0.",
            "VernacExtend",
            "53e13cc0193e1b94dee9fdaf688fd7fa10a72bdb"
        ],
        [
            "replace u with u0; prolog [ sym_equal couple_couple_inv2 word_word_inv ] 4.",
            "VernacExtend",
            "f3489ef7822cc8f9bceb248b06c9f0514f23e0b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition isGram (X V R : Ensf) (S : Elt) : Prop := Mots X /\\ inter X V empty /\\ dans S V /\\ Regles X V R.",
            "VernacDefinition",
            "068c21dfab7096e0bb1ac0beafbc8731c0ddb97b"
        ],
        [
            "Section Easy_lemma_isGram.",
            "VernacBeginSection",
            "4088b1994e01ada4b1f7b64fd3b2a8b2457f3825"
        ],
        [
            "Variable X V R : Ensf.",
            "VernacAssumption",
            "d01c23b9b06e93bc4f9e6a1155498b27cf7d7c2f"
        ],
        [
            "Variable S : Elt.",
            "VernacAssumption",
            "7ab95e904d5ef8f5ea67ef4310a5f61f427e0cfb"
        ],
        [
            "Let H := isGram X V R S.",
            "VernacDefinition",
            "1eb99d781f534c4d4667b6689e9b847d47b5a23c"
        ],
        [
            "Lemma isGram1 : H -> Mots X.",
            "VernacStartTheoremProof",
            "e2a05c0570ca9d2d08ac312bcd7ded46cde86b56"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isGram2 : H -> inter X V empty.",
            "VernacStartTheoremProof",
            "1e575cd843c5993c803044521a526f236d238b59"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isGram3 : H -> dans S V.",
            "VernacStartTheoremProof",
            "931df5da5aeebc804c54669f6b0d9b55ef7bb52c"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isGram4 : H -> Regles X V R.",
            "VernacStartTheoremProof",
            "8b841178fb987f88023e049dacb837b028f974ef"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isGram5 : Mots X -> inter X V empty -> dans S V -> Regles X V R -> H.",
            "VernacStartTheoremProof",
            "01f01585e76e48333be89bd75a0eba9bf60a9f47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in |- *; red in |- *.",
            "VernacExtend",
            "593a5b8fda79a806e4c4c74b6c59799a0416c90f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Easy_lemma_isGram.",
            "VernacEndSegment",
            "513a3bf3927b7cdf8e8e3c186173975302194d59"
        ],
        [
            "Lemma Regles_R : forall X V R R' : Ensf, inclus R' R -> Regles X V R -> Regles X V R'.",
            "VernacStartTheoremProof",
            "8c59840d73d2f8e546ad4b8042025d5d4be6293f"
        ],
        [
            "unfold Regles in |- *.",
            "VernacExtend",
            "6a2f5f883b317a2548318b43e1f61900e4e85817"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Regles_V : forall X V R V' : Ensf, inclus V V' -> Regles X V R -> Regles X V' R.",
            "VernacStartTheoremProof",
            "e54541e90763fb77f2aab1b61975972a6e7a553a"
        ],
        [
            "unfold Regles in |- *.",
            "VernacExtend",
            "6a2f5f883b317a2548318b43e1f61900e4e85817"
        ],
        [
            "intros X V R V' inclus_V_V' Regles_X_V_R x dans_x_R.",
            "VernacExtend",
            "c50368058c088a5b8143b9f4f633f41fb5a22432"
        ],
        [
            "elim (Regles_X_V_R x dans_x_R).",
            "VernacExtend",
            "48358b1dcf7ac4e4ecdaa70fac2512c37b085fc4"
        ],
        [
            "intros A dans_A_V temp; elim temp; clear temp.",
            "VernacExtend",
            "5e9d4d378da0070dc5695f4883ae17dd57ab2bf1"
        ],
        [
            "intros B egal_B inmonoid_B.",
            "VernacExtend",
            "834ef7409b92c2a59853d02a121d10cd8d40167b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply inmonoid_inclus with (union X V); auto.",
            "VernacExtend",
            "ef69c1a3e0dcf06b2b7a8dae2bfc1cb16e88ed75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Regles_add : forall (X V R : Ensf) (a : Elt) (u : Word), Regles X V R -> dans a V -> inmonoid (union X V) u -> Regles X V (add (couple a (word u)) R).",
            "VernacStartTheoremProof",
            "e0fe026938bc1834ad96610f6e93450aefbb83b8"
        ],
        [
            "intros X V R a u R_R dans_a_V inmonoid_u_X_V_u.",
            "VernacExtend",
            "39f353749f514109d8ffb62270b0a26cbaaf91fa"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x dans_x_R'.",
            "VernacExtend",
            "76e959151d05df3753ffe54e615b4a325d31e918"
        ],
        [
            "cut (couple a (word u) = x :>Elt \\/ dans x R).",
            "VernacExtend",
            "9e897d2a9cc9f6eaaf2997785c2adfe25e96334d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists u; auto.",
            "VernacExtend",
            "2c841a3f2705575d64ec7e7e7eb5e7e9a0a5e3e1"
        ],
        [
            "apply dans_add; assumption.",
            "VernacExtend",
            "19edf5af367703af665505e49ed665938e2ec665"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Regles_add2 : forall (X V R : Ensf) (a : Elt), Regles X V R -> Regles X (add a V) R.",
            "VernacStartTheoremProof",
            "9cd4ce7e6a854506445c90a1d3453f8146fe2957"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Regles_V with V; auto.",
            "VernacExtend",
            "61d92731f5d77469168ba22a52113816ead64643"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Regles_union : forall X V R R' : Ensf, Regles X V R -> Regles X V R' -> Regles X V (union R R').",
            "VernacStartTheoremProof",
            "ea82db5bb474b408cb44fa61bd9a527fb8f7a35f"
        ],
        [
            "unfold Regles in |- *.",
            "VernacExtend",
            "6a2f5f883b317a2548318b43e1f61900e4e85817"
        ],
        [
            "intros X V R R' R_R R_R' x dans_x_union.",
            "VernacExtend",
            "ea7a7a73da9c029ca1f0604d5b191b61cbae8b0b"
        ],
        [
            "cut (dans x R \\/ dans x R'); auto.",
            "VernacExtend",
            "2ddd24c766c35baaafa5a5eb14b429da82bdda51"
        ],
        [
            "intros [HR| HR']; auto.",
            "VernacExtend",
            "8d3b4c3df39076cf2df042b88f55f44e4f174170"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isGram_inclus2 : forall (X V R R' : Ensf) (S : Elt), inclus R' R -> isGram X V R S -> isGram X V R' S.",
            "VernacStartTheoremProof",
            "c1443634eb4ab7d674e2dd195ac2a2d5c886b243"
        ],
        [
            "prolog [ isGram4 Regles_R isGram3 isGram2 isGram1 isGram5 ] 11.",
            "VernacExtend",
            "bedd984d075a7788bde207170695f7221f4a7585"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isGram_inclus3 : forall (X V R : Ensf) (S a : Elt), isGram X V (add a R) S -> isGram X V R S.",
            "VernacStartTheoremProof",
            "f077c92092a42d87fa55e9cc614bd35724034b79"
        ],
        [
            "intros X V R S a isGram_X_V_a_R_S.",
            "VernacExtend",
            "531b3bbfadc182eff19c49c9065fb2cec8f7812b"
        ],
        [
            "apply isGram_inclus2 with (add a R); auto.",
            "VernacExtend",
            "4641b5873871b2ce53ca0b3c8be51ecfffcde238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive Derive (R : Ensf) : Word -> Word -> Prop := | Derive1 : forall (u v : Word) (A : Elt), dans (couple A (word u)) R -> Derive R (cons A v) (Append u v) | Derive2 : forall (u v : Word) (x : Elt), Derive R u v -> Derive R (cons x u) (cons x v).",
            "VernacInductive",
            "4ac13cc5792d52defc5629b2f27131f579f04583"
        ],
        [
            "Hint Resolve Derive1.",
            "VernacHints",
            "c16fc0cbdde6d79a6d573e6a6fba066aa27d940d"
        ],
        [
            "Hint Resolve Derive2.",
            "VernacHints",
            "68a14b77841ecf6ee66664aea2d27a0e81f615bd"
        ],
        [
            "Lemma Derive_inclus : forall (R1 R2 : Ensf) (u v : Word), inclus R1 R2 -> Derive R1 u v -> Derive R2 u v.",
            "VernacStartTheoremProof",
            "9b92c1a88e83f67d6beecf62d72635b46f30d986"
        ],
        [
            "intros R1 R2 u v inclus_R1_R2 Der_R1.",
            "VernacExtend",
            "f1b745e0fcf9aab3f63fd2513b9ff98495f8d997"
        ],
        [
            "elim Der_R1; auto.",
            "VernacExtend",
            "287c1ef494174428c0da7466849a74d101d76623"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Derive_inv (R : Ensf) (x y : Word) := match x return Prop with | nil => False | cons A w => ex2 (fun u : Word => dans (couple A (word u)) R) (fun u : Word => ex2 (fun v : Word => cons A v = x :>Word) (fun v : Word => Append u v = y :>Word)) \\/ ex2 (fun v : Word => Derive R w v) (fun v : Word => cons A v = y :>Word) end.",
            "VernacDefinition",
            "c335b0c87c32e07976415446f0ac9c7ff4004ea0"
        ],
        [
            "Lemma Derive_inv1 : forall (R : Ensf) (u v : Word), Derive R u v -> Derive_inv R u v.",
            "VernacStartTheoremProof",
            "f28c1c1e3252fc08e554230ad4e15a95d1f7b6d2"
        ],
        [
            "intros R x y Der_x_y.",
            "VernacExtend",
            "964c493c1d9e2ea70e9a9deea49797bc210a525d"
        ],
        [
            "unfold Derive_inv in |- *.",
            "VernacExtend",
            "2c8cf481a584e407da0dcfa1ec76c07167314068"
        ],
        [
            "elim Der_x_y; prolog [ ex_intro2 refl_equal or_intror or_introl ] 8.",
            "VernacExtend",
            "b8f2a8a818bb02a2b90dc9a60355d6acc20f81ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Derive_inv1.",
            "VernacHints",
            "51e0c1e7be68e45c8051d949f8e3f7fd33c3fbaa"
        ],
        [
            "Lemma Derive_inv2 : forall (R : Ensf) (x y : Word), Derive_inv R x y -> exists A : Elt, (exists2 w : Word, cons A w = x & (exists2 u : Word, dans (couple A (word u)) R & (exists2 v : Word, cons A v = x & Append u v = y)) \\/ (exists2 v : Word, Derive R w v & cons A v = y)).",
            "VernacStartTheoremProof",
            "63a0d38c0537414ed42377d8741186848c2fbde7"
        ],
        [
            "intros R x y.",
            "VernacExtend",
            "a5f6db08a1612f85b0b35d05f5342514ea04e721"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "unfold Derive_inv in |- *.",
            "VernacExtend",
            "2c8cf481a584e407da0dcfa1ec76c07167314068"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros x0 w Hyp_rec.",
            "VernacExtend",
            "3b61f0f88d295487933298076d28e0a864a614a5"
        ],
        [
            "unfold Derive_inv in |- *.",
            "VernacExtend",
            "2c8cf481a584e407da0dcfa1ec76c07167314068"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "exists w; trivial.",
            "VernacExtend",
            "f4a81d34b41deaa2e82b03ea1971927f575e1353"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derive_inv3 : forall (R : Ensf) (x y : Word), Derive R x y -> exists A : _, (exists2 w : _, cons A w = x & (exists2 u : _, dans (couple A (word u)) R & (exists2 v : _, cons A v = x & Append u v = y)) \\/ (exists2 v : _, Derive R w v & cons A v = y)).",
            "VernacStartTheoremProof",
            "1ae628868032bd9b195c93bb09edfc1d3498e87b"
        ],
        [
            "prolog [ Derive_inv1 Derive Derive_inv2 ] 7.",
            "VernacExtend",
            "c0b925b537d28f8d9fb29fbd28623ab6c6326a9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_mon_X_Der_imp_inmon_X : forall (X V R : Ensf) (u v : Word), Regles X V R -> Derive R u v -> inmonoid (union X V) u -> inmonoid (union X V) v.",
            "VernacStartTheoremProof",
            "5ef985d21842a21f01b56cfb9cec6deb43d0497a"
        ],
        [
            "intros X V1 R1 u v Regles_R1 Der_R1.",
            "VernacExtend",
            "3f8b7635f2d63583ced702a0a537519ab4b4bcbe"
        ],
        [
            "elim Der_R1; prolog [ Regles_inv2 inmonoid_cons_inv inmonoid_cons_inv2 inmonoid_cons inmonoid_Append ] 10.",
            "VernacExtend",
            "359fe23d19c6a4689a27577347dc92b7a8442806"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Derivestar (R : Ensf) := Rstar Word (Derive R).",
            "VernacDefinition",
            "5dc9a780f79baa2de5b1747e03b6770c0a78ade8"
        ],
        [
            "Hint Unfold Derivestar.",
            "VernacHints",
            "aeafcfc5d36e6e337b11b4e1d5f21b98cdff764a"
        ],
        [
            "Lemma Derivestar_refl : forall (R : Ensf) (u : Word), Derivestar R u u.",
            "VernacStartTheoremProof",
            "54a04606419d1c1bc0683fff2fc54ca016093304"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Derivestar_refl.",
            "VernacHints",
            "dc7acd427a92290639f5ec5afd4c70ee6a07c912"
        ],
        [
            "Lemma Derivestar_R : forall (R : Ensf) (u v w : Word), Derive R u v -> Derivestar R v w -> Derivestar R u w.",
            "VernacStartTheoremProof",
            "1fa917ad43c9cc134cec95ab5a0734b8384b661c"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "prolog [ Rstar_R ] 8.",
            "VernacExtend",
            "cd2bfb5cc4388f407c21216a337ff120f40ce480"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Derivestar_inv : forall (R : Ensf) (u v : Word), Derivestar R u v -> u = v \\/ (exists2 w : Word, Derive R u w & Derivestar R w v).",
            "VernacStartTheoremProof",
            "7cf5e2d5c8785e59ea771957a431e6764b13f020"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "prolog [ Rstar_inv ] 6.",
            "VernacExtend",
            "4f4f308203fa05d05b9150ca5652907d0980eee6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Derivestar_inv.",
            "VernacHints",
            "634fb1680620b85b8f3772ff289cabc4589e4e8b"
        ],
        [
            "Lemma Derivestar_inclus : forall (R1 R2 : Ensf) (u v : Word), inclus R1 R2 -> Derivestar R1 u v -> Derivestar R2 u v.",
            "VernacStartTheoremProof",
            "f4e33c5aec0c6ce0457c531b9de4613445695269"
        ],
        [
            "intros R1 R2 u v inclus_R1_R2 Der_R1.",
            "VernacExtend",
            "f1b745e0fcf9aab3f63fd2513b9ff98495f8d997"
        ],
        [
            "unfold Derivestar, Rstar in Der_R1.",
            "VernacExtend",
            "66d1f0e69b8045ba3a7610e00f516829000539fa"
        ],
        [
            "pattern u, v in |- *.",
            "VernacExtend",
            "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
        ],
        [
            "apply Der_R1.",
            "VernacExtend",
            "80d68a0975401e47eef2c4ccab168e9304e0a79a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros; prolog [ Derive_inclus Derivestar_R ] 3.",
            "VernacExtend",
            "e1ff8ccb2e694a5fe6f08f94b52bddb47e9a5c60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition LG (X V R : Ensf) (S : Elt) : wordset := fun w : Word => Derivestar R (cons S nil) w /\\ inmonoid X w.",
            "VernacDefinition",
            "238c7a640a772d4b70b7bf57b54549aaa4f01577"
        ],
        [
            "Lemma LG_inv : forall (X V R : Ensf) (S : Elt) (w : Word), LG X V R S w -> inmonoid X w.",
            "VernacStartTheoremProof",
            "b1a4f7b7563fad3aa319dd0e9c1a9dd8d9ddf894"
        ],
        [
            "unfold LG in |- *.",
            "VernacExtend",
            "343b9338ef9ed31b98c91f9133563b9abde9420d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H; auto.",
            "VernacExtend",
            "93275a139e0a54467a849c9ab468d4fd7beb5813"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LG_langage : forall (X V R : Ensf) (S : Elt), isGram X V R S -> islanguage X (LG X V R S).",
            "VernacStartTheoremProof",
            "7c821abde1d32c27362f1b82d5bd4858dc7c8a32"
        ],
        [
            "intros; red in |- *; intros; elim H0; auto.",
            "VernacExtend",
            "8564324d70a50a77f6a05f0ad2eb6749686cec1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Gunion (V1 R1 V2 R2 : Ensf) := (union V1 V2, union R1 R2).",
            "VernacDefinition",
            "32297e16a1e90fdc9278510b067021c627d970e6"
        ],
        [
            "Section injprod.",
            "VernacBeginSection",
            "3ef358aadb4689aa820e26084914957d341c3579"
        ],
        [
            "Let injproduc (f : Elt -> Elt) (V : Ensf) := extension V f.",
            "VernacDefinition",
            "93a580723108fe237bb5c75b3e057878ee93f7bf"
        ],
        [
            "Definition injproducg : Ensf -> Elt -> Elt := injproduc injgauche.",
            "VernacDefinition",
            "6a4640bfab4d8403ab4140dbc5bcee4769c93a90"
        ],
        [
            "Definition injproducd : Ensf -> Elt -> Elt := injproduc injdroite.",
            "VernacDefinition",
            "7dfa8a8eba264777124056c2800a75e36949e531"
        ],
        [
            "End injprod.",
            "VernacEndSegment",
            "03bd1c35c78e3127862c59769ae5684a2d692f9e"
        ],
        [
            "Definition Gunion_disj_p (V1 R1 : Ensf) (S1 : Elt) (V2 R2 : Ensf) (S2 S : Elt) := (add S (fst (Gunion V1 R1 V2 R2)), (add (couple S (word (cons S1 nil))) (add (couple S (word (cons S2 nil))) (snd (Gunion V1 R1 V2 R2))), S)).",
            "VernacDefinition",
            "5c5efd7083b86718c405c88c8c47a7a466ae84e9"
        ],
        [
            "Definition imageGram (f : Elt -> Elt) (X V R : Ensf) (S : Elt) := (map f X, (map f V, (map (fun P : Elt => couple (f (first P)) ((fun w : Elt => word (Word_ext f (word_inv w))) (second P))) R, f S))).",
            "VernacDefinition",
            "119148ca3f14ebc4460e5efa73225aebfa4e6c45"
        ]
    ],
    "proofs": [
        {
            "name": "Regles_inv1",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros X V R x y Regles_R dans_couple_R.",
                        "VernacExtend",
                        "25a25b89f990b978079896d2de8f2fff914c4acd"
                    ]
                },
                {
                    "command": [
                        "cut (ex2 (fun A : Elt => dans A V) (fun A : Elt => ex2 (fun B : Word => couple x y = couple A (word B)) (fun B : Word => inmonoid (union X V) B))).",
                        "VernacExtend",
                        "a056a074724bb0a59ee5fc33ae560f423477563b"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros x0 dans_x0_V temp; elim temp; clear temp.",
                        "VernacExtend",
                        "8363b31b4979f238d669642e1ae68351a92871e7"
                    ]
                },
                {
                    "command": [
                        "intros u eg_couple inmonoid_u.",
                        "VernacExtend",
                        "8ae6920fa057671a43a8c7cb2d961be92fe35ef1"
                    ]
                },
                {
                    "command": [
                        "replace x with x0; prolog [ sym_equal couple_couple_inv1 ] 3.",
                        "VernacExtend",
                        "d27e191d8666b599631ecba71a0445cd98b57d00"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Regles_inv2",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros X V R x u Regles_R dans_couple_R.",
                        "VernacExtend",
                        "6e22eefd707bd030c040642c5c23fa918a43ab7d"
                    ]
                },
                {
                    "command": [
                        "cut (ex2 (fun A : Elt => dans A V) (fun A : Elt => ex2 (fun B : Word => couple x (word u) = couple A (word B)) (fun B : Word => inmonoid (union X V) B))).",
                        "VernacExtend",
                        "9925f4ecab696d7c2a0e5a716db427e487733e37"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros x0 dans_x0_V temp; elim temp; clear temp.",
                        "VernacExtend",
                        "8363b31b4979f238d669642e1ae68351a92871e7"
                    ]
                },
                {
                    "command": [
                        "intros u0 eg_couple inmonoid_u0.",
                        "VernacExtend",
                        "53e13cc0193e1b94dee9fdaf688fd7fa10a72bdb"
                    ]
                },
                {
                    "command": [
                        "replace u with u0; prolog [ sym_equal couple_couple_inv2 word_word_inv ] 4.",
                        "VernacExtend",
                        "f3489ef7822cc8f9bceb248b06c9f0514f23e0b1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram1",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram2",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram3",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram4",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intro H1.",
                        "VernacExtend",
                        "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram5",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red in |- *; red in |- *.",
                        "VernacExtend",
                        "593a5b8fda79a806e4c4c74b6c59799a0416c90f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Regles_R",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "unfold Regles in |- *.",
                        "VernacExtend",
                        "6a2f5f883b317a2548318b43e1f61900e4e85817"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Regles_V",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "unfold Regles in |- *.",
                        "VernacExtend",
                        "6a2f5f883b317a2548318b43e1f61900e4e85817"
                    ]
                },
                {
                    "command": [
                        "intros X V R V' inclus_V_V' Regles_X_V_R x dans_x_R.",
                        "VernacExtend",
                        "c50368058c088a5b8143b9f4f633f41fb5a22432"
                    ]
                },
                {
                    "command": [
                        "elim (Regles_X_V_R x dans_x_R).",
                        "VernacExtend",
                        "48358b1dcf7ac4e4ecdaa70fac2512c37b085fc4"
                    ]
                },
                {
                    "command": [
                        "intros A dans_A_V temp; elim temp; clear temp.",
                        "VernacExtend",
                        "5e9d4d378da0070dc5695f4883ae17dd57ab2bf1"
                    ]
                },
                {
                    "command": [
                        "intros B egal_B inmonoid_B.",
                        "VernacExtend",
                        "834ef7409b92c2a59853d02a121d10cd8d40167b"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply inmonoid_inclus with (union X V); auto.",
                        "VernacExtend",
                        "ef69c1a3e0dcf06b2b7a8dae2bfc1cb16e88ed75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Regles_add",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros X V R a u R_R dans_a_V inmonoid_u_X_V_u.",
                        "VernacExtend",
                        "39f353749f514109d8ffb62270b0a26cbaaf91fa"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x dans_x_R'.",
                        "VernacExtend",
                        "76e959151d05df3753ffe54e615b4a325d31e918"
                    ]
                },
                {
                    "command": [
                        "cut (couple a (word u) = x :>Elt \\/ dans x R).",
                        "VernacExtend",
                        "9e897d2a9cc9f6eaaf2997785c2adfe25e96334d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists u; auto.",
                        "VernacExtend",
                        "2c841a3f2705575d64ec7e7e7eb5e7e9a0a5e3e1"
                    ]
                },
                {
                    "command": [
                        "apply dans_add; assumption.",
                        "VernacExtend",
                        "19edf5af367703af665505e49ed665938e2ec665"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Regles_add2",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Regles_V with V; auto.",
                        "VernacExtend",
                        "61d92731f5d77469168ba22a52113816ead64643"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Regles_union",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "unfold Regles in |- *.",
                        "VernacExtend",
                        "6a2f5f883b317a2548318b43e1f61900e4e85817"
                    ]
                },
                {
                    "command": [
                        "intros X V R R' R_R R_R' x dans_x_union.",
                        "VernacExtend",
                        "ea7a7a73da9c029ca1f0604d5b191b61cbae8b0b"
                    ]
                },
                {
                    "command": [
                        "cut (dans x R \\/ dans x R'); auto.",
                        "VernacExtend",
                        "2ddd24c766c35baaafa5a5eb14b429da82bdda51"
                    ]
                },
                {
                    "command": [
                        "intros [HR| HR']; auto.",
                        "VernacExtend",
                        "8d3b4c3df39076cf2df042b88f55f44e4f174170"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram_inclus2",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "prolog [ isGram4 Regles_R isGram3 isGram2 isGram1 isGram5 ] 11.",
                        "VernacExtend",
                        "bedd984d075a7788bde207170695f7221f4a7585"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isGram_inclus3",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros X V R S a isGram_X_V_a_R_S.",
                        "VernacExtend",
                        "531b3bbfadc182eff19c49c9065fb2cec8f7812b"
                    ]
                },
                {
                    "command": [
                        "apply isGram_inclus2 with (add a R); auto.",
                        "VernacExtend",
                        "4641b5873871b2ce53ca0b3c8be51ecfffcde238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_inclus",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros R1 R2 u v inclus_R1_R2 Der_R1.",
                        "VernacExtend",
                        "f1b745e0fcf9aab3f63fd2513b9ff98495f8d997"
                    ]
                },
                {
                    "command": [
                        "elim Der_R1; auto.",
                        "VernacExtend",
                        "287c1ef494174428c0da7466849a74d101d76623"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_inv1",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros R x y Der_x_y.",
                        "VernacExtend",
                        "964c493c1d9e2ea70e9a9deea49797bc210a525d"
                    ]
                },
                {
                    "command": [
                        "unfold Derive_inv in |- *.",
                        "VernacExtend",
                        "2c8cf481a584e407da0dcfa1ec76c07167314068"
                    ]
                },
                {
                    "command": [
                        "elim Der_x_y; prolog [ ex_intro2 refl_equal or_intror or_introl ] 8.",
                        "VernacExtend",
                        "b8f2a8a818bb02a2b90dc9a60355d6acc20f81ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_inv2",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros R x y.",
                        "VernacExtend",
                        "a5f6db08a1612f85b0b35d05f5342514ea04e721"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "unfold Derive_inv in |- *.",
                        "VernacExtend",
                        "2c8cf481a584e407da0dcfa1ec76c07167314068"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros x0 w Hyp_rec.",
                        "VernacExtend",
                        "3b61f0f88d295487933298076d28e0a864a614a5"
                    ]
                },
                {
                    "command": [
                        "unfold Derive_inv in |- *.",
                        "VernacExtend",
                        "2c8cf481a584e407da0dcfa1ec76c07167314068"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "exists w; trivial.",
                        "VernacExtend",
                        "f4a81d34b41deaa2e82b03ea1971927f575e1353"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derive_inv3",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "prolog [ Derive_inv1 Derive Derive_inv2 ] 7.",
                        "VernacExtend",
                        "c0b925b537d28f8d9fb29fbd28623ab6c6326a9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mon_X_Der_imp_inmon_X",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros X V1 R1 u v Regles_R1 Der_R1.",
                        "VernacExtend",
                        "3f8b7635f2d63583ced702a0a537519ab4b4bcbe"
                    ]
                },
                {
                    "command": [
                        "elim Der_R1; prolog [ Regles_inv2 inmonoid_cons_inv inmonoid_cons_inv2 inmonoid_cons inmonoid_Append ] 10.",
                        "VernacExtend",
                        "359fe23d19c6a4689a27577347dc92b7a8442806"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derivestar_refl",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derivestar_R",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "prolog [ Rstar_R ] 8.",
                        "VernacExtend",
                        "cd2bfb5cc4388f407c21216a337ff120f40ce480"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derivestar_inv",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "prolog [ Rstar_inv ] 6.",
                        "VernacExtend",
                        "4f4f308203fa05d05b9150ca5652907d0980eee6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Derivestar_inclus",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros R1 R2 u v inclus_R1_R2 Der_R1.",
                        "VernacExtend",
                        "f1b745e0fcf9aab3f63fd2513b9ff98495f8d997"
                    ]
                },
                {
                    "command": [
                        "unfold Derivestar, Rstar in Der_R1.",
                        "VernacExtend",
                        "66d1f0e69b8045ba3a7610e00f516829000539fa"
                    ]
                },
                {
                    "command": [
                        "pattern u, v in |- *.",
                        "VernacExtend",
                        "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
                    ]
                },
                {
                    "command": [
                        "apply Der_R1.",
                        "VernacExtend",
                        "80d68a0975401e47eef2c4ccab168e9304e0a79a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros; prolog [ Derive_inclus Derivestar_R ] 3.",
                        "VernacExtend",
                        "e1ff8ccb2e694a5fe6f08f94b52bddb47e9a5c60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LG_inv",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "unfold LG in |- *.",
                        "VernacExtend",
                        "343b9338ef9ed31b98c91f9133563b9abde9420d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H; auto.",
                        "VernacExtend",
                        "93275a139e0a54467a849c9ab468d4fd7beb5813"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LG_langage",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros; red in |- *; intros; elim H0; auto.",
                        "VernacExtend",
                        "8564324d70a50a77f6a05f0ad2eb6749686cec1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}