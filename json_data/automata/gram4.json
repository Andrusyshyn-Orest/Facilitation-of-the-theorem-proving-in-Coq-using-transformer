{
    "filename": "gram4.v",
    "coq_project": "automata",
    "vernac_cmds": [
        [
            "Require Import Ensf.",
            "VernacRequire",
            "0eef339a8702c2ffbe4b6d6652f4262e87a9cc51"
        ],
        [
            "Require Import Words.",
            "VernacRequire",
            "2af28d54c83d8fc6ccdd83d2efbe89ec4d6eff34"
        ],
        [
            "Require Import more_words.",
            "VernacRequire",
            "42bdc7795d087d1127136b152cdc0b4f61bae0b7"
        ],
        [
            "Require Import Rat.",
            "VernacRequire",
            "28038a51ba554dbb6dad365f44c61008c5c2fecf"
        ],
        [
            "Require Import need.",
            "VernacRequire",
            "9a1afe2eef8b71698863d342559c97dd02c5052b"
        ],
        [
            "Require Import fonctions.",
            "VernacRequire",
            "827b14fe5063132d9c325153db4f6b45dd7f4e8a"
        ],
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require Import gram.",
            "VernacRequire",
            "c5b6ab81d174d68ec0a03ed91f4647fd7b3484b0"
        ],
        [
            "Require Import gram2.",
            "VernacRequire",
            "4d73cee01222a79bb056e5d1ba044ef4bceefd3a"
        ],
        [
            "Require Import gram3.",
            "VernacRequire",
            "f6f9fa2aead0cd03f423d7edc013f7b2cbe89bac"
        ],
        [
            "Section gram4.",
            "VernacBeginSection",
            "641fbe11fadcb6e5915ba1ef72dac7d8ec49a6d7"
        ],
        [
            "Variable X V1 R1 : Ensf.",
            "VernacAssumption",
            "23ed2767b06a702bf1d9fcc2350a43e7518903b9"
        ],
        [
            "Variable S1 : Elt.",
            "VernacAssumption",
            "e20e86027b709321ae0fa1d153fe09676aed0976"
        ],
        [
            "Variable V2 R2 : Ensf.",
            "VernacAssumption",
            "22b3158a9040186defc25d909134a07caa8433dc"
        ],
        [
            "Variable S2 : Elt.",
            "VernacAssumption",
            "0387d5d4de934ad3a81671cd855535127ca46e29"
        ],
        [
            "Variable S : Elt.",
            "VernacAssumption",
            "7ab95e904d5ef8f5ea67ef4310a5f61f427e0cfb"
        ],
        [
            "Let C := Gunion_disj_p V1 R1 S1 V2 R2 S2 S.",
            "VernacDefinition",
            "de6815105d79d4f30c01b279b29366103df28e20"
        ],
        [
            "Let Vu := fst C.",
            "VernacDefinition",
            "03991c35c64d049efb4568b382f4a730f390330c"
        ],
        [
            "Let C' := snd C.",
            "VernacDefinition",
            "274da6101891ff958f2fa1a74b634cb062c0dfa7"
        ],
        [
            "Let Ru := fst C'.",
            "VernacDefinition",
            "1bbc1e97733ddf25fa3efd4580f7a84c707ea5b1"
        ],
        [
            "Let Su := snd C'.",
            "VernacDefinition",
            "8370ea05f66a3b77476927bc1e0cdbdc2fc8fa7c"
        ],
        [
            "Lemma inter_X_V1_u_V2 : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter X (union V1 V2) empty.",
            "VernacStartTheoremProof",
            "f5320813bb92cd5ceabe8a97da3351183bfd45f5"
        ],
        [
            "prolog [ isGram2 union_inter ] 5.",
            "VernacExtend",
            "9b184d3299354dc8e904cc198452963a711788c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_X_Vu_d : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> ~ dans S X -> inter X Vu empty.",
            "VernacStartTheoremProof",
            "32d1cf1909caa191eb23fa81beefdf3682710dc0"
        ],
        [
            "intros G_1 G_2 N_dans_S_X.",
            "VernacExtend",
            "3525396d0df4817411f057b84997cabe327db855"
        ],
        [
            "unfold inter in |- *.",
            "VernacExtend",
            "0cda10a713e20ded51dc208d6b76935d284c91eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x dans_x_X dans_x_Vu.",
            "VernacExtend",
            "c048951601e14dff22a86c3f67f31bdde5491008"
        ],
        [
            "absurd (dans x X).",
            "VernacExtend",
            "582d7f20d137365197728daab9577a6698176fe3"
        ],
        [
            "cut (S = x :>Elt \\/ dans x (union V1 V2)).",
            "VernacExtend",
            "389ffac90a4d2e187df9d57449318a577876a907"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros egal_S_x.",
            "VernacExtend",
            "191a26c048641c30babbcc353007408fa368a271"
        ],
        [
            "rewrite <- egal_S_x; assumption.",
            "VernacExtend",
            "a4cc4ee22f275773c85826f6882c13638ec3ceb5"
        ],
        [
            "intro dans_x_V1_u_V2.",
            "VernacExtend",
            "36a50c25f4b9044358860b76a7dd8a1d2e6ee2f0"
        ],
        [
            "prolog [ inter_X_V1_u_V2 sym_inter inter_dans ] 4.",
            "VernacExtend",
            "25dff9d0575b0b4d9d467933081994f4b5e6741a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_Regles : isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> Regles X Vu Ru.",
            "VernacStartTheoremProof",
            "8f33905035a0e62c8fc79249847226b328858183"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Vu, Ru in |- *; simpl in |- *.",
            "VernacExtend",
            "53e3031207a558a29c954f45833171cb3070975e"
        ],
        [
            "apply Regles_add.",
            "VernacExtend",
            "e4f96a69ee905aed73c24977792529d14f0f92d7"
        ],
        [
            "apply Regles_add.",
            "VernacExtend",
            "e4f96a69ee905aed73c24977792529d14f0f92d7"
        ],
        [
            "apply Regles_add2.",
            "VernacExtend",
            "027575f39f780ad1e64c3c937959aa32527d0d60"
        ],
        [
            "change (Regles X (fst (Gunion V1 R1 V2 R2)) (snd (Gunion V1 R1 V2 R2))) in |- *.",
            "VernacExtend",
            "95eb28a1c01d0afb887057123978df0acd928180"
        ],
        [
            "prolog [ Gunion_Regles ] 2.",
            "VernacExtend",
            "9a78e7bcea171444dff4718d12bbf2ec7ec0b5dd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply inmonoid_cons.",
            "VernacExtend",
            "ece87cd96e9adb5f467fa1cc2276038fd3bea3b9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "cut (dans S2 V2); [ auto | prolog [ isGram3 ] 2 ].",
            "VernacExtend",
            "0038718c423a71226c796338f264081d859e2db2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply inmonoid_cons.",
            "VernacExtend",
            "ece87cd96e9adb5f467fa1cc2276038fd3bea3b9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "cut (dans S1 V1); [ auto | prolog [ isGram3 ] 2 ].",
            "VernacExtend",
            "0cf9aba56dc9ed49ba500315263001727256e1ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_Der_d : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> Regles X V1 R1 -> Regles X V2 R2 -> inter (union X V1) V2 empty -> forall u v : Word, Derive Ru u v -> inmonoid (union X V1) u -> Derive R1 u v.",
            "VernacStartTheoremProof",
            "f5e80743dff71a77295d28c008a07c5ca332d8b1"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 Re_1 Re_2 inter_X_V1_V2_empty u v Der_Ru_u.",
            "VernacExtend",
            "89bc737039e9926e7cff2886aac6a7339263bf61"
        ],
        [
            "elim Der_Ru_u.",
            "VernacExtend",
            "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
        ],
        [
            "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
            "VernacExtend",
            "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
        ],
        [
            "apply Derive1.",
            "VernacExtend",
            "a314a3be2884376f829b2527f1b21e123a904876"
        ],
        [
            "cut (couple S (word (cons S1 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (add (couple S (word (cons S2 nil))) (union R1 R2))).",
            "VernacExtend",
            "64494d7bd3730906cadf4a620a9d7c628c87bc11"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro egal_S.",
            "VernacExtend",
            "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
        ],
        [
            "absurd (dans S X \\/ dans S V1).",
            "VernacExtend",
            "72b21203b0b325446505e5b492209b4f065e891e"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "exact N_dans_X.",
            "VernacExtend",
            "1158def7cb537cfe40165721856bbdf6ef965ca3"
        ],
        [
            "exact N_dans_V1.",
            "VernacExtend",
            "3ebb6514041c6201d3982815971650cd3f4de8c6"
        ],
        [
            "apply dans_union.",
            "VernacExtend",
            "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
        ],
        [
            "replace S with A.",
            "VernacExtend",
            "d22eb5e853bcabe1f98d998af8fad0d47520473a"
        ],
        [
            "prolog [ inmonoid_cons_inv2 ] 2.",
            "VernacExtend",
            "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
        ],
        [
            "injection egal_S; auto.",
            "VernacExtend",
            "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
        ],
        [
            "intro dans_couple_add.",
            "VernacExtend",
            "cf45d1c3c3b647ca68fe74fc5e08faebe8e1e30a"
        ],
        [
            "cut (couple S (word (cons S2 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (union R1 R2)).",
            "VernacExtend",
            "2fbd0bfff28f6113e0b26c11c121e7b6eb3c43bb"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro egal_S.",
            "VernacExtend",
            "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
        ],
        [
            "absurd (dans S X \\/ dans S V1).",
            "VernacExtend",
            "72b21203b0b325446505e5b492209b4f065e891e"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intro temp; elim temp; auto.",
            "VernacExtend",
            "6f85d5c0697f1509b1e69d0d071745773359a01b"
        ],
        [
            "apply dans_union.",
            "VernacExtend",
            "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
        ],
        [
            "replace S with A.",
            "VernacExtend",
            "d22eb5e853bcabe1f98d998af8fad0d47520473a"
        ],
        [
            "prolog [ inmonoid_cons_inv2 ] 2.",
            "VernacExtend",
            "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
        ],
        [
            "injection egal_S; auto.",
            "VernacExtend",
            "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
        ],
        [
            "intro dans_couple_union.",
            "VernacExtend",
            "c3162ca608120d6e8c4ec2a16bb4a0f5c49b747a"
        ],
        [
            "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
            "VernacExtend",
            "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro dans_R2.",
            "VernacExtend",
            "f74bc22d45f071ae7e5220095cdf7f3122f6be4b"
        ],
        [
            "absurd (inter (union X V1) V2 empty).",
            "VernacExtend",
            "e0b89849b926aa42abf85530941fb3ba029c2a5c"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold inter in |- *.",
            "VernacExtend",
            "0cda10a713e20ded51dc208d6b76935d284c91eb"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros HH temp; elim temp; clear temp; intros HHH HHHH.",
            "VernacExtend",
            "93069865253ad19d9992bbebe88753da380fd6d6"
        ],
        [
            "prolog [ Regles_inv1 inmonoid_cons_inv2 dans_empty_imp_P ] 4.",
            "VernacExtend",
            "3f49ce0584d56c2852ae9971c73dea54a65b4bd3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "prolog [ inmonoid_cons_inv Derive2 ] 10.",
            "VernacExtend",
            "7791f9d1ce2bab85546df3df6e596350ada764e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_R1_d : forall u v : Word, Regles X V1 R1 -> Derive R1 u v -> inmonoid (union X V1) u -> inmonoid (union X V1) v.",
            "VernacStartTheoremProof",
            "33bffaec5c08cfe85e5457a74b41773b8cdeed1d"
        ],
        [
            "prolog [ in_mon_X_Der_imp_inmon_X ] 7.",
            "VernacExtend",
            "78dee0f904059c81fa2e906709a675806d8b4395"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_d : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> forall u v : Word, isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> inmonoid (union X V1) u -> Derive Ru u v -> inmonoid (union X V1) v.",
            "VernacStartTheoremProof",
            "336b0d95fedfef7063f01c0caa855ca7eb787e92"
        ],
        [
            "prolog [ isGram2 isGram4 inter_union inmon_Der_imp_Der_d inmon_Der_imp_inmon_R1_d ] 15.",
            "VernacExtend",
            "1632a5e9436097d5f99d9f06271da41322641e5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_Derivestar : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> forall u v : Word, Derivestar Ru u v -> inmonoid (union X V1) u -> Derivestar R1 u v.",
            "VernacStartTheoremProof",
            "ed8b7fac9657b3b24d85a707789479f0b2ef4d81"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
            "VernacExtend",
            "c0ce89890de2d7654f7abd358f49eadf1d2be63d"
        ],
        [
            "pattern u, v in |- *.",
            "VernacExtend",
            "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
        ],
        [
            "apply Derivestar_Ru.",
            "VernacExtend",
            "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R1_v0 inmon_u0.",
            "VernacExtend",
            "67bb24b1ec9f9f5794a47ebdfc02cc7703b3cf3e"
        ],
        [
            "apply Rstar_R with v0; prolog [ isGram2 inter_union isGram4 inmon_Der_imp_Der_d inmon_Der_imp_inmon_d ] 4.",
            "VernacExtend",
            "059b2465b63f2a8e477bd5f39424942e3c225879"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_Der_d2 : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> Regles X V1 R1 -> Regles X V2 R2 -> inter (union X V2) V1 empty -> forall u v : Word, Derive Ru u v -> inmonoid (union X V2) u -> Derive R2 u v.",
            "VernacStartTheoremProof",
            "0fc02ed1666a19d15b72a6be343faea030811186"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 Re_1 Re_2 inter_X_V2_V1_empty u v Der_Ru_u.",
            "VernacExtend",
            "6165b82cbe79aec981154426a24b2a23dce0fee0"
        ],
        [
            "elim Der_Ru_u.",
            "VernacExtend",
            "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
        ],
        [
            "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
            "VernacExtend",
            "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
        ],
        [
            "apply Derive1.",
            "VernacExtend",
            "a314a3be2884376f829b2527f1b21e123a904876"
        ],
        [
            "cut (couple S (word (cons S1 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (add (couple S (word (cons S2 nil))) (union R1 R2))).",
            "VernacExtend",
            "64494d7bd3730906cadf4a620a9d7c628c87bc11"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro egal_S.",
            "VernacExtend",
            "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
        ],
        [
            "absurd (dans S X \\/ dans S V2).",
            "VernacExtend",
            "04003a326b2f9a78f8a8fdc9946e92dd4a1c266d"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply dans_union.",
            "VernacExtend",
            "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
        ],
        [
            "replace S with A.",
            "VernacExtend",
            "d22eb5e853bcabe1f98d998af8fad0d47520473a"
        ],
        [
            "prolog [ inmonoid_cons_inv2 ] 2.",
            "VernacExtend",
            "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
        ],
        [
            "injection egal_S; auto.",
            "VernacExtend",
            "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
        ],
        [
            "intro dans_couple_add.",
            "VernacExtend",
            "cf45d1c3c3b647ca68fe74fc5e08faebe8e1e30a"
        ],
        [
            "cut (couple S (word (cons S2 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (union R1 R2)).",
            "VernacExtend",
            "2fbd0bfff28f6113e0b26c11c121e7b6eb3c43bb"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro egal_S.",
            "VernacExtend",
            "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
        ],
        [
            "absurd (dans S X \\/ dans S V2).",
            "VernacExtend",
            "04003a326b2f9a78f8a8fdc9946e92dd4a1c266d"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply dans_union.",
            "VernacExtend",
            "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
        ],
        [
            "replace S with A.",
            "VernacExtend",
            "d22eb5e853bcabe1f98d998af8fad0d47520473a"
        ],
        [
            "prolog [ inmonoid_cons_inv2 ] 2.",
            "VernacExtend",
            "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
        ],
        [
            "injection egal_S; auto.",
            "VernacExtend",
            "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
        ],
        [
            "intro dans_couple_union.",
            "VernacExtend",
            "c3162ca608120d6e8c4ec2a16bb4a0f5c49b747a"
        ],
        [
            "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
            "VernacExtend",
            "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro dans_R1.",
            "VernacExtend",
            "3467c219901f4e44579bd5dbe0e624e5f9768d54"
        ],
        [
            "absurd (inter (union X V2) V1 empty).",
            "VernacExtend",
            "fa85989802afd26eeb108b42a7b4d899928f73e4"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold inter in |- *.",
            "VernacExtend",
            "0cda10a713e20ded51dc208d6b76935d284c91eb"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros inc_empt temp; elim temp; clear temp.",
            "VernacExtend",
            "28243b3d8bf5c4751b2cdca691dbef09f2d2bd30"
        ],
        [
            "intros incl_empty_V1 imp_dans_empty.",
            "VernacExtend",
            "7377593a0dfa0ad55778ff380e0fd9f7c0d73667"
        ],
        [
            "apply dans_empty_imp_P with A.",
            "VernacExtend",
            "9c4b46c9a342786ba5dda394a0e60a9ba541dfb2"
        ],
        [
            "apply imp_dans_empty; prolog [ Regles_inv1 inmonoid_cons_inv2 ] 4.",
            "VernacExtend",
            "2f140f2efc9a137d783a82990c4a9621f710820d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "prolog [ inmonoid_cons_inv Derive2 ] 10.",
            "VernacExtend",
            "7791f9d1ce2bab85546df3df6e596350ada764e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_R2_d : forall u v : Word, Regles X V2 R2 -> Derive R2 u v -> inmonoid (union X V2) u -> inmonoid (union X V2) v.",
            "VernacStartTheoremProof",
            "363c2bf8de0077cdf316f18fa66c5d2435d9ad4c"
        ],
        [
            "prolog [ in_mon_X_Der_imp_inmon_X ] 10.",
            "VernacExtend",
            "75c05c0e90a991db90e06c7d5faae0625c2d2a5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inmon_Der_imp_inmon_d2 : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> forall u v : Word, isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> inmonoid (union X V2) u -> Derive Ru u v -> inmonoid (union X V2) v.",
            "VernacStartTheoremProof",
            "2afdff580f49e528b32e12198f55da18bf6f8248"
        ],
        [
            "prolog [ sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der_d2 inmon_Der_imp_inmon_R2_d ] 15.",
            "VernacExtend",
            "563ce6a106d1995f705d2df332e8101d728e57e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_Derivestar2 : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> forall u v : Word, Derivestar Ru u v -> inmonoid (union X V2) u -> Derivestar R2 u v.",
            "VernacStartTheoremProof",
            "165fde0a4053517f46d1b920d85fea8f867d34fc"
        ],
        [
            "unfold Derivestar in |- *.",
            "VernacExtend",
            "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
            "VernacExtend",
            "c0ce89890de2d7654f7abd358f49eadf1d2be63d"
        ],
        [
            "pattern u, v in |- *.",
            "VernacExtend",
            "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
        ],
        [
            "apply Derivestar_Ru.",
            "VernacExtend",
            "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R2_v0 inmon_u0.",
            "VernacExtend",
            "a7dcd96b702b4ad18de9592a9830812e54cd3862"
        ],
        [
            "apply Rstar_R with v0.",
            "VernacExtend",
            "eeb7b3c39e07ad9435e888ba61edc8959e8edc03"
        ],
        [
            "prolog [ sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der_d2 ] 4.",
            "VernacExtend",
            "074004e8eb00b098cf9fbdd3fcaa9cae75086eb4"
        ],
        [
            "prolog [ inmon_Der_imp_inmon_d2 ] 3.",
            "VernacExtend",
            "79b2d0c5d51568e68e477ff3aea1e0f7adb85df8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_Derive1 : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> forall u : Word, Derive Ru (cons S nil) u -> cons S1 nil = u :>Word \\/ cons S2 nil = u :>Word.",
            "VernacStartTheoremProof",
            "02ec8ec3c915c8dbdd3787664b1775c37337f374"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 u Derive_Ru.",
            "VernacExtend",
            "a725e23546a1c8677685afb7ecdf16e9be2dfa35"
        ],
        [
            "cut (Derive_inv Ru (cons S nil) u).",
            "VernacExtend",
            "928a117a180a631a9e794b8cdfabf9a54c21daa2"
        ],
        [
            "unfold Derive_inv in |- *.",
            "VernacExtend",
            "2c8cf481a584e407da0dcfa1ec76c07167314068"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro temp; elim temp; clear temp; intro temp; elim temp; clear temp.",
            "VernacExtend",
            "680d3e1ec7ddeee5e8b7e7bdef33ea2788c2238e"
        ],
        [
            "intros x dans_S_x_Ru temp.",
            "VernacExtend",
            "1dbb15ac06c19048fac5c4f32053be241accfcdb"
        ],
        [
            "elim temp; clear temp.",
            "VernacExtend",
            "d6e9c47c846e81ac351718cecfd83da68dcab03e"
        ],
        [
            "intros x0 egal_S_x0_S_nil egal_Append_x_x0_u.",
            "VernacExtend",
            "831cdb5db396e0f985a0aae56ebaba1e6c423af3"
        ],
        [
            "replace u with x.",
            "VernacExtend",
            "fb96eb02be044397e9b94dab9b60b182186db0be"
        ],
        [
            "cut (couple S (word (cons S1 nil)) = couple S (word x) :>Elt \\/ dans (couple S (word x)) (add (couple S (word (cons S2 nil))) (union R1 R2))).",
            "VernacExtend",
            "6cf22b0f61f7cf2812176a19811f41dfc2cd1dfa"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro egal_S.",
            "VernacExtend",
            "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
        ],
        [
            "injection egal_S; auto.",
            "VernacExtend",
            "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
        ],
        [
            "intro dans_couple_add.",
            "VernacExtend",
            "cf45d1c3c3b647ca68fe74fc5e08faebe8e1e30a"
        ],
        [
            "cut (couple S (word (cons S2 nil)) = couple S (word x) :>Elt \\/ dans (couple S (word x)) (union R1 R2)).",
            "VernacExtend",
            "23b6e7a67c630e78164095d9f1f6b69816ce1733"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro egal_S.",
            "VernacExtend",
            "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
        ],
        [
            "injection egal_S; auto.",
            "VernacExtend",
            "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
        ],
        [
            "intro dans_couple_union.",
            "VernacExtend",
            "c3162ca608120d6e8c4ec2a16bb4a0f5c49b747a"
        ],
        [
            "cut (dans (couple S (word x)) R1 \\/ dans (couple S (word x)) R2).",
            "VernacExtend",
            "5f9a0dea4af4cc18f57890aa318420eaddd714de"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intro dans_R1.",
            "VernacExtend",
            "3467c219901f4e44579bd5dbe0e624e5f9768d54"
        ],
        [
            "absurd (dans S V1).",
            "VernacExtend",
            "c57c609e60fce6c371615eea783c8e593cbbfd12"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "prolog [ isGram4 Regles_inv1 ] 3.",
            "VernacExtend",
            "17df80206bcc2aee0c8ae5df41a59912cc9e9421"
        ],
        [
            "intros dans_R2.",
            "VernacExtend",
            "325b731b63d02f4af7e2866b83db6d40651ccdf7"
        ],
        [
            "absurd (dans S V2).",
            "VernacExtend",
            "451fb74a02ea1db7987b200e5465b90bd34e5e40"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "prolog [ isGram4 Regles_inv1 ] 3.",
            "VernacExtend",
            "17df80206bcc2aee0c8ae5df41a59912cc9e9421"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace x with (Append x nil).",
            "VernacExtend",
            "6ff023db829f925c24d9af8af5efc14f3a715582"
        ],
        [
            "replace nil with x0.",
            "VernacExtend",
            "1ff5983a6c10a3a0965bb1eaa84f26677e25a098"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cons_cons_inv2 with S S; assumption.",
            "VernacExtend",
            "e4a71a91210dc9ac52913ff8083198e8cdbe06fa"
        ],
        [
            "apply Append_w_nil.",
            "VernacExtend",
            "5793e89ace87609f7bf7ed780b07409f8699b85e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (Derive_inv Ru nil x).",
            "VernacExtend",
            "bd11b6d3c692641d17299635ad8085784c7f165c"
        ],
        [
            "unfold Derive_inv in |- *.",
            "VernacExtend",
            "2c8cf481a584e407da0dcfa1ec76c07167314068"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Gunion_disj_Derive1.",
            "VernacHints",
            "5b08f5b48ae7eb8b00178a110606821d69e0280d"
        ],
        [
            "Lemma Gunion_disj_Derivestar_S : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> forall u : Word, Derivestar Ru (cons S nil) u -> cons S nil = u :>Word \\/ Derivestar R1 (cons S1 nil) u \\/ Derivestar R2 (cons S2 nil) u.",
            "VernacStartTheoremProof",
            "d7c34c5dedc27521b7216c154f1c41282b3e10e9"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty u Derivestar_Ru.",
            "VernacExtend",
            "e4cb8cbb384224176da23ed9bfa2f1abf18b0d9a"
        ],
        [
            "cut (cons S nil = u :>Word \\/ (exists2 w : Word, Derive Ru (cons S nil) w & Derivestar Ru w u)).",
            "VernacExtend",
            "aa13f0570bbd5bb4f0659a325ec95c578b20d8a4"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro temp; elim temp; clear temp.",
            "VernacExtend",
            "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
        ],
        [
            "intros x Der_Ru_cons_S_nil_x Derivestar_Ru_x_u.",
            "VernacExtend",
            "3271326edf850ef7c78c587e2f4360f978ce456b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "cut (cons S1 nil = x :>Word \\/ cons S2 nil = x :>Word).",
            "VernacExtend",
            "254ed026d02c727acbfc091812ce57618d9341ae"
        ],
        [
            "intro temp; elim temp; clear temp; intro x_egal; rewrite x_egal.",
            "VernacExtend",
            "6ba5747818689a5ba2cc78c3689fbde8180f31df"
        ],
        [
            "apply or_introl.",
            "VernacExtend",
            "bdd61b016cae40d633ce4ecb2446056ed0b07202"
        ],
        [
            "apply Gunion_disj_Derivestar; [ auto | auto | auto | auto | auto | auto | auto | idtac ].",
            "VernacExtend",
            "7f4a53c7b1fc4ee6ce7f5eacb7a04942ae480ed5"
        ],
        [
            "rewrite <- x_egal; cut (dans S1 V1).",
            "VernacExtend",
            "ab9738b3a6cb9344ca8627fa524beb7a1c10f8cd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "prolog [ isGram3 ] 2.",
            "VernacExtend",
            "036e38d67799527548ba7937f3e9c037bc63e6aa"
        ],
        [
            "apply or_intror.",
            "VernacExtend",
            "0d5e5236b6bbcad3b89db1cd796c9f4a4bdbeca4"
        ],
        [
            "apply Gunion_disj_Derivestar2; [ auto | auto | auto | auto | auto | auto | auto | idtac ].",
            "VernacExtend",
            "c605e38d5a0b3aba10596edef2f8b9bee06bd73e"
        ],
        [
            "rewrite <- x_egal; cut (dans S2 V2).",
            "VernacExtend",
            "0e7c11e47c9625de6fec19b7a573ad394eb39991"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "prolog [ isGram3 ] 2.",
            "VernacExtend",
            "036e38d67799527548ba7937f3e9c037bc63e6aa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Gunion_disj_Derivestar_S.",
            "VernacHints",
            "35f450b37d92ef45b75427b9145c7237a76b99f1"
        ],
        [
            "Lemma Gunion_disj_LG_inclus1 : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> l_inclus (LG X Vu Ru S) (lunion (LG X V1 R1 S1) (LG X V2 R2 S2)).",
            "VernacStartTheoremProof",
            "d3cb17dcc2964951bda7725aafd563dff4e462df"
        ],
        [
            "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty.",
            "VernacExtend",
            "1fa8cc989628dd717428dee56a2edd21bb91ac6d"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold LG in |- *.",
            "VernacExtend",
            "343b9338ef9ed31b98c91f9133563b9abde9420d"
        ],
        [
            "intros w temp; elim temp; clear temp; intros Der_Ru inmonoid_X_w.",
            "VernacExtend",
            "16a33eb74932197b1aeb298c76d58565b8d115df"
        ],
        [
            "unfold lunion in |- *.",
            "VernacExtend",
            "60ae3ccc9ba53a14998e572dc65f431a57230fb2"
        ],
        [
            "elimtype (cons S nil = w :>Word \\/ Derivestar R1 (cons S1 nil) w \\/ Derivestar R2 (cons S2 nil) w).",
            "VernacExtend",
            "476895b91083b6e61bc706387c93acec98a3692f"
        ],
        [
            "intro eg_cons_S_nil_w.",
            "VernacExtend",
            "359a394b3b3ff73c7548e373de8c4c91416a71de"
        ],
        [
            "absurd (dans S X).",
            "VernacExtend",
            "8165d5d6cac30e4beb07d3523d93d8441d9d9715"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply inmonoid_cons_inv2 with nil.",
            "VernacExtend",
            "5f2f0ae74ced578d1d015477303826900661defc"
        ],
        [
            "rewrite eg_cons_S_nil_w; assumption.",
            "VernacExtend",
            "fbfb5e8ca42e884385af224f1deec3f3641fead3"
        ],
        [
            "intro temp; elim temp; clear temp; auto.",
            "VernacExtend",
            "bbac338b6a249359d8bf56f3b1fa62a6f22af895"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_LG_inclus2 : l_inclus (LG X V1 R1 S1) (LG X Vu Ru S).",
            "VernacStartTheoremProof",
            "2d433861bab6aef36ab9fef4ea8838cfd9c7f5df"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold LG in |- *.",
            "VernacExtend",
            "343b9338ef9ed31b98c91f9133563b9abde9420d"
        ],
        [
            "intros w temp; elim temp; clear temp.",
            "VernacExtend",
            "513fd97c6bd190b5716f14fc1a3b61060689737c"
        ],
        [
            "intros Der_Ru inmonoid_X_w.",
            "VernacExtend",
            "420c8df9d77d13e21f86a05ef80bb352c5e39651"
        ],
        [
            "unfold Ru in |- *; simpl in |- *.",
            "VernacExtend",
            "f4b235b00b7cf53461349b62971c404d11e31f80"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Derivestar_R with (cons S1 nil).",
            "VernacExtend",
            "428d2e62305d7a86c29298edc361b31469015f54"
        ],
        [
            "replace (cons S1 nil) with (Append (cons S1 nil) nil).",
            "VernacExtend",
            "0e597a0bfe41cbf82b269c3169ea802ce39a9f4e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Derivestar_inclus with R1; auto.",
            "VernacExtend",
            "5b386786591c7477a5b15e7fbaed81cf515811db"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_LG_inclus3 : l_inclus (LG X V2 R2 S2) (LG X Vu Ru S).",
            "VernacStartTheoremProof",
            "f17051d7d9bf03c6431e42350035ddcd5d5ea2aa"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold LG in |- *.",
            "VernacExtend",
            "343b9338ef9ed31b98c91f9133563b9abde9420d"
        ],
        [
            "intros w temp; elim temp; clear temp.",
            "VernacExtend",
            "513fd97c6bd190b5716f14fc1a3b61060689737c"
        ],
        [
            "intros Der_Ru inmonoid_X_w.",
            "VernacExtend",
            "420c8df9d77d13e21f86a05ef80bb352c5e39651"
        ],
        [
            "unfold Ru in |- *; simpl in |- *.",
            "VernacExtend",
            "f4b235b00b7cf53461349b62971c404d11e31f80"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Derivestar_R with (cons S2 nil).",
            "VernacExtend",
            "d0c889b983d016c03fb2a89a8e6d8170ed00b692"
        ],
        [
            "replace (cons S2 nil) with (Append (cons S2 nil) nil).",
            "VernacExtend",
            "a5dd60648593ffe477cd8247ceff66a814ec9898"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Derivestar_inclus with R2; auto.",
            "VernacExtend",
            "952ecfadead7ab10be774e868094e3aa4dc2b73b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_LG_inclus4 : l_inclus (lunion (LG X V1 R1 S1) (LG X V2 R2 S2)) (LG X Vu Ru S).",
            "VernacStartTheoremProof",
            "ecc37cb7c60e8846116fe3f8e671ec6c97d94c21"
        ],
        [
            "unfold l_inclus, lunion in |- *.",
            "VernacExtend",
            "3e6080f4b82ca2a1f522e3e12107e1735198ea65"
        ],
        [
            "intros w temp; elim temp; clear temp; intro LG_w.",
            "VernacExtend",
            "53537d404a546f38732a33c9546ceb628d712e0c"
        ],
        [
            "apply Gunion_disj_LG_inclus2; assumption.",
            "VernacExtend",
            "3821bd7e91fa20e50ed3da4b3e245ea5069edf47"
        ],
        [
            "apply Gunion_disj_LG_inclus3; assumption.",
            "VernacExtend",
            "ea96ae9857527dae17f83f59de565b85cec6c91b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gunion_disj_LG : ~ dans S X -> ~ dans S V1 -> ~ dans S V2 -> isGram X V1 R1 S1 -> isGram X V2 R2 S2 -> inter V1 V2 empty -> l_egal (LG X Vu Ru S) (lunion (LG X V1 R1 S1) (LG X V2 R2 S2)).",
            "VernacStartTheoremProof",
            "c9904b861c604dc06c0bad983d7fd9a1d1d6426a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold l_egal in |- *; split.",
            "VernacExtend",
            "5422a47abebfb2d0d4810e27965c00554a362126"
        ],
        [
            "apply Gunion_disj_LG_inclus1; assumption.",
            "VernacExtend",
            "db04d8e5f796d28d36b94e0a4ccb9f4c2892f576"
        ],
        [
            "exact Gunion_disj_LG_inclus4.",
            "VernacExtend",
            "b1328d5d294d107365432969a8b530558e0c4360"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End gram4.",
            "VernacEndSegment",
            "4bcbc3380eaef7957e3eceaaa8608522210ce019"
        ]
    ],
    "proofs": [
        {
            "name": "inter_X_V1_u_V2",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "prolog [ isGram2 union_inter ] 5.",
                        "VernacExtend",
                        "9b184d3299354dc8e904cc198452963a711788c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_X_Vu_d",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros G_1 G_2 N_dans_S_X.",
                        "VernacExtend",
                        "3525396d0df4817411f057b84997cabe327db855"
                    ]
                },
                {
                    "command": [
                        "unfold inter in |- *.",
                        "VernacExtend",
                        "0cda10a713e20ded51dc208d6b76935d284c91eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x dans_x_X dans_x_Vu.",
                        "VernacExtend",
                        "c048951601e14dff22a86c3f67f31bdde5491008"
                    ]
                },
                {
                    "command": [
                        "absurd (dans x X).",
                        "VernacExtend",
                        "582d7f20d137365197728daab9577a6698176fe3"
                    ]
                },
                {
                    "command": [
                        "cut (S = x :>Elt \\/ dans x (union V1 V2)).",
                        "VernacExtend",
                        "389ffac90a4d2e187df9d57449318a577876a907"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros egal_S_x.",
                        "VernacExtend",
                        "191a26c048641c30babbcc353007408fa368a271"
                    ]
                },
                {
                    "command": [
                        "rewrite <- egal_S_x; assumption.",
                        "VernacExtend",
                        "a4cc4ee22f275773c85826f6882c13638ec3ceb5"
                    ]
                },
                {
                    "command": [
                        "intro dans_x_V1_u_V2.",
                        "VernacExtend",
                        "36a50c25f4b9044358860b76a7dd8a1d2e6ee2f0"
                    ]
                },
                {
                    "command": [
                        "prolog [ inter_X_V1_u_V2 sym_inter inter_dans ] 4.",
                        "VernacExtend",
                        "25dff9d0575b0b4d9d467933081994f4b5e6741a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_Regles",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Vu, Ru in |- *; simpl in |- *.",
                        "VernacExtend",
                        "53e3031207a558a29c954f45833171cb3070975e"
                    ]
                },
                {
                    "command": [
                        "apply Regles_add.",
                        "VernacExtend",
                        "e4f96a69ee905aed73c24977792529d14f0f92d7"
                    ]
                },
                {
                    "command": [
                        "apply Regles_add.",
                        "VernacExtend",
                        "e4f96a69ee905aed73c24977792529d14f0f92d7"
                    ]
                },
                {
                    "command": [
                        "apply Regles_add2.",
                        "VernacExtend",
                        "027575f39f780ad1e64c3c937959aa32527d0d60"
                    ]
                },
                {
                    "command": [
                        "change (Regles X (fst (Gunion V1 R1 V2 R2)) (snd (Gunion V1 R1 V2 R2))) in |- *.",
                        "VernacExtend",
                        "95eb28a1c01d0afb887057123978df0acd928180"
                    ]
                },
                {
                    "command": [
                        "prolog [ Gunion_Regles ] 2.",
                        "VernacExtend",
                        "9a78e7bcea171444dff4718d12bbf2ec7ec0b5dd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply inmonoid_cons.",
                        "VernacExtend",
                        "ece87cd96e9adb5f467fa1cc2276038fd3bea3b9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "cut (dans S2 V2); [ auto | prolog [ isGram3 ] 2 ].",
                        "VernacExtend",
                        "0038718c423a71226c796338f264081d859e2db2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply inmonoid_cons.",
                        "VernacExtend",
                        "ece87cd96e9adb5f467fa1cc2276038fd3bea3b9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "cut (dans S1 V1); [ auto | prolog [ isGram3 ] 2 ].",
                        "VernacExtend",
                        "0cf9aba56dc9ed49ba500315263001727256e1ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_Der_d",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 Re_1 Re_2 inter_X_V1_V2_empty u v Der_Ru_u.",
                        "VernacExtend",
                        "89bc737039e9926e7cff2886aac6a7339263bf61"
                    ]
                },
                {
                    "command": [
                        "elim Der_Ru_u.",
                        "VernacExtend",
                        "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
                        "VernacExtend",
                        "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
                    ]
                },
                {
                    "command": [
                        "apply Derive1.",
                        "VernacExtend",
                        "a314a3be2884376f829b2527f1b21e123a904876"
                    ]
                },
                {
                    "command": [
                        "cut (couple S (word (cons S1 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (add (couple S (word (cons S2 nil))) (union R1 R2))).",
                        "VernacExtend",
                        "64494d7bd3730906cadf4a620a9d7c628c87bc11"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro egal_S.",
                        "VernacExtend",
                        "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S X \\/ dans S V1).",
                        "VernacExtend",
                        "72b21203b0b325446505e5b492209b4f065e891e"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "exact N_dans_X.",
                        "VernacExtend",
                        "1158def7cb537cfe40165721856bbdf6ef965ca3"
                    ]
                },
                {
                    "command": [
                        "exact N_dans_V1.",
                        "VernacExtend",
                        "3ebb6514041c6201d3982815971650cd3f4de8c6"
                    ]
                },
                {
                    "command": [
                        "apply dans_union.",
                        "VernacExtend",
                        "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
                    ]
                },
                {
                    "command": [
                        "replace S with A.",
                        "VernacExtend",
                        "d22eb5e853bcabe1f98d998af8fad0d47520473a"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv2 ] 2.",
                        "VernacExtend",
                        "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
                    ]
                },
                {
                    "command": [
                        "injection egal_S; auto.",
                        "VernacExtend",
                        "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
                    ]
                },
                {
                    "command": [
                        "intro dans_couple_add.",
                        "VernacExtend",
                        "cf45d1c3c3b647ca68fe74fc5e08faebe8e1e30a"
                    ]
                },
                {
                    "command": [
                        "cut (couple S (word (cons S2 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (union R1 R2)).",
                        "VernacExtend",
                        "2fbd0bfff28f6113e0b26c11c121e7b6eb3c43bb"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro egal_S.",
                        "VernacExtend",
                        "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S X \\/ dans S V1).",
                        "VernacExtend",
                        "72b21203b0b325446505e5b492209b4f065e891e"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; auto.",
                        "VernacExtend",
                        "6f85d5c0697f1509b1e69d0d071745773359a01b"
                    ]
                },
                {
                    "command": [
                        "apply dans_union.",
                        "VernacExtend",
                        "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
                    ]
                },
                {
                    "command": [
                        "replace S with A.",
                        "VernacExtend",
                        "d22eb5e853bcabe1f98d998af8fad0d47520473a"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv2 ] 2.",
                        "VernacExtend",
                        "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
                    ]
                },
                {
                    "command": [
                        "injection egal_S; auto.",
                        "VernacExtend",
                        "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
                    ]
                },
                {
                    "command": [
                        "intro dans_couple_union.",
                        "VernacExtend",
                        "c3162ca608120d6e8c4ec2a16bb4a0f5c49b747a"
                    ]
                },
                {
                    "command": [
                        "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
                        "VernacExtend",
                        "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intro dans_R2.",
                        "VernacExtend",
                        "f74bc22d45f071ae7e5220095cdf7f3122f6be4b"
                    ]
                },
                {
                    "command": [
                        "absurd (inter (union X V1) V2 empty).",
                        "VernacExtend",
                        "e0b89849b926aa42abf85530941fb3ba029c2a5c"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold inter in |- *.",
                        "VernacExtend",
                        "0cda10a713e20ded51dc208d6b76935d284c91eb"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros HH temp; elim temp; clear temp; intros HHH HHHH.",
                        "VernacExtend",
                        "93069865253ad19d9992bbebe88753da380fd6d6"
                    ]
                },
                {
                    "command": [
                        "prolog [ Regles_inv1 inmonoid_cons_inv2 dans_empty_imp_P ] 4.",
                        "VernacExtend",
                        "3f49ce0584d56c2852ae9971c73dea54a65b4bd3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv Derive2 ] 10.",
                        "VernacExtend",
                        "7791f9d1ce2bab85546df3df6e596350ada764e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_R1_d",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "prolog [ in_mon_X_Der_imp_inmon_X ] 7.",
                        "VernacExtend",
                        "78dee0f904059c81fa2e906709a675806d8b4395"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_d",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "prolog [ isGram2 isGram4 inter_union inmon_Der_imp_Der_d inmon_Der_imp_inmon_R1_d ] 15.",
                        "VernacExtend",
                        "1632a5e9436097d5f99d9f06271da41322641e5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_Derivestar",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
                        "VernacExtend",
                        "c0ce89890de2d7654f7abd358f49eadf1d2be63d"
                    ]
                },
                {
                    "command": [
                        "pattern u, v in |- *.",
                        "VernacExtend",
                        "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_Ru.",
                        "VernacExtend",
                        "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R1_v0 inmon_u0.",
                        "VernacExtend",
                        "67bb24b1ec9f9f5794a47ebdfc02cc7703b3cf3e"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_R with v0; prolog [ isGram2 inter_union isGram4 inmon_Der_imp_Der_d inmon_Der_imp_inmon_d ] 4.",
                        "VernacExtend",
                        "059b2465b63f2a8e477bd5f39424942e3c225879"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_Der_d2",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 Re_1 Re_2 inter_X_V2_V1_empty u v Der_Ru_u.",
                        "VernacExtend",
                        "6165b82cbe79aec981154426a24b2a23dce0fee0"
                    ]
                },
                {
                    "command": [
                        "elim Der_Ru_u.",
                        "VernacExtend",
                        "7693428b2910199c11ccdc2ca79ef398a6fa55d3"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 A dans_couple_Ru inmon_cons_A_v0.",
                        "VernacExtend",
                        "76fbdf459e65d1857dd21ad7c8bf0a65c4cc634a"
                    ]
                },
                {
                    "command": [
                        "apply Derive1.",
                        "VernacExtend",
                        "a314a3be2884376f829b2527f1b21e123a904876"
                    ]
                },
                {
                    "command": [
                        "cut (couple S (word (cons S1 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (add (couple S (word (cons S2 nil))) (union R1 R2))).",
                        "VernacExtend",
                        "64494d7bd3730906cadf4a620a9d7c628c87bc11"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro egal_S.",
                        "VernacExtend",
                        "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S X \\/ dans S V2).",
                        "VernacExtend",
                        "04003a326b2f9a78f8a8fdc9946e92dd4a1c266d"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply dans_union.",
                        "VernacExtend",
                        "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
                    ]
                },
                {
                    "command": [
                        "replace S with A.",
                        "VernacExtend",
                        "d22eb5e853bcabe1f98d998af8fad0d47520473a"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv2 ] 2.",
                        "VernacExtend",
                        "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
                    ]
                },
                {
                    "command": [
                        "injection egal_S; auto.",
                        "VernacExtend",
                        "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
                    ]
                },
                {
                    "command": [
                        "intro dans_couple_add.",
                        "VernacExtend",
                        "cf45d1c3c3b647ca68fe74fc5e08faebe8e1e30a"
                    ]
                },
                {
                    "command": [
                        "cut (couple S (word (cons S2 nil)) = couple A (word u0) :>Elt \\/ dans (couple A (word u0)) (union R1 R2)).",
                        "VernacExtend",
                        "2fbd0bfff28f6113e0b26c11c121e7b6eb3c43bb"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro egal_S.",
                        "VernacExtend",
                        "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S X \\/ dans S V2).",
                        "VernacExtend",
                        "04003a326b2f9a78f8a8fdc9946e92dd4a1c266d"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply dans_union.",
                        "VernacExtend",
                        "8a46d3eb29bbb41ff76ec77054033bf60da3a57b"
                    ]
                },
                {
                    "command": [
                        "replace S with A.",
                        "VernacExtend",
                        "d22eb5e853bcabe1f98d998af8fad0d47520473a"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv2 ] 2.",
                        "VernacExtend",
                        "1e227ad3ac763c7f06899b6cf6fef48e110c5984"
                    ]
                },
                {
                    "command": [
                        "injection egal_S; auto.",
                        "VernacExtend",
                        "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
                    ]
                },
                {
                    "command": [
                        "intro dans_couple_union.",
                        "VernacExtend",
                        "c3162ca608120d6e8c4ec2a16bb4a0f5c49b747a"
                    ]
                },
                {
                    "command": [
                        "cut (dans (couple A (word u0)) R1 \\/ dans (couple A (word u0)) R2).",
                        "VernacExtend",
                        "5fe4a393ac3bdd2ae946bfc236775055ddf6b336"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro dans_R1.",
                        "VernacExtend",
                        "3467c219901f4e44579bd5dbe0e624e5f9768d54"
                    ]
                },
                {
                    "command": [
                        "absurd (inter (union X V2) V1 empty).",
                        "VernacExtend",
                        "fa85989802afd26eeb108b42a7b4d899928f73e4"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold inter in |- *.",
                        "VernacExtend",
                        "0cda10a713e20ded51dc208d6b76935d284c91eb"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros inc_empt temp; elim temp; clear temp.",
                        "VernacExtend",
                        "28243b3d8bf5c4751b2cdca691dbef09f2d2bd30"
                    ]
                },
                {
                    "command": [
                        "intros incl_empty_V1 imp_dans_empty.",
                        "VernacExtend",
                        "7377593a0dfa0ad55778ff380e0fd9f7c0d73667"
                    ]
                },
                {
                    "command": [
                        "apply dans_empty_imp_P with A.",
                        "VernacExtend",
                        "9c4b46c9a342786ba5dda394a0e60a9ba541dfb2"
                    ]
                },
                {
                    "command": [
                        "apply imp_dans_empty; prolog [ Regles_inv1 inmonoid_cons_inv2 ] 4.",
                        "VernacExtend",
                        "2f140f2efc9a137d783a82990c4a9621f710820d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmonoid_cons_inv Derive2 ] 10.",
                        "VernacExtend",
                        "7791f9d1ce2bab85546df3df6e596350ada764e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_R2_d",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "prolog [ in_mon_X_Der_imp_inmon_X ] 10.",
                        "VernacExtend",
                        "75c05c0e90a991db90e06c7d5faae0625c2d2a5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inmon_Der_imp_inmon_d2",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "prolog [ sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der_d2 inmon_Der_imp_inmon_R2_d ] 15.",
                        "VernacExtend",
                        "563ce6a106d1995f705d2df332e8101d728e57e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_Derivestar2",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "unfold Derivestar in |- *.",
                        "VernacExtend",
                        "1a229dfd52c488d2e9f05c7d50393ee9c7effa0f"
                    ]
                },
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty u v Derivestar_Ru.",
                        "VernacExtend",
                        "c0ce89890de2d7654f7abd358f49eadf1d2be63d"
                    ]
                },
                {
                    "command": [
                        "pattern u, v in |- *.",
                        "VernacExtend",
                        "7e5601db7a95ab55ba3f60d585cbd8e4b12a2319"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_Ru.",
                        "VernacExtend",
                        "9a5ef7bb7592ae934c3451112eaeb40fadaed481"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros u0 v0 w Der_Ru inmon_v0_imp_Rstar_R2_v0 inmon_u0.",
                        "VernacExtend",
                        "a7dcd96b702b4ad18de9592a9830812e54cd3862"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_R with v0.",
                        "VernacExtend",
                        "eeb7b3c39e07ad9435e888ba61edc8959e8edc03"
                    ]
                },
                {
                    "command": [
                        "prolog [ sym_inter isGram2 inter_union isGram4 inmon_Der_imp_Der_d2 ] 4.",
                        "VernacExtend",
                        "074004e8eb00b098cf9fbdd3fcaa9cae75086eb4"
                    ]
                },
                {
                    "command": [
                        "prolog [ inmon_Der_imp_inmon_d2 ] 3.",
                        "VernacExtend",
                        "79b2d0c5d51568e68e477ff3aea1e0f7adb85df8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_Derive1",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 u Derive_Ru.",
                        "VernacExtend",
                        "a725e23546a1c8677685afb7ecdf16e9be2dfa35"
                    ]
                },
                {
                    "command": [
                        "cut (Derive_inv Ru (cons S nil) u).",
                        "VernacExtend",
                        "928a117a180a631a9e794b8cdfabf9a54c21daa2"
                    ]
                },
                {
                    "command": [
                        "unfold Derive_inv in |- *.",
                        "VernacExtend",
                        "2c8cf481a584e407da0dcfa1ec76c07167314068"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp; intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "680d3e1ec7ddeee5e8b7e7bdef33ea2788c2238e"
                    ]
                },
                {
                    "command": [
                        "intros x dans_S_x_Ru temp.",
                        "VernacExtend",
                        "1dbb15ac06c19048fac5c4f32053be241accfcdb"
                    ]
                },
                {
                    "command": [
                        "elim temp; clear temp.",
                        "VernacExtend",
                        "d6e9c47c846e81ac351718cecfd83da68dcab03e"
                    ]
                },
                {
                    "command": [
                        "intros x0 egal_S_x0_S_nil egal_Append_x_x0_u.",
                        "VernacExtend",
                        "831cdb5db396e0f985a0aae56ebaba1e6c423af3"
                    ]
                },
                {
                    "command": [
                        "replace u with x.",
                        "VernacExtend",
                        "fb96eb02be044397e9b94dab9b60b182186db0be"
                    ]
                },
                {
                    "command": [
                        "cut (couple S (word (cons S1 nil)) = couple S (word x) :>Elt \\/ dans (couple S (word x)) (add (couple S (word (cons S2 nil))) (union R1 R2))).",
                        "VernacExtend",
                        "6cf22b0f61f7cf2812176a19811f41dfc2cd1dfa"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro egal_S.",
                        "VernacExtend",
                        "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
                    ]
                },
                {
                    "command": [
                        "injection egal_S; auto.",
                        "VernacExtend",
                        "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
                    ]
                },
                {
                    "command": [
                        "intro dans_couple_add.",
                        "VernacExtend",
                        "cf45d1c3c3b647ca68fe74fc5e08faebe8e1e30a"
                    ]
                },
                {
                    "command": [
                        "cut (couple S (word (cons S2 nil)) = couple S (word x) :>Elt \\/ dans (couple S (word x)) (union R1 R2)).",
                        "VernacExtend",
                        "23b6e7a67c630e78164095d9f1f6b69816ce1733"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro egal_S.",
                        "VernacExtend",
                        "3b1e095579f3348f34e32d5b5b481796fbc95d1f"
                    ]
                },
                {
                    "command": [
                        "injection egal_S; auto.",
                        "VernacExtend",
                        "223dd22efd04b806e1b4934d10b68b5dc2b67b3a"
                    ]
                },
                {
                    "command": [
                        "intro dans_couple_union.",
                        "VernacExtend",
                        "c3162ca608120d6e8c4ec2a16bb4a0f5c49b747a"
                    ]
                },
                {
                    "command": [
                        "cut (dans (couple S (word x)) R1 \\/ dans (couple S (word x)) R2).",
                        "VernacExtend",
                        "5f9a0dea4af4cc18f57890aa318420eaddd714de"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intro dans_R1.",
                        "VernacExtend",
                        "3467c219901f4e44579bd5dbe0e624e5f9768d54"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S V1).",
                        "VernacExtend",
                        "c57c609e60fce6c371615eea783c8e593cbbfd12"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram4 Regles_inv1 ] 3.",
                        "VernacExtend",
                        "17df80206bcc2aee0c8ae5df41a59912cc9e9421"
                    ]
                },
                {
                    "command": [
                        "intros dans_R2.",
                        "VernacExtend",
                        "325b731b63d02f4af7e2866b83db6d40651ccdf7"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S V2).",
                        "VernacExtend",
                        "451fb74a02ea1db7987b200e5465b90bd34e5e40"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram4 Regles_inv1 ] 3.",
                        "VernacExtend",
                        "17df80206bcc2aee0c8ae5df41a59912cc9e9421"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace x with (Append x nil).",
                        "VernacExtend",
                        "6ff023db829f925c24d9af8af5efc14f3a715582"
                    ]
                },
                {
                    "command": [
                        "replace nil with x0.",
                        "VernacExtend",
                        "1ff5983a6c10a3a0965bb1eaa84f26677e25a098"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cons_cons_inv2 with S S; assumption.",
                        "VernacExtend",
                        "e4a71a91210dc9ac52913ff8083198e8cdbe06fa"
                    ]
                },
                {
                    "command": [
                        "apply Append_w_nil.",
                        "VernacExtend",
                        "5793e89ace87609f7bf7ed780b07409f8699b85e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (Derive_inv Ru nil x).",
                        "VernacExtend",
                        "bd11b6d3c692641d17299635ad8085784c7f165c"
                    ]
                },
                {
                    "command": [
                        "unfold Derive_inv in |- *.",
                        "VernacExtend",
                        "2c8cf481a584e407da0dcfa1ec76c07167314068"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_Derivestar_S",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty u Derivestar_Ru.",
                        "VernacExtend",
                        "e4cb8cbb384224176da23ed9bfa2f1abf18b0d9a"
                    ]
                },
                {
                    "command": [
                        "cut (cons S nil = u :>Word \\/ (exists2 w : Word, Derive Ru (cons S nil) w & Derivestar Ru w u)).",
                        "VernacExtend",
                        "aa13f0570bbd5bb4f0659a325ec95c578b20d8a4"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp.",
                        "VernacExtend",
                        "3999efaaadc97eca424ca09a3a7c40e7e3ffc884"
                    ]
                },
                {
                    "command": [
                        "intros x Der_Ru_cons_S_nil_x Derivestar_Ru_x_u.",
                        "VernacExtend",
                        "3271326edf850ef7c78c587e2f4360f978ce456b"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "cut (cons S1 nil = x :>Word \\/ cons S2 nil = x :>Word).",
                        "VernacExtend",
                        "254ed026d02c727acbfc091812ce57618d9341ae"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp; intro x_egal; rewrite x_egal.",
                        "VernacExtend",
                        "6ba5747818689a5ba2cc78c3689fbde8180f31df"
                    ]
                },
                {
                    "command": [
                        "apply or_introl.",
                        "VernacExtend",
                        "bdd61b016cae40d633ce4ecb2446056ed0b07202"
                    ]
                },
                {
                    "command": [
                        "apply Gunion_disj_Derivestar; [ auto | auto | auto | auto | auto | auto | auto | idtac ].",
                        "VernacExtend",
                        "7f4a53c7b1fc4ee6ce7f5eacb7a04942ae480ed5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- x_egal; cut (dans S1 V1).",
                        "VernacExtend",
                        "ab9738b3a6cb9344ca8627fa524beb7a1c10f8cd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram3 ] 2.",
                        "VernacExtend",
                        "036e38d67799527548ba7937f3e9c037bc63e6aa"
                    ]
                },
                {
                    "command": [
                        "apply or_intror.",
                        "VernacExtend",
                        "0d5e5236b6bbcad3b89db1cd796c9f4a4bdbeca4"
                    ]
                },
                {
                    "command": [
                        "apply Gunion_disj_Derivestar2; [ auto | auto | auto | auto | auto | auto | auto | idtac ].",
                        "VernacExtend",
                        "c605e38d5a0b3aba10596edef2f8b9bee06bd73e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- x_egal; cut (dans S2 V2).",
                        "VernacExtend",
                        "0e7c11e47c9625de6fec19b7a573ad394eb39991"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "prolog [ isGram3 ] 2.",
                        "VernacExtend",
                        "036e38d67799527548ba7937f3e9c037bc63e6aa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_LG_inclus1",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros N_dans_X N_dans_V1 N_dans_V2 G_1 G_2 inter_V1_V2_empty.",
                        "VernacExtend",
                        "1fa8cc989628dd717428dee56a2edd21bb91ac6d"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold LG in |- *.",
                        "VernacExtend",
                        "343b9338ef9ed31b98c91f9133563b9abde9420d"
                    ]
                },
                {
                    "command": [
                        "intros w temp; elim temp; clear temp; intros Der_Ru inmonoid_X_w.",
                        "VernacExtend",
                        "16a33eb74932197b1aeb298c76d58565b8d115df"
                    ]
                },
                {
                    "command": [
                        "unfold lunion in |- *.",
                        "VernacExtend",
                        "60ae3ccc9ba53a14998e572dc65f431a57230fb2"
                    ]
                },
                {
                    "command": [
                        "elimtype (cons S nil = w :>Word \\/ Derivestar R1 (cons S1 nil) w \\/ Derivestar R2 (cons S2 nil) w).",
                        "VernacExtend",
                        "476895b91083b6e61bc706387c93acec98a3692f"
                    ]
                },
                {
                    "command": [
                        "intro eg_cons_S_nil_w.",
                        "VernacExtend",
                        "359a394b3b3ff73c7548e373de8c4c91416a71de"
                    ]
                },
                {
                    "command": [
                        "absurd (dans S X).",
                        "VernacExtend",
                        "8165d5d6cac30e4beb07d3523d93d8441d9d9715"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply inmonoid_cons_inv2 with nil.",
                        "VernacExtend",
                        "5f2f0ae74ced578d1d015477303826900661defc"
                    ]
                },
                {
                    "command": [
                        "rewrite eg_cons_S_nil_w; assumption.",
                        "VernacExtend",
                        "fbfb5e8ca42e884385af224f1deec3f3641fead3"
                    ]
                },
                {
                    "command": [
                        "intro temp; elim temp; clear temp; auto.",
                        "VernacExtend",
                        "bbac338b6a249359d8bf56f3b1fa62a6f22af895"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_LG_inclus2",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold LG in |- *.",
                        "VernacExtend",
                        "343b9338ef9ed31b98c91f9133563b9abde9420d"
                    ]
                },
                {
                    "command": [
                        "intros w temp; elim temp; clear temp.",
                        "VernacExtend",
                        "513fd97c6bd190b5716f14fc1a3b61060689737c"
                    ]
                },
                {
                    "command": [
                        "intros Der_Ru inmonoid_X_w.",
                        "VernacExtend",
                        "420c8df9d77d13e21f86a05ef80bb352c5e39651"
                    ]
                },
                {
                    "command": [
                        "unfold Ru in |- *; simpl in |- *.",
                        "VernacExtend",
                        "f4b235b00b7cf53461349b62971c404d11e31f80"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_R with (cons S1 nil).",
                        "VernacExtend",
                        "428d2e62305d7a86c29298edc361b31469015f54"
                    ]
                },
                {
                    "command": [
                        "replace (cons S1 nil) with (Append (cons S1 nil) nil).",
                        "VernacExtend",
                        "0e597a0bfe41cbf82b269c3169ea802ce39a9f4e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_inclus with R1; auto.",
                        "VernacExtend",
                        "5b386786591c7477a5b15e7fbaed81cf515811db"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_LG_inclus3",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold LG in |- *.",
                        "VernacExtend",
                        "343b9338ef9ed31b98c91f9133563b9abde9420d"
                    ]
                },
                {
                    "command": [
                        "intros w temp; elim temp; clear temp.",
                        "VernacExtend",
                        "513fd97c6bd190b5716f14fc1a3b61060689737c"
                    ]
                },
                {
                    "command": [
                        "intros Der_Ru inmonoid_X_w.",
                        "VernacExtend",
                        "420c8df9d77d13e21f86a05ef80bb352c5e39651"
                    ]
                },
                {
                    "command": [
                        "unfold Ru in |- *; simpl in |- *.",
                        "VernacExtend",
                        "f4b235b00b7cf53461349b62971c404d11e31f80"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_R with (cons S2 nil).",
                        "VernacExtend",
                        "d0c889b983d016c03fb2a89a8e6d8170ed00b692"
                    ]
                },
                {
                    "command": [
                        "replace (cons S2 nil) with (Append (cons S2 nil) nil).",
                        "VernacExtend",
                        "a5dd60648593ffe477cd8247ceff66a814ec9898"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Derivestar_inclus with R2; auto.",
                        "VernacExtend",
                        "952ecfadead7ab10be774e868094e3aa4dc2b73b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_LG_inclus4",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "unfold l_inclus, lunion in |- *.",
                        "VernacExtend",
                        "3e6080f4b82ca2a1f522e3e12107e1735198ea65"
                    ]
                },
                {
                    "command": [
                        "intros w temp; elim temp; clear temp; intro LG_w.",
                        "VernacExtend",
                        "53537d404a546f38732a33c9546ceb628d712e0c"
                    ]
                },
                {
                    "command": [
                        "apply Gunion_disj_LG_inclus2; assumption.",
                        "VernacExtend",
                        "3821bd7e91fa20e50ed3da4b3e245ea5069edf47"
                    ]
                },
                {
                    "command": [
                        "apply Gunion_disj_LG_inclus3; assumption.",
                        "VernacExtend",
                        "ea96ae9857527dae17f83f59de565b85cec6c91b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gunion_disj_LG",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold l_egal in |- *; split.",
                        "VernacExtend",
                        "5422a47abebfb2d0d4810e27965c00554a362126"
                    ]
                },
                {
                    "command": [
                        "apply Gunion_disj_LG_inclus1; assumption.",
                        "VernacExtend",
                        "db04d8e5f796d28d36b94e0a4ccb9f4c2892f576"
                    ]
                },
                {
                    "command": [
                        "exact Gunion_disj_LG_inclus4.",
                        "VernacExtend",
                        "b1328d5d294d107365432969a8b530558e0c4360"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}