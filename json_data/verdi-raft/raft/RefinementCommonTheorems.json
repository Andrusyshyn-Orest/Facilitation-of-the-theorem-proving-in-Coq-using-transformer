{
    "filename": "raft/RefinementCommonTheorems.v",
    "coq_project": "verdi-raft",
    "vernac_cmds": [
        [
            "Require Import Verdi.GhostSimulations.",
            "VernacRequire",
            "891dab67151e6ddfd50d6b357dfdba6cdf4a4361"
        ],
        [
            "Require Import VerdiRaft.Raft.",
            "VernacRequire",
            "36b0b9afd1c52050ce42daf3c5fa4abb91993f25"
        ],
        [
            "Require Import VerdiRaft.RaftRefinementInterface.",
            "VernacRequire",
            "927926da3b5a03c3f12be5b77cf55cd407b249d6"
        ],
        [
            "Require Import VerdiRaft.VotesCorrectInterface.",
            "VernacRequire",
            "befa4505210d0f227e4bbc88edce0f4c683a6a19"
        ],
        [
            "Require Import VerdiRaft.CroniesCorrectInterface.",
            "VernacRequire",
            "ebd83359cccf83564c7844e74cbb331e6f25b45e"
        ],
        [
            "Require Import VerdiRaft.CommonTheorems.",
            "VernacRequire",
            "7741fdc8f1b779bdc4f3d3ad167d1a5d2532d984"
        ],
        [
            "Require Export VerdiRaft.RefinementCommonDefinitions.",
            "VernacRequire",
            "cd79368ebedcd36e2bce6e2706edeff74036c08c"
        ],
        [
            "Require Import VerdiRaft.SpecLemmas.",
            "VernacRequire",
            "0d675bfd5abc1d0ef9d53230c6dbdf3992517589"
        ],
        [
            "Local Arguments update {_} {_} _ _ _ _ _ : simpl never.",
            "VernacArguments",
            "58518d3b0cf998daca73acf32f30d0de10e4973c"
        ],
        [
            "Section CommonTheorems.",
            "VernacBeginSection",
            "4ab88ad22b3d4a18de5179da2ef58904c3c2d2e0"
        ],
        [
            "Context {orig_base_params : BaseParams}.",
            "VernacContext",
            "69028e681894580fbc36a6124a9136decfafb159"
        ],
        [
            "Context {one_node_params : OneNodeParams orig_base_params}.",
            "VernacContext",
            "013ed31ca1bcacb0528fc416f1059cfa49b9df65"
        ],
        [
            "Context {raft_params : RaftParams orig_base_params}.",
            "VernacContext",
            "f5c24333154da8ee6ae37600b526f95496c92448"
        ],
        [
            "Context {cci : cronies_correct_interface}.",
            "VernacContext",
            "145e3f71ba43ad249ec8fb7ad2d9c3191e66d510"
        ],
        [
            "Context {vci : votes_correct_interface}.",
            "VernacContext",
            "7503cb768a723c0a10450ec484b48daf5aaf8df7"
        ],
        [
            "Lemma candidateEntries_wonElection : forall (net : network (params := raft_refined_multi_params)) e h, one_vote_per_term net -> cronies_votes net -> votes_received_cronies net -> candidateEntries e (nwState net) -> currentTerm (snd (nwState net h)) = eTerm e -> wonElection (dedup name_eq_dec (votesReceived (snd (nwState net h)))) = true -> type (snd (nwState net h)) <> Candidate.",
            "VernacStartTheoremProof",
            "8499a9cd9eeedc90ec7b63e2ef8f16ca95ca68bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold candidateEntries in *.",
            "VernacExtend",
            "caa80147103c84ab525abf8f16849db0f0c361a9"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "repeat match goal with | [ H : _ |- _ ] => rewrite deghost_spec in H end.",
            "VernacExtend",
            "ea045fdf3141e6c8f11cf251f6caceea37f526ee"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (x = h).",
            "VernacExtend",
            "34af7412a37c30c9b8be4807b2a38ead80f0613b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "match goal with | H : wonElection _ = _ |- _ => eapply wonElection_one_in_common in H; [|clear H; eauto] end.",
            "VernacExtend",
            "25238a3b9599398e5e9c8987ed1dd0eb5ee24bb2"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "eapply_prop one_vote_per_term; try solve [eapply_prop cronies_votes; eauto].",
            "VernacExtend",
            "52bd7a57e3d1c4b862441a1944187b8ff7473f10"
        ],
        [
            "eapply_prop cronies_votes.",
            "VernacExtend",
            "dca6b850c2b86cb589f4f9adadcf31287cf00527"
        ],
        [
            "repeat find_reverse_rewrite.",
            "VernacExtend",
            "da1070398b46835e4e5a3998f02155d9d7a1e47c"
        ],
        [
            "eapply_prop votes_received_cronies; auto.",
            "VernacExtend",
            "19b8306c381ef14c2c159bd1d828fe03d809521b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "concludes.",
            "VernacExtend",
            "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wonElection_candidateEntries_rvr : forall (net : network (params := raft_refined_multi_params)) p e, votes_correct net -> cronies_correct net -> candidateEntries e (nwState net) -> In p (nwPackets net) -> pBody p = RequestVoteReply (eTerm e) true -> currentTerm (snd (nwState net (pDst p))) = eTerm e -> wonElection (dedup name_eq_dec (pSrc p :: votesReceived (snd (nwState net (pDst p))))) = true -> type (snd (nwState net (pDst p))) <> Candidate.",
            "VernacStartTheoremProof",
            "93f9cfcb83ca9f339f108b62345d98d4c613a95a"
        ],
        [
            "unfold votes_correct, cronies_correct.",
            "VernacExtend",
            "88a824b43e4eb916c5170ec42769163da350d1ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "match goal with | [ H : context [ votes_nw ], H' : context [ pBody ] |- _ ] => eapply H in H' end.",
            "VernacExtend",
            "68ad75a9d03f6583f8b3d9cfb095d70d7c9185a6"
        ],
        [
            "unfold candidateEntries in *.",
            "VernacExtend",
            "caa80147103c84ab525abf8f16849db0f0c361a9"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "match goal with | H : wonElection _ = _ |- _ => eapply wonElection_one_in_common in H; [|clear H; eauto] end.",
            "VernacExtend",
            "25238a3b9599398e5e9c8987ed1dd0eb5ee24bb2"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply_prop_hyp cronies_votes In.",
            "VernacExtend",
            "1385295f91edd243411ec72147bc234c8b2272e7"
        ],
        [
            "assert (x = pDst p) by (eapply_prop one_vote_per_term; eauto).",
            "VernacExtend",
            "8160d5ebde0c5b9ab86493d6dc2c8727a302f592"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "concludes.",
            "VernacExtend",
            "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply_prop_hyp votes_received_cronies In.",
            "VernacExtend",
            "24dfbdfcbec7b75acb04ea55db7fd518f65391a8"
        ],
        [
            "concludes.",
            "VernacExtend",
            "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
        ],
        [
            "apply_prop_hyp cronies_votes In.",
            "VernacExtend",
            "1385295f91edd243411ec72147bc234c8b2272e7"
        ],
        [
            "apply_prop_hyp cronies_votes In.",
            "VernacExtend",
            "1385295f91edd243411ec72147bc234c8b2272e7"
        ],
        [
            "unfold raft_data in *.",
            "VernacExtend",
            "0c237b5fd3be47237a66e24deda9fcdccc405b0f"
        ],
        [
            "unfold raft_refined_base_params, raft_refined_multi_params in *.",
            "VernacExtend",
            "5afc889b9ff98272c12ef9151ce78920aaceb6b5"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "repeat find_reverse_rewrite.",
            "VernacExtend",
            "da1070398b46835e4e5a3998f02155d9d7a1e47c"
        ],
        [
            "assert (x = pDst p) by (eapply_prop one_vote_per_term; eauto).",
            "VernacExtend",
            "8160d5ebde0c5b9ab86493d6dc2c8727a302f592"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "repeat concludes.",
            "VernacExtend",
            "04ccd4672caec12798641327fa57cc9a5eaa73f6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma candidateEntries_ext : forall e sigma sigma', (forall h, sigma' h = sigma h) -> candidateEntries e sigma -> candidateEntries e sigma'.",
            "VernacStartTheoremProof",
            "c95b3f153b89803033dbc5a63a851bb03a24dbc6"
        ],
        [
            "unfold candidateEntries.",
            "VernacExtend",
            "f700b398ea3f0d17da4fd71f94b632a0a7d29079"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "break_exists_exists.",
            "VernacExtend",
            "03b688e04b2ff1c66dd3107781c4921241c483e1"
        ],
        [
            "intuition; repeat find_higher_order_rewrite; auto.",
            "VernacExtend",
            "8cf07de6904a552f9ce0895f2ffd952c0f8dfd80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma candidateEntries_same : forall (st st' : name -> _) e, candidateEntries e st -> (forall h, cronies (fst (st' h)) = cronies (fst (st h))) -> (forall h, currentTerm (snd (st' h)) = currentTerm (snd (st h))) -> (forall h, type (snd (st' h)) = type (snd (st h))) -> candidateEntries e st'.",
            "VernacStartTheoremProof",
            "99ba969d338207730c7189380ddb479af6297465"
        ],
        [
            "unfold candidateEntries.",
            "VernacExtend",
            "f700b398ea3f0d17da4fd71f94b632a0a7d29079"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "repeat find_higher_order_rewrite.",
            "VernacExtend",
            "f69dd976e7be9fe652f13ef2002e26a8b500e05e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma won_election_cronies : forall net h, cronies_correct net -> type (snd (nwState net h)) = Leader -> wonElection (dedup name_eq_dec (cronies (fst (nwState net h)) (currentTerm (snd (nwState net h))))) = true.",
            "VernacStartTheoremProof",
            "8016fee0f3ab7e8531f03f0ace45f345ce8e6338"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cronies_correct in *; intuition.",
            "VernacExtend",
            "6db2450d266b39f64b010e78e2156dcfb506ee92"
        ],
        [
            "eapply wonElection_no_dup_in; eauto using NoDup_dedup, in_dedup_was_in, dedup_In.",
            "VernacExtend",
            "63146c76d0e27a4e6f2fddb201ca1f353fcf9cfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma handleRequestVoteReply_preserves_candidate_entries : forall net h h' t r st' e, st' = handleRequestVoteReply h (snd (nwState net h)) h' t r -> refined_raft_intermediate_reachable net -> candidateEntries e (nwState net) -> candidateEntries e (update name_eq_dec (nwState net) h (update_elections_data_requestVoteReply h h' t r (nwState net h), st')).",
            "VernacStartTheoremProof",
            "a251d6ab2cd7c74ca2aa12b2f99b4a3b0f5f634a"
        ],
        [
            "unfold candidateEntries.",
            "VernacExtend",
            "f700b398ea3f0d17da4fd71f94b632a0a7d29079"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split; rewrite update_fun_comm; simpl; rewrite update_fun_comm; simpl; update_destruct; subst; rewrite_update; auto; try (unfold update_elections_data_requestVoteReply in *; repeat break_match; simpl in *; auto; break_if; simpl in *; repeat find_rewrite; auto); match goal with | |- context [handleRequestVoteReply ?h ?st ?h' ?t ?r] => remember (handleRequestVoteReply h st h' t r) as new_state end; find_apply_lem_hyp handleRequestVoteReply_spec; intuition; repeat find_rewrite; intuition.",
            "VernacExtend",
            "e26dbf60ad96ade8a46f28c991c0d67430e93bcb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "find_apply_lem_hyp cronies_correct_invariant.",
            "VernacExtend",
            "60aae49d7ca69d04f62812aebd0e0a25a37afaff"
        ],
        [
            "unfold cronies_correct in *.",
            "VernacExtend",
            "f88ddf30b58d72f7b639e97a778377000ca9e0b4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold votes_received_leaders in *.",
            "VernacExtend",
            "fadb72d98277bbee73616f9efa37a3e5246f0af8"
        ],
        [
            "match goal with | H : Leader = _ |- _ => symmetry in H end.",
            "VernacExtend",
            "3c789d0452c54dc677e15c2bc60cea207f0ebf28"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "eapply wonElection_no_dup_in; eauto using NoDup_dedup, in_dedup_was_in, dedup_In.",
            "VernacExtend",
            "63146c76d0e27a4e6f2fddb201ca1f353fcf9cfb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (serverType_eq_dec (type (snd (nwState net x))) Leader); intuition.",
            "VernacExtend",
            "1a60d1005799b46c2e16c355c7dfc2fd26176d4e"
        ],
        [
            "find_apply_lem_hyp cronies_correct_invariant; auto.",
            "VernacExtend",
            "c2997422028ee317fbf6fe2c05090c054daf435c"
        ],
        [
            "eapply wonElection_no_dup_in; eauto using NoDup_dedup, in_dedup_was_in, dedup_In.",
            "VernacExtend",
            "63146c76d0e27a4e6f2fddb201ca1f353fcf9cfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma doLeader_st : forall st h os st' ms, doLeader st h = (os, st', ms) -> votesReceived st' = votesReceived st /\\ currentTerm st' = currentTerm st /\\ type st' = type st.",
            "VernacStartTheoremProof",
            "6947e65b6130e38aac884d6d8fc75f8d5ce6a1a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold doLeader, advanceCommitIndex in *.",
            "VernacExtend",
            "96aeef169aa84df791f852d119d4f19f9bb66251"
        ],
        [
            "repeat break_match; find_inversion; intuition.",
            "VernacExtend",
            "d3477cebebe78ae3f39671f596577710eb6e6003"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma doLeader_preserves_candidateEntries : forall net gd d h os d' ms e, nwState net h = (gd, d) -> doLeader d h = (os, d', ms) -> candidateEntries e (nwState net) -> candidateEntries e (update name_eq_dec (nwState net) h (gd, d')).",
            "VernacStartTheoremProof",
            "67649c88bcebdf5fb32a841ab3df17a218da1c69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply candidateEntries_same; eauto; intros; repeat (rewrite update_fun_comm; simpl in * ); update_destruct; subst; rewrite_update; auto; repeat find_rewrite; simpl; auto; find_apply_lem_hyp doLeader_st; intuition.",
            "VernacExtend",
            "9c248c6c04abb070caf182545bb6d1164237f645"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ghost_packet : forall (net : network (params := raft_refined_multi_params)) p, In p (nwPackets net) -> In (deghost_packet p) (nwPackets (deghost net)).",
            "VernacStartTheoremProof",
            "4b2f74bddef109c3018814ec180c7fd9ff869d7c"
        ],
        [
            "unfold deghost.",
            "VernacExtend",
            "b055a9e1838377f61bedc8f8d590095e4b0903de"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply in_map_iff.",
            "VernacExtend",
            "b128e1e6f601182342113d742a28792f5aaec52c"
        ],
        [
            "eexists; eauto.",
            "VernacExtend",
            "02215ff570a78e8dfed0585aa87594983a8aa0fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pDst_deghost_packet : forall p : packet (params := raft_refined_multi_params), pDst (deghost_packet p) = pDst p.",
            "VernacStartTheoremProof",
            "104ed6693f61c0fad43dfc2e351697d4a8e695fd"
        ],
        [
            "unfold deghost_packet.",
            "VernacExtend",
            "f463aa958903d41789f83882c695c42936a3a92c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CommonTheorems.",
            "VernacEndSegment",
            "71269445c8de0d076b53e65b3072c32355ea16e6"
        ],
        [
            "Ltac intro_refined_invariant lem := match goal with | [ h: refined_raft_intermediate_reachable _ |- _ ] => let x := fresh in pose proof h as x; apply lem in x; unfold_invariant x end.",
            "VernacExtend",
            "6beb4d02068e6eaae6f8325023f5efbccb655d69"
        ]
    ],
    "proofs": [
        {
            "name": "candidateEntries_wonElection",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold candidateEntries in *.",
                        "VernacExtend",
                        "caa80147103c84ab525abf8f16849db0f0c361a9"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with | [ H : _ |- _ ] => rewrite deghost_spec in H end.",
                        "VernacExtend",
                        "ea045fdf3141e6c8f11cf251f6caceea37f526ee"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (x = h).",
                        "VernacExtend",
                        "34af7412a37c30c9b8be4807b2a38ead80f0613b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "match goal with | H : wonElection _ = _ |- _ => eapply wonElection_one_in_common in H; [|clear H; eauto] end.",
                        "VernacExtend",
                        "25238a3b9599398e5e9c8987ed1dd0eb5ee24bb2"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "eapply_prop one_vote_per_term; try solve [eapply_prop cronies_votes; eauto].",
                        "VernacExtend",
                        "52bd7a57e3d1c4b862441a1944187b8ff7473f10"
                    ]
                },
                {
                    "command": [
                        "eapply_prop cronies_votes.",
                        "VernacExtend",
                        "dca6b850c2b86cb589f4f9adadcf31287cf00527"
                    ]
                },
                {
                    "command": [
                        "repeat find_reverse_rewrite.",
                        "VernacExtend",
                        "da1070398b46835e4e5a3998f02155d9d7a1e47c"
                    ]
                },
                {
                    "command": [
                        "eapply_prop votes_received_cronies; auto.",
                        "VernacExtend",
                        "19b8306c381ef14c2c159bd1d828fe03d809521b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "concludes.",
                        "VernacExtend",
                        "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wonElection_candidateEntries_rvr",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold votes_correct, cronies_correct.",
                        "VernacExtend",
                        "88a824b43e4eb916c5170ec42769163da350d1ca"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : context [ votes_nw ], H' : context [ pBody ] |- _ ] => eapply H in H' end.",
                        "VernacExtend",
                        "68ad75a9d03f6583f8b3d9cfb095d70d7c9185a6"
                    ]
                },
                {
                    "command": [
                        "unfold candidateEntries in *.",
                        "VernacExtend",
                        "caa80147103c84ab525abf8f16849db0f0c361a9"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "match goal with | H : wonElection _ = _ |- _ => eapply wonElection_one_in_common in H; [|clear H; eauto] end.",
                        "VernacExtend",
                        "25238a3b9599398e5e9c8987ed1dd0eb5ee24bb2"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply_prop_hyp cronies_votes In.",
                        "VernacExtend",
                        "1385295f91edd243411ec72147bc234c8b2272e7"
                    ]
                },
                {
                    "command": [
                        "assert (x = pDst p) by (eapply_prop one_vote_per_term; eauto).",
                        "VernacExtend",
                        "8160d5ebde0c5b9ab86493d6dc2c8727a302f592"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "concludes.",
                        "VernacExtend",
                        "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply_prop_hyp votes_received_cronies In.",
                        "VernacExtend",
                        "24dfbdfcbec7b75acb04ea55db7fd518f65391a8"
                    ]
                },
                {
                    "command": [
                        "concludes.",
                        "VernacExtend",
                        "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
                    ]
                },
                {
                    "command": [
                        "apply_prop_hyp cronies_votes In.",
                        "VernacExtend",
                        "1385295f91edd243411ec72147bc234c8b2272e7"
                    ]
                },
                {
                    "command": [
                        "apply_prop_hyp cronies_votes In.",
                        "VernacExtend",
                        "1385295f91edd243411ec72147bc234c8b2272e7"
                    ]
                },
                {
                    "command": [
                        "unfold raft_data in *.",
                        "VernacExtend",
                        "0c237b5fd3be47237a66e24deda9fcdccc405b0f"
                    ]
                },
                {
                    "command": [
                        "unfold raft_refined_base_params, raft_refined_multi_params in *.",
                        "VernacExtend",
                        "5afc889b9ff98272c12ef9151ce78920aaceb6b5"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "repeat find_reverse_rewrite.",
                        "VernacExtend",
                        "da1070398b46835e4e5a3998f02155d9d7a1e47c"
                    ]
                },
                {
                    "command": [
                        "assert (x = pDst p) by (eapply_prop one_vote_per_term; eauto).",
                        "VernacExtend",
                        "8160d5ebde0c5b9ab86493d6dc2c8727a302f592"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "repeat concludes.",
                        "VernacExtend",
                        "04ccd4672caec12798641327fa57cc9a5eaa73f6"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "candidateEntries_ext",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "unfold candidateEntries.",
                        "VernacExtend",
                        "f700b398ea3f0d17da4fd71f94b632a0a7d29079"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "break_exists_exists.",
                        "VernacExtend",
                        "03b688e04b2ff1c66dd3107781c4921241c483e1"
                    ]
                },
                {
                    "command": [
                        "intuition; repeat find_higher_order_rewrite; auto.",
                        "VernacExtend",
                        "8cf07de6904a552f9ce0895f2ffd952c0f8dfd80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "won_election_cronies",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cronies_correct in *; intuition.",
                        "VernacExtend",
                        "6db2450d266b39f64b010e78e2156dcfb506ee92"
                    ]
                },
                {
                    "command": [
                        "eapply wonElection_no_dup_in; eauto using NoDup_dedup, in_dedup_was_in, dedup_In.",
                        "VernacExtend",
                        "63146c76d0e27a4e6f2fddb201ca1f353fcf9cfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "handleRequestVoteReply_preserves_candidate_entries",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "unfold candidateEntries.",
                        "VernacExtend",
                        "f700b398ea3f0d17da4fd71f94b632a0a7d29079"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split; rewrite update_fun_comm; simpl; rewrite update_fun_comm; simpl; update_destruct; subst; rewrite_update; auto; try (unfold update_elections_data_requestVoteReply in *; repeat break_match; simpl in *; auto; break_if; simpl in *; repeat find_rewrite; auto); match goal with | |- context [handleRequestVoteReply ?h ?st ?h' ?t ?r] => remember (handleRequestVoteReply h st h' t r) as new_state end; find_apply_lem_hyp handleRequestVoteReply_spec; intuition; repeat find_rewrite; intuition.",
                        "VernacExtend",
                        "e26dbf60ad96ade8a46f28c991c0d67430e93bcb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp cronies_correct_invariant.",
                        "VernacExtend",
                        "60aae49d7ca69d04f62812aebd0e0a25a37afaff"
                    ]
                },
                {
                    "command": [
                        "unfold cronies_correct in *.",
                        "VernacExtend",
                        "f88ddf30b58d72f7b639e97a778377000ca9e0b4"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold votes_received_leaders in *.",
                        "VernacExtend",
                        "fadb72d98277bbee73616f9efa37a3e5246f0af8"
                    ]
                },
                {
                    "command": [
                        "match goal with | H : Leader = _ |- _ => symmetry in H end.",
                        "VernacExtend",
                        "3c789d0452c54dc677e15c2bc60cea207f0ebf28"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "eapply wonElection_no_dup_in; eauto using NoDup_dedup, in_dedup_was_in, dedup_In.",
                        "VernacExtend",
                        "63146c76d0e27a4e6f2fddb201ca1f353fcf9cfb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (serverType_eq_dec (type (snd (nwState net x))) Leader); intuition.",
                        "VernacExtend",
                        "1a60d1005799b46c2e16c355c7dfc2fd26176d4e"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp cronies_correct_invariant; auto.",
                        "VernacExtend",
                        "c2997422028ee317fbf6fe2c05090c054daf435c"
                    ]
                },
                {
                    "command": [
                        "eapply wonElection_no_dup_in; eauto using NoDup_dedup, in_dedup_was_in, dedup_In.",
                        "VernacExtend",
                        "63146c76d0e27a4e6f2fddb201ca1f353fcf9cfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "doLeader_st",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold doLeader, advanceCommitIndex in *.",
                        "VernacExtend",
                        "96aeef169aa84df791f852d119d4f19f9bb66251"
                    ]
                },
                {
                    "command": [
                        "repeat break_match; find_inversion; intuition.",
                        "VernacExtend",
                        "d3477cebebe78ae3f39671f596577710eb6e6003"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "doLeader_preserves_candidateEntries",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply candidateEntries_same; eauto; intros; repeat (rewrite update_fun_comm; simpl in * ); update_destruct; subst; rewrite_update; auto; repeat find_rewrite; simpl; auto; find_apply_lem_hyp doLeader_st; intuition.",
                        "VernacExtend",
                        "9c248c6c04abb070caf182545bb6d1164237f645"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ghost_packet",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "unfold deghost.",
                        "VernacExtend",
                        "b055a9e1838377f61bedc8f8d590095e4b0903de"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff.",
                        "VernacExtend",
                        "b128e1e6f601182342113d742a28792f5aaec52c"
                    ]
                },
                {
                    "command": [
                        "eexists; eauto.",
                        "VernacExtend",
                        "02215ff570a78e8dfed0585aa87594983a8aa0fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pDst_deghost_packet",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "unfold deghost_packet.",
                        "VernacExtend",
                        "f463aa958903d41789f83882c695c42936a3a92c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}