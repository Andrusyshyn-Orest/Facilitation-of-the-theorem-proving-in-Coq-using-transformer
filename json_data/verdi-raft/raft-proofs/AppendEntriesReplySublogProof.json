{
    "filename": "raft-proofs/AppendEntriesReplySublogProof.v",
    "coq_project": "verdi-raft",
    "vernac_cmds": [
        [
            "Require Import VerdiRaft.Raft.",
            "VernacRequire",
            "36b0b9afd1c52050ce42daf3c5fa4abb91993f25"
        ],
        [
            "Local Arguments update {_} {_} {_} _ _ _ _ : simpl never.",
            "VernacArguments",
            "80b334f2db5599c52d916f77da01ae33a7de1d84"
        ],
        [
            "Require Import VerdiRaft.AppendEntriesReplySublogInterface.",
            "VernacRequire",
            "a544cf2a3ae2079a777b6d050e96d4af91ed7a97"
        ],
        [
            "Require Import VerdiRaft.AppendEntriesRequestReplyCorrespondenceInterface.",
            "VernacRequire",
            "2abb0255b295ec95e74e96b9fa26a3fe7666c27a"
        ],
        [
            "Require Import VerdiRaft.RaftRefinementInterface.",
            "VernacRequire",
            "927926da3b5a03c3f12be5b77cf55cd407b249d6"
        ],
        [
            "Require Import VerdiRaft.AppendEntriesLeaderInterface.",
            "VernacRequire",
            "2b92511df3066fe21c55267766fe4ca8bb7d8738"
        ],
        [
            "Section AppendEntriesReplySublog.",
            "VernacBeginSection",
            "5df241504026d4d6cb7ee3eda429591416d1298c"
        ],
        [
            "Context {orig_base_params : BaseParams}.",
            "VernacContext",
            "69028e681894580fbc36a6124a9136decfafb159"
        ],
        [
            "Context {one_node_params : OneNodeParams orig_base_params}.",
            "VernacContext",
            "013ed31ca1bcacb0528fc416f1059cfa49b9df65"
        ],
        [
            "Context {raft_params : RaftParams orig_base_params}.",
            "VernacContext",
            "f5c24333154da8ee6ae37600b526f95496c92448"
        ],
        [
            "Context {aerrci : append_entries_request_reply_correspondence_interface}.",
            "VernacContext",
            "6d80231cd45725c414039bf6228214f89def1c53"
        ],
        [
            "Context {rri : raft_refinement_interface}.",
            "VernacContext",
            "34acb9bc0df96db7775fdb1297478e309d48058c"
        ],
        [
            "Context {aeli : append_entries_leader_interface}.",
            "VernacContext",
            "2ae30c53d4f6b6dd572a266f11aa4760fba9c3de"
        ],
        [
            "Definition lowered_appendEntries_leader (net : @network _ multi_params) := forall p t leaderId prevLogIndex prevLogTerm entries leaderCommit h e, In p (nwPackets net) -> pBody p = AppendEntries t leaderId prevLogIndex prevLogTerm entries leaderCommit -> In e entries -> currentTerm (nwState net h) = t -> type (nwState net h) = Leader -> In e (log (nwState net h)).",
            "VernacDefinition",
            "eb14890387af8594ed6dbc62568df9a32ace399c"
        ],
        [
            "Theorem lower_appendEntries_leader : forall net, raft_intermediate_reachable net -> lowered_appendEntries_leader net.",
            "VernacStartTheoremProof",
            "63b81e093ee9297bb59c766fe02a64edb7acdaaa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (lower_prop lowered_appendEntries_leader); auto.",
            "VernacExtend",
            "4be01d7dd2548ede9598d2389f909bb36b02232d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "find_apply_lem_hyp append_entries_leader_invariant.",
            "VernacExtend",
            "013da50d1d6173584941b2c78ba39faf94a5b687"
        ],
        [
            "unfold lowered_appendEntries_leader, appendEntries_leader in *.",
            "VernacExtend",
            "6c5cd34a23546c54480dfd5a059931507047cfc1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "repeat break_match.",
            "VernacExtend",
            "d5be774ae50a104152bb83c7f71155bc3bfcc912"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "do_in_map.",
            "VernacExtend",
            "fa0be9321c6684e706bb9aefb585d66dc4eaa336"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "match goal with | H : ?nwState ?h = (?gd, ?d) |- _ => replace gd with (fst (nwState h)) in * by (rewrite H; reflexivity); replace d with (snd (nwState h)) in * by (rewrite H; reflexivity); clear H end.",
            "VernacExtend",
            "1567f682479f3517487a771fa3040d5aefe5074f"
        ],
        [
            "eapply_prop_hyp AppendEntries AppendEntries; eauto.",
            "VernacExtend",
            "cb007bb924d1f9408371ea57d96f017a123a5fd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem append_entries_reply_sublog_invariant : forall net, raft_intermediate_reachable net -> append_entries_reply_sublog net.",
            "VernacStartTheoremProof",
            "76adabf10c2c69ad5eb9f3283f8804960777c7bf"
        ],
        [
            "unfold append_entries_reply_sublog.",
            "VernacExtend",
            "217a50c4c50d3b4f3bde1a1a11b4204556ac564b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "find_apply_lem_hyp append_entries_request_reply_correspondence_invariant.",
            "VernacExtend",
            "6e0905e71d9c8ecd090b2e99bd4b76ec8013afc8"
        ],
        [
            "eapply_prop_hyp append_entries_request_reply_correspondence AppendEntriesReply; eauto.",
            "VernacExtend",
            "b72b1488296a8045c0f7ce693722f9149f2d8a19"
        ],
        [
            "unfold exists_equivalent_network_with_aer in *.",
            "VernacExtend",
            "5a14a9d538bb6e72a69860355169460c3d8524a2"
        ],
        [
            "break_exists_name net'.",
            "VernacExtend",
            "c36e0456ed1fe7cce80c640c8e47ed838e029071"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "match goal with | _ : nwPackets _ = _ ++ (mkPacket ?s ?d ?b) :: nil |- _ => remember (mkPacket s d b) as aer; assert (pBody aer = b) by (subst; simpl; auto); clear Heqaer end.",
            "VernacExtend",
            "37905ddc55821f1eda02e5c8a7034f14cebb76ac"
        ],
        [
            "match goal with | H : In _ (nwPackets _) |- _ => clear H end.",
            "VernacExtend",
            "efc69854719c55233228c149bdc0a32dbcf50ef9"
        ],
        [
            "assert (In aer (nwPackets net')) by (repeat find_rewrite; intuition).",
            "VernacExtend",
            "57904d108b15e2a52ee9608ce4df48810e0baf46"
        ],
        [
            "match goal with | H : nwState net' = nwState net |- _ => rewrite <- H in *; clear H end.",
            "VernacExtend",
            "0b5c5d02ddedc0177ca26776760fa971a03eb048"
        ],
        [
            "eapply lower_appendEntries_leader; eauto.",
            "VernacExtend",
            "ae9338d454ec641dbd5b1ac59612c2fcc8e55e4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance aersi : append_entries_reply_sublog_interface.",
            "VernacInstance",
            "dd0530467bfa647a8b504b07ebb8b041296be1b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact append_entries_reply_sublog_invariant.",
            "VernacExtend",
            "f87b7414f05b39f9e5e11209148f21ab94b40c0b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AppendEntriesReplySublog.",
            "VernacEndSegment",
            "75f74911abc047ef1b68486ca4cda6d47c14ebb9"
        ]
    ],
    "proofs": [
        {
            "name": "lower_appendEntries_leader",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (lower_prop lowered_appendEntries_leader); auto.",
                        "VernacExtend",
                        "4be01d7dd2548ede9598d2389f909bb36b02232d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp append_entries_leader_invariant.",
                        "VernacExtend",
                        "013da50d1d6173584941b2c78ba39faf94a5b687"
                    ]
                },
                {
                    "command": [
                        "unfold lowered_appendEntries_leader, appendEntries_leader in *.",
                        "VernacExtend",
                        "6c5cd34a23546c54480dfd5a059931507047cfc1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "repeat break_match.",
                        "VernacExtend",
                        "d5be774ae50a104152bb83c7f71155bc3bfcc912"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "do_in_map.",
                        "VernacExtend",
                        "fa0be9321c6684e706bb9aefb585d66dc4eaa336"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "match goal with | H : ?nwState ?h = (?gd, ?d) |- _ => replace gd with (fst (nwState h)) in * by (rewrite H; reflexivity); replace d with (snd (nwState h)) in * by (rewrite H; reflexivity); clear H end.",
                        "VernacExtend",
                        "1567f682479f3517487a771fa3040d5aefe5074f"
                    ]
                },
                {
                    "command": [
                        "eapply_prop_hyp AppendEntries AppendEntries; eauto.",
                        "VernacExtend",
                        "cb007bb924d1f9408371ea57d96f017a123a5fd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "append_entries_reply_sublog_invariant",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "unfold append_entries_reply_sublog.",
                        "VernacExtend",
                        "217a50c4c50d3b4f3bde1a1a11b4204556ac564b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp append_entries_request_reply_correspondence_invariant.",
                        "VernacExtend",
                        "6e0905e71d9c8ecd090b2e99bd4b76ec8013afc8"
                    ]
                },
                {
                    "command": [
                        "eapply_prop_hyp append_entries_request_reply_correspondence AppendEntriesReply; eauto.",
                        "VernacExtend",
                        "b72b1488296a8045c0f7ce693722f9149f2d8a19"
                    ]
                },
                {
                    "command": [
                        "unfold exists_equivalent_network_with_aer in *.",
                        "VernacExtend",
                        "5a14a9d538bb6e72a69860355169460c3d8524a2"
                    ]
                },
                {
                    "command": [
                        "break_exists_name net'.",
                        "VernacExtend",
                        "c36e0456ed1fe7cce80c640c8e47ed838e029071"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "match goal with | _ : nwPackets _ = _ ++ (mkPacket ?s ?d ?b) :: nil |- _ => remember (mkPacket s d b) as aer; assert (pBody aer = b) by (subst; simpl; auto); clear Heqaer end.",
                        "VernacExtend",
                        "37905ddc55821f1eda02e5c8a7034f14cebb76ac"
                    ]
                },
                {
                    "command": [
                        "match goal with | H : In _ (nwPackets _) |- _ => clear H end.",
                        "VernacExtend",
                        "efc69854719c55233228c149bdc0a32dbcf50ef9"
                    ]
                },
                {
                    "command": [
                        "assert (In aer (nwPackets net')) by (repeat find_rewrite; intuition).",
                        "VernacExtend",
                        "57904d108b15e2a52ee9608ce4df48810e0baf46"
                    ]
                },
                {
                    "command": [
                        "match goal with | H : nwState net' = nwState net |- _ => rewrite <- H in *; clear H end.",
                        "VernacExtend",
                        "0b5c5d02ddedc0177ca26776760fa971a03eb048"
                    ]
                },
                {
                    "command": [
                        "eapply lower_appendEntries_leader; eauto.",
                        "VernacExtend",
                        "ae9338d454ec641dbd5b1ac59612c2fcc8e55e4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aersi",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact append_entries_reply_sublog_invariant.",
                        "VernacExtend",
                        "f87b7414f05b39f9e5e11209148f21ab94b40c0b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}