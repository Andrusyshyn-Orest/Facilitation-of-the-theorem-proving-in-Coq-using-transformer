{
    "filename": "totalhoarelogic.v",
    "coq_project": "hoare-tut",
    "vernac_cmds": [
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Export hoarelogicsemantics.",
            "VernacRequire",
            "fd9b824ec9b22eea24c5fc58d6f3a1c3ab13f759"
        ],
        [
            "Require Wf.",
            "VernacRequire",
            "f71a4c559fa168ac0d18b10d0a31fba6fd2f4dd6"
        ],
        [
            "Module TotalHoareLogic (HD: HoareLogicDefs).",
            "VernacDefineModule",
            "5a2546781372cf26623c2cdeed184ad756514b1d"
        ],
        [
            "Export HD.",
            "VernacImport",
            "03aa6261e19d8e5e32a5e95c2c3e3c0d6a6a3bcb"
        ],
        [
            "Module HLD:=HD.",
            "VernacDefineModule",
            "8241e3be1fdb26adeb8d5bbfc03b074f920509bb"
        ],
        [
            "Definition sem_wp := wp.",
            "VernacDefinition",
            "6334199f623b98b303a441dd3c7c82387978b9ab"
        ],
        [
            "Export Wf.",
            "VernacImport",
            "aef1df90954fc63fa05401719fa3bb7a8fc96bab"
        ],
        [
            "Fixpoint synt_wp (prog: ImpProg) : Pred -> Pred := fun post e => match prog with | Iskip => post e | (Iset A x expr) => post (E.upd x (E.eval expr e) e) | (Iif cond p1 p2) => ((E.eval cond e)=true -> (synt_wp p1 post e)) /\\ ((E.eval cond e)=false -> (synt_wp p2 post e)) | (Iseq p1 p2) => synt_wp p1 (synt_wp p2 post) e | (Iwhile cond p) => exists inv:Pred, exists R:E.Env -> E.Env -> Prop, (well_founded R) /\\ (inv e) /\\ (forall e', (inv e') -> (E.eval cond e')=false -> post e') /\\ (forall e', (inv e') -> (E.eval cond e')=true -> synt_wp p inv e') /\\ (forall e0, (inv e0) -> (E.eval cond e0)=true -> synt_wp p (fun e1 => R e1 e0) e0) end.",
            "VernacFixpoint",
            "3ce588da6eda3e6f3c22748f3e062ea6e274b416"
        ],
        [
            "Lemma synt_wp_monotonic: forall (p: ImpProg) (post1 post2: Pred), (forall e, post1 e -> post2 e) -> forall e, (synt_wp p post1 e) -> (synt_wp p post2 e).",
            "VernacStartTheoremProof",
            "47fa55a538d9d80e7f272f8e672aed2be9b12e18"
        ],
        [
            "induction p; simpl; firstorder eauto.",
            "VernacExtend",
            "efb40efb7da9b10993646f8df483686e235ccc9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve synt_wp_monotonic: hoare.",
            "VernacHints",
            "1d099c9f6aee72ddedfd0c87328fb74d19bb55f4"
        ],
        [
            "Ltac dec2 n H := case H; clear H; intros n H.",
            "VernacExtend",
            "43702f54c9b68d00347a09f0442575f5567e8c6a"
        ],
        [
            "Lemma synt_wp_conj: forall (p: ImpProg) (post1 post2: Pred) e, (synt_wp p post1 e) -> (synt_wp p post2 e) -> (synt_wp p (fun e => post1 e /\\ post2 e) e).",
            "VernacStartTheoremProof",
            "0d202f3225d4b73a746e2d459f10e27f9188ab42"
        ],
        [
            "induction p; simpl; try ((intuition auto); fail).",
            "VernacExtend",
            "2e8fb0ce9116bc1c4057107706fed86e55686af0"
        ],
        [
            "intros post1 post2 e H1 H2.",
            "VernacExtend",
            "dbd9fad1523c00180934f3f581c80a0db2823e27"
        ],
        [
            "intros; eapply synt_wp_monotonic.",
            "VernacExtend",
            "b494f9062b72457fe9e19d70950c1bf9e4f794f4"
        ],
        [
            "2: apply (IHp1 _ _ _ H1 H2).",
            "VernacExtend",
            "b4d49a171c13f58b1e859631aad5e67f9f737234"
        ],
        [
            "simpl; intuition auto.",
            "VernacExtend",
            "1f94f7da7931f831f8b2ad78ed7bc26d267e06e8"
        ],
        [
            "intros post1 post2 e H1 H2.",
            "VernacExtend",
            "dbd9fad1523c00180934f3f581c80a0db2823e27"
        ],
        [
            "dec2 inv1 H1.",
            "VernacExtend",
            "2999b735c0021dffb4deb4a4d7eee62cae2423ac"
        ],
        [
            "dec2 R1 H1.",
            "VernacExtend",
            "6ab623cb4f8ed3112df7a45f7f579a5e90ca5175"
        ],
        [
            "dec2 inv2 H2.",
            "VernacExtend",
            "c8caaa06d19bf1fa8d83f0eb43697579c0a4a236"
        ],
        [
            "intros; constructor 1 with (x:=fun e => inv1 e /\\ inv2 e).",
            "VernacExtend",
            "f7bb1f0dcb739da744908ad3d2e58b5ea4fef5d1"
        ],
        [
            "constructor 1 with (x:=R1).",
            "VernacExtend",
            "736524d518b63b6aad1826a7599327c6f4f4b5e3"
        ],
        [
            "firstorder auto.",
            "VernacExtend",
            "3c2d61e3762b3417560f4cec4d50f01d7fbfdbbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wp_sound: forall prog post, synt_wp prog post |= prog [=post=].",
            "VernacStartTheoremProof",
            "957abac52dd9321ef13900dc9aefc977db11066b"
        ],
        [
            "unfold wp.",
            "VernacExtend",
            "8409a2706400cd66e742ba3c0f73df4b9435870c"
        ],
        [
            "induction prog; simpl; try ((intuition eauto with hoare); fail).",
            "VernacExtend",
            "1e5b0f00acbd0b7a80b7e106db94b5288b1b4c1c"
        ],
        [
            "intros post e.",
            "VernacExtend",
            "5faa0d3f9f9b12591fc6fc5fe353d9109b635dbb"
        ],
        [
            "set (b:=E.eval cond e).",
            "VernacExtend",
            "53fa0c249891e33511cfc623c28380523c459473"
        ],
        [
            "cut (E.eval cond e=b); auto.",
            "VernacExtend",
            "cb8e1e1478eb2a2b626f862b708d3c5d819588e2"
        ],
        [
            "case b; firstorder eauto with hoare.",
            "VernacExtend",
            "347721fe3059abbe9d0068cd4a90a828a1486b1c"
        ],
        [
            "intros post e H; case (IHprog1 _ _ H).",
            "VernacExtend",
            "72f885b496bc5893e3a803072e0c41406e96992e"
        ],
        [
            "intros e0 H0; case (IHprog2 post e0); firstorder eauto with hoare.",
            "VernacExtend",
            "1aea969f66ee9fe36bcf16478def0b7c1db286a7"
        ],
        [
            "intros post e H.",
            "VernacExtend",
            "94a976de46ef14d5737ccbb2e747055ac9cd2b83"
        ],
        [
            "dec2 inv H.",
            "VernacExtend",
            "0c2570101409a3d7d837dfd5dfdcc67652c3b8fe"
        ],
        [
            "dec2 R H.",
            "VernacExtend",
            "6b30b790937bdf59bf5a7ec98599cdafb3370696"
        ],
        [
            "dec2 Rwf H.",
            "VernacExtend",
            "61fa0362d223c585dd427394e11df34bf8695463"
        ],
        [
            "dec2 Hinv H.",
            "VernacExtend",
            "ee68af949bd7221a98557037b40fcad9a5b8aba8"
        ],
        [
            "dec2 H1 H.",
            "VernacExtend",
            "1947d3245160d9ffaa528c1039ab40ae1d07ba18"
        ],
        [
            "dec2 H2 H.",
            "VernacExtend",
            "ab9278fb99f13976712c3ca4ed68891a49720d01"
        ],
        [
            "generalize Hinv.",
            "VernacExtend",
            "e3785b2bd6087413391b3b2a4e9dc479f315561b"
        ],
        [
            "pattern e.",
            "VernacExtend",
            "c86fc71c50a92e67c16208bd92e3b0292fe7be3c"
        ],
        [
            "eapply well_founded_ind; eauto.",
            "VernacExtend",
            "ef62bedb8f152c5fae123e8c48b03e5fedc0e0db"
        ],
        [
            "clear Hinv e.",
            "VernacExtend",
            "a46b75e0a576ccc7efb2fed0a0460075b54f8275"
        ],
        [
            "intros e' X H'.",
            "VernacExtend",
            "b1f12489bca4decdfe02646a00a883b8bb194c46"
        ],
        [
            "set (b:=E.eval cond e').",
            "VernacExtend",
            "5f42b681cd200b5b7d897128b792ec3ec948a339"
        ],
        [
            "cut (E.eval cond e'=b); auto.",
            "VernacExtend",
            "6c6504f6f5f178b1e63222357b2f1ab9932247c0"
        ],
        [
            "case b; [ idtac | firstorder eauto with hoare ].",
            "VernacExtend",
            "bd63d4a8ff29d4cce562ed0f02969c38dc848656"
        ],
        [
            "intros H5.",
            "VernacExtend",
            "a10a5ca5b174033fb0b79ea7323f72b7594fe7dc"
        ],
        [
            "case (IHprog (wp (Iwhile cond prog) post) e'); [ idtac | (unfold wp; firstorder eauto with hoare) ].",
            "VernacExtend",
            "bc27d2878946245c88832facc539e62ebc132593"
        ],
        [
            "eapply synt_wp_monotonic.",
            "VernacExtend",
            "1c9d6776ccd68752e67cf7cbe4f59b7491187e1d"
        ],
        [
            "2:apply (synt_wp_conj _ _ _ _ (H2 _ H' H5) (H _ H' H5)).",
            "VernacExtend",
            "dd8dd0dd3becd7af23297dccc87f63a756d78436"
        ],
        [
            "simpl; unfold wp; intuition auto.",
            "VernacExtend",
            "2f3c86f493165a6224121f8de8fb8568b1ec3194"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition aux_wlp (prog: ImpProg) : Pred -> Pred := fun post e => match prog with | Iskip => post e | (Iset A x expr) => post (E.upd x (E.eval expr e) e) | (Iif cond p1 p2) => forall e', exec e (if E.eval cond e then p1 else p2) e' -> post e' | (Iseq p1 p2) => forall e1 e2, exec e p1 e1 -> exec e1 p2 e2 -> post e2 | (Iwhile cond p) => forall e', exec e (Iif cond (Iseq p (Iwhile cond p)) Iskip) e' -> post e' end.",
            "VernacDefinition",
            "1f76c810040800589866d77b235450e8f3833ba2"
        ],
        [
            "Lemma exec_inversion: forall prog e e', (exec e prog e') -> forall post, (aux_wlp prog post e) -> post e'.",
            "VernacStartTheoremProof",
            "df91c2be5370344f44d0ffb5b620ca6acc1528c3"
        ],
        [
            "induction 1; simpl; try ((firstorder eauto with hoare); fail).",
            "VernacExtend",
            "4186f6666a6851043adc9919db0dea5d5cba3cdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exec_test_inversion: forall A (x:E.Var A) expr e e', (exec e (Iset x expr) e') -> e'=(E.upd x (E.eval expr e) e).",
            "VernacStartTheoremProof",
            "92fae3ac60fb44359f3975428085df413253493c"
        ],
        [
            "intros A x expr e e' H.",
            "VernacExtend",
            "7ad92929e4450a6de54019915000c071512231c8"
        ],
        [
            "pattern e'; apply (exec_inversion H); simpl; auto.",
            "VernacExtend",
            "0acb86accda9e18c63c4662e986399398e3e989c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac exec_inversion H := match type of H with | (exec ?e ?p ?e') => pattern e'; apply (exec_inversion H); simpl; clear H end.",
            "VernacExtend",
            "6d477f77a9f65b30a00af0142c7bc296c310a403"
        ],
        [
            "Lemma exec_deterministic: forall ei p ef, (exec ei p ef) -> forall ef', (exec ei p ef') -> ef=ef'.",
            "VernacStartTheoremProof",
            "4af1da51a1aae7dd28918369a10d2c672d2cb9e3"
        ],
        [
            "induction 1; intros ef' X; exec_inversion X; eauto.",
            "VernacExtend",
            "e89adf13710f1e49b8f53006d9d68bd3b66c0559"
        ],
        [
            "intros e1 e2 X1 X2; assert (X3: e'=e1); auto.",
            "VernacExtend",
            "db43041547843ec61edc1310768b9314c22c4dd7"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reduces cond p e1 e0 := (E.eval cond e0)=true /\\ (exec e0 p e1) /\\ exists ef, (exec e1 (Iwhile cond p) ef).",
            "VernacDefinition",
            "a8cd17cb5c9f1df656ec34d6c6d50f1e87cf348e"
        ],
        [
            "Inductive execn: nat -> E.Env -> ImpProg -> E.Env -> Prop := | execn_Iskip: forall e, (execn 0 e Iskip e) | execn_Iset: forall (A:Type) e x (expr: E.Expr A), (execn 0 e (Iset x expr) (E.upd x (E.eval expr e) e)) | execn_Iif: forall n e (cond: E.Expr bool) p1 p2 e', (execn n e (if (E.eval cond e) then p1 else p2) e') -> (execn n e (Iif cond p1 p2) e') | execn_Iseq: forall n e p1 p2 e' e'', (exec e p1 e') -> (execn n e' p2 e'') -> (execn n e (Iseq p1 p2) e'') | execn_Iwhile: forall n e cond p e', (execn n e (Iif cond (Iseq p (Iwhile cond p)) Iskip) e') -> (execn (S n) e (Iwhile cond p) e').",
            "VernacInductive",
            "2a3d0fcd0052a7f520018f212c8ddad2da6689b4"
        ],
        [
            "Hint Resolve execn_Iskip execn_Iset execn_Iif execn_Iseq execn_Iwhile: hoare.",
            "VernacHints",
            "ff125193d087e6d1f49e38dfd38a3dbfc7a8c05f"
        ],
        [
            "Lemma exec_execn: forall ei p ef, (exec ei p ef) -> (exists n, execn n ei p ef).",
            "VernacStartTheoremProof",
            "34410aa9abf121adc7185ddbb6a394c7c6d934ab"
        ],
        [
            "induction 1; firstorder (eauto with hoare).",
            "VernacExtend",
            "e08af7f3d80d1bc3a7c545fbfc4cd1e10d45c4c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduces_wf: forall cond p, well_founded (reduces cond p).",
            "VernacStartTheoremProof",
            "0715450d727b6cafbd4ff973e3c174eb43167edd"
        ],
        [
            "unfold well_founded.",
            "VernacExtend",
            "e54483b8d4c15affa5848e44e1a0e79bf38074ce"
        ],
        [
            "intros cond p e0; apply Acc_intro.",
            "VernacExtend",
            "eb6219c540bcb6476f1f4bd7428f6f356d41bf26"
        ],
        [
            "intros e1 H; unfold reduces in H.",
            "VernacExtend",
            "75b9767c050127ce5d3b432f51cfd59b00a5e122"
        ],
        [
            "decompose [ex and] H; clear H.",
            "VernacExtend",
            "a3515d70fc011ed9a0ca03647084e3d338f4e394"
        ],
        [
            "clear H2 H0 e0.",
            "VernacExtend",
            "d701da6ec6725006dcb83f5a61baaafcbec20713"
        ],
        [
            "case (exec_execn H1).",
            "VernacExtend",
            "cb9975cd01e18720d9770f04bddd4237b0ac5908"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "generalize cond p e1 x; clear cond p e1 x H1.",
            "VernacExtend",
            "620b4dae5f15b87c35a6b6119483ba5f5842ed91"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "intros cond p e0 e1 H; inversion_clear H.",
            "VernacExtend",
            "e3906533b0c2bbdb05b1aa9ca0763cc659b95b1a"
        ],
        [
            "clear n; intros n HR cond p e0 e1 H.",
            "VernacExtend",
            "640e5826fc48aa74e4ec8ff5555c50137931b69a"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "set (b:=E.eval cond e0) in * |-.",
            "VernacExtend",
            "d4fef75501cb136807f7ed27cdfa9cbe55083ea1"
        ],
        [
            "cut (E.eval cond e0=b); auto.",
            "VernacExtend",
            "86971497894ccbaa685b6fb0170dc276d6c0b6ab"
        ],
        [
            "generalize H; clear H; case b; simpl.",
            "VernacExtend",
            "30757707f5b02fe4d95c13b5716ccfad10dbe840"
        ],
        [
            "intros H; inversion_clear H.",
            "VernacExtend",
            "e1236915a166469ea22e470950c13b6c7eb19b0e"
        ],
        [
            "intros; apply Acc_intro.",
            "VernacExtend",
            "890281168c4ed13e0a54958e9675ff0224a585f3"
        ],
        [
            "intros e2 H3; unfold reduces in H3.",
            "VernacExtend",
            "7f48828ef513bbed9961e9d2b0a02156a1d94264"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite (exec_deterministic H3 H0); eauto.",
            "VernacExtend",
            "90c46394c39ce767e8dba4aeb8242c9f29b945cb"
        ],
        [
            "intros H H0; apply Acc_intro.",
            "VernacExtend",
            "3a4ecb54368339885208b13cddf835955586cdf0"
        ],
        [
            "unfold reduces; rewrite H0.",
            "VernacExtend",
            "6fcbc93e5be57613d1678701a59ef4b194926ade"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve reduces_wf: hoare.",
            "VernacHints",
            "377e2c8edd378cebc215411283d72dfd5c6f0595"
        ],
        [
            "Lemma wp_complete: forall prog post, prog [= post =] |= (synt_wp prog post).",
            "VernacStartTheoremProof",
            "c3ac470d1c717510c20c118c96f152a8d56ded42"
        ],
        [
            "unfold wp.",
            "VernacExtend",
            "8409a2706400cd66e742ba3c0f73df4b9435870c"
        ],
        [
            "intros prog post e H; case H; clear H.",
            "VernacExtend",
            "3fc71d7442dc4a875dae5025ea6fd9966169ab5d"
        ],
        [
            "intros e' H; case H; clear H.",
            "VernacExtend",
            "ea62d511f1b8557fa1de365568bf59ac71b4aa43"
        ],
        [
            "generalize post e e'; clear post e e'; elim prog; clear prog; simpl.",
            "VernacExtend",
            "11cc53be0ebe9783b78e23b49af85716a44d8612"
        ],
        [
            "intros post e e' H; exec_inversion H; auto.",
            "VernacExtend",
            "dc6ab2e430ad203d2e62c9b18b6a04dafab154a1"
        ],
        [
            "intros A v expr post e e' H; exec_inversion H; auto.",
            "VernacExtend",
            "d75efc46eb1b0f23e9f8ee59938204394f720b27"
        ],
        [
            "intros cond p1 Hp1 p2 Hp2 post e e' H; exec_inversion H.",
            "VernacExtend",
            "bda8498269bb799b50d1483dc4720dfb45d408fe"
        ],
        [
            "case (E.eval cond e); simpl; firstorder auto || discriminate.",
            "VernacExtend",
            "ec6a34b0b4464843351d1d40d3fed3be061ad90b"
        ],
        [
            "intros p1 Hp1 p2 Hp2 post e e' H.",
            "VernacExtend",
            "6f1bcec575cdbd8e8f808897f494c3a9c2f16c35"
        ],
        [
            "exec_inversion H.",
            "VernacExtend",
            "3b1fc09bdf239cc7450463a6ac5dfde61e35f299"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "intros cond p Hp post e e' H H0.",
            "VernacExtend",
            "4ec528695a6da0788bac42e9f4dbbbda0bb82e34"
        ],
        [
            "constructor 1 with (x:=wp (Iwhile cond p) post).",
            "VernacExtend",
            "ca7c90e9d8ef0c3f8b5b1ee3ccfe81974849ff68"
        ],
        [
            "constructor 1 with (x:=reduces cond p).",
            "VernacExtend",
            "05e6a94f4f37729cf87ad44a9836f675c50cd6bd"
        ],
        [
            "unfold wp; (intuition eauto with hoare); dec2 e1 H1; case H1; clear H1; intros H1; exec_inversion H1; intros e2 H1; exec_inversion H1; rewrite H2; intros e3 H1; exec_inversion H1; unfold reduces; eauto with hoare.",
            "VernacExtend",
            "adb4f9cfd02ee9224475e89b97e28f75212df203"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve wp_complete wp_sound: hoare.",
            "VernacHints",
            "c89a669260bed7ccaeef9bdb173661c3bed689d6"
        ],
        [
            "Theorem soundness: forall pre p post, pre |= (synt_wp p post) -> pre |= p [=post=].",
            "VernacStartTheoremProof",
            "3d09df6d1bdeae793b4f4913fe2a10c96d488620"
        ],
        [
            "auto with hoare.",
            "VernacExtend",
            "add3fd202077151efc7ad8a91611dc208153f75b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem completeness: forall pre p post, pre |= p [=post=] -> pre |= (synt_wp p post).",
            "VernacStartTheoremProof",
            "952599389432e4094d2adc8eb97f060ae242a83e"
        ],
        [
            "intuition auto with hoare.",
            "VernacExtend",
            "4d991615b89df353657b4d28581e34806ca28846"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TotalHoareLogic.",
            "VernacEndSegment",
            "e4498766d2ae8449fb2b091b689280522e453c87"
        ]
    ],
    "proofs": [
        {
            "name": "synt_wp_monotonic",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; firstorder eauto.",
                        "VernacExtend",
                        "efb40efb7da9b10993646f8df483686e235ccc9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exec_inversion",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; try ((firstorder eauto with hoare); fail).",
                        "VernacExtend",
                        "4186f6666a6851043adc9919db0dea5d5cba3cdf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exec_test_inversion",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros A x expr e e' H.",
                        "VernacExtend",
                        "7ad92929e4450a6de54019915000c071512231c8"
                    ]
                },
                {
                    "command": [
                        "pattern e'; apply (exec_inversion H); simpl; auto.",
                        "VernacExtend",
                        "0acb86accda9e18c63c4662e986399398e3e989c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exec_deterministic",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "induction 1; intros ef' X; exec_inversion X; eauto.",
                        "VernacExtend",
                        "e89adf13710f1e49b8f53006d9d68bd3b66c0559"
                    ]
                },
                {
                    "command": [
                        "intros e1 e2 X1 X2; assert (X3: e'=e1); auto.",
                        "VernacExtend",
                        "db43041547843ec61edc1310768b9314c22c4dd7"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exec_execn",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "induction 1; firstorder (eauto with hoare).",
                        "VernacExtend",
                        "e08af7f3d80d1bc3a7c545fbfc4cd1e10d45c4c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduces_wf",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "unfold well_founded.",
                        "VernacExtend",
                        "e54483b8d4c15affa5848e44e1a0e79bf38074ce"
                    ]
                },
                {
                    "command": [
                        "intros cond p e0; apply Acc_intro.",
                        "VernacExtend",
                        "eb6219c540bcb6476f1f4bd7428f6f356d41bf26"
                    ]
                },
                {
                    "command": [
                        "intros e1 H; unfold reduces in H.",
                        "VernacExtend",
                        "75b9767c050127ce5d3b432f51cfd59b00a5e122"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H; clear H.",
                        "VernacExtend",
                        "a3515d70fc011ed9a0ca03647084e3d338f4e394"
                    ]
                },
                {
                    "command": [
                        "clear H2 H0 e0.",
                        "VernacExtend",
                        "d701da6ec6725006dcb83f5a61baaafcbec20713"
                    ]
                },
                {
                    "command": [
                        "case (exec_execn H1).",
                        "VernacExtend",
                        "cb9975cd01e18720d9770f04bddd4237b0ac5908"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "generalize cond p e1 x; clear cond p e1 x H1.",
                        "VernacExtend",
                        "620b4dae5f15b87c35a6b6119483ba5f5842ed91"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "intros cond p e0 e1 H; inversion_clear H.",
                        "VernacExtend",
                        "e3906533b0c2bbdb05b1aa9ca0763cc659b95b1a"
                    ]
                },
                {
                    "command": [
                        "clear n; intros n HR cond p e0 e1 H.",
                        "VernacExtend",
                        "640e5826fc48aa74e4ec8ff5555c50137931b69a"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "set (b:=E.eval cond e0) in * |-.",
                        "VernacExtend",
                        "d4fef75501cb136807f7ed27cdfa9cbe55083ea1"
                    ]
                },
                {
                    "command": [
                        "cut (E.eval cond e0=b); auto.",
                        "VernacExtend",
                        "86971497894ccbaa685b6fb0170dc276d6c0b6ab"
                    ]
                },
                {
                    "command": [
                        "generalize H; clear H; case b; simpl.",
                        "VernacExtend",
                        "30757707f5b02fe4d95c13b5716ccfad10dbe840"
                    ]
                },
                {
                    "command": [
                        "intros H; inversion_clear H.",
                        "VernacExtend",
                        "e1236915a166469ea22e470950c13b6c7eb19b0e"
                    ]
                },
                {
                    "command": [
                        "intros; apply Acc_intro.",
                        "VernacExtend",
                        "890281168c4ed13e0a54958e9675ff0224a585f3"
                    ]
                },
                {
                    "command": [
                        "intros e2 H3; unfold reduces in H3.",
                        "VernacExtend",
                        "7f48828ef513bbed9961e9d2b0a02156a1d94264"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite (exec_deterministic H3 H0); eauto.",
                        "VernacExtend",
                        "90c46394c39ce767e8dba4aeb8242c9f29b945cb"
                    ]
                },
                {
                    "command": [
                        "intros H H0; apply Acc_intro.",
                        "VernacExtend",
                        "3a4ecb54368339885208b13cddf835955586cdf0"
                    ]
                },
                {
                    "command": [
                        "unfold reduces; rewrite H0.",
                        "VernacExtend",
                        "6fcbc93e5be57613d1678701a59ef4b194926ade"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wp_complete",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "unfold wp.",
                        "VernacExtend",
                        "8409a2706400cd66e742ba3c0f73df4b9435870c"
                    ]
                },
                {
                    "command": [
                        "intros prog post e H; case H; clear H.",
                        "VernacExtend",
                        "3fc71d7442dc4a875dae5025ea6fd9966169ab5d"
                    ]
                },
                {
                    "command": [
                        "intros e' H; case H; clear H.",
                        "VernacExtend",
                        "ea62d511f1b8557fa1de365568bf59ac71b4aa43"
                    ]
                },
                {
                    "command": [
                        "generalize post e e'; clear post e e'; elim prog; clear prog; simpl.",
                        "VernacExtend",
                        "11cc53be0ebe9783b78e23b49af85716a44d8612"
                    ]
                },
                {
                    "command": [
                        "intros post e e' H; exec_inversion H; auto.",
                        "VernacExtend",
                        "dc6ab2e430ad203d2e62c9b18b6a04dafab154a1"
                    ]
                },
                {
                    "command": [
                        "intros A v expr post e e' H; exec_inversion H; auto.",
                        "VernacExtend",
                        "d75efc46eb1b0f23e9f8ee59938204394f720b27"
                    ]
                },
                {
                    "command": [
                        "intros cond p1 Hp1 p2 Hp2 post e e' H; exec_inversion H.",
                        "VernacExtend",
                        "bda8498269bb799b50d1483dc4720dfb45d408fe"
                    ]
                },
                {
                    "command": [
                        "case (E.eval cond e); simpl; firstorder auto || discriminate.",
                        "VernacExtend",
                        "ec6a34b0b4464843351d1d40d3fed3be061ad90b"
                    ]
                },
                {
                    "command": [
                        "intros p1 Hp1 p2 Hp2 post e e' H.",
                        "VernacExtend",
                        "6f1bcec575cdbd8e8f808897f494c3a9c2f16c35"
                    ]
                },
                {
                    "command": [
                        "exec_inversion H.",
                        "VernacExtend",
                        "3b1fc09bdf239cc7450463a6ac5dfde61e35f299"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "intros cond p Hp post e e' H H0.",
                        "VernacExtend",
                        "4ec528695a6da0788bac42e9f4dbbbda0bb82e34"
                    ]
                },
                {
                    "command": [
                        "constructor 1 with (x:=wp (Iwhile cond p) post).",
                        "VernacExtend",
                        "ca7c90e9d8ef0c3f8b5b1ee3ccfe81974849ff68"
                    ]
                },
                {
                    "command": [
                        "constructor 1 with (x:=reduces cond p).",
                        "VernacExtend",
                        "05e6a94f4f37729cf87ad44a9836f675c50cd6bd"
                    ]
                },
                {
                    "command": [
                        "unfold wp; (intuition eauto with hoare); dec2 e1 H1; case H1; clear H1; intros H1; exec_inversion H1; intros e2 H1; exec_inversion H1; rewrite H2; intros e3 H1; exec_inversion H1; unfold reduces; eauto with hoare.",
                        "VernacExtend",
                        "adb4f9cfd02ee9224475e89b97e28f75212df203"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "soundness",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "auto with hoare.",
                        "VernacExtend",
                        "add3fd202077151efc7ad8a91611dc208153f75b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "completeness",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intuition auto with hoare.",
                        "VernacExtend",
                        "4d991615b89df353657b4d28581e34806ca28846"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}