{
    "filename": "core/SingleSimulations.v",
    "coq_project": "verdi",
    "vernac_cmds": [
        [
            "Require Import Verdi.Verdi.",
            "VernacRequire",
            "0e1dbcd85e6257dada3df6be709464bd18aff5ac"
        ],
        [
            "Require Import Verdi.DynamicNetLemmas.",
            "VernacRequire",
            "269d37205ff469d4a54fa4c25b0c97b79983231f"
        ],
        [
            "Require Import Verdi.Ssrexport.",
            "VernacRequire",
            "221bef907661c3c9339fdc5a21b1a546e6646096"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Class MultiSingleParamsTotalMap (B0 : BaseParams) (P0 : MultiParams B0) (B1 : BaseParams) := { tot_s_map_data : @data B0 -> @data B1 ; tot_s_map_input : name -> @input B0 -> @input B1 ; tot_s_map_output : @output B0 -> @output B1 ; tot_s_map_msg : name -> name -> msg -> @input B1 }.",
            "VernacInductive",
            "a54fb013a97556359e7b7e8db128c10ccd3d71ba"
        ],
        [
            "Class MultiSingleParamsTotalMapCongruency (B0 : BaseParams) (B1 : BaseParams) (P0 : MultiParams B0) (P1 : SingleParams B1) (M : MultiSingleParamsTotalMap P0 B1) (me : name) : Prop := { tot_s_init_handlers_eq : tot_s_map_data (init_handlers me) = init_handler ; tot_s_input_handlers_eq : forall inp st out st' ps out' st'', input_handlers me inp st = (out, st', ps) -> input_handler (tot_s_map_input me inp) (tot_s_map_data st) = (out', st'') -> map tot_s_map_output out = out' /\\ tot_s_map_data st' = st'' }.",
            "VernacInductive",
            "a6ce0ad3cadc5857b94cf6a96b51edd8b980ea41"
        ],
        [
            "Section SingleSimulations.",
            "VernacBeginSection",
            "d4b3a0470cbc85a8086c5823b3405da9e98a6c25"
        ],
        [
            "Context {base_fst : BaseParams}.",
            "VernacContext",
            "d15ff6357d38765456ab0d06b851489508d00f5e"
        ],
        [
            "Context {base_snd : BaseParams}.",
            "VernacContext",
            "21faa6db454b7835ed524042e2d9185a412015f4"
        ],
        [
            "Context {multi : MultiParams base_fst}.",
            "VernacContext",
            "dcd55691edfa6e4a9309fd0789a5e7bc3019e098"
        ],
        [
            "Context {overlay : NameOverlayParams multi}.",
            "VernacContext",
            "33cf031d7bf315222fa4fd7f6aa4cbcee7006914"
        ],
        [
            "Context {fail_msg : FailMsgParams multi}.",
            "VernacContext",
            "e5d5286703838db396d526df1963d58fb40e9420"
        ],
        [
            "Context {single : SingleParams base_snd}.",
            "VernacContext",
            "cb11d8aca77c1e31a3df7e52373f94309976244f"
        ],
        [
            "Context {tot_map : MultiSingleParamsTotalMap multi base_snd}.",
            "VernacContext",
            "eada5603d543bfe070e682db5f58764cb085f35f"
        ],
        [
            "Context {me : name} {map_congr : MultiSingleParamsTotalMapCongruency single tot_map me}.",
            "VernacContext",
            "014cd74525b5526e05c727d13da10db8571a7c95"
        ],
        [
            "Definition step_ordered_failure_tot_s_net_handlers_eq := forall net failed tr src m ms out st' ps out' st'', step_ordered_failure_star step_ordered_failure_init (failed, net) tr -> onwPackets net src me = m :: ms -> ~ In me failed -> net_handlers me src m (onwState net me) = (out, st', ps) -> input_handler (tot_s_map_msg me src m) (tot_s_map_data (onwState net me)) = (out', st'') -> map tot_s_map_output out = out' /\\ tot_s_map_data st' = st''.",
            "VernacDefinition",
            "54f9a9927385614e945f1e46c1cb74853a15c200"
        ],
        [
            "Theorem step_ordered_failure_tot_one_mapped_simulation_1 : step_ordered_failure_tot_s_net_handlers_eq -> forall net net' failed failed' tr tr', step_ordered_failure_star step_ordered_failure_init (failed, net) tr -> step_ordered_failure (failed, net) (failed', net') tr' -> net.(onwState) me = net'.(onwState) me \\/ exists tr'', @step_s _ single (tot_s_map_data (net.(onwState) me)) (tot_s_map_data (net'.(onwState) me)) tr''.",
            "VernacStartTheoremProof",
            "c9e8cd8ffbc2755119f0b43a4a56a1172be8598e"
        ],
        [
            "move => H_net_eq net net' failed failed' tr tr' H_star H_step.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "invcs H_step.",
            "VernacExtend",
            "e43470c275b667a45e67c1d377e567fe8a96e1e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "break_if; last by left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "subst_max.",
            "VernacExtend",
            "f6f262ddf9a0101ff21eb6f26a81b50c0798e7cd"
        ],
        [
            "destruct (input_handler (tot_s_map_msg me from m) (tot_s_map_data (onwState net me))) eqn:?.",
            "VernacExtend",
            "b7a03c32908ad6ff6263eb0cafb31c604fa62ebf"
        ],
        [
            "have H_eq := H_net_eq _ _ _ _ _ _ _ _ _ _ _ H_star H3 H4 H5 Heqp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "exists (inl (tot_s_map_msg me from m) :: (map inr l0)).",
            "VernacExtend",
            "35bfb2d7004f3e40a0e0d09c97551909cbc68f47"
        ],
        [
            "apply: SST_deliver => //=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite Heqp H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "break_if; last by left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "subst_max.",
            "VernacExtend",
            "f6f262ddf9a0101ff21eb6f26a81b50c0798e7cd"
        ],
        [
            "destruct (input_handler (tot_s_map_input me inp) (tot_s_map_data (onwState net me))) eqn:?.",
            "VernacExtend",
            "22e707ed5600994ad4b3432832f1b08a7bc23b28"
        ],
        [
            "have H_eq_inp := @tot_s_input_handlers_eq _ _ _ _ _ _ map_congr _ _ _ _ _ _ _ H4 Heqp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "exists (inl (tot_s_map_input me inp) :: map inr l0).",
            "VernacExtend",
            "562ffbe526d22cc0273b94f41b2c410839da6085"
        ],
        [
            "apply: SST_deliver => //=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite Heqp H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_ordered_failure_tot_one_mapped_simulation_star_1 : step_ordered_failure_tot_s_net_handlers_eq -> forall net failed tr, step_ordered_failure_star step_ordered_failure_init (failed, net) tr -> exists tr', @step_s_star _ single init_handler (tot_s_map_data (net.(onwState) me)) tr'.",
            "VernacStartTheoremProof",
            "cf27bb244a48841169ab2fd2e0418c09c799718e"
        ],
        [
            "move => H_net_eq net failed tr H_st.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have ->: net = snd (failed, net) by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "remember step_ordered_failure_init as y in H_st.",
            "VernacExtend",
            "bb8681a741db1d2e337d71e9e0edbb1a59b34ade"
        ],
        [
            "move: Heqy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "induction H_st using refl_trans_1n_trace_n1_ind => /= H_init.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite H_init /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists [].",
            "VernacExtend",
            "0124358b905f1434771624034a4e7386196b0a4b"
        ],
        [
            "rewrite tot_s_init_handlers_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: RT1nTBase.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "concludes.",
            "VernacExtend",
            "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
        ],
        [
            "rewrite H_init {H_init x} in H_st1 H_st2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: x' H IHH_st1 H_st1 => failed' net'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: x'' H_st2 => failed'' net''.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => H_step2 H IHH_step1 H_step1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [tr' H_star] := IHH_step1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H_st := step_ordered_failure_tot_one_mapped_simulation_1 H_net_eq H_step1 H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: H_st => H_st; first by rewrite -H_st; exists tr'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [tr'' H_st'] := H_st.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (tr' ++ tr'').",
            "VernacExtend",
            "15764d8caba188b7105793aba072b02da540ea59"
        ],
        [
            "apply: (refl_trans_1n_trace_trans H_star).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have ->: tr'' = tr'' ++ [] by rewrite -app_nil_end.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply RT1nTStep with (x' := (tot_s_map_data (onwState net'' me))) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exact: RT1nTBase.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Context {new_msg : NewMsgParams multi}.",
            "VernacContext",
            "c80e97f99ffff17e0cf3ca5e73d43f9868a0cd1c"
        ],
        [
            "Definition step_ordered_dynamic_failure_tot_s_net_handlers_eq := forall net failed tr src m ms d out st' ps out' st'', step_ordered_dynamic_failure_star step_ordered_dynamic_failure_init (failed, net) tr -> odnwPackets net src me = m :: ms -> ~ In me failed -> odnwState net me = Some d -> net_handlers me src m d = (out, st', ps) -> input_handler (tot_s_map_msg me src m) (tot_s_map_data d) = (out', st'') -> map tot_s_map_output out = out' /\\ tot_s_map_data st' = st''.",
            "VernacDefinition",
            "6907e65552bfa3a1cf9991b9941540068880fb0f"
        ],
        [
            "Theorem step_ordered_dynamic_failure_tot_one_mapped_simulation_1 : step_ordered_dynamic_failure_tot_s_net_handlers_eq -> forall net net' failed failed' tr tr', step_ordered_dynamic_failure_star step_ordered_dynamic_failure_init (failed, net) tr -> step_ordered_dynamic_failure (failed, net) (failed', net') tr' -> forall d, net.(odnwState) me = Some d -> forall d', net'.(odnwState) me = Some d' -> d = d' \\/ exists tr'', @step_s _ single (tot_s_map_data d) (tot_s_map_data d') tr''.",
            "VernacStartTheoremProof",
            "24915b29478ebe52e63e12082a0cff1197d432ca"
        ],
        [
            "move => H_net_eq net net' failed failed' tr tr' H_star H_step d H_eq d' H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "invcs H_step.",
            "VernacExtend",
            "e43470c275b667a45e67c1d377e567fe8a96e1e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "have H_neq: h <> me.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move => H_n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -H_n in H_eq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H_eq_n := ordered_dynamic_uninitialized_state H_star _ H4.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by congruence.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "break_if; first by find_rewrite.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by congruence.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "break_if => H_eq'; last by left; congruence.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "find_injection.",
            "VernacExtend",
            "b88c4de2f1b9167bda726caae4165dc72888da3e"
        ],
        [
            "rewrite H_eq in H5.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "find_injection.",
            "VernacExtend",
            "b88c4de2f1b9167bda726caae4165dc72888da3e"
        ],
        [
            "destruct (input_handler (tot_s_map_msg me from m) (tot_s_map_data d0)) eqn:?.",
            "VernacExtend",
            "c368d79b76502f2e25bc369990ace508d6bae1ac"
        ],
        [
            "have H_eq_st := H_net_eq _ _ _ _ _ _ _ _ _ _ _ _ H_star H6 H3 H_eq H7 Heqp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "exists (inl (tot_s_map_msg me from m) :: (map inr l0)).",
            "VernacExtend",
            "35bfb2d7004f3e40a0e0d09c97551909cbc68f47"
        ],
        [
            "apply: SST_deliver => //=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite Heqp H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "break_if => H_eq'; last by left; rewrite H_eq in H_eq'; find_injection.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "find_injection.",
            "VernacExtend",
            "b88c4de2f1b9167bda726caae4165dc72888da3e"
        ],
        [
            "rewrite H_eq in H5.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "find_injection.",
            "VernacExtend",
            "b88c4de2f1b9167bda726caae4165dc72888da3e"
        ],
        [
            "destruct (input_handler (tot_s_map_input me inp) (tot_s_map_data d0)) eqn:?.",
            "VernacExtend",
            "9107297b62dff0584999b8de0bc0629ad7822334"
        ],
        [
            "have H_eq_inp := @tot_s_input_handlers_eq _ _ _ _ _ _ map_congr _ _ _ _ _ _ _ H6 Heqp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "exists (inl (tot_s_map_input me inp) :: map inr l0).",
            "VernacExtend",
            "562ffbe526d22cc0273b94f41b2c410839da6085"
        ],
        [
            "apply: SST_deliver => //=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite Heqp H0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "find_rewrite.",
            "VernacExtend",
            "7a65e4f552b93330a384f7173c61cfa61058bef5"
        ],
        [
            "by find_injection.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_ordered_dynamic_failure_tot_one_mapped_simulation_1_init : forall net net' failed failed' tr, step_ordered_dynamic_failure (failed, net) (failed', net') tr -> net.(odnwState) me = None -> forall d, net'.(odnwState) me = Some d -> tot_s_map_data d = init_handler.",
            "VernacStartTheoremProof",
            "39854343925757ef3964901ae50385503b0820bb"
        ],
        [
            "move => net net' failed failed' tr H_st H_eq d H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "invcs H_st => //=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "break_if => H_eq'; last by congruence.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "find_injection.",
            "VernacExtend",
            "b88c4de2f1b9167bda726caae4165dc72888da3e"
        ],
        [
            "by rewrite tot_s_init_handlers_eq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by break_if => H_eq'; congruence.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: H_eq'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /update.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by break_if => H_eq'; congruence.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by congruence.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_ordered_dynamic_failure_tot_one_mapped_simulation_star_1 : step_ordered_dynamic_failure_tot_s_net_handlers_eq -> forall net failed tr, step_ordered_dynamic_failure_star step_ordered_dynamic_failure_init (failed, net) tr -> forall d, net.(odnwState) me = Some d -> exists tr', @step_s_star _ single init_handler (tot_s_map_data d) tr'.",
            "VernacStartTheoremProof",
            "60c038b61567c6acfb20151ad360e60d035f6420"
        ],
        [
            "move => H_net_eq net failed tr H_st.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have ->: net = snd (failed, net) by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "remember step_ordered_dynamic_failure_init as y in H_st.",
            "VernacExtend",
            "91348b5575b50f593f6bb282da0c30c2b3cb1f4d"
        ],
        [
            "move: Heqy.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "induction H_st using refl_trans_1n_trace_n1_ind => /= H_init; first by rewrite H_init.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "concludes.",
            "VernacExtend",
            "3697d2f68611e2ea2e021baaf4e64cd81f6b62ed"
        ],
        [
            "rewrite H_init {H_init x} in H_st1 H_st2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: x' H IHH_st1 H_st1 => failed' net'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: x'' H_st2 => failed'' net''.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => H_step2 H IHH_step1 H_step1 d H_eq.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case H_eq': (odnwState net' me) => [d'|]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists [].",
            "VernacExtend",
            "0124358b905f1434771624034a4e7386196b0a4b"
        ],
        [
            "have H_eq_i := step_ordered_dynamic_failure_tot_one_mapped_simulation_1_init H H_eq' H_eq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite H_eq_i.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exact: RT1nTBase.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "have [tr' H_star] := IHH_step1 _ H_eq'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have H_st := step_ordered_dynamic_failure_tot_one_mapped_simulation_1 H_net_eq H_step1 H H_eq' H_eq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: H_st => H_st; first by rewrite -H_st; exists tr'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [tr'' H_st'] := H_st.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (tr' ++ tr'').",
            "VernacExtend",
            "15764d8caba188b7105793aba072b02da540ea59"
        ],
        [
            "apply: (refl_trans_1n_trace_trans H_star).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have ->: tr'' = tr'' ++ [] by rewrite -app_nil_end.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply RT1nTStep with (x' := (tot_s_map_data d)) => //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "exact: RT1nTBase.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SingleSimulations.",
            "VernacEndSegment",
            "5147b6c14c6035f4989f48035103f0234419ee75"
        ]
    ],
    "proofs": [
        {
            "name": "step_ordered_failure_tot_one_mapped_simulation_1",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "move => H_net_eq net net' failed failed' tr tr' H_star H_step.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "invcs H_step.",
                        "VernacExtend",
                        "e43470c275b667a45e67c1d377e567fe8a96e1e2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "break_if; last by left.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "subst_max.",
                        "VernacExtend",
                        "f6f262ddf9a0101ff21eb6f26a81b50c0798e7cd"
                    ]
                },
                {
                    "command": [
                        "destruct (input_handler (tot_s_map_msg me from m) (tot_s_map_data (onwState net me))) eqn:?.",
                        "VernacExtend",
                        "b7a03c32908ad6ff6263eb0cafb31c604fa62ebf"
                    ]
                },
                {
                    "command": [
                        "have H_eq := H_net_eq _ _ _ _ _ _ _ _ _ _ _ H_star H3 H4 H5 Heqp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "exists (inl (tot_s_map_msg me from m) :: (map inr l0)).",
                        "VernacExtend",
                        "35bfb2d7004f3e40a0e0d09c97551909cbc68f47"
                    ]
                },
                {
                    "command": [
                        "apply: SST_deliver => //=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heqp H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "break_if; last by left.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "subst_max.",
                        "VernacExtend",
                        "f6f262ddf9a0101ff21eb6f26a81b50c0798e7cd"
                    ]
                },
                {
                    "command": [
                        "destruct (input_handler (tot_s_map_input me inp) (tot_s_map_data (onwState net me))) eqn:?.",
                        "VernacExtend",
                        "22e707ed5600994ad4b3432832f1b08a7bc23b28"
                    ]
                },
                {
                    "command": [
                        "have H_eq_inp := @tot_s_input_handlers_eq _ _ _ _ _ _ map_congr _ _ _ _ _ _ _ H4 Heqp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "exists (inl (tot_s_map_input me inp) :: map inr l0).",
                        "VernacExtend",
                        "562ffbe526d22cc0273b94f41b2c410839da6085"
                    ]
                },
                {
                    "command": [
                        "apply: SST_deliver => //=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heqp H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_ordered_dynamic_failure_tot_one_mapped_simulation_1",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "move => H_net_eq net net' failed failed' tr tr' H_star H_step d H_eq d' H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "invcs H_step.",
                        "VernacExtend",
                        "e43470c275b667a45e67c1d377e567fe8a96e1e2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "have H_neq: h <> me.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move => H_n.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite -H_n in H_eq.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have H_eq_n := ordered_dynamic_uninitialized_state H_star _ H4.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by congruence.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "break_if; first by find_rewrite.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by congruence.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "break_if => H_eq'; last by left; congruence.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "find_injection.",
                        "VernacExtend",
                        "b88c4de2f1b9167bda726caae4165dc72888da3e"
                    ]
                },
                {
                    "command": [
                        "rewrite H_eq in H5.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "find_injection.",
                        "VernacExtend",
                        "b88c4de2f1b9167bda726caae4165dc72888da3e"
                    ]
                },
                {
                    "command": [
                        "destruct (input_handler (tot_s_map_msg me from m) (tot_s_map_data d0)) eqn:?.",
                        "VernacExtend",
                        "c368d79b76502f2e25bc369990ace508d6bae1ac"
                    ]
                },
                {
                    "command": [
                        "have H_eq_st := H_net_eq _ _ _ _ _ _ _ _ _ _ _ _ H_star H6 H3 H_eq H7 Heqp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "exists (inl (tot_s_map_msg me from m) :: (map inr l0)).",
                        "VernacExtend",
                        "35bfb2d7004f3e40a0e0d09c97551909cbc68f47"
                    ]
                },
                {
                    "command": [
                        "apply: SST_deliver => //=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heqp H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "break_if => H_eq'; last by left; rewrite H_eq in H_eq'; find_injection.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "find_injection.",
                        "VernacExtend",
                        "b88c4de2f1b9167bda726caae4165dc72888da3e"
                    ]
                },
                {
                    "command": [
                        "rewrite H_eq in H5.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "find_injection.",
                        "VernacExtend",
                        "b88c4de2f1b9167bda726caae4165dc72888da3e"
                    ]
                },
                {
                    "command": [
                        "destruct (input_handler (tot_s_map_input me inp) (tot_s_map_data d0)) eqn:?.",
                        "VernacExtend",
                        "9107297b62dff0584999b8de0bc0629ad7822334"
                    ]
                },
                {
                    "command": [
                        "have H_eq_inp := @tot_s_input_handlers_eq _ _ _ _ _ _ map_congr _ _ _ _ _ _ _ H6 Heqp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "exists (inl (tot_s_map_input me inp) :: map inr l0).",
                        "VernacExtend",
                        "562ffbe526d22cc0273b94f41b2c410839da6085"
                    ]
                },
                {
                    "command": [
                        "apply: SST_deliver => //=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite Heqp H0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "find_rewrite.",
                        "VernacExtend",
                        "7a65e4f552b93330a384f7173c61cfa61058bef5"
                    ]
                },
                {
                    "command": [
                        "by find_injection.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_ordered_dynamic_failure_tot_one_mapped_simulation_1_init",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "move => net net' failed failed' tr H_st H_eq d H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "invcs H_st => //=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "break_if => H_eq'; last by congruence.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "find_injection.",
                        "VernacExtend",
                        "b88c4de2f1b9167bda726caae4165dc72888da3e"
                    ]
                },
                {
                    "command": [
                        "by rewrite tot_s_init_handlers_eq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by break_if => H_eq'; congruence.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: H_eq'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /update.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by break_if => H_eq'; congruence.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by congruence.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}