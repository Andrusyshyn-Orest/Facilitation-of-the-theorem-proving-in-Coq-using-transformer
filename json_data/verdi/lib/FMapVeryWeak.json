{
    "filename": "lib/FMapVeryWeak.v",
    "coq_project": "verdi",
    "vernac_cmds": [
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Require Import FMapInterface.",
            "VernacRequire",
            "859d4a6fb510d42b42bf32264f6be7d5e2f2d46e"
        ],
        [
            "Require Import FMapPositive.",
            "VernacRequire",
            "f7e459fa6c36e80816f0bc229aff41135ca2b404"
        ],
        [
            "Require Import FMapList.",
            "VernacRequire",
            "e5e50e6e5757092b618d1ad0d20e053bfaccbf7a"
        ],
        [
            "Require Import FMapFacts.",
            "VernacRequire",
            "a5dcb1c0e20f3108a722a6daca979f661da25232"
        ],
        [
            "Require Import String.",
            "VernacRequire",
            "c8f60f008dd1a565dde55d26cee568a599a023b3"
        ],
        [
            "Require Import Ascii.",
            "VernacRequire",
            "d2918c7630ee33e5ba7063ea41095064ac1a0f04"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import StructTact.StructTactics.",
            "VernacRequire",
            "38f6d2cc08bbb87183850d39d33eebaeff475956"
        ],
        [
            "Require Import StructTact.StringOrders.",
            "VernacRequire",
            "af866c097933b08962b42f38d41368ca6902ef9e"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Module Type VWS.",
            "VernacDeclareModuleType",
            "f6c45cfa89f65429f87fc96cada6eb6fef53f50d"
        ],
        [
            "Declare Module E : DecidableType.",
            "VernacDeclareModule",
            "8534b3930d405df41331e1f3711dea3f7c488aee"
        ],
        [
            "Definition key := E.t.",
            "VernacDefinition",
            "fd09f36b2126b865eb099cbc442b5be4de605813"
        ],
        [
            "Hint Transparent key.",
            "VernacHints",
            "6e951250ef0415b21eca916df2eb0ef5fc023496"
        ],
        [
            "Parameter t : Type -> Type.",
            "VernacAssumption",
            "1d846409099b63634901392e9a4a7085143e1525"
        ],
        [
            "Section Types.",
            "VernacBeginSection",
            "8ffaebc99a5eccf7f157cdf6cbf3667e46e02970"
        ],
        [
            "Variable elt:Type.",
            "VernacAssumption",
            "b310aa6dfd45260477c670b93268036cda9cb86b"
        ],
        [
            "Parameter empty : t elt.",
            "VernacAssumption",
            "82a22fd7beab13715492f6ea9d54ab812782f2da"
        ],
        [
            "Parameter add : key -> elt -> t elt -> t elt.",
            "VernacAssumption",
            "16f2b2363b66f4d4902250b1dc645fb09dba59dd"
        ],
        [
            "Parameter find : key -> t elt -> option elt.",
            "VernacAssumption",
            "094cfb62087d4d8f86b5dee62478557bbe05b290"
        ],
        [
            "Parameter remove : key -> t elt -> t elt.",
            "VernacAssumption",
            "256e0f407c6dbb672d90ca3c388cdd43543c0150"
        ],
        [
            "Parameter empty_o : forall x, find x empty = None.",
            "VernacAssumption",
            "6677fe54f19faf2f0e78a792fd04989a2e451a29"
        ],
        [
            "Parameter add_eq_o : forall m x y e, E.eq x y -> find y (add x e m) = Some e.",
            "VernacAssumption",
            "b25e7fbc20020267ae9a4d0b3ed8f12743b23417"
        ],
        [
            "Parameter add_neq_o : forall m x y e, ~ E.eq x y -> find y (add x e m) = find y m.",
            "VernacAssumption",
            "2af7a744d4f3310377ffb2a15bb9f267d7886997"
        ],
        [
            "Parameter remove_eq_o : forall m x y, E.eq x y -> find y (remove x m) = None.",
            "VernacAssumption",
            "d7f4b57fc1b939b3959203487b4013c3c6eddda9"
        ],
        [
            "Parameter remove_neq_o : forall m x y, ~ E.eq x y -> find y (remove x m) = find y m.",
            "VernacAssumption",
            "04cfcf545835ab7be0db386e01a35e7a2ed6a164"
        ],
        [
            "End Types.",
            "VernacEndSegment",
            "87d3ff0afbb37f98e2854c914a2ac7345ad86aa2"
        ],
        [
            "End VWS.",
            "VernacEndSegment",
            "8be1f4885171c8465e4ad8201e79ea8bc51d8343"
        ],
        [
            "Module WS_to_VWS (Map : WS) <: VWS.",
            "VernacDefineModule",
            "afb43ecd8fc3a5baedcea6bb3ac08cb00608e36b"
        ],
        [
            "Module E := Map.E.",
            "VernacDefineModule",
            "35c090f1f57ee796d2e7c4e19df3ef13a378aacd"
        ],
        [
            "Module F := Facts Map.",
            "VernacDefineModule",
            "49ad3099744ea39e23b4e8f0d53621d369f3e340"
        ],
        [
            "Definition key := E.t.",
            "VernacDefinition",
            "fd09f36b2126b865eb099cbc442b5be4de605813"
        ],
        [
            "Definition t := Map.t.",
            "VernacDefinition",
            "030e18b3a9bafd4988c7eeeba977becf9f1e9911"
        ],
        [
            "Definition empty := Map.empty.",
            "VernacDefinition",
            "cb19219e39d32289b7afe4018a44948fd2e3c31d"
        ],
        [
            "Definition add := Map.add.",
            "VernacDefinition",
            "34a80cb248d0dacfb3d24d747919d4380ed7cf16"
        ],
        [
            "Definition find := Map.find.",
            "VernacDefinition",
            "6bf75e0b5317ee6a704531ac015729a96108b6e2"
        ],
        [
            "Definition remove := Map.remove.",
            "VernacDefinition",
            "b542f8782a258b7268451dc52b0220ac3d53a94c"
        ],
        [
            "Definition empty_o := F.empty_o.",
            "VernacDefinition",
            "11c9d66ff123aefcad089a3ea1eefd8aa3b021b1"
        ],
        [
            "Definition add_eq_o := F.add_eq_o.",
            "VernacDefinition",
            "c93424ad6175508af0ba7fd4946a329d3cd40dc1"
        ],
        [
            "Definition add_neq_o := F.add_neq_o.",
            "VernacDefinition",
            "e8c4f7d397ea7ac57910dd419e15553373a2d9a9"
        ],
        [
            "Definition remove_eq_o := F.remove_eq_o.",
            "VernacDefinition",
            "bfb8f2c0c1904842e9fff71ec9b54289f71ee2eb"
        ],
        [
            "Definition remove_neq_o := F.remove_neq_o.",
            "VernacDefinition",
            "9a036fbc34d8ef09b0091b3bd00b564e9b3fed44"
        ],
        [
            "End WS_to_VWS.",
            "VernacEndSegment",
            "0a670fb920f9f0dc8281dcede3e9bbda415d5be1"
        ],
        [
            "Module StringMapList := FMapList.Make string_lex_as_OT_compat.",
            "VernacDefineModule",
            "f6649af2d31268b6b00e11f6a0a08b88c291dc21"
        ],
        [
            "Module LinearTimeStringMap <: VWS := WS_to_VWS StringMapList.",
            "VernacDefineModule",
            "c3f7a7253851b5baa09bc824638004c3f693d0a6"
        ],
        [
            "Module Type IndexedType.",
            "VernacDeclareModuleType",
            "5f4f58e327129f9b3f8ea9230f1d2cbe03c5da1e"
        ],
        [
            "Parameter t: Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Parameter index: t -> positive.",
            "VernacAssumption",
            "6d48463e8dc9c4cf633c8b5b2e68a0f52c3c8002"
        ],
        [
            "Parameter index_inj: forall (x y: t), index x = index y -> x = y.",
            "VernacAssumption",
            "48ffee91ea4fa4192ab0cadedeeb68c7427fbbbd"
        ],
        [
            "Parameter eq: forall (x y: t), {x = y} + {x <> y}.",
            "VernacAssumption",
            "36485c32d5d151843f7e2f2d9ec5b7f7c0c26149"
        ],
        [
            "End IndexedType.",
            "VernacEndSegment",
            "7b8b5eaaac8cff8a44bb49836c791dea1a911556"
        ],
        [
            "Module IT_to_DT (I : IndexedType) <: DecidableType.",
            "VernacDefineModule",
            "ebf2e77f2812d2ac404b2f1220209bf2a7dd7dee"
        ],
        [
            "Definition t := I.t.",
            "VernacDefinition",
            "7abedac455e23e3ab84b235ce7155938340fd249"
        ],
        [
            "Definition eq := @eq t.",
            "VernacDefinition",
            "ceaa1ec079deafccfe48d413159f3888ed196b1e"
        ],
        [
            "Definition eq_refl := @eq_refl t.",
            "VernacDefinition",
            "e768147d3273826db3b730af87eb4e6d41b4f404"
        ],
        [
            "Definition eq_sym := @eq_sym t.",
            "VernacDefinition",
            "6aaf9c2bde286f06a2d76084988582b831eeb120"
        ],
        [
            "Definition eq_trans := @eq_trans t.",
            "VernacDefinition",
            "5c7250bc18f5bc0034c40609acbc0ae2bb1d5350"
        ],
        [
            "Definition eq_dec := I.eq.",
            "VernacDefinition",
            "061461724d3f89a508eb4131547c039eba0c59c0"
        ],
        [
            "End IT_to_DT.",
            "VernacEndSegment",
            "822fbc732d716b49623f1d9e32940e85e571945f"
        ],
        [
            "Module IndexedPositiveMap (X : IndexedType) <: VWS.",
            "VernacDefineModule",
            "0068eb66cf95760471a6d4c826ac8fb221199847"
        ],
        [
            "Module E := IT_to_DT X.",
            "VernacDefineModule",
            "5452a36e29c1dad415cfb74c24106a89f1f99084"
        ],
        [
            "Module M := PositiveMap.",
            "VernacDefineModule",
            "387cbad082e10ac74965cdaf39d8a29e79e5bf88"
        ],
        [
            "Module F := Facts M.",
            "VernacDefineModule",
            "3f7d273d4000233527d668fe39dc2d43560650e5"
        ],
        [
            "Definition key := X.t.",
            "VernacDefinition",
            "a4017bb4ea3d793c2c3a043de86c8620ded974b2"
        ],
        [
            "Definition t := M.t.",
            "VernacDefinition",
            "b3d72cc3faf575c9783921cd3e33f8163dbcab8d"
        ],
        [
            "Definition empty := M.empty.",
            "VernacDefinition",
            "d05857c8abd938a7e4f2ec2ffc38c98f22dd01ff"
        ],
        [
            "Definition add (A : Type) (i : key) (v : A) (m : t A) : t A := M.add (X.index i) v m.",
            "VernacDefinition",
            "0f86a7592819151a361790fb66f7bb9121937fd8"
        ],
        [
            "Definition find (A : Type) (i : key) (m : t A) : option A := M.find (X.index i) m.",
            "VernacDefinition",
            "5af4c93066329f5d2ceb14b981fc01c5fe259d5f"
        ],
        [
            "Definition remove (A : Type) (i : key) (m : t A) : t A := M.remove (X.index i) m.",
            "VernacDefinition",
            "e3b6ef0d285c0feec8f356f0b41530beda3f6be9"
        ],
        [
            "Lemma empty_o : forall A x, find x (empty A) = None.",
            "VernacStartTheoremProof",
            "27e30fd5ebe70e2a76cb8ab19c0851c55c55156a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold find.",
            "VernacExtend",
            "bf0f657561dce85b6057b593be9f5201f08c90ea"
        ],
        [
            "apply F.empty_o.",
            "VernacExtend",
            "be4020a15123c03650a04be8f6baebf471825a56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_eq_o : forall A m x y e, E.eq x y -> @find A y (add x e m) = Some e.",
            "VernacStartTheoremProof",
            "4ba8410bcfde4e89d94efec5c8ad82c38f9fa78e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold find.",
            "VernacExtend",
            "bf0f657561dce85b6057b593be9f5201f08c90ea"
        ],
        [
            "apply F.add_eq_o.",
            "VernacExtend",
            "69b76c64435c225520513521d7f95d2e66e3c450"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neq_o : forall A m x y e, ~ E.eq x y -> find y (add x e m) = @find A y m.",
            "VernacStartTheoremProof",
            "63aa991e703bd1739ca5ef6fa0acde69c696ca87"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold find.",
            "VernacExtend",
            "bf0f657561dce85b6057b593be9f5201f08c90ea"
        ],
        [
            "apply F.add_neq_o.",
            "VernacExtend",
            "c1bac91627388c7505bdaf6e7519a274d3c1cfb6"
        ],
        [
            "intro H_eq.",
            "VernacExtend",
            "baf596488b81a575add16cd37fd6d49966e3d446"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply X.index_inj in H_eq.",
            "VernacExtend",
            "8ef8e49dc0f43cb96fba78adff1a45e9b5661be4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_eq_o : forall A m x y, E.eq x y -> @find A y (remove x m) = None.",
            "VernacStartTheoremProof",
            "c9379a30b12d8c3fd90710451248f7fb596a3d84"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold find.",
            "VernacExtend",
            "bf0f657561dce85b6057b593be9f5201f08c90ea"
        ],
        [
            "apply F.remove_eq_o.",
            "VernacExtend",
            "8447c549a7b36d90a575d1692f53daf167807e59"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_neq_o : forall A m x y, ~ E.eq x y -> find y (remove x m) = @find A y m.",
            "VernacStartTheoremProof",
            "297a540789528bdaf1c32129807528587649c22d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold find.",
            "VernacExtend",
            "bf0f657561dce85b6057b593be9f5201f08c90ea"
        ],
        [
            "apply F.remove_neq_o.",
            "VernacExtend",
            "4b525f90f2910b6b75d6f17d01137f926904f5ce"
        ],
        [
            "intro H_eq.",
            "VernacExtend",
            "baf596488b81a575add16cd37fd6d49966e3d446"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply X.index_inj in H_eq.",
            "VernacExtend",
            "8ef8e49dc0f43cb96fba78adff1a45e9b5661be4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IndexedPositiveMap.",
            "VernacEndSegment",
            "90e8b4fa881a9ad3f2a7e54c733162fdebec48e9"
        ],
        [
            "Module IndexedString <: IndexedType.",
            "VernacDefineModule",
            "319c0621a65e78f8146274a328b4092f19cf2ae4"
        ],
        [
            "Definition t := string.",
            "VernacDefinition",
            "ccafaaf34f8c7078d11e1b17292a5e2fb0170e88"
        ],
        [
            "Definition eq := string_dec.",
            "VernacDefinition",
            "07ee11f17263179e2413043538da3b4f8601df54"
        ],
        [
            "Fixpoint positive_of_digits (l : list bool) (p : positive) : positive := match l with | [] => p | b :: l' => if b then xI (positive_of_digits l' p) else xO (positive_of_digits l' p) end.",
            "VernacFixpoint",
            "c58f936b80b16001c3b1440bc08d1ad496fd31ea"
        ],
        [
            "Definition list_bool_of_ascii (a : ascii) : list bool := let (a0,a1,a2,a3,a4,a5,a6,a7) := a in [a0; a1; a2; a3; a4; a5; a6; a7].",
            "VernacDefinition",
            "5598936aa2cf80bddd4cc5a5333dfc5dda99c4fb"
        ],
        [
            "Fixpoint index (s : string) : positive := match s with | EmptyString => 1 | String a s' => positive_of_digits (list_bool_of_ascii a) (index s') end.",
            "VernacFixpoint",
            "3bc3f5eb9183d4e6e8ed05a56ed10391ad659094"
        ],
        [
            "Lemma positive_of_digits_inj : forall l l' p p', List.length l = List.length l' -> positive_of_digits l p = positive_of_digits l' p' -> l = l' /\\ p = p'.",
            "VernacStartTheoremProof",
            "077d68b290231fc91f9aed24873743f3c220d3b1"
        ],
        [
            "induction l; destruct l'; intros; try discriminate; auto.",
            "VernacExtend",
            "59fc079b15fc183a489f4a608423224c32ecc5a9"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "do 2 break_match; try discriminate; solve [ find_inversion; find_apply_hyp_hyp; break_and; subst; auto ].",
            "VernacExtend",
            "e875b1a1e46218f6d74fe613666ff8467062118a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem index_inj : forall (x y : t), index x = index y -> x = y.",
            "VernacStartTheoremProof",
            "1e3c6816088b6b3878f4611513ff2239edf98950"
        ],
        [
            "induction x; destruct y; intros.",
            "VernacExtend",
            "dbe33c78b2bd4ab2b321addb5a80359301235cf3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold list_bool_of_ascii in *.",
            "VernacExtend",
            "feed0c639cbe6e23bd5f6b7eaafd29132096b5ac"
        ],
        [
            "break_let; simpl in * ; repeat break_match; congruence.",
            "VernacExtend",
            "990fe5b1fa0ef666d849cbf0b81befd4c5217b0e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold list_bool_of_ascii in *.",
            "VernacExtend",
            "feed0c639cbe6e23bd5f6b7eaafd29132096b5ac"
        ],
        [
            "break_let; simpl in *; repeat break_match; congruence.",
            "VernacExtend",
            "990fe5b1fa0ef666d849cbf0b81befd4c5217b0e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "unfold list_bool_of_ascii in *.",
            "VernacExtend",
            "feed0c639cbe6e23bd5f6b7eaafd29132096b5ac"
        ],
        [
            "repeat break_let.",
            "VernacExtend",
            "af4c4045b2a41d256b959f44ffccc9ee0df74742"
        ],
        [
            "find_apply_lem_hyp positive_of_digits_inj.",
            "VernacExtend",
            "f5ee1659a1ebed88962113851ad587b1762be99a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "find_inversion.",
            "VernacExtend",
            "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IndexedString.",
            "VernacEndSegment",
            "7d6623407e61b44cf78dc1a7cdcd8656c9063e8d"
        ],
        [
            "Module LogTimeStringMap <: VWS := IndexedPositiveMap IndexedString.",
            "VernacDefineModule",
            "bda520236fd46c1e492f269c8ced818c567d2dba"
        ]
    ],
    "proofs": [
        {
            "name": "empty_o",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold find.",
                        "VernacExtend",
                        "bf0f657561dce85b6057b593be9f5201f08c90ea"
                    ]
                },
                {
                    "command": [
                        "apply F.empty_o.",
                        "VernacExtend",
                        "be4020a15123c03650a04be8f6baebf471825a56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_eq_o",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold find.",
                        "VernacExtend",
                        "bf0f657561dce85b6057b593be9f5201f08c90ea"
                    ]
                },
                {
                    "command": [
                        "apply F.add_eq_o.",
                        "VernacExtend",
                        "69b76c64435c225520513521d7f95d2e66e3c450"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neq_o",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold find.",
                        "VernacExtend",
                        "bf0f657561dce85b6057b593be9f5201f08c90ea"
                    ]
                },
                {
                    "command": [
                        "apply F.add_neq_o.",
                        "VernacExtend",
                        "c1bac91627388c7505bdaf6e7519a274d3c1cfb6"
                    ]
                },
                {
                    "command": [
                        "intro H_eq.",
                        "VernacExtend",
                        "baf596488b81a575add16cd37fd6d49966e3d446"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply X.index_inj in H_eq.",
                        "VernacExtend",
                        "8ef8e49dc0f43cb96fba78adff1a45e9b5661be4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_eq_o",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold find.",
                        "VernacExtend",
                        "bf0f657561dce85b6057b593be9f5201f08c90ea"
                    ]
                },
                {
                    "command": [
                        "apply F.remove_eq_o.",
                        "VernacExtend",
                        "8447c549a7b36d90a575d1692f53daf167807e59"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_neq_o",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold find.",
                        "VernacExtend",
                        "bf0f657561dce85b6057b593be9f5201f08c90ea"
                    ]
                },
                {
                    "command": [
                        "apply F.remove_neq_o.",
                        "VernacExtend",
                        "4b525f90f2910b6b75d6f17d01137f926904f5ce"
                    ]
                },
                {
                    "command": [
                        "intro H_eq.",
                        "VernacExtend",
                        "baf596488b81a575add16cd37fd6d49966e3d446"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply X.index_inj in H_eq.",
                        "VernacExtend",
                        "8ef8e49dc0f43cb96fba78adff1a45e9b5661be4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "positive_of_digits_inj",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "induction l; destruct l'; intros; try discriminate; auto.",
                        "VernacExtend",
                        "59fc079b15fc183a489f4a608423224c32ecc5a9"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "do 2 break_match; try discriminate; solve [ find_inversion; find_apply_hyp_hyp; break_and; subst; auto ].",
                        "VernacExtend",
                        "e875b1a1e46218f6d74fe613666ff8467062118a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "index_inj",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "induction x; destruct y; intros.",
                        "VernacExtend",
                        "dbe33c78b2bd4ab2b321addb5a80359301235cf3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold list_bool_of_ascii in *.",
                        "VernacExtend",
                        "feed0c639cbe6e23bd5f6b7eaafd29132096b5ac"
                    ]
                },
                {
                    "command": [
                        "break_let; simpl in * ; repeat break_match; congruence.",
                        "VernacExtend",
                        "990fe5b1fa0ef666d849cbf0b81befd4c5217b0e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold list_bool_of_ascii in *.",
                        "VernacExtend",
                        "feed0c639cbe6e23bd5f6b7eaafd29132096b5ac"
                    ]
                },
                {
                    "command": [
                        "break_let; simpl in *; repeat break_match; congruence.",
                        "VernacExtend",
                        "990fe5b1fa0ef666d849cbf0b81befd4c5217b0e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "unfold list_bool_of_ascii in *.",
                        "VernacExtend",
                        "feed0c639cbe6e23bd5f6b7eaafd29132096b5ac"
                    ]
                },
                {
                    "command": [
                        "repeat break_let.",
                        "VernacExtend",
                        "af4c4045b2a41d256b959f44ffccc9ee0df74742"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp positive_of_digits_inj.",
                        "VernacExtend",
                        "f5ee1659a1ebed88962113851ad587b1762be99a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "find_inversion.",
                        "VernacExtend",
                        "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}