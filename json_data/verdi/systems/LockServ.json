{
    "filename": "systems/LockServ.v",
    "coq_project": "verdi",
    "vernac_cmds": [
        [
            "Require Import Verdi.Verdi.",
            "VernacRequire",
            "0e1dbcd85e6257dada3df6be709464bd18aff5ac"
        ],
        [
            "Require Import Verdi.HandlerMonad.",
            "VernacRequire",
            "f97ef88927f192aa7dc6015f1c20d613a11a1006"
        ],
        [
            "Require Import StructTact.Fin.",
            "VernacRequire",
            "c9e0de746bf75099240966e65f0616da8f4d4fac"
        ],
        [
            "Local Arguments update {_} {_} _ _ _ _ _ : simpl never.",
            "VernacArguments",
            "58518d3b0cf998daca73acf32f30d0de10e4973c"
        ],
        [
            "Require Import Verdi.StatePacketPacketDecomposition.",
            "VernacRequire",
            "fd1a85b06b247d0096928f9da2ef53138f939054"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section LockServ.",
            "VernacBeginSection",
            "9132788d35115e774339d6aeb95079ac258c98c6"
        ],
        [
            "Variable num_Clients : nat.",
            "VernacAssumption",
            "cd9905bf4bedc7fe08e31223fa31440c4bb9c728"
        ],
        [
            "Definition Client_index := (fin num_Clients).",
            "VernacDefinition",
            "72cf8e3ee4f71721b3e259f4e685714357be862e"
        ],
        [
            "Inductive Name := | Client : Client_index -> Name | Server : Name.",
            "VernacInductive",
            "df678d2a273fde790874cec30f34ba81c9cf613b"
        ],
        [
            "Definition list_Clients := map Client (all_fin num_Clients).",
            "VernacDefinition",
            "0fcf458cf177597604c1319b8ba687cf17593b27"
        ],
        [
            "Definition Name_eq_dec : forall a b : Name, {a = b} + {a <> b}.",
            "VernacDefinition",
            "1aae4f35d241552feb420dc2e2b142953e79def2"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "apply fin_eq_dec.",
            "VernacExtend",
            "931d5b2a57230f862a1c5b6b0138b5def2727d34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive Msg := | Lock : Msg | Unlock : Msg | Locked : Msg.",
            "VernacInductive",
            "1a9b207150f9a516a5806780405c45741948b8d5"
        ],
        [
            "Definition Msg_eq_dec : forall a b : Msg, {a = b} + {a <> b}.",
            "VernacDefinition",
            "6a675e0f1b768d62f7949584c54e4aaa54fbcceb"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Input := Msg.",
            "VernacDefinition",
            "3cbe3f9cd27f752ef0bb7bdfd41f88affcc11397"
        ],
        [
            "Definition Output := Msg.",
            "VernacDefinition",
            "aa21c47948fac73b2d2249557c6212b7a5f3fa83"
        ],
        [
            "Record Data := mkData { queue : list Client_index ; held : bool }.",
            "VernacInductive",
            "c37adc0a35a4f864f5207aa3b0386d69dbacba44"
        ],
        [
            "Definition init_data (n : Name) : Data := mkData [] false.",
            "VernacDefinition",
            "fccbece12af8d53f98b1d4a50e115eaa1d574ac4"
        ],
        [
            "Definition Handler (S : Type) := GenHandler (Name * Msg) S Output unit.",
            "VernacDefinition",
            "5acff1a7abff7afe9bf31fee66d572b49e418e88"
        ],
        [
            "Definition ClientNetHandler (i : Client_index) (m : Msg) : Handler Data := match m with | Locked => (put (mkData [] true)) >> write_output Locked | _ => nop end.",
            "VernacDefinition",
            "6d1a26ea3d21cf88a53255400317ec09ab9911b1"
        ],
        [
            "Definition ClientIOHandler (i : Client_index) (m : Msg) : Handler Data := match m with | Lock => send (Server, Lock) | Unlock => data <- get ;; when (held data) (put (mkData [] false) >> send (Server, Unlock)) | _ => nop end.",
            "VernacDefinition",
            "8596d34004acb89d16cd11696d51d23c9a613f1a"
        ],
        [
            "Definition ServerNetHandler (src : Name) (m : Msg) : Handler Data := st <- get ;; let q := queue st in match m with | Lock => match src with | Server => nop | Client c => when (null q) (send (src, Locked)) >> put (mkData (q++[c]) (held st)) end | Unlock => match q with | _ :: x :: xs => put (mkData (x :: xs) (held st)) >> send (Client x, Locked) | _ => put (mkData [] (held st)) end | _ => nop end.",
            "VernacDefinition",
            "c671bd45dac13b0f692948886945bebacb0c123d"
        ],
        [
            "Definition ServerIOHandler (m : Msg) : Handler Data := nop.",
            "VernacDefinition",
            "0a2b14bbe8ceebd28c69559d18520c2c846b2044"
        ],
        [
            "Definition NetHandler (nm src : Name) (m : Msg) : Handler Data := match nm with | Client c => ClientNetHandler c m | Server => ServerNetHandler src m end.",
            "VernacDefinition",
            "f1bdc3f77beaa42944f030382cf1860b0222093a"
        ],
        [
            "Definition InputHandler (nm : Name) (m : Msg) : Handler Data := match nm with | Client c => ClientIOHandler c m | Server => ServerIOHandler m end.",
            "VernacDefinition",
            "ddd7b8731d6c85153c13b9f9e4b2cc3133914906"
        ],
        [
            "Ltac handler_unfold := repeat (monad_unfold; unfold NetHandler, InputHandler, ServerNetHandler, ClientNetHandler, ClientIOHandler, ServerIOHandler in *).",
            "VernacExtend",
            "ac71a9646648eec96c208eb32822b11860380148"
        ],
        [
            "Definition Nodes := Server :: list_Clients.",
            "VernacDefinition",
            "f3897c02a0282a9d6a28351551fa7ddebf74ab43"
        ],
        [
            "Theorem In_n_Nodes : forall n : Name, In n Nodes.",
            "VernacStartTheoremProof",
            "4c99f44ca39f948e12d5699916eb0f9e1092e095"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Nodes, list_Clients.",
            "VernacExtend",
            "ca90c95504d254f0c2bed9d37f8ef9f93a562657"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "apply all_fin_all.",
            "VernacExtend",
            "9864c7e2e691137e8b3f85a90e5a9c3439900ae4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem nodup : NoDup Nodes.",
            "VernacStartTheoremProof",
            "c0fa0ce2e5e4b8e8bfde85174fab014ec9b64ba5"
        ],
        [
            "unfold Nodes, list_Clients.",
            "VernacExtend",
            "ca90c95504d254f0c2bed9d37f8ef9f93a562657"
        ],
        [
            "apply NoDup_cons.",
            "VernacExtend",
            "cc464b56652aec4525eea2a16ddd0d64ff504b4d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "in_crush.",
            "VernacExtend",
            "1cec37b1df9aed7611c9dc2928e77e203488f72a"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply NoDup_map_injective.",
            "VernacExtend",
            "6635e4f4635d6e81b46adedda53ccae5e94618b9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply all_fin_NoDup.",
            "VernacExtend",
            "644459b099bbfc6f4498d25e0c86fd9a436f1a6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance LockServ_BaseParams : BaseParams := { data := Data ; input := Input ; output := Output }.",
            "VernacInstance",
            "cc026d7c9237c4828af4d4d17245ffed306b8732"
        ],
        [
            "Global Instance LockServ_MultiParams : MultiParams LockServ_BaseParams := { name := Name ; msg := Msg ; msg_eq_dec := Msg_eq_dec ; name_eq_dec := Name_eq_dec ; nodes := Nodes ; all_names_nodes := In_n_Nodes ; no_dup_nodes := nodup ; init_handlers := init_data ; net_handlers := fun dst src msg s => runGenHandler_ignore s (NetHandler dst src msg) ; input_handlers := fun nm msg s => runGenHandler_ignore s (InputHandler nm msg) }.",
            "VernacInstance",
            "ce4638c69a594309db2183f9e16e4777b7650b7d"
        ],
        [
            "Definition mutual_exclusion (sigma : name -> data) : Prop := forall m n, held (sigma (Client m)) = true -> held (sigma (Client n)) = true -> m = n.",
            "VernacDefinition",
            "4a361c1c5de2cbac35214b36f8ff02d80fc23844"
        ],
        [
            "Definition locks_correct (sigma : name -> data) : Prop := forall n, held (sigma (Client n)) = true -> exists t, queue (sigma Server) = n :: t.",
            "VernacDefinition",
            "2cc70ee908fb6043ba19aba52b2d6a73ff414e76"
        ],
        [
            "Lemma locks_correct_implies_mutex : forall sigma, locks_correct sigma -> mutual_exclusion sigma.",
            "VernacStartTheoremProof",
            "83177833902281bbee7bfe79e9600c2d814df9b9"
        ],
        [
            "unfold locks_correct, mutual_exclusion.",
            "VernacExtend",
            "9324e79453c52ba99d721dd064a887927a54e762"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat find_apply_hyp_hyp.",
            "VernacExtend",
            "de62d6af7cdfe0bb4635c1cf3fd39b045f4346ed"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "find_rewrite.",
            "VernacExtend",
            "7a65e4f552b93330a384f7173c61cfa61058bef5"
        ],
        [
            "find_inversion.",
            "VernacExtend",
            "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition valid_unlock q h c p := pSrc p = Client c /\\ (exists t, q = c :: t) /\\ h = false.",
            "VernacDefinition",
            "c09508605ee3e84ab00b8f1871cec0670d62ff24"
        ],
        [
            "Definition locks_correct_unlock (sigma : name -> data) (p : packet) : Prop := pBody p = Unlock -> exists c, valid_unlock (queue (sigma Server)) (held (sigma (Client c))) c p.",
            "VernacDefinition",
            "a069bec0f6ccfd5f363f0a27d2a3e27de6dc976b"
        ],
        [
            "Definition valid_locked q h c p := pDst p = Client c /\\ (exists t, q = c :: t) /\\ h = false.",
            "VernacDefinition",
            "c862337fca74719abf396cb21ac582d1c9a9abe0"
        ],
        [
            "Definition locks_correct_locked (sigma : name -> data) (p : packet) : Prop := pBody p = Locked -> exists c, valid_locked (queue (sigma Server)) (held (sigma (Client c))) c p.",
            "VernacDefinition",
            "fd22a7169beacfa3ca3c1dbac0f73d1643e86496"
        ],
        [
            "Definition LockServ_network_invariant (sigma : name -> data) (p : packet) : Prop := locks_correct_unlock sigma p /\\ locks_correct_locked sigma p.",
            "VernacDefinition",
            "2d3022a618301e819630dc4119cedbb473501ace"
        ],
        [
            "Definition LockServ_network_network_invariant (p q : packet) : Prop := (pBody p = Unlock -> pBody q = Unlock -> False) /\\ (pBody p = Locked -> pBody q = Unlock -> False) /\\ (pBody p = Unlock -> pBody q = Locked -> False) /\\ (pBody p = Locked -> pBody q = Locked -> False).",
            "VernacDefinition",
            "a51410f36a6579cae90e2f99724fb0f36750fd55"
        ],
        [
            "Lemma nwnw_sym : forall p q, LockServ_network_network_invariant p q -> LockServ_network_network_invariant q p.",
            "VernacStartTheoremProof",
            "689bc420ecfbace389246ba8ce0efb9395132aec"
        ],
        [
            "unfold LockServ_network_network_invariant.",
            "VernacExtend",
            "3000fb167d767989a1e73a884ea60cb8286838d2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_init : locks_correct init_handlers.",
            "VernacStartTheoremProof",
            "c707a30e035b3371497081a43eda5b03340d4eba"
        ],
        [
            "unfold locks_correct.",
            "VernacExtend",
            "18f2d2c4ef42489600e17569c8ee5ff308705b40"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma InputHandler_cases : forall h i st u out st' ms, InputHandler h i st = (u, out, st', ms) -> (exists c, h = Client c /\\ ((i = Lock /\\ out = [] /\\ st' = st /\\ ms = [(Server, Lock)]) \\/ (i = Unlock /\\ out = [] /\\ held st' = false /\\ ((held st = true /\\ ms = [(Server, Unlock)]) \\/ (st' = st /\\ ms = []))))) \\/ (out = [] /\\ st' = st /\\ ms = []).",
            "VernacStartTheoremProof",
            "bbc91128fdc4b8c7c7c6dddcd672a754c1377e90"
        ],
        [
            "handler_unfold.",
            "VernacExtend",
            "5f8b9c6121fe9e377ef14e48f6611dea5801e7a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat break_match; repeat tuple_inversion; subst; simpl in *; subst; simpl in *.",
            "VernacExtend",
            "b92b134623bfa40351e81eda0d83aa653b933201"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_update_false : forall sigma st' x, locks_correct sigma -> held st' = false -> locks_correct (update name_eq_dec sigma (Client x) st').",
            "VernacStartTheoremProof",
            "985fb5fd6ac7c255be2444adfe637dc1e64acb12"
        ],
        [
            "unfold locks_correct.",
            "VernacExtend",
            "18f2d2c4ef42489600e17569c8ee5ff308705b40"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (Name_eq_dec (Client x) (Client n)).",
            "VernacExtend",
            "0af4ee7702ab5bfc3182577eb953796682350b9c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "find_inversion.",
            "VernacExtend",
            "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac set_up_input_handlers := intros; find_apply_lem_hyp InputHandler_cases; intuition idtac; try break_exists; intuition idtac; subst; repeat find_rewrite; simpl in *; intuition idtac; repeat find_inversion; try now rewrite update_nop_ext.",
            "VernacExtend",
            "ce39f10cc71b02e6936f02cf56e12652333c4e8d"
        ],
        [
            "Lemma locks_correct_input_handlers : forall h i sigma u st' out ms, InputHandler h i (sigma h) = (u, out, st', ms) -> locks_correct sigma -> locks_correct (update name_eq_dec sigma h st').",
            "VernacStartTheoremProof",
            "f739533a0a9e3cda1bed3eaace83e6513039d10b"
        ],
        [
            "set_up_input_handlers; auto using locks_correct_update_false.",
            "VernacExtend",
            "4736be3c33a19ea4cc052d47257b66891e30fae6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ClientNetHandler_cases : forall c m st u out st' ms, ClientNetHandler c m st = (u, out, st', ms) -> ms = [] /\\ ((st' = st /\\ out = [] ) \\/ (m = Locked /\\ out = [Locked] /\\ held st' = true)).",
            "VernacStartTheoremProof",
            "473568ebe200b90ca5ba0949a2c819f75afc5b07"
        ],
        [
            "handler_unfold.",
            "VernacExtend",
            "5f8b9c6121fe9e377ef14e48f6611dea5801e7a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat break_match; repeat tuple_inversion; subst; auto.",
            "VernacExtend",
            "eacb95ce946796290cbb3c10cd0b091fd2a0b6a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ServerNetHandler_cases : forall src m st u out st' ms, ServerNetHandler src m st = (u, out, st', ms) -> out = [] /\\ ((exists c, src = Client c /\\ (m = Lock /\\ queue st' = queue st ++ [c] /\\ ((queue st = [] /\\ ms = [(Client c, Locked)]) \\/ (queue st <> [] /\\ ms = [])))) \\/ ((m = Unlock /\\ queue st' = tail (queue st) /\\ ((queue st' = [] /\\ ms = []) \\/ (exists next t, queue st' = next :: t /\\ ms = [(Client next, Locked)])))) \\/ ms = [] /\\ st' = st).",
            "VernacStartTheoremProof",
            "460d704a25318eaeef98dff132b0d1c2a49d8b41"
        ],
        [
            "handler_unfold.",
            "VernacExtend",
            "5f8b9c6121fe9e377ef14e48f6611dea5801e7a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat break_match; repeat tuple_inversion; subst.",
            "VernacExtend",
            "1c0661fad903c58b67bf94fdc4769ddea3922b21"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "find_apply_lem_hyp null_sound.",
            "VernacExtend",
            "09e633c4e2f290cf0f821eeb8fe59c1a44b475b7"
        ],
        [
            "find_rewrite.",
            "VernacExtend",
            "7a65e4f552b93330a384f7173c61cfa61058bef5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "find_apply_lem_hyp null_false_neq_nil.",
            "VernacExtend",
            "7e281f6968509b5cf17dc53f21697b112b2bb41e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct st; simpl in *; subst; auto.",
            "VernacExtend",
            "58e4ecd79bc351c4477f41f1703a9db2b446ca80"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intuition eauto.",
            "VernacExtend",
            "dfea5151303e8e1455eb6e7dac607bb27ed86a6a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition at_head_of_queue sigma c := (exists t, queue (sigma Server) = c :: t).",
            "VernacDefinition",
            "324f5bcb574b46c785fea241eaf6ffcc8cff780c"
        ],
        [
            "Lemma at_head_of_queue_intro : forall sigma c t, queue (sigma Server) = c :: t -> at_head_of_queue sigma c.",
            "VernacStartTheoremProof",
            "6660d2fedd8563c3cacb3594e08c0012455c63fb"
        ],
        [
            "unfold at_head_of_queue.",
            "VernacExtend",
            "9e714de86e85729480a239b5c2155ff578c5d9ee"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_update_true : forall sigma c st', held st' = true -> at_head_of_queue sigma c -> locks_correct sigma -> locks_correct (update name_eq_dec sigma (Client c) st').",
            "VernacStartTheoremProof",
            "3770ed80bb2be16baccbf11ee211a8cb4c402b52"
        ],
        [
            "unfold locks_correct.",
            "VernacExtend",
            "18f2d2c4ef42489600e17569c8ee5ff308705b40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Name_eq_dec (Client c) (Client n)); rewrite_update; try find_inversion; auto.",
            "VernacExtend",
            "aaddbe2dfe0ec11da07268098dbbfa484cd9468b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_at_head : forall sigma p c, pDst p = Client c -> pBody p = Locked -> locks_correct_locked sigma p -> at_head_of_queue sigma c.",
            "VernacStartTheoremProof",
            "a083f47bf06330a7846fcbb44e7a5e2bbf85bd7a"
        ],
        [
            "unfold locks_correct_locked.",
            "VernacExtend",
            "2d773a35ddf3c8c4433b23184a559dcaa0095925"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "repeat find_rewrite.",
            "VernacExtend",
            "2e0f7af91fb6dc6a2928bc530dda4cfbd03d3e68"
        ],
        [
            "find_inversion.",
            "VernacExtend",
            "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
        ],
        [
            "eauto using at_head_of_queue_intro.",
            "VernacExtend",
            "07394afdbbcf3d99248b34166edfdd3ea9eaf5cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_clients_false_locks_correct_server_update : forall sigma st, (forall c, held (sigma (Client c)) = false) -> locks_correct (update name_eq_dec sigma Server st).",
            "VernacStartTheoremProof",
            "f654e627929cf8fd6468500817f561481bc36a45"
        ],
        [
            "unfold locks_correct.",
            "VernacExtend",
            "18f2d2c4ef42489600e17569c8ee5ff308705b40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "now find_higher_order_rewrite.",
            "VernacExtend",
            "c4ef8dc2df2782e27edd7d4f1a58c6f152913374"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_true_at_head_of_queue : forall sigma x, locks_correct sigma -> held (sigma (Client x)) = true -> at_head_of_queue sigma x.",
            "VernacStartTheoremProof",
            "8eb6341f57cd9d3c871c625a0084865f542e9a8e"
        ],
        [
            "unfold locks_correct.",
            "VernacExtend",
            "18f2d2c4ef42489600e17569c8ee5ff308705b40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "eauto using at_head_of_queue_intro.",
            "VernacExtend",
            "07394afdbbcf3d99248b34166edfdd3ea9eaf5cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma at_head_of_nil : forall sigma c, at_head_of_queue sigma c -> queue (sigma Server) = [] -> False.",
            "VernacStartTheoremProof",
            "e367277ff38e1edf13cd69fe076e8a6ee4523555"
        ],
        [
            "unfold at_head_of_queue.",
            "VernacExtend",
            "9e714de86e85729480a239b5c2155ff578c5d9ee"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_queue_all_clients_false : forall sigma, locks_correct sigma -> queue (sigma Server) = [] -> (forall c, held (sigma (Client c)) = false).",
            "VernacStartTheoremProof",
            "26ffd2562a28ffe0b47e763b22b140eee374df00"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (held (sigma (Client c))) eqn:?; auto.",
            "VernacExtend",
            "ddb1e3774bdb64112ca4d2bccd7fb4b60a0726c0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eauto using at_head_of_nil, locks_correct_true_at_head_of_queue.",
            "VernacExtend",
            "f8cb0bc396671e38dbd1ab133be9da33b0ee9a0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlock_in_flight_all_clients_false : forall sigma p, pBody p = Unlock -> locks_correct_unlock sigma p -> locks_correct sigma -> (forall c, held (sigma (Client c)) = false).",
            "VernacStartTheoremProof",
            "ec403dffa9b0f51ed1fc028d9123a19fe732069a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (held (sigma (Client c))) eqn:?; auto.",
            "VernacExtend",
            "ddb1e3774bdb64112ca4d2bccd7fb4b60a0726c0"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "find_copy_apply_lem_hyp locks_correct_true_at_head_of_queue; auto.",
            "VernacExtend",
            "c36a1e4facfea32dac4973ff7eadb9a31a377750"
        ],
        [
            "unfold at_head_of_queue in *.",
            "VernacExtend",
            "663cad41045abb0a420a912a854ca9590a88b53c"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_at_head_preserved : forall sigma st', locks_correct sigma -> (forall c, at_head_of_queue sigma c -> at_head_of_queue (update name_eq_dec sigma Server st') c) -> locks_correct (update name_eq_dec sigma Server st').",
            "VernacStartTheoremProof",
            "aa621146f34b4839c0547982cb7a06c17e55f102"
        ],
        [
            "unfold locks_correct, at_head_of_queue.",
            "VernacExtend",
            "4b8b8d1c4cb618add19197ac0f89ce7d60f826d6"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma snoc_at_head_of_queue_preserved : forall sigma st' x, queue st' = queue (sigma Server) ++ [x] -> (forall c, at_head_of_queue sigma c -> at_head_of_queue (update name_eq_dec sigma Server st') c).",
            "VernacStartTheoremProof",
            "288346d04d99d87e01fbe5c687b2520ccd5de5eb"
        ],
        [
            "unfold at_head_of_queue.",
            "VernacExtend",
            "9e714de86e85729480a239b5c2155ff578c5d9ee"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "find_rewrite.",
            "VernacExtend",
            "7a65e4f552b93330a384f7173c61cfa61058bef5"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac set_up_net_handlers := intros; match goal with | [ H : context [ NetHandler (pDst ?p) _ _ _ ] |- _ ] => destruct (pDst p) eqn:? end; simpl in *; [find_apply_lem_hyp ClientNetHandler_cases | find_apply_lem_hyp ServerNetHandler_cases; intuition; try break_exists ]; intuition; subst; simpl in *; intuition; repeat find_rewrite; repeat find_inversion; simpl in *; try now rewrite update_nop_ext.",
            "VernacExtend",
            "bbf9e9865ba457aa4d00d485d59152a92341f25b"
        ],
        [
            "Lemma locks_correct_net_handlers : forall p sigma u st' out ms, NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> locks_correct_unlock sigma p -> locks_correct_locked sigma p -> locks_correct (update name_eq_dec sigma (pDst p) st').",
            "VernacStartTheoremProof",
            "43630d390a638ff6cccaf6b930a607f2027db47b"
        ],
        [
            "set_up_net_handlers; eauto using locks_correct_update_true, locks_correct_locked_at_head, all_clients_false_locks_correct_server_update, empty_queue_all_clients_false, locks_correct_at_head_preserved, snoc_at_head_of_queue_preserved, all_clients_false_locks_correct_server_update, unlock_in_flight_all_clients_false.",
            "VernacExtend",
            "e584bb09a64c75dc59e272f3707e13785b3436b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_sent_lock : forall sigma p, pBody p = Lock -> locks_correct_unlock sigma p.",
            "VernacStartTheoremProof",
            "35d2ff51ae7496bcdb71140f0c5750a71b35e267"
        ],
        [
            "unfold locks_correct_unlock.",
            "VernacExtend",
            "eb018548d33841759e69716a7f320294777c57a3"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_sent_locked : forall sigma p, pBody p = Locked -> locks_correct_unlock sigma p.",
            "VernacStartTheoremProof",
            "6aed5c2d67a3032d300ac98f7a8f8b117ffb5fd2"
        ],
        [
            "unfold locks_correct_unlock.",
            "VernacExtend",
            "eb018548d33841759e69716a7f320294777c57a3"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_input_handlers_old : forall h i sigma u st' out ms p, InputHandler h i (sigma h) = (u, out, st', ms) -> locks_correct sigma -> locks_correct_unlock sigma p -> locks_correct_unlock (update name_eq_dec sigma h st') p.",
            "VernacStartTheoremProof",
            "f62e5ec0c9fe77a2fa4ca22f17bad0fb18623fe3"
        ],
        [
            "set_up_input_handlers.",
            "VernacExtend",
            "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
        ],
        [
            "destruct (pBody p) eqn:?.",
            "VernacExtend",
            "a94e941ca09d224ff32b7ba73b9f498eb2513672"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using locks_correct_unlock_sent_lock.",
            "VernacExtend",
            "7b166d8e84b4046a20405d01d7718da72706b473"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now erewrite unlock_in_flight_all_clients_false in * by eauto.",
            "VernacExtend",
            "bfafdab03bca6c78450c4422bdd919d10cb3c2c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using locks_correct_unlock_sent_locked.",
            "VernacExtend",
            "d64641841a813976a42d94d812914e128cdd1978"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locked_in_flight_all_clients_false : forall sigma p, pBody p = Locked -> locks_correct_locked sigma p -> locks_correct sigma -> (forall c, held (sigma (Client c)) = false).",
            "VernacStartTheoremProof",
            "8661ebfc964ececa4879b5ef11ed7ec892cf98b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (held (sigma (Client c))) eqn:?; auto.",
            "VernacExtend",
            "ddb1e3774bdb64112ca4d2bccd7fb4b60a0726c0"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "find_copy_apply_lem_hyp locks_correct_true_at_head_of_queue; auto.",
            "VernacExtend",
            "c36a1e4facfea32dac4973ff7eadb9a31a377750"
        ],
        [
            "unfold at_head_of_queue in *.",
            "VernacExtend",
            "663cad41045abb0a420a912a854ca9590a88b53c"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_sent_lock : forall sigma p, pBody p = Lock -> locks_correct_locked sigma p.",
            "VernacStartTheoremProof",
            "26fb33b7afa8e31ac5106e9c7b098c1be4ad77b5"
        ],
        [
            "unfold locks_correct_locked.",
            "VernacExtend",
            "2d773a35ddf3c8c4433b23184a559dcaa0095925"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_sent_unlock : forall sigma p, pBody p = Unlock -> locks_correct_locked sigma p.",
            "VernacStartTheoremProof",
            "58e7d49a691fb58dd97b8764c456015f9f0452c6"
        ],
        [
            "unfold locks_correct_locked.",
            "VernacExtend",
            "2d773a35ddf3c8c4433b23184a559dcaa0095925"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_input_handlers_old : forall h i sigma u st' out ms p, InputHandler h i (sigma h) = (u, out, st', ms) -> locks_correct sigma -> locks_correct_locked sigma p -> locks_correct_locked (update name_eq_dec sigma h st') p.",
            "VernacStartTheoremProof",
            "4ce6c97d20a15ad3c0a64071987a21cdc70e441c"
        ],
        [
            "set_up_input_handlers.",
            "VernacExtend",
            "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
        ],
        [
            "destruct (pBody p) eqn:?.",
            "VernacExtend",
            "a94e941ca09d224ff32b7ba73b9f498eb2513672"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using locks_correct_locked_sent_lock.",
            "VernacExtend",
            "377486ee5100e878eceed1c78c088b016b577383"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using locks_correct_locked_sent_unlock.",
            "VernacExtend",
            "e9b51cf1c65a5ce1601b688b560bdf892f98f2ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now erewrite locked_in_flight_all_clients_false in * by eauto.",
            "VernacExtend",
            "2b122632478c47b00f5faeec3203dcd747d6fe26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_true_to_false : forall sigma p x st', at_head_of_queue sigma x -> held st' = false -> pSrc p = Client x -> locks_correct_unlock (update name_eq_dec sigma (Client x) st') p.",
            "VernacStartTheoremProof",
            "1088221794d0f35851925cebbbbcf57751830474"
        ],
        [
            "unfold locks_correct_unlock, valid_unlock.",
            "VernacExtend",
            "f02c3193ebf3e64b846f8af4649c74ca2ca08317"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intuition; now rewrite_update.",
            "VernacExtend",
            "04ee56459f55aea03165c0b21c7dac51b889056e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_input_handlers_new : forall h i sigma u st' out ms p, InputHandler h i (sigma h) = (u, out, st', ms) -> locks_correct sigma -> In (pDst p, pBody p) ms -> pSrc p = h -> locks_correct_unlock (update name_eq_dec sigma h st') p.",
            "VernacStartTheoremProof",
            "50e3ca0117db60acde5175abb015208e25f645cc"
        ],
        [
            "set_up_input_handlers; auto using locks_correct_unlock_sent_lock, locks_correct_unlock_true_to_false, locks_correct_true_at_head_of_queue.",
            "VernacExtend",
            "e4589395fd349d663e49c3f6a782518802bfa794"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_input_handlers_new : forall h i sigma u st' out ms p, InputHandler h i (sigma h) = (u, out, st', ms) -> In (pDst p, pBody p) ms -> locks_correct_locked (update name_eq_dec sigma h st') p.",
            "VernacStartTheoremProof",
            "f8ddb57821d83e113b27fea1520a86ec75179f6a"
        ],
        [
            "set_up_input_handlers; auto using locks_correct_locked_sent_lock, locks_correct_locked_sent_unlock.",
            "VernacExtend",
            "3278df1191679047c0432b3164ad46f3c77e632b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nwnw_locked_lock : forall p q, LockServ_network_network_invariant p q -> pBody p = Locked -> pBody q = Lock.",
            "VernacStartTheoremProof",
            "193fb7725dc89811241d878b477b4b06263ff860"
        ],
        [
            "unfold LockServ_network_network_invariant.",
            "VernacExtend",
            "3000fb167d767989a1e73a884ea60cb8286838d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (pBody q); intuition; try discriminate.",
            "VernacExtend",
            "f81c73abbf4ad808c1017a0499ee2ba54c8b9736"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nwnw_unlock_lock : forall p q, LockServ_network_network_invariant p q -> pBody p = Unlock -> pBody q = Lock.",
            "VernacStartTheoremProof",
            "d1aa9cee643c9019eaa1e65f64348f88c3aa51a2"
        ],
        [
            "unfold LockServ_network_network_invariant.",
            "VernacExtend",
            "3000fb167d767989a1e73a884ea60cb8286838d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (pBody q); intuition; try discriminate.",
            "VernacExtend",
            "f81c73abbf4ad808c1017a0499ee2ba54c8b9736"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_at_head : forall sigma p c, pSrc p = Client c -> pBody p = Unlock -> locks_correct_unlock sigma p -> at_head_of_queue sigma c.",
            "VernacStartTheoremProof",
            "bd55f376d7a51a33d38a2f86df48e7c147d6a6a9"
        ],
        [
            "unfold locks_correct_unlock.",
            "VernacExtend",
            "eb018548d33841759e69716a7f320294777c57a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "unfold valid_unlock in *.",
            "VernacExtend",
            "2a0dd59d0cff97170d81e147d1dca0a0b4137881"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "repeat find_rewrite.",
            "VernacExtend",
            "2e0f7af91fb6dc6a2928bc530dda4cfbd03d3e68"
        ],
        [
            "repeat find_inversion.",
            "VernacExtend",
            "610a52b1e463e62cd0972175e3f79f0f0fe13ec5"
        ],
        [
            "eauto using at_head_of_queue_intro.",
            "VernacExtend",
            "07394afdbbcf3d99248b34166edfdd3ea9eaf5cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_at_head_preserved : forall sigma st' p, locks_correct_unlock sigma p -> (forall c, at_head_of_queue sigma c -> at_head_of_queue (update name_eq_dec sigma Server st') c) -> locks_correct_unlock (update name_eq_dec sigma Server st') p.",
            "VernacStartTheoremProof",
            "7573e46f6211d2c4cdf68372e9b5ed46fc9ba1d9"
        ],
        [
            "unfold locks_correct_unlock, valid_unlock.",
            "VernacExtend",
            "f02c3193ebf3e64b846f8af4649c74ca2ca08317"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite_update.",
            "VernacExtend",
            "2895362348975215d5e1c56c5bf9342886cda1da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nil_at_head_of_queue_preserved : forall c sigma sigma', queue (sigma Server) = [] -> at_head_of_queue sigma c -> at_head_of_queue sigma' c.",
            "VernacStartTheoremProof",
            "e595c7787f7f3926e4d56ee147521101461c3a60"
        ],
        [
            "unfold at_head_of_queue.",
            "VernacExtend",
            "9e714de86e85729480a239b5c2155ff578c5d9ee"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_net_handlers_old : forall p sigma u st' out ms q, NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> locks_correct_unlock sigma q -> LockServ_network_network_invariant p q -> locks_correct_unlock (update name_eq_dec sigma (pDst p) st') q.",
            "VernacStartTheoremProof",
            "0769fda80cb08da21cc79352b839fbd760fb2ef6"
        ],
        [
            "set_up_net_handlers; eauto using locks_correct_unlock_sent_lock, nwnw_locked_lock, locks_correct_unlock_at_head_preserved, snoc_at_head_of_queue_preserved, nwnw_unlock_lock, nil_at_head_of_queue_preserved.",
            "VernacExtend",
            "ecfc6ebd1e4719daebeb594ae2e8a45dfd3a933c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_at_head_preserved : forall sigma st' p, locks_correct_locked sigma p -> (forall c, at_head_of_queue sigma c -> at_head_of_queue (update name_eq_dec sigma Server st') c) -> locks_correct_locked (update name_eq_dec sigma Server st') p.",
            "VernacStartTheoremProof",
            "950b484c7415e0faa8d5d83deaf60da634bf772b"
        ],
        [
            "unfold locks_correct_locked, valid_locked.",
            "VernacExtend",
            "02641564d56ebbcf5e83f337b2df846329de2db4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "break_exists.",
            "VernacExtend",
            "7914403b406cb602431a8c9ec3a15a70b4d83870"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite_update.",
            "VernacExtend",
            "2895362348975215d5e1c56c5bf9342886cda1da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_net_handlers_old : forall p sigma u st' out ms q, NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> locks_correct_locked sigma q -> LockServ_network_network_invariant p q -> locks_correct_locked (update name_eq_dec sigma (pDst p) st') q.",
            "VernacStartTheoremProof",
            "00daa96016a6885030427a9cc17f5010536013a8"
        ],
        [
            "set_up_net_handlers; eauto using locks_correct_locked_sent_lock, nwnw_locked_lock, locks_correct_locked_at_head_preserved, snoc_at_head_of_queue_preserved, nwnw_unlock_lock, nil_at_head_of_queue_preserved.",
            "VernacExtend",
            "9004305093ffa2def7d17fdab08020403a832847"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_unlock_net_handlers_new : forall p sigma u st' out ms q, NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> In (pDst q, pBody q) ms -> locks_correct_unlock (update name_eq_dec sigma (pDst p) st') q.",
            "VernacStartTheoremProof",
            "316a5f9cc896c8c55cf1c4d80e4bff1048a8dad8"
        ],
        [
            "set_up_net_handlers; auto using locks_correct_unlock_sent_locked.",
            "VernacExtend",
            "7df5bcb015bf92bf018a5c2acb8b344c781c525e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_intro : forall sigma p c t st', pDst p = Client c -> held (sigma (Client c)) = false -> queue st' = c :: t -> locks_correct_locked (update name_eq_dec sigma Server st') p.",
            "VernacStartTheoremProof",
            "a59cb4c7cf2c3c81fb988d129a4ba0324e1751db"
        ],
        [
            "unfold locks_correct_locked, valid_locked.",
            "VernacExtend",
            "02641564d56ebbcf5e83f337b2df846329de2db4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists c.",
            "VernacExtend",
            "683d4593ad0b3c7125e420e0670d5a4b0d3c38bc"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "now rewrite_update.",
            "VernacExtend",
            "2895362348975215d5e1c56c5bf9342886cda1da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite_update.",
            "VernacExtend",
            "2895362348975215d5e1c56c5bf9342886cda1da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_net_handlers_new : forall p sigma u st' out ms q, NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> locks_correct_unlock sigma p -> In (pDst q, pBody q) ms -> locks_correct_locked (update name_eq_dec sigma (pDst p) st') q.",
            "VernacStartTheoremProof",
            "2c2d59001e26476be2f1766a00d6f0f6d0935732"
        ],
        [
            "set_up_net_handlers; eauto using locks_correct_locked_intro, empty_queue_all_clients_false, unlock_in_flight_all_clients_false.",
            "VernacExtend",
            "33bac3a61ed5db4e92f6aef70a12e5628abf00d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nwnw_lock : forall p p', pBody p = Lock -> LockServ_network_network_invariant p p'.",
            "VernacStartTheoremProof",
            "a1ac824d82690128f2c82329d8dac3de5f574eb6"
        ],
        [
            "unfold LockServ_network_network_invariant.",
            "VernacExtend",
            "3000fb167d767989a1e73a884ea60cb8286838d2"
        ],
        [
            "intuition; simpl in *; congruence.",
            "VernacExtend",
            "9f91cac6d82742805237c7e2d955edbfdc19ba07"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LockServ_nwnw_input_handlers_old_new : forall h i sigma u st' out ms p p', InputHandler h i (sigma h) = (u, out, st', ms) -> locks_correct sigma -> LockServ_network_invariant sigma p -> In (pDst p', pBody p') ms -> pSrc p' = h -> LockServ_network_network_invariant p p'.",
            "VernacStartTheoremProof",
            "4ee8eea6fa425e42f416ab9eac427b16b4d9ac0b"
        ],
        [
            "unfold LockServ_network_invariant.",
            "VernacExtend",
            "8d6f737d98ed95e2b2cec61d9882e3a8241e6ac5"
        ],
        [
            "set_up_input_handlers.",
            "VernacExtend",
            "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using nwnw_sym, nwnw_lock.",
            "VernacExtend",
            "f6ba0c3d8fcdcc5a14b82488a9ee69f0da8da843"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (pBody p) eqn:?.",
            "VernacExtend",
            "a94e941ca09d224ff32b7ba73b9f498eb2513672"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto using nwnw_lock.",
            "VernacExtend",
            "3de35415d29b86c566d33fdd3bd118becaa5b5e8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now erewrite unlock_in_flight_all_clients_false in * by eauto.",
            "VernacExtend",
            "bfafdab03bca6c78450c4422bdd919d10cb3c2c3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now erewrite locked_in_flight_all_clients_false in * by eauto.",
            "VernacExtend",
            "2b122632478c47b00f5faeec3203dcd747d6fe26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LockServ_nwnw_input_handlers_new_new : forall h i sigma u st' out ms, InputHandler h i (sigma h) = (u, out, st', ms) -> distinct_pairs_and LockServ_network_network_invariant (map (fun m => mkPacket h (fst m) (snd m)) ms).",
            "VernacStartTheoremProof",
            "18d8d498ce9b07426aed036749fbd686b8a30de6"
        ],
        [
            "set_up_input_handlers.",
            "VernacExtend",
            "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nw_empty_queue_lock : forall sigma p, LockServ_network_invariant sigma p -> queue (sigma Server) = [] -> pBody p = Lock.",
            "VernacStartTheoremProof",
            "6056bfe441a869e3219ac6630102b3723d69f724"
        ],
        [
            "unfold LockServ_network_invariant, locks_correct_unlock, locks_correct_locked, valid_unlock, valid_locked.",
            "VernacExtend",
            "de92fc543c3536facfb8846d5f9e7aaabdf71f7b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (pBody p) eqn:?; intuition; break_exists; intuition; break_exists; congruence.",
            "VernacExtend",
            "53b7b85e9aa0d6f34618f9850c209fe9a61b38f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LockServ_nwnw_net_handlers_old_new : forall p sigma u st' out ms q p', NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> LockServ_network_invariant sigma p -> LockServ_network_invariant sigma q -> LockServ_network_network_invariant p q -> In (pDst p', pBody p') ms -> LockServ_network_network_invariant p' q.",
            "VernacStartTheoremProof",
            "afe565a3ccf321f83634a860010fcc644bf0ee65"
        ],
        [
            "set_up_net_handlers; eauto using nwnw_sym, nwnw_lock, nw_empty_queue_lock, nwnw_unlock_lock.",
            "VernacExtend",
            "4e3cce1acce145e7353e85770ebaa8a628e47c0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LockServ_nwnw_net_handlers_new_new : forall p sigma u st' out ms, NetHandler (pDst p) (pSrc p) (pBody p) (sigma (pDst p)) = (u, out, st', ms) -> locks_correct sigma -> LockServ_network_invariant sigma p -> distinct_pairs_and LockServ_network_network_invariant (map (fun m => mkPacket (pDst p) (fst m) (snd m)) ms).",
            "VernacStartTheoremProof",
            "7e1449e29e48954743b4e9edd9336c5937d2f074"
        ],
        [
            "set_up_net_handlers.",
            "VernacExtend",
            "806fb75d52ff7229facdd733a050b393eb1c6222"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LockServ_Decompositition : Decomposition _ LockServ_MultiParams.",
            "VernacInstance",
            "baf25a25a9c6ecf3ebd2d06f82af56f630df706a"
        ],
        [
            "apply Build_Decomposition with (state_invariant := locks_correct) (network_invariant := LockServ_network_invariant) (network_network_invariant := LockServ_network_network_invariant); simpl; intros; monad_unfold; repeat break_let; repeat find_inversion.",
            "VernacExtend",
            "ff8fa51444e4eab6b239f19c60f99a6f91bec9c7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using nwnw_sym.",
            "VernacExtend",
            "c680f0dc66464115c18f0ddfbdf9a26af7165838"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto using locks_correct_init.",
            "VernacExtend",
            "6e85e725abe991f1a4835d975168e6b3b605bb62"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto using locks_correct_input_handlers.",
            "VernacExtend",
            "33dba1ee11f648800e4a65acad697fc9887bd705"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold LockServ_network_invariant in *.",
            "VernacExtend",
            "2be70045e1f5548a3129378cd552d1c7602e856d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eauto using locks_correct_net_handlers.",
            "VernacExtend",
            "42903c5b1c1065c7fd7f4a21b5c3f8596d36efd1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold LockServ_network_invariant in *.",
            "VernacExtend",
            "2be70045e1f5548a3129378cd552d1c7602e856d"
        ],
        [
            "intuition eauto using locks_correct_unlock_input_handlers_old, locks_correct_locked_input_handlers_old.",
            "VernacExtend",
            "a5535abf605705df8bf404d21a3e1eec5fe2a5a8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold LockServ_network_invariant in *.",
            "VernacExtend",
            "2be70045e1f5548a3129378cd552d1c7602e856d"
        ],
        [
            "intuition eauto using locks_correct_unlock_input_handlers_new, locks_correct_locked_input_handlers_new.",
            "VernacExtend",
            "5c6daad5956993bca4bc19bc0c3ce933323f0dfd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold LockServ_network_invariant in *.",
            "VernacExtend",
            "2be70045e1f5548a3129378cd552d1c7602e856d"
        ],
        [
            "intuition eauto using locks_correct_unlock_net_handlers_old, locks_correct_locked_net_handlers_old.",
            "VernacExtend",
            "bb89af26ece454a1adca132ee02d30c2b094f5bf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold LockServ_network_invariant in *.",
            "VernacExtend",
            "2be70045e1f5548a3129378cd552d1c7602e856d"
        ],
        [
            "intuition eauto using locks_correct_unlock_net_handlers_new, locks_correct_locked_net_handlers_new.",
            "VernacExtend",
            "62db19f2962e849d11c37840caa18326991733d8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto using LockServ_nwnw_input_handlers_old_new.",
            "VernacExtend",
            "dfeb39195470288e23f16a39cf7bce54dffa16b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto using LockServ_nwnw_input_handlers_new_new.",
            "VernacExtend",
            "03698a210d6fa07c4c90a3666a6a11f7388e0c2d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto using LockServ_nwnw_net_handlers_old_new.",
            "VernacExtend",
            "e3e9425a8e6c57a3c814da6ddf60d3d02bc0df3a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto using LockServ_nwnw_net_handlers_new_new.",
            "VernacExtend",
            "bb22dc7a7abe8fe46ddf285ccf16e72ee51ad51b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem true_in_reachable_mutual_exclusion : true_in_reachable step_async step_async_init (fun net => mutual_exclusion (nwState net)).",
            "VernacStartTheoremProof",
            "c8029f282b162507a2a2b3271170f45594974111"
        ],
        [
            "pose proof decomposition_invariant.",
            "VernacExtend",
            "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
        ],
        [
            "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
            "VernacExtend",
            "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
        ],
        [
            "unfold true_in_reachable in *.",
            "VernacExtend",
            "9ce7a13b3751eecaf588c8e3708393978c62108d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply locks_correct_implies_mutex.",
            "VernacExtend",
            "82ca6c63464dc829a5e109a9b1ef2a89dade7c22"
        ],
        [
            "match goal with | [ H : _ |- _ ] => apply H end.",
            "VernacExtend",
            "4e2c569e73846a32731d2e8edd2353a4e28b6ec6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint last_holder' (holder : option Client_index) (trace : list (name * (input + list output))) : option Client_index := match trace with | [] => holder | (Client n, inl Unlock) :: tr => match holder with | None => last_holder' holder tr | Some m => if fin_eq_dec _ n m then last_holder' None tr else last_holder' holder tr end | (Client n, inr [Locked]) :: tr => last_holder' (Some n) tr | (n, _) :: tr => last_holder' holder tr end.",
            "VernacFixpoint",
            "deba8d653023729a8962fdbabcf7906663c9efc2"
        ],
        [
            "Fixpoint trace_mutual_exclusion' (holder : option Client_index) (trace : list (name * (input + list output))) : Prop := match trace with | [] => True | (Client n, (inl Unlock)) :: tr' => match holder with | Some m => if fin_eq_dec _ n m then trace_mutual_exclusion' None tr' else trace_mutual_exclusion' holder tr' | _ => trace_mutual_exclusion' holder tr' end | (n, (inl _)) :: tr' => trace_mutual_exclusion' holder tr' | (Client n, (inr [Locked])) :: tr' => match holder with | None => trace_mutual_exclusion' (Some n) tr' | Some _ => False end | (_, (inr [])) :: tr' => trace_mutual_exclusion' holder tr' | (_, (inr _)) :: tr' => False end.",
            "VernacFixpoint",
            "9107ecb13f9c022157a5bbf709960e7ed463d134"
        ],
        [
            "Definition trace_mutual_exclusion (trace : list (name * (input + list output))) : Prop := trace_mutual_exclusion' None trace.",
            "VernacDefinition",
            "513f793230cf255f6833bb929ddecb31ad9a5e29"
        ],
        [
            "Definition last_holder (trace : list (name * (input + list output))) : option Client_index := last_holder' None trace.",
            "VernacDefinition",
            "0c02082a6ca820ad8231d07a0d4a91d98f0bdd06"
        ],
        [
            "Lemma cross_relation : forall (P : network -> list (name * (input + list output)) -> Prop), P step_async_init [] -> (forall st st' tr ev, step_async_star step_async_init st tr -> P st tr -> step_async st st' ev -> P st' (tr ++ ev)) -> forall st tr, step_async_star step_async_init st tr -> P st tr.",
            "VernacStartTheoremProof",
            "214629c1a412d3db2f733f49dee83de6625b3bd6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "find_apply_lem_hyp refl_trans_1n_n1_trace.",
            "VernacExtend",
            "d01ed0458af335ee0efac41574590026a6d205d5"
        ],
        [
            "prep_induction H1.",
            "VernacExtend",
            "286759b6cbcca70182596fe7eeaef2a8bfe65136"
        ],
        [
            "induction H1; intros; subst; eauto.",
            "VernacExtend",
            "07beb43b907ff455a13624d6c011de0d163f30a1"
        ],
        [
            "eapply H3; eauto.",
            "VernacExtend",
            "4aa0b3760c6510a6990a96042c273418bec50b3d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply refl_trans_n1_1n_trace.",
            "VernacExtend",
            "fd6acd90e04197941daea8247e0531e7e5047122"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHrefl_trans_n1_trace; auto.",
            "VernacExtend",
            "17a231d3fe44310dbdce9ea41559c008db879648"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trace_mutex'_no_out_extend : forall tr n h, trace_mutual_exclusion' h tr -> trace_mutual_exclusion' h (tr ++ [(n, inr [])]).",
            "VernacStartTheoremProof",
            "43de2640f97d80db395bba9ea339b418103f6da6"
        ],
        [
            "induction tr; intuition; unfold trace_mutual_exclusion in *; simpl in *; repeat break_match; subst; intuition.",
            "VernacExtend",
            "8f9287570e6b7579515ef915467aa4eeba15c1d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_no_out_inv : forall tr h c n, last_holder' h (tr ++ [(c, inr [])]) = Some n -> last_holder' h tr = Some n.",
            "VernacStartTheoremProof",
            "073c2fbd19202dcc6951cac49af761b873dbebb4"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; subst; intuition; eauto.",
            "VernacExtend",
            "29fef6854c994f8613fe842f0773a96d28cb93ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_no_out_extend : forall tr h c n, last_holder' h tr = Some n -> last_holder' h (tr ++ [(c, inr [])]) = Some n.",
            "VernacStartTheoremProof",
            "a3dded28c56c8d4c116bcae6e7ae8c995756d1df"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; subst; intuition.",
            "VernacExtend",
            "d5eb635ca6bb0a8d31f8c3f6676ada69c0f89665"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomposition_reachable_nw_invariant : forall st tr p, step_async_star step_async_init st tr -> In p (nwPackets st) -> network_invariant (nwState st) p.",
            "VernacStartTheoremProof",
            "82aa6b6d13b9d906a60879ea56c6513e5bb365af"
        ],
        [
            "pose proof decomposition_invariant.",
            "VernacExtend",
            "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
        ],
        [
            "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
            "VernacExtend",
            "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
        ],
        [
            "unfold true_in_reachable, reachable in *.",
            "VernacExtend",
            "d82730845f3ade8456e1cdd3ab3dcd71756ddecd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold composed_invariant in *.",
            "VernacExtend",
            "c41590863f86135646654e479113c21a7909321f"
        ],
        [
            "apply H; eauto.",
            "VernacExtend",
            "1dad22a5bc38e6644c0a2d380e546c904cb6fe58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trace_mutex'_locked_extend : forall tr h n, trace_mutual_exclusion' h tr -> last_holder' h tr = None -> trace_mutual_exclusion' h (tr ++ [(Client n, inr [Locked])]).",
            "VernacStartTheoremProof",
            "1a83297239b5960edbcdc0ba8433d3348873b16f"
        ],
        [
            "induction tr; intros; simpl in *.",
            "VernacExtend",
            "93e2226e1733e0239e56f1881a113252e60172f4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "repeat break_match; subst; intuition.",
            "VernacExtend",
            "af752512dbc3b4e2d7f42ac4af48caf91f95f9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reachable_intro : forall a tr, step_async_star step_async_init a tr -> reachable step_async step_async_init a.",
            "VernacStartTheoremProof",
            "8a30d0999e044d7ec5c4b76899e0033e09e2ffa0"
        ],
        [
            "unfold reachable.",
            "VernacExtend",
            "21bcb9bc1a63ffa7785cf9255bff3ae47abb446a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_locked_invariant : forall st p, reachable step_async step_async_init st -> In p (nwPackets st) -> locks_correct_locked (nwState st) p.",
            "VernacStartTheoremProof",
            "3ef474dc25b888f253539e0ba95f98c39c611359"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof decomposition_invariant.",
            "VernacExtend",
            "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
        ],
        [
            "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
            "VernacExtend",
            "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
        ],
        [
            "unfold true_in_reachable in *.",
            "VernacExtend",
            "9ce7a13b3751eecaf588c8e3708393978c62108d"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locks_correct_invariant : forall st, reachable step_async step_async_init st -> locks_correct (nwState st).",
            "VernacStartTheoremProof",
            "7d2ed3f26f891c8ef435191a2414d3d5c418921d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof decomposition_invariant.",
            "VernacExtend",
            "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
        ],
        [
            "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
            "VernacExtend",
            "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
        ],
        [
            "unfold true_in_reachable in *.",
            "VernacExtend",
            "9ce7a13b3751eecaf588c8e3708393978c62108d"
        ],
        [
            "apply H0; auto.",
            "VernacExtend",
            "e167f871dfeec1cef76aaf201c54c081f29f730b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mutual_exclusion_invariant : forall st, reachable step_async step_async_init st -> mutual_exclusion (nwState st).",
            "VernacStartTheoremProof",
            "ddcec811c4beb736d3beae2f324643d511308ff1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply locks_correct_implies_mutex.",
            "VernacExtend",
            "82ca6c63464dc829a5e109a9b1ef2a89dade7c22"
        ],
        [
            "auto using locks_correct_invariant.",
            "VernacExtend",
            "629c08216739d863d38c9af835521790ece0d160"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_locked_some_eq : forall tr h c n, last_holder' h (tr ++ [(Client c, inr [Locked])]) = Some n -> c = n.",
            "VernacStartTheoremProof",
            "f4978a2c1c3b28d084c5d9b10c1ef035b5533082"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; subst; eauto.",
            "VernacExtend",
            "00965378be8c8727f150f60d439205bfa11f94cb"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac my_update_destruct := match goal with | [H : context [ update _ _ ?x _ ?y ] |- _ ] => destruct (Name_eq_dec x y) | [ |- context [ update _ _ ?x _ ?y ] ] => destruct (Name_eq_dec x y) end.",
            "VernacExtend",
            "34b047f725f1a7257ac0de63717a7b7b89a6c3a1"
        ],
        [
            "Lemma last_holder'_server_extend : forall tr h i, last_holder' h (tr ++ [(Server, inl i)]) = last_holder' h tr.",
            "VernacStartTheoremProof",
            "bf0b36b90d0acb5b7a7117f138ea17ad2ab86915"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; auto.",
            "VernacExtend",
            "3a99e41b6b339ec1e8a4c2a6cf5776bee4f7022b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_locked_extend : forall tr h n, last_holder' h (tr ++ [(Client n, inr [Locked])]) = Some n.",
            "VernacStartTheoremProof",
            "84c8273538ad8e33b42869cf936f1c72fb2e4f88"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; auto.",
            "VernacExtend",
            "3a99e41b6b339ec1e8a4c2a6cf5776bee4f7022b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trace_mutual_exclusion'_extend_input : forall tr h c i, i <> Unlock -> trace_mutual_exclusion' h tr -> trace_mutual_exclusion' h (tr ++ [(Client c, inl i)]).",
            "VernacStartTheoremProof",
            "e3dc54dca1c4947045169dec4f19b1dbc776d795"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; intuition.",
            "VernacExtend",
            "949a6aa78beadea78632c5da25f3644ae1982b01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trace_mutual_exclusion'_extend_input_server : forall tr h i, trace_mutual_exclusion' h tr -> trace_mutual_exclusion' h (tr ++ [(Server, inl i)]).",
            "VernacStartTheoremProof",
            "7841616602f3613e1020443ff05040c442fd08a8"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; intuition.",
            "VernacExtend",
            "949a6aa78beadea78632c5da25f3644ae1982b01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_input_inv : forall tr h c i n, i <> Unlock -> last_holder' h (tr ++ [(Client c, inl i)]) = Some n -> last_holder' h tr = Some n.",
            "VernacStartTheoremProof",
            "70e4ca74e846fe94a07d32163a10ced8959f519c"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; auto; try congruence; subst; eauto.",
            "VernacExtend",
            "a7236b01a5bccfc17175a84f60a07d02550ca6df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_input_inv_server : forall tr h i n, last_holder' h (tr ++ [(Server, inl i)]) = Some n -> last_holder' h tr = Some n.",
            "VernacStartTheoremProof",
            "cd7212704de34b4efa40aa68392cf438c21c4f94"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; auto; try congruence; subst; eauto.",
            "VernacExtend",
            "a7236b01a5bccfc17175a84f60a07d02550ca6df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_input_extend : forall tr h c i n, i <> Unlock -> last_holder' h tr = Some n -> last_holder' h (tr ++ [(Client c, inl i)]) = Some n.",
            "VernacStartTheoremProof",
            "37d415a9b8f0f03607146a852e43bf049df822ff"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; auto.",
            "VernacExtend",
            "3a99e41b6b339ec1e8a4c2a6cf5776bee4f7022b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trace_mutex'_unlock_extend : forall tr h c, trace_mutual_exclusion' h tr -> trace_mutual_exclusion' h (tr ++ [(Client c, inl Unlock)]).",
            "VernacStartTheoremProof",
            "d2c4f0c256de7dcc2d1b881ef1277ca7a1bfd063"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; intuition (auto; try congruence).",
            "VernacExtend",
            "c1c09aaec2be1d8ccade3b0a381bd5bfa520a13d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_unlock_none : forall tr h c, last_holder' h tr = Some c -> last_holder' h (tr ++ [(Client c, inl Unlock)]) = None.",
            "VernacStartTheoremProof",
            "6f6436aaef2512498f4857e09bd3063aaefddada"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; intuition.",
            "VernacExtend",
            "949a6aa78beadea78632c5da25f3644ae1982b01"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder_unlock_none : forall tr c, last_holder tr = Some c -> last_holder (tr ++ [(Client c, inl Unlock)]) = None.",
            "VernacStartTheoremProof",
            "e9732baeb3702f9acad528b4d3466dbf50e4f4e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply last_holder'_unlock_none.",
            "VernacExtend",
            "d0eba66a95944909b858da2a182d9c345babea14"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder_some_unlock_inv : forall tr h c n, last_holder' h (tr ++ [(Client c, inl Unlock)]) = Some n -> last_holder' h tr = Some n.",
            "VernacStartTheoremProof",
            "eaea70b0db9f0921c1a877d29ce61e0deb56f05b"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; subst; intuition; try congruence; eauto.",
            "VernacExtend",
            "10cabfe05a922e1380519d62399200f4f081bd06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_holder'_neq_unlock_extend : forall tr h n c, last_holder' h tr = Some n -> n <> c -> last_holder' h (tr ++ [(Client c, inl Unlock)]) = Some n.",
            "VernacStartTheoremProof",
            "d50be135c22814366c272155174a828ecc5ca938"
        ],
        [
            "induction tr; intros; simpl in *; repeat break_match; subst; try congruence; intuition.",
            "VernacExtend",
            "ebe8fe8815d498798cea1895960c2c3953b4d9fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma LockServ_mutual_exclusion_trace : forall st tr, step_async_star step_async_init st tr -> trace_mutual_exclusion tr /\\ (forall n, last_holder tr = Some n -> held (nwState st (Client n)) = true) /\\ (forall n, held (nwState st (Client n)) = true -> last_holder tr = Some n).",
            "VernacStartTheoremProof",
            "85c4696c41601cc40f5e741bfbfb65049764e5b5"
        ],
        [
            "apply cross_relation; intros.",
            "VernacExtend",
            "c59086f1abbdb192767422dbf77365cf9ca0fbc9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold last_holder in *.",
            "VernacExtend",
            "3631b8588485a4ce9fa3a9749c341f6c8bbaffdd"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold last_holder in *.",
            "VernacExtend",
            "3631b8588485a4ce9fa3a9749c341f6c8bbaffdd"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with | [ H : step_async _ _ _ |- _ ] => invcs H end; monad_unfold; repeat break_let; repeat find_inversion.",
            "VernacExtend",
            "60c65af8937947ee3e28c694eaa75ee612e23e98"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold NetHandler in *.",
            "VernacExtend",
            "60329115384e38acc40b7bfb62f37bffe59bdf61"
        ],
        [
            "break_match.",
            "VernacExtend",
            "b2bc690b7d230eee6ff83ec2752e6c3ed02d2594"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "find_apply_lem_hyp ClientNetHandler_cases.",
            "VernacExtend",
            "5001cb3adda5ae89a4c3cbf828256045e371eb84"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "break_or_hyp.",
            "VernacExtend",
            "a7c34cd75b882cc63618c1319b50ac735e08690b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intuition; subst.",
            "VernacExtend",
            "4321ede1ef2ce18b467565763256f2f4c8a1cdf0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply trace_mutex'_no_out_extend; auto.",
            "VernacExtend",
            "471425f7154f0f18b7a1ea2538d5a11cb99d2003"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite update_nop_ext.",
            "VernacExtend",
            "dc67650d6350c00cdca76c0f52cb4db7cc8257a4"
        ],
        [
            "find_apply_lem_hyp last_holder'_no_out_inv.",
            "VernacExtend",
            "11fc814c702e0124e754a15bdaeae2b7a465c722"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
            "VernacExtend",
            "2a95bffa7eae408809ee8eeb1d110100d1b524df"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "apply last_holder'_no_out_extend.",
            "VernacExtend",
            "24f3fc775be39facec179c990562cbd970e6c04f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intuition; subst.",
            "VernacExtend",
            "4321ede1ef2ce18b467565763256f2f4c8a1cdf0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply trace_mutex'_locked_extend.",
            "VernacExtend",
            "9044b022c7a71772caa5396765280be441c42501"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct (last_holder' None tr) eqn:?; auto.",
            "VernacExtend",
            "8ea619dc40bf02148fc2f45135b7dcb447d2f1a7"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "erewrite locked_in_flight_all_clients_false in * by eauto using locks_correct_locked_invariant, reachable_intro, locks_correct_invariant.",
            "VernacExtend",
            "999a4ff8bf82392b2382197af046ca2b25091495"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "my_update_destruct; try find_inversion; rewrite_update; auto.",
            "VernacExtend",
            "914444c8af64e7968d3e3a39598fb3d602641274"
        ],
        [
            "find_apply_lem_hyp last_holder'_locked_some_eq.",
            "VernacExtend",
            "e7e9b02d99e09aa5ff8d0719e6b71586ca1ab1c0"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "my_update_destruct; try find_inversion; rewrite_update.",
            "VernacExtend",
            "3e34819b5499717218d2163651fb0f8f10b95c81"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply last_holder'_locked_extend.",
            "VernacExtend",
            "c847093c8920133b1d8c0f75b789658ee709947a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "erewrite locked_in_flight_all_clients_false in * by eauto using locks_correct_locked_invariant, reachable_intro, locks_correct_invariant.",
            "VernacExtend",
            "999a4ff8bf82392b2382197af046ca2b25091495"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "find_apply_lem_hyp ServerNetHandler_cases.",
            "VernacExtend",
            "a1a988f0b8780e92ee82e4eb743508ae9f9092b2"
        ],
        [
            "break_and.",
            "VernacExtend",
            "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply trace_mutex'_no_out_extend.",
            "VernacExtend",
            "9e4cddbdeacfe1f931ceb72871c8c36424809777"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "my_update_destruct; try discriminate.",
            "VernacExtend",
            "86016c341653a55d8d4dfee2c3d077646c5d772e"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "find_apply_lem_hyp last_holder'_no_out_inv.",
            "VernacExtend",
            "11fc814c702e0124e754a15bdaeae2b7a465c722"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "my_update_destruct; try discriminate; rewrite_update.",
            "VernacExtend",
            "7c4b7d08e5669f4fbb020b138c0232c66dbbbfb3"
        ],
        [
            "apply last_holder'_no_out_extend.",
            "VernacExtend",
            "24f3fc775be39facec179c990562cbd970e6c04f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "unfold InputHandler in *.",
            "VernacExtend",
            "4714f4ddbf84a51823433b7c75df5bb882c7705d"
        ],
        [
            "break_match.",
            "VernacExtend",
            "b2bc690b7d230eee6ff83ec2752e6c3ed02d2594"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold ClientIOHandler in *.",
            "VernacExtend",
            "a64f5bc6091d73004ab8d4dc68571e5a5253330f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "monad_unfold.",
            "VernacExtend",
            "086e2d130d757170479c1841773b226b4c1659a9"
        ],
        [
            "repeat break_match; repeat find_inversion; intuition; repeat rewrite snoc_assoc in *; try apply trace_mutex'_no_out_extend; try find_apply_lem_hyp last_holder'_no_out_inv; try (apply last_holder'_no_out_extend; auto).",
            "VernacExtend",
            "2f78dab9f8a70628bec8e8e44642bafc82ba1e1c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply trace_mutual_exclusion'_extend_input; auto.",
            "VernacExtend",
            "a07bf91f8f883a44cba815ec634ff279eeb7ec64"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite update_nop_ext.",
            "VernacExtend",
            "dc67650d6350c00cdca76c0f52cb4db7cc8257a4"
        ],
        [
            "find_apply_lem_hyp last_holder'_input_inv; try congruence.",
            "VernacExtend",
            "c12ef114ff8e9eef3d1ecc6b461d91a2349938df"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
            "VernacExtend",
            "2a95bffa7eae408809ee8eeb1d110100d1b524df"
        ],
        [
            "apply last_holder'_input_extend; auto.",
            "VernacExtend",
            "0795f0d699f478590c1696da2503bac635b9e753"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply trace_mutex'_unlock_extend; auto.",
            "VernacExtend",
            "7266ad9cb1ed81f77903259be12df802c6f1cf6d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite last_holder_unlock_none in *; auto.",
            "VernacExtend",
            "55d9d25313d553b8ce408d635da860fed0301bcc"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "my_update_destruct; try find_inversion; rewrite_update.",
            "VernacExtend",
            "3e34819b5499717218d2163651fb0f8f10b95c81"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (mutual_exclusion (nwState st)) by eauto using mutual_exclusion_invariant, reachable_intro.",
            "VernacExtend",
            "298db4ca5a2705b02f1cbe87c2a1ad0873cade4f"
        ],
        [
            "unfold mutual_exclusion in *.",
            "VernacExtend",
            "8e1b9aa49f018fd87ea81344c22f4cff888c9dbb"
        ],
        [
            "assert (c = n) by eauto.",
            "VernacExtend",
            "b0016d74acdd7cc09882d5f10f5b763939df902f"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply trace_mutex'_unlock_extend.",
            "VernacExtend",
            "5c46e1d383ca7bcb96d9c96f8257bbb87598d413"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite update_nop.",
            "VernacExtend",
            "aa860aa59a35f2a307d84fefd0e971e72f3f5ca4"
        ],
        [
            "find_apply_lem_hyp last_holder_some_unlock_inv.",
            "VernacExtend",
            "4efcba6dbff642eeb91d38d41f276e5902d1e88f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
            "VernacExtend",
            "2a95bffa7eae408809ee8eeb1d110100d1b524df"
        ],
        [
            "assert (n <> c) by congruence.",
            "VernacExtend",
            "e075a578eba6d706b8c769fb09a53bfa07307e33"
        ],
        [
            "find_apply_hyp_hyp.",
            "VernacExtend",
            "5383dcfa01573f561f26c2e7f308613c889a9c8b"
        ],
        [
            "apply last_holder'_neq_unlock_extend; auto.",
            "VernacExtend",
            "ab0652d3a50e63696d95bb4870dc5b4e3580288d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply trace_mutual_exclusion'_extend_input; auto.",
            "VernacExtend",
            "a07bf91f8f883a44cba815ec634ff279eeb7ec64"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite update_nop_ext.",
            "VernacExtend",
            "dc67650d6350c00cdca76c0f52cb4db7cc8257a4"
        ],
        [
            "find_apply_lem_hyp last_holder'_input_inv; try congruence.",
            "VernacExtend",
            "c12ef114ff8e9eef3d1ecc6b461d91a2349938df"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
            "VernacExtend",
            "2a95bffa7eae408809ee8eeb1d110100d1b524df"
        ],
        [
            "apply last_holder'_input_extend; auto.",
            "VernacExtend",
            "0795f0d699f478590c1696da2503bac635b9e753"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold ServerIOHandler in *.",
            "VernacExtend",
            "4672813b6a5f9fb6c1a0ded4a3cf1aaae2c3b1f8"
        ],
        [
            "monad_unfold.",
            "VernacExtend",
            "086e2d130d757170479c1841773b226b4c1659a9"
        ],
        [
            "find_inversion.",
            "VernacExtend",
            "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intuition; repeat rewrite snoc_assoc in *.",
            "VernacExtend",
            "6a27465b9d83b4aa494c30617799130496d2a56e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply trace_mutex'_no_out_extend.",
            "VernacExtend",
            "9e4cddbdeacfe1f931ceb72871c8c36424809777"
        ],
        [
            "apply trace_mutual_exclusion'_extend_input_server.",
            "VernacExtend",
            "7fbea50c05e51c432399998b9042ab7448ac3987"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "find_apply_lem_hyp last_holder'_no_out_inv.",
            "VernacExtend",
            "11fc814c702e0124e754a15bdaeae2b7a465c722"
        ],
        [
            "rewrite update_nop.",
            "VernacExtend",
            "aa860aa59a35f2a307d84fefd0e971e72f3f5ca4"
        ],
        [
            "find_apply_lem_hyp last_holder'_input_inv_server.",
            "VernacExtend",
            "2cff8c1752f6c596449c8fb1749ace985f91efd4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply last_holder'_no_out_extend; auto.",
            "VernacExtend",
            "01d349d8f6c1aba7da48759b414c61a525cffb2e"
        ],
        [
            "rewrite_update.",
            "VernacExtend",
            "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
        ],
        [
            "unfold last_holder.",
            "VernacExtend",
            "0aa06ca2c34a9906696553b122e8bc8d4727ed25"
        ],
        [
            "rewrite last_holder'_server_extend.",
            "VernacExtend",
            "1f82bb791f5e0f8f050efd8a5543346be3e88caa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LockServ.",
            "VernacEndSegment",
            "56884973588c3aaabb217e575d5c3b329247ec95"
        ]
    ],
    "proofs": [
        {
            "name": "Name_eq_dec",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "apply fin_eq_dec.",
                        "VernacExtend",
                        "931d5b2a57230f862a1c5b6b0138b5def2727d34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Msg_eq_dec",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_n_Nodes",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Nodes, list_Clients.",
                        "VernacExtend",
                        "ca90c95504d254f0c2bed9d37f8ef9f93a562657"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply in_map.",
                        "VernacExtend",
                        "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
                    ]
                },
                {
                    "command": [
                        "apply all_fin_all.",
                        "VernacExtend",
                        "9864c7e2e691137e8b3f85a90e5a9c3439900ae4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nodup",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "unfold Nodes, list_Clients.",
                        "VernacExtend",
                        "ca90c95504d254f0c2bed9d37f8ef9f93a562657"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_cons.",
                        "VernacExtend",
                        "cc464b56652aec4525eea2a16ddd0d64ff504b4d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "in_crush.",
                        "VernacExtend",
                        "1cec37b1df9aed7611c9dc2928e77e203488f72a"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_map_injective.",
                        "VernacExtend",
                        "6635e4f4635d6e81b46adedda53ccae5e94618b9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply all_fin_NoDup.",
                        "VernacExtend",
                        "644459b099bbfc6f4498d25e0c86fd9a436f1a6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_implies_mutex",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct, mutual_exclusion.",
                        "VernacExtend",
                        "9324e79453c52ba99d721dd064a887927a54e762"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat find_apply_hyp_hyp.",
                        "VernacExtend",
                        "de62d6af7cdfe0bb4635c1cf3fd39b045f4346ed"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "find_rewrite.",
                        "VernacExtend",
                        "7a65e4f552b93330a384f7173c61cfa61058bef5"
                    ]
                },
                {
                    "command": [
                        "find_inversion.",
                        "VernacExtend",
                        "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nwnw_sym",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "unfold LockServ_network_network_invariant.",
                        "VernacExtend",
                        "3000fb167d767989a1e73a884ea60cb8286838d2"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_init",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct.",
                        "VernacExtend",
                        "18f2d2c4ef42489600e17569c8ee5ff308705b40"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_update_false",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct.",
                        "VernacExtend",
                        "18f2d2c4ef42489600e17569c8ee5ff308705b40"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (Name_eq_dec (Client x) (Client n)).",
                        "VernacExtend",
                        "0af4ee7702ab5bfc3182577eb953796682350b9c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "find_inversion.",
                        "VernacExtend",
                        "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_input_handlers",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "set_up_input_handlers; auto using locks_correct_update_false.",
                        "VernacExtend",
                        "4736be3c33a19ea4cc052d47257b66891e30fae6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClientNetHandler_cases",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "handler_unfold.",
                        "VernacExtend",
                        "5f8b9c6121fe9e377ef14e48f6611dea5801e7a1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat break_match; repeat tuple_inversion; subst; auto.",
                        "VernacExtend",
                        "eacb95ce946796290cbb3c10cd0b091fd2a0b6a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_update_true",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct.",
                        "VernacExtend",
                        "18f2d2c4ef42489600e17569c8ee5ff308705b40"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Name_eq_dec (Client c) (Client n)); rewrite_update; try find_inversion; auto.",
                        "VernacExtend",
                        "aaddbe2dfe0ec11da07268098dbbfa484cd9468b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_at_head",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_locked.",
                        "VernacExtend",
                        "2d773a35ddf3c8c4433b23184a559dcaa0095925"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "repeat find_rewrite.",
                        "VernacExtend",
                        "2e0f7af91fb6dc6a2928bc530dda4cfbd03d3e68"
                    ]
                },
                {
                    "command": [
                        "find_inversion.",
                        "VernacExtend",
                        "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
                    ]
                },
                {
                    "command": [
                        "eauto using at_head_of_queue_intro.",
                        "VernacExtend",
                        "07394afdbbcf3d99248b34166edfdd3ea9eaf5cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_clients_false_locks_correct_server_update",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct.",
                        "VernacExtend",
                        "18f2d2c4ef42489600e17569c8ee5ff308705b40"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "now find_higher_order_rewrite.",
                        "VernacExtend",
                        "c4ef8dc2df2782e27edd7d4f1a58c6f152913374"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_true_at_head_of_queue",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct.",
                        "VernacExtend",
                        "18f2d2c4ef42489600e17569c8ee5ff308705b40"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "eauto using at_head_of_queue_intro.",
                        "VernacExtend",
                        "07394afdbbcf3d99248b34166edfdd3ea9eaf5cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "at_head_of_nil",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "unfold at_head_of_queue.",
                        "VernacExtend",
                        "9e714de86e85729480a239b5c2155ff578c5d9ee"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_queue_all_clients_false",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (held (sigma (Client c))) eqn:?; auto.",
                        "VernacExtend",
                        "ddb1e3774bdb64112ca4d2bccd7fb4b60a0726c0"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "eauto using at_head_of_nil, locks_correct_true_at_head_of_queue.",
                        "VernacExtend",
                        "f8cb0bc396671e38dbd1ab133be9da33b0ee9a0e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlock_in_flight_all_clients_false",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (held (sigma (Client c))) eqn:?; auto.",
                        "VernacExtend",
                        "ddb1e3774bdb64112ca4d2bccd7fb4b60a0726c0"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "find_copy_apply_lem_hyp locks_correct_true_at_head_of_queue; auto.",
                        "VernacExtend",
                        "c36a1e4facfea32dac4973ff7eadb9a31a377750"
                    ]
                },
                {
                    "command": [
                        "unfold at_head_of_queue in *.",
                        "VernacExtend",
                        "663cad41045abb0a420a912a854ca9590a88b53c"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_at_head_preserved",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct, at_head_of_queue.",
                        "VernacExtend",
                        "4b8b8d1c4cb618add19197ac0f89ce7d60f826d6"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "snoc_at_head_of_queue_preserved",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "unfold at_head_of_queue.",
                        "VernacExtend",
                        "9e714de86e85729480a239b5c2155ff578c5d9ee"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "find_rewrite.",
                        "VernacExtend",
                        "7a65e4f552b93330a384f7173c61cfa61058bef5"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_net_handlers",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers; eauto using locks_correct_update_true, locks_correct_locked_at_head, all_clients_false_locks_correct_server_update, empty_queue_all_clients_false, locks_correct_at_head_preserved, snoc_at_head_of_queue_preserved, all_clients_false_locks_correct_server_update, unlock_in_flight_all_clients_false.",
                        "VernacExtend",
                        "e584bb09a64c75dc59e272f3707e13785b3436b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_sent_lock",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_unlock.",
                        "VernacExtend",
                        "eb018548d33841759e69716a7f320294777c57a3"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_sent_locked",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_unlock.",
                        "VernacExtend",
                        "eb018548d33841759e69716a7f320294777c57a3"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_input_handlers_old",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "set_up_input_handlers.",
                        "VernacExtend",
                        "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
                    ]
                },
                {
                    "command": [
                        "destruct (pBody p) eqn:?.",
                        "VernacExtend",
                        "a94e941ca09d224ff32b7ba73b9f498eb2513672"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using locks_correct_unlock_sent_lock.",
                        "VernacExtend",
                        "7b166d8e84b4046a20405d01d7718da72706b473"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now erewrite unlock_in_flight_all_clients_false in * by eauto.",
                        "VernacExtend",
                        "bfafdab03bca6c78450c4422bdd919d10cb3c2c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using locks_correct_unlock_sent_locked.",
                        "VernacExtend",
                        "d64641841a813976a42d94d812914e128cdd1978"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locked_in_flight_all_clients_false",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (held (sigma (Client c))) eqn:?; auto.",
                        "VernacExtend",
                        "ddb1e3774bdb64112ca4d2bccd7fb4b60a0726c0"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "find_copy_apply_lem_hyp locks_correct_true_at_head_of_queue; auto.",
                        "VernacExtend",
                        "c36a1e4facfea32dac4973ff7eadb9a31a377750"
                    ]
                },
                {
                    "command": [
                        "unfold at_head_of_queue in *.",
                        "VernacExtend",
                        "663cad41045abb0a420a912a854ca9590a88b53c"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_sent_lock",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_locked.",
                        "VernacExtend",
                        "2d773a35ddf3c8c4433b23184a559dcaa0095925"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_sent_unlock",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_locked.",
                        "VernacExtend",
                        "2d773a35ddf3c8c4433b23184a559dcaa0095925"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_input_handlers_old",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "set_up_input_handlers.",
                        "VernacExtend",
                        "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
                    ]
                },
                {
                    "command": [
                        "destruct (pBody p) eqn:?.",
                        "VernacExtend",
                        "a94e941ca09d224ff32b7ba73b9f498eb2513672"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using locks_correct_locked_sent_lock.",
                        "VernacExtend",
                        "377486ee5100e878eceed1c78c088b016b577383"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using locks_correct_locked_sent_unlock.",
                        "VernacExtend",
                        "e9b51cf1c65a5ce1601b688b560bdf892f98f2ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now erewrite locked_in_flight_all_clients_false in * by eauto.",
                        "VernacExtend",
                        "2b122632478c47b00f5faeec3203dcd747d6fe26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_true_to_false",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_unlock, valid_unlock.",
                        "VernacExtend",
                        "f02c3193ebf3e64b846f8af4649c74ca2ca08317"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "intuition; now rewrite_update.",
                        "VernacExtend",
                        "04ee56459f55aea03165c0b21c7dac51b889056e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_input_handlers_new",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "set_up_input_handlers; auto using locks_correct_unlock_sent_lock, locks_correct_unlock_true_to_false, locks_correct_true_at_head_of_queue.",
                        "VernacExtend",
                        "e4589395fd349d663e49c3f6a782518802bfa794"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_input_handlers_new",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "set_up_input_handlers; auto using locks_correct_locked_sent_lock, locks_correct_locked_sent_unlock.",
                        "VernacExtend",
                        "3278df1191679047c0432b3164ad46f3c77e632b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nwnw_locked_lock",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "unfold LockServ_network_network_invariant.",
                        "VernacExtend",
                        "3000fb167d767989a1e73a884ea60cb8286838d2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (pBody q); intuition; try discriminate.",
                        "VernacExtend",
                        "f81c73abbf4ad808c1017a0499ee2ba54c8b9736"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nwnw_unlock_lock",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "unfold LockServ_network_network_invariant.",
                        "VernacExtend",
                        "3000fb167d767989a1e73a884ea60cb8286838d2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (pBody q); intuition; try discriminate.",
                        "VernacExtend",
                        "f81c73abbf4ad808c1017a0499ee2ba54c8b9736"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_at_head",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_unlock.",
                        "VernacExtend",
                        "eb018548d33841759e69716a7f320294777c57a3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "unfold valid_unlock in *.",
                        "VernacExtend",
                        "2a0dd59d0cff97170d81e147d1dca0a0b4137881"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "repeat find_rewrite.",
                        "VernacExtend",
                        "2e0f7af91fb6dc6a2928bc530dda4cfbd03d3e68"
                    ]
                },
                {
                    "command": [
                        "repeat find_inversion.",
                        "VernacExtend",
                        "610a52b1e463e62cd0972175e3f79f0f0fe13ec5"
                    ]
                },
                {
                    "command": [
                        "eauto using at_head_of_queue_intro.",
                        "VernacExtend",
                        "07394afdbbcf3d99248b34166edfdd3ea9eaf5cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_at_head_preserved",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_unlock, valid_unlock.",
                        "VernacExtend",
                        "f02c3193ebf3e64b846f8af4649c74ca2ca08317"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite_update.",
                        "VernacExtend",
                        "2895362348975215d5e1c56c5bf9342886cda1da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nil_at_head_of_queue_preserved",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "unfold at_head_of_queue.",
                        "VernacExtend",
                        "9e714de86e85729480a239b5c2155ff578c5d9ee"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_net_handlers_old",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers; eauto using locks_correct_unlock_sent_lock, nwnw_locked_lock, locks_correct_unlock_at_head_preserved, snoc_at_head_of_queue_preserved, nwnw_unlock_lock, nil_at_head_of_queue_preserved.",
                        "VernacExtend",
                        "ecfc6ebd1e4719daebeb594ae2e8a45dfd3a933c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_at_head_preserved",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_locked, valid_locked.",
                        "VernacExtend",
                        "02641564d56ebbcf5e83f337b2df846329de2db4"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "break_exists.",
                        "VernacExtend",
                        "7914403b406cb602431a8c9ec3a15a70b4d83870"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite_update.",
                        "VernacExtend",
                        "2895362348975215d5e1c56c5bf9342886cda1da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_net_handlers_old",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers; eauto using locks_correct_locked_sent_lock, nwnw_locked_lock, locks_correct_locked_at_head_preserved, snoc_at_head_of_queue_preserved, nwnw_unlock_lock, nil_at_head_of_queue_preserved.",
                        "VernacExtend",
                        "9004305093ffa2def7d17fdab08020403a832847"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_unlock_net_handlers_new",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers; auto using locks_correct_unlock_sent_locked.",
                        "VernacExtend",
                        "7df5bcb015bf92bf018a5c2acb8b344c781c525e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_intro",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "unfold locks_correct_locked, valid_locked.",
                        "VernacExtend",
                        "02641564d56ebbcf5e83f337b2df846329de2db4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists c.",
                        "VernacExtend",
                        "683d4593ad0b3c7125e420e0670d5a4b0d3c38bc"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "now rewrite_update.",
                        "VernacExtend",
                        "2895362348975215d5e1c56c5bf9342886cda1da"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite_update.",
                        "VernacExtend",
                        "2895362348975215d5e1c56c5bf9342886cda1da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_net_handlers_new",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers; eauto using locks_correct_locked_intro, empty_queue_all_clients_false, unlock_in_flight_all_clients_false.",
                        "VernacExtend",
                        "33bac3a61ed5db4e92f6aef70a12e5628abf00d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nwnw_lock",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "unfold LockServ_network_network_invariant.",
                        "VernacExtend",
                        "3000fb167d767989a1e73a884ea60cb8286838d2"
                    ]
                },
                {
                    "command": [
                        "intuition; simpl in *; congruence.",
                        "VernacExtend",
                        "9f91cac6d82742805237c7e2d955edbfdc19ba07"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LockServ_nwnw_input_handlers_old_new",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "unfold LockServ_network_invariant.",
                        "VernacExtend",
                        "8d6f737d98ed95e2b2cec61d9882e3a8241e6ac5"
                    ]
                },
                {
                    "command": [
                        "set_up_input_handlers.",
                        "VernacExtend",
                        "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using nwnw_sym, nwnw_lock.",
                        "VernacExtend",
                        "f6ba0c3d8fcdcc5a14b82488a9ee69f0da8da843"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (pBody p) eqn:?.",
                        "VernacExtend",
                        "a94e941ca09d224ff32b7ba73b9f498eb2513672"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto using nwnw_lock.",
                        "VernacExtend",
                        "3de35415d29b86c566d33fdd3bd118becaa5b5e8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now erewrite unlock_in_flight_all_clients_false in * by eauto.",
                        "VernacExtend",
                        "bfafdab03bca6c78450c4422bdd919d10cb3c2c3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now erewrite locked_in_flight_all_clients_false in * by eauto.",
                        "VernacExtend",
                        "2b122632478c47b00f5faeec3203dcd747d6fe26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LockServ_nwnw_input_handlers_new_new",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "set_up_input_handlers.",
                        "VernacExtend",
                        "5dab1eb06fcd353e1c1ced7870c79db562c0f605"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nw_empty_queue_lock",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "unfold LockServ_network_invariant, locks_correct_unlock, locks_correct_locked, valid_unlock, valid_locked.",
                        "VernacExtend",
                        "de92fc543c3536facfb8846d5f9e7aaabdf71f7b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (pBody p) eqn:?; intuition; break_exists; intuition; break_exists; congruence.",
                        "VernacExtend",
                        "53b7b85e9aa0d6f34618f9850c209fe9a61b38f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LockServ_nwnw_net_handlers_old_new",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers; eauto using nwnw_sym, nwnw_lock, nw_empty_queue_lock, nwnw_unlock_lock.",
                        "VernacExtend",
                        "4e3cce1acce145e7353e85770ebaa8a628e47c0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LockServ_nwnw_net_handlers_new_new",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "set_up_net_handlers.",
                        "VernacExtend",
                        "806fb75d52ff7229facdd733a050b393eb1c6222"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LockServ_Decompositition",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "apply Build_Decomposition with (state_invariant := locks_correct) (network_invariant := LockServ_network_invariant) (network_network_invariant := LockServ_network_network_invariant); simpl; intros; monad_unfold; repeat break_let; repeat find_inversion.",
                        "VernacExtend",
                        "ff8fa51444e4eab6b239f19c60f99a6f91bec9c7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using nwnw_sym.",
                        "VernacExtend",
                        "c680f0dc66464115c18f0ddfbdf9a26af7165838"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto using locks_correct_init.",
                        "VernacExtend",
                        "6e85e725abe991f1a4835d975168e6b3b605bb62"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto using locks_correct_input_handlers.",
                        "VernacExtend",
                        "33dba1ee11f648800e4a65acad697fc9887bd705"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold LockServ_network_invariant in *.",
                        "VernacExtend",
                        "2be70045e1f5548a3129378cd552d1c7602e856d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "eauto using locks_correct_net_handlers.",
                        "VernacExtend",
                        "42903c5b1c1065c7fd7f4a21b5c3f8596d36efd1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold LockServ_network_invariant in *.",
                        "VernacExtend",
                        "2be70045e1f5548a3129378cd552d1c7602e856d"
                    ]
                },
                {
                    "command": [
                        "intuition eauto using locks_correct_unlock_input_handlers_old, locks_correct_locked_input_handlers_old.",
                        "VernacExtend",
                        "a5535abf605705df8bf404d21a3e1eec5fe2a5a8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold LockServ_network_invariant in *.",
                        "VernacExtend",
                        "2be70045e1f5548a3129378cd552d1c7602e856d"
                    ]
                },
                {
                    "command": [
                        "intuition eauto using locks_correct_unlock_input_handlers_new, locks_correct_locked_input_handlers_new.",
                        "VernacExtend",
                        "5c6daad5956993bca4bc19bc0c3ce933323f0dfd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold LockServ_network_invariant in *.",
                        "VernacExtend",
                        "2be70045e1f5548a3129378cd552d1c7602e856d"
                    ]
                },
                {
                    "command": [
                        "intuition eauto using locks_correct_unlock_net_handlers_old, locks_correct_locked_net_handlers_old.",
                        "VernacExtend",
                        "bb89af26ece454a1adca132ee02d30c2b094f5bf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold LockServ_network_invariant in *.",
                        "VernacExtend",
                        "2be70045e1f5548a3129378cd552d1c7602e856d"
                    ]
                },
                {
                    "command": [
                        "intuition eauto using locks_correct_unlock_net_handlers_new, locks_correct_locked_net_handlers_new.",
                        "VernacExtend",
                        "62db19f2962e849d11c37840caa18326991733d8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto using LockServ_nwnw_input_handlers_old_new.",
                        "VernacExtend",
                        "dfeb39195470288e23f16a39cf7bce54dffa16b0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto using LockServ_nwnw_input_handlers_new_new.",
                        "VernacExtend",
                        "03698a210d6fa07c4c90a3666a6a11f7388e0c2d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto using LockServ_nwnw_net_handlers_old_new.",
                        "VernacExtend",
                        "e3e9425a8e6c57a3c814da6ddf60d3d02bc0df3a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto using LockServ_nwnw_net_handlers_new_new.",
                        "VernacExtend",
                        "bb22dc7a7abe8fe46ddf285ccf16e72ee51ad51b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "true_in_reachable_mutual_exclusion",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "pose proof decomposition_invariant.",
                        "VernacExtend",
                        "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
                        "VernacExtend",
                        "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
                    ]
                },
                {
                    "command": [
                        "unfold true_in_reachable in *.",
                        "VernacExtend",
                        "9ce7a13b3751eecaf588c8e3708393978c62108d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply locks_correct_implies_mutex.",
                        "VernacExtend",
                        "82ca6c63464dc829a5e109a9b1ef2a89dade7c22"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : _ |- _ ] => apply H end.",
                        "VernacExtend",
                        "4e2c569e73846a32731d2e8edd2353a4e28b6ec6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cross_relation",
            "line_nb": 445,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp refl_trans_1n_n1_trace.",
                        "VernacExtend",
                        "d01ed0458af335ee0efac41574590026a6d205d5"
                    ]
                },
                {
                    "command": [
                        "prep_induction H1.",
                        "VernacExtend",
                        "286759b6cbcca70182596fe7eeaef2a8bfe65136"
                    ]
                },
                {
                    "command": [
                        "induction H1; intros; subst; eauto.",
                        "VernacExtend",
                        "07beb43b907ff455a13624d6c011de0d163f30a1"
                    ]
                },
                {
                    "command": [
                        "eapply H3; eauto.",
                        "VernacExtend",
                        "4aa0b3760c6510a6990a96042c273418bec50b3d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply refl_trans_n1_1n_trace.",
                        "VernacExtend",
                        "fd6acd90e04197941daea8247e0531e7e5047122"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHrefl_trans_n1_trace; auto.",
                        "VernacExtend",
                        "17a231d3fe44310dbdce9ea41559c008db879648"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_mutex'_no_out_extend",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "induction tr; intuition; unfold trace_mutual_exclusion in *; simpl in *; repeat break_match; subst; intuition.",
                        "VernacExtend",
                        "8f9287570e6b7579515ef915467aa4eeba15c1d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_no_out_inv",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; subst; intuition; eauto.",
                        "VernacExtend",
                        "29fef6854c994f8613fe842f0773a96d28cb93ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_no_out_extend",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; subst; intuition.",
                        "VernacExtend",
                        "d5eb635ca6bb0a8d31f8c3f6676ada69c0f89665"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomposition_reachable_nw_invariant",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "pose proof decomposition_invariant.",
                        "VernacExtend",
                        "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
                        "VernacExtend",
                        "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
                    ]
                },
                {
                    "command": [
                        "unfold true_in_reachable, reachable in *.",
                        "VernacExtend",
                        "d82730845f3ade8456e1cdd3ab3dcd71756ddecd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold composed_invariant in *.",
                        "VernacExtend",
                        "c41590863f86135646654e479113c21a7909321f"
                    ]
                },
                {
                    "command": [
                        "apply H; eauto.",
                        "VernacExtend",
                        "1dad22a5bc38e6644c0a2d380e546c904cb6fe58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_mutex'_locked_extend",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *.",
                        "VernacExtend",
                        "93e2226e1733e0239e56f1881a113252e60172f4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "repeat break_match; subst; intuition.",
                        "VernacExtend",
                        "af752512dbc3b4e2d7f42ac4af48caf91f95f9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reachable_intro",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "unfold reachable.",
                        "VernacExtend",
                        "21bcb9bc1a63ffa7785cf9255bff3ae47abb446a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_locked_invariant",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof decomposition_invariant.",
                        "VernacExtend",
                        "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
                        "VernacExtend",
                        "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
                    ]
                },
                {
                    "command": [
                        "unfold true_in_reachable in *.",
                        "VernacExtend",
                        "9ce7a13b3751eecaf588c8e3708393978c62108d"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locks_correct_invariant",
            "line_nb": 495,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof decomposition_invariant.",
                        "VernacExtend",
                        "3bb740030ef0e406d0d81fe6d79a1b023c22823b"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp inductive_invariant_true_in_reachable.",
                        "VernacExtend",
                        "4b8ab10a7d87439507a0e6f74bf20b1b16798be0"
                    ]
                },
                {
                    "command": [
                        "unfold true_in_reachable in *.",
                        "VernacExtend",
                        "9ce7a13b3751eecaf588c8e3708393978c62108d"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto.",
                        "VernacExtend",
                        "e167f871dfeec1cef76aaf201c54c081f29f730b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mutual_exclusion_invariant",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply locks_correct_implies_mutex.",
                        "VernacExtend",
                        "82ca6c63464dc829a5e109a9b1ef2a89dade7c22"
                    ]
                },
                {
                    "command": [
                        "auto using locks_correct_invariant.",
                        "VernacExtend",
                        "629c08216739d863d38c9af835521790ece0d160"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_locked_some_eq",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; subst; eauto.",
                        "VernacExtend",
                        "00965378be8c8727f150f60d439205bfa11f94cb"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_server_extend",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; auto.",
                        "VernacExtend",
                        "3a99e41b6b339ec1e8a4c2a6cf5776bee4f7022b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_locked_extend",
            "line_nb": 515,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; auto.",
                        "VernacExtend",
                        "3a99e41b6b339ec1e8a4c2a6cf5776bee4f7022b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_mutual_exclusion'_extend_input",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; intuition.",
                        "VernacExtend",
                        "949a6aa78beadea78632c5da25f3644ae1982b01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_mutual_exclusion'_extend_input_server",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; intuition.",
                        "VernacExtend",
                        "949a6aa78beadea78632c5da25f3644ae1982b01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_input_inv",
            "line_nb": 524,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; auto; try congruence; subst; eauto.",
                        "VernacExtend",
                        "a7236b01a5bccfc17175a84f60a07d02550ca6df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_input_inv_server",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; auto; try congruence; subst; eauto.",
                        "VernacExtend",
                        "a7236b01a5bccfc17175a84f60a07d02550ca6df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_input_extend",
            "line_nb": 530,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; auto.",
                        "VernacExtend",
                        "3a99e41b6b339ec1e8a4c2a6cf5776bee4f7022b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trace_mutex'_unlock_extend",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; intuition (auto; try congruence).",
                        "VernacExtend",
                        "c1c09aaec2be1d8ccade3b0a381bd5bfa520a13d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_unlock_none",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; intuition.",
                        "VernacExtend",
                        "949a6aa78beadea78632c5da25f3644ae1982b01"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder_unlock_none",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_unlock_none.",
                        "VernacExtend",
                        "d0eba66a95944909b858da2a182d9c345babea14"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder_some_unlock_inv",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; subst; intuition; try congruence; eauto.",
                        "VernacExtend",
                        "10cabfe05a922e1380519d62399200f4f081bd06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_holder'_neq_unlock_extend",
            "line_nb": 549,
            "steps": [
                {
                    "command": [
                        "induction tr; intros; simpl in *; repeat break_match; subst; try congruence; intuition.",
                        "VernacExtend",
                        "ebe8fe8815d498798cea1895960c2c3953b4d9fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LockServ_mutual_exclusion_trace",
            "line_nb": 552,
            "steps": [
                {
                    "command": [
                        "apply cross_relation; intros.",
                        "VernacExtend",
                        "c59086f1abbdb192767422dbf77365cf9ca0fbc9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold last_holder in *.",
                        "VernacExtend",
                        "3631b8588485a4ce9fa3a9749c341f6c8bbaffdd"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold last_holder in *.",
                        "VernacExtend",
                        "3631b8588485a4ce9fa3a9749c341f6c8bbaffdd"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : step_async _ _ _ |- _ ] => invcs H end; monad_unfold; repeat break_let; repeat find_inversion.",
                        "VernacExtend",
                        "60c65af8937947ee3e28c694eaa75ee612e23e98"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold NetHandler in *.",
                        "VernacExtend",
                        "60329115384e38acc40b7bfb62f37bffe59bdf61"
                    ]
                },
                {
                    "command": [
                        "break_match.",
                        "VernacExtend",
                        "b2bc690b7d230eee6ff83ec2752e6c3ed02d2594"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp ClientNetHandler_cases.",
                        "VernacExtend",
                        "5001cb3adda5ae89a4c3cbf828256045e371eb84"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "break_or_hyp.",
                        "VernacExtend",
                        "a7c34cd75b882cc63618c1319b50ac735e08690b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intuition; subst.",
                        "VernacExtend",
                        "4321ede1ef2ce18b467565763256f2f4c8a1cdf0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutex'_no_out_extend; auto.",
                        "VernacExtend",
                        "471425f7154f0f18b7a1ea2538d5a11cb99d2003"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite update_nop_ext.",
                        "VernacExtend",
                        "dc67650d6350c00cdca76c0f52cb4db7cc8257a4"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_no_out_inv.",
                        "VernacExtend",
                        "11fc814c702e0124e754a15bdaeae2b7a465c722"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
                        "VernacExtend",
                        "2a95bffa7eae408809ee8eeb1d110100d1b524df"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_no_out_extend.",
                        "VernacExtend",
                        "24f3fc775be39facec179c990562cbd970e6c04f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intuition; subst.",
                        "VernacExtend",
                        "4321ede1ef2ce18b467565763256f2f4c8a1cdf0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutex'_locked_extend.",
                        "VernacExtend",
                        "9044b022c7a71772caa5396765280be441c42501"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct (last_holder' None tr) eqn:?; auto.",
                        "VernacExtend",
                        "8ea619dc40bf02148fc2f45135b7dcb447d2f1a7"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "erewrite locked_in_flight_all_clients_false in * by eauto using locks_correct_locked_invariant, reachable_intro, locks_correct_invariant.",
                        "VernacExtend",
                        "999a4ff8bf82392b2382197af046ca2b25091495"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "my_update_destruct; try find_inversion; rewrite_update; auto.",
                        "VernacExtend",
                        "914444c8af64e7968d3e3a39598fb3d602641274"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_locked_some_eq.",
                        "VernacExtend",
                        "e7e9b02d99e09aa5ff8d0719e6b71586ca1ab1c0"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "my_update_destruct; try find_inversion; rewrite_update.",
                        "VernacExtend",
                        "3e34819b5499717218d2163651fb0f8f10b95c81"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_locked_extend.",
                        "VernacExtend",
                        "c847093c8920133b1d8c0f75b789658ee709947a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "erewrite locked_in_flight_all_clients_false in * by eauto using locks_correct_locked_invariant, reachable_intro, locks_correct_invariant.",
                        "VernacExtend",
                        "999a4ff8bf82392b2382197af046ca2b25091495"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp ServerNetHandler_cases.",
                        "VernacExtend",
                        "a1a988f0b8780e92ee82e4eb743508ae9f9092b2"
                    ]
                },
                {
                    "command": [
                        "break_and.",
                        "VernacExtend",
                        "90a213dc7b4fc55cb8bc34300101c3eaa0ead551"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutex'_no_out_extend.",
                        "VernacExtend",
                        "9e4cddbdeacfe1f931ceb72871c8c36424809777"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "my_update_destruct; try discriminate.",
                        "VernacExtend",
                        "86016c341653a55d8d4dfee2c3d077646c5d772e"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_no_out_inv.",
                        "VernacExtend",
                        "11fc814c702e0124e754a15bdaeae2b7a465c722"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "my_update_destruct; try discriminate; rewrite_update.",
                        "VernacExtend",
                        "7c4b7d08e5669f4fbb020b138c0232c66dbbbfb3"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_no_out_extend.",
                        "VernacExtend",
                        "24f3fc775be39facec179c990562cbd970e6c04f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "unfold InputHandler in *.",
                        "VernacExtend",
                        "4714f4ddbf84a51823433b7c75df5bb882c7705d"
                    ]
                },
                {
                    "command": [
                        "break_match.",
                        "VernacExtend",
                        "b2bc690b7d230eee6ff83ec2752e6c3ed02d2594"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold ClientIOHandler in *.",
                        "VernacExtend",
                        "a64f5bc6091d73004ab8d4dc68571e5a5253330f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "monad_unfold.",
                        "VernacExtend",
                        "086e2d130d757170479c1841773b226b4c1659a9"
                    ]
                },
                {
                    "command": [
                        "repeat break_match; repeat find_inversion; intuition; repeat rewrite snoc_assoc in *; try apply trace_mutex'_no_out_extend; try find_apply_lem_hyp last_holder'_no_out_inv; try (apply last_holder'_no_out_extend; auto).",
                        "VernacExtend",
                        "2f78dab9f8a70628bec8e8e44642bafc82ba1e1c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutual_exclusion'_extend_input; auto.",
                        "VernacExtend",
                        "a07bf91f8f883a44cba815ec634ff279eeb7ec64"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite update_nop_ext.",
                        "VernacExtend",
                        "dc67650d6350c00cdca76c0f52cb4db7cc8257a4"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_input_inv; try congruence.",
                        "VernacExtend",
                        "c12ef114ff8e9eef3d1ecc6b461d91a2349938df"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
                        "VernacExtend",
                        "2a95bffa7eae408809ee8eeb1d110100d1b524df"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_input_extend; auto.",
                        "VernacExtend",
                        "0795f0d699f478590c1696da2503bac635b9e753"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutex'_unlock_extend; auto.",
                        "VernacExtend",
                        "7266ad9cb1ed81f77903259be12df802c6f1cf6d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite last_holder_unlock_none in *; auto.",
                        "VernacExtend",
                        "55d9d25313d553b8ce408d635da860fed0301bcc"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "my_update_destruct; try find_inversion; rewrite_update.",
                        "VernacExtend",
                        "3e34819b5499717218d2163651fb0f8f10b95c81"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (mutual_exclusion (nwState st)) by eauto using mutual_exclusion_invariant, reachable_intro.",
                        "VernacExtend",
                        "298db4ca5a2705b02f1cbe87c2a1ad0873cade4f"
                    ]
                },
                {
                    "command": [
                        "unfold mutual_exclusion in *.",
                        "VernacExtend",
                        "8e1b9aa49f018fd87ea81344c22f4cff888c9dbb"
                    ]
                },
                {
                    "command": [
                        "assert (c = n) by eauto.",
                        "VernacExtend",
                        "b0016d74acdd7cc09882d5f10f5b763939df902f"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutex'_unlock_extend.",
                        "VernacExtend",
                        "5c46e1d383ca7bcb96d9c96f8257bbb87598d413"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite update_nop.",
                        "VernacExtend",
                        "aa860aa59a35f2a307d84fefd0e971e72f3f5ca4"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder_some_unlock_inv.",
                        "VernacExtend",
                        "4efcba6dbff642eeb91d38d41f276e5902d1e88f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
                        "VernacExtend",
                        "2a95bffa7eae408809ee8eeb1d110100d1b524df"
                    ]
                },
                {
                    "command": [
                        "assert (n <> c) by congruence.",
                        "VernacExtend",
                        "e075a578eba6d706b8c769fb09a53bfa07307e33"
                    ]
                },
                {
                    "command": [
                        "find_apply_hyp_hyp.",
                        "VernacExtend",
                        "5383dcfa01573f561f26c2e7f308613c889a9c8b"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_neq_unlock_extend; auto.",
                        "VernacExtend",
                        "ab0652d3a50e63696d95bb4870dc5b4e3580288d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutual_exclusion'_extend_input; auto.",
                        "VernacExtend",
                        "a07bf91f8f883a44cba815ec634ff279eeb7ec64"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite update_nop_ext.",
                        "VernacExtend",
                        "dc67650d6350c00cdca76c0f52cb4db7cc8257a4"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_input_inv; try congruence.",
                        "VernacExtend",
                        "c12ef114ff8e9eef3d1ecc6b461d91a2349938df"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with | [ H : _ |- _ ] => rewrite update_nop in H end.",
                        "VernacExtend",
                        "2a95bffa7eae408809ee8eeb1d110100d1b524df"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_input_extend; auto.",
                        "VernacExtend",
                        "0795f0d699f478590c1696da2503bac635b9e753"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold ServerIOHandler in *.",
                        "VernacExtend",
                        "4672813b6a5f9fb6c1a0ded4a3cf1aaae2c3b1f8"
                    ]
                },
                {
                    "command": [
                        "monad_unfold.",
                        "VernacExtend",
                        "086e2d130d757170479c1841773b226b4c1659a9"
                    ]
                },
                {
                    "command": [
                        "find_inversion.",
                        "VernacExtend",
                        "f1dd355c7c2f63f8f275fc6f55ac72ee2c39f687"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intuition; repeat rewrite snoc_assoc in *.",
                        "VernacExtend",
                        "6a27465b9d83b4aa494c30617799130496d2a56e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutex'_no_out_extend.",
                        "VernacExtend",
                        "9e4cddbdeacfe1f931ceb72871c8c36424809777"
                    ]
                },
                {
                    "command": [
                        "apply trace_mutual_exclusion'_extend_input_server.",
                        "VernacExtend",
                        "7fbea50c05e51c432399998b9042ab7448ac3987"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_no_out_inv.",
                        "VernacExtend",
                        "11fc814c702e0124e754a15bdaeae2b7a465c722"
                    ]
                },
                {
                    "command": [
                        "rewrite update_nop.",
                        "VernacExtend",
                        "aa860aa59a35f2a307d84fefd0e971e72f3f5ca4"
                    ]
                },
                {
                    "command": [
                        "find_apply_lem_hyp last_holder'_input_inv_server.",
                        "VernacExtend",
                        "2cff8c1752f6c596449c8fb1749ace985f91efd4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply last_holder'_no_out_extend; auto.",
                        "VernacExtend",
                        "01d349d8f6c1aba7da48759b414c61a525cffb2e"
                    ]
                },
                {
                    "command": [
                        "rewrite_update.",
                        "VernacExtend",
                        "2ba0fcad8cd91685b89ad35e0d1e2fa6590301d3"
                    ]
                },
                {
                    "command": [
                        "unfold last_holder.",
                        "VernacExtend",
                        "0aa06ca2c34a9906696553b122e8bc8d4727ed25"
                    ]
                },
                {
                    "command": [
                        "rewrite last_holder'_server_extend.",
                        "VernacExtend",
                        "1f82bb791f5e0f8f050efd8a5543346be3e88caa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}