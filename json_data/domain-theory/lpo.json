{
    "filename": "lpo.v",
    "coq_project": "domain-theory",
    "vernac_cmds": [
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Relations_1.",
            "VernacRequire",
            "49c733c10349a78f9f2197cca78f05286f29edcc"
        ],
        [
            "Require Import Partial_Order.",
            "VernacRequire",
            "24358e5caf9b1bd760d0126ae2fc7294f9e51200"
        ],
        [
            "Require Import Cpo.",
            "VernacRequire",
            "8070c6356afd9c7fc17b7dbd3e7fb33a1bde9b7e"
        ],
        [
            "Require Import algpodefs.",
            "VernacRequire",
            "3abb839f4930d284d1fda919dcdb012fa09a9901"
        ],
        [
            "Require Import Powerset.",
            "VernacRequire",
            "1abda0d530ee71ba02a5580ee87c8ab33ed7c3e4"
        ],
        [
            "Section Lemmas_on_partial_orders.",
            "VernacBeginSection",
            "c645346b8a31eebed2eb2365f474c2eaa1e5c05b"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Variable B : Ensemble U.",
            "VernacAssumption",
            "71570425245c95bb3c43bed6d8d8598f51275500"
        ],
        [
            "Variable D : PO U.",
            "VernacAssumption",
            "efdac270a175cbda08a37e4068fdad3a6d31f404"
        ],
        [
            "Theorem Rel_of_reflexive : forall x : U, Rel_of U D x x.",
            "VernacStartTheoremProof",
            "9c3feb8f3448efb2f5ba132a3ace2689d06d88d9"
        ],
        [
            "elim D.",
            "VernacExtend",
            "7a9c8d0274629badfb1f72f9abd35b916ccace25"
        ],
        [
            "intros Carrier_of Rel_of PO_cond1 PO_cond2; elim PO_cond2; auto with sets.",
            "VernacExtend",
            "61622197b390a1686423e38d2f826bcde77cd4df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rel_of_reflexive.",
            "VernacHints",
            "ee0cac8da41ad3f4206117b14c77fe8156e6af2f"
        ],
        [
            "Theorem Rel_of_antisymmetric : Antisymmetric U (Rel_of U D).",
            "VernacStartTheoremProof",
            "23a8dffe2d5ca97f0cde3ea76cd129fea2c38696"
        ],
        [
            "elim D.",
            "VernacExtend",
            "7a9c8d0274629badfb1f72f9abd35b916ccace25"
        ],
        [
            "intros Carrier_of Rel_of PO_cond1 PO_cond2; elim PO_cond2; auto with sets.",
            "VernacExtend",
            "61622197b390a1686423e38d2f826bcde77cd4df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rel_of_antisymmetric.",
            "VernacHints",
            "4f86854e2a37c3b257054b199f333e4b592ba549"
        ],
        [
            "Theorem Rel_of_transitive : Transitive U (Rel_of U D).",
            "VernacStartTheoremProof",
            "ec4c53ebfede6219170fd3377c8c75811394735a"
        ],
        [
            "elim D.",
            "VernacExtend",
            "7a9c8d0274629badfb1f72f9abd35b916ccace25"
        ],
        [
            "intros Carrier_of Rel_of PO_cond1 PO_cond2; elim PO_cond2; auto with sets.",
            "VernacExtend",
            "61622197b390a1686423e38d2f826bcde77cd4df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rel_of_transitive.",
            "VernacHints",
            "42b093df6ac64b71e1d28607c38d42648658d030"
        ],
        [
            "Theorem Couple_included_in_carrier : forall x y : U, In U (Carrier_of U D) x -> In U (Carrier_of U D) y -> Included U (Couple U x y) (Carrier_of U D).",
            "VernacStartTheoremProof",
            "5ba5da5ac81a7c435dc8d51258d2a2e0725d44b7"
        ],
        [
            "intros x y H' H'0; red in |- *.",
            "VernacExtend",
            "557386dcb7fb0e25975f17ac808c73c4fc783693"
        ],
        [
            "intros x0 H'1; elim H'1; auto with sets.",
            "VernacExtend",
            "44e428d76ae94865f9058751a272c2faf5201903"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Couple_included_in_carrier.",
            "VernacHints",
            "bd88f19d204dba9cceff17cd8b1d30a190b0ee88"
        ],
        [
            "Theorem Lub_is_in_Carrier : forall (bsup : U) (X : Ensemble U), Included U X (Carrier_of U D) -> Lub U D X bsup -> In U (Carrier_of U D) bsup.",
            "VernacStartTheoremProof",
            "d8cc4abf120013dd7de0a573b79ca348c6263368"
        ],
        [
            "intros bsup X H' H'0; elim H'0.",
            "VernacExtend",
            "8637ae42744744cf268e7c266cacc3c2d5ea661a"
        ],
        [
            "intro H'1; elim H'1; auto with sets.",
            "VernacExtend",
            "8b16b5ad0aff3bab47be68a3d17862470833442d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Singleton_has_lub : forall x : U, In U (Carrier_of U D) x -> Lub U D (Singleton U x) x.",
            "VernacStartTheoremProof",
            "29b86ec9a0db779cc27b19f942786603a0a987a6"
        ],
        [
            "intros x H'.",
            "VernacExtend",
            "1864e43355295bd98e7920f89fb20cbad05f10d7"
        ],
        [
            "apply Lub_definition.",
            "VernacExtend",
            "396f6aab9a0d6bd025583ba0babe98e8eccffc41"
        ],
        [
            "apply Upper_Bound_definition; auto with sets.",
            "VernacExtend",
            "f9382a0080cad96548f378bfbcaa373b7b309634"
        ],
        [
            "intros y H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
        ],
        [
            "intros y H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Singleton_has_lub.",
            "VernacHints",
            "2c3e49d0f1993ba7825ea1b18544a7d90e10a849"
        ],
        [
            "Theorem Empty_set_has_Upper_Bound : exists maj : U, Upper_Bound U D (Empty_set U) maj.",
            "VernacStartTheoremProof",
            "3c115f02b95ea2cb44c4bebeffd619b2b91b5e3b"
        ],
        [
            "elim D.",
            "VernacExtend",
            "7a9c8d0274629badfb1f72f9abd35b916ccace25"
        ],
        [
            "intros C R cond1 cond2.",
            "VernacExtend",
            "69dccc6d0de110c49785ec28f7f1ce7ab5d0db43"
        ],
        [
            "elim cond1.",
            "VernacExtend",
            "8175029ba355569ff8f955cd9216a1ea6226c09c"
        ],
        [
            "intros x H'; exists x.",
            "VernacExtend",
            "a2c47c3208f4084332b3797df5bb7f65b8b76ec6"
        ],
        [
            "apply Upper_Bound_definition; auto with sets.",
            "VernacExtend",
            "f9382a0080cad96548f378bfbcaa373b7b309634"
        ],
        [
            "intros y H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Empty_set_has_Upper_Bound.",
            "VernacHints",
            "689e34c549c5e210eac4e583abb6cd9adeabf12a"
        ],
        [
            "Theorem Anyone_is_Upper_Bound_of_Empty_set : forall x : U, In U (Carrier_of U D) x -> Upper_Bound U D (Empty_set U) x.",
            "VernacStartTheoremProof",
            "bb67ca90bcb96bf50a0e2f09f98c804569fb54c5"
        ],
        [
            "intros x H'; apply Upper_Bound_definition; auto with sets.",
            "VernacExtend",
            "7b6668be50eff37437a9d49257471090789af9bb"
        ],
        [
            "intros y H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Anyone_is_Upper_Bound_of_Empty_set.",
            "VernacHints",
            "9279cbd99922900567e6e59e14fdc16516ad04e7"
        ],
        [
            "Theorem Empty_set_has_lub : forall C : Cpo U, exists bsup : U, Lub U (PO_of_cpo U C) (Empty_set U) bsup.",
            "VernacStartTheoremProof",
            "9db9eb1c792e4864f8559c280f5f38c0a125dd9c"
        ],
        [
            "intro C; elim C; simpl in |- *.",
            "VernacExtend",
            "83d8f6da8f3db8020c862db50a085f112ca909f7"
        ],
        [
            "intros PO_of_cpo Cpo_cond; elim Cpo_cond; clear Cpo_cond.",
            "VernacExtend",
            "67280c02bbe8c74cf24927115cfbbc25a85b5443"
        ],
        [
            "intro H'; elim H'; clear H'.",
            "VernacExtend",
            "e5cf8111c650168f680de906389d430026e436ab"
        ],
        [
            "intros bot is_bot H'0; exists bot; simpl in |- *.",
            "VernacExtend",
            "4d24274626dcd6ddfed3935ef2dd55131eb062f9"
        ],
        [
            "elim is_bot; intros H' H'1.",
            "VernacExtend",
            "c4b051febe1b4587990429f84c88c43a871e396f"
        ],
        [
            "apply Lub_definition.",
            "VernacExtend",
            "396f6aab9a0d6bd025583ba0babe98e8eccffc41"
        ],
        [
            "apply Upper_Bound_definition; auto with sets.",
            "VernacExtend",
            "f9382a0080cad96548f378bfbcaa373b7b309634"
        ],
        [
            "intros y H'2; elim H'2; auto with sets.",
            "VernacExtend",
            "4e31274a909dfa53b66f5f19c6bd48dfbe5cc96a"
        ],
        [
            "intros y H'2; elim H'2; auto with sets.",
            "VernacExtend",
            "4e31274a909dfa53b66f5f19c6bd48dfbe5cc96a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Empty_set_has_lub.",
            "VernacHints",
            "7d44effab1c002ba49d6975cfa7e705e79188b68"
        ],
        [
            "Theorem Upper_downward_stable : forall (A B : Ensemble U) (maj : U), Included U A (Carrier_of U D) -> Included U B (Carrier_of U D) -> Included U A B -> Upper_Bound U D B maj -> Upper_Bound U D A maj.",
            "VernacStartTheoremProof",
            "864adc58aaaf6f9ff6bc98864569611d90e43b4a"
        ],
        [
            "intros A B0 maj H' H'0 H'1 H'2; elim H'2; auto with sets.",
            "VernacExtend",
            "ff57f84a072ce20fe87bee711e0ee66bcd37101e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Conditionally_complete_has_a_bottom : Conditionally_complete U D -> exists bot : U, Bottom U D bot.",
            "VernacStartTheoremProof",
            "130dc8981f78bf937459cb279a2159c361600780"
        ],
        [
            "intro H'; elim H'.",
            "VernacExtend",
            "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
        ],
        [
            "intro H'0; elim (H'0 (Empty_set U)); [ intros bsup E; elim E | idtac | idtac ]; auto with sets.",
            "VernacExtend",
            "2268ff07ff25ccd731a378c91c9da72c535a7463"
        ],
        [
            "intros H'1 H'2; exists bsup.",
            "VernacExtend",
            "6f6970ac44651c4c9ba9c1c72532b4483184016a"
        ],
        [
            "elim H'1; auto with sets.",
            "VernacExtend",
            "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Conditionally_complete_has_a_bottom.",
            "VernacHints",
            "883c0c60a3cfa354fca0e3465f55d422ed65f0fb"
        ],
        [
            "Theorem Bottom_is_compact : Conditionally_complete U D -> exists bot : U, Bottom U D bot /\\ Compact U D bot.",
            "VernacStartTheoremProof",
            "0c63bbb39c7a69d907ec3052ca016eb579187130"
        ],
        [
            "intro H'; lapply Conditionally_complete_has_a_bottom; [ intro H'0 | try assumption ].",
            "VernacExtend",
            "53685211ccd6ca2d51091df098a1e390b774b115"
        ],
        [
            "elim H'0; intros bot E; clear H'0.",
            "VernacExtend",
            "952611fbb497fbf3188b656b56d13946e6a7eb30"
        ],
        [
            "exists bot; split; auto with sets.",
            "VernacExtend",
            "343f91503c16ec2b480037b46a1ac3edc1f6525a"
        ],
        [
            "apply Definition_of_compact; auto with sets.",
            "VernacExtend",
            "661e3df3d22b471a7afb4732bdef8b1ec411957b"
        ],
        [
            "elim E; auto with sets.",
            "VernacExtend",
            "881e2800c6b2449091f4dc1f2c2d1c7e02b4a89e"
        ],
        [
            "intros X H'0; elim H'0.",
            "VernacExtend",
            "3108338c4a72e7e8a6108052ebf28553b8089c3a"
        ],
        [
            "intros H'1 H'2; elim H'2.",
            "VernacExtend",
            "3d1d9df5414c573c1751f83c599c68fbe20b73a9"
        ],
        [
            "intros x H'3 H'4 H'5; try assumption.",
            "VernacExtend",
            "8d08f343a57f76c4f94136b133eba816c75cc15e"
        ],
        [
            "exists x; auto with sets.",
            "VernacExtend",
            "84de534c617ae30322cea69828c06843e5da7542"
        ],
        [
            "elim E; auto with sets.",
            "VernacExtend",
            "881e2800c6b2449091f4dc1f2c2d1c7e02b4a89e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Bottom_is_compact.",
            "VernacHints",
            "09f42fb03b93d6b4531245ca3c44c596e5be1b64"
        ],
        [
            "Theorem Compact_is_in_Carrier : forall x : U, Compact U D x -> In U (Carrier_of U D) x.",
            "VernacStartTheoremProof",
            "8506edc56e33505cb98a0b59586ef1c91100b5c3"
        ],
        [
            "intros x H'; elim H'; auto with sets.",
            "VernacExtend",
            "100234b88089a22c7bc41c0d3c5a7caa73a7431e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Compact_is_in_Carrier.",
            "VernacHints",
            "779a537485de8b23d7a452acf0c704922397ee05"
        ],
        [
            "Theorem Compatible_is_reflexive : forall x : U, Compatible U D x x.",
            "VernacStartTheoremProof",
            "6b1d49905e20c823bd4dbf6eb9427e2089ac1494"
        ],
        [
            "intro x; red in |- *; simpl in |- *.",
            "VernacExtend",
            "8d416954a26e1bc9bb554c4dd1cf9e90f318b043"
        ],
        [
            "intros H'2 H'3; exists x.",
            "VernacExtend",
            "4296b342168816cffcd6013a64e6db002c758634"
        ],
        [
            "split; [ assumption | apply Upper_Bound_definition ]; auto with sets.",
            "VernacExtend",
            "bc86f4c4962cab97f2162206335e8f72b5c28afb"
        ],
        [
            "intros y H'; elim H'; auto with sets.",
            "VernacExtend",
            "f96b03161c644eb644e507f80d6a472a9dd1cfb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Compatible_is_reflexive.",
            "VernacHints",
            "fb5f3ff5b6d8769dfc9e016c074e4ed4172fbbec"
        ],
        [
            "Theorem Couple_is_symmetric : forall x y : U, Couple U x y = Couple U y x :>Ensemble U.",
            "VernacStartTheoremProof",
            "37ed2e3d98cb17880f5e9c28bfa97937cc1fc8d4"
        ],
        [
            "intros x y; apply Extensionality_Ensembles; red in |- *.",
            "VernacExtend",
            "de4b468ec124df4c0d41ed721a7616ff600a2c5a"
        ],
        [
            "split; red in |- *; (intros x0 H'; elim H'); auto with sets.",
            "VernacExtend",
            "96699a4d318b3ce0aa0995a1ccafb28e5e80a60f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Compatible_is_symmetric : forall x y : U, Compatible U D x y -> Compatible U D y x.",
            "VernacStartTheoremProof",
            "54e0b1604c2d95652e87e50d9e4270d1046cd06c"
        ],
        [
            "unfold Compatible in |- *.",
            "VernacExtend",
            "e481cd481f19ed52289b6cb2630fb88c6812c16a"
        ],
        [
            "intros x y H' H'0 H'1.",
            "VernacExtend",
            "4c16d2c4f41f6714262c2724ba554938a9d738cd"
        ],
        [
            "rewrite <- (Couple_is_symmetric x y); auto with sets.",
            "VernacExtend",
            "d238bd18ac296886cca64e8302a56d069355e4c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate Compatible_is_symmetric.",
            "VernacHints",
            "31eabea6503a1ead98679e08dd71660181f7fe6f"
        ],
        [
            "Theorem Compatible_imp_consistent : forall x y : U, Compatible U D x y -> Consistent U D (Couple U x y).",
            "VernacStartTheoremProof",
            "69f88140d4dca92518dff6970fe8a2d332e0971b"
        ],
        [
            "intros x y H'; red in |- *; simpl in |- *.",
            "VernacExtend",
            "01ff97513ae65d38f56a9a581a48266791783697"
        ],
        [
            "intros H'0 x0 y0 H'1; try assumption.",
            "VernacExtend",
            "c9279d1b12c92f636fee64b390d039992c22c827"
        ],
        [
            "red in H'1.",
            "VernacExtend",
            "1762b5626eb887bdbedff1c64766209656ece89e"
        ],
        [
            "lapply (H'1 x0); [ intro H'3 | auto with sets ].",
            "VernacExtend",
            "bdd0a11673c3a20fd47b5bcac775c14d8446a585"
        ],
        [
            "lapply (H'1 y0); [ intro H'4 | auto with sets ].",
            "VernacExtend",
            "0363e731e05ca4268d8f958f6bca65c3dc375fda"
        ],
        [
            "elim H'4.",
            "VernacExtend",
            "6b9f1f9423d39545e0007ba27d262903c68547c3"
        ],
        [
            "elim H'3; auto with sets.",
            "VernacExtend",
            "1088e897fa78ef34eccf5c1c5e8c629ca8192165"
        ],
        [
            "elim H'3; auto with sets.",
            "VernacExtend",
            "1088e897fa78ef34eccf5c1c5e8c629ca8192165"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Consistent_imp_compatible : forall x y : U, In U (Carrier_of U D) x -> In U (Carrier_of U D) y -> Consistent U D (Couple U x y) -> Compatible U D x y.",
            "VernacStartTheoremProof",
            "937ec1351b5ae6cd8d715ac6823d1dcfc356c47b"
        ],
        [
            "intros x y H' H'0 H'1; red in H'1; simpl in H'1; auto with sets.",
            "VernacExtend",
            "7e6d6a1d79c94718c7433b1b8df555e724ff59ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Coherent_implies_Conditionally_Complete : Coherent U D -> Conditionally_complete U D.",
            "VernacStartTheoremProof",
            "241637da03b6bb9dcdfe88ee096997fcbefa0901"
        ],
        [
            "intro H'; red in H'.",
            "VernacExtend",
            "0f897e4b298cba4a4f9cc5bf5540bf8180f681c8"
        ],
        [
            "apply Definition_of_Conditionally_complete.",
            "VernacExtend",
            "db464e641381c427da6213882aca3570a492abdb"
        ],
        [
            "intros X H'0 H'1.",
            "VernacExtend",
            "6299f875099f25d69407c9c6e1f5831d56983b96"
        ],
        [
            "apply H'; auto with sets.",
            "VernacExtend",
            "6bba0cf77108e48efcbafad3a2d3d0e679c2cd35"
        ],
        [
            "red in |- *; simpl in |- *.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "intros H'2 x y H'3; red in |- *; simpl in |- *.",
            "VernacExtend",
            "c143a854cf29882f07c409e1765196935312f6fc"
        ],
        [
            "intros H'4 H'5.",
            "VernacExtend",
            "501c0c605d427fe6b25d01fe070d777a0598e26d"
        ],
        [
            "elim H'1; intros maj E; try exact E; clear H'1.",
            "VernacExtend",
            "412c2a4b196c0ada557048ba16e968c6b4d6bcc2"
        ],
        [
            "exists maj; elim E; auto with sets.",
            "VernacExtend",
            "864bc8ece72de9a7aef3d8624fd55211fe00dcfe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Coherent_implies_Conditionally_Complete.",
            "VernacHints",
            "f59d91cda52dad19f26754e14f44611007dae65e"
        ],
        [
            "Theorem Coherent_has_a_bottom : Coherent U D -> exists bot : U, Bottom U D bot.",
            "VernacStartTheoremProof",
            "59891f6f9e357129c27145867e537da5dbbd1dbd"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Coherent_has_a_bottom.",
            "VernacHints",
            "bd623b56cde234e8462a30579acef7ec7b4bc4c3"
        ],
        [
            "Theorem Coherent_implies_Complete : Coherent U D -> Complete U D.",
            "VernacStartTheoremProof",
            "b4e1aae3f1d654f3ab71c08af39643190ff0cefa"
        ],
        [
            "intro H'.",
            "VernacExtend",
            "3160ba192fa58e5db60b3e67645ce925759bb788"
        ],
        [
            "apply Definition_of_Complete; auto with sets.",
            "VernacExtend",
            "2f377e6530281903dc0d2631798bb3a44fe633d1"
        ],
        [
            "intros X H'0; apply H'.",
            "VernacExtend",
            "0aece7fbd8f52639a4819a994ecaa66adaba9df6"
        ],
        [
            "elim H'0; auto with sets.",
            "VernacExtend",
            "60b190186c2178905164606ffc8f02a0cb3babb3"
        ],
        [
            "red in |- *; simpl in |- *.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "intros H'1 x y H'2; elim H'0.",
            "VernacExtend",
            "43e176b98a1ea0c4e60ad5df5d86d0711ab39635"
        ],
        [
            "intros H'3 H'4 H'5; lapply (H'5 x y); [ intro H'8; elim H'8 | auto with sets ].",
            "VernacExtend",
            "1a23e36d66f7b0efcf38b38337d9dc4c72762e7a"
        ],
        [
            "intros x0 H'6; red in |- *; simpl in |- *.",
            "VernacExtend",
            "0680aa2bc825582adb9ab17d00d2229b2d154145"
        ],
        [
            "intros H'7 H'9; exists x0.",
            "VernacExtend",
            "45bd720f695c173e53b770e0816bbaf6aad7b070"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lemmas_on_partial_orders.",
            "VernacEndSegment",
            "c5e9df8b4e8ace2cc9e4d3f7c5d7af6b1b041bb1"
        ],
        [
            "Hint Resolve Rel_of_reflexive.",
            "VernacHints",
            "ee0cac8da41ad3f4206117b14c77fe8156e6af2f"
        ],
        [
            "Hint Resolve Rel_of_antisymmetric.",
            "VernacHints",
            "4f86854e2a37c3b257054b199f333e4b592ba549"
        ],
        [
            "Hint Resolve Rel_of_transitive.",
            "VernacHints",
            "42b093df6ac64b71e1d28607c38d42648658d030"
        ],
        [
            "Hint Resolve Couple_included_in_carrier.",
            "VernacHints",
            "bd88f19d204dba9cceff17cd8b1d30a190b0ee88"
        ],
        [
            "Hint Resolve Singleton_has_lub.",
            "VernacHints",
            "2c3e49d0f1993ba7825ea1b18544a7d90e10a849"
        ],
        [
            "Hint Resolve Empty_set_has_Upper_Bound.",
            "VernacHints",
            "689e34c549c5e210eac4e583abb6cd9adeabf12a"
        ],
        [
            "Hint Resolve Anyone_is_Upper_Bound_of_Empty_set.",
            "VernacHints",
            "9279cbd99922900567e6e59e14fdc16516ad04e7"
        ],
        [
            "Hint Resolve Empty_set_has_lub.",
            "VernacHints",
            "7d44effab1c002ba49d6975cfa7e705e79188b68"
        ],
        [
            "Hint Resolve Conditionally_complete_has_a_bottom.",
            "VernacHints",
            "883c0c60a3cfa354fca0e3465f55d422ed65f0fb"
        ],
        [
            "Hint Resolve Bottom_is_compact.",
            "VernacHints",
            "09f42fb03b93d6b4531245ca3c44c596e5be1b64"
        ],
        [
            "Hint Resolve Compact_is_in_Carrier.",
            "VernacHints",
            "779a537485de8b23d7a452acf0c704922397ee05"
        ],
        [
            "Hint Resolve Compatible_is_reflexive.",
            "VernacHints",
            "fb5f3ff5b6d8769dfc9e016c074e4ed4172fbbec"
        ],
        [
            "Hint Immediate Compatible_is_symmetric.",
            "VernacHints",
            "31eabea6503a1ead98679e08dd71660181f7fe6f"
        ],
        [
            "Hint Resolve Coherent_implies_Conditionally_Complete.",
            "VernacHints",
            "f59d91cda52dad19f26754e14f44611007dae65e"
        ],
        [
            "Hint Resolve Coherent_has_a_bottom.",
            "VernacHints",
            "bd623b56cde234e8462a30579acef7ec7b4bc4c3"
        ]
    ],
    "proofs": [
        {
            "name": "Rel_of_reflexive",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "elim D.",
                        "VernacExtend",
                        "7a9c8d0274629badfb1f72f9abd35b916ccace25"
                    ]
                },
                {
                    "command": [
                        "intros Carrier_of Rel_of PO_cond1 PO_cond2; elim PO_cond2; auto with sets.",
                        "VernacExtend",
                        "61622197b390a1686423e38d2f826bcde77cd4df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rel_of_antisymmetric",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "elim D.",
                        "VernacExtend",
                        "7a9c8d0274629badfb1f72f9abd35b916ccace25"
                    ]
                },
                {
                    "command": [
                        "intros Carrier_of Rel_of PO_cond1 PO_cond2; elim PO_cond2; auto with sets.",
                        "VernacExtend",
                        "61622197b390a1686423e38d2f826bcde77cd4df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rel_of_transitive",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "elim D.",
                        "VernacExtend",
                        "7a9c8d0274629badfb1f72f9abd35b916ccace25"
                    ]
                },
                {
                    "command": [
                        "intros Carrier_of Rel_of PO_cond1 PO_cond2; elim PO_cond2; auto with sets.",
                        "VernacExtend",
                        "61622197b390a1686423e38d2f826bcde77cd4df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Couple_included_in_carrier",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0; red in |- *.",
                        "VernacExtend",
                        "557386dcb7fb0e25975f17ac808c73c4fc783693"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'1; elim H'1; auto with sets.",
                        "VernacExtend",
                        "44e428d76ae94865f9058751a272c2faf5201903"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lub_is_in_Carrier",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros bsup X H' H'0; elim H'0.",
                        "VernacExtend",
                        "8637ae42744744cf268e7c266cacc3c2d5ea661a"
                    ]
                },
                {
                    "command": [
                        "intro H'1; elim H'1; auto with sets.",
                        "VernacExtend",
                        "8b16b5ad0aff3bab47be68a3d17862470833442d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Singleton_has_lub",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros x H'.",
                        "VernacExtend",
                        "1864e43355295bd98e7920f89fb20cbad05f10d7"
                    ]
                },
                {
                    "command": [
                        "apply Lub_definition.",
                        "VernacExtend",
                        "396f6aab9a0d6bd025583ba0babe98e8eccffc41"
                    ]
                },
                {
                    "command": [
                        "apply Upper_Bound_definition; auto with sets.",
                        "VernacExtend",
                        "f9382a0080cad96548f378bfbcaa373b7b309634"
                    ]
                },
                {
                    "command": [
                        "intros y H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
                    ]
                },
                {
                    "command": [
                        "intros y H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Empty_set_has_Upper_Bound",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "elim D.",
                        "VernacExtend",
                        "7a9c8d0274629badfb1f72f9abd35b916ccace25"
                    ]
                },
                {
                    "command": [
                        "intros C R cond1 cond2.",
                        "VernacExtend",
                        "69dccc6d0de110c49785ec28f7f1ce7ab5d0db43"
                    ]
                },
                {
                    "command": [
                        "elim cond1.",
                        "VernacExtend",
                        "8175029ba355569ff8f955cd9216a1ea6226c09c"
                    ]
                },
                {
                    "command": [
                        "intros x H'; exists x.",
                        "VernacExtend",
                        "a2c47c3208f4084332b3797df5bb7f65b8b76ec6"
                    ]
                },
                {
                    "command": [
                        "apply Upper_Bound_definition; auto with sets.",
                        "VernacExtend",
                        "f9382a0080cad96548f378bfbcaa373b7b309634"
                    ]
                },
                {
                    "command": [
                        "intros y H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Anyone_is_Upper_Bound_of_Empty_set",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros x H'; apply Upper_Bound_definition; auto with sets.",
                        "VernacExtend",
                        "7b6668be50eff37437a9d49257471090789af9bb"
                    ]
                },
                {
                    "command": [
                        "intros y H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "2fef4cced9da3e4f0531286c5b982eaf7468d62c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Empty_set_has_lub",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intro C; elim C; simpl in |- *.",
                        "VernacExtend",
                        "83d8f6da8f3db8020c862db50a085f112ca909f7"
                    ]
                },
                {
                    "command": [
                        "intros PO_of_cpo Cpo_cond; elim Cpo_cond; clear Cpo_cond.",
                        "VernacExtend",
                        "67280c02bbe8c74cf24927115cfbbc25a85b5443"
                    ]
                },
                {
                    "command": [
                        "intro H'; elim H'; clear H'.",
                        "VernacExtend",
                        "e5cf8111c650168f680de906389d430026e436ab"
                    ]
                },
                {
                    "command": [
                        "intros bot is_bot H'0; exists bot; simpl in |- *.",
                        "VernacExtend",
                        "4d24274626dcd6ddfed3935ef2dd55131eb062f9"
                    ]
                },
                {
                    "command": [
                        "elim is_bot; intros H' H'1.",
                        "VernacExtend",
                        "c4b051febe1b4587990429f84c88c43a871e396f"
                    ]
                },
                {
                    "command": [
                        "apply Lub_definition.",
                        "VernacExtend",
                        "396f6aab9a0d6bd025583ba0babe98e8eccffc41"
                    ]
                },
                {
                    "command": [
                        "apply Upper_Bound_definition; auto with sets.",
                        "VernacExtend",
                        "f9382a0080cad96548f378bfbcaa373b7b309634"
                    ]
                },
                {
                    "command": [
                        "intros y H'2; elim H'2; auto with sets.",
                        "VernacExtend",
                        "4e31274a909dfa53b66f5f19c6bd48dfbe5cc96a"
                    ]
                },
                {
                    "command": [
                        "intros y H'2; elim H'2; auto with sets.",
                        "VernacExtend",
                        "4e31274a909dfa53b66f5f19c6bd48dfbe5cc96a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Upper_downward_stable",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros A B0 maj H' H'0 H'1 H'2; elim H'2; auto with sets.",
                        "VernacExtend",
                        "ff57f84a072ce20fe87bee711e0ee66bcd37101e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Conditionally_complete_has_a_bottom",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intro H'; elim H'.",
                        "VernacExtend",
                        "cc9a00ee29e57d1c5ca2d83d231c585dd027983d"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim (H'0 (Empty_set U)); [ intros bsup E; elim E | idtac | idtac ]; auto with sets.",
                        "VernacExtend",
                        "2268ff07ff25ccd731a378c91c9da72c535a7463"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; exists bsup.",
                        "VernacExtend",
                        "6f6970ac44651c4c9ba9c1c72532b4483184016a"
                    ]
                },
                {
                    "command": [
                        "elim H'1; auto with sets.",
                        "VernacExtend",
                        "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bottom_is_compact",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intro H'; lapply Conditionally_complete_has_a_bottom; [ intro H'0 | try assumption ].",
                        "VernacExtend",
                        "53685211ccd6ca2d51091df098a1e390b774b115"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros bot E; clear H'0.",
                        "VernacExtend",
                        "952611fbb497fbf3188b656b56d13946e6a7eb30"
                    ]
                },
                {
                    "command": [
                        "exists bot; split; auto with sets.",
                        "VernacExtend",
                        "343f91503c16ec2b480037b46a1ac3edc1f6525a"
                    ]
                },
                {
                    "command": [
                        "apply Definition_of_compact; auto with sets.",
                        "VernacExtend",
                        "661e3df3d22b471a7afb4732bdef8b1ec411957b"
                    ]
                },
                {
                    "command": [
                        "elim E; auto with sets.",
                        "VernacExtend",
                        "881e2800c6b2449091f4dc1f2c2d1c7e02b4a89e"
                    ]
                },
                {
                    "command": [
                        "intros X H'0; elim H'0.",
                        "VernacExtend",
                        "3108338c4a72e7e8a6108052ebf28553b8089c3a"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; elim H'2.",
                        "VernacExtend",
                        "3d1d9df5414c573c1751f83c599c68fbe20b73a9"
                    ]
                },
                {
                    "command": [
                        "intros x H'3 H'4 H'5; try assumption.",
                        "VernacExtend",
                        "8d08f343a57f76c4f94136b133eba816c75cc15e"
                    ]
                },
                {
                    "command": [
                        "exists x; auto with sets.",
                        "VernacExtend",
                        "84de534c617ae30322cea69828c06843e5da7542"
                    ]
                },
                {
                    "command": [
                        "elim E; auto with sets.",
                        "VernacExtend",
                        "881e2800c6b2449091f4dc1f2c2d1c7e02b4a89e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Compact_is_in_Carrier",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros x H'; elim H'; auto with sets.",
                        "VernacExtend",
                        "100234b88089a22c7bc41c0d3c5a7caa73a7431e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Compatible_is_reflexive",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intro x; red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "8d416954a26e1bc9bb554c4dd1cf9e90f318b043"
                    ]
                },
                {
                    "command": [
                        "intros H'2 H'3; exists x.",
                        "VernacExtend",
                        "4296b342168816cffcd6013a64e6db002c758634"
                    ]
                },
                {
                    "command": [
                        "split; [ assumption | apply Upper_Bound_definition ]; auto with sets.",
                        "VernacExtend",
                        "bc86f4c4962cab97f2162206335e8f72b5c28afb"
                    ]
                },
                {
                    "command": [
                        "intros y H'; elim H'; auto with sets.",
                        "VernacExtend",
                        "f96b03161c644eb644e507f80d6a472a9dd1cfb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Couple_is_symmetric",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros x y; apply Extensionality_Ensembles; red in |- *.",
                        "VernacExtend",
                        "de4b468ec124df4c0d41ed721a7616ff600a2c5a"
                    ]
                },
                {
                    "command": [
                        "split; red in |- *; (intros x0 H'; elim H'); auto with sets.",
                        "VernacExtend",
                        "96699a4d318b3ce0aa0995a1ccafb28e5e80a60f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Compatible_is_symmetric",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "unfold Compatible in |- *.",
                        "VernacExtend",
                        "e481cd481f19ed52289b6cb2630fb88c6812c16a"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0 H'1.",
                        "VernacExtend",
                        "4c16d2c4f41f6714262c2724ba554938a9d738cd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Couple_is_symmetric x y); auto with sets.",
                        "VernacExtend",
                        "d238bd18ac296886cca64e8302a56d069355e4c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Compatible_imp_consistent",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros x y H'; red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "01ff97513ae65d38f56a9a581a48266791783697"
                    ]
                },
                {
                    "command": [
                        "intros H'0 x0 y0 H'1; try assumption.",
                        "VernacExtend",
                        "c9279d1b12c92f636fee64b390d039992c22c827"
                    ]
                },
                {
                    "command": [
                        "red in H'1.",
                        "VernacExtend",
                        "1762b5626eb887bdbedff1c64766209656ece89e"
                    ]
                },
                {
                    "command": [
                        "lapply (H'1 x0); [ intro H'3 | auto with sets ].",
                        "VernacExtend",
                        "bdd0a11673c3a20fd47b5bcac775c14d8446a585"
                    ]
                },
                {
                    "command": [
                        "lapply (H'1 y0); [ intro H'4 | auto with sets ].",
                        "VernacExtend",
                        "0363e731e05ca4268d8f958f6bca65c3dc375fda"
                    ]
                },
                {
                    "command": [
                        "elim H'4.",
                        "VernacExtend",
                        "6b9f1f9423d39545e0007ba27d262903c68547c3"
                    ]
                },
                {
                    "command": [
                        "elim H'3; auto with sets.",
                        "VernacExtend",
                        "1088e897fa78ef34eccf5c1c5e8c629ca8192165"
                    ]
                },
                {
                    "command": [
                        "elim H'3; auto with sets.",
                        "VernacExtend",
                        "1088e897fa78ef34eccf5c1c5e8c629ca8192165"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Consistent_imp_compatible",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0 H'1; red in H'1; simpl in H'1; auto with sets.",
                        "VernacExtend",
                        "7e6d6a1d79c94718c7433b1b8df555e724ff59ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Coherent_implies_Conditionally_Complete",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intro H'; red in H'.",
                        "VernacExtend",
                        "0f897e4b298cba4a4f9cc5bf5540bf8180f681c8"
                    ]
                },
                {
                    "command": [
                        "apply Definition_of_Conditionally_complete.",
                        "VernacExtend",
                        "db464e641381c427da6213882aca3570a492abdb"
                    ]
                },
                {
                    "command": [
                        "intros X H'0 H'1.",
                        "VernacExtend",
                        "6299f875099f25d69407c9c6e1f5831d56983b96"
                    ]
                },
                {
                    "command": [
                        "apply H'; auto with sets.",
                        "VernacExtend",
                        "6bba0cf77108e48efcbafad3a2d3d0e679c2cd35"
                    ]
                },
                {
                    "command": [
                        "red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "713f75622b4bcaa4944fbc549f338fab2a7169b4"
                    ]
                },
                {
                    "command": [
                        "intros H'2 x y H'3; red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "c143a854cf29882f07c409e1765196935312f6fc"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5.",
                        "VernacExtend",
                        "501c0c605d427fe6b25d01fe070d777a0598e26d"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros maj E; try exact E; clear H'1.",
                        "VernacExtend",
                        "412c2a4b196c0ada557048ba16e968c6b4d6bcc2"
                    ]
                },
                {
                    "command": [
                        "exists maj; elim E; auto with sets.",
                        "VernacExtend",
                        "864bc8ece72de9a7aef3d8624fd55211fe00dcfe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Coherent_has_a_bottom",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Coherent_implies_Complete",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intro H'.",
                        "VernacExtend",
                        "3160ba192fa58e5db60b3e67645ce925759bb788"
                    ]
                },
                {
                    "command": [
                        "apply Definition_of_Complete; auto with sets.",
                        "VernacExtend",
                        "2f377e6530281903dc0d2631798bb3a44fe633d1"
                    ]
                },
                {
                    "command": [
                        "intros X H'0; apply H'.",
                        "VernacExtend",
                        "0aece7fbd8f52639a4819a994ecaa66adaba9df6"
                    ]
                },
                {
                    "command": [
                        "elim H'0; auto with sets.",
                        "VernacExtend",
                        "60b190186c2178905164606ffc8f02a0cb3babb3"
                    ]
                },
                {
                    "command": [
                        "red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "713f75622b4bcaa4944fbc549f338fab2a7169b4"
                    ]
                },
                {
                    "command": [
                        "intros H'1 x y H'2; elim H'0.",
                        "VernacExtend",
                        "43e176b98a1ea0c4e60ad5df5d86d0711ab39635"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4 H'5; lapply (H'5 x y); [ intro H'8; elim H'8 | auto with sets ].",
                        "VernacExtend",
                        "1a23e36d66f7b0efcf38b38337d9dc4c72762e7a"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'6; red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "0680aa2bc825582adb9ab17d00d2229b2d154145"
                    ]
                },
                {
                    "command": [
                        "intros H'7 H'9; exists x0.",
                        "VernacExtend",
                        "45bd720f695c173e53b770e0816bbaf6aad7b070"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}