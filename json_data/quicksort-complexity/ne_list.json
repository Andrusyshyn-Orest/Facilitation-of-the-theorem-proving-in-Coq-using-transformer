{
    "filename": "ne_list.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Automatic Introduction.",
            "VernacUnsetOption",
            "0bdf551241b98d9f3f23abf14fca2f7a9b3ee136"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require Import util.",
            "VernacRequire",
            "4430f87d7649f96d1418f130d57967666d56d84f"
        ],
        [
            "Require vec.",
            "VernacRequire",
            "08616db8153e7c946fd3e24b96d9ac3527cab372"
        ],
        [
            "Require List.",
            "VernacRequire",
            "a1d54140926e7890ab05a709dad185ab68598100"
        ],
        [
            "Require Vector.",
            "VernacRequire",
            "145bcbe9535700f6fddf277a7fc43bb4df45a9f9"
        ],
        [
            "Section contents.",
            "VernacBeginSection",
            "64247bb134c943946794e7969d57832818b1ace7"
        ],
        [
            "Variable T: Set.",
            "VernacAssumption",
            "b25e1c55d6e167f9b32c3ec950afc0dd2590ed80"
        ],
        [
            "Inductive L: Set := one: T -> L | cons: T -> L -> L.",
            "VernacInductive",
            "8fd2749888d3a1477ec2a2baddac4537408c773a"
        ],
        [
            "Fixpoint to_plain (l: L): List.list T := match l with one x => List.cons x List.nil | cons x y => List.cons x (to_plain y) end.",
            "VernacFixpoint",
            "e8e07b09ab7bdc391fdb5bcc1592b6cd8b4b8393"
        ],
        [
            "Coercion to_plain: L >-> List.list.",
            "VernacCoercion",
            "8e14260f86ff4618e1b1252da877d14bf0a5812c"
        ],
        [
            "Fixpoint from_plain (x: T) (l: List.list T): L:= match l with | List.nil => one x | List.cons h t => cons x (from_plain h t) end.",
            "VernacFixpoint",
            "add6e93096d5dcd1f3ae8de250f7cfb8b81146cb"
        ],
        [
            "Lemma round_trip l x: (to_plain (from_plain x l)) = List.cons x l.",
            "VernacStartTheoremProof",
            "685f9a7a768774c6b5472beb389a59947cc7ea83"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl...",
            "VernacExtend",
            "a48c59a0d042c7310da6766246ef180a091c8386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint app (a b: L) {struct a}: L := match a with | one x => cons x b | cons x y => cons x (app y b) end.",
            "VernacFixpoint",
            "4874038e6671695f47d1ec33b28c3fffc951b99f"
        ],
        [
            "Variable l: L.",
            "VernacAssumption",
            "7540f335b059a9715df71cafe894efaa703f8343"
        ],
        [
            "Definition head := match l with one x => x | cons x _ => x end.",
            "VernacDefinition",
            "f3cef2b00a7d31e539c8d4ac9b809baaef135e4e"
        ],
        [
            "Definition tail := match l with one _ => List.nil | cons _ x => to_plain x end.",
            "VernacDefinition",
            "f754a07c3532164952ea164e982e79aa9eb81d66"
        ],
        [
            "Lemma head_in_self: List.In head l.",
            "VernacStartTheoremProof",
            "bdeb57c4b965992cb601b7cbc6b620da3fdd7ec8"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold head.",
            "VernacExtend",
            "9d09038322535bb2bb0d7b30f3a27c3621e2a6fc"
        ],
        [
            "destruct l; left...",
            "VernacExtend",
            "1647b4d6316a1e2a0a7852112256a014dad4ad1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_sound x: List.In x l -> (head = x \\/ List.In x tail).",
            "VernacStartTheoremProof",
            "a2317fa3d46c6adf6f8832cd89457d220a25efd1"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold head.",
            "VernacExtend",
            "9d09038322535bb2bb0d7b30f3a27c3621e2a6fc"
        ],
        [
            "unfold tail.",
            "VernacExtend",
            "ad28ba53a00eeb148248583293adcee3133afff0"
        ],
        [
            "destruct l...",
            "VernacExtend",
            "963fc99ea720efd97229633d63f4328017299f89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_cons_head (x: T) y: List.In x (cons x y).",
            "VernacStartTheoremProof",
            "4ff36d9267ba8349291c7a6491e209d8f20f2205"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_one (x: T): List.In x (one x).",
            "VernacStartTheoremProof",
            "92c0d8d4c6beae4e642a74074f4b1f0ca7477979"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coerced_cons_eq (h: T): List.cons h l = cons h l.",
            "VernacStartTheoremProof",
            "d6c74e4a13777fea6caff2a13797f6dbade85e62"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End contents.",
            "VernacEndSegment",
            "28f505b78f584feda38f14dd967d87712e3c7f31"
        ],
        [
            "Definition map (A B: Set) (f: A -> B): L A -> L B := fix r (l: L A): L B := match l with | one x => one (f x) | cons h t => cons (f h) (r t) end.",
            "VernacDefinition",
            "f9dc811d68a5c20632e0995fd77bcf5fabce7567"
        ],
        [
            "Lemma plain_map (A B: Set) (f: A -> B) (l: L A): to_plain (map f l) = List.map f (to_plain l).",
            "VernacStartTheoremProof",
            "84aaced6257b5bd8dfa0566417566bbfdc598ac2"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl...",
            "VernacExtend",
            "a48c59a0d042c7310da6766246ef180a091c8386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism (A B: Set): (@map A B) with signature (@ext_eq A B) ==> (@ext_eq (L A) (L B)) as ne_list_map_ext_eq_morph.",
            "VernacExtend",
            "391e4a19d3778afd189a1bdbfd377edf8b497a9c"
        ],
        [
            "Proof with try reflexivity.",
            "VernacProof",
            "befb56c00cf46fe151a7e47055cee5e4b8abae25"
        ],
        [
            "unfold ext_eq.",
            "VernacExtend",
            "f220f29910675d48458da615036407ad227edc9f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction x0; simpl; rewrite H...",
            "VernacExtend",
            "701b2f614559cfa98b391e084eaee4b63d93b34c"
        ],
        [
            "rewrite IHx0...",
            "VernacExtend",
            "475192ef356c405e761fc148cef0f672bce95cd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_ext (T U: Set) (f g: T -> U): ext_eq f g -> forall l, map f l = map g l.",
            "VernacStartTheoremProof",
            "a236c29279ccd422772beafe114a59d400da3875"
        ],
        [
            "intros T U f g e.",
            "VernacExtend",
            "272b9f74a4fafe03c7ed601fd42bdbd8ce6800b8"
        ],
        [
            "fold (ext_eq (map f) (map g)).",
            "VernacExtend",
            "c8dec80377e44b7807bb0f764e0057e81ac14166"
        ],
        [
            "rewrite e.",
            "VernacExtend",
            "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_map_inv (T U: Set) (f: T -> U) (l: L T) (y: U): List.In y (map f l) -> exists x, f x = y /\\ List.In x l.",
            "VernacStartTheoremProof",
            "565d4772e099fc6393531bdb17ae08d0a7e86691"
        ],
        [
            "induction l; simpl; intros; destruct H; firstorder.",
            "VernacExtend",
            "93549cfbffdfc0880aa113f36f10706b818ab4dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_ne_0 (A: Set) (l: L A): List.length l <> 0.",
            "VernacStartTheoremProof",
            "ec38679e0ff21b56df68f17d15f53b8a2807c9ff"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "destruct l; simpl...",
            "VernacExtend",
            "c0b31abb044b26537d164c01c48d6074d018120a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_length (A B: Set) (f: A -> B) (l: L A): List.length (map f l) = List.length l.",
            "VernacStartTheoremProof",
            "e39a7389ac030729be9d3673149d26c7eb8f7da6"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl...",
            "VernacExtend",
            "a48c59a0d042c7310da6766246ef180a091c8386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_map (A B C: Set) (g: A -> B) (f: B -> C) (l: L A): map f (map g l) = map (f \u2218 g) l.",
            "VernacStartTheoremProof",
            "64153f13eeb9cf8740dc566ddf50c7890648fbbe"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl...",
            "VernacExtend",
            "a48c59a0d042c7310da6766246ef180a091c8386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_round_tripped_head (T: Set) (x: T) l: List.In x (from_plain x l).",
            "VernacStartTheoremProof",
            "e55b4ab318d4a771998d939f81700cfb8c426440"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite round_trip.",
            "VernacExtend",
            "11b83d18f1afa87cb241632a1e918146282fc34d"
        ],
        [
            "left...",
            "VernacExtend",
            "bf4fd72477fff45e0940a41f06078165174dbd25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate In_one.",
            "VernacHints",
            "433ae1730d38f3fd77b4c551db54ba064e664c9e"
        ],
        [
            "Hint Immediate In_cons_head.",
            "VernacHints",
            "0380a19b40e072c86a67d5c44a9af1f5b70c4d9b"
        ],
        [
            "Hint Immediate head_in_self.",
            "VernacHints",
            "631547bdf854dbdd6b3402aa09853f5fbf9062c1"
        ],
        [
            "Hint Immediate In_round_tripped_head.",
            "VernacHints",
            "a49ef60a5f34396b92eaadd52b4b057781f7ef46"
        ],
        [
            "Fixpoint from_vec (A: Set) n: Vector.t A (S n) -> L A := match n return Vector.t A (S n) -> L A with | 0 => fun v => one (vec.head v) | _ => fun v => cons (vec.head v) (from_vec (vec.tail v)) end.",
            "VernacFixpoint",
            "2c082333b81d7531e0e08a126174a40f9b65d513"
        ],
        [
            "Lemma from_vec_to_plain (A: Set) n (v: Vector.t A (S n)): to_plain (from_vec v) = vec.to_list v.",
            "VernacStartTheoremProof",
            "c68ab4dcb0d856818163be6fb32f20fa0fbf25b4"
        ],
        [
            "Proof with reflexivity.",
            "VernacProof",
            "b55396bc4a6d77a1ea27b3f0c6ed183dde4a732e"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "rewrite (vec.eq_cons v).",
            "VernacExtend",
            "63b52474d81d5aebe80644a7f1d33c4f5126a307"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (vec.eq_nil (vec.tail v))...",
            "VernacExtend",
            "2bf2e8f8630d3a133ce9ba4d82bf6f92208daac7"
        ],
        [
            "rewrite (vec.eq_cons v).",
            "VernacExtend",
            "63b52474d81d5aebe80644a7f1d33c4f5126a307"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHn...",
            "VernacExtend",
            "5bbea74dccbe63df8d1a9cf9eeda87a8e807eb93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "In_cons_head",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_one",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coerced_cons_eq",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_ext",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros T U f g e.",
                        "VernacExtend",
                        "272b9f74a4fafe03c7ed601fd42bdbd8ce6800b8"
                    ]
                },
                {
                    "command": [
                        "fold (ext_eq (map f) (map g)).",
                        "VernacExtend",
                        "c8dec80377e44b7807bb0f764e0057e81ac14166"
                    ]
                },
                {
                    "command": [
                        "rewrite e.",
                        "VernacExtend",
                        "1896cbdbda80ea761a6be423aaedd9d6b23173b0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_map_inv",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; intros; destruct H; firstorder.",
                        "VernacExtend",
                        "93549cfbffdfc0880aa113f36f10706b818ab4dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}