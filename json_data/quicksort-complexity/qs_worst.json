{
    "filename": "qs_worst.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Le.",
            "VernacRequire",
            "838bfe0aac98b4a25730898d79830c3f8329aec1"
        ],
        [
            "Require Import Lt.",
            "VernacRequire",
            "fe47d80ebda42c5f075a36fb67288742f8593767"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Require Import util.",
            "VernacRequire",
            "4430f87d7649f96d1418f130d57967666d56d84f"
        ],
        [
            "Require Import arith_lems.",
            "VernacRequire",
            "c122d8f93731b561f73c879ca58fed05abd59dc7"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import monads.",
            "VernacRequire",
            "5b2fd91685e0255ced6df1c87a652a12b8990a39"
        ],
        [
            "Require Import monoid_monad_trans.",
            "VernacRequire",
            "4bb2bf1c803b5281d50c61057d2ecff387723de8"
        ],
        [
            "Require Import qs_definitions.",
            "VernacRequire",
            "ad54b6c56ee43242a2a1ecf79bb8d876c5b9aac3"
        ],
        [
            "Import mon_det.",
            "VernacImport",
            "23ff09119d923a7e5560b0045cb6a4723893714e"
        ],
        [
            "Require fix_measure_utils.",
            "VernacRequire",
            "116fc920cc11f96768057e00a4c45b5e9201f622"
        ],
        [
            "Set Shrink Obligations.",
            "VernacSetOption",
            "f7395d097ae8a78c5b6d9d34117b07c84fe0d248"
        ],
        [
            "Variables (T: Set) (cmp: T -> T -> bool).",
            "VernacAssumption",
            "f808dc23344d9f80ae6fd6e5b798de63389fbe81"
        ],
        [
            "Definition counted_cmp (x y: T): SimplyProfiled bool := (1, cmp x y).",
            "VernacDefinition",
            "b716569f16046dd5de917dd5058d3c6bc4471fa3"
        ],
        [
            "Lemma filter_cost (p: T -> SimplyProfiled bool): (forall t, cost (p t) = 1) -> forall (l: list T), cost (filter _ p l) = length l.",
            "VernacStartTheoremProof",
            "fbba645345f2bb963dd2510a69de565e62ec1a29"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "intros pd.",
            "VernacExtend",
            "5016100ae73c2b767a3ecb66d0564689134187fc"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (filter SimplyProfiled p l)...",
            "VernacExtend",
            "1e9d7b51790fdf1ece0de20d1403d29f6f1ca6a8"
        ],
        [
            "destruct s...",
            "VernacExtend",
            "283ad889af69c63258888e88ee4983c57a84edb6"
        ],
        [
            "set (pd a).",
            "VernacExtend",
            "65fd94c7ba8c93a69b4628e713fb269572d0b907"
        ],
        [
            "clearbody e.",
            "VernacExtend",
            "3423d3130faadb6bdd2273eb2d46600b9cfd1dec"
        ],
        [
            "destruct (p a)...",
            "VernacExtend",
            "3dfdde9bdd56b69f3d9c1021932ed61296e8639b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_filtering (T: Set) (p q: T -> SimplyProfiled bool) (ex: forall x, result (p x) = false \\/ result (q x) = false) (l: list T): length (proj1_sig (result (filter SimplyProfiled p l))) + length (proj1_sig (result (filter SimplyProfiled q l))) <= length l.",
            "VernacStartTheoremProof",
            "3034f88b9b39b630f6bc92494fe96737c71dc670"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (filter SimplyProfiled p l).",
            "VernacExtend",
            "8e1aad3b1654e5350ff6f6c0c38aed6aa522f8c7"
        ],
        [
            "destruct (filter SimplyProfiled q l).",
            "VernacExtend",
            "621c782220552ead3546bf50bdf17198e1a55be6"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "destruct s0.",
            "VernacExtend",
            "e20d501942dc13e6f574502b72447872d76f1750"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct (ex a); [destruct (p a) | destruct (q a)]; simpl in H; subst; simpl; [destruct (q a) | destruct (p a)]; destruct b; simpl; omega.",
            "VernacExtend",
            "2657a7c6572d525b31401fc0903c3a7381d3b34f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma counted_cmp_excl (n x: T): result (counted_cmp n x) = false \\/ result (gt _ counted_cmp n x) = false.",
            "VernacStartTheoremProof",
            "9129db473c7afb42fb37800bc62f5a82fd5ea26a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (cmp n x); auto.",
            "VernacExtend",
            "52225d1b95f26a78d7ed4c566e89b8435aa234f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma common_arith (n n3 n0 n1 n2: nat) (l0: n3 + n0 <= n) (p: n1 <= sqrd n3) (p0: n2 <= sqrd n0): n + n2 + n + n1 <= sqrd n + n + n + 1.",
            "VernacStartTheoremProof",
            "2dbaab1567ee3fc6ea0aefb31f550647c831c5fb"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_trans with (n2 + n1 + (n + n)); try omega.",
            "VernacExtend",
            "f4a4031c0a4c235823c50702d1984a28ab01ee20"
        ],
        [
            "apply le_trans with (sqrd n + 1 + (n + n)); try omega.",
            "VernacExtend",
            "2c10b8611dd6182d642d6f775f60363df6d5a997"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "deep_le_trans p...",
            "VernacExtend",
            "b07b87fb291eaae9d912631c4123e4487c916fee"
        ],
        [
            "deep_le_trans p0...",
            "VernacExtend",
            "c8b30c350e44af6ecd80ab01f29e13aea03660cf"
        ],
        [
            "rewrite plus_comm in l0.",
            "VernacExtend",
            "ab798a5cecfe731a29c3de4d04b3dfa1e8a0c1c4"
        ],
        [
            "apply le_trans with (sqrd (n0 + n3))...",
            "VernacExtend",
            "3779270ecdc7b22b6bf124ff5f4956ce729f8937"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bind_eqq (M: Monad) (e: extMonad M) (A B: Set) (m n: M A) (f g: A -> M B): m = n -> ext_eq f g -> (m >>= f) = (n >>= g).",
            "VernacStartTheoremProof",
            "bfdba08cac58a52e72b2217f2650b9b2a92a3d09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply e.",
            "VernacExtend",
            "7e471e9a67d7e270fc9d49b2286b43a098cffb1d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve SimplyProfiled_ext.",
            "VernacHints",
            "d4a7c929453e2558e21b057569f2f99e9bbe8ee4"
        ],
        [
            "Definition qs_body (l: list T) (qs0: {l': list T | length l' < length l} -> SimplyProfiled (list T)) := match l as l1 return (l1 = l -> SimplyProfiled (list T)) with | nil => fun _ => ret (m:=SimplyProfiled) nil | pivot :: t => fun Heq_l => lower <- x <- filter SimplyProfiled (gt SimplyProfiled counted_cmp pivot) t; qs0 (exist _ (proj1_sig x) (qs_definitions.mon_det.qs_obligation_1 SimplyProfiled (fun l H => qs0 (exist _ l H)) Heq_l x)); upper <- x <- filter SimplyProfiled (counted_cmp pivot) t; qs0 (exist _ (proj1_sig x) (qs_definitions.mon_det.qs_obligation_2 SimplyProfiled (fun l H => qs0 (exist _ l H)) Heq_l x)); ret (m:=SimplyProfiled) (lower ++ pivot :: upper) end refl_equal.",
            "VernacDefinition",
            "600d36060611179f317367f7c926696fbdc4741b"
        ],
        [
            "Theorem qs_quadratic (l: list T): cost (qs counted_cmp l) <= sqrd (length l).",
            "VernacStartTheoremProof",
            "cee5329e4e984deedc617023791ebcd02f736634"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (P := fun (l: list T) (r: SimplyProfiled (list T)) => cost r <= sqrd (length l)).",
            "VernacExtend",
            "9607e314f9853ac046e52ab6aeb2dd8f5c41bc55"
        ],
        [
            "cut (P l (qs counted_cmp l))...",
            "VernacExtend",
            "0a96c8c7afcd7a17be3bc9e1b34b373f331b9237"
        ],
        [
            "unfold qs.",
            "VernacExtend",
            "aabcf467b0395ceb912b170818dbe9294fc93177"
        ],
        [
            "fold qs_body.",
            "VernacExtend",
            "d6747b57f8339775346b4e19b39eb24f64a2776b"
        ],
        [
            "apply fix_measure_utils.rect; subst P; intros.",
            "VernacExtend",
            "d86eff94e600906fd547e3d7bb1aec70ef3cad2f"
        ],
        [
            "unfold qs_body.",
            "VernacExtend",
            "ba19d6950099662192128f2e19a3f9bd1f25c9fa"
        ],
        [
            "destruct x0...",
            "VernacExtend",
            "3dc81ee3f6f61c6a091f66e987026c21574e3040"
        ],
        [
            "repeat (try apply bind_eqq; try intro; auto).",
            "VernacExtend",
            "69a67be6104b669b943dae3c798eb0dcd7842fa8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold qs_body.",
            "VernacExtend",
            "ba19d6950099662192128f2e19a3f9bd1f25c9fa"
        ],
        [
            "simpl proj1_sig.",
            "VernacExtend",
            "5f96d4f17b719de67e5d7478228e33dba85bb4de"
        ],
        [
            "destruct x...",
            "VernacExtend",
            "7765274004a21ba6bfb7c6c03b9ce172306d36ac"
        ],
        [
            "repeat rewrite bind_cost.",
            "VernacExtend",
            "eb289ba8fdef57a2e0f75aefad6142ab7098c5eb"
        ],
        [
            "repeat rewrite return_cost.",
            "VernacExtend",
            "6a29eab8e60a2281338d5acb16c191d1ef26568b"
        ],
        [
            "repeat rewrite filter_cost...",
            "VernacExtend",
            "2c069d4713a1d61c108c26632815ea0d2c4d9bfa"
        ],
        [
            "fold qs_body.",
            "VernacExtend",
            "d6747b57f8339775346b4e19b39eb24f64a2776b"
        ],
        [
            "cset (exclusive_filtering (counted_cmp t) (gt SimplyProfiled counted_cmp t) (counted_cmp_excl t) x).",
            "VernacExtend",
            "c819045e9af2ad847cd8948f40594684e36af4c0"
        ],
        [
            "destruct (result (filter SimplyProfiled (gt SimplyProfiled counted_cmp t) x)).",
            "VernacExtend",
            "ff0682e10632e9d165b09c7852fcc454b3e2cd2e"
        ],
        [
            "destruct (result (filter SimplyProfiled (counted_cmp t) x)).",
            "VernacExtend",
            "a55c463f5c22d3e5b21102152148ed4aeb8ad027"
        ],
        [
            "simpl proj1_sig in *.",
            "VernacExtend",
            "000d74198644fd4aeb7b4a36997c4759798ce121"
        ],
        [
            "assert (fix_measure_utils.MR lt (fun l: list T => length l) x0 (t :: x)).",
            "VernacExtend",
            "eb5e0323e34b79c143ce3c36d036d5f795dcd959"
        ],
        [
            "unfold fix_measure_utils.MR.",
            "VernacExtend",
            "637d598533cd4a5989e78347452d91834f49a57c"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "assert (fix_measure_utils.MR lt (fun l: list T => length l) x1 (t :: x)).",
            "VernacExtend",
            "fae5a0b67e9ad570b1a249b270ed85ed3e3b2012"
        ],
        [
            "unfold fix_measure_utils.MR.",
            "VernacExtend",
            "637d598533cd4a5989e78347452d91834f49a57c"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "unfold SimplyProfiled in H.",
            "VernacExtend",
            "651a7be470f88e235cc0ae5b2830a9ebf5a0e9ed"
        ],
        [
            "simpl mon in H.",
            "VernacExtend",
            "b8914170d722769609616875fd1052a7dcfad06e"
        ],
        [
            "deep_le_trans (H x0 H1)...",
            "VernacExtend",
            "577e331fe3de617764045e3829a4ab98c9623aa3"
        ],
        [
            "deep_le_trans (H x1 H2)...",
            "VernacExtend",
            "877d9066dad2b0df0389033010ee617058bca54a"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite sqrd_S.",
            "VernacExtend",
            "55c59f043b5762eb1a3a1921ad5656792601c4c4"
        ],
        [
            "autorewrite with arith_norm.",
            "VernacExtend",
            "e10b7649e48c49025e3a49c47d5325ef438b3e26"
        ],
        [
            "apply common_arith with (length x1) (length x0)...",
            "VernacExtend",
            "fa728c7774729d68518cbb3879a45a504c1f6d6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "counted_cmp_excl",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (cmp n x); auto.",
                        "VernacExtend",
                        "52225d1b95f26a78d7ed4c566e89b8435aa234f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bind_eqq",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply e.",
                        "VernacExtend",
                        "7e471e9a67d7e270fc9d49b2286b43a098cffb1d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}