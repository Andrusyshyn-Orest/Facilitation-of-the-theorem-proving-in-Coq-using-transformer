{
    "filename": "expec.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import util.",
            "VernacRequire",
            "4430f87d7649f96d1418f130d57967666d56d84f"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import monads.",
            "VernacRequire",
            "5b2fd91685e0255ced6df1c87a652a12b8990a39"
        ],
        [
            "Require Import sums_and_averages.",
            "VernacRequire",
            "446558af055a369398fd661d2b300c36d92b3eb6"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require ne_tree.",
            "VernacRequire",
            "56a1799f91a38d50e7c9aa278eaa1444ac8d8ba5"
        ],
        [
            "Require arith_lems.",
            "VernacRequire",
            "44a660faca538fbc0168028f884015a059aa2ded"
        ],
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require ne_tree_monad.",
            "VernacRequire",
            "3ef29c4b69e7e3bdc2f752c7bce1bce86d9cb8f2"
        ],
        [
            "Open Scope R_scope.",
            "VernacOpenCloseScope",
            "e9e2b017da79049aff27c5418fe22258c29a75e7"
        ],
        [
            "Definition expec (T: Set) (f: T -> nat): ne_tree.T T -> R := TRavg \u2218 ne_tree.map (INR \u2218 f).",
            "VernacDefinition",
            "b4c1e39d20346d1218a714856548a6f21f47c6d2"
        ],
        [
            "Definition expec_sum (T U: Set) (f: U -> nat) (g: T -> ne_tree_monad.M U): list T -> R := Rsum \u2218 map (expec f \u2218 g).",
            "VernacDefinition",
            "5b5d7edb1b2d25c3e58deb09bf2a435424fa0ad4"
        ],
        [
            "Section expec_ctors.",
            "VernacBeginSection",
            "f487135201c1360044a13a3c55d9fd9ecef1c832"
        ],
        [
            "Variables (T: Set) (f: T -> nat).",
            "VernacAssumption",
            "7074705c21157f8f5d4e88d77379701b2e3c8a7a"
        ],
        [
            "Lemma expec_Leaf t: expec f (ne_tree.Leaf t) = INR (f t).",
            "VernacStartTheoremProof",
            "ee2d9d23b691f6a624ae0cd7b96328433e5e656f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_Node l: expec f (ne_tree.Node l) = Ravg (ne_list.map (@expec _ f) l).",
            "VernacStartTheoremProof",
            "d5c360389d74ab46056035b815f112fa5f784273"
        ],
        [
            "unfold expec, compose.",
            "VernacExtend",
            "3c7436d4e08fd4300c99decd3211753598ed2a77"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite ne_list.map_map.",
            "VernacExtend",
            "ddf48628e25707617d370af1fe670083651e7a84"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_Node_one x: expec f (ne_tree.Node (ne_list.one x)) = expec f x.",
            "VernacStartTheoremProof",
            "2780fac8c0ec6ca14751525145e323c7ed55b7ce"
        ],
        [
            "unfold expec, compose.",
            "VernacExtend",
            "3c7436d4e08fd4300c99decd3211753598ed2a77"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Ravg_one.",
            "VernacExtend",
            "b5c79e1a43c65d55471b4784f0d6d2cc73a292c4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_Node_cons x t: expec f (ne_tree.Node (ne_list.cons x t)) = (expec f x + expec f (ne_tree.Node t) * INR (length t)) * / INR (S (length t)).",
            "VernacStartTheoremProof",
            "63d35dd6d80bbd8636ccedd694d79eb8b89d42bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite expec_Node.",
            "VernacExtend",
            "0d1591bde411dea29c85526cce64aa2c816112da"
        ],
        [
            "simpl ne_list.map.",
            "VernacExtend",
            "b45284c3f8a9d36e8cc54a8dd5bddc940109e99f"
        ],
        [
            "simpl Ravg.",
            "VernacExtend",
            "7b727c6e65d42f82b74c1473dbe061f4e57db24b"
        ],
        [
            "rewrite Ravg_cons.",
            "VernacExtend",
            "76b3d2a91da1eb5c99e6633eb50b150af5b2957e"
        ],
        [
            "rewrite expec_Node.",
            "VernacExtend",
            "0d1591bde411dea29c85526cce64aa2c816112da"
        ],
        [
            "rewrite ne_list.map_length.",
            "VernacExtend",
            "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End expec_ctors.",
            "VernacEndSegment",
            "14c65d186f41d67edf6fc410beb632cb84a518fe"
        ],
        [
            "Add Parametric Morphism (A: Set): (@expec A) with signature (@ext_eq A nat) ==> (@ext_eq (ne_tree.T A) R) as expec_ext_morph.",
            "VernacExtend",
            "bc0b3a1c4f8ddebf91d0f61318e4319a4dcbe00b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold expec.",
            "VernacExtend",
            "4f1aef80434c2c178b447be40975605154c99658"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_ext (T: Set) (f g: T -> nat) (e: ext_eq f g): forall x, expec f x = expec g x.",
            "VernacStartTheoremProof",
            "a4b638ff68a0365ce02232724b04396f0c975d8e"
        ],
        [
            "fold (ext_eq (expec f) (expec g)).",
            "VernacExtend",
            "8bef63c77416a80165a4671187fec0f5d8126cb9"
        ],
        [
            "apply expec_ext_morph.",
            "VernacExtend",
            "c0d8e9244825eb4664fb2966b5369af19021265b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_nat c d: ext_eq (TRavg \u2218 ne_tree.map (INR \u2218 plus d \u2218 mult c)) (Rplus (INR d) \u2218 Rmult (INR c) \u2218 TRavg \u2218 ne_tree.map INR).",
            "VernacStartTheoremProof",
            "8020f2a29968366c8850fd61f92ddb157904f686"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction x.",
            "VernacExtend",
            "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
        ],
        [
            "repeat rewrite comp_apply.",
            "VernacExtend",
            "851d08f86d28707e40d58f6a373ee3678aaad833"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat rewrite comp_apply.",
            "VernacExtend",
            "851d08f86d28707e40d58f6a373ee3678aaad833"
        ],
        [
            "rewrite plus_INR.",
            "VernacExtend",
            "2e4c0763333eeb3aa5e0a79157bf56b2b48eca46"
        ],
        [
            "rewrite mult_INR.",
            "VernacExtend",
            "37e645386446b650721bdbf87c469ec7ef739f19"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "repeat rewrite comp_apply in *.",
            "VernacExtend",
            "c4fb1a1a97183ea881f9d53e26328bd801048cd0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "repeat rewrite Ravg_one.",
            "VernacExtend",
            "26ca0ae29e1a150ed04344c051d96b887c3b4213"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "repeat rewrite comp_apply in *.",
            "VernacExtend",
            "c4fb1a1a97183ea881f9d53e26328bd801048cd0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "inversion IHx0.",
            "VernacExtend",
            "53b9b316a8413fc0694f9a68d66d7b2925c00a20"
        ],
        [
            "repeat rewrite ne_list.map_map in *.",
            "VernacExtend",
            "9978bd59c32fdba102009a3f35281af7924f36c9"
        ],
        [
            "repeat rewrite Ravg_cons.",
            "VernacExtend",
            "fc14878b8b4a878342a7b0c315ebb1e28e250d1d"
        ],
        [
            "rewrite ne_list.map_length.",
            "VernacExtend",
            "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite ne_list.map_length.",
            "VernacExtend",
            "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmult_INR1_id: ext_eq (Rmult (INR 1)) (@id R).",
            "VernacStartTheoremProof",
            "cc27559d292d4c4ce5359ae555e5190bb5686f84"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply Rmult_1_l.",
            "VernacExtend",
            "959b7f02068b29f8617e378fce47501de4230f61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_1_id: ext_eq (mult 1) (@id nat).",
            "VernacStartTheoremProof",
            "cc809dc8d72a07b4e8e8d978987929877f10e551"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply mult_1_l.",
            "VernacExtend",
            "9c1a6594df43ab2dd9e60b8a8d124e345af60d74"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_plus_c (T: Set) (g: T -> nat) (c: nat): ext_eq (expec (plus c \u2218 g)) (Rplus (INR c) \u2218 expec g).",
            "VernacStartTheoremProof",
            "8b01633c83522a12f07d91d252374fc683a49170"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold expec.",
            "VernacExtend",
            "4f1aef80434c2c178b447be40975605154c99658"
        ],
        [
            "rewrite comp_ass.",
            "VernacExtend",
            "5fba2c672730e7bd93d3a496819293f3d7324d84"
        ],
        [
            "rewrite <- ne_tree.map_map_ext.",
            "VernacExtend",
            "769f6e40757da5b00e34bb9c6fa26b70e8a4c375"
        ],
        [
            "rewrite <- (compose_runit (INR \u2218 plus c)).",
            "VernacExtend",
            "fc9659d6fb51ef7184dc876ffc437cf36a097fb2"
        ],
        [
            "rewrite <- mult_1_id.",
            "VernacExtend",
            "333eef8250bc3a604be31679a24aa1e3eacd0f37"
        ],
        [
            "rewrite comp_ass.",
            "VernacExtend",
            "5fba2c672730e7bd93d3a496819293f3d7324d84"
        ],
        [
            "rewrite lin_nat.",
            "VernacExtend",
            "41768a08a0dbf52a8ecb232b4637c0b7c3612b08"
        ],
        [
            "rewrite <- comp_ass.",
            "VernacExtend",
            "a9cab35935b7b8765f8791a8843002b4487a3c80"
        ],
        [
            "rewrite ne_tree.map_map_ext.",
            "VernacExtend",
            "5d853fcc8e5092838996552b8875eabfb76d64fd"
        ],
        [
            "rewrite Rmult_INR1_id.",
            "VernacExtend",
            "1738d21080a3687f72a54e7b99623b2e675b50ff"
        ],
        [
            "rewrite compose_runit.",
            "VernacExtend",
            "5bdbcd645430396629320838e02e6e5a8baa73e6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_plus (T: Set) (f g: T -> nat) (t: ne_tree.T T): expec (fun x => plus (f x) (g x)) t = expec f t + expec g t.",
            "VernacStartTheoremProof",
            "ae935733f41a68c7ea3a4d0f7a2b9a228a6c5d0c"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction t.",
            "VernacExtend",
            "9d2b9ae883a32c20cdf5f2573034eb3b116aff53"
        ],
        [
            "repeat rewrite expec_Leaf.",
            "VernacExtend",
            "31db459f2fba983ed519ee25b97ef8e411d9717c"
        ],
        [
            "apply plus_INR.",
            "VernacExtend",
            "bd10639bbc34a074d2bf621cc6a01832a1dbbff4"
        ],
        [
            "repeat rewrite expec_Node_one...",
            "VernacExtend",
            "954a6b2c1386017642a62a1e3cd8abc93b66bcbe"
        ],
        [
            "repeat rewrite expec_Node_cons.",
            "VernacExtend",
            "1a41c254c96a21cd249259a80f226dec041eb1c7"
        ],
        [
            "rewrite IHt.",
            "VernacExtend",
            "d7c6a10da1c3b93e6cd1b076977ec06f52b9b586"
        ],
        [
            "rewrite IHt0.",
            "VernacExtend",
            "6c4e824f96296512a78316e523b833cc199248e5"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_map (T U: Set) (g: T -> U) (f: U -> nat) (t: ne_tree.T T): expec f (ne_tree.map g t) = expec (f \u2218 g) t.",
            "VernacStartTheoremProof",
            "556d1f871d9aa416851dbebd74b13cb94d76eccb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold expec.",
            "VernacExtend",
            "4f1aef80434c2c178b447be40975605154c99658"
        ],
        [
            "repeat rewrite comp_apply.",
            "VernacExtend",
            "851d08f86d28707e40d58f6a373ee3678aaad833"
        ],
        [
            "rewrite ne_tree.map_map.",
            "VernacExtend",
            "7356872da4b5547f64c78e0263e2dd63ecb9f953"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_nonneg (T: Set) (m: ne_tree_monad.M T) (f: T -> nat): 0 <= expec f m.",
            "VernacStartTheoremProof",
            "b7174380c2040b02910171a90176c4c3e538e8b4"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "induction m; intros.",
            "VernacExtend",
            "ad78c67d3a9216bd0cba3419d43201d461ab0fe9"
        ],
        [
            "rewrite expec_Leaf...",
            "VernacExtend",
            "9dfdaf689fa4a8a1a220f8d9b5a09c3da552f9f7"
        ],
        [
            "rewrite expec_Node_one...",
            "VernacExtend",
            "75fba5af49b61323b85000729a2a92f2de1e14b5"
        ],
        [
            "rewrite expec_Node_cons.",
            "VernacExtend",
            "40491e652c1d331a4d79a136bd0958e9445bcaef"
        ],
        [
            "apply Rmult_le_pos...",
            "VernacExtend",
            "fd8a4178d7d82a7609f57447a3103fa62378e2c7"
        ],
        [
            "apply Rplus_le_le_0_compat...",
            "VernacExtend",
            "dd7c90ecace0c6e4cb92d9df82f3bf784ce331bb"
        ],
        [
            "apply Rmult_le_pos...",
            "VernacExtend",
            "fd8a4178d7d82a7609f57447a3103fa62378e2c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve expec_nonneg.",
            "VernacHints",
            "643a4ffeb35565822dd6adef6afd076499b1d2d6"
        ],
        [
            "Lemma expec_le (X: Set) (f g: X -> nat) (t: ne_tree.T X): (forall x, ne_tree.In x t -> (f x <= g x)%nat) -> expec f t <= expec g t.",
            "VernacStartTheoremProof",
            "1979bd5381df5daca0d1a1324a238e83a1cec48f"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "induction t; intros.",
            "VernacExtend",
            "29d141c7d24363a440fe20b554cbd786a16c9bf3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat rewrite expec_Leaf...",
            "VernacExtend",
            "72e814a495ed450336f7abb9bf389fee334ffe47"
        ],
        [
            "repeat rewrite expec_Node_one...",
            "VernacExtend",
            "954a6b2c1386017642a62a1e3cd8abc93b66bcbe"
        ],
        [
            "repeat rewrite expec_Node_cons.",
            "VernacExtend",
            "1a41c254c96a21cd249259a80f226dec041eb1c7"
        ],
        [
            "apply Rmult_le_compat_r...",
            "VernacExtend",
            "69469355e60d3938752942beea3213ae6eece6b4"
        ],
        [
            "apply Rplus_le_compat...",
            "VernacExtend",
            "08f694187194014bdb3bd1f10a02f932456a6986"
        ],
        [
            "apply Rmult_le_compat_r...",
            "VernacExtend",
            "69469355e60d3938752942beea3213ae6eece6b4"
        ],
        [
            "apply IHt0.",
            "VernacExtend",
            "cc869fbfb1999ac2e25c1aed1c8fe26f451022b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "inversion_clear H0...",
            "VernacExtend",
            "b903ed9556822431d6a4482f1b3e8ca20896fdd5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_0_inv (T: Set) (f: T -> nat) (t: ne_tree.T T): expec f t = 0 -> forall x, ne_tree.In x t -> f x = 0%nat.",
            "VernacStartTheoremProof",
            "17dcd61004b5ccbfe2433a54cb0d46808c07b600"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "induction t.",
            "VernacExtend",
            "9d2b9ae883a32c20cdf5f2573034eb3b116aff53"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "apply arith_lems.INR_0_inv...",
            "VernacExtend",
            "9e1d5779e43b5663a6444457744a2a185043fb5e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite expec_Node_one.",
            "VernacExtend",
            "640e2058f1b36fbe4a2d66cc9b291dfb587ea9ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "inversion_clear H1...",
            "VernacExtend",
            "daf2ba2f42c9f4b484982f30e63b9e05659d2b99"
        ],
        [
            "rewrite expec_Node_cons.",
            "VernacExtend",
            "40491e652c1d331a4d79a136bd0958e9445bcaef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "destruct (arith_lems.Rmult_0_inv H).",
            "VernacExtend",
            "d70348e3c888dfd59be15d4d864e05b8774990c9"
        ],
        [
            "assert (expec f t = 0).",
            "VernacExtend",
            "3e808382c98d8b5e54e417d52e4e415b43495d2e"
        ],
        [
            "apply Rplus_eq_0_l with (expec f (ne_tree.Node l) * INR (length l))...",
            "VernacExtend",
            "e9db8c4fa30d3393d98ecb8f54e941559f8e40e1"
        ],
        [
            "apply Rmult_le_pos...",
            "VernacExtend",
            "fd8a4178d7d82a7609f57447a3103fa62378e2c7"
        ],
        [
            "assert (expec f (ne_tree.Node l) = 0).",
            "VernacExtend",
            "ad07ae92c4ae229ebadf45121c2c84f1d9bcc40d"
        ],
        [
            "rewrite Rplus_comm in H0.",
            "VernacExtend",
            "62cf0619468652fb820630c7cecb7134de962d55"
        ],
        [
            "cut (expec f (ne_tree.Node l) * INR (length l) = 0).",
            "VernacExtend",
            "695eee63e3565a85729d139dd44aa8e84cf9e811"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (arith_lems.Rmult_0_inv H3)...",
            "VernacExtend",
            "4b3c166f028254bbd3b160ad4daac074ce2d60d3"
        ],
        [
            "cset (arith_lems.INR_0_inv _ H4).",
            "VernacExtend",
            "7878b11715c8b9be65ba5eb9520e1bca33a57aa0"
        ],
        [
            "destruct l; discriminate.",
            "VernacExtend",
            "a095a1c2bb2291eed1d2d1b56e5ba17a77ed3f7d"
        ],
        [
            "apply Rplus_eq_0_l with (expec f t)...",
            "VernacExtend",
            "4ce9b07130676c1eb01dd4283c505e2a0f676188"
        ],
        [
            "apply Rmult_le_pos...",
            "VernacExtend",
            "fd8a4178d7d82a7609f57447a3103fa62378e2c7"
        ],
        [
            "inversion_clear H1...",
            "VernacExtend",
            "daf2ba2f42c9f4b484982f30e63b9e05659d2b99"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply (Rinv_neq_0_compat (INR (S (length l))))...",
            "VernacExtend",
            "2efc22e8bd51eb126655f5a5fd973e89ccfcd656"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_constant (T: Set) (f: T -> nat) (c: nat) (t: ne_tree_monad.M T): (forall x, ne_tree.In x t -> f x = c) -> expec f t = INR c.",
            "VernacStartTheoremProof",
            "6eeed8c6800023cf820c3af69e1212fe5278fb83"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "induction t.",
            "VernacExtend",
            "9d2b9ae883a32c20cdf5f2573034eb3b116aff53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite expec_Leaf...",
            "VernacExtend",
            "9dfdaf689fa4a8a1a220f8d9b5a09c3da552f9f7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite expec_Node_one...",
            "VernacExtend",
            "75fba5af49b61323b85000729a2a92f2de1e14b5"
        ],
        [
            "rewrite expec_Node_cons.",
            "VernacExtend",
            "40491e652c1d331a4d79a136bd0958e9445bcaef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHt...",
            "VernacExtend",
            "6f79f88113cede7543b3b2cfd8b5336534ae3337"
        ],
        [
            "rewrite IHt0.",
            "VernacExtend",
            "6c4e824f96296512a78316e523b833cc199248e5"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "inversion_clear H0...",
            "VernacExtend",
            "b903ed9556822431d6a4482f1b3e8ca20896fdd5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section bind_expecs.",
            "VernacBeginSection",
            "2703323fa68ddbbe00cfbbe78f22854cf2093f6f"
        ],
        [
            "Variables (T U: Set) (f: T -> nat).",
            "VernacAssumption",
            "85bc7d9f5e90196096f0402b8b79d715222370f9"
        ],
        [
            "Lemma expec_bind_leaf (g: U -> T) (m: ne_tree_monad.M U): expec f (m >>= (ne_tree_monad.ret \u2218 g)) = expec (f \u2218 g) m.",
            "VernacStartTheoremProof",
            "f184d7996069fc09ffdbade8d482214a4f9d868a"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction m...",
            "VernacExtend",
            "7976564363e4fb2c1eb959e320f407ccbf3fd10d"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "repeat rewrite expec_Node_one...",
            "VernacExtend",
            "954a6b2c1386017642a62a1e3cd8abc93b66bcbe"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "repeat rewrite expec_Node_cons.",
            "VernacExtend",
            "1a41c254c96a21cd249259a80f226dec041eb1c7"
        ],
        [
            "rewrite IHm.",
            "VernacExtend",
            "bf73c511f9e37493a929521561a4b35798c2f374"
        ],
        [
            "rewrite IHm0.",
            "VernacExtend",
            "e279c24c3a0e628a2c9656261ab1b9a46436050d"
        ],
        [
            "repeat rewrite ne_list.map_length...",
            "VernacExtend",
            "4e686dea690e21f0d7548c0b1ed95993d70e255c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expec_bind_cons (x: ne_tree_monad.M U) t (g: U -> ne_tree_monad.M T): expec f (@bind ne_tree_monad.M _ _ (ne_tree.Node (ne_list.cons x t)) g) = (expec f (x >>= g) + expec f (@bind ne_tree_monad.M _ _ (ne_tree.Node t) g) * INR (length t)) * / INR (S (length t)).",
            "VernacStartTheoremProof",
            "5dd8c554b06f0ae4a19b71f7b094b6298364e847"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl expec.",
            "VernacExtend",
            "814ffc1107428445e7ec919621e37027e46c9c7b"
        ],
        [
            "rewrite expec_Node_cons.",
            "VernacExtend",
            "40491e652c1d331a4d79a136bd0958e9445bcaef"
        ],
        [
            "repeat rewrite ne_list.map_length.",
            "VernacExtend",
            "a55499c90d2fd758964b4657a1b17d592b6d42d3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End bind_expecs.",
            "VernacEndSegment",
            "0130cf7d8b95a2d8d22110a44fe423eb59a9e5b4"
        ]
    ],
    "proofs": [
        {
            "name": "expec_Leaf",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_Node",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold expec, compose.",
                        "VernacExtend",
                        "3c7436d4e08fd4300c99decd3211753598ed2a77"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_list.map_map.",
                        "VernacExtend",
                        "ddf48628e25707617d370af1fe670083651e7a84"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_Node_one",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "unfold expec, compose.",
                        "VernacExtend",
                        "3c7436d4e08fd4300c99decd3211753598ed2a77"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ravg_one.",
                        "VernacExtend",
                        "b5c79e1a43c65d55471b4784f0d6d2cc73a292c4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_Node_cons",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite expec_Node.",
                        "VernacExtend",
                        "0d1591bde411dea29c85526cce64aa2c816112da"
                    ]
                },
                {
                    "command": [
                        "simpl ne_list.map.",
                        "VernacExtend",
                        "b45284c3f8a9d36e8cc54a8dd5bddc940109e99f"
                    ]
                },
                {
                    "command": [
                        "simpl Ravg.",
                        "VernacExtend",
                        "7b727c6e65d42f82b74c1473dbe061f4e57db24b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ravg_cons.",
                        "VernacExtend",
                        "76b3d2a91da1eb5c99e6633eb50b150af5b2957e"
                    ]
                },
                {
                    "command": [
                        "rewrite expec_Node.",
                        "VernacExtend",
                        "0d1591bde411dea29c85526cce64aa2c816112da"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_list.map_length.",
                        "VernacExtend",
                        "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_ext_morph_Proper",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold expec.",
                        "VernacExtend",
                        "4f1aef80434c2c178b447be40975605154c99658"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_ext",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "fold (ext_eq (expec f) (expec g)).",
                        "VernacExtend",
                        "8bef63c77416a80165a4671187fec0f5d8126cb9"
                    ]
                },
                {
                    "command": [
                        "apply expec_ext_morph.",
                        "VernacExtend",
                        "c0d8e9244825eb4664fb2966b5369af19021265b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lin_nat",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction x.",
                        "VernacExtend",
                        "8d91f99bf5ea35862c5721d2308df13dc2f7aeed"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite comp_apply.",
                        "VernacExtend",
                        "851d08f86d28707e40d58f6a373ee3678aaad833"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite comp_apply.",
                        "VernacExtend",
                        "851d08f86d28707e40d58f6a373ee3678aaad833"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_INR.",
                        "VernacExtend",
                        "2e4c0763333eeb3aa5e0a79157bf56b2b48eca46"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_INR.",
                        "VernacExtend",
                        "37e645386446b650721bdbf87c469ec7ef739f19"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite comp_apply in *.",
                        "VernacExtend",
                        "c4fb1a1a97183ea881f9d53e26328bd801048cd0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Ravg_one.",
                        "VernacExtend",
                        "26ca0ae29e1a150ed04344c051d96b887c3b4213"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite comp_apply in *.",
                        "VernacExtend",
                        "c4fb1a1a97183ea881f9d53e26328bd801048cd0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "inversion IHx0.",
                        "VernacExtend",
                        "53b9b316a8413fc0694f9a68d66d7b2925c00a20"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite ne_list.map_map in *.",
                        "VernacExtend",
                        "9978bd59c32fdba102009a3f35281af7924f36c9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Ravg_cons.",
                        "VernacExtend",
                        "fc14878b8b4a878342a7b0c315ebb1e28e250d1d"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_list.map_length.",
                        "VernacExtend",
                        "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_list.map_length.",
                        "VernacExtend",
                        "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR.",
                        "VernacExtend",
                        "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_INR1_id",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_1_l.",
                        "VernacExtend",
                        "959b7f02068b29f8617e378fce47501de4230f61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_1_id",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply mult_1_l.",
                        "VernacExtend",
                        "9c1a6594df43ab2dd9e60b8a8d124e345af60d74"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_plus_c",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold expec.",
                        "VernacExtend",
                        "4f1aef80434c2c178b447be40975605154c99658"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_ass.",
                        "VernacExtend",
                        "5fba2c672730e7bd93d3a496819293f3d7324d84"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ne_tree.map_map_ext.",
                        "VernacExtend",
                        "769f6e40757da5b00e34bb9c6fa26b70e8a4c375"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (compose_runit (INR \u2218 plus c)).",
                        "VernacExtend",
                        "fc9659d6fb51ef7184dc876ffc437cf36a097fb2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_1_id.",
                        "VernacExtend",
                        "333eef8250bc3a604be31679a24aa1e3eacd0f37"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_ass.",
                        "VernacExtend",
                        "5fba2c672730e7bd93d3a496819293f3d7324d84"
                    ]
                },
                {
                    "command": [
                        "rewrite lin_nat.",
                        "VernacExtend",
                        "41768a08a0dbf52a8ecb232b4637c0b7c3612b08"
                    ]
                },
                {
                    "command": [
                        "rewrite <- comp_ass.",
                        "VernacExtend",
                        "a9cab35935b7b8765f8791a8843002b4487a3c80"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_tree.map_map_ext.",
                        "VernacExtend",
                        "5d853fcc8e5092838996552b8875eabfb76d64fd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_INR1_id.",
                        "VernacExtend",
                        "1738d21080a3687f72a54e7b99623b2e675b50ff"
                    ]
                },
                {
                    "command": [
                        "rewrite compose_runit.",
                        "VernacExtend",
                        "5bdbcd645430396629320838e02e6e5a8baa73e6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_map",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold expec.",
                        "VernacExtend",
                        "4f1aef80434c2c178b447be40975605154c99658"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite comp_apply.",
                        "VernacExtend",
                        "851d08f86d28707e40d58f6a373ee3678aaad833"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_tree.map_map.",
                        "VernacExtend",
                        "7356872da4b5547f64c78e0263e2dd63ecb9f953"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expec_bind_cons",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl expec.",
                        "VernacExtend",
                        "814ffc1107428445e7ec919621e37027e46c9c7b"
                    ]
                },
                {
                    "command": [
                        "rewrite expec_Node_cons.",
                        "VernacExtend",
                        "40491e652c1d331a4d79a136bd0958e9445bcaef"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite ne_list.map_length.",
                        "VernacExtend",
                        "a55499c90d2fd758964b4657a1b17d592b6d42d3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}