{
    "filename": "vec.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Global Set Automatic Coercions Import.",
            "VernacSetOption",
            "94c85307196a35bac6e1f82fcbcc4d98c9b268b2"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Require Import nat_below.",
            "VernacRequire",
            "5fd79b191289e7e9092d80072ab4925e292a74b4"
        ],
        [
            "Require Import util.",
            "VernacRequire",
            "4430f87d7649f96d1418f130d57967666d56d84f"
        ],
        [
            "Require Import list_utils.",
            "VernacRequire",
            "f5ce54076a68b3ca9f48d4de158eadf0961b9e1f"
        ],
        [
            "Require Import Le.",
            "VernacRequire",
            "838bfe0aac98b4a25730898d79830c3f8329aec1"
        ],
        [
            "Require Import Plus.",
            "VernacRequire",
            "a18284a3c28ae9356bfc5084ee8540c5d50631e5"
        ],
        [
            "Require Import Lt.",
            "VernacRequire",
            "fe47d80ebda42c5f075a36fb67288742f8593767"
        ],
        [
            "Require Import arith_lems.",
            "VernacRequire",
            "c122d8f93731b561f73c879ca58fed05abd59dc7"
        ],
        [
            "Require Vector.",
            "VernacRequire",
            "145bcbe9535700f6fddf277a7fc43bb4df45a9f9"
        ],
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require List.",
            "VernacRequire",
            "a1d54140926e7890ab05a709dad185ab68598100"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Arguments Vector.cons [A] _ [n].",
            "VernacArguments",
            "9256a6332e1d2ceffa10f06ad607cea5b939c977"
        ],
        [
            "Arguments Vector.nil [A].",
            "VernacArguments",
            "2f5d87f6f3a924cbf231afe1c6bb373ec4648480"
        ],
        [
            "Definition head A n (v: Vector.t A (S n)): A := match v with | Vector.nil => I | Vector.cons h _ _ => h end.",
            "VernacDefinition",
            "d860e0a0cc4d3325cc8795e573cae607f71bc6c6"
        ],
        [
            "Definition tail n A (v: Vector.t A (S n)): Vector.t A n := match v with | Vector.nil => I | Vector.cons _ _ t => t end.",
            "VernacDefinition",
            "63610366e98a8e09df58534edee28b9237ca2035"
        ],
        [
            "Lemma eq_nil A (v: Vector.t A 0): v = Vector.nil.",
            "VernacStartTheoremProof",
            "028980f000f3bced174c63765b9e3841a1238b41"
        ],
        [
            "cut (forall n (v: Vector.t A n), match n return Vector.t A n -> Prop with 0 => fun v => v = Vector.nil | _ => fun _ => True end v).",
            "VernacExtend",
            "115155f930146e0bd7afb36824db1130c27a8a83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H 0 v).",
            "VernacExtend",
            "01964791df0892730d5a6706b2f361bdb837c0d5"
        ],
        [
            "clear v; destruct v; auto.",
            "VernacExtend",
            "1279b733a4ea02e93d52c9bb7c9ed5da85b4d9e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_cons A n (v: Vector.t A (S n)): v = Vector.cons (head v) (tail v).",
            "VernacStartTheoremProof",
            "32411e2e3f5aac0f969ee7664765b1b070abb804"
        ],
        [
            "cut (forall n (v: Vector.t A n), match n return Vector.t A n -> Prop with | 0 => fun _ => True | S m' => fun w => w = Vector.cons (head w) (tail w) end v).",
            "VernacExtend",
            "c92cbf7389df73cabc24583b5475b36d7109908d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (S n) v).",
            "VernacExtend",
            "ab67e1fa854ad9bb8d59f0b5a9d8b202bba54b6f"
        ],
        [
            "clear v; destruct v; auto.",
            "VernacExtend",
            "1279b733a4ea02e93d52c9bb7c9ed5da85b4d9e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Vcons_eq A (h h': A) n (t t': Vector.t A n): h = h' -> t = t' -> Vector.cons h t = Vector.cons h' t'.",
            "VernacStartTheoremProof",
            "b65b2a1ed5552d934f36cd2c6ad83d92680dba78"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Vcons_eq_inv A (h h': A) n (t t': Vector.t A n): Vector.cons h t = Vector.cons h' t' -> h = h' /\\ t = t'.",
            "VernacStartTheoremProof",
            "8fd3edb6d68898d5234b0def541990a04627f6d3"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "replace h with (head (Vector.cons h t))...",
            "VernacExtend",
            "c38ebd684a211c7b87dfa1556fdd2eacd5a7ba93"
        ],
        [
            "replace h' with (head (Vector.cons h' t'))...",
            "VernacExtend",
            "6f7f06260e2b3ea6e4e39b39e989f93f5f188d2b"
        ],
        [
            "rewrite H...",
            "VernacExtend",
            "2ded38871f6ef5ae4e687aa3245494ae541f7202"
        ],
        [
            "replace t with (tail (Vector.cons h t))...",
            "VernacExtend",
            "e4595bd621eddb6720bc3352027b04caea98f499"
        ],
        [
            "replace t' with (tail (Vector.cons h' t'))...",
            "VernacExtend",
            "612c9e6081155f7a257a9ea40cebc09e9c8a6885"
        ],
        [
            "rewrite H...",
            "VernacExtend",
            "2ded38871f6ef5ae4e687aa3245494ae541f7202"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint to_list X (n: nat) (v: Vector.t X n) {struct v}: List.list X := match v with | Vector.nil => List.nil | Vector.cons x _ v' => List.cons x (to_list v') end.",
            "VernacFixpoint",
            "737e3cac1de59294c0a5e86b9e678d4d0d857fbe"
        ],
        [
            "Fixpoint from_list A (l: List.list A): Vector.t A (List.length l) := match l return Vector.t A (List.length l) with | List.nil => Vector.nil | List.cons h t => Vector.cons h (from_list t) end.",
            "VernacFixpoint",
            "ce6c82875a34f45d3c9f77c69188f2e371e892c4"
        ],
        [
            "Coercion to_list: Vector.t >-> List.list.",
            "VernacCoercion",
            "635f297e77e27727f886b0113ba20a6cf09ab54e"
        ],
        [
            "Coercion from_list: List.list >-> Vector.t.",
            "VernacCoercion",
            "183d30d3332d44bbdf5c16a84b1c6a0f753ef937"
        ],
        [
            "Lemma list_round_trip A (l: List.list A): to_list (from_list l) = l.",
            "VernacStartTheoremProof",
            "16ea610c358884e5010cb67e298aa9c075f7ffeb"
        ],
        [
            "Proof with try reflexivity.",
            "VernacProof",
            "befb56c00cf46fe151a7e47055cee5e4b8abae25"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHl...",
            "VernacExtend",
            "a48c59a0d042c7310da6766246ef180a091c8386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vec_round_trip (X T: Set) (n : nat) (v : Vector.t X n) (f: forall n, Vector.t X n -> T): (f _ (from_list (to_list v))) = f _ v.",
            "VernacStartTheoremProof",
            "253d50c9d6494900eaccabbe3f3309bc1c42ad6b"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "revert f.",
            "VernacExtend",
            "c97f81cbc07fdc8c49875e2ee7958808979dddbc"
        ],
        [
            "induction v...",
            "VernacExtend",
            "913c8d030ea5c4eb4c93cb5fbc3d86b80a72aa3c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (IHv (fun (m: nat) (w: Vector.t X m) => f (S m) (Vector.cons h w))).",
            "VernacExtend",
            "ecdf4d5aa1dd4b93b285ef5dc35f626fd0dc215c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_as_lists X n (x y: Vector.t X n): to_list x = to_list y -> x = y.",
            "VernacStartTheoremProof",
            "80e823eea30fb2ea141affdbfedca53f85ec223a"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "rewrite (eq_nil x), (eq_nil y)...",
            "VernacExtend",
            "113704027f30c8527af95fc1274658093a4b24a4"
        ],
        [
            "rewrite (eq_cons x), (eq_cons y) in *...",
            "VernacExtend",
            "e95db4f0b471f17fe5471d2ea800d7f8261ac992"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "rewrite (IHn (tail x) (tail y))...",
            "VernacExtend",
            "03661692acca6831b4e0358aba371c8a1c6517f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_list A (l: List.list A) (v: Vector.t A (List.length l)): from_list l = v -> l = to_list v.",
            "VernacStartTheoremProof",
            "8e5b5e4decff5ef84a6d737a8f2009104e52ed2b"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "rewrite (eq_nil v)...",
            "VernacExtend",
            "5bbb7455a63104cc99e0daca806dc71f0a3050e2"
        ],
        [
            "rewrite <- H...",
            "VernacExtend",
            "7ab9cc9592538ff27b883cb1847c23639e95cf63"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite list_round_trip...",
            "VernacExtend",
            "44b59f6c312c0ac4b1e1aae2995009c447b6fcb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma double_rect A B (P: forall n, Vector.t A n -> Vector.t B n -> Prop): P 0 Vector.nil Vector.nil -> (forall n (v: Vector.t A n) (w: Vector.t B n) (x: A) (y: B), P n v w -> P (S n) (Vector.cons x v) (Vector.cons y w)) -> forall n (v: Vector.t A n) (w: Vector.t B n), P n v w.",
            "VernacStartTheoremProof",
            "fc24571e4780b0d29b78d0e240ca44b95d30bd21"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "rewrite (eq_nil v).",
            "VernacExtend",
            "98b4c1d11c2e101bba84e963978ecd5b124b208f"
        ],
        [
            "rewrite (eq_nil w).",
            "VernacExtend",
            "15446758740863112d87d7c99de4f74fd5e2cc3f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "rewrite (eq_cons w).",
            "VernacExtend",
            "ae6e52e0e858cf391bcecc18e51ce2e48ab49136"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length A n (l: Vector.t A n): List.length l = n.",
            "VernacStartTheoremProof",
            "abd193721158f897bf3e25e033c95c9733fe04f8"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply eq_S...",
            "VernacExtend",
            "7294e45c4793835fc09ed826fd1ba0adae7955fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint app A n: Vector.t A n -> forall m, Vector.t A m -> Vector.t A (n + m) := match n return Vector.t A n -> forall m, Vector.t A m -> Vector.t A (n + m) with | 0 => fun _ _ w => w | S n' => fun v _ w => Vector.cons (head v) (app (tail v) w) end.",
            "VernacFixpoint",
            "62009316172a5eadea32e87e9fa7054097354582"
        ],
        [
            "Fixpoint map X Y (f: X -> Y) (n: nat) (v: Vector.t X n): Vector.t Y n := match v with | Vector.nil => @Vector.nil Y | Vector.cons h _ t => Vector.cons (f h) (map f t) end.",
            "VernacFixpoint",
            "68b9a2c9e0ae2deea9257d9a6057890b3cfd3558"
        ],
        [
            "Lemma map_map X Y Z (f: X -> Y) (g: Y -> Z) (n: nat) (v: Vector.t X n): map g (map f v) = map (g \u2218 f) v.",
            "VernacStartTheoremProof",
            "4de2b50b6da43c1a40da77bb71718819eeaf9d69"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v...",
            "VernacExtend",
            "913c8d030ea5c4eb4c93cb5fbc3d86b80a72aa3c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHv...",
            "VernacExtend",
            "2ace5d05c6fe1c43e53fcdd3f00cc601bd1b7014"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_ext X Y (f g: X -> Y) (e: ext_eq f g) (n: nat) (v: Vector.t X n): map f v = map g v.",
            "VernacStartTheoremProof",
            "e483729839e31ae5d1d289e89d0612242533a304"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v...",
            "VernacExtend",
            "913c8d030ea5c4eb4c93cb5fbc3d86b80a72aa3c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHv.",
            "VernacExtend",
            "d570bae52c78555f17eecb129b7bf9ea398c0157"
        ],
        [
            "rewrite (e h)...",
            "VernacExtend",
            "14055628f63fdcbb3ffcd6619991919adc67994b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_map A B (f: A -> B) (a: A) n (v: Vector.t A n): List.In a v -> List.In (f a) (map f v).",
            "VernacStartTheoremProof",
            "cc805268073093283eab8b24cf54d544c372d221"
        ],
        [
            "induction v; intros; inversion_clear H; [left; subst | right]; auto.",
            "VernacExtend",
            "1857ae89f00743ba8a9f8632125e3dbb4cc597e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma List_map A B n (l: Vector.t A n) (f: A -> B): List.map f l = to_list (map f l).",
            "VernacStartTheoremProof",
            "30fd411ec7e342b928a2432d2d52bbace6dff21f"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHl...",
            "VernacExtend",
            "a48c59a0d042c7310da6766246ef180a091c8386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natBelow0_rect: natBelow 0 -> forall T, T.",
            "VernacStartTheoremProof",
            "278937c2b8a3793fc6c214c711d82e6ff34a67fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nof (n: nat) (_: natBelow n): nat := n.",
            "VernacDefinition",
            "1167f94a3d5c1138c891ce4c619a65ffc3172f04"
        ],
        [
            "Section mine.",
            "VernacBeginSection",
            "8b1ea01321f5e070eeeaeae3fc98f9279404c604"
        ],
        [
            "Variable P: forall n: nat, natBelow n -> Type.",
            "VernacAssumption",
            "4967444c5789c4bca534d1b6af522880b58e0a4e"
        ],
        [
            "Variable Pz: forall p, P (mkNatBelow 0 p).",
            "VernacAssumption",
            "8f22a8b8fe4e141a0e852a27b20b2a47ebcf3651"
        ],
        [
            "Variable Ps: forall v p, P (mkNatBelow v p) -> P (mkNatBelow (S v) p).",
            "VernacAssumption",
            "ef75ebe3f76a1bef34f6d77eecf65449555d5bd8"
        ],
        [
            "Fixpoint natBelow_rect (n: nat): forall nb: natBelow n, P nb := match n with | 0 => fun nb => natBelow0_rect nb _ | S x => fun nb => match nb return (forall nb: natBelow (pred (nof nb)), P nb) -> P nb with | mkNatBelow 0 y => fun _ => Pz y | mkNatBelow (S z) y => fun U => Ps (U (mkNatBelow z y)) end (@natBelow_rect x) end.",
            "VernacFixpoint",
            "9ed7e8a42d6e32932c12b5ddb071ea22bf4dcc86"
        ],
        [
            "End mine.",
            "VernacEndSegment",
            "7918de969a61d60234d4fb0bc28735b80263c288"
        ],
        [
            "Section another.",
            "VernacBeginSection",
            "f7977791f5f7304eaee59ad621e75a99bc27c877"
        ],
        [
            "Variable P: forall n: nat, natBelow (S n) -> Type.",
            "VernacAssumption",
            "015dc3529bcaf902f26b2fd06a35cac4ea936a8f"
        ],
        [
            "Variable Pz: forall p, P (mkNatBelow 0 p).",
            "VernacAssumption",
            "8f22a8b8fe4e141a0e852a27b20b2a47ebcf3651"
        ],
        [
            "Variable Ps: forall v p, P (mkNatBelow v p) -> P (mkNatBelow (S v) p).",
            "VernacAssumption",
            "ef75ebe3f76a1bef34f6d77eecf65449555d5bd8"
        ],
        [
            "Definition R (n: nat): natBelow n -> Type := match n with | 0 => fun _ => False | S _ => @P _ end.",
            "VernacDefinition",
            "0fb98c109b4398fd41e355e80058a68f0e46a7fb"
        ],
        [
            "Definition natBelow_rect_S (n: nat) (nb: natBelow (S n)): P nb := natBelow_rect R Pz Ps nb.",
            "VernacDefinition",
            "1cf08674786877bb54ce454e9a3b63fa673488d0"
        ],
        [
            "End another.",
            "VernacEndSegment",
            "6a9e8a4efc8937bc390663a7a77a9dd5433eb4b0"
        ],
        [
            "Lemma val_Snb n (x: natBelow n): nb_val (Snb x) = S (nb_val x).",
            "VernacStartTheoremProof",
            "7759e99d8b6039ee006be1bdd1446f3754533a67"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma val_nb0 n: nb_val (nb0 n) = 0.",
            "VernacStartTheoremProof",
            "2408f264a1f23c8b0513fefe77e70bb60a839879"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natBelow_S_inv (n: nat) (nb: natBelow (S n)): { nb': natBelow n | nb = Snb nb' } + { nb = nb0 n }.",
            "VernacStartTheoremProof",
            "cedc7eaa8d05fdac375fe1a90ffd49c462ca6dff"
        ],
        [
            "Proof with reflexivity.",
            "VernacProof",
            "b55396bc4a6d77a1ea27b3f0c6ed183dde4a732e"
        ],
        [
            "pattern n, nb.",
            "VernacExtend",
            "15701186bc5fd7eff9c6723fd3686600dbb2a159"
        ],
        [
            "apply natBelow_rect_S.",
            "VernacExtend",
            "284d66a32bf0c8571339a255015dda0f69ff0d30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "right...",
            "VernacExtend",
            "812b278b3530fdc8b155b846f3e666d427661a31"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "exists (Snb x).",
            "VernacExtend",
            "9c4f3af804172344b9cd72c03446fa5a95bc4ffd"
        ],
        [
            "rewrite <- e...",
            "VernacExtend",
            "64fe4561124f994803c089c17f17299db876b945"
        ],
        [
            "exists (nb0 (v + p)).",
            "VernacExtend",
            "3605efde84259ccb2745bb991caaee91de88319f"
        ],
        [
            "rewrite <- e...",
            "VernacExtend",
            "64fe4561124f994803c089c17f17299db876b945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition natBelow_S_bla (T: Type) (n: nat) (b: natBelow n): T -> (natBelow (pred n) -> T) -> T := match b with | mkNatBelow 0 _ => fun z s => z | mkNatBelow (S i) p => fun z s => s (mkNatBelow i p) end.",
            "VernacDefinition",
            "7cbb6040636ec59945563f6c5d9fe3313d380df6"
        ],
        [
            "Lemma natBelow_S_inv' (n: nat) (P: natBelow (S n) -> Type): P (nb0 n) -> (forall m, P (Snb m)) -> forall x, P x.",
            "VernacStartTheoremProof",
            "395bcbb3dcb8015b599cf6182fa83c7a784f6701"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (natBelow_S_inv x); [destruct s | idtac]; subst; auto.",
            "VernacExtend",
            "7343acf7d1f2c1af6c643ff36e462fc27c83c5f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint nth X (n: nat) (v: Vector.t X n): natBelow n -> X := match v with | Vector.nil => fun nb => natBelow0_rect nb _ | Vector.cons h k t => fun nb => natBelow_S_bla nb h (nth t) end.",
            "VernacFixpoint",
            "fc438c035e3334cfa92d48277ba45c26c888e35a"
        ],
        [
            "Lemma nth_0 A n (v: Vector.t A (S n)): nth v (nb0 n) = head v.",
            "VernacStartTheoremProof",
            "f48df320991ee0029ad26dbb901ee411239deeb8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_S A p (v: Vector.t A (S p)) (n: natBelow p): nth v (Snb n) = nth (tail v) n.",
            "VernacStartTheoremProof",
            "18d1cd16cea64e0752e82ef05f1c94d8a51832e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Snb.",
            "VernacExtend",
            "d904aab2f25db251ff71bd53bf766c78779be20b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_map A B (f: A -> B) n i (v: Vector.t A n): nth (map f v) i = f (nth v i).",
            "VernacStartTheoremProof",
            "81f3b24253ec0ad902bb1ad9772686ddd06cfebd"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v.",
            "VernacExtend",
            "10789bb90c6621e796afae189b61bc10f356257b"
        ],
        [
            "inversion i.",
            "VernacExtend",
            "a3f584c98e30d334d7b2a213b0bc86256be4e275"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (natBelow_S_inv i).",
            "VernacExtend",
            "d2d9a21f6225cb85b5f741f8d1366325f876ec0a"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold natBelow_S_bla.",
            "VernacExtend",
            "cc9f01b7c8e9d85cc466783f10d43c773cb6d265"
        ],
        [
            "unfold Snb.",
            "VernacExtend",
            "d904aab2f25db251ff71bd53bf766c78779be20b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "apply IHv.",
            "VernacExtend",
            "0dae00d5dde5e574b7de958cbe94857f3cff2b9d"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nb1 (n: natBelow 1): n = mkNatBelow 0 0.",
            "VernacStartTheoremProof",
            "9707936baee12166783de9e2ddbfa6a2ab2fa205"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "dependent simple inversion n.",
            "VernacExtend",
            "33a5789b98e85f3acce5a3b9936b5b3176c9b03c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_nth A n (x y: Vector.t A n): ext_eq (nth x) (nth y) -> x = y.",
            "VernacStartTheoremProof",
            "fe8f3254396528709d86160446d2d667191c3366"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "revert n x y.",
            "VernacExtend",
            "3ddf74b1fd22f1effe0a467f7a4901db54601732"
        ],
        [
            "apply (double_rect (fun n (x y: Vector.t A n) => ext_eq (nth x) (nth y) -> x = y))...",
            "VernacExtend",
            "201eba964b6ca0f77e570ca43f34a355a28098c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cset (H0 (nb0 n)).",
            "VernacExtend",
            "4891f69fae29d907d9cac22c8324e9532ed6ef54"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite H...",
            "VernacExtend",
            "2ded38871f6ef5ae4e687aa3245494ae541f7202"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cset (H0 (Snb x)).",
            "VernacExtend",
            "d497d80b290dfa5390019fbea02575b6b30ded80"
        ],
        [
            "repeat rewrite nth_S in H1...",
            "VernacExtend",
            "7dd505a5980a95929eecc232bc5e47681b8431fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nth A n i (v: Vector.t A n): List.In (nth v i) v.",
            "VernacStartTheoremProof",
            "d358a73b5c9612d086a114c65b03fc1c7492e696"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction i using natBelow_rect in v |- *.",
            "VernacExtend",
            "0d365b79079bde29f32923cc5be97c5a046a3959"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl head.",
            "VernacExtend",
            "4655efa2fe37e982dfe211b61ec66ac82641fafe"
        ],
        [
            "left...",
            "VernacExtend",
            "bf4fd72477fff45e0940a41f06078165174dbd25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "simpl plus.",
            "VernacExtend",
            "302d59ec058a7878cc820c70eda2d0fdedc9da24"
        ],
        [
            "fold (Snb (mkNatBelow v0 p)).",
            "VernacExtend",
            "5c5ceb1e67a47cbc8acd902946a7a348cbf8aa64"
        ],
        [
            "rewrite nth_S...",
            "VernacExtend",
            "94fe391e8da82092f125421f689b5acc28addf4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_list_app A n (v: Vector.t A n) m (w: Vector.t A m): to_list (app v w) = List.app (to_list v) (to_list w).",
            "VernacStartTheoremProof",
            "37f6be55d79b604109329b8175b0f58750e72427"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_nil v)...",
            "VernacExtend",
            "5bbb7455a63104cc99e0daca806dc71f0a3050e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHn...",
            "VernacExtend",
            "5bbea74dccbe63df8d1a9cf9eeda87a8e807eb93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_vec_inv A a n (v: Vector.t A n): List.In a v -> exists i, a = nth v i.",
            "VernacStartTheoremProof",
            "698ba16e1f184c7f93931d2ff7eed221d226299b"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v.",
            "VernacExtend",
            "10789bb90c6621e796afae189b61bc10f356257b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "exists (nb0 n).",
            "VernacExtend",
            "559966eb72309e61545c08f78a120a1c811bb1d5"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "destruct (IHv H0).",
            "VernacExtend",
            "6fbfbfbf5d0453a294d1e10520a3a5562fb4a43e"
        ],
        [
            "exists (Snb x).",
            "VernacExtend",
            "9c4f3af804172344b9cd72c03446fa5a95bc4ffd"
        ],
        [
            "rewrite nth_S...",
            "VernacExtend",
            "94fe391e8da82092f125421f689b5acc28addf4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nb_val_eq_rec_r (k u: nat) (n: natBelow u) (h: k = u): nb_val (eq_rec_r natBelow n h) = nb_val n.",
            "VernacStartTheoremProof",
            "458ccbf35bc7e343ffe9407c990ee865294627f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eq_rec_r, eq_rec, eq_rect.",
            "VernacExtend",
            "8d852d3702656b2ea638339a4c388b8b6df1a648"
        ],
        [
            "case (sym_eq h).",
            "VernacExtend",
            "5cce7d0d069643df4b43db2b480c355d9447d1bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint take A n: forall m, Vector.t A (n + m) -> Vector.t A n := match n return forall m, Vector.t A (n + m) -> Vector.t A n with | 0 => fun _ _ => Vector.nil | S n' => fun m v => Vector.cons (head v) (take n' m (tail v)) end.",
            "VernacFixpoint",
            "0cf5da00145be62afcaf3a416e6d8058f0f29a09"
        ],
        [
            "Fixpoint drop A n: forall m, Vector.t A (n + m) -> Vector.t A m := match n return forall m, Vector.t A (n + m) -> Vector.t A m with | 0 => fun m v => v | S n' => fun m v => drop n' m (tail v) end.",
            "VernacFixpoint",
            "0a843dfa05909af25986e7fce43f7597b4ca8cf8"
        ],
        [
            "Lemma split A n m (v: Vector.t A (n + m)): v = app (take n m v) (drop n m v).",
            "VernacStartTheoremProof",
            "2ec9ff8e640a8eccbf3c2c998e2678a3dc3a1177"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n...",
            "VernacExtend",
            "f4e91834ebe52b029dc733006b913e328c979eda"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- IHn.",
            "VernacExtend",
            "3c5a36386bd293ffdd7a599d133f731aebc8cfae"
        ],
        [
            "apply eq_cons.",
            "VernacExtend",
            "e9221ed3481c417995176c5c74d3474e8587d1ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_app_inv A n m (a b: Vector.t A n) (c d: Vector.t A m): app a c = app b d -> a = b /\\ c = d.",
            "VernacStartTheoremProof",
            "af905fe9667cdead3cb66fc464b9b02b29f09659"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n in m, a, b, c, d |- *; simpl; intros.",
            "VernacExtend",
            "821d0d7c6a93cb3db336ad26604efc4b27d9a751"
        ],
        [
            "rewrite (eq_nil a).",
            "VernacExtend",
            "278d81cb55ae9293de2862ef319d0d4e3b7748b0"
        ],
        [
            "rewrite (eq_nil b)...",
            "VernacExtend",
            "8b26b94b3e09ef89cd3f2001ed96225ed7d6e2eb"
        ],
        [
            "destruct (Vcons_eq_inv H).",
            "VernacExtend",
            "20a3212765ef7256e8d4c1685bd22b3cbfd56ebd"
        ],
        [
            "destruct (IHn _ _ _ _ _ H1).",
            "VernacExtend",
            "7bfb196744f90397e7f1ab0ac2d114ed73c2da67"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "rewrite (eq_cons a).",
            "VernacExtend",
            "5988ebeb25b751cfbc7be35b864b9834717312e9"
        ],
        [
            "rewrite (eq_cons b).",
            "VernacExtend",
            "2160f98aa84b091d263cc56d902eacd0f3a62d96"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H2...",
            "VernacExtend",
            "59a3b8ab9c5b741031bf1d6dfb13a5676578ac33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition remove (T: Set) (n: nat) (v: Vector.t T (S n)) (nb: natBelow (S n)): Vector.t T n := natBelow_rect_S (fun (n0: nat) (_: natBelow (S n0)) => Vector.t T (S n0) -> Vector.t T n0) (fun p => @tail p _) (fun v p H v0 => Vector.cons (head v0) (H (tail v0))) nb v.",
            "VernacDefinition",
            "e6ad129e7c7f71747a7bc0990380caf27b9c4a2e"
        ],
        [
            "Inductive Permutation (A: Type): forall n, Vector.t A n -> Vector.t A n -> Prop := | perm_nil: Permutation Vector.nil Vector.nil | perm_skip (x: A) n (v v': Vector.t A n): Permutation v v' -> Permutation (Vector.cons x v) (Vector.cons x v') | perm_swap (x y: A) n (l: Vector.t A n): Permutation (Vector.cons y (Vector.cons x l)) (Vector.cons x (Vector.cons y l)) | perm_trans n (l l' l'': Vector.t A n): Permutation l l' -> Permutation l' l'' -> Permutation l l''.",
            "VernacInductive",
            "557226b492612fe4a818f1728a75d856a64b5051"
        ],
        [
            "Hint Resolve perm_nil.",
            "VernacHints",
            "5040b44ffcb2511200c3134850c6405aa101c293"
        ],
        [
            "Hint Resolve perm_skip.",
            "VernacHints",
            "7dfabcb97a26b1774788964cc4fbf0a5ee4db49c"
        ],
        [
            "Hint Resolve perm_swap.",
            "VernacHints",
            "b082b758b3ce1ea25bdae7127a4954cf2ce18381"
        ],
        [
            "Lemma perm_sym (X: Set) n (a b: Vector.t X n): Permutation a b -> Permutation b a.",
            "VernacStartTheoremProof",
            "f525f7b7e3c2266531467298001f8c3496fff55b"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros p.",
            "VernacExtend",
            "223e3cb70cff95972873720780e7195aeb57b9fc"
        ],
        [
            "induction p...",
            "VernacExtend",
            "1d72bd7770f473a1109e4d5001b995ac0dc4550c"
        ],
        [
            "apply perm_trans with l'...",
            "VernacExtend",
            "168afe6913b1cecf183dc8a36ff5da8700dde4e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_refl (X: Set) n (v: Vector.t X n): Permutation v v.",
            "VernacStartTheoremProof",
            "dd1c423b96bc24282c1b18b273f4c00cf8fa1947"
        ],
        [
            "induction v; auto.",
            "VernacExtend",
            "ad1a0edbe8a7ccbfd807818e177cbf69a5fea1da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma List_Permutation (X: Set) n (a b: Vector.t X n): Permutation a b -> Permutation.Permutation a b.",
            "VernacStartTheoremProof",
            "7fd120a63bdba2695f79b3585b4063a29eeed744"
        ],
        [
            "Proof with eauto.",
            "VernacProof",
            "12721c224a5e1fa232c2328aabfe1f5101d235c4"
        ],
        [
            "intros p.",
            "VernacExtend",
            "223e3cb70cff95972873720780e7195aeb57b9fc"
        ],
        [
            "induction p; simpl...",
            "VernacExtend",
            "afeb3aafbacdb9c04f3a5af426eff8419a6cc529"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_head (T: Set) p (v: Vector.t T (S p)): remove v (mkNatBelow 0 p) = tail v.",
            "VernacStartTheoremProof",
            "5a392547185761b9d74665f91bfc5810dd585e04"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_tail (T: Set) n p (v: Vector.t T (S (S (n + p)))): remove v (mkNatBelow (S n) p) = Vector.cons (head v) (remove (tail v) (mkNatBelow n p)).",
            "VernacStartTheoremProof",
            "c43d6d4921fd675ec36be56eba4249ffaf217deb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_remove (T: Set) x n (i: natBelow (S n)) (v: Vector.t T (S n)): List.In x v -> x <> nth v i -> List.In x (remove v i).",
            "VernacStartTheoremProof",
            "9b230723a3d8221694a11935452e0d7817982c3d"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "revert v.",
            "VernacExtend",
            "55aebda61020e9d48822205f777e478cfdb94d83"
        ],
        [
            "pattern n, i.",
            "VernacExtend",
            "27d3c9dc25b31f0b1231e70ba759f3743968cc2b"
        ],
        [
            "apply natBelow_rect_S.",
            "VernacExtend",
            "284d66a32bf0c8571339a255015dda0f69ff0d30"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite remove_head.",
            "VernacExtend",
            "4e261d9427e417e686c0176a18e662ef1f9ef20e"
        ],
        [
            "rewrite (eq_cons v) in H.",
            "VernacExtend",
            "9f0068cefe6189e44c9b1be18f775d3628b87737"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct H...",
            "VernacExtend",
            "07d3b094cbf32e945f8f7934d026122a9dcda325"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "fold (nb0 p).",
            "VernacExtend",
            "0a40ddb70b01a8c2b464db9be6fb15d4a865a517"
        ],
        [
            "rewrite nth_0...",
            "VernacExtend",
            "b8f583150997a57a75db48811a725171ce1f8da1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl plus.",
            "VernacExtend",
            "302d59ec058a7878cc820c70eda2d0fdedc9da24"
        ],
        [
            "rewrite remove_tail.",
            "VernacExtend",
            "a449d749304e3ee3797c0bcd5d023192c51ab713"
        ],
        [
            "rewrite (eq_cons v0) in H0.",
            "VernacExtend",
            "c591eaeb18f4edf504fc7a6a4c95f984f0f04d21"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply H...",
            "VernacExtend",
            "e11f00a407e5296f27bbf4936af1a81bc964a46d"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "rewrite (eq_cons v0) in H1.",
            "VernacExtend",
            "020980ceabf53cab1913e311340c4d1f81ce60c6"
        ],
        [
            "simpl in H1...",
            "VernacExtend",
            "12516b11e5d3753fdfa3217198ff741c5343f974"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_map (A B: Set) (f: A -> B) n (i: natBelow (S n)) (v: Vector.t A (S n)): remove (map f v) i = map f (remove v i).",
            "VernacStartTheoremProof",
            "f38012d5fb2a2a37ca5e0e079d8dfe6dc64cecd4"
        ],
        [
            "Proof with reflexivity.",
            "VernacProof",
            "b55396bc4a6d77a1ea27b3f0c6ed183dde4a732e"
        ],
        [
            "revert v.",
            "VernacExtend",
            "55aebda61020e9d48822205f777e478cfdb94d83"
        ],
        [
            "pattern n, i.",
            "VernacExtend",
            "27d3c9dc25b31f0b1231e70ba759f3743968cc2b"
        ],
        [
            "apply natBelow_rect_S.",
            "VernacExtend",
            "284d66a32bf0c8571339a255015dda0f69ff0d30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "do 2 rewrite remove_head...",
            "VernacExtend",
            "c99dc7bb70f9cd96ca9731e78ff614758d4634bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl plus.",
            "VernacExtend",
            "302d59ec058a7878cc820c70eda2d0fdedc9da24"
        ],
        [
            "cset remove_tail.",
            "VernacExtend",
            "8e30953cf00d41e52bf29cc9b024053928d45561"
        ],
        [
            "simpl plus in *.",
            "VernacExtend",
            "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite (eq_cons v0).",
            "VernacExtend",
            "e088eb398b0a8f8d09b9a216b77864d72d928883"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_perm (T: Set) n (nb: natBelow (S n)) (v: Vector.t T (S n)): Permutation (Vector.cons (nth v nb) (remove v nb)) v.",
            "VernacStartTheoremProof",
            "f712f212d247bc2a679ce37a50ffcf33ff2a7dc8"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "revert v.",
            "VernacExtend",
            "55aebda61020e9d48822205f777e478cfdb94d83"
        ],
        [
            "pattern n, nb.",
            "VernacExtend",
            "15701186bc5fd7eff9c6723fd3686600dbb2a159"
        ],
        [
            "apply natBelow_rect_S.",
            "VernacExtend",
            "284d66a32bf0c8571339a255015dda0f69ff0d30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite remove_head.",
            "VernacExtend",
            "4e261d9427e417e686c0176a18e662ef1f9ef20e"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply perm_refl.",
            "VernacExtend",
            "c9924b8118505b42e4a68782b991f72d43440838"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl plus.",
            "VernacExtend",
            "302d59ec058a7878cc820c70eda2d0fdedc9da24"
        ],
        [
            "rewrite remove_tail.",
            "VernacExtend",
            "a449d749304e3ee3797c0bcd5d023192c51ab713"
        ],
        [
            "cset (H (tail v0)).",
            "VernacExtend",
            "8e95de8b3fc4d024f1e9f12fb9ef16405fd322a6"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "simpl plus in *.",
            "VernacExtend",
            "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
        ],
        [
            "cset' (remove (tail v0) (mkNatBelow v p)).",
            "VernacExtend",
            "5b4bbb123c6a20866185f9fd0af9ca34c6ec9a28"
        ],
        [
            "fold (Snb (mkNatBelow v p)).",
            "VernacExtend",
            "10cb9bf049a527a761fab65fac15a6fc03831958"
        ],
        [
            "rewrite nth_S.",
            "VernacExtend",
            "ec0c34a1b3958fee9ae0f574c7f8aa4c22c64ba7"
        ],
        [
            "cut (Permutation (Vector.cons (nth (tail v0) (mkNatBelow v p)) (Vector.cons (head v0) H)) (Vector.cons (head v0) (tail v0))).",
            "VernacExtend",
            "56f53a32c5ced7083d06f6fe3a37da4f042436de"
        ],
        [
            "rewrite <- eq_cons.",
            "VernacExtend",
            "5e2a3333d1c407011df3ffc0e8ed787caafa20fd"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "apply perm_trans with (Vector.cons (head v0) (Vector.cons (nth (tail v0) (mkNatBelow v p)) H))...",
            "VernacExtend",
            "dfcc7174bd02f66f60e7b516955998cd191bb98c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import skip_list.",
            "VernacRequire",
            "1c9b8ecd7e205ba876910d5cdc4aaea4dfdd4512"
        ],
        [
            "Lemma SkipList_tail (A: Set) n (v: Vector.t A (S n)): SkipList (tail v) v.",
            "VernacStartTheoremProof",
            "67bb944b1458e0b3dc2c2a1dc732cfe0e1b2015f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply SkipList_tail.",
            "VernacExtend",
            "371e194736c1145346eba54bd43cf5b3366791d9"
        ],
        [
            "apply SkipList_refl.",
            "VernacExtend",
            "0e0ca763b5ef5653b622d12390fa694d1f51fc58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SkipList_remove (A: Set) n (nb: natBelow (S n)) (l: Vector.t A (S n)): SkipList (remove l nb) l.",
            "VernacStartTheoremProof",
            "5345ef8ad469675a803541bb07a71e9c88a64f73"
        ],
        [
            "revert l.",
            "VernacExtend",
            "11a722880df1bc386870f9ce37f36e8be2871e9c"
        ],
        [
            "pattern n, nb.",
            "VernacExtend",
            "15701186bc5fd7eff9c6723fd3686600dbb2a159"
        ],
        [
            "apply natBelow_rect_S.",
            "VernacExtend",
            "284d66a32bf0c8571339a255015dda0f69ff0d30"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite remove_head.",
            "VernacExtend",
            "4e261d9427e417e686c0176a18e662ef1f9ef20e"
        ],
        [
            "apply SkipList_tail.",
            "VernacExtend",
            "371e194736c1145346eba54bd43cf5b3366791d9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct v.",
            "VernacExtend",
            "6f1469bc2ceb2b76ca58f6ada86b5fc3c1e42ed3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (eq_cons l).",
            "VernacExtend",
            "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply SkipList_head.",
            "VernacExtend",
            "f34c106239e0a0c0d9cfe4dd4c9c0afcdae0e9e3"
        ],
        [
            "apply SkipList_tail.",
            "VernacExtend",
            "371e194736c1145346eba54bd43cf5b3366791d9"
        ],
        [
            "cset (remove_tail (S v) p l).",
            "VernacExtend",
            "d32dbec13f1222d6500a1e2f214c4f848b446364"
        ],
        [
            "simpl plus in *.",
            "VernacExtend",
            "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "cset (H (tail l)).",
            "VernacExtend",
            "91da313b52dc6b02af12d669c862b3e37932a951"
        ],
        [
            "apply SkipList_trans with (List.cons (head l) (tail l)).",
            "VernacExtend",
            "8d633163165c86b1d4a40f8a867380f56600d0e2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply SkipList_head.",
            "VernacExtend",
            "f34c106239e0a0c0d9cfe4dd4c9c0afcdae0e9e3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (eq_cons l).",
            "VernacExtend",
            "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply SkipList_refl.",
            "VernacExtend",
            "0e0ca763b5ef5653b622d12390fa694d1f51fc58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition remove_In (X: Set) n (v: Vector.t X (S n)) x i (p: List.In x (remove v i)): List.In x v := incl_In x p (SkipList_incl (SkipList_remove i v)).",
            "VernacDefinition",
            "d2c2abeb953d8e43dfbb0f74daf4f3dc3f372470"
        ],
        [
            "Lemma trans_plus_n_Sm n m: n + S m = S (n + m).",
            "VernacStartTheoremProof",
            "757c19d7a7daf1d8825cec6fb91c86fcdf1e73b5"
        ],
        [
            "induction n; simpl.",
            "VernacExtend",
            "1f285429454cbe9bad08c3e1d2fa969e99890bea"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eq_S.",
            "VernacExtend",
            "8ef0b219ea0189c2d80bb55d03c4c9f24beca469"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint nats (x n: nat) {struct n}: Vector.t (natBelow (x + n)) n := match n as n0 return Vector.t (natBelow (x + n0)) n0 with | 0 => Vector.nil | S n0 => map (fun d => eq_rec_r natBelow d (trans_plus_n_Sm x n0)) (Vector.cons (mkNatBelow x n0) (nats (S x) n0)) end.",
            "VernacFixpoint",
            "f7ed741ab095ad71eba3413fe0062de76784eeb5"
        ],
        [
            "Definition nb_nats (x n: nat): Vector.t nat n := map nb_val (nats x n).",
            "VernacDefinition",
            "d93d86cbe7310948e2f39d8c5881f9e865c8db6a"
        ],
        [
            "Lemma nats_S (x n: nat): nats x (S n) = map (fun d => eq_rec_r natBelow d (trans_plus_n_Sm x n)) (Vector.cons (mkNatBelow x n) (nats (S x) n)).",
            "VernacStartTheoremProof",
            "c5c8f0b448bac9ede486d5eb70bfec157ce28e7c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nb_nats_S (x n: nat): nb_nats x (S n) = Vector.cons x (nb_nats (S x) n).",
            "VernacStartTheoremProof",
            "185054ddae28e8dc1e3d60d29a584dadd9e69aad"
        ],
        [
            "Proof with reflexivity.",
            "VernacProof",
            "b55396bc4a6d77a1ea27b3f0c6ed183dde4a732e"
        ],
        [
            "unfold nb_nats.",
            "VernacExtend",
            "2c6f7c838846d5fcaf557b35968e853735ac1d82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Vcons_eq.",
            "VernacExtend",
            "2576ce2407e6d1189e920ce3fb8df429a07e6a9e"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "apply map_ext.",
            "VernacExtend",
            "d650e1a07594e03fb46b651b28db84dff21ba943"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nats_S v u w: List.In w (nats u v) -> List.In (Snb w) (nats (S u) v).",
            "VernacStartTheoremProof",
            "dae389cbed959f129980cf54158aaf88d5bdf1f2"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v in u, w |- *...",
            "VernacExtend",
            "e93fa557eb37ed0d1d421d7659a06f4fa174bea5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "rewrite val_Snb.",
            "VernacExtend",
            "bc0722a92099b57196ae45d1e24700e4d4f3a497"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite <- List_map in H.",
            "VernacExtend",
            "6bfd2eafb1ed647b4e669fe5dd740a409d1a9eda"
        ],
        [
            "destruct (In_map_inv H).",
            "VernacExtend",
            "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "set (fun d: natBelow (S (S (u + v))) => eq_rec_r natBelow d (eq_S (u + S v) (S (u + v)) (trans_plus_n_Sm u v))).",
            "VernacExtend",
            "25b7e8bec361573cb2fc1bb199a8106e1659a261"
        ],
        [
            "replace (Snb (eq_rec_r natBelow x (trans_plus_n_Sm u v))) with (n (Snb x)).",
            "VernacExtend",
            "dcd5f5c8514180915bbb0afa10820370c38c26f1"
        ],
        [
            "rewrite <- List_map.",
            "VernacExtend",
            "27d8c8926dfd6240bcf9fea3257b1b8f7b3cc0cd"
        ],
        [
            "apply List.in_map.",
            "VernacExtend",
            "500803052df9ca4e92af00af2a428c0b18c06923"
        ],
        [
            "apply (IHv (S u))...",
            "VernacExtend",
            "d997d4fb83ddc047ad56f3e117f558a7fd45fae7"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite val_Snb.",
            "VernacExtend",
            "bc0722a92099b57196ae45d1e24700e4d4f3a497"
        ],
        [
            "repeat rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "94a502c071aa043407baccaf034e0207df3c4d90"
        ],
        [
            "rewrite val_Snb...",
            "VernacExtend",
            "eaa86af6335f585bebd6d00413e05d861905abe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nb_nats v n m: List.In (v + m) (nb_nats m (S (v + n))).",
            "VernacStartTheoremProof",
            "077e1f51e65c140873b0d62567f5ffad3f6400a3"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v in n, m |- *.",
            "VernacExtend",
            "7699fde6651922fb849eb14363aee3b8f00a3e54"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "94a502c071aa043407baccaf034e0207df3c4d90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cset (IHv n m).",
            "VernacExtend",
            "6e8533e7eb8155c03e91662ea866352d3a90093f"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite nb_val_eq_rec_r in H.",
            "VernacExtend",
            "73103968cf329a342d0bc392abea35dcd2d0c014"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply eq_S...",
            "VernacExtend",
            "7294e45c4793835fc09ed826fd1ba0adae7955fd"
        ],
        [
            "rewrite map_map in H.",
            "VernacExtend",
            "905e027c72989b5bc4bb3a8b111d166a1cd732a3"
        ],
        [
            "rewrite <- List_map in H.",
            "VernacExtend",
            "6bfd2eafb1ed647b4e669fe5dd740a409d1a9eda"
        ],
        [
            "destruct (In_map_inv H).",
            "VernacExtend",
            "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "unfold compose in H.",
            "VernacExtend",
            "e8209ad2a87adac9f1cb22d98c963e1158feadee"
        ],
        [
            "rewrite nb_val_eq_rec_r in H.",
            "VernacExtend",
            "73103968cf329a342d0bc392abea35dcd2d0c014"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "assert (ext_eq (fun x1: natBelow (S (S (m + (v + n)))) => nb_val (eq_rec_r natBelow (eq_rec_r natBelow x1 (eq_S (m + S (v + n)) (S (m + (v + n))) (trans_plus_n_Sm m (v + n)))) (trans_plus_n_Sm m (S (v + n))))) nb_val).",
            "VernacExtend",
            "690984c1a97362ff8516200b782ff431e06f8b95"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "repeat rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "21c6c3b61436a98f6f7f4387027f78dfcd4314b7"
        ],
        [
            "rewrite (map_ext H1).",
            "VernacExtend",
            "2d83572426c251959f991ebca91e88ede65fc6a9"
        ],
        [
            "replace (S (v + m)) with (nb_val (Snb x)).",
            "VernacExtend",
            "bc942b93bc25000a4923ddae704a985027dc5c3f"
        ],
        [
            "rewrite <- List_map.",
            "VernacExtend",
            "27d8c8926dfd6240bcf9fea3257b1b8f7b3cc0cd"
        ],
        [
            "apply List.in_map.",
            "VernacExtend",
            "500803052df9ca4e92af00af2a428c0b18c06923"
        ],
        [
            "apply (In_nats_S (v + n) (S m))...",
            "VernacExtend",
            "b4476b8a9aa6fa6224104e6447ad380dd3f1f185"
        ],
        [
            "clear H1 H0.",
            "VernacExtend",
            "d766efa423cf31450eaca255d1f6b95c870c61f9"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply eq_S...",
            "VernacExtend",
            "7294e45c4793835fc09ed826fd1ba0adae7955fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nb_nats' x m n: m <= x -> x < m + n -> List.In x (nb_nats m n).",
            "VernacStartTheoremProof",
            "c6e40b7448d6600036fdd129085a5990b86bf0be"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_exists_plus H).",
            "VernacExtend",
            "7a69007125e0a0b881c3fb7202e15b409a11deca"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (x0 < n) by omega.",
            "VernacExtend",
            "8587eaf6b4c82a67ab3ee8fef920376523d8aa0d"
        ],
        [
            "destruct (lt_exists_plus H1).",
            "VernacExtend",
            "dbf7ea640dcf85122279c4a13f2f81d7fd582524"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply In_nb_nats.",
            "VernacExtend",
            "103f3bdbfe38ae0a0735db0b44b1a87dc2353fd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_as_nb_val n (x: natBelow n) m (l: Vector.t (natBelow n) m): List.In (nb_val x) (map nb_val l) -> List.In x l.",
            "VernacStartTheoremProof",
            "247f3865e1da961c60fd1b9e6692c13e639d50b6"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- List_map in H.",
            "VernacExtend",
            "6bfd2eafb1ed647b4e669fe5dd740a409d1a9eda"
        ],
        [
            "destruct (In_map_inv H).",
            "VernacExtend",
            "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite <- (natBelow_unique _ _ H)...",
            "VernacExtend",
            "3d38b2ae46087901ad969722e224dece71adb4a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nats_0 n x: List.In x (nats 0 n).",
            "VernacStartTheoremProof",
            "04dce0e0133d9ebf521cd9a22d1e0942404572ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply In_as_nb_val.",
            "VernacExtend",
            "e056a3d3bd169762f9b793d557dcf5257e8101d6"
        ],
        [
            "simpl in x.",
            "VernacExtend",
            "72f6afab6fdc6081cee3f8fe984a0d037f4d319e"
        ],
        [
            "dependent inversion_clear x.",
            "VernacExtend",
            "26521fa1fa54dc0f3f28e9b35e71f5479d3c3052"
        ],
        [
            "simpl @nb_val.",
            "VernacExtend",
            "94aa802201f0a0b67b960157de892e07828c6b42"
        ],
        [
            "cset (In_nb_nats v p 0).",
            "VernacExtend",
            "8d165d26f7ec805012d7254bdcad2903b521f024"
        ],
        [
            "rewrite plus_0_r in H.",
            "VernacExtend",
            "8c712dc1e6c60a034320685961000c04955a90d2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma S_rect A n (P: Vector.t A (S n) -> Type): (forall h t, P (Vector.cons h t)) -> forall v, P v.",
            "VernacStartTheoremProof",
            "d8698067b26a3316023acf9bf0fa7e6e11a7ebf7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "apply X.",
            "VernacExtend",
            "1a06263bf241d2c272a11be0f0a1522334cc2c93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_inv_perm (X: Set) (x: X) n (v: Vector.t X (S n)): List.In x v -> exists v': Vector.t X n, Permutation (Vector.cons x v') v.",
            "VernacStartTheoremProof",
            "139025142f8599a4d4852de32a608d399f3ac8f8"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n in v |- *.",
            "VernacExtend",
            "4f54f8d932be63cc3e9af80a1253cb4b7ac6d9c2"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "rewrite (eq_nil (tail v)).",
            "VernacExtend",
            "9cccc9ac0c5cd80b0d8265bdb1ac7bf35c40ba0e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exists (tail v).",
            "VernacExtend",
            "079f40e13c5b03468962c14ce99cc913374f05db"
        ],
        [
            "rewrite (eq_nil (tail v)).",
            "VernacExtend",
            "9cccc9ac0c5cd80b0d8265bdb1ac7bf35c40ba0e"
        ],
        [
            "apply perm_refl.",
            "VernacExtend",
            "c9924b8118505b42e4a68782b991f72d43440838"
        ],
        [
            "elimtype False...",
            "VernacExtend",
            "a2889d4501f0ae3aea80adc3b5e37c1033b6a559"
        ],
        [
            "pattern v.",
            "VernacExtend",
            "f5fe9a7ad648645918e1b74fec6c8d47081c3f2c"
        ],
        [
            "apply S_rect.",
            "VernacExtend",
            "b08a960793c2fbc7dc7a4128f6cd811d0ebaea98"
        ],
        [
            "clear v.",
            "VernacExtend",
            "a35789d95f3689ded8406d779789e78b4faa4bb2"
        ],
        [
            "intros h t.",
            "VernacExtend",
            "252463addcbf5dc16b26db0233d01eb72b7a1dc3"
        ],
        [
            "pattern t.",
            "VernacExtend",
            "3215cd39e421b72d7cad6cf03b577d4d8ba8b104"
        ],
        [
            "apply S_rect.",
            "VernacExtend",
            "b08a960793c2fbc7dc7a4128f6cd811d0ebaea98"
        ],
        [
            "clear t.",
            "VernacExtend",
            "e3a5df4b3da0228c75fd9cefa03c878ee29feeb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exists (Vector.cons h0 t).",
            "VernacExtend",
            "357fa4cce86941faf14f97d09c75ceca8e9b2612"
        ],
        [
            "apply perm_refl.",
            "VernacExtend",
            "c9924b8118505b42e4a68782b991f72d43440838"
        ],
        [
            "destruct (IHn (Vector.cons h0 t) H).",
            "VernacExtend",
            "2444b6aaa1847285e54acbc5aebbef3a2bf7f36e"
        ],
        [
            "exists (Vector.cons h x0).",
            "VernacExtend",
            "1df5afa4b5412329c7c4e961c383f6edfa0f9a12"
        ],
        [
            "apply perm_trans with (Vector.cons h (Vector.cons x x0)).",
            "VernacExtend",
            "1eea25f0345d871b2675835fce25c3e3843089c2"
        ],
        [
            "apply perm_swap.",
            "VernacExtend",
            "ae31658d1834adacffd39ae0769b514845f20926"
        ],
        [
            "apply perm_skip...",
            "VernacExtend",
            "ef02987ef032fab8e86a662e86c95e11ad383ea9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_incl_Permutation (A: Set) n (a b: Vector.t A n): List.NoDup a -> List.incl a b -> Permutation a b.",
            "VernacStartTheoremProof",
            "c2b88647ab7ee540b8d53c240cbbb57df47641d1"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_nil a).",
            "VernacExtend",
            "278d81cb55ae9293de2862ef319d0d4e3b7748b0"
        ],
        [
            "rewrite (eq_nil b).",
            "VernacExtend",
            "b0d037cdc12717815b6c621415e77caf13ccb2c7"
        ],
        [
            "apply perm_nil.",
            "VernacExtend",
            "7772adb8d0e920abd6a49bef78350be27e8bad2d"
        ],
        [
            "pattern a.",
            "VernacExtend",
            "c82a474d8915fb54b1373c57928ad08d4b4cd7dc"
        ],
        [
            "apply S_rect.",
            "VernacExtend",
            "b08a960793c2fbc7dc7a4128f6cd811d0ebaea98"
        ],
        [
            "clear a.",
            "VernacExtend",
            "1345621158f2a53dd32925dfdcefd78c46dd29d5"
        ],
        [
            "intros ha ta.",
            "VernacExtend",
            "42c17f9a7ed560b2a735a843071e613b487f5601"
        ],
        [
            "pattern b.",
            "VernacExtend",
            "7d317dfff83ae4e057b940a7d6ca30ad574e8126"
        ],
        [
            "apply S_rect.",
            "VernacExtend",
            "b08a960793c2fbc7dc7a4128f6cd811d0ebaea98"
        ],
        [
            "clear b.",
            "VernacExtend",
            "b4db797e37f57242b034a9c4bdb4e65c1ad08b36"
        ],
        [
            "intros hb tb.",
            "VernacExtend",
            "b7f3fed5148674248bd395f7b0f49ffcc163552f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (List.In ha (Vector.cons hb tb)).",
            "VernacExtend",
            "90d0dc4171871e4611ed3bede5a3e60f5c4f8a12"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "left...",
            "VernacExtend",
            "bf4fd72477fff45e0940a41f06078165174dbd25"
        ],
        [
            "destruct (In_inv_perm ha (Vector.cons hb tb) H1).",
            "VernacExtend",
            "5606495eb0bb8ad26c037bc01f4adcad9fba5a95"
        ],
        [
            "apply perm_trans with (Vector.cons ha x)...",
            "VernacExtend",
            "f8ef3384f407190fb272ba931896e5743f3291f8"
        ],
        [
            "apply perm_skip.",
            "VernacExtend",
            "88d9c437306dbe4b5a3f0f8693d406682ecdb8a8"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "inversion_clear H...",
            "VernacExtend",
            "a23502606014528ad263a393402f8abc040cabee"
        ],
        [
            "cut (List.incl ta (Vector.cons ha x)).",
            "VernacExtend",
            "4aae3e67ea39657fa6e19e9d392a0e70347279b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "do 2 intro.",
            "VernacExtend",
            "94cab4807bd907dc3f92e3b75fad36963d81fc73"
        ],
        [
            "destruct (H3 _ H4)...",
            "VernacExtend",
            "d8e6d389f4f408f2ebb0b02e86a24ad4ecddebbc"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "elimtype False...",
            "VernacExtend",
            "a2889d4501f0ae3aea80adc3b5e37c1033b6a559"
        ],
        [
            "apply List.incl_tran with (to_list (Vector.cons hb tb)).",
            "VernacExtend",
            "9d32a0263ff617242547c3858f8c28144eb67624"
        ],
        [
            "do 2 intro.",
            "VernacExtend",
            "94cab4807bd907dc3f92e3b75fad36963d81fc73"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "right...",
            "VernacExtend",
            "812b278b3530fdc8b155b846f3e666d427661a31"
        ],
        [
            "apply Permutation_incl.",
            "VernacExtend",
            "fdbefc246423a0fc3e17650346e6658683f50cc3"
        ],
        [
            "apply Permutation.Permutation_sym.",
            "VernacExtend",
            "bc3be4459a4f2c13c6f2f74b354ee9c1886d124a"
        ],
        [
            "apply List_Permutation...",
            "VernacExtend",
            "0adc475abf77c56426455fc8f7c38c52a3171af2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nats_inv z y (x: natBelow (y + z)): List.In x (nats y z) -> y <= x < z + y.",
            "VernacStartTheoremProof",
            "08aa29914b36a1280c9f8ad7142cff441d9c0123"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction z in y, x |- *.",
            "VernacExtend",
            "d3569783c6854292cfc0fb2aa0eb74917cbc3550"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False...",
            "VernacExtend",
            "a2889d4501f0ae3aea80adc3b5e37c1033b6a559"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- List_map.",
            "VernacExtend",
            "27d8c8926dfd6240bcf9fea3257b1b8f7b3cc0cd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (In_map_inv H).",
            "VernacExtend",
            "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "destruct (IHz (S y) x0 H0).",
            "VernacExtend",
            "fb6d389dbbc2aab66d7ddc86170010d2a16f73fa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply le_Sn_le...",
            "VernacExtend",
            "54bb7b0a77caf98d84a0444be73bd983563a892e"
        ],
        [
            "rewrite <- plus_n_Sm in H1...",
            "VernacExtend",
            "f3b797c219922535f52ac544a80b8fbc603d804e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nb_nats_inv z y x: List.In x (nb_nats y z) -> y <= x < z + y.",
            "VernacStartTheoremProof",
            "80183688b559169dc9632b0ca6e2e92359fc3933"
        ],
        [
            "unfold nb_nats.",
            "VernacExtend",
            "2c6f7c838846d5fcaf557b35968e853735ac1d82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- List_map in H.",
            "VernacExtend",
            "6bfd2eafb1ed647b4e669fe5dd740a409d1a9eda"
        ],
        [
            "destruct (In_map_inv H).",
            "VernacExtend",
            "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply In_nats_inv.",
            "VernacExtend",
            "428270ce9363e8e3b875f267c4b40d0408e4cb63"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_nats y x: List.NoDup (nats x y).",
            "VernacStartTheoremProof",
            "7d8aebfc9f775dfe3b37b1615301cff5bdc62f7a"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction y in x |- *.",
            "VernacExtend",
            "1625aef52699d9861851b2610a3e4539ebdec46e"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply List.NoDup_cons.",
            "VernacExtend",
            "34b8e8765ee7f7f4d70b96c9a02b54601c9b2197"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite <- List_map in H.",
            "VernacExtend",
            "6bfd2eafb1ed647b4e669fe5dd740a409d1a9eda"
        ],
        [
            "destruct (In_map_inv H).",
            "VernacExtend",
            "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct (In_nats_inv y (S x) x0 H0).",
            "VernacExtend",
            "fba734c15aa6dc2330d5b234475ee67920c00d8b"
        ],
        [
            "assert (nb_val x0 = x).",
            "VernacExtend",
            "8c1040e0b4d81160638e79b1b3327235816f8ce8"
        ],
        [
            "replace x with (nb_val (eq_rec_r natBelow (mkNatBelow x y) (trans_plus_n_Sm x y))).",
            "VernacExtend",
            "8a74e427bbd75d488e4bc0d3b78073a7051af92f"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "apply le_Sn_n with x.",
            "VernacExtend",
            "b93ff7b3c9b06d63651b207ee79f22762e48a8d7"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "rewrite H3 in H1...",
            "VernacExtend",
            "551fbdbcbf5825e4b55a489eefbf3987d53c65b6"
        ],
        [
            "rewrite <- List_map.",
            "VernacExtend",
            "27d8c8926dfd6240bcf9fea3257b1b8f7b3cc0cd"
        ],
        [
            "apply NoDup_map.",
            "VernacExtend",
            "d3fd459b62e44cdcee4c77a4f5eba3e54fd2ac76"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "rewrite <- (nb_val_eq_rec_r x0 (trans_plus_n_Sm x y)).",
            "VernacExtend",
            "436f1295dc484accc517dd64704e589770e79362"
        ],
        [
            "rewrite <- (nb_val_eq_rec_r y0 (trans_plus_n_Sm x y)).",
            "VernacExtend",
            "4af4c9d78ae9d530bfecde039e1cb0800c892211"
        ],
        [
            "rewrite H1...",
            "VernacExtend",
            "ea2378a230b97c3935b9ba0f0107ca3d47b65218"
        ],
        [
            "apply (IHy (S x)).",
            "VernacExtend",
            "ceef4f1f2bd73fd66c9ef4fae0bc248dc863e36f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tail_map (A B: Set) (f: A -> B) n (l: Vector.t A (S n)): tail (map f l) = map f (tail l).",
            "VernacStartTheoremProof",
            "c657444bd98bc3974f855a78591f29d69f75c7cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons l).",
            "VernacExtend",
            "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tail_cons (A: Set) (a: A) n (l: Vector.t A n): tail (Vector.cons a l) = l.",
            "VernacStartTheoremProof",
            "97ac4100a839150416aeefbcebe5fad44167ed3f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_nats m (i: natBelow m) n: nb_val (nth (nats n m) i) = n + i.",
            "VernacStartTheoremProof",
            "d0d13e5c35c5d6a032ea2815a941552d5c77291a"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "revert n.",
            "VernacExtend",
            "dfe642a551e2c983f16aa55151347c851d754720"
        ],
        [
            "pattern m, i.",
            "VernacExtend",
            "a60e47fa4946e42da020713b203629bcefb4d617"
        ],
        [
            "apply natBelow_rect.",
            "VernacExtend",
            "e70fbde71005112636ad7e83dcea1966385d262d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply plus_0_r.",
            "VernacExtend",
            "1bb2e62d3f2920b099502f5b5298fe0b404a5dac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl plus in *.",
            "VernacExtend",
            "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
        ],
        [
            "fold (Snb (mkNatBelow v p)).",
            "VernacExtend",
            "10cb9bf049a527a761fab65fac15a6fc03831958"
        ],
        [
            "rewrite nth_S.",
            "VernacExtend",
            "ec0c34a1b3958fee9ae0f574c7f8aa4c22c64ba7"
        ],
        [
            "rewrite nats_S.",
            "VernacExtend",
            "5f6e33ddcbc53b10bb55a1c4d637e60418f07458"
        ],
        [
            "rewrite tail_map.",
            "VernacExtend",
            "1d55c4f454fc07a67e1f6278d198e1f172fb2b5d"
        ],
        [
            "rewrite tail_cons.",
            "VernacExtend",
            "ee1fe7b4f7bb4a0c6bff84d571ef3415f80ba720"
        ],
        [
            "rewrite nth_map.",
            "VernacExtend",
            "70aa76d3302fee868bea1506cd29952afff7a205"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "apply (H (S n)).",
            "VernacExtend",
            "32042579ba995db7456bb519796414132ff6fb8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_nats3 m i n: nth (nats (S n) m) i = Snb (nth (nats n m) i).",
            "VernacStartTheoremProof",
            "2ff7345827dc19e2aa7d41fbcf918a158a200f20"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "revert n.",
            "VernacExtend",
            "dfe642a551e2c983f16aa55151347c851d754720"
        ],
        [
            "pattern m, i.",
            "VernacExtend",
            "a60e47fa4946e42da020713b203629bcefb4d617"
        ],
        [
            "apply natBelow_rect.",
            "VernacExtend",
            "e70fbde71005112636ad7e83dcea1966385d262d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "rewrite val_Snb.",
            "VernacExtend",
            "bc0722a92099b57196ae45d1e24700e4d4f3a497"
        ],
        [
            "do 2 rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "45a487ba51aa1d6f9645eed31220c304b797bf8b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "simpl plus.",
            "VernacExtend",
            "302d59ec058a7878cc820c70eda2d0fdedc9da24"
        ],
        [
            "rewrite (val_Snb (nth (nats n (S (S (v + p)))) (mkNatBelow (S v) p))).",
            "VernacExtend",
            "3afae7574668ea2e15200283dae3d93072b082cc"
        ],
        [
            "rewrite nth_nats.",
            "VernacExtend",
            "34e50b849928c071b1ea09bcf15d4f558d458b5b"
        ],
        [
            "cset (nth_nats (mkNatBelow (S v) p) (S n)).",
            "VernacExtend",
            "8cc4d32245ce569c91c17f138351d6de61128a9b"
        ],
        [
            "simpl plus in H0.",
            "VernacExtend",
            "0987937af254eace726ef972532e0990cc97d4a3"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nth_nats_0 n i: nth (nats 0 n) i = i.",
            "VernacStartTheoremProof",
            "cb0fb5d7889923d0cb7f1a2b4551170102e12584"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "rewrite nth_nats.",
            "VernacExtend",
            "34e50b849928c071b1ea09bcf15d4f558d458b5b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition plusnb (y x: nat) (nb: natBelow x): natBelow (x + y) := match nb in natBelow x' return natBelow (x' + y) with | mkNatBelow a b => eq_rec_r natBelow (mkNatBelow a (b + y)) (eq_S _ _ (plus_assoc_reverse a b y)) end.",
            "VernacDefinition",
            "08b50f0d43cf9cf07ca110e1d388762fe3aa6b10"
        ],
        [
            "Lemma val_plusnb y x (nb: natBelow x): nb_val (plusnb y nb) = nb_val nb.",
            "VernacStartTheoremProof",
            "615c1d377d10562c4a8587a70476c7b2546b50a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "dependent inversion nb.",
            "VernacExtend",
            "db8a89cdebc1be9ec51ab6438aacd41a524bf744"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_app (A B: Type) (f: A -> B) n (v: Vector.t A n) m (w: Vector.t A m): map f (app v w) = app (map f v) (map f w).",
            "VernacStartTheoremProof",
            "58e2384cd660079aaedd6f20ead901985fd1739d"
        ],
        [
            "Proof with reflexivity.",
            "VernacProof",
            "b55396bc4a6d77a1ea27b3f0c6ed183dde4a732e"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "rewrite (eq_nil v)...",
            "VernacExtend",
            "5bbb7455a63104cc99e0daca806dc71f0a3050e2"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHn...",
            "VernacExtend",
            "5bbea74dccbe63df8d1a9cf9eeda87a8e807eb93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma app_eq A m (x x': Vector.t A m) n (y y': Vector.t A n): x = x' -> y = y' -> app x y = app x' y'.",
            "VernacStartTheoremProof",
            "b8d91082c2dff57df804c060653bba18f6d1e743"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nats_plus x n y: nats n (x + y) = map (fun nb => eq_rec_r natBelow nb (plus_assoc n x y)) (app (map (@plusnb y _) (nats n x)) (nats (n + x) y)).",
            "VernacStartTheoremProof",
            "5ad4f2205d4fe4a511face7e28b51e433210c2b3"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction x in n, y |- *.",
            "VernacExtend",
            "28b1481e31e46dd8ecf338b76e9ff227438b0994"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ext_nth.",
            "VernacExtend",
            "170ce92fac7b5054a4585f9732cf6acaec7a23a7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite nth_map.",
            "VernacExtend",
            "70aa76d3302fee868bea1506cd29952afff7a205"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "rewrite nth_nats.",
            "VernacExtend",
            "34e50b849928c071b1ea09bcf15d4f558d458b5b"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "rewrite nth_nats...",
            "VernacExtend",
            "12d17c3e66032573789c1bd8947d576b3406b224"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Vcons_eq.",
            "VernacExtend",
            "2576ce2407e6d1189e920ce3fb8df429a07e6a9e"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "do 2 rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e0dfb2138ae8c787c345975be1e2fdbe3842c10b"
        ],
        [
            "rewrite val_plusnb.",
            "VernacExtend",
            "43fb110a055faaa68180eb73299ad2b25a8fafd8"
        ],
        [
            "rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "repeat rewrite map_app.",
            "VernacExtend",
            "b6a6ee1d9a8c82aa32dd632bf20f37a46c6ebb72"
        ],
        [
            "apply app_eq.",
            "VernacExtend",
            "a7ec9ac4969481f0d1a46c128b8fcb01ae3e2a26"
        ],
        [
            "repeat rewrite map_map.",
            "VernacExtend",
            "6397a4a7eaae25ec9feb2125289f70c2e88a3940"
        ],
        [
            "apply map_ext.",
            "VernacExtend",
            "d650e1a07594e03fb46b651b28db84dff21ba943"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "repeat rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "94a502c071aa043407baccaf034e0207df3c4d90"
        ],
        [
            "do 2 rewrite val_plusnb.",
            "VernacExtend",
            "8746968fcbb1b60614224c9a3ba6a234feb98641"
        ],
        [
            "rewrite nb_val_eq_rec_r...",
            "VernacExtend",
            "86f0e202bd12d1ee9c9a6f38eb6386a5fccda609"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "apply ext_nth.",
            "VernacExtend",
            "170ce92fac7b5054a4585f9732cf6acaec7a23a7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "do 2 rewrite nth_map.",
            "VernacExtend",
            "07291c0cfa07e7be5e3fc7582ee2c9062fa6384b"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "apply natBelow_unique.",
            "VernacExtend",
            "88afa954969f92bf0159c5792f1bbffd05e9f20c"
        ],
        [
            "repeat rewrite nb_val_eq_rec_r.",
            "VernacExtend",
            "94a502c071aa043407baccaf034e0207df3c4d90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite trans_plus_n_Sm...",
            "VernacExtend",
            "13393d606cf9ce5504049cc874e5fdf7a3050edc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nb_nats_plus x n y: nb_nats n (x + y) = app (nb_nats n x) (nb_nats (n + x) y).",
            "VernacStartTheoremProof",
            "dc8ed5ef948b9241778519963f516de2d711db40"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold nb_nats.",
            "VernacExtend",
            "2c6f7c838846d5fcaf557b35968e853735ac1d82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nats_plus.",
            "VernacExtend",
            "69cf080717c2a74509eb97b075209bc680ae0de3"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "rewrite (@map_ext _ _ (nb_val \u2218 (fun nb => eq_rec_r natBelow nb (plus_assoc n x y))) nb_val).",
            "VernacExtend",
            "c8fb9289a577fc8d36510f5b98c8918d24389697"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "rewrite (@map_ext _ _ (nb_val \u2218 plusnb y (x:=n + x)) nb_val)...",
            "VernacExtend",
            "adbfe4646c7c7a7db55dba6e7cc843d8f0a9f3c2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "apply val_plusnb.",
            "VernacExtend",
            "45d6806d229862a1d7e3d93c1214675444b89cf1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "apply nb_val_eq_rec_r.",
            "VernacExtend",
            "807fe5fb96d990195d8e6108e197f612aa8d9397"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_cons A B (f: A -> B) (h: A) n (t: Vector.t A n): map f (Vector.cons h t) = Vector.cons (f h) (map f t).",
            "VernacStartTheoremProof",
            "76daedf711a5c953c276685853100a7cd6ab0a58"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_mapping (X: Set) n (a b: Vector.t X n): Permutation a b -> exists l: Vector.t (natBelow n) n, (forall x, List.In x l) /\\ map (nth b) l = a.",
            "VernacStartTheoremProof",
            "4151b89af50d146c46a6cd6cad52ec13b48e5702"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "intros p.",
            "VernacExtend",
            "223e3cb70cff95972873720780e7195aeb57b9fc"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "exists Vector.nil.",
            "VernacExtend",
            "d952998c09335a0c8f5f6deb4d098ca9e15124c6"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion x.",
            "VernacExtend",
            "5db7b54b2d91de141b8a99cf492aef32394becd3"
        ],
        [
            "destruct IHp.",
            "VernacExtend",
            "bc522a8d3196a8a363b4df7725cb1cc719934380"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exists (Vector.cons (nb0 n) (map (@Snb _) x0)).",
            "VernacExtend",
            "b22594ad5149c89e706a3d9f07b867a1910c75bb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (natBelow_S_inv x1).",
            "VernacExtend",
            "90c9f84e3e2b26c7fcf57459696887ebdf7aa744"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite <- List_map.",
            "VernacExtend",
            "27d8c8926dfd6240bcf9fea3257b1b8f7b3cc0cd"
        ],
        [
            "apply List.in_map...",
            "VernacExtend",
            "10650844f0e578b2a69bbcbc5cecb8695283010d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "left...",
            "VernacExtend",
            "bf4fd72477fff45e0940a41f06078165174dbd25"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite map_cons.",
            "VernacExtend",
            "c5c1b7812239152b34f8d67b0bbd46d294818829"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "apply map_ext.",
            "VernacExtend",
            "d650e1a07594e03fb46b651b28db84dff21ba943"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "rewrite nth_S...",
            "VernacExtend",
            "94fe391e8da82092f125421f689b5acc28addf4c"
        ],
        [
            "exists (Vector.cons (Snb (nb0 n)) (Vector.cons (nb0 (S n)) (nats 2 n))).",
            "VernacExtend",
            "588be6e4d40894dfb0bc2d18e1a36cf30221bd34"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (natBelow_S_inv x0).",
            "VernacExtend",
            "4b1b904a157d770f68411296bae3a2b9d8a3b0b9"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "destruct (natBelow_S_inv x1).",
            "VernacExtend",
            "90c9f84e3e2b26c7fcf57459696887ebdf7aa744"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply (In_nats_S n 1).",
            "VernacExtend",
            "2a58cc6031773fb0b776932dd3c318b0a67a1e18"
        ],
        [
            "apply (In_nats_S n 0).",
            "VernacExtend",
            "d22c2ff5204eceaec2ccd8a31ab0c806eb0a7dd9"
        ],
        [
            "apply In_nats_0.",
            "VernacExtend",
            "c66bd302b37e5603cc2b4f48da65745bef29726f"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "repeat rewrite map_cons.",
            "VernacExtend",
            "f9384e935a02a1c95ecc5bbeaa8ec3cc1d9bff52"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply (f_equal (@Vector.cons _ x n)).",
            "VernacExtend",
            "f45519738fb02fba823b7ad30e020c52e029f149"
        ],
        [
            "apply ext_nth.",
            "VernacExtend",
            "170ce92fac7b5054a4585f9732cf6acaec7a23a7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite nth_map.",
            "VernacExtend",
            "70aa76d3302fee868bea1506cd29952afff7a205"
        ],
        [
            "cset (nth_nats3 x0 1).",
            "VernacExtend",
            "0d3d7b5252e3517551495eb17fef7232fd9615b3"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "cset (nth_nats3 x0 0).",
            "VernacExtend",
            "6344dc8c394231a1ec6ef8dd9d01fcd546a1bc21"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "repeat rewrite nth_S.",
            "VernacExtend",
            "9e77dab6719763bbf25fcf63d0e6c647af44e7c1"
        ],
        [
            "cset (nth_nats_0 x0).",
            "VernacExtend",
            "5262ad15c62364baa0007dde538bd5d470ce76a5"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct IHp1.",
            "VernacExtend",
            "eed3a0635f3d3c7f35bb67b5b8ffc034916698d1"
        ],
        [
            "destruct IHp2.",
            "VernacExtend",
            "c46f172e4600cf116218356868b9b4e68a4a6630"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists (map (nth x0) x).",
            "VernacExtend",
            "f2abbcf3bb06ce7f3655b07244e5b4e80d18055b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (In_vec_inv _ _ (H0 x1)).",
            "VernacExtend",
            "f78a2f0119cabcba999ee28750265a864e665406"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite <- List_map.",
            "VernacExtend",
            "27d8c8926dfd6240bcf9fea3257b1b8f7b3cc0cd"
        ],
        [
            "apply List.in_map...",
            "VernacExtend",
            "10650844f0e578b2a69bbcbc5cecb8695283010d"
        ],
        [
            "apply ext_nth.",
            "VernacExtend",
            "170ce92fac7b5054a4585f9732cf6acaec7a23a7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "repeat rewrite nth_map...",
            "VernacExtend",
            "95b56e2f3582706001a132b9e1ce0a14aca6ad5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section contents.",
            "VernacBeginSection",
            "64247bb134c943946794e7969d57832818b1ace7"
        ],
        [
            "Variable X: Set.",
            "VernacAssumption",
            "c51d90a3990436d97d50320a95d1182ba70a3bce"
        ],
        [
            "Variable Xle: X -> X -> Prop.",
            "VernacAssumption",
            "027a6ea593e0328d2afeb77cd7829967bc81205f"
        ],
        [
            "Hypothesis XO: preorder X Xle.",
            "VernacAssumption",
            "6607d95679a545ab903d82e62ef25c30ba3561ab"
        ],
        [
            "Definition Xlt (x y: X): Prop := Xle x y /\\ ~ Xle y x.",
            "VernacDefinition",
            "d442323fabdb2e41ff3d6252817700f65984e653"
        ],
        [
            "Lemma Xle_nlt: forall x y, Xle x y -> ~ Xlt y x.",
            "VernacStartTheoremProof",
            "9eb04bc4a4c40f0f662452aaefda06ef7c686079"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Xlt_irrefl x: ~ Xlt x x.",
            "VernacStartTheoremProof",
            "cf286d5e893a72637ed4d53e9937f5cbdb2cd30a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "set (preord_refl _ _ XO x).",
            "VernacExtend",
            "f07212e08d58c0a83293107255e3062f99c56ed8"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Xle_lt_trans x y: Xle x y -> forall z, Xlt y z -> Xlt x z.",
            "VernacStartTheoremProof",
            "03347c82cc23c18bd150e5cc0eb93648548092cc"
        ],
        [
            "Proof with assumption.",
            "VernacProof",
            "3818bb3ab39692a4a644eb589df40d658a33426c"
        ],
        [
            "unfold Xlt.",
            "VernacExtend",
            "b7e5f67775a3156d7f07c59f5f42a994d4e5309b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (preord_trans _ _ XO) with y...",
            "VernacExtend",
            "9daeb21bc79679e338ccc330efb9db6e5a0b8c07"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply (preord_trans _ _ XO) with x...",
            "VernacExtend",
            "72ee2c5017a1f8774d6bed54c004097dd9ac32db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive sorted: forall n, Vector.t X n -> Prop := | sorted_nil: sorted Vector.nil | sorted_one x: sorted (Vector.cons x Vector.nil) | sorted_more (a b: X) n (t: Vector.t X n): Xle a b -> sorted (Vector.cons b t) -> sorted (Vector.cons a (Vector.cons b t)).",
            "VernacInductive",
            "0af264ca9d647a37ad3ed1416aec9b4b8c1aa43b"
        ],
        [
            "Hint Constructors sorted.",
            "VernacHints",
            "6b21e5a7c5626163879feae3086ee44b62bc0a04"
        ],
        [
            "Lemma sorted_cons x n (v: Vector.t X (S n)): Xle x (head v) -> sorted v -> sorted (Vector.cons x v).",
            "VernacStartTheoremProof",
            "adadc2d583aaa10af982953344d7e89bc5be4731"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v).",
            "VernacExtend",
            "f8cbea32ba55269597d916c612bc292ac8114a03"
        ],
        [
            "apply sorted_more...",
            "VernacExtend",
            "6ff45ba70843e90ef33495a0a837b0b964866bc6"
        ],
        [
            "rewrite <- eq_cons...",
            "VernacExtend",
            "5161abc9e11255afbfab8d4841a02a9e371d0877"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_cons' x n (v: Vector.t X n): (forall y, List.In y v -> Xle x y) -> sorted v -> sorted (Vector.cons x v).",
            "VernacStartTheoremProof",
            "654054d588cb0aadfacc0bdbfdbcbf27e7afeb14"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v; intros.",
            "VernacExtend",
            "24a0413fef221e7be034da773614b83ec73449db"
        ],
        [
            "apply sorted_one.",
            "VernacExtend",
            "befcdf7ea71a2e9cae57a427ee3620a4d8a33a5a"
        ],
        [
            "apply sorted_more...",
            "VernacExtend",
            "6ff45ba70843e90ef33495a0a837b0b964866bc6"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "left...",
            "VernacExtend",
            "bf4fd72477fff45e0940a41f06078165174dbd25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_cons_inv x n (v: Vector.t X (S n)): sorted (Vector.cons x v) -> Xle x (head v).",
            "VernacStartTheoremProof",
            "95def2e386ad28b9ae886e9147828147aaac80bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (eq_cons v) in H.",
            "VernacExtend",
            "9f0068cefe6189e44c9b1be18f775d3628b87737"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_tail x n (v: Vector.t X n): sorted (Vector.cons x v) -> sorted v.",
            "VernacStartTheoremProof",
            "6d15e3263bceed8682017b79d8a8172c4adf34e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H; auto.",
            "VernacExtend",
            "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_cons_inv' (x: X) n (xs: Vector.t X n): sorted (Vector.cons x xs) -> forall x', List.In x' xs -> Xle x x'.",
            "VernacStartTheoremProof",
            "e4dd5bd61e453f699577f0eeb4c0212a13ff6b79"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction xs.",
            "VernacExtend",
            "0e9eb6fc1f0dee078c23e7297de8adcefdbd4711"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False...",
            "VernacExtend",
            "a2889d4501f0ae3aea80adc3b5e37c1033b6a559"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "inversion_clear H...",
            "VernacExtend",
            "a23502606014528ad263a393402f8abc040cabee"
        ],
        [
            "apply IHxs...",
            "VernacExtend",
            "56e5afe2442fa170167561f17596604b5526fdc7"
        ],
        [
            "clear IHxs H1.",
            "VernacExtend",
            "9880a2602b925f227d2846732630435e6f7a241c"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "dependent inversion_clear xs.",
            "VernacExtend",
            "5231f1ad89260873bcecc720d7bf017eabeff62b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sorted_one.",
            "VernacExtend",
            "befcdf7ea71a2e9cae57a427ee3620a4d8a33a5a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sorted_more.",
            "VernacExtend",
            "76396729ebeef49112d13303e7124ea796a41522"
        ],
        [
            "apply (preord_trans _ _ XO) with h...",
            "VernacExtend",
            "67fbcee885fba93db8d2ef674f10c94e22686322"
        ],
        [
            "apply (sorted_cons_inv H).",
            "VernacExtend",
            "ef29ec6a05de4793d61db2bec304de16128d6d1d"
        ],
        [
            "apply (sorted_cons_inv (sorted_tail H)).",
            "VernacExtend",
            "026b8b18728859fc15db26e180bbcce30c057a72"
        ],
        [
            "apply (sorted_tail (sorted_tail H)).",
            "VernacExtend",
            "02c21be992326fd40020c4a253c4c0bfbe1a18fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_app (v w: List.list X): sorted v -> sorted w -> (forall x y, List.In x v -> List.In y w -> Xle x y) -> sorted (List.app v w).",
            "VernacStartTheoremProof",
            "6e0c43d11a58df14fc71245096910b73650ae60b"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v...",
            "VernacExtend",
            "913c8d030ea5c4eb4c93cb5fbc3d86b80a72aa3c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply sorted_cons'.",
            "VernacExtend",
            "e3f4182ca7fd80d7bcdfd8f36b24eccce764be38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "clear IHv.",
            "VernacExtend",
            "f215b910ba70cd97323c3c83912e70e108df77bc"
        ],
        [
            "rewrite list_round_trip in H2.",
            "VernacExtend",
            "0d5bb59d3acf15df1c8d41e20159139f8ba82e5e"
        ],
        [
            "destruct (List.in_app_or v w y H2).",
            "VernacExtend",
            "05c5978fe47e74f3b9396f949fab42a4a7a21a61"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply (sorted_cons_inv' H).",
            "VernacExtend",
            "d7354a0e9717162b99037856d7c12039dc638187"
        ],
        [
            "rewrite list_round_trip...",
            "VernacExtend",
            "44b59f6c312c0ac4b1e1aae2995009c447b6fcb3"
        ],
        [
            "apply H1...",
            "VernacExtend",
            "f2ea01c51cb4b26db904e99ad30a5e69a6ad5377"
        ],
        [
            "left...",
            "VernacExtend",
            "bf4fd72477fff45e0940a41f06078165174dbd25"
        ],
        [
            "apply IHv...",
            "VernacExtend",
            "f5e1b7d17e2c2e75e7200ff16c489842d15f9527"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply sorted_tail with a...",
            "VernacExtend",
            "03b04dfc9ff82472ca0a1b2f75ac0035d4373006"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H1...",
            "VernacExtend",
            "f2ea01c51cb4b26db904e99ad30a5e69a6ad5377"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_le_indices_le_values n (v: Vector.t X n): sorted v -> forall (i j: natBelow n), i <= j -> Xle (nth v i) (nth v j).",
            "VernacStartTheoremProof",
            "a9522a654eaffc792550e85401bcc0d2fb9f2d95"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "intros s.",
            "VernacExtend",
            "f24a724dc5e422652c0513af3278d221ab4df04a"
        ],
        [
            "induction s.",
            "VernacExtend",
            "07b2950967b17efa9314973f4d8444c5caabf173"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion i.",
            "VernacExtend",
            "a3f584c98e30d334d7b2a213b0bc86256be4e275"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (nb1 i).",
            "VernacExtend",
            "d15923533806e9885eaa0e331858c6a08a1466b5"
        ],
        [
            "rewrite (nb1 j).",
            "VernacExtend",
            "f600f19c6c3565e069a15016658f0acba58cdcb5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply preord_refl...",
            "VernacExtend",
            "95026405a0f0fe8f7d3c884f685ee9a17993fdc1"
        ],
        [
            "intro i.",
            "VernacExtend",
            "b1ef927907197c9312276e13d6fd790a77b5f54e"
        ],
        [
            "pattern i.",
            "VernacExtend",
            "847ac8e4aa1efe3854cab34d9c895896fd8a8919"
        ],
        [
            "apply natBelow_S_inv'; [idtac | intro m]; intro j; pattern j; apply natBelow_S_inv'.",
            "VernacExtend",
            "5a905e5a2294defea0e2786ffa0142933a2cef7b"
        ],
        [
            "rewrite nth_0.",
            "VernacExtend",
            "4c62ae4d3b630a3fb43e94096565df813748f670"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply preord_refl...",
            "VernacExtend",
            "95026405a0f0fe8f7d3c884f685ee9a17993fdc1"
        ],
        [
            "rewrite nth_0.",
            "VernacExtend",
            "4c62ae4d3b630a3fb43e94096565df813748f670"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nth_S.",
            "VernacExtend",
            "ec0c34a1b3958fee9ae0f574c7f8aa4c22c64ba7"
        ],
        [
            "apply (preord_trans _ _ XO) with (nth (Vector.cons b t) (nb0 _))...",
            "VernacExtend",
            "5ad933eae4e00979048cf2f99f031df64a087108"
        ],
        [
            "rewrite val_Snb.",
            "VernacExtend",
            "bc0722a92099b57196ae45d1e24700e4d4f3a497"
        ],
        [
            "simpl @nb_val.",
            "VernacExtend",
            "94aa802201f0a0b67b960157de892e07828c6b42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "do 2 rewrite val_Snb.",
            "VernacExtend",
            "c295b2df4edca5ec4f2aa3b827938f9eb006f27e"
        ],
        [
            "do 2 rewrite nth_S...",
            "VernacExtend",
            "af4d8c301d1876240bbeb057cc948f8e74df6956"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_lt_values_lt_indices n (v: Vector.t X n): sorted v -> forall i j, Xlt (nth v i) (nth v j) -> i < j.",
            "VernacStartTheoremProof",
            "46c0e56fdb1c568e43f4351cedb501bbac0d73e9"
        ],
        [
            "Proof with auto with arith.",
            "VernacProof",
            "007741178d53d6a043487bfdd1e6c77ea6388468"
        ],
        [
            "intros s.",
            "VernacExtend",
            "f24a724dc5e422652c0513af3278d221ab4df04a"
        ],
        [
            "induction s.",
            "VernacExtend",
            "07b2950967b17efa9314973f4d8444c5caabf173"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion i.",
            "VernacExtend",
            "a3f584c98e30d334d7b2a213b0bc86256be4e275"
        ],
        [
            "intros i j.",
            "VernacExtend",
            "9b4db6c7cccf562d910832cc8dbf5907416668e2"
        ],
        [
            "rewrite (nb1 i).",
            "VernacExtend",
            "d15923533806e9885eaa0e331858c6a08a1466b5"
        ],
        [
            "rewrite (nb1 j).",
            "VernacExtend",
            "f600f19c6c3565e069a15016658f0acba58cdcb5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply (Xlt_irrefl H).",
            "VernacExtend",
            "0c4a466372b2fe5cb4a035d38cd1888f55a9825e"
        ],
        [
            "intro i.",
            "VernacExtend",
            "b1ef927907197c9312276e13d6fd790a77b5f54e"
        ],
        [
            "pattern i.",
            "VernacExtend",
            "847ac8e4aa1efe3854cab34d9c895896fd8a8919"
        ],
        [
            "apply natBelow_S_inv'; [idtac | intro m]; intro j; pattern j; apply natBelow_S_inv'.",
            "VernacExtend",
            "5a905e5a2294defea0e2786ffa0142933a2cef7b"
        ],
        [
            "rewrite nth_0.",
            "VernacExtend",
            "4c62ae4d3b630a3fb43e94096565df813748f670"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply (Xlt_irrefl H0).",
            "VernacExtend",
            "b7580a9059d4b31ca3070ee7934db11333545a62"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite val_nb0.",
            "VernacExtend",
            "2fa2be32f45aaf124983cbdc269b7d36bd74bb89"
        ],
        [
            "rewrite val_Snb...",
            "VernacExtend",
            "eaa86af6335f585bebd6d00413e05d861905abe9"
        ],
        [
            "rewrite nth_S.",
            "VernacExtend",
            "ec0c34a1b3958fee9ae0f574c7f8aa4c22c64ba7"
        ],
        [
            "rewrite nth_0.",
            "VernacExtend",
            "4c62ae4d3b630a3fb43e94096565df813748f670"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply (Xle_nlt H).",
            "VernacExtend",
            "fb67a8fb0bbcc8099bbfd9e427d447bf9c654a87"
        ],
        [
            "apply Xle_lt_trans with (nth (Vector.cons b t) m)...",
            "VernacExtend",
            "3dd2050b7ff4b7bcb95d0a7e751215924f7ab7a0"
        ],
        [
            "apply (sorted_le_indices_le_values s (nb0 _) m)...",
            "VernacExtend",
            "05a4de5f1f8a7a73861ef2cf25224fb9fb8d0a2d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "do 2 rewrite nth_S.",
            "VernacExtend",
            "9ebcca5a5fbe9a30fb5ba68cdd66e2ccd5c83447"
        ],
        [
            "do 2 rewrite val_Snb...",
            "VernacExtend",
            "b909bcac260d020d6a341c75b67a899f9a553c50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable XleDec: forall x y, { Xle x y } + { Xle y x }.",
            "VernacAssumption",
            "dd21eaf3262cb96244836b55e5263b89f31da033"
        ],
        [
            "Fixpoint insert_ordered (x: X) n: Vector.t X n -> Vector.t X (S n) := match n return Vector.t X n -> Vector.t X (S n) with | 0 => fun _ => Vector.cons x Vector.nil | S n' => fun v => if XleDec x (head v) then Vector.cons x v else Vector.cons (head v) (insert_ordered x (tail v)) end.",
            "VernacFixpoint",
            "59d05cb82b741752d96aceffcf6b5b30b2b87a7f"
        ],
        [
            "Hint Immediate perm_refl.",
            "VernacHints",
            "a72e21e47bbdea4755085b0f6fa50fd73e273509"
        ],
        [
            "Lemma insert_ordered_permutes x n (v: Vector.t X n): Permutation (insert_ordered x v) (Vector.cons x v).",
            "VernacStartTheoremProof",
            "bb0c77501c34495b4773a454f985cb10fec76f1e"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v; simpl...",
            "VernacExtend",
            "bf935092944db5cd626cff9e4912a72f81ad9098"
        ],
        [
            "destruct (XleDec x h)...",
            "VernacExtend",
            "148ceb1a4767eb0a400768b023aafc2ab603c4d7"
        ],
        [
            "apply perm_trans with (Vector.cons h (Vector.cons x v))...",
            "VernacExtend",
            "0da7a77cbb2d4e49f4ece351b4c1bc1556e38157"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_ordered_preserves_sorted n x (v: Vector.t X n): sorted v -> sorted (insert_ordered x v).",
            "VernacStartTheoremProof",
            "279d6f5c5628eebbd49c021e529b6ddb4213c5c1"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction v.",
            "VernacExtend",
            "10789bb90c6621e796afae189b61bc10f356257b"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (XleDec x h).",
            "VernacExtend",
            "e850da35681bdf73b61a3007535c2ef0a3407b5d"
        ],
        [
            "apply sorted_more...",
            "VernacExtend",
            "6ff45ba70843e90ef33495a0a837b0b964866bc6"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "rewrite (eq_nil v).",
            "VernacExtend",
            "98b4c1d11c2e101bba84e963978ecd5b124b208f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply sorted_more...",
            "VernacExtend",
            "6ff45ba70843e90ef33495a0a837b0b964866bc6"
        ],
        [
            "cset (IHv (sorted_tail H)).",
            "VernacExtend",
            "fed6f4756c25643e9ae24141e59be8597cd52d2c"
        ],
        [
            "clear IHv.",
            "VernacExtend",
            "f215b910ba70cd97323c3c83912e70e108df77bc"
        ],
        [
            "cset (eq_cons v).",
            "VernacExtend",
            "58352b4a0cff98a3f99add7db08f942e1c08d503"
        ],
        [
            "revert H1.",
            "VernacExtend",
            "f960614533a2a55b448cbf376832532eaf449c34"
        ],
        [
            "generalize (head v).",
            "VernacExtend",
            "0500c47488c7fd6fa59b93b8ab1c93c534fbae4a"
        ],
        [
            "generalize (tail v).",
            "VernacExtend",
            "46c5cbc4086effc2e427d98463d09cd8713aceda"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct (XleDec x x1).",
            "VernacExtend",
            "6653060e36baaca1bfd093997b33533c44c91c68"
        ],
        [
            "apply sorted_more...",
            "VernacExtend",
            "6ff45ba70843e90ef33495a0a837b0b964866bc6"
        ],
        [
            "apply sorted_more...",
            "VernacExtend",
            "6ff45ba70843e90ef33495a0a837b0b964866bc6"
        ],
        [
            "apply (sorted_cons_inv H).",
            "VernacExtend",
            "ef29ec6a05de4793d61db2bec304de16128d6d1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint insertion_sort n: Vector.t X n -> Vector.t X n := match n return Vector.t X n -> Vector.t X n with | 0 => fun _ => Vector.nil | S n' => fun v => insert_ordered (head v) (insertion_sort (tail v)) end.",
            "VernacFixpoint",
            "5442fd989a4a1cf92cc3c15dfa01f49693834141"
        ],
        [
            "Lemma insertion_sort_sorts n (l: Vector.t X n): sorted (insertion_sort l).",
            "VernacStartTheoremProof",
            "5b7ef1d913f1c7c8c817f64afd607f30868e0927"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n; intros.",
            "VernacExtend",
            "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
        ],
        [
            "rewrite (eq_nil l)...",
            "VernacExtend",
            "84adafbe11bdb197ef50322988d589e00c61c3c0"
        ],
        [
            "rewrite (eq_cons l).",
            "VernacExtend",
            "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply insert_ordered_preserves_sorted...",
            "VernacExtend",
            "418153e108a54f39de7f476d52aab0c3e0a7369a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insertion_sort_permutes n (l: Vector.t X n): Permutation (insertion_sort l) l.",
            "VernacStartTheoremProof",
            "c4365018a521eca59288a638f6bb21438ce31434"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l...",
            "VernacExtend",
            "a4571710fc634c72b7b07ca630627ad571eee64e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply perm_trans with (Vector.cons h (insertion_sort l))...",
            "VernacExtend",
            "b9ecb5298b656f96386e95dd1b1da5a6f70725c6"
        ],
        [
            "apply insert_ordered_permutes.",
            "VernacExtend",
            "761617e760c0dcb0eadc0065b940546d04aa665f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End contents.",
            "VernacEndSegment",
            "28f505b78f584feda38f14dd967d87712e3c7f31"
        ]
    ],
    "proofs": [
        {
            "name": "eq_nil",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "cut (forall n (v: Vector.t A n), match n return Vector.t A n -> Prop with 0 => fun v => v = Vector.nil | _ => fun _ => True end v).",
                        "VernacExtend",
                        "115155f930146e0bd7afb36824db1130c27a8a83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H 0 v).",
                        "VernacExtend",
                        "01964791df0892730d5a6706b2f361bdb837c0d5"
                    ]
                },
                {
                    "command": [
                        "clear v; destruct v; auto.",
                        "VernacExtend",
                        "1279b733a4ea02e93d52c9bb7c9ed5da85b4d9e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_cons",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "cut (forall n (v: Vector.t A n), match n return Vector.t A n -> Prop with | 0 => fun _ => True | S m' => fun w => w = Vector.cons (head w) (tail w) end v).",
                        "VernacExtend",
                        "c92cbf7389df73cabc24583b5475b36d7109908d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H (S n) v).",
                        "VernacExtend",
                        "ab67e1fa854ad9bb8d59f0b5a9d8b202bba54b6f"
                    ]
                },
                {
                    "command": [
                        "clear v; destruct v; auto.",
                        "VernacExtend",
                        "1279b733a4ea02e93d52c9bb7c9ed5da85b4d9e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Vcons_eq",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_rect",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "induction n; intros.",
                        "VernacExtend",
                        "e8b82b855d5905dc30933ce159f82ecc1428bcaa"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_nil v).",
                        "VernacExtend",
                        "98b4c1d11c2e101bba84e963978ecd5b124b208f"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_nil w).",
                        "VernacExtend",
                        "15446758740863112d87d7c99de4f74fd5e2cc3f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons v).",
                        "VernacExtend",
                        "f8cbea32ba55269597d916c612bc292ac8114a03"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons w).",
                        "VernacExtend",
                        "ae6e52e0e858cf391bcecc18e51ce2e48ab49136"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_map",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "induction v; intros; inversion_clear H; [left; subst | right]; auto.",
                        "VernacExtend",
                        "1857ae89f00743ba8a9f8632125e3dbb4cc597e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natBelow0_rect",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_Snb",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_nb0",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natBelow_S_inv'",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (natBelow_S_inv x); [destruct s | idtac]; subst; auto.",
                        "VernacExtend",
                        "7343acf7d1f2c1af6c643ff36e462fc27c83c5f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_0",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons v).",
                        "VernacExtend",
                        "f8cbea32ba55269597d916c612bc292ac8114a03"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_S",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons v).",
                        "VernacExtend",
                        "f8cbea32ba55269597d916c612bc292ac8114a03"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Snb.",
                        "VernacExtend",
                        "d904aab2f25db251ff71bd53bf766c78779be20b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nb1",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply natBelow_unique.",
                        "VernacExtend",
                        "88afa954969f92bf0159c5792f1bbffd05e9f20c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "dependent simple inversion n.",
                        "VernacExtend",
                        "33a5789b98e85f3acce5a3b9936b5b3176c9b03c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nb_val_eq_rec_r",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold eq_rec_r, eq_rec, eq_rect.",
                        "VernacExtend",
                        "8d852d3702656b2ea638339a4c388b8b6df1a648"
                    ]
                },
                {
                    "command": [
                        "case (sym_eq h).",
                        "VernacExtend",
                        "5cce7d0d069643df4b43db2b480c355d9447d1bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_refl",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "induction v; auto.",
                        "VernacExtend",
                        "ad1a0edbe8a7ccbfd807818e177cbf69a5fea1da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_head",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_tail",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SkipList_tail",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons v).",
                        "VernacExtend",
                        "f8cbea32ba55269597d916c612bc292ac8114a03"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_tail.",
                        "VernacExtend",
                        "371e194736c1145346eba54bd43cf5b3366791d9"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_refl.",
                        "VernacExtend",
                        "0e0ca763b5ef5653b622d12390fa694d1f51fc58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SkipList_remove",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "revert l.",
                        "VernacExtend",
                        "11a722880df1bc386870f9ce37f36e8be2871e9c"
                    ]
                },
                {
                    "command": [
                        "pattern n, nb.",
                        "VernacExtend",
                        "15701186bc5fd7eff9c6723fd3686600dbb2a159"
                    ]
                },
                {
                    "command": [
                        "apply natBelow_rect_S.",
                        "VernacExtend",
                        "284d66a32bf0c8571339a255015dda0f69ff0d30"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_head.",
                        "VernacExtend",
                        "4e261d9427e417e686c0176a18e662ef1f9ef20e"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_tail.",
                        "VernacExtend",
                        "371e194736c1145346eba54bd43cf5b3366791d9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct v.",
                        "VernacExtend",
                        "6f1469bc2ceb2b76ca58f6ada86b5fc3c1e42ed3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons l).",
                        "VernacExtend",
                        "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_head.",
                        "VernacExtend",
                        "f34c106239e0a0c0d9cfe4dd4c9c0afcdae0e9e3"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_tail.",
                        "VernacExtend",
                        "371e194736c1145346eba54bd43cf5b3366791d9"
                    ]
                },
                {
                    "command": [
                        "cset (remove_tail (S v) p l).",
                        "VernacExtend",
                        "d32dbec13f1222d6500a1e2f214c4f848b446364"
                    ]
                },
                {
                    "command": [
                        "simpl plus in *.",
                        "VernacExtend",
                        "bdef8f193d64c559667ae0fd2ea3ca1736af5ce6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "cset (H (tail l)).",
                        "VernacExtend",
                        "91da313b52dc6b02af12d669c862b3e37932a951"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_trans with (List.cons (head l) (tail l)).",
                        "VernacExtend",
                        "8d633163165c86b1d4a40f8a867380f56600d0e2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_head.",
                        "VernacExtend",
                        "f34c106239e0a0c0d9cfe4dd4c9c0afcdae0e9e3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons l).",
                        "VernacExtend",
                        "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply SkipList_refl.",
                        "VernacExtend",
                        "0e0ca763b5ef5653b622d12390fa694d1f51fc58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_plus_n_Sm",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "induction n; simpl.",
                        "VernacExtend",
                        "1f285429454cbe9bad08c3e1d2fa969e99890bea"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eq_S.",
                        "VernacExtend",
                        "8ef0b219ea0189c2d80bb55d03c4c9f24beca469"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "nats_S",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_nats_0",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply In_as_nb_val.",
                        "VernacExtend",
                        "e056a3d3bd169762f9b793d557dcf5257e8101d6"
                    ]
                },
                {
                    "command": [
                        "simpl in x.",
                        "VernacExtend",
                        "72f6afab6fdc6081cee3f8fe984a0d037f4d319e"
                    ]
                },
                {
                    "command": [
                        "dependent inversion_clear x.",
                        "VernacExtend",
                        "26521fa1fa54dc0f3f28e9b35e71f5479d3c3052"
                    ]
                },
                {
                    "command": [
                        "simpl @nb_val.",
                        "VernacExtend",
                        "94aa802201f0a0b67b960157de892e07828c6b42"
                    ]
                },
                {
                    "command": [
                        "cset (In_nb_nats v p 0).",
                        "VernacExtend",
                        "8d165d26f7ec805012d7254bdcad2903b521f024"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r in H.",
                        "VernacExtend",
                        "8c712dc1e6c60a034320685961000c04955a90d2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S_rect",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons v).",
                        "VernacExtend",
                        "f8cbea32ba55269597d916c612bc292ac8114a03"
                    ]
                },
                {
                    "command": [
                        "apply X.",
                        "VernacExtend",
                        "1a06263bf241d2c272a11be0f0a1522334cc2c93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_nb_nats_inv",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "unfold nb_nats.",
                        "VernacExtend",
                        "2c6f7c838846d5fcaf557b35968e853735ac1d82"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- List_map in H.",
                        "VernacExtend",
                        "6bfd2eafb1ed647b4e669fe5dd740a409d1a9eda"
                    ]
                },
                {
                    "command": [
                        "destruct (In_map_inv H).",
                        "VernacExtend",
                        "4ec93ea02e9f5639a2ee38e53ea38cd0f5abdd88"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply In_nats_inv.",
                        "VernacExtend",
                        "428270ce9363e8e3b875f267c4b40d0408e4cb63"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tail_map",
            "line_nb": 688,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons l).",
                        "VernacExtend",
                        "14f7236cc11e89585c4f8f5dce87ea04b21a7c68"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tail_cons",
            "line_nb": 693,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nth_nats_0",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply natBelow_unique.",
                        "VernacExtend",
                        "88afa954969f92bf0159c5792f1bbffd05e9f20c"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_nats.",
                        "VernacExtend",
                        "34e50b849928c071b1ea09bcf15d4f558d458b5b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "val_plusnb",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "dependent inversion nb.",
                        "VernacExtend",
                        "db8a89cdebc1be9ec51ab6438aacd41a524bf744"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite nb_val_eq_rec_r.",
                        "VernacExtend",
                        "e1f233becfa13f3ed91937d2d3f1199c3ed0f40a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_eq",
            "line_nb": 761,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_cons",
            "line_nb": 824,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Xle_nlt",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Xlt_irrefl",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "set (preord_refl _ _ XO x).",
                        "VernacExtend",
                        "f07212e08d58c0a83293107255e3062f99c56ed8"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_cons_inv",
            "line_nb": 947,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_cons v) in H.",
                        "VernacExtend",
                        "9f0068cefe6189e44c9b1be18f775d3628b87737"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_tail",
            "line_nb": 953,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto.",
                        "VernacExtend",
                        "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}