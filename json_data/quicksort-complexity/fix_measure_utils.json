{
    "filename": "fix_measure_utils.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import Le.",
            "VernacRequire",
            "838bfe0aac98b4a25730898d79830c3f8329aec1"
        ],
        [
            "Require Import Lt.",
            "VernacRequire",
            "fe47d80ebda42c5f075a36fb67288742f8593767"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Recdef.",
            "VernacRequire",
            "8ffa9cbe33b0c9742b324b18d68b10eb03ac2ead"
        ],
        [
            "Require Coq.Program.Wf.",
            "VernacRequire",
            "2817dd29c54e1c78a433a2c61b378a0ae4fe76ae"
        ],
        [
            "Require List.",
            "VernacRequire",
            "a1d54140926e7890ab05a709dad185ab68598100"
        ],
        [
            "Section measure_wf.",
            "VernacBeginSection",
            "c56541605973cf05d8aa9d4c54080e166fd67c92"
        ],
        [
            "Variables T M: Set.",
            "VernacAssumption",
            "afcb27796311b32c6001d3bdb42571b4a13b77f1"
        ],
        [
            "Variable R: M -> M -> Prop.",
            "VernacAssumption",
            "367d20bc836040c42aeaf5f25abbe1e460017301"
        ],
        [
            "Hypothesis wf: well_founded R.",
            "VernacAssumption",
            "c51930cfb3113314348e10ebd1ef7755e593a612"
        ],
        [
            "Variable m: T -> M.",
            "VernacAssumption",
            "9fac99f57dc33f870cd08311c3237cd0ae3e9697"
        ],
        [
            "Definition MR (x y: T): Prop := R (m x) (m y).",
            "VernacDefinition",
            "46d954e380753bb3e79748de3e6e92c849863a84"
        ],
        [
            "Lemma measure_wf: well_founded MR.",
            "VernacStartTheoremProof",
            "8366521af5829dab9f936883a42f016f08c6d3e3"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold well_founded.",
            "VernacExtend",
            "e54483b8d4c15affa5848e44e1a0e79bf38074ce"
        ],
        [
            "cut (forall a: M, forall a0: T, m a0 = a -> Acc MR a0).",
            "VernacExtend",
            "e72fb7c087470fd2457ecb2ddf80af88447f4a21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (m a))...",
            "VernacExtend",
            "69a25fa88e1168800de9b517fc34d951e4a725b1"
        ],
        [
            "apply (@well_founded_ind M R wf (fun mm => forall a, m a = mm -> Acc MR a)).",
            "VernacExtend",
            "bf9607ef7dc796034a3076e97fe055b264793215"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Acc_intro.",
            "VernacExtend",
            "2b155962537e5aa33952f28b98ee9d20165727a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold MR in H1.",
            "VernacExtend",
            "139795fb92c627fcad76a02dbc71e9d82c55df76"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "apply (H (m y))...",
            "VernacExtend",
            "b94596dafe1808de7e7fd55e94e335e5ae1961cb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End measure_wf.",
            "VernacEndSegment",
            "5b4d63e9c0c45661fd8f18cbe14a25d794c2a205"
        ],
        [
            "Section Fix_measure_rects.",
            "VernacBeginSection",
            "f89f35b534ca67851f4d9b1b6ef6a4636cb075ea"
        ],
        [
            "Variable A: Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable R: A -> A -> Prop.",
            "VernacAssumption",
            "0d2b4236b120d599ff44dbf895c951c0abab01e8"
        ],
        [
            "Variable Rwf: well_founded R.",
            "VernacAssumption",
            "a6aa4cb96490df45e5935d64c699f55e68f37c89"
        ],
        [
            "Variable P: A -> Type.",
            "VernacAssumption",
            "628756d73f9ea95eb107647bbda9dd5c73aba0c1"
        ],
        [
            "Variable f: forall x: A, (forall y: { y: A | R y x }, P (proj1_sig y)) -> P x.",
            "VernacAssumption",
            "5546b0e14473099e9eaffe81158b23cf4327ceee"
        ],
        [
            "Lemma F_unfold x r: Wf.Fix_F_sub A R P f x r = f (fun y => Wf.Fix_F_sub A R P f (proj1_sig y) (Acc_inv r (proj2_sig y))).",
            "VernacStartTheoremProof",
            "28f86888bec077e7af3871992445e65ea50a03f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case r; auto.",
            "VernacExtend",
            "2b6e9cda65ff4c73bd1d4452c6964e035850d461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma F_sub_rect (Q: forall x, P x -> Type) (inv: forall x: A, (forall (y: A) (H: R y x) (a: Acc R y), Q y (Wf.Fix_F_sub A R P f y a)) -> forall (a: Acc R x), Q x (f (fun y: {y: A | R y x} => Wf.Fix_F_sub A R P f (proj1_sig y) (Acc_inv a (proj2_sig y))))) : forall x a, Q _ (Wf.Fix_F_sub A R P f x a).",
            "VernacStartTheoremProof",
            "5f5a431d93281310de2ac5b62c36dc2f90725b77"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "set (R' := fun (x: A) => forall a, Q _ (Wf.Fix_F_sub A R P f x a)).",
            "VernacExtend",
            "d40448f810bc33e60746d11b2641a1c19b45a04b"
        ],
        [
            "cut (forall x, R' x)...",
            "VernacExtend",
            "50651c5c6bc89130facdf46daf2715ecb5e281f4"
        ],
        [
            "apply (well_founded_induction_type Rwf).",
            "VernacExtend",
            "49613b330325f0c70b8f8120b6e7955b7e774ee1"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite F_unfold...",
            "VernacExtend",
            "23060f512c5a166b87dfaa086bef14e921b30205"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis equiv_lowers: forall x0 (g h: forall x: {y: A | R y x0}, P (proj1_sig x)), (forall x p p', g (exist (fun y: A => R y x0) x p) = h (exist _ x p')) -> f g = f h.",
            "VernacAssumption",
            "e4d326c5437142e6806c56b6e9281ebb5fdc4b2b"
        ],
        [
            "Lemma eq_F_sub x: forall (a a': Acc R x), Wf.Fix_F_sub A R P f x a = Wf.Fix_F_sub A R P f x a'.",
            "VernacStartTheoremProof",
            "c5abe3c3549e15c0a491531cee321a604267f106"
        ],
        [
            "intro a.",
            "VernacExtend",
            "14896994838b4c124c1f1123678e1f3468f5e2ea"
        ],
        [
            "pattern x, (Wf.Fix_F_sub A R P f x a).",
            "VernacExtend",
            "a1b987a8c389fd51e26cf81327b1a810b18ff51c"
        ],
        [
            "apply F_sub_rect.",
            "VernacExtend",
            "bf06fec4c729e04c43e8bc5dafed1c98f0e1c9f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite F_unfold.",
            "VernacExtend",
            "ece4763cf25796ca38565022592f89fc6b85105d"
        ],
        [
            "apply equiv_lowers.",
            "VernacExtend",
            "7cd367da170e6596e68a02ba8b77003117687345"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unfold x: Wf.Fix_sub A R Rwf P f x = f (fun y => Wf.Fix_sub A R Rwf P f (proj1_sig y)).",
            "VernacStartTheoremProof",
            "0721462ea3f5ac06a2420b58cc6926073224db27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Wf.Fix_sub.",
            "VernacExtend",
            "92f8cbf0716bbbe65dd0a6931bce844511188251"
        ],
        [
            "rewrite F_unfold.",
            "VernacExtend",
            "ece4763cf25796ca38565022592f89fc6b85105d"
        ],
        [
            "apply equiv_lowers.",
            "VernacExtend",
            "7cd367da170e6596e68a02ba8b77003117687345"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eq_F_sub.",
            "VernacExtend",
            "dab670e5b35177d4dea73d0cd157112517ec7b7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect (Q: forall x, P x -> Type) (inv: forall (x: A) (H: forall (y: A), R y x -> Q y (Wf.Fix_sub A R Rwf P f y)) (a: Acc R x), Q x (f (fun y: {y: A | R y x} => Wf.Fix_sub A R Rwf P f (proj1_sig y)))) : forall x, Q _ (Wf.Fix_sub A R Rwf P f x).",
            "VernacStartTheoremProof",
            "5ffa96e7236cd4df20df6cbbc077d585f9092910"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold Wf.Fix_sub.",
            "VernacExtend",
            "92f8cbf0716bbbe65dd0a6931bce844511188251"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply F_sub_rect.",
            "VernacExtend",
            "bf06fec4c729e04c43e8bc5dafed1c98f0e1c9f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall y: A, R y x0 -> Q y (Wf.Fix_F_sub A R P f y (Rwf y)))...",
            "VernacExtend",
            "60c245b42c52d2c8da46a2fd04ced1a541076a44"
        ],
        [
            "set (inv x0 X0 a).",
            "VernacExtend",
            "e0a8cd577c9eab663631ad7b9b4d06cb06a65b9a"
        ],
        [
            "clearbody q.",
            "VernacExtend",
            "2121a92629fcc53efb0118b970a516e2818535e4"
        ],
        [
            "rewrite <- (equiv_lowers (fun y: {y: A | R y x0} => Wf.Fix_F_sub A R P f (proj1_sig y) (Rwf (proj1_sig y))) (fun y: {y: A | R y x0} => Wf.Fix_F_sub A R P f (proj1_sig y) (Acc_inv a (proj2_sig y))))...",
            "VernacExtend",
            "1d059604b4f1043b9734abe2b895c7c3cc161912"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eq_F_sub.",
            "VernacExtend",
            "dab670e5b35177d4dea73d0cd157112517ec7b7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fix_measure_rects.",
            "VernacEndSegment",
            "ae4c2346c49fe818ac71bcc9c9975c4373a1fb4a"
        ],
        [
            "Module Example.",
            "VernacDefineModule",
            "c3683f22b22d5a63bf22c415ede95b67ca722413"
        ],
        [
            "Import List.",
            "VernacImport",
            "714b0c1d5be3cea55743185aecdf9fb813bbb1fa"
        ],
        [
            "Definition tail (l: list nat): list nat := match l with | nil => nil | _ :: t => t end.",
            "VernacDefinition",
            "d07242ea6ca493f03450c37b9e3d527f36e453fe"
        ],
        [
            "Program Fixpoint bla (l: list nat) {measure (length l) on lt}: nat := match l with | nil => 3 | _ => bla (tail l) + 2 end.",
            "VernacFixpoint",
            "ba42cd82d75f2faa3ba158544df8d5a7a3fce4c2"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall x, 3 <= bla x.",
            "VernacDefinition",
            "707e56a8333e80429c0a8df42f792eefbd0b80b0"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "pattern (bla x).",
            "VernacExtend",
            "1393125c69fd2eb73de4f332be361ce05b28a659"
        ],
        [
            "set (fun n : nat => 3 <= n).",
            "VernacExtend",
            "09273601ffdc7cbfbc61fce17794e9f5a5cd85fa"
        ],
        [
            "unfold bla.",
            "VernacExtend",
            "059de217217a54be111d6c61188b44a7ef3f9da3"
        ],
        [
            "generalize x.",
            "VernacExtend",
            "9f4cd42877a803c4bca301f1a36acd2e7bec3480"
        ],
        [
            "clear x.",
            "VernacExtend",
            "55ba34b53c4f71a4da16f9a2abf1837110688e06"
        ],
        [
            "apply rect; intros.",
            "VernacExtend",
            "72f03f9f833a16c3a8debea609f13f99d78dfbb3"
        ],
        [
            "destruct x0...",
            "VernacExtend",
            "3dc81ee3f6f61c6a091f66e987026c21574e3040"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct x...",
            "VernacExtend",
            "7765274004a21ba6bfb7c6c03b9ce172306d36ac"
        ],
        [
            "replace 3 with (3 + 0)...",
            "VernacExtend",
            "d38584436e3cf00b5b627d651a7102cfc3ca17f4"
        ],
        [
            "apply plus_le_compat...",
            "VernacExtend",
            "9ec6ccd03ca61f8fdc740cea699e2792ec1e1e2b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Wf.MR...",
            "VernacExtend",
            "d3ec653ea69156749d2079d95d3ba571ab249b7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Example.",
            "VernacEndSegment",
            "2a4713d6f2be9f37c227b1b6435747483f5e07cb"
        ]
    ],
    "proofs": [
        {
            "name": "F_unfold",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case r; auto.",
                        "VernacExtend",
                        "2b6e9cda65ff4c73bd1d4452c6964e035850d461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_F_sub",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intro a.",
                        "VernacExtend",
                        "14896994838b4c124c1f1123678e1f3468f5e2ea"
                    ]
                },
                {
                    "command": [
                        "pattern x, (Wf.Fix_F_sub A R P f x a).",
                        "VernacExtend",
                        "a1b987a8c389fd51e26cf81327b1a810b18ff51c"
                    ]
                },
                {
                    "command": [
                        "apply F_sub_rect.",
                        "VernacExtend",
                        "bf06fec4c729e04c43e8bc5dafed1c98f0e1c9f4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite F_unfold.",
                        "VernacExtend",
                        "ece4763cf25796ca38565022592f89fc6b85105d"
                    ]
                },
                {
                    "command": [
                        "apply equiv_lowers.",
                        "VernacExtend",
                        "7cd367da170e6596e68a02ba8b77003117687345"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfold",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Wf.Fix_sub.",
                        "VernacExtend",
                        "92f8cbf0716bbbe65dd0a6931bce844511188251"
                    ]
                },
                {
                    "command": [
                        "rewrite F_unfold.",
                        "VernacExtend",
                        "ece4763cf25796ca38565022592f89fc6b85105d"
                    ]
                },
                {
                    "command": [
                        "apply equiv_lowers.",
                        "VernacExtend",
                        "7cd367da170e6596e68a02ba8b77003117687345"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eq_F_sub.",
                        "VernacExtend",
                        "dab670e5b35177d4dea73d0cd157112517ec7b7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bla_obligation_1",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}