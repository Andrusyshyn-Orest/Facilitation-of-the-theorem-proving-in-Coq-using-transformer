{
    "filename": "monoid_expec.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import expec.",
            "VernacRequire",
            "6108876ad7046f754b0250b41afb624b59204af9"
        ],
        [
            "Require Import monoid_monad_trans.",
            "VernacRequire",
            "4bb2bf1c803b5281d50c61057d2ecff387723de8"
        ],
        [
            "Require Import monoid_tree_monad.",
            "VernacRequire",
            "df02db82b6b0077758f8e701413ed84177732f77"
        ],
        [
            "Require Import Rdefinitions.",
            "VernacRequire",
            "3a03b10fed3598adbe116af27291199560a79811"
        ],
        [
            "Require Import monads.",
            "VernacRequire",
            "5b2fd91685e0255ced6df1c87a652a12b8990a39"
        ],
        [
            "Require Import util.",
            "VernacRequire",
            "4430f87d7649f96d1418f130d57967666d56d84f"
        ],
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import sums_and_averages.",
            "VernacRequire",
            "446558af055a369398fd661d2b300c36d92b3eb6"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import list_utils.",
            "VernacRequire",
            "f5ce54076a68b3ca9f48d4de158eadf0961b9e1f"
        ],
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require ne_tree_monad.",
            "VernacRequire",
            "3ef29c4b69e7e3bdc2f752c7bce1bce86d9cb8f2"
        ],
        [
            "Arguments fst {A B}.",
            "VernacArguments",
            "9396e00ae562adef534e9f366198411e8711d82e"
        ],
        [
            "Definition map_fst (A B C: Set) (f: A -> B) (p: A * C): B * C := (f (fst p), snd p).",
            "VernacDefinition",
            "196643e38b430e0a021bfb534e5f853ba71594f8"
        ],
        [
            "Section contents.",
            "VernacBeginSection",
            "64247bb134c943946794e7969d57832818b1ace7"
        ],
        [
            "Variables (m: Monoid) (ms: m -> nat).",
            "VernacAssumption",
            "177dfe91254e76bda983798729b052ff21ee0c54"
        ],
        [
            "Definition monoid_expec {A: Set}: MonoidMonadTrans.M m ne_tree_monad.ext A -> R := expec (ms \u2218 (fst (B:=_:Set))).",
            "VernacDefinition",
            "bb3cd16549d195ff48023bea2114f70bac7ab89b"
        ],
        [
            "Lemma monoid_expec_bind_leaf (X Y: Set) (f: X -> MonoidMonadTrans.M m ne_tree_monad.ext Y) (n: prod m X): monoid_expec (@bind (MonoidMonadTrans.M m ne_tree_monad.ext) _ _ (ne_tree.Leaf n) f) = expec (ms \u2218 monoid_mult m (fst n) \u2218 (fst (B:=_:Set))) (f (snd n)).",
            "VernacStartTheoremProof",
            "409bd206743a715aaea1d1638268f1c8e96b27e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold monoid_expec.",
            "VernacExtend",
            "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
        ],
        [
            "rewrite MonoidMonadTrans.bind_toLower'.",
            "VernacExtend",
            "97b01f47b54f28dc13d6a394c58faabe854c68d1"
        ],
        [
            "rewrite ne_tree_monad.bind_Leaf.",
            "VernacExtend",
            "90330d6988e4bff375ac36eec4e42329702201d6"
        ],
        [
            "simpl @ret.",
            "VernacExtend",
            "26b84e2f76b57122b98b57144cadc12ba75db988"
        ],
        [
            "simpl mon.",
            "VernacExtend",
            "72809c2b3ce4fde7b925a7c1d7fe6e886d654b52"
        ],
        [
            "rewrite expec_bind_leaf.",
            "VernacExtend",
            "3849f7fc7cca3c65da67c94e5b655ddc03cf643b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis mh: monoidHomo m NatAddMonoid ms.",
            "VernacAssumption",
            "38fba3dfbc89e653551586a9dd6b64c613fe24f4"
        ],
        [
            "Definition monoid_expec_sum (T U: Set) (g: T -> MonoidMonadTrans.M m ne_tree_monad.ext U): list T -> R := Rsum \u2218 map (monoid_expec \u2218 g).",
            "VernacDefinition",
            "a3e3efa2fd60e2dfd295bccf855b8d89f21b19aa"
        ],
        [
            "Lemma monoid_expec_sum_ext (T U: Set) (f g: T -> MonoidMonadTrans.M m ne_tree_monad.ext U): ext_eq f g -> ext_eq (monoid_expec_sum f) (monoid_expec_sum g).",
            "VernacStartTheoremProof",
            "d00cec41c4c2a016c167258f1d6d602b33726025"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold monoid_expec_sum.",
            "VernacExtend",
            "14674f2e6504f2c758098f76b2f73ad5947b9812"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply map_ext.",
            "VernacExtend",
            "d650e1a07594e03fb46b651b28db84dff21ba943"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoid_expec_Node_map (A B: Set) (f: A -> MonoidMonadTrans.M m ne_tree_monad.ext B) (l: ne_list.L A): monoid_expec (ne_tree.Node (ne_list.map f l)) = monoid_expec_sum f l / INR (length l).",
            "VernacStartTheoremProof",
            "99e70821b23fb84a0a2be972185f425d7c9f5d6f"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold monoid_expec, monoid_expec_sum.",
            "VernacExtend",
            "a1ed078e21560b4343ea5fa94bd5e4ad9acb09ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite expec_Node.",
            "VernacExtend",
            "0d1591bde411dea29c85526cce64aa2c816112da"
        ],
        [
            "rewrite ne_list.map_map.",
            "VernacExtend",
            "ddf48628e25707617d370af1fe670083651e7a84"
        ],
        [
            "unfold Ravg.",
            "VernacExtend",
            "24a65c045cc339f784acd9fa7a88dd208eeedc89"
        ],
        [
            "rewrite ne_list.map_length.",
            "VernacExtend",
            "083f4b625b40f7d684db93a6a86d4e7fcb6c0ac8"
        ],
        [
            "unfold monoid_expec.",
            "VernacExtend",
            "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
        ],
        [
            "rewrite ne_list.plain_map...",
            "VernacExtend",
            "9482e96f2a77f0f4f69b10dc1faed9bcc4f0ab12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoid_expec_ret (A: Set) (a: A): monoid_expec (ret a) = 0.",
            "VernacStartTheoremProof",
            "6ea32e32fd8ca03239c643fa5de9b1464a9a0eec"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold monoid_expec.",
            "VernacExtend",
            "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
        ],
        [
            "unfold expec, compose.",
            "VernacExtend",
            "3c7436d4e08fd4300c99decd3211753598ed2a77"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (monoidHomo_zero mh)...",
            "VernacExtend",
            "fd8e04a792e19b9a42ff1308fcd674d0cb3c5adc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoid_expec_bind_leaf_plus (X Y: Set) (f: X -> MonoidMonadTrans.M m ne_tree_monad.ext Y) (n: prod m X): monoid_expec (@bind (MonoidMonadTrans.M m ne_tree_monad.ext) _ _ (ne_tree.Leaf n) f) = INR (ms (fst n)) + monoid_expec (f (snd n)).",
            "VernacStartTheoremProof",
            "217dc27ef415e0e403b09178ce97749c689fc084"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite monoid_expec_bind_leaf.",
            "VernacExtend",
            "fbed74ec52b8de3004888714c7f87ee6cf7dd962"
        ],
        [
            "unfold monoid_expec.",
            "VernacExtend",
            "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
        ],
        [
            "rewrite (@expec_ext _ (ms \u2218 monoid_mult m (fst n) \u2218 fst (A:=m) (B:=Y)) (plus (ms (fst n)) \u2218 ms \u2218 fst)).",
            "VernacExtend",
            "faeb9956cfc90796f5ad9573f2e8e93bbc4ea110"
        ],
        [
            "rewrite <- comp_ass.",
            "VernacExtend",
            "a9cab35935b7b8765f8791a8843002b4487a3c80"
        ],
        [
            "rewrite (ext_eq_rw (expec_plus_c (ms \u2218 fst (A:=m) (B:=Y)) (ms (fst n)))).",
            "VernacExtend",
            "12df3f3f5c1836afff21912378269d311f03805b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "repeat rewrite comp_apply.",
            "VernacExtend",
            "851d08f86d28707e40d58f6a373ee3678aaad833"
        ],
        [
            "apply (monoidHomo_mult mh).",
            "VernacExtend",
            "b24e507d136646f00fa6835e0f0edf8e2fc5481a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoid_expec_bind_det (X: Set) (v: prod m X) (x: MonoidMonadTrans.M m ne_tree_monad.ext X): ne_tree_monad.deterministic x v -> forall (Y: Set) (f: X -> MonoidMonadTrans.M m ne_tree_monad.ext Y), monoid_expec (x >>= f) = monoid_expec x + monoid_expec (f (snd v)).",
            "VernacStartTheoremProof",
            "48e6799a7fd983f7030c035754a68cf87f6b8f5b"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite monoid_expec_bind_leaf_plus.",
            "VernacExtend",
            "04609bb25ee05599224eaffa1d85941f8e385e25"
        ],
        [
            "unfold monoid_expec.",
            "VernacExtend",
            "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
        ],
        [
            "rewrite expec_Leaf.",
            "VernacExtend",
            "6919e42e1a7561094dbd3f931617994f6f357e35"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ne_tree.In_head.",
            "VernacHints",
            "bc9f6117553d6451362e643044db968f1c394419"
        ],
        [
            "Lemma monoid_expec_plus (A B: Set) (f: MonoidMonadTrans.M m ne_tree_monad.ext A) (g: A -> MonoidMonadTrans.M m ne_tree_monad.ext B) : forall (gc: forall x y, ne_tree.In x f -> ne_tree.In y f -> monoid_expec (g (snd x)) = monoid_expec (g (snd y))), monoid_expec (f >>= g) = monoid_expec f + monoid_expec (g (snd (ne_tree.head f))).",
            "VernacStartTheoremProof",
            "d35d2ae0bd8e3a616c893ced5150e4ee62a5c516"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "revert f.",
            "VernacExtend",
            "c97f81cbc07fdc8c49875e2ee7958808979dddbc"
        ],
        [
            "induction f.",
            "VernacExtend",
            "90de589f74a02f0cef6f8341c05243190e5a8cc9"
        ],
        [
            "rewrite (@monoid_expec_bind_det _ n)...",
            "VernacExtend",
            "51fc87a422488218d17de5ce33438dbe82e2f80b"
        ],
        [
            "unfold ne_tree_monad.deterministic...",
            "VernacExtend",
            "2a4202aa54b3a29f64ab6c81c3abedbf2210f3e5"
        ],
        [
            "unfold monoid_expec in *.",
            "VernacExtend",
            "32c0a6bd1b97770a824fba7bf60f6b046866f7e0"
        ],
        [
            "rewrite MonoidMonadTrans.bind_toLower in *.",
            "VernacExtend",
            "d30eebb81b31d9eff960336a57a1c596eb045cea"
        ],
        [
            "rewrite ne_tree_monad.bind_Node_one.",
            "VernacExtend",
            "771c7c5f911bced1949f6fbdfc55e1d1eac9d778"
        ],
        [
            "repeat rewrite expec_Node_one.",
            "VernacExtend",
            "369d0d869b12bff83a6eb63027ae91c15910f66e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHf...",
            "VernacExtend",
            "f34c907967f3fd3e560e63c9e786d15919dd96bd"
        ],
        [
            "unfold monoid_expec in *.",
            "VernacExtend",
            "32c0a6bd1b97770a824fba7bf60f6b046866f7e0"
        ],
        [
            "rewrite MonoidMonadTrans.bind_toLower in *.",
            "VernacExtend",
            "d30eebb81b31d9eff960336a57a1c596eb045cea"
        ],
        [
            "rewrite expec_Node_cons.",
            "VernacExtend",
            "40491e652c1d331a4d79a136bd0958e9445bcaef"
        ],
        [
            "rewrite expec_bind_cons.",
            "VernacExtend",
            "06d12150cb8923cd8ceceb85afbf46f43ed00c81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHf...",
            "VernacExtend",
            "f34c907967f3fd3e560e63c9e786d15919dd96bd"
        ],
        [
            "rewrite IHf0.",
            "VernacExtend",
            "71826f957528a02fbea46d94d17fb5e65b00f59e"
        ],
        [
            "simpl ne_tree.head.",
            "VernacExtend",
            "4a70956a8cd0c9a3119a3a16814129e3bc5af8eb"
        ],
        [
            "repeat rewrite S_INR.",
            "VernacExtend",
            "035b085f3eaccf730f9253555ef2d5b3f6efa4ee"
        ],
        [
            "rewrite (gc (ne_tree.head (ne_list.head l)) (ne_tree.head f))...",
            "VernacExtend",
            "7f0b079afeec824383a97c08c3a76441339d8986"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold ne_tree_monad.C.",
            "VernacExtend",
            "6fe999b3e03c8617bd90cabf3d9d805f470b7fab"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "apply ne_tree.InNode.",
            "VernacExtend",
            "5fdd19a9fbdbf7b59ee1545991b5c5711568a061"
        ],
        [
            "apply ne_tree.InTail.",
            "VernacExtend",
            "b0d268152b062e377251a69bb429ed39c7768a26"
        ],
        [
            "destruct l...",
            "VernacExtend",
            "963fc99ea720efd97229633d63f4328017299f89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "apply gc...",
            "VernacExtend",
            "0252a9976aba6472d01bf530c5b3842d35b3b020"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoid_expec_map_fst_monoid_mult (A: Set) (g: m) (t: MonoidMonadTrans.M m ne_tree_monad.ext A): monoid_expec (ne_tree.map (map_fst (monoid_mult m g)) t) = INR (ms g) + monoid_expec t.",
            "VernacStartTheoremProof",
            "bd4e900e4626be6c44381081f976fd5c748e2123"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold monoid_expec.",
            "VernacExtend",
            "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
        ],
        [
            "unfold expec.",
            "VernacExtend",
            "4f1aef80434c2c178b447be40975605154c99658"
        ],
        [
            "rewrite comp_apply.",
            "VernacExtend",
            "f94b0882f3d44cce0c4484c4063e03806fcd930c"
        ],
        [
            "rewrite ne_tree.map_map.",
            "VernacExtend",
            "7356872da4b5547f64c78e0263e2dd63ecb9f953"
        ],
        [
            "assert (ext_eq (INR \u2218 (ms \u2218 fst (A:=m) (B:=A)) \u2218 map_fst (C:=A) (monoid_mult m g)) (INR \u2218 plus (ms g) \u2218 mult 1 \u2218 (ms \u2218 fst (A:=m) (B:=A)))).",
            "VernacExtend",
            "7188d912f80196889657f9e920d15d22e5d8f471"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (monoidHomo_mult mh).",
            "VernacExtend",
            "cbdb827aaff06cf14e55f21f3b590c627cfa17a3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite plus_0_r...",
            "VernacExtend",
            "0e3d1f25d0e32e9f0b660e075c4ec630441b043d"
        ],
        [
            "rewrite (ne_tree.map_ext H).",
            "VernacExtend",
            "be7362c57fc589dadba52f86c842f48e3703f93e"
        ],
        [
            "rewrite <- ne_tree.map_map.",
            "VernacExtend",
            "6ffedef519af9d98cf3721fca69bb87f5490cebf"
        ],
        [
            "cset (lin_nat 1 (ms g) (ne_tree.map (ms \u2218 fst (A:=m) (B:=A)) t)).",
            "VernacExtend",
            "29f6272c08ed5d4415d346fedfc8355f83a3a856"
        ],
        [
            "rewrite comp_apply in H0.",
            "VernacExtend",
            "5572724f01858ad045e18ec5d0edec887d5942e0"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "repeat rewrite comp_apply.",
            "VernacExtend",
            "851d08f86d28707e40d58f6a373ee3678aaad833"
        ],
        [
            "simpl INR.",
            "VernacExtend",
            "e15b305d1006a95c66a33a657a287359379d9250"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite ne_tree.map_map...",
            "VernacExtend",
            "21696bca3207992ba2f12977957e5c3944e0eb71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoid_expec_bind_0_r (A B: Set) (g: A -> MonoidMonadTrans.M m ne_tree_monad.ext B) (gc: forall x, monoid_expec (g x) = 0) (f: MonoidMonadTrans.M m ne_tree_monad.ext A): monoid_expec (f >>= g) = monoid_expec f.",
            "VernacStartTheoremProof",
            "c37472eb9fa6c183eadc358552bdb49594740379"
        ],
        [
            "Proof with auto with real.",
            "VernacProof",
            "abb74eecc4d10277fa1de9225f21b7e3d6250741"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite monoid_expec_plus.",
            "VernacExtend",
            "9d027b0f02397a675fd90ae9aadd106ce915956c"
        ],
        [
            "rewrite gc.",
            "VernacExtend",
            "bcc8bdd9da19f2f953c55aafd731fdf0a5ffd01b"
        ],
        [
            "apply Rplus_0_r.",
            "VernacExtend",
            "c92685166837d4e0d69b0a5ef9f020e1b5f0a32d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite gc...",
            "VernacExtend",
            "3f538b38419101885ae786aae801e1e6548bc1f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End contents.",
            "VernacEndSegment",
            "28f505b78f584feda38f14dd967d87712e3c7f31"
        ]
    ],
    "proofs": [
        {
            "name": "monoid_expec_bind_leaf",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold monoid_expec.",
                        "VernacExtend",
                        "74ff52c2242b1560664b4b63a7bb5f68d4e0d871"
                    ]
                },
                {
                    "command": [
                        "rewrite MonoidMonadTrans.bind_toLower'.",
                        "VernacExtend",
                        "97b01f47b54f28dc13d6a394c58faabe854c68d1"
                    ]
                },
                {
                    "command": [
                        "rewrite ne_tree_monad.bind_Leaf.",
                        "VernacExtend",
                        "90330d6988e4bff375ac36eec4e42329702201d6"
                    ]
                },
                {
                    "command": [
                        "simpl @ret.",
                        "VernacExtend",
                        "26b84e2f76b57122b98b57144cadc12ba75db988"
                    ]
                },
                {
                    "command": [
                        "simpl mon.",
                        "VernacExtend",
                        "72809c2b3ce4fde7b925a7c1d7fe6e886d654b52"
                    ]
                },
                {
                    "command": [
                        "rewrite expec_bind_leaf.",
                        "VernacExtend",
                        "3849f7fc7cca3c65da67c94e5b655ddc03cf643b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}