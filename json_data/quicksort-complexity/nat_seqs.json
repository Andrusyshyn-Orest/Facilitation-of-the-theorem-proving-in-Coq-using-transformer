{
    "filename": "nat_seqs.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Automatic Introduction.",
            "VernacUnsetOption",
            "0bdf551241b98d9f3f23abf14fca2f7a9b3ee136"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Lt.",
            "VernacRequire",
            "fe47d80ebda42c5f075a36fb67288742f8593767"
        ],
        [
            "Require Import Le.",
            "VernacRequire",
            "838bfe0aac98b4a25730898d79830c3f8329aec1"
        ],
        [
            "Require Import util.",
            "VernacRequire",
            "4430f87d7649f96d1418f130d57967666d56d84f"
        ],
        [
            "Require Import list_utils.",
            "VernacRequire",
            "f5ce54076a68b3ca9f48d4de158eadf0961b9e1f"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Require Import arith_lems.",
            "VernacRequire",
            "c122d8f93731b561f73c879ca58fed05abd59dc7"
        ],
        [
            "Fixpoint nats (b: nat) (w: nat) {struct w}: list nat := match w with | 0 => nil | S w' => b :: nats (S b) w' end.",
            "VernacFixpoint",
            "6807be5e4b6038300e70781fd9afc4c327f64862"
        ],
        [
            "Lemma nats_length (w b: nat): length (nats b w) = w.",
            "VernacStartTheoremProof",
            "fcd66e71d2a7b716158c04b852a079f4d5b23220"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction w...",
            "VernacExtend",
            "e78655efb311cebff5c16272785e2fd893f6b126"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHw...",
            "VernacExtend",
            "c63c6b0186c13afee3ab94c76273fce67bcd04c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nats (w x b: nat): b <= x -> x < b + w -> In x (nats b w).",
            "VernacStartTheoremProof",
            "c8012444ac3a41d548167a5b6764f746fd0b3441"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction w; intros.",
            "VernacExtend",
            "8f3d456cd69a38200a93ba9307da2f308c58d29e"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "rewrite plus_0_r in H0.",
            "VernacExtend",
            "3d91d35aaa9602298ebcb2f857bca8713686fa76"
        ],
        [
            "apply (lt_not_le x b H0)...",
            "VernacExtend",
            "02abf7efea3291896a982b5c79059c3a39cd5f63"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (le_lt_eq_dec _ _ H); [right | left]...",
            "VernacExtend",
            "118fb69237774b321a8b6564821186145d24b195"
        ],
        [
            "apply IHw...",
            "VernacExtend",
            "7931cc07a650700fff8e73e697d0f925b345d15f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_nats_inv (w x b: nat): In x (nats b w) -> b <= x < b + w.",
            "VernacStartTheoremProof",
            "2c4f4659dfcd4038f7575ba84aca4a352cc5c06e"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction w; simpl; intros.",
            "VernacExtend",
            "0e1db5c62399a658843fe064d858e950464faefb"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (IHw x (S b) H0).",
            "VernacExtend",
            "16fa1675f26055f89a9ac58e768c1215801dc8d7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_nats (w b: nat): NoDup (nats b w).",
            "VernacStartTheoremProof",
            "2dc65221b27b50f30e4426d1d4ab6f121a82ccb3"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction w; simpl; intros.",
            "VernacExtend",
            "0e1db5c62399a658843fe064d858e950464faefb"
        ],
        [
            "apply NoDup_nil.",
            "VernacExtend",
            "67313a1ac898e25e0b147e35dceb4ec1f7ac73d2"
        ],
        [
            "apply NoDup_cons...",
            "VernacExtend",
            "5dfb9d6d83312c0b725609b85ad369f28ad76b87"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (In_nats_inv _ _ _ H).",
            "VernacExtend",
            "83c56e3e7c00be93627a16223ac12fb668cb709c"
        ],
        [
            "apply (le_Sn_n _ H0).",
            "VernacExtend",
            "008f48e184a66d9c67285efc56f15984ffe01033"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nats_plus y x z: nats x (y + z) = nats x y ++ nats (y + x) z.",
            "VernacStartTheoremProof",
            "1c69d3945d629ef3da3d2e07ee1b2be91b980519"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction y...",
            "VernacExtend",
            "0995929496c6d3d776b65487b75b76ad5b7fb9f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHy.",
            "VernacExtend",
            "b267dbae34c26e214b482324492e9c8d291d5080"
        ],
        [
            "rewrite <- plus_n_Sm...",
            "VernacExtend",
            "294b5cc9d7011e03073bdc1a1a4d354aac17dafc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nats_Sw b w: nats b (S w) = b :: nats (S b) w.",
            "VernacStartTheoremProof",
            "1635367009a718b0ff709fe6813328135ac9f69a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nats_split (w b i: nat): i <= w -> nats b w = nats b i ++ nats (b + i) (w - i).",
            "VernacStartTheoremProof",
            "422167f1263d7b4d79444f060d7212cce9bd26eb"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_exists_plus H).",
            "VernacExtend",
            "7a69007125e0a0b881c3fb7202e15b409a11deca"
        ],
        [
            "subst w.",
            "VernacExtend",
            "7bc1494f853d97465dbd9eef10728ef6fff8bd41"
        ],
        [
            "replace (i + x - i) with x by omega.",
            "VernacExtend",
            "8d77423bcbc89df1c1924c253f3d614274816c86"
        ],
        [
            "rewrite nats_plus.",
            "VernacExtend",
            "69cf080717c2a74509eb97b075209bc680ae0de3"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nats_Sw' w b: nats b (S w) = nats b w ++ (w + b :: nil).",
            "VernacStartTheoremProof",
            "7c202b34b300da45f5eee6d01a76a002c1025aec"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction w...",
            "VernacExtend",
            "e78655efb311cebff5c16272785e2fd893f6b126"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite nats_Sw.",
            "VernacExtend",
            "0d98da79cf64e394ca3af0c372ea5abd8c053bbf"
        ],
        [
            "rewrite IHw.",
            "VernacExtend",
            "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite plus_n_Sm...",
            "VernacExtend",
            "57f58d3f79c6347b0a6b66dc7f690733784d1f4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_pow2_range n: nats 1 (pow 2 n) = 1 :: concat (map (fun x => nats (pow 2 x + 1) (pow 2 x)) (nats 0 n)).",
            "VernacStartTheoremProof",
            "6f8b38a91ed74a25f259f3bc0ec10ee356053779"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction n...",
            "VernacExtend",
            "f4e91834ebe52b029dc733006b913e328c979eda"
        ],
        [
            "simpl pow.",
            "VernacExtend",
            "e238f4f24156f93599c988ae082bf68873c6cabc"
        ],
        [
            "rewrite plus_0_r.",
            "VernacExtend",
            "d05263a401ad993feef5d443fed22d6f6d6bec5a"
        ],
        [
            "rewrite nats_plus.",
            "VernacExtend",
            "69cf080717c2a74509eb97b075209bc680ae0de3"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "rewrite nats_Sw'.",
            "VernacExtend",
            "dd9911c930cbcc233b7e69366e7e5ac8a780c9fb"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite concat_app.",
            "VernacExtend",
            "bdad128ced2b8fe5cb0349101f2f2abe329758ee"
        ],
        [
            "rewrite plus_0_r.",
            "VernacExtend",
            "d05263a401ad993feef5d443fed22d6f6d6bec5a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite app_nil_r...",
            "VernacExtend",
            "0937973197256d8673173ac929544156288de58a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nats_Sb w b: nats (S b) w = map S (nats b w).",
            "VernacStartTheoremProof",
            "f366f813f906e1018a4ac6ebd3531309cdb7f33a"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction w...",
            "VernacExtend",
            "e78655efb311cebff5c16272785e2fd893f6b126"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHw...",
            "VernacExtend",
            "c63c6b0186c13afee3ab94c76273fce67bcd04c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require vec.",
            "VernacRequire",
            "08616db8153e7c946fd3e24b96d9ac3527cab372"
        ],
        [
            "Lemma filtered_sort (T: Set) (R: relation T) (P: preorder T R) (p: T -> T -> bool) (pc: forall x y, p y x = true -> ~ R y x) (l: list T): vec.sorted R l -> elemsR le (map (fun x => length (filter (p (fst x)) (snd x))) (splits l)) (nats 0 (length l)).",
            "VernacStartTheoremProof",
            "ed02fb987cac856261cb4fa1926c6254d96103ed"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl...",
            "VernacExtend",
            "504f71dca671c3e66b68ade966c1b4804373be90"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pose proof (IHl (vec.sorted_tail H)).",
            "VernacExtend",
            "69b91b24c92e61f4e28fd01fda8843cfaf85fc79"
        ],
        [
            "clear IHl.",
            "VernacExtend",
            "8bbd9602dc9b79bb59ead5a20fa2e5495ddfe01a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply eR_cons.",
            "VernacExtend",
            "96d72969851bbcce3431b429680c9afd59291f2e"
        ],
        [
            "rewrite (fst (conj_prod (list_utils.filter_none _ l)))...",
            "VernacExtend",
            "ba692f8b9b717da65eaa3029b7dc67fbb73555a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold flip.",
            "VernacExtend",
            "26e5294508c945f0c86f664b90e225b956412a8a"
        ],
        [
            "pose proof (pc x a).",
            "VernacExtend",
            "9d6cfd5787404f0d518cd1fcd3d3d7d7b1b59a3f"
        ],
        [
            "destruct (p a x)...",
            "VernacExtend",
            "8ab08330013200cc0624579676a916ae81edfffc"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "apply H2...",
            "VernacExtend",
            "6f4654ddf9fb5bef56fdf47f9e65840098530145"
        ],
        [
            "apply (vec.sorted_cons_inv' P H x).",
            "VernacExtend",
            "f26893d5484c5cd7403d21628ee1a87a558b3c25"
        ],
        [
            "rewrite vec.list_round_trip...",
            "VernacExtend",
            "f5668f0890211fe3ba70330dd07c3d5d63c2c735"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply elemsR_le_S in H0.",
            "VernacExtend",
            "e4b679cee43999f38c017eab006e42d0013d9eca"
        ],
        [
            "rewrite nats_Sb.",
            "VernacExtend",
            "abedd633066681a7fb3c44edbca7f083b1d15113"
        ],
        [
            "transitivity (map S (map (fun x => length (filter (p (fst x)) (snd x))) (splits l)))...",
            "VernacExtend",
            "c69342cc7e4a906b7a4e4e52807c9463e9790226"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "apply elemsR_map_map.",
            "VernacExtend",
            "2647d8f9f14a4ce347c05c118a597604862e09f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (p (fst x))...",
            "VernacExtend",
            "f02f0231f2d2177ceb47ce2732f081a6a611d001"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "nats_Sw",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}