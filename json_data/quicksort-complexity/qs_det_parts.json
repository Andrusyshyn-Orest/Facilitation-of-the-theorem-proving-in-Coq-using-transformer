{
    "filename": "qs_det_parts.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import List util monads list_utils qs_definitions.",
            "VernacRequire",
            "402744a8e4c856055f8c2e7849d70ed58190dd59"
        ],
        [
            "Set Shrink Obligations.",
            "VernacSetOption",
            "f7395d097ae8a78c5b6d9d34117b07c84fe0d248"
        ],
        [
            "Import qs_definitions.mon_det_partition.",
            "VernacImport",
            "e6c89ee31d0149e488e4997f09391eaa1dd3f574"
        ],
        [
            "Section contents.",
            "VernacBeginSection",
            "64247bb134c943946794e7969d57832818b1ace7"
        ],
        [
            "Variable M: Monad.",
            "VernacAssumption",
            "115add36d9ac4e803c7dfc9a7b04674e74e752ec"
        ],
        [
            "Variables (X: Set) (pick: forall T: Set, ne_list.L T -> M T) (cmp: X -> X -> M comparison).",
            "VernacAssumption",
            "9392b84841e23476fa94e13bd2a734ef2af98973"
        ],
        [
            "Definition lowRecPart p (t: list X) (part: {p: Partitioning X | Permutation.Permutation (p Eq ++ p Lt ++ p Gt) t}) := low <- qs _ cmp (proj1_sig part Lt); upp <- qs _ cmp (proj1_sig part Gt); ret (low ++ p :: proj1_sig part Eq ++ upp).",
            "VernacDefinition",
            "9b5655d64b5086d90847f542ccc80230a30563e3"
        ],
        [
            "Definition partitionPart p (t: list X) := partition M cmp p t >>= @lowRecPart p t.",
            "VernacDefinition",
            "d9868ad6d9ea83c704639d8f4ca18feb2203f5c8"
        ],
        [
            "Definition body (v: list X) := match v with | nil => ret nil | p :: t => partitionPart p t end.",
            "VernacDefinition",
            "3a1740062ab9fa178277078fcc1a00542b7a258e"
        ],
        [
            "Definition raw_body (l0 : list X) (qs0 : {l' : list X | length l' < length l0} -> M (list X)) := match l0 as l1 return (l1 = l0 -> M (list X)) with | nil => fun _ : nil = l0 => ret nil | h :: t => fun Heq_l : h :: t = l0 => part <- partition M cmp h t; low <- qs0 (exist (fun l' : list X => length l' < length l0) (proj1_sig part Lt) (qs_definitions.mon_det_partition.qs_obligation_1 M (fun l H => qs0 (exist _ l H)) Heq_l part)); upp <- qs0 (exist (fun l' : list X => length l' < length l0) (proj1_sig part Gt) (qs_definitions.mon_det_partition.qs_obligation_2 M (fun l H => qs0 (exist _ l H)) Heq_l part)); ret (low ++ h :: proj1_sig part Eq ++ upp) end refl_equal.",
            "VernacDefinition",
            "92f696122a20dc29415a4e43bbe08f01e001d299"
        ],
        [
            "Variable e: extMonad M.",
            "VernacAssumption",
            "d759a18a9bafbd1ba5c6656bb3b6bb2d796a1937"
        ],
        [
            "Definition raw_body_ext (l: list X) (qs qs': {l': list X | length l' < length l} -> M (list X)): (forall x y, proj1_sig x = proj1_sig y -> qs x = qs' y) -> raw_body l qs = raw_body l qs'.",
            "VernacDefinition",
            "0b5505df5f4d9f2cf7320565920165e708867685"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold raw_body.",
            "VernacExtend",
            "125a09281c9ed11c03aa5bb83bd532ed876a64b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l...",
            "VernacExtend",
            "963fc99ea720efd97229633d63f4328017299f89"
        ],
        [
            "apply e.",
            "VernacExtend",
            "7e471e9a67d7e270fc9d49b2286b43a098cffb1d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply bind_eqq...",
            "VernacExtend",
            "934e901a352093a7e358f8849749eea3cbdfc152"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply bind_eqq...",
            "VernacExtend",
            "934e901a352093a7e358f8849749eea3cbdfc152"
        ],
        [
            "intro...",
            "VernacExtend",
            "7274cb42adf060ad435addc8c1ce77d7b7ea4ef8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bodies x0: raw_body x0 (fun y: {y: list X | length y < length x0} => qs _ cmp (proj1_sig y)) = body x0.",
            "VernacStartTheoremProof",
            "fd03c8cd82e0dcede04bb932b1b1e06366ff0b1e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold raw_body, body, partitionPart, lowRecPart.",
            "VernacExtend",
            "86d579fdd136a3c4d0d752f4d9d26343822d3189"
        ],
        [
            "destruct x0; reflexivity.",
            "VernacExtend",
            "a720f16ee7a2d669b4d8cde670c977f7ee82d6cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma toBody (l: list X): qs _ cmp l = body l.",
            "VernacStartTheoremProof",
            "7ff8833d485e3435596e2c77650d89fb0ba04317"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold qs.",
            "VernacExtend",
            "aabcf467b0395ceb912b170818dbe9294fc93177"
        ],
        [
            "fold raw_body.",
            "VernacExtend",
            "f17224ad6453ce4bf555e5cac26af71cf11937e0"
        ],
        [
            "rewrite fix_measure_utils.unfold.",
            "VernacExtend",
            "6a8f52b1ba48bbedaafc66aff526ae9f68f8ab40"
        ],
        [
            "rewrite <- bodies.",
            "VernacExtend",
            "793bbd1aa5bd725d02cc3b6c9c8563ca118c299f"
        ],
        [
            "unfold qs.",
            "VernacExtend",
            "aabcf467b0395ceb912b170818dbe9294fc93177"
        ],
        [
            "fold raw_body...",
            "VernacExtend",
            "898374cc5e041347d805e15acfe2773d242cbeb3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply raw_body_ext.",
            "VernacExtend",
            "45d19300d1d078345bc91f33b539a6a8e27bd23f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect (Q: list X -> M (list X) -> Type): (Q nil (ret nil)) -> (forall h t, (forall y, length y <= length t -> Q y (qs _ cmp y)) -> Q (h :: t) (partitionPart h t)) -> forall x, Q x (qs _ cmp x).",
            "VernacStartTheoremProof",
            "34d0e0f26b34859c5a94e108a1a42ea574425159"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold qs.",
            "VernacExtend",
            "aabcf467b0395ceb912b170818dbe9294fc93177"
        ],
        [
            "fold raw_body.",
            "VernacExtend",
            "f17224ad6453ce4bf555e5cac26af71cf11937e0"
        ],
        [
            "apply fix_measure_utils.rect.",
            "VernacExtend",
            "4230cf1d8d24a8119d150e792874eceb44776121"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply raw_body_ext.",
            "VernacExtend",
            "45d19300d1d078345bc91f33b539a6a8e27bd23f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x1.",
            "VernacExtend",
            "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite raw_body_ext.",
            "VernacExtend",
            "dfb43510c2c9969f9b06fa8bb830daa1b0a11885"
        ],
        [
            "rewrite bodies.",
            "VernacExtend",
            "45cd92d01a70ae1c0ff8661c7608d50b3800bb15"
        ],
        [
            "unfold body.",
            "VernacExtend",
            "3774747b225aa5d9fc1cc9ca8e6bc627f2b4c71f"
        ],
        [
            "destruct x0...",
            "VernacExtend",
            "3dc81ee3f6f61c6a091f66e987026c21574e3040"
        ],
        [
            "apply X1.",
            "VernacExtend",
            "416bb848e972379a52d936c78e22145f091564e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold qs.",
            "VernacExtend",
            "aabcf467b0395ceb912b170818dbe9294fc93177"
        ],
        [
            "fold raw_body...",
            "VernacExtend",
            "898374cc5e041347d805e15acfe2773d242cbeb3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Wf.MR.",
            "VernacExtend",
            "7f6d140a2c5ae25fc507f4e3fbbdee5dfd3d0744"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold qs.",
            "VernacExtend",
            "aabcf467b0395ceb912b170818dbe9294fc93177"
        ],
        [
            "fold raw_body.",
            "VernacExtend",
            "f17224ad6453ce4bf555e5cac26af71cf11937e0"
        ],
        [
            "f_equal; assumption.",
            "VernacExtend",
            "6b6681a531677ea4fa72a5d841e2b1b034eaef95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End contents.",
            "VernacEndSegment",
            "28f505b78f584feda38f14dd967d87712e3c7f31"
        ]
    ],
    "proofs": [
        {
            "name": "bodies",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold raw_body, body, partitionPart, lowRecPart.",
                        "VernacExtend",
                        "86d579fdd136a3c4d0d752f4d9d26343822d3189"
                    ]
                },
                {
                    "command": [
                        "destruct x0; reflexivity.",
                        "VernacExtend",
                        "a720f16ee7a2d669b4d8cde670c977f7ee82d6cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}