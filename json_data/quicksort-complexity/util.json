{
    "filename": "util.v",
    "coq_project": "quicksort-complexity",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require Export Basics.",
            "VernacRequire",
            "4759ca7632bfe7e7e12735ea78e233dfd7668ebe"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Arguments eq {A}.",
            "VernacArguments",
            "880fc664b15e3be95c9c3adfa75367cc2161cb8f"
        ],
        [
            "Arguments fst {A B}.",
            "VernacArguments",
            "9396e00ae562adef534e9f366198411e8711d82e"
        ],
        [
            "Hint Unfold compose.",
            "VernacHints",
            "4d8ffebaf6c6298a9a27007209d97f0bc370720f"
        ],
        [
            "Definition proj1_conj (A B: Prop) (c: A /\\ B): A := match c with conj x _ => x end.",
            "VernacDefinition",
            "aa62842ee49234691f4854c8e623f3bfc8810d27"
        ],
        [
            "Definition proj2_conj (A B: Prop) (c: A /\\ B): B := match c with conj _ x => x end.",
            "VernacDefinition",
            "0b504def8f541f059b303c660fcfd2e660705f01"
        ],
        [
            "Lemma eq_trans (X: Set) (a b c: X): a = b -> b = c -> a = c.",
            "VernacStartTheoremProof",
            "7d296559cca6a49b04c73cdb8c4e407ac48a992c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cmp_cmp (x y: comparison): { x = y } + { x <> y } := match x, y return { x = y } + { x <> y } with | Lt, Lt | Gt, Gt | Eq, Eq => left _ (refl_equal _) | a, b => right _ ( match a, b return match a, b with Lt, Lt | Gt, Gt | Eq, Eq => True | _, _ => ~(a = b) end with | Lt, Lt | Gt, Gt | Eq, Eq => I | Lt, _ => fun q => match q in _ = Lt with refl_equal => I end | Gt, _ => fun q => match q in _ = Gt with refl_equal => I end | Eq, _ => fun q => match q in _ = Eq with refl_equal => I end end ) end.",
            "VernacDefinition",
            "602a3ec0cfd0d06cc5050a8589cf5dc3539b6396"
        ],
        [
            "Fixpoint nat_cmp (x y: nat) {struct x}: comparison := match x, y with | 0, 0 => Eq | 0, S _ => Lt | S _, 0 => Gt | S x', S y' => nat_cmp x' y' end.",
            "VernacFixpoint",
            "7d922d0db8b961d4d5c22824682a97f2a16cc552"
        ],
        [
            "Ltac cset e := let v := fresh in set (v := e); clearbody v.",
            "VernacExtend",
            "dd65d4e61e7aea178afcd5b6ccba9f79e032a6df"
        ],
        [
            "Ltac cset' e := let v := fresh in set (v := e) in *; clearbody v.",
            "VernacExtend",
            "7a2d18b75aab1a69f6405fea6724ccb51474a236"
        ],
        [
            "Ltac extro x := generalize x; clear x.",
            "VernacExtend",
            "118ce0b7993cce308e71f41937888252a7b9d9be"
        ],
        [
            "Definition unsum_bool (A B: Prop) (sb: sumbool A B): bool := if sb then true else false.",
            "VernacDefinition",
            "03c39b3639a6a32f982a1d45f671a79490ea0bd9"
        ],
        [
            "Definition decision (P: Prop): Set := { P } + { ~ P }.",
            "VernacDefinition",
            "200afd5406a3af5c0cbe18903b7963683e4407ec"
        ],
        [
            "Definition predDecider (T: Set) (P: T -> Prop): Type := forall t, decision (P t).",
            "VernacDefinition",
            "383b2ac3a57a68bae315d5f961a74b58d7097a38"
        ],
        [
            "Lemma negb_inv (b b': bool): negb b = negb b' -> b = b'.",
            "VernacStartTheoremProof",
            "2cba8e4a7d937f17eec13e72ee9ce9f673dc6570"
        ],
        [
            "destruct b; destruct b'; auto.",
            "VernacExtend",
            "2476d109e0a4485b7840698b1efc5c3c9e6d9a6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_negb (b: bool): negb (negb b) = b.",
            "VernacStartTheoremProof",
            "3c31a972c8f32bd24c192edd2e0ce7b71378bd55"
        ],
        [
            "destruct b; auto.",
            "VernacExtend",
            "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition id {X} (x: X): X := x.",
            "VernacDefinition",
            "9428a5505ab030d7afe14ad93e40c4396ae85caa"
        ],
        [
            "Definition ext_eq {A B: Type} (f g: A -> B): Prop := forall x, f x = g x.",
            "VernacDefinition",
            "f552e83dd8cdcbde306f75f4310273100c7082b6"
        ],
        [
            "Lemma ext_eq_trans: forall A B, transitive _ (@ext_eq A B).",
            "VernacStartTheoremProof",
            "46f16c2d5941c46bc9a9c5c101c6ba774b32e0c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold transitive.",
            "VernacExtend",
            "f25ed909ae05b72c02b7cf56db312c5d032e3c19"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_eq_refl: forall A B, reflexive _ (@ext_eq A B).",
            "VernacStartTheoremProof",
            "faf38a614840e6d30643e7c738e910084a3e6fc4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold reflexive.",
            "VernacExtend",
            "21dcad806a4ad5199721afcc7ae0b64f75d1f0df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ext_eq_sym: forall A B, symmetric _ (@ext_eq A B).",
            "VernacStartTheoremProof",
            "fba7b338acdb350e11045a4086e29aa805c22d76"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold symmetric.",
            "VernacExtend",
            "be4be2f59eec31f2955f95702b7bffaf80f0c2dd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Relation X Y: (X -> Y) (@ext_eq X Y) reflexivity proved by (@ext_eq_refl X Y) symmetry proved by (@ext_eq_sym X Y) transitivity proved by (@ext_eq_trans X Y) as ext_eq_rel.",
            "VernacExtend",
            "61ed5a4f89fab9ecc5804263c36c41ea7798ae82"
        ],
        [
            "Lemma ext_eq_rw (A B: Type) (f g: A -> B): ext_eq f g -> forall x, f x = g x.",
            "VernacStartTheoremProof",
            "a78e0423ada391c9575199699cdb60f3f2ae293c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \" g \u2218 f \" := (compose g f) (at level 40, left associativity).",
            "VernacNotation",
            "531d65219254ae57b18433c7b77d2bfb857f32d6"
        ],
        [
            "Lemma comp_apply (A B C: Set) (f: B -> C) (g: A -> B) (x: A): (f \u2218 g) x = f (g x).",
            "VernacStartTheoremProof",
            "3d1c743920a75f9bba404a35fe98f62e77253085"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma comp_ass (A B C D: Set) (f: A -> B) (g: B -> C) (h: C -> D): h \u2218 (g \u2218 f) = (h \u2218 g) \u2218 f.",
            "VernacStartTheoremProof",
            "332d32d519e29727470a3275be089109516c94f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition compose_lunit A B (f: A -> B): ext_eq (@id B \u2218 f) f.",
            "VernacDefinition",
            "b0b70fd69f19c17bf3daf25fa2c71312ac3e2a60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition compose_runit A B (f: A -> B): ext_eq (f \u2218 @id A) f.",
            "VernacDefinition",
            "70f014f730abe20a8868330e8e1b2099e6751519"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism (X Y Z: Set): (@compose X Y Z) with signature (@ext_eq Y Z) ==> (@ext_eq X Y) ==> (@ext_eq X Z) as compose_ext_eq_morph.",
            "VernacExtend",
            "cd015d78da6c31d10d49b0fcfe6cbe6fe4f91925"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold compose.",
            "VernacExtend",
            "d80e23bf133762584228beafbd8610d99d5d02d5"
        ],
        [
            "unfold ext_eq in *.",
            "VernacExtend",
            "87a2026fdb4d87835ee5e15f48360ef7390e0d1a"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition map_snd (A B: Set) (f: A -> B) (C: Set) (p: C * A): C * B := (fst p, f (snd p)).",
            "VernacDefinition",
            "65518b45eddfe5959060119adc87bb5072e5775f"
        ],
        [
            "Lemma fst_map_snd (A B: Set) (f: A -> B) (C: Set) (p: C * A): fst (map_snd f p) = fst p.",
            "VernacStartTheoremProof",
            "3e9f5812495efa38f71325591ddadfff75b0fb27"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition on {A B: Type} {C: B -> B -> Type} (g: A -> B) (f: forall b b', C b b') (x y: A): C (g x) (g y) := f (g x) (g y).",
            "VernacDefinition",
            "eae4bbdd1d3e5601d91d8cd409fdfae2b5ba4617"
        ],
        [
            "Definition unsumbool {A B}: { A } + { B } -> bool := fun x => if x then true else false.",
            "VernacDefinition",
            "092ded3222c52a080784112085c500a393e4d996"
        ],
        [
            "Definition dep_flip {A B: Type} {C: A -> B -> Type} (f: forall a b, C a b) (b: B) (a: A): C a b := f a b.",
            "VernacDefinition",
            "465fd4c8c99d871f792c847fb6ffb3da292166cf"
        ],
        [
            "Coercion conj_prod (A B: Prop): A /\\ B -> A * B.",
            "VernacDefinition",
            "7f331685fb6f984d96e0c5f49be8140d6c2c8e84"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition uncurry A B C (f: A -> B -> C) (ab: A * B): C := f (fst ab) (snd ab).",
            "VernacDefinition",
            "cc0dbc152dc9f42c4e9ca94b4a5f07e55363bcb7"
        ],
        [
            "Section well_founded_pairs.",
            "VernacBeginSection",
            "b1319a1413ee3a570198065ed7aa0805b7675ad1"
        ],
        [
            "Variables (A B: Type) (Ra: relation A) (Rb: relation B).",
            "VernacAssumption",
            "04e0bb4e0117b3d1d2dc6cfe4d590dbcb8bba509"
        ],
        [
            "Inductive pair_rel: relation (A * B) := | pair_rel_l a a' b: Ra a a' -> pair_rel (a, b) (a', b) | pair_rel_r a b b': Rb b b' -> pair_rel (a, b) (a, b').",
            "VernacInductive",
            "d9a6d1cf90d1176c8497f0d00b051936d034a0b2"
        ],
        [
            "Fixpoint acc_pairs a (Aa: Acc Ra a) {struct Aa}: forall b (Ab: Acc Rb b), Acc pair_rel (a, b) := fix G b (Ab: Acc Rb b) {struct Ab}: Acc pair_rel _ := @Acc_intro _ pair_rel _ match Aa, Ab with | Acc_intro x, Acc_intro y => fun z (za: pair_rel z (a, b)) => match za in pair_rel z ab return (forall (p: A) (q: Ra p (fst ab)), Acc pair_rel (p, (snd ab))) -> (forall p, Rb p (snd ab) -> Acc pair_rel (fst ab, p)) -> Acc pair_rel z with | pair_rel_l v w c d => fun fr gr => fr _ d | pair_rel_r v w c d => fun fr gr => gr _ d end (fun (p: A) (q: Ra p (fst (a, b))) => @acc_pairs p (x p q) b Ab : Acc pair_rel (p, b)) (fun (p: B) (q: Rb p (snd (a, b))) => @G p (y p q): Acc pair_rel (a, p)) end.",
            "VernacFixpoint",
            "7b73d5fbb7291dbe9e645e2fe54a77173d5a99d9"
        ],
        [
            "Lemma well_founded_pairs (Wa: well_founded Ra) (Wb: well_founded Rb): well_founded pair_rel.",
            "VernacStartTheoremProof",
            "1a5290161e7fca9d305aef4c15d91cb17fc9f965"
        ],
        [
            "unfold well_founded.",
            "VernacExtend",
            "e54483b8d4c15affa5848e44e1a0e79bf38074ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "apply (acc_pairs (Wa a) (Wb b)).",
            "VernacExtend",
            "5a18b5762403759584b527aaee2d403b09092238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End well_founded_pairs.",
            "VernacEndSegment",
            "12f368f62cdd7b37da4df5e1d5bc9bb59648e5dd"
        ]
    ],
    "proofs": [
        {
            "name": "eq_trans",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_inv",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "destruct b; destruct b'; auto.",
                        "VernacExtend",
                        "2476d109e0a4485b7840698b1efc5c3c9e6d9a6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_negb",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "destruct b; auto.",
                        "VernacExtend",
                        "95533d5a0da46eaf4c778d77a0f89adc7cad4aff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_eq_trans",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold transitive.",
                        "VernacExtend",
                        "f25ed909ae05b72c02b7cf56db312c5d032e3c19"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_eq_refl",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold reflexive.",
                        "VernacExtend",
                        "21dcad806a4ad5199721afcc7ae0b64f75d1f0df"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_eq_sym",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold symmetric.",
                        "VernacExtend",
                        "be4be2f59eec31f2955f95702b7bffaf80f0c2dd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ext_eq_rw",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_apply",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comp_ass",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose_lunit",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose_runit",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose_ext_eq_morph_Proper",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold compose.",
                        "VernacExtend",
                        "d80e23bf133762584228beafbd8610d99d5d02d5"
                    ]
                },
                {
                    "command": [
                        "unfold ext_eq in *.",
                        "VernacExtend",
                        "87a2026fdb4d87835ee5e15f48360ef7390e0d1a"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fst_map_snd",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_prod",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "well_founded_pairs",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "unfold well_founded.",
                        "VernacExtend",
                        "e54483b8d4c15affa5848e44e1a0e79bf38074ce"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "apply (acc_pairs (Wa a) (Wb b)).",
                        "VernacExtend",
                        "5a18b5762403759584b527aaee2d403b09092238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}