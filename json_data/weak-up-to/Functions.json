{
    "filename": "Functions.v",
    "coq_project": "weak-up-to",
    "vernac_cmds": [
        [
            "Require Export Relations.",
            "VernacRequire",
            "ca942e55691cd1c29ddde01ebb7404769af28098"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section Global.",
            "VernacBeginSection",
            "ed6c0ee76561f53d4cdc887cb906f89ee97d6487"
        ],
        [
            "Section Def.",
            "VernacBeginSection",
            "891f679f68bab7ae72311468953cd39d353d2080"
        ],
        [
            "Variables X Y X' Y': Type.",
            "VernacAssumption",
            "44c0445c947336951e85c6c7eae50419edcbb61b"
        ],
        [
            "Definition function2 := relation2 X Y -> relation2 X' Y'.",
            "VernacDefinition",
            "97d1fdf1e7632f0654cd9786fab26b96825206af"
        ],
        [
            "Definition function := relation2 X Y -> relation2 X Y.",
            "VernacDefinition",
            "eee4932d9234f997c01744653167ecd30f398b90"
        ],
        [
            "Definition increasing (F: function) := forall R S, incl R S -> incl (F R) (F S).",
            "VernacDefinition",
            "e54515c441c9e67f3fab35a74504e3c950bac7e3"
        ],
        [
            "Definition contains (F G: function2) := forall R, incl (F R) (G R).",
            "VernacDefinition",
            "ad9952e93df5357743e09a02f8957eb2c26b0372"
        ],
        [
            "Definition constant S: function2 := fun _ => S.",
            "VernacDefinition",
            "3d7bb730fd887caf2f38e8a0980e1e8ec9a322ed"
        ],
        [
            "Definition identity: function := fun R => R.",
            "VernacDefinition",
            "59e15961e4bf474ac0e8deeb6fe17587f14a79b9"
        ],
        [
            "Definition Union2 F G: function2 := fun R => union2 (F R) (G R).",
            "VernacDefinition",
            "11181e88566fbb5a46fb6402252546752fa32837"
        ],
        [
            "Definition Union I H: function2 := fun R => union (fun i: I => H i R).",
            "VernacDefinition",
            "ef782db6dc38b60c7b32840f4dd6f1dd8d15b517"
        ],
        [
            "End Def.",
            "VernacEndSegment",
            "616ad5692568c74f61a9df3a82ac03d2b7ebac01"
        ],
        [
            "Section Def'.",
            "VernacBeginSection",
            "e541859bdafead2479a4ff770883613ce3a02cef"
        ],
        [
            "Variables X Y Z X' Y' Z' X'' Y'': Type.",
            "VernacAssumption",
            "fb5077ae459c1933e7df72f6b505598ea201bebe"
        ],
        [
            "Definition transparent (B: relation X) (F: function2 X Y X Y') := forall R, incl (F (comp (star B) R)) (comp (star B) (F R)).",
            "VernacDefinition",
            "e09394966312cf43d3ec4a8717b62807b1312678"
        ],
        [
            "Definition chaining_l (S: relation2 X Y): function2 Y Z X Z := comp S.",
            "VernacDefinition",
            "91b5bf61a7840e1892ad5f62db85aeeb828329fd"
        ],
        [
            "Definition chaining_r (S: relation2 Y Z): function2 X Y X Z := fun R => comp R S.",
            "VernacDefinition",
            "65ece0d9487b3c30f6bd8b1613a8a3121b1daff1"
        ],
        [
            "Definition Chain (F: function2 X Y X' Y') (G: function2 X Y Y' Z') := fun R => comp (F R) (G R).",
            "VernacDefinition",
            "a0b221475c007bbd53216b3bc4f370e4a3f6abcf"
        ],
        [
            "Definition Comp (G: function2 X' Y' X'' Y'') (F: function2 X Y X' Y') := fun R => G (F R).",
            "VernacDefinition",
            "74c478dc392408751708f209419ff0d3942b2021"
        ],
        [
            "Variable F: function X Y.",
            "VernacAssumption",
            "fc25232ff9e2f102cc51a1eb40b8d47b50a7500b"
        ],
        [
            "Variable R: relation2 X Y.",
            "VernacAssumption",
            "3e19d5b10b0216095a9b20e6be8d9eb20787439d"
        ],
        [
            "Fixpoint Exp(n: nat): relation2 X Y := match n with | O => R | S n => F (Exp n) end.",
            "VernacFixpoint",
            "889cef3defc15e6c5ac8b71a7bbcc4c55eb74d61"
        ],
        [
            "Definition Iter := union Exp.",
            "VernacDefinition",
            "bd136e530bb4f78b67a18e499a35c0a4f86ccd1e"
        ],
        [
            "Fixpoint UExp(n: nat): relation2 X Y := match n with | O => R | S n => union2 (UExp n) (F (UExp n)) end.",
            "VernacFixpoint",
            "4c06bac66d1006224a48a004d12e51d49a4ca4b3"
        ],
        [
            "Definition UIter := union UExp.",
            "VernacDefinition",
            "12b3d57ffd4d93ed35b1b16fec1e57866ce255d1"
        ],
        [
            "Lemma UExp_incl: forall n, incl (UExp n) (UExp (S n)).",
            "VernacStartTheoremProof",
            "0aa2611f4196588c60035c2279314fb851886631"
        ],
        [
            "intros n x y H; left; auto.",
            "VernacExtend",
            "a1fd44d3328d390d7a987b511fa6a78485ccb0a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UIter_incl: incl R UIter.",
            "VernacStartTheoremProof",
            "4591a48a9f7f9bb5363e1366e4baaa4f06ee0c25"
        ],
        [
            "intros x y H; exists 0; auto.",
            "VernacExtend",
            "e1f51c4c269ce99c0b39843b46dbb5353e006e9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Def'.",
            "VernacEndSegment",
            "3e89bbf07e59e4aa60b4c63065984e997f38c98d"
        ],
        [
            "Section UIter.",
            "VernacBeginSection",
            "b46c11b4ddf375b4399d9713b99bd9f8f38c66b9"
        ],
        [
            "Variables X Y: Type.",
            "VernacAssumption",
            "e185af0746ba866ddb02110f36408332cec5d1a7"
        ],
        [
            "Variable F: function X Y.",
            "VernacAssumption",
            "fc25232ff9e2f102cc51a1eb40b8d47b50a7500b"
        ],
        [
            "Hypothesis HF: increasing F.",
            "VernacAssumption",
            "9d11fdd2d9224f42731270104cd647e35bf89a9c"
        ],
        [
            "Lemma UExp_inc: forall n R S, incl R S -> incl (UExp F R n) (UExp F S n).",
            "VernacStartTheoremProof",
            "3c3fdd3c4fb52171aecb700b5037c1fe53d2a279"
        ],
        [
            "intros n R S H; induction n as [ | n IH ]; intros x y XY; simpl; auto.",
            "VernacExtend",
            "8b68aa021d1766552b0f2a3d58986c3989729866"
        ],
        [
            "celim XY; intro XY.",
            "VernacExtend",
            "f077bdaacb55e81ae44f8ff615dce6f6d020d673"
        ],
        [
            "left; exact (IH _ _ XY).",
            "VernacExtend",
            "00be718af53fb5b9f662e347dca7a9c17bb55e1a"
        ],
        [
            "right; apply (HF IH XY).",
            "VernacExtend",
            "f5f8ae788a6295919daecbda4b364baab5f2eaea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UIter_inc: increasing (UIter F).",
            "VernacStartTheoremProof",
            "79c40800d5ba197fc21a56f01b26414e82a031bd"
        ],
        [
            "intros R S H x y XY; destruct XY as [ n XY ].",
            "VernacExtend",
            "da37a80bff7e0ff08c569cb9d0d513eccb1ae0f8"
        ],
        [
            "exists n; apply (UExp_inc n H _ _ XY).",
            "VernacExtend",
            "a6aeaa2eb9a627e007309c1b7f404dd5db7576a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UExp_UExp: forall R m n, UExp F (UExp F R n) m = UExp F R (m+n).",
            "VernacStartTheoremProof",
            "1ba32833500635bf471104c43bb846f1791b39db"
        ],
        [
            "intros R m; induction m as [ | m IH ]; intros n.",
            "VernacExtend",
            "f45ce281e75aab2a6f36eba24f02ae3fecbc74e8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl; rewrite IH; reflexivity.",
            "VernacExtend",
            "e2939409fab06384a0268118fc6487a2773e1dbb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis HF0: forall R, incl R (F R).",
            "VernacAssumption",
            "c63525deba2e97305129747e58e9847cc096e79c"
        ],
        [
            "Hypothesis HF2: forall R, incl (F (F R)) (F R).",
            "VernacAssumption",
            "d3990e055e4bf936d00eb9349ee5bb15d3f2351e"
        ],
        [
            "Lemma UIter_02: contains (UIter F) F.",
            "VernacStartTheoremProof",
            "38760d0a5c7495462c453b257a4be52f70052fd9"
        ],
        [
            "intros R x y H; destruct H as [ n H ]; cgen H; cgen y; cgen x; induction n as [ | n IH ]; intros x y H.",
            "VernacExtend",
            "de8a06e8cc685554860ea2f5665c803b198f186c"
        ],
        [
            "apply HF0; exact H.",
            "VernacExtend",
            "ccefb8d8e6b7ec6adc4393fe87b2527d717354ea"
        ],
        [
            "celim H; intro H; auto.",
            "VernacExtend",
            "26e3fec383eb998c4b616a324c3038065d56866c"
        ],
        [
            "apply HF2; exact (HF IH H).",
            "VernacExtend",
            "168f3657b79a0f2a8cfc00638893408d1252bb31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UIter.",
            "VernacEndSegment",
            "5aefc1de8a1d17b91f8f2c03947f3a4f797eeec4"
        ],
        [
            "Section UIter'.",
            "VernacBeginSection",
            "a5a4d3ddd41b7b9c85ea8f22708a2119de3931d6"
        ],
        [
            "Variable X: Type.",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Variable F: function X X.",
            "VernacAssumption",
            "c68a2196553fcca912bf40514ca069ac6fe1494f"
        ],
        [
            "Hypothesis HF: forall R, eeq (trans (F R)) (F (trans R)) .",
            "VernacAssumption",
            "a9290e76b8035b5e4243a3b288b7ef3ff366322b"
        ],
        [
            "Hypothesis HF': increasing F.",
            "VernacAssumption",
            "e0386ec41cb1174a03badb52a9d9ec55b47f065a"
        ],
        [
            "Lemma UExp_trans: forall n R, eeq (trans (UExp F R n)) (UExp F (trans R) n).",
            "VernacStartTheoremProof",
            "fbd62c2612bd0e12edf9cf3c99b284aa1a213f0a"
        ],
        [
            "intros n R; induction n as [ | n IH ]; split; intros x y H; auto; celim H; intro H.",
            "VernacExtend",
            "e758e3788c83c31e436459398f88d2bade019719"
        ],
        [
            "left; exact (proj1 IH _ _ H).",
            "VernacExtend",
            "d32750ad69743d92c1e920de4c6c2055dd4c3e9b"
        ],
        [
            "right; apply (HF' (proj1 IH)); apply (proj1 (HF (UExp F R n))); auto.",
            "VernacExtend",
            "b407e75ed8bf79d9bbabd07d8f120dcb387ba9dd"
        ],
        [
            "left; exact (proj2 IH _ _ H).",
            "VernacExtend",
            "27e0fee3415cc66fdb4dc70231afa3192c2fcc86"
        ],
        [
            "right; apply (proj2 (HF (UExp F R n))); apply (HF' (proj2 IH) H).",
            "VernacExtend",
            "1f5fe66fd96acc09b5773d4bbb3a8f4277c4b679"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UIter_trans: forall R, eeq (trans (UIter F R)) (UIter F (trans R)).",
            "VernacStartTheoremProof",
            "0e676d3fb2edffe6e1a9b687f4c596c01ef58879"
        ],
        [
            "intro R; split; intros x y H; destruct H as [ i H ]; exists i.",
            "VernacExtend",
            "c397d498d9262089f2f7cb90b0ae895e4c12212c"
        ],
        [
            "exact (proj1 (UExp_trans i R) _ _ H).",
            "VernacExtend",
            "835cdee37efb3f4cf0928c5d44ef421d8c3e3aed"
        ],
        [
            "exact (proj2 (UExp_trans i R) _ _ H).",
            "VernacExtend",
            "59bc428b839cb6b9c9422ef78532b8cc6b788eb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UIter'.",
            "VernacEndSegment",
            "9d48ebed114a382174f3512a54bac87fa7e80ade"
        ],
        [
            "End Global.",
            "VernacEndSegment",
            "01d6c012f607756c970ee45a3ba415b8beeb175f"
        ],
        [
            "Hint Immediate UExp_incl.",
            "VernacHints",
            "f37b749746a967a9a442b5f001d38bf20e922a08"
        ],
        [
            "Hint Immediate UIter_incl.",
            "VernacHints",
            "83ab24b8196d79c40643b3b26685bf319d3a4e5c"
        ]
    ],
    "proofs": [
        {
            "name": "UExp_incl",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros n x y H; left; auto.",
                        "VernacExtend",
                        "a1fd44d3328d390d7a987b511fa6a78485ccb0a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UIter_incl",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros x y H; exists 0; auto.",
                        "VernacExtend",
                        "e1f51c4c269ce99c0b39843b46dbb5353e006e9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UExp_inc",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros n R S H; induction n as [ | n IH ]; intros x y XY; simpl; auto.",
                        "VernacExtend",
                        "8b68aa021d1766552b0f2a3d58986c3989729866"
                    ]
                },
                {
                    "command": [
                        "celim XY; intro XY.",
                        "VernacExtend",
                        "f077bdaacb55e81ae44f8ff615dce6f6d020d673"
                    ]
                },
                {
                    "command": [
                        "left; exact (IH _ _ XY).",
                        "VernacExtend",
                        "00be718af53fb5b9f662e347dca7a9c17bb55e1a"
                    ]
                },
                {
                    "command": [
                        "right; apply (HF IH XY).",
                        "VernacExtend",
                        "f5f8ae788a6295919daecbda4b364baab5f2eaea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UIter_inc",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros R S H x y XY; destruct XY as [ n XY ].",
                        "VernacExtend",
                        "da37a80bff7e0ff08c569cb9d0d513eccb1ae0f8"
                    ]
                },
                {
                    "command": [
                        "exists n; apply (UExp_inc n H _ _ XY).",
                        "VernacExtend",
                        "a6aeaa2eb9a627e007309c1b7f404dd5db7576a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UExp_UExp",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros R m; induction m as [ | m IH ]; intros n.",
                        "VernacExtend",
                        "f45ce281e75aab2a6f36eba24f02ae3fecbc74e8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite IH; reflexivity.",
                        "VernacExtend",
                        "e2939409fab06384a0268118fc6487a2773e1dbb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UIter_02",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros R x y H; destruct H as [ n H ]; cgen H; cgen y; cgen x; induction n as [ | n IH ]; intros x y H.",
                        "VernacExtend",
                        "de8a06e8cc685554860ea2f5665c803b198f186c"
                    ]
                },
                {
                    "command": [
                        "apply HF0; exact H.",
                        "VernacExtend",
                        "ccefb8d8e6b7ec6adc4393fe87b2527d717354ea"
                    ]
                },
                {
                    "command": [
                        "celim H; intro H; auto.",
                        "VernacExtend",
                        "26e3fec383eb998c4b616a324c3038065d56866c"
                    ]
                },
                {
                    "command": [
                        "apply HF2; exact (HF IH H).",
                        "VernacExtend",
                        "168f3657b79a0f2a8cfc00638893408d1252bb31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UExp_trans",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros n R; induction n as [ | n IH ]; split; intros x y H; auto; celim H; intro H.",
                        "VernacExtend",
                        "e758e3788c83c31e436459398f88d2bade019719"
                    ]
                },
                {
                    "command": [
                        "left; exact (proj1 IH _ _ H).",
                        "VernacExtend",
                        "d32750ad69743d92c1e920de4c6c2055dd4c3e9b"
                    ]
                },
                {
                    "command": [
                        "right; apply (HF' (proj1 IH)); apply (proj1 (HF (UExp F R n))); auto.",
                        "VernacExtend",
                        "b407e75ed8bf79d9bbabd07d8f120dcb387ba9dd"
                    ]
                },
                {
                    "command": [
                        "left; exact (proj2 IH _ _ H).",
                        "VernacExtend",
                        "27e0fee3415cc66fdb4dc70231afa3192c2fcc86"
                    ]
                },
                {
                    "command": [
                        "right; apply (proj2 (HF (UExp F R n))); apply (HF' (proj2 IH) H).",
                        "VernacExtend",
                        "1f5fe66fd96acc09b5773d4bbb3a8f4277c4b679"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UIter_trans",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intro R; split; intros x y H; destruct H as [ i H ]; exists i.",
                        "VernacExtend",
                        "c397d498d9262089f2f7cb90b0ae895e4c12212c"
                    ]
                },
                {
                    "command": [
                        "exact (proj1 (UExp_trans i R) _ _ H).",
                        "VernacExtend",
                        "835cdee37efb3f4cf0928c5d44ef421d8c3e3aed"
                    ]
                },
                {
                    "command": [
                        "exact (proj2 (UExp_trans i R) _ _ H).",
                        "VernacExtend",
                        "59bc428b839cb6b9c9422ef78532b8cc6b788eb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}