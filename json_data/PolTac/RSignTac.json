{
    "filename": "RSignTac.v",
    "coq_project": "PolTac",
    "vernac_cmds": [
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import RPolS.",
            "VernacRequire",
            "4cf6096b490ea846fdeeeae2e604cb6e1418dfbb"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Replace2.",
            "VernacRequire",
            "aadf6ce018fa6a719c55c6889baca25130e92715"
        ],
        [
            "Require Export RGroundTac.",
            "VernacRequire",
            "4edd6e04bbc6095afc182f9cf24cb10e7046f28a"
        ],
        [
            "Theorem Rle_sign_pos_pos: forall x y, (0 <= x -> 0 <= y -> 0 <= x * y)%R.",
            "VernacStartTheoremProof",
            "4a01a365a2c13af127daefc0e2656c6452d0eda1"
        ],
        [
            "intros x y H; apply Rmult_le_pos; auto with real.",
            "VernacExtend",
            "5afaffa866b09b8e1a6182f4594373eb09b950dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_neg_neg: forall x y, (x <= 0 -> y <= 0 -> 0 <= x * y)%R.",
            "VernacStartTheoremProof",
            "d3522cbe6f245c17e0c6cbdbda6adfc6edbba0df"
        ],
        [
            "intros x y H1 H2; replace (x * y)%R with (-x * -y)%R; auto with real; try ring.",
            "VernacExtend",
            "6125152fac7ee2d901eb0208beac4e07f9dfb45c"
        ],
        [
            "apply Rmult_le_pos; auto with real.",
            "VernacExtend",
            "b53ac380d2b69113675b5fb99ebc376873af379a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_pos_neg: forall x, (0 <= -x -> x <= 0)%R.",
            "VernacStartTheoremProof",
            "c1c0a4cf3996c5b9abe4ba9833968317829b3a39"
        ],
        [
            "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
            "VernacExtend",
            "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
        ],
        [
            "apply Ropp_le_contravar; auto with real.",
            "VernacExtend",
            "40bebea47bd44d89bf4ac79ebb60e9250ddf0911"
        ],
        [
            "rewrite Ropp_0; auto with real.",
            "VernacExtend",
            "b8214b4192cc8462028cbfc79def29fa6828fc76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_pos_neg: forall x y: R, (0 <= x -> y <= 0 -> x * y <= 0)%R.",
            "VernacStartTheoremProof",
            "1abcf0b8150106325ae83a730240644c03056ada"
        ],
        [
            "intros x y H1 H2; apply Rle_pos_neg; replace (- (x * y))%R with (x * (- y))%R; auto with real; try ring.",
            "VernacExtend",
            "5abfec906424e5d94cf99935dd90c2a29dc999e1"
        ],
        [
            "apply Rmult_le_pos; auto with real.",
            "VernacExtend",
            "b53ac380d2b69113675b5fb99ebc376873af379a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_neg_pos: forall x y, (x <= 0 -> 0 <= y -> x * y <= 0)%R.",
            "VernacStartTheoremProof",
            "50ad6434bbcbe65fcff737d77e5a234523c4ec87"
        ],
        [
            "intros x y H1 H2; apply Rle_pos_neg; replace (- (x * y))%R with (-x * y)%R; auto with real; try ring.",
            "VernacExtend",
            "457ebb2257fc92e149f938beabc7ba1a391a5bee"
        ],
        [
            "apply Rmult_le_pos; auto with real.",
            "VernacExtend",
            "b53ac380d2b69113675b5fb99ebc376873af379a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_pos_pos: forall x y, (0 < x -> 0 < y -> 0 < x * y)%R.",
            "VernacStartTheoremProof",
            "0890a96013ea01fc7ef1d904a6accfb6fc03179f"
        ],
        [
            "intros; apply Rmult_lt_0_compat; auto with real.",
            "VernacExtend",
            "fc9e6f41879fb676551de85e4c045ef24797297f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_neg_neg: forall x y, (x < 0 -> y < 0 -> 0 < x * y)%R.",
            "VernacStartTheoremProof",
            "b95ccd93506c5f552cce4bf5aa09c1e3f55c52a6"
        ],
        [
            "intros x y H1 H2; replace (x * y)%R with (-x * -y)%R; auto with real; try ring.",
            "VernacExtend",
            "6125152fac7ee2d901eb0208beac4e07f9dfb45c"
        ],
        [
            "apply Rmult_lt_0_compat; auto with real.",
            "VernacExtend",
            "29508a3e25efd62f64eb81a22892752f1882157d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_pos_neg: forall x, (0 < -x -> x < 0)%R.",
            "VernacStartTheoremProof",
            "4895e2ae775dcfd976a7a35358dc1aa0555f1738"
        ],
        [
            "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
            "VernacExtend",
            "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
        ],
        [
            "apply Ropp_lt_contravar; auto with real.",
            "VernacExtend",
            "0a5d41b6222d126714b3ae6ebb0fb0359f52a050"
        ],
        [
            "rewrite Ropp_0; auto with real.",
            "VernacExtend",
            "b8214b4192cc8462028cbfc79def29fa6828fc76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_pos_neg: forall x y, (0 < x -> y < 0 -> x * y < 0)%R.",
            "VernacStartTheoremProof",
            "ee1dc7ca61d29957160b49dd72801f56f22ec6cd"
        ],
        [
            "intros x y H1 H2; apply Rlt_pos_neg; replace (- (x * y))%R with (x * (- y))%R; auto with real; try ring.",
            "VernacExtend",
            "b560c4bb55a69937dbaf398a10d939c9c410a0ad"
        ],
        [
            "apply Rmult_lt_0_compat; auto.",
            "VernacExtend",
            "33612f92e970c7d28a81ee13ef74ef793e1b8b18"
        ],
        [
            "replace 0%R with (-0)%R; auto with real.",
            "VernacExtend",
            "ad9a3c816968bd85bd0ee7d9d06b032f07b0b811"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_neg_pos: forall x y, (x < 0 -> 0 < y -> x * y < 0)%R.",
            "VernacStartTheoremProof",
            "ae6bd30c51ef1c3e10fab0249d4b5b6e24e60c45"
        ],
        [
            "intros x y H1 H2; apply Rlt_pos_neg; replace (- (x * y))%R with (-x * y)%R; auto with real; try ring.",
            "VernacExtend",
            "12a27288605a5e1f6485e27c185a70cbad2b8284"
        ],
        [
            "apply Rmult_lt_0_compat; auto with real.",
            "VernacExtend",
            "29508a3e25efd62f64eb81a22892752f1882157d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_neg_neg: forall x y, (0 >= x -> 0 >= y -> x * y >= 0)%R.",
            "VernacStartTheoremProof",
            "f20912ace014dc2bfc998cd7b7587e28e0b44ce9"
        ],
        [
            "intros; apply Rle_ge; apply Rle_sign_neg_neg; auto with real.",
            "VernacExtend",
            "62a28465493f1f7d78f7b8447cf7e4d86805d1a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_pos_pos: forall x y, (x >= 0 -> y >= 0 -> x * y >= 0)%R.",
            "VernacStartTheoremProof",
            "ceea9a3d2a996e446983dd4451ee919ef5130da5"
        ],
        [
            "intros; apply Rle_ge; apply Rle_sign_pos_pos; auto with real.",
            "VernacExtend",
            "da2d32e8ce8f37b2fdb059b894c28f7121669da6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_neg_pos: forall x, (0 >= -x -> x >= 0)%R.",
            "VernacStartTheoremProof",
            "49a9d4d79f98125ad583ee6f9418c2edf2579830"
        ],
        [
            "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
            "VernacExtend",
            "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
        ],
        [
            "apply Rle_ge;apply Ropp_le_contravar; auto with real.",
            "VernacExtend",
            "3358af60709160ec467561a7b16936e823725d33"
        ],
        [
            "rewrite Ropp_0; auto with real.",
            "VernacExtend",
            "b8214b4192cc8462028cbfc79def29fa6828fc76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_neg_pos: forall x y: R, (0 >= x -> y >= 0 -> 0>= x * y)%R.",
            "VernacStartTheoremProof",
            "9aa676683e5f831bb87791f205b866e2a740ca62"
        ],
        [
            "intros; apply Rle_ge; apply Rle_sign_neg_pos; auto with real.",
            "VernacExtend",
            "c587a88201280c95e32c42f7ca70afba98a99202"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_pos_neg: forall x y, (x >= 0 -> 0 >= y -> 0 >= x * y)%R.",
            "VernacStartTheoremProof",
            "b1dc9bbf569d9328e9d9792d1d436f4c0be2d1a0"
        ],
        [
            "intros; apply Rle_ge; apply Rle_sign_pos_neg; auto with real.",
            "VernacExtend",
            "675c929cd04c70f2037af7d857383e927550e1f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_neg_neg: forall x y, (0 > x -> 0 > y -> x * y > 0)%R.",
            "VernacStartTheoremProof",
            "335fd47e4974a1e4f4e9dc5c6cb80d544b37dbfe"
        ],
        [
            "intros; red; apply Rlt_sign_neg_neg; auto with real.",
            "VernacExtend",
            "64a5c3092561012046ca81f36b3f53dbcdbcfd0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_pos_pos: forall x y, (x > 0 -> y > 0 -> x * y > 0)%R.",
            "VernacStartTheoremProof",
            "a8cc3726cc981b38796a46774e7b41c560d38239"
        ],
        [
            "intros; red; apply Rlt_sign_pos_pos; auto with real.",
            "VernacExtend",
            "089b8eaa883968a5293cf19ee6ccf6f77a5a46cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_neg_pos: forall x, (0 > -x -> x > 0)%R.",
            "VernacStartTheoremProof",
            "fbf62d267f3229224c46c1ad8e225a355ec2da6f"
        ],
        [
            "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
            "VernacExtend",
            "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
        ],
        [
            "red;apply Ropp_lt_contravar; auto with real.",
            "VernacExtend",
            "659dd07490592912cd8f7ac89e8daa7242936625"
        ],
        [
            "rewrite Ropp_0; auto with real.",
            "VernacExtend",
            "b8214b4192cc8462028cbfc79def29fa6828fc76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_neg_pos: forall x y, (0 > x -> y > 0 -> 0> x * y)%R.",
            "VernacStartTheoremProof",
            "d1dfb73508ea5a88b05f38d33fba6280227c3e14"
        ],
        [
            "intros; red; apply Rlt_sign_neg_pos; auto with real.",
            "VernacExtend",
            "a5e969cf41eaec24f1e5cb77dfa432b35995546d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_pos_neg: forall x y, (x > 0 -> 0 > y -> 0 > x * y)%R.",
            "VernacStartTheoremProof",
            "fdf5025c79b737e900d95958b384b34ebe751fbb"
        ],
        [
            "intros; red; apply Rlt_sign_pos_neg; auto with real.",
            "VernacExtend",
            "8ce3a03a7899207ca36eb704b88afc36b2de3884"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_pos_pos_rev: forall x y: R, (0 < x -> 0 <= x * y -> 0 <= y)%R.",
            "VernacStartTheoremProof",
            "e977d8deeff87ca52f612f393a8844b26780a8bb"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
            "VernacExtend",
            "ec6bc3783e65fd88fc5009045d78e596adbe1086"
        ],
        [
            "intros H3; absurd (0 <= x * y)%R; auto with real.",
            "VernacExtend",
            "1ad71ecb2589caa5e5285d951e9795bb4d1e5a18"
        ],
        [
            "apply Rlt_not_le;apply Rlt_sign_pos_neg; auto.",
            "VernacExtend",
            "871b158b709dd06f994984a74a2d1ca21dd372d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_neg_neg_rev: forall x y: R, (x < 0 -> 0 <= x * y -> y <= 0)%R.",
            "VernacStartTheoremProof",
            "3994621b7501d139bac0d6e6dc4ab0099d0a7452"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
            "VernacExtend",
            "13b745a64bbc195e7081f317b528de654d8e98d4"
        ],
        [
            "intros H3; absurd (0 <= x * y)%R; auto with real.",
            "VernacExtend",
            "1ad71ecb2589caa5e5285d951e9795bb4d1e5a18"
        ],
        [
            "apply Rlt_not_le;apply Rlt_sign_neg_pos; auto.",
            "VernacExtend",
            "27c239010484ec61db819e49bad93338a868170e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_pos_neg_rev: forall x y: R, (0 < x -> x * y <= 0 -> y <= 0)%R.",
            "VernacStartTheoremProof",
            "51dfdab1a59c6142bf9d8680ea1e68ed1cbf82d6"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
            "VernacExtend",
            "13b745a64bbc195e7081f317b528de654d8e98d4"
        ],
        [
            "intros H3; absurd (x * y <= 0)%R; auto with real.",
            "VernacExtend",
            "fd6090cc3ab0458efd56164efa7cc399aea161df"
        ],
        [
            "apply Rlt_not_le;apply Rlt_sign_pos_pos; auto.",
            "VernacExtend",
            "5d125a7e3184d24a75d9cf3eff3455e53721e6a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_sign_neg_pos_rev: forall x y: R, (x < 0 -> x * y <= 0 -> 0 <= y)%R.",
            "VernacStartTheoremProof",
            "e85b32103d1070b6c62b17317211e9f6ad519ff4"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
            "VernacExtend",
            "ec6bc3783e65fd88fc5009045d78e596adbe1086"
        ],
        [
            "intros H3; absurd (x * y <= 0)%R; auto with real.",
            "VernacExtend",
            "fd6090cc3ab0458efd56164efa7cc399aea161df"
        ],
        [
            "apply Rlt_not_le;apply Rlt_sign_neg_neg; auto.",
            "VernacExtend",
            "7566bb26af20e08573440bff711297ab3c6498c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_pos_pos_rev: forall x y: R, (x > 0 -> x * y >= 0 -> y >= 0)%R.",
            "VernacStartTheoremProof",
            "6b6c9f15418500076a51d080b2241c2793d5f6aa"
        ],
        [
            "intros x y H1 H2; apply Rle_ge; apply Rle_sign_pos_pos_rev with x; auto with real.",
            "VernacExtend",
            "95c62e0b6a9dac3b0d107770355de236de3e0eec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_neg_neg_rev: forall x y: R, (0 > x -> x * y >= 0-> 0 >= y)%R.",
            "VernacStartTheoremProof",
            "92a5076b1c732cdd7646c3843f1c060a19565a9a"
        ],
        [
            "intros x y H1 H2; apply Rle_ge; apply Rle_sign_neg_neg_rev with x; auto with real.",
            "VernacExtend",
            "68c25a82473c040036067d88299d6d2bb88c01b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_pos_neg_rev: forall x y: R, (x > 0 -> 0 >= x * y -> 0 >= y)%R.",
            "VernacStartTheoremProof",
            "0b1da9c942fb2976b441d263829602533ec0b96f"
        ],
        [
            "intros x y H1 H2; apply Rle_ge; apply Rle_sign_pos_neg_rev with x; auto with real.",
            "VernacExtend",
            "1a5a359e0b270f5ecaacbfae7a9264800ca31cea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rge_sign_neg_pos_rev: forall x y: R, (0 > x -> 0 >= x * y -> y >= 0)%R.",
            "VernacStartTheoremProof",
            "01aa4f04f7d4ea24ef508ba11ed24596caf047ff"
        ],
        [
            "intros x y H1 H2; apply Rle_ge; apply Rle_sign_neg_pos_rev with x; auto with real.",
            "VernacExtend",
            "3a5f8ede89a3f31715828e6ff71cb0e094e204ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_pos_pos_rev: forall x y: R, (0 < x -> 0 < x * y -> 0 < y)%R.",
            "VernacStartTheoremProof",
            "ee661fe3d6f3ad92ed77922c1958d13e56964acc"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
            "VernacExtend",
            "13b745a64bbc195e7081f317b528de654d8e98d4"
        ],
        [
            "intros H3; absurd (0 < x * y)%R; auto with real.",
            "VernacExtend",
            "b5ea4e625993bdcdbe1d4a5dcd4d872d98efc128"
        ],
        [
            "apply Rle_not_lt;apply Rle_sign_pos_neg; auto with real.",
            "VernacExtend",
            "b2d89c7eb7c707010b76eac2b3bf312c2d48ba2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_neg_neg_rev: forall x y: R, (x < 0 -> 0 < x * y -> y < 0)%R.",
            "VernacStartTheoremProof",
            "fc0b2b3568d4d427584bdd0ab86909fa9397644e"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
            "VernacExtend",
            "ec6bc3783e65fd88fc5009045d78e596adbe1086"
        ],
        [
            "intros H3; absurd (0 < x * y)%R; auto with real.",
            "VernacExtend",
            "b5ea4e625993bdcdbe1d4a5dcd4d872d98efc128"
        ],
        [
            "apply Rle_not_lt;apply Rle_sign_neg_pos; auto with real.",
            "VernacExtend",
            "d95db8967ad5fc023761fa0d8e45be7189641778"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_pos_neg_rev: forall x y: R, (0 < x -> x * y < 0 -> y < 0)%R.",
            "VernacStartTheoremProof",
            "53267663096091f7b8c372a6be20b98309cdf502"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
            "VernacExtend",
            "ec6bc3783e65fd88fc5009045d78e596adbe1086"
        ],
        [
            "intros H3; absurd (x * y < 0)%R; auto with real.",
            "VernacExtend",
            "cfd9582b69a985d5fd9128f58b223d228d9b7df1"
        ],
        [
            "apply Rle_not_lt;apply Rle_sign_pos_pos; auto with real.",
            "VernacExtend",
            "343d780d588a217e6e8fc84f9462601172527fb5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_sign_neg_pos_rev: forall x y: R, (x < 0 -> x * y < 0 -> 0 < y)%R.",
            "VernacStartTheoremProof",
            "bd4d1c0480d36ba16badc5d69427e332e79d6d0d"
        ],
        [
            "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
            "VernacExtend",
            "13b745a64bbc195e7081f317b528de654d8e98d4"
        ],
        [
            "intros H3; absurd (x * y < 0)%R; auto with real.",
            "VernacExtend",
            "cfd9582b69a985d5fd9128f58b223d228d9b7df1"
        ],
        [
            "apply Rle_not_lt;apply Rle_sign_neg_neg; auto with real.",
            "VernacExtend",
            "7b5521867d380410b3da6f1db80944587fd9213a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_pos_pos_rev: forall x y: R, (x > 0 -> x * y > 0 -> y > 0)%R.",
            "VernacStartTheoremProof",
            "d2f4e83e5ea25a567ce94f5353f2b1c4c2b3a7a0"
        ],
        [
            "intros x y H1 H2; red; apply Rlt_sign_pos_pos_rev with x; auto with real.",
            "VernacExtend",
            "0512402c5ceffcbbed89066e6af4473b1162443f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_neg_neg_rev: forall x y: R, (0 > x -> x * y > 0-> 0 > y)%R.",
            "VernacStartTheoremProof",
            "e806496cf20c3446b40ffb6cb0677459169aaea1"
        ],
        [
            "intros x y H1 H2; red; apply Rlt_sign_neg_neg_rev with x; auto with real.",
            "VernacExtend",
            "fc32b2175316b7438925dedb55348d15b3f65da8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_pos_neg_rev: forall x y: R, (x > 0 -> 0 > x * y -> 0 > y)%R.",
            "VernacStartTheoremProof",
            "3f082fbfa3a50d396e174b3b37cb4afda8be1150"
        ],
        [
            "intros x y H1 H2; red; apply Rlt_sign_pos_neg_rev with x; auto with real.",
            "VernacExtend",
            "b3f3f1b4549c59f026a56eaea5b95a85923eb452"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rgt_sign_neg_pos_rev: forall x y: R, (0 > x -> 0 > x * y -> y > 0)%R.",
            "VernacStartTheoremProof",
            "deb484efeec3c2f4d0874bc54f80a85c70e72ce1"
        ],
        [
            "intros x y H1 H2; red; apply Rlt_sign_neg_pos_rev with x; auto with real.",
            "VernacExtend",
            "a7056d36392b85ad64388d6ba4fd1bd1cfe890a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_le_compat_l: forall n m p : R, (m <= n)%R -> (0 <= p)%R -> (p * m <= p * n)%R.",
            "VernacStartTheoremProof",
            "c2e0f259cf1e37426beb972bd04005fafd3022fb"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_le_neg_compat_l: forall n m p : R, (m <= n)%R -> (p <= 0)%R -> (p * n <= p * m)%R.",
            "VernacStartTheoremProof",
            "c443fe339dc3b0d7072bf007d74b19e3382e2039"
        ],
        [
            "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
            "VernacExtend",
            "85b7a808b99c83e907442dbd47caf21c8423cd38"
        ],
        [
            "replace (p * m)%R with (-(-p * m))%R; auto with real; try ring.",
            "VernacExtend",
            "33fc4dcd673ff156089f12484ce8f2d89ce02062"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ropp_lt: forall n m, (m < n -> -n < -m)%R.",
            "VernacStartTheoremProof",
            "6fb9e036bc5d495bef9e03b28ed2db36e2709397"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_lt_neg_compat_l: forall n m p : R, (m < n)%R -> (p < 0)%R -> (p * n < p * m)%R.",
            "VernacStartTheoremProof",
            "57fd32bbceb29d915fccedd8f3f41864bfd4894d"
        ],
        [
            "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
            "VernacExtend",
            "85b7a808b99c83e907442dbd47caf21c8423cd38"
        ],
        [
            "replace (p * m)%R with (-(-p * m))%R; auto with real; try ring.",
            "VernacExtend",
            "33fc4dcd673ff156089f12484ce8f2d89ce02062"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ropp_ge: forall n m, (m >= n -> -n >= -m)%R.",
            "VernacStartTheoremProof",
            "f193ad2d7a0ba01c195c96b33aec15af06ec993f"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_ge_compat_l: forall n m p : R, (m >= n)%R -> (p >= 0)%R -> (p * m >= p * n)%R.",
            "VernacStartTheoremProof",
            "6366b744aed6eb3530a1ae8800f42fb1d7119cac"
        ],
        [
            "intros n m p H H1; apply Rle_ge; auto with real.",
            "VernacExtend",
            "fdaecb2a71447217e95ba4034a613628d81eae90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_ge_neg_compat_l: forall n m p : R, (m >= n)%R -> (0 >= p)%R -> (p * n >= p * m)%R.",
            "VernacStartTheoremProof",
            "f0c0986b4632e503e775fa8dd25583044f60414c"
        ],
        [
            "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
            "VernacExtend",
            "85b7a808b99c83e907442dbd47caf21c8423cd38"
        ],
        [
            "replace (p * m)%R with (-(-p * m))%R; auto with real;try ring.",
            "VernacExtend",
            "33fc4dcd673ff156089f12484ce8f2d89ce02062"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Ropp_gt: forall n m, (m > n -> -n > -m)%R.",
            "VernacStartTheoremProof",
            "4da43498a895e098e2f9482251e3a833a2da55c4"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_gt_compat_l: forall n m p : R, (n > m)%R -> (p > 0)%R -> (p * n > p * m)%R.",
            "VernacStartTheoremProof",
            "94142b9aec5746a7915715f6e268d310774ec50b"
        ],
        [
            "unfold Rgt; auto with real.",
            "VernacExtend",
            "16a65d960ee2a146467fbf79fcbc42cc05e74b56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_gt_neg_compat_l: forall n m p : R, (m > n)%R -> (0 > p)%R -> (p * n > p * m)%R.",
            "VernacStartTheoremProof",
            "63accdad1a6736e5bec0f2d8c5eb30531d6cf91f"
        ],
        [
            "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
            "VernacExtend",
            "85b7a808b99c83e907442dbd47caf21c8423cd38"
        ],
        [
            "replace (p * m)%R with (-(-p * m))%R; auto with real; try ring.",
            "VernacExtend",
            "33fc4dcd673ff156089f12484ce8f2d89ce02062"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_le_compat_l_rev: forall n m p : R, (0 < p)%R -> (p * n <= p * m)%R -> (n <= m)%R.",
            "VernacStartTheoremProof",
            "c9c83e3a9bb2a4f5e7c46a04aa5ae2d9c06a225c"
        ],
        [
            "intros n m p H H1; case (Rle_or_lt n m); auto; intros H2.",
            "VernacExtend",
            "91cca7199d4b716142d5d3d1302ce5a81d71c9d1"
        ],
        [
            "absurd (p * n <= p * m)%R; auto with real.",
            "VernacExtend",
            "89d5aa7d041dc989983ce9fb98c5cad42bc9cab6"
        ],
        [
            "apply Rlt_not_le; apply Rmult_lt_compat_l; auto.",
            "VernacExtend",
            "d9a203204bdfac97c4c42ad0690ccdf9d359b9ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_le_neg_compat_l_rev: forall n m p : R, (p < 0)%R -> (p * n <= p * m)%R -> (m <= n)%R.",
            "VernacStartTheoremProof",
            "ee019d459383e7070db4d3f6f9677732ce0c558b"
        ],
        [
            "intros n m p H H1; case (Rle_or_lt m n); auto; intros H2.",
            "VernacExtend",
            "115e3f7ca754dfbcb4d69bf4b996dd1b6055d0bd"
        ],
        [
            "absurd (p * n <= p * m)%R; auto with real.",
            "VernacExtend",
            "89d5aa7d041dc989983ce9fb98c5cad42bc9cab6"
        ],
        [
            "apply Rlt_not_le; apply Rmult_lt_neg_compat_l; auto.",
            "VernacExtend",
            "1d55cc340d79baf5636b982c0d388c774ef3dbb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_lt_compat_l_rev: forall n m p : R, (0 < p)%R -> (p * n < p * m)%R -> (n < m)%R.",
            "VernacStartTheoremProof",
            "86d668bedd242f41feb0afa63dce33bce7b633d4"
        ],
        [
            "intros n m p H H1; case (Rle_or_lt m n); auto; intros H2.",
            "VernacExtend",
            "115e3f7ca754dfbcb4d69bf4b996dd1b6055d0bd"
        ],
        [
            "absurd (p * n < p * m)%R; auto with real.",
            "VernacExtend",
            "b7ae4f26e0694d9948bcb78f8fd6737315eeee19"
        ],
        [
            "apply Rle_not_lt; apply Rmult_le_compat_l; auto with real.",
            "VernacExtend",
            "f695fe15fb9f7aa54dcacc19ac87132bac7e80b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_lt_neg_compat_l_rev: forall n m p : R, (p < 0)%R -> (p * n < p * m)%R -> (m < n)%R.",
            "VernacStartTheoremProof",
            "067a79ef0e1b80ca98a4ac3dbff969b6880c20b9"
        ],
        [
            "intros n m p H H1; case (Rle_or_lt n m); auto; intros H2.",
            "VernacExtend",
            "91cca7199d4b716142d5d3d1302ce5a81d71c9d1"
        ],
        [
            "absurd (p * n < p * m)%R; auto with real.",
            "VernacExtend",
            "b7ae4f26e0694d9948bcb78f8fd6737315eeee19"
        ],
        [
            "apply Rle_not_lt; apply Rmult_le_neg_compat_l; auto with real.",
            "VernacExtend",
            "d1f35edc80032f4104589e14d7b4ccdfc6ca08b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_ge_compat_l_rev: forall n m p : R, (p > 0)%R -> (p * n >= p * m)%R -> (n >= m)%R.",
            "VernacStartTheoremProof",
            "643a6fa0db57a660d6c94bd2110d024825b17aaf"
        ],
        [
            "intros n m p H H1; apply Rle_ge; apply Rmult_le_compat_l_rev with p; auto with real.",
            "VernacExtend",
            "f32321c08a377143cca50fa8d5cf483b84335e1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_ge_neg_compat_l_rev: forall n m p : R, (0 > p)%R -> (p * n >= p * m)%R -> (m >= n)%R.",
            "VernacStartTheoremProof",
            "169f25d7d39cf7c7d2132f7f99d47c11045c850b"
        ],
        [
            "intros n m p H H1; apply Rle_ge; apply Rmult_le_neg_compat_l_rev with p; auto with real.",
            "VernacExtend",
            "e449fc1cfbc8634be230417ff3cd9a830f255a8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_gt_compat_l_rev: forall n m p : R, (p > 0)%R -> (p * n > p * m)%R -> (n > m)%R.",
            "VernacStartTheoremProof",
            "8a5be5e394c375aba70809d50afe66fbc627d775"
        ],
        [
            "intros n m p H H1; red; apply Rmult_lt_compat_l_rev with p; auto with real.",
            "VernacExtend",
            "577522d1a781e8337c1860b9518df4aa6e61885c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_gt_neg_compat_l_rev: forall n m p : R, (0 > p)%R -> (p * n > p * m)%R -> (m > n)%R.",
            "VernacStartTheoremProof",
            "ff3bec7b7ce588315a863d359e6260ae0db2627b"
        ],
        [
            "intros n m p H H1; red; apply Rmult_lt_neg_compat_l_rev with p; auto with real.",
            "VernacExtend",
            "2f105f0b624037f9f886ff244b474102eed2c412"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rsign_type := fun (x y:list R) => Prop.",
            "VernacDefinition",
            "2b5f6f005d468a61b6cf0e35acb6ca91b3b04687"
        ],
        [
            "Definition Rsign_cons : forall x y, (Rsign_type x y) := fun x y => True.",
            "VernacDefinition",
            "58132c072d7b56804618d9fa790bb8ce0d20a1c0"
        ],
        [
            "Ltac Rsign_push term1 term2 := generalize (Rsign_cons term1 term2); intro.",
            "VernacExtend",
            "9da3e7d861afb2a32eb48a5f46253fe1a84d8b15"
        ],
        [
            "Ltac Rsign_le term := match term with (?X1 * ?X2)%R => Rsign_le X1; match goal with H1: (Rsign_type ?s1 ?s2) |- _ => Rsign_le X2; match goal with H2: (Rsign_type ?s3 ?s4) |- _ => clear H1 H2; let s5 := eval unfold List.app in (s1++s3) in let s6 := eval unfold List.app in (s2++s4) in Rsign_push s5 s6 end end | _ => let H1 := fresh \"H\" in (((assert (H1: (0 <= term)%R); [auto with real; fail | idtac]) || (assert (H1: (term <= 0)%R); [auto with real; fail | idtac])); clear H1; Rsign_push (term::nil) (@nil R)) || Rsign_push (@nil R) (term::nil) end.",
            "VernacExtend",
            "8ed8314473212e0f5c78b5a3e89bcc4f2d6f929c"
        ],
        [
            "Ltac Rsign_lt term := match term with (?X1 * ?X2)%R => Rsign_lt X1; match goal with H1: (Rsign_type ?s1 ?s2) |- _ => Rsign_lt X2; match goal with H2: (Rsign_type ?s3 ?s4) |- _ => clear H1 H2; let s5 := eval unfold List.app in (s1++s3) in let s6 := eval unfold List.app in (s2++s4) in Rsign_push s5 s6 end end | _ => let H1 := fresh \"H\" in (((assert (H1: (0 < term)%R); [auto with real; fail | idtac]) || (assert (H1: (term < 0)%R); [auto with real; fail | idtac])); clear H1; Rsign_push (term::nil) (@nil R)) || Rsign_push (@nil R) (term::nil) end.",
            "VernacExtend",
            "d61ccc30e65cd9988c2fca0d29d42e4acb014e0a"
        ],
        [
            "Ltac Rsign_top0 := match goal with |- (0 <= ?X1)%R => Rsign_le X1 | |- (?X1 <= 0)%R => Rsign_le X1 | |- (0 < ?X1)%R => Rsign_lt X1 | |- (?X1 < 0)%R => Rsign_le X1 | |- (0 >= ?X1)%R => Rsign_le X1 | |- (?X1 >= 0)%R => Rsign_le X1 | |- (0 > ?X1 )%R => Rsign_lt X1 | |- (?X1 > 0)%R => Rsign_le X1 end.",
            "VernacExtend",
            "11604d242a8bc47a20a0542042e1b417f7dc96f4"
        ],
        [
            "Ltac Rsign_top := match goal with | |- (?X1 * _ <= ?X1 * _)%R => Rsign_le X1 | |- (?X1 * _ < ?X1 * _)%R => Rsign_le X1 | |- (?X1 * _ >= ?X1 * _)%R => Rsign_le X1 | |- (?X1 * _ > ?X1 * _)%R => Rsign_le X1 end.",
            "VernacExtend",
            "9d46e484f8f63db9a661026def83492065e44c5b"
        ],
        [
            "Ltac Rhyp_sign_top0 H:= match type of H with (0 <= ?X1)%R => Rsign_lt X1 | (?X1 <= 0)%R => Rsign_lt X1 | (0 < ?X1)%R => Rsign_lt X1 | (?X1 < 0)%R => Rsign_lt X1 | (0 >= ?X1)%R => Rsign_lt X1 | (?X1 >= 0)%R => Rsign_lt X1 | (0 > ?X1 )%R => Rsign_lt X1 | (?X1 > 0)%R => Rsign_lt X1 end.",
            "VernacExtend",
            "8b652e1c7d6a2bb4aa28c4a8aa51cf72c5429172"
        ],
        [
            "Ltac Rhyp_sign_top H := match type of H with | (?X1 * _ <= ?X1 * _)%R => Rsign_lt X1 | (?X1 * _ < ?X1 * _)%R => Rsign_lt X1 | (?X1 * _ >= ?X1 * _)%R => Rsign_lt X1 | (?X1 * _ > ?X1 * _)%R => Rsign_lt X1 | ?X1 => generalize H end.",
            "VernacExtend",
            "7fa6ab441cd68b17d6ee5ebe0636b35e783bd8c2"
        ],
        [
            "Ltac Rsign_get_term g := match g with (0 <= ?X1)%R => X1 | (?X1 <= 0)%R => X1 | (?X1 * _ <= ?X1 * _)%R => X1 | (0 < ?X1)%R => X1 | (?X1 < 0)%R => X1 | (?X1 * _ < ?X1 * _)%R => X1 | (0 >= ?X1)%R => X1 | (?X1 >= 0)%R => X1 | (?X1 * _ >= ?X1 * _)%R => X1 | (?X1 * _ >= _)%R => X1 | (0 > ?X1)%R => X1 | (?X1 > 0)%R => X1 | (?X1 * _ > ?X1 * _)%R => X1 end.",
            "VernacExtend",
            "e47e6749bcacc8b71c425f926418221a0709d0e4"
        ],
        [
            "Ltac Rsign_get_left g := match g with | (_ * ?X1 <= _)%R => X1 | (_ * ?X1 < _)%R => X1 | (_ * ?X1 >= _)%R => X1 | (_ * ?X1 > _)%R => X1 end.",
            "VernacExtend",
            "f28104d7e7916eb792d23fece918489284bfed9b"
        ],
        [
            "Ltac Rsign_get_right g := match g with | (_ <= _ * ?X1)%R => X1 | (_ < _ * ?X1)%R => X1 | (_ >= _ * ?X1)%R => X1 | (_ > _ * ?X1)%R => X1 end.",
            "VernacExtend",
            "3b5d2757ca05e3fa6f4f343f14f14e0f719a054e"
        ],
        [
            "Fixpoint mkRprodt (l: list R)(t:R) {struct l}: R := match l with nil => t | e::l1 => (e * mkRprodt l1 t)%R end.",
            "VernacFixpoint",
            "6c149fb825258fa622566c835d40874ccb51d69a"
        ],
        [
            "Fixpoint mkRprod (l: list R) : R := match l with nil => 1%R | e::nil => e | e::l1 => (e * mkRprod l1)%R end.",
            "VernacFixpoint",
            "d38af55760dda440d4297fc2868beafa403eca0f"
        ],
        [
            "Ltac rsign_tac_aux0 := match goal with |- (0 <= ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (0 <= X1)%R); auto with real; apply Rle_sign_pos_pos) || (assert (H1: (X1 <= 0)%R); auto with real; apply Rle_sign_neg_neg); try rsign_tac_aux0; clear H1) | |- (?X1 * ?X2 <= 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 <= X1)%R); auto with real; apply Rle_sign_pos_neg) || (assert (H1: (X1 <= 0)%R); auto with real; apply Rle_sign_neg_pos); try rsign_tac_aux0; clear H1) | |- (0 < ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; apply Rlt_sign_pos_pos) || (assert (H1: (X1 < 0)%R); auto with real; apply Rlt_sign_neg_neg); try rsign_tac_aux0; clear H1) | |- (?X1 * ?X2 < 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; apply Rlt_sign_pos_neg) || (assert (H1: (X1 < 0)%R); auto with real; apply Rlt_sign_neg_pos); try rsign_tac_aux0; clear H1) | |- (?X1 * ?X2 >= 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 >= X1)%R); auto with real; apply Rge_sign_neg_neg) || (assert (H1: (X1 >= 0)%R); auto with real; apply Rge_sign_pos_pos); try rsign_tac_aux0; clear H1) | |- (0 >= ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (X1 >= 0)%R); auto with real; apply Rge_sign_pos_neg) || (assert (H1: (0 >= X1)%R); auto with real; apply Rge_sign_neg_pos); try rsign_tac_aux0; clear H1) | |- (0 > ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (0 > X1)%R); auto with real; apply Rgt_sign_neg_pos) || (assert (H1: (X1 > 0)%R); auto with real; apply Rgt_sign_pos_neg); try rsign_tac_aux0; clear H1) | |- (?X1 * ?X2 > 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 > X1)%R); auto with real; apply Rgt_sign_neg_neg) || (assert (H1: (X1 > 0)%R); auto with real; apply Rgt_sign_pos_pos); try rsign_tac_aux0; clear H1) | _ => auto with real; fail 1 \"rsign_tac_aux\" end.",
            "VernacExtend",
            "47df74030f7d369a6b43aa6963a0a8df1d2a831f"
        ],
        [
            "Ltac rsign_tac0 := Rsign_top0; match goal with H1: (Rsign_type ?s1 ?s2) |- ?g => clear H1; let s := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (mkRprod s2)) in let t := Rsign_get_term g in replace t with s; [try rsign_tac_aux0 | try ring]; auto with real end.",
            "VernacExtend",
            "e5f744aa73812f6f5f995b2fbf45267d4cf6f332"
        ],
        [
            "Ltac hyp_rsign_tac_aux0 H := match type of H with (0 <= ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rle_sign_pos_pos_rev _ _ H1 H) || (assert (H1: (X1 < 0)%R); auto with real; generalize (Rle_sign_neg_neg_rev _ _ H1 H))); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (?X1 * ?X2 <= 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rle_sign_pos_neg_rev _ _ H1 H)) || (assert (H1: (X1 <= 0)%R); auto with real; generalize (Rle_sign_neg_pos_rev _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (0 < ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rlt_sign_pos_pos_rev _ _ H1 H)) || (assert (H1: (X1 < 0)%R); auto with real; generalize (Rlt_sign_neg_neg_rev _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (?X1 * ?X2 < 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rlt_sign_pos_neg_rev _ _ H1 H)) || (assert (H1: (X1 < 0)%R); auto with real; generalize (Rlt_sign_neg_pos_rev _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (?X1 * ?X2 >= 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 >X1)%R); auto with real; generalize (Rge_sign_neg_neg_rev _ _ H1 H)) || (assert (H1: (X1 > 0)%R); auto with real; generalize (Rge_sign_pos_pos _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (0 >= ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (X1 > 0)%R); auto with real; generalize (Rge_sign_pos_neg _ _ H1 H)) || (assert (H1: (0 > X1)%R); auto with real; generalize (Rge_sign_neg_pos _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (0 > ?X1 * ?X2)%R => let H1 := fresh \"H\" in ((assert (H1: (0 > X1)%R); auto with real; generalize (Rgt_sign_neg_pos _ _ H1 H)) || (assert (H1: (X1 > 0)%R); auto with real; generalize (Rgt_sign_pos_neg _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | (?X1 * ?X2 > 0)%R => let H1 := fresh \"H\" in ((assert (H1: (0 > X1)%R); auto with real; generalize (Rgt_sign_neg_neg _ _ H1 H)) || (assert (H1: (X1 > 0)%R); auto with real; generalize (Rgt_sign_pos_pos _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux0 H; clear H1) | _ => auto with real; fail 1 \"hyp_rsign_tac_aux0\" end.",
            "VernacExtend",
            "e7da9ddc3eaec23e26edcf61955da69237f517c6"
        ],
        [
            "Ltac hyp_rsign_tac0 H := Rhyp_sign_top0 H; match goal with H1: (Rsign_type ?s1 ?s2) |- ?g => clear H1; let s := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (mkRprod s2)) in let t := Rsign_get_term g in replace t with s in H; [try hyp_rsign_tac_aux0 H | try ring]; auto with real end.",
            "VernacExtend",
            "ed876629734fdcec5c43a74e8fb7c4982cbfac9f"
        ],
        [
            "Ltac rsign_tac_aux := match goal with | |- (?X1 * ?X2 <= ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (0 <= X1)%R); auto with real; apply Rmult_le_compat_l) || (assert (H1: (X1 <= 0)%R); auto with real; apply Rmult_le_neg_compat_l); try rsign_tac_aux; clear H1) | |- (?X1 * ?X2 < ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (0 <= X1)%R); auto with real; apply Rmult_lt_compat_l) || (assert (H1: (X1 <= 0)%R); auto with real; apply Rmult_lt_neg_compat_l); try rsign_tac_aux; clear H1) | |- (?X1 * ?X2 >= ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (X1 >= 0)%R); auto with real; apply Rmult_ge_compat_l) || (assert (H1: (0 >= X1)%R); auto with real; apply Rmult_ge_neg_compat_l); try rsign_tac_aux; clear H1) | |- (?X1 * ?X2 > ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (0 <= X1)%R); auto with real; apply Rmult_lt_compat_l) || (assert (H1: (X1 <= 0)%R); auto with real; apply Rmult_lt_neg_compat_l); try rsign_tac_aux; clear H1) | _ => auto with real; fail 1 \"Rsign_tac_aux\" end.",
            "VernacExtend",
            "a999c24063adf675acb67cd643c3225ed8ee3aa9"
        ],
        [
            "Ltac rsign_tac := rsign_tac0 || (Rsign_top; match goal with H1: (Rsign_type ?s1 ?s2) |- ?g => clear H1; let s := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (mkRprod s2)) in let t := Rsign_get_term g in let l := Rsign_get_left g in let r := Rsign_get_right g in let sl := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (Rmult (mkRprod s2) l)) in let sr := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (Rmult (mkRprod s2) r)) in replace2_tac (Rmult t l) (Rmult t r) sl sr; [rsign_tac_aux | ring | ring] end).",
            "VernacExtend",
            "5d6949acc7b6d45c9834be2ba41598667cd57ff9"
        ],
        [
            "Ltac hyp_rsign_tac_aux H := match type of H with | (?X1 * ?X2 <= ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rmult_le_compat_l_rev _ _ _ H1 H)) || (assert (H1: (X1 < 0)%R); auto with real; generalize (Rmult_le_neg_compat_l_rev _ _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux H; clear H1) | (?X1 * ?X2 < ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rmult_lt_compat_l_rev _ _ _ H1 H)) || (assert (H1: (X1 < 0)%R); auto with real; generalize (Rmult_lt_neg_compat_l_rev _ _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux H; clear H1) | (?X1 * ?X2 >= ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (X1 > 0)%R); auto with real; generalize (Rmult_ge_compat_l_rev _ _ _ H1 H)) || (assert (H1: (0 > X1)%R); auto with real; generalize (Rmult_ge_neg_compat_l_rev _ _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux H; clear H1) | (?X1 * ?X2 > ?X1 * ?X3)%R => let H1 := fresh \"H\" in ((assert (H1: (0 < X1)%R); auto with real; generalize (Rmult_gt_compat_l_rev _ _ _ H1 H)) || (assert (H1: (X1 < 0)%R); auto with real; generalize (Rmult_gt_neg_compat_l_rev _ _ _ H1 H)); clear H; intros H; try hyp_rsign_tac_aux H; clear H1) | _ => auto with real; fail 0 \"Rhyp_sign_tac_aux\" end.",
            "VernacExtend",
            "c76c6427da6131a83bb4725f9f81eed62e4248b4"
        ],
        [
            "Ltac hyp_rsign_tac H := hyp_rsign_tac0 H|| (Rhyp_sign_top H; match goal with H1: (Rsign_type ?s1 ?s2) |- _ => clear H1; let s := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (mkRprod s2)) in let g := type of H in let t := Rsign_get_term g in let l := Rsign_get_left g in let r := Rsign_get_right g in let sl := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (Rmult (mkRprod s2) l)) in let sr := eval unfold mkRprod, mkRprodt in (mkRprodt s1 (Rmult (mkRprod s2) r)) in (generalize H; replace2_tac (Rmult t l) (Rmult t r) sl sr; [clear H; intros H; try hyp_rsign_tac_aux H| ring | ring]) end).",
            "VernacExtend",
            "4c76d5faecc3967a0bd412dba0937981071394ce"
        ],
        [
            "Section Test.",
            "VernacBeginSection",
            "7312dc3febac5f4f4f34b969a6193df7ca6d72da"
        ],
        [
            "Let test : forall a b c, (0 < a -> a * b < a * c -> b < c)%R.",
            "VernacDefinition",
            "34a5210354009aa20fc9a475e26e0cd1a8488470"
        ],
        [
            "intros a b c H1 H.",
            "VernacExtend",
            "71e73a708bc5747b1edb9f5b8d0d0b07d55403cf"
        ],
        [
            "hyp_rsign_tac H.",
            "VernacExtend",
            "d6cfc668d3b94c17406f92be05996174c0cf3b29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let test1 : forall a b c, (a < 0 -> a * b < a * c -> c < b)%R.",
            "VernacDefinition",
            "9fd2d47377bca72c49cdc0e79d63e1f9658fb26e"
        ],
        [
            "intros a b c H H1.",
            "VernacExtend",
            "74446c317a6c7b3e338ec92275b2fcf0ba8e4f71"
        ],
        [
            "hyp_rsign_tac H1.",
            "VernacExtend",
            "985a3fdd72329022a28b3bc046647b2e4fe2673d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let test2 : forall a b c, (0 < a -> a * b <= a * c -> b <= c)%R.",
            "VernacDefinition",
            "03b3e1f1272f400fb22fb7c75d43eb8453a4285e"
        ],
        [
            "intros a b c H H1.",
            "VernacExtend",
            "74446c317a6c7b3e338ec92275b2fcf0ba8e4f71"
        ],
        [
            "hyp_rsign_tac H1.",
            "VernacExtend",
            "985a3fdd72329022a28b3bc046647b2e4fe2673d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let test3 : forall a b c, (0 > a -> (a * b) >= (a * c) -> c >= b)%R.",
            "VernacDefinition",
            "412ee2bdac59fcf616357050571eaac43f4d8d7e"
        ],
        [
            "intros a b c H H1.",
            "VernacExtend",
            "74446c317a6c7b3e338ec92275b2fcf0ba8e4f71"
        ],
        [
            "hyp_rsign_tac H1.",
            "VernacExtend",
            "985a3fdd72329022a28b3bc046647b2e4fe2673d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Test.",
            "VernacEndSegment",
            "5ef36602e05b1405a9de93a2ffeb72f5cdc86267"
        ]
    ],
    "proofs": [
        {
            "name": "Rle_sign_pos_pos",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros x y H; apply Rmult_le_pos; auto with real.",
                        "VernacExtend",
                        "5afaffa866b09b8e1a6182f4594373eb09b950dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_neg_neg",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; replace (x * y)%R with (-x * -y)%R; auto with real; try ring.",
                        "VernacExtend",
                        "6125152fac7ee2d901eb0208beac4e07f9dfb45c"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos; auto with real.",
                        "VernacExtend",
                        "b53ac380d2b69113675b5fb99ebc376873af379a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_pos_neg",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
                        "VernacExtend",
                        "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar; auto with real.",
                        "VernacExtend",
                        "40bebea47bd44d89bf4ac79ebb60e9250ddf0911"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0; auto with real.",
                        "VernacExtend",
                        "b8214b4192cc8462028cbfc79def29fa6828fc76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_pos_neg",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rle_pos_neg; replace (- (x * y))%R with (x * (- y))%R; auto with real; try ring.",
                        "VernacExtend",
                        "5abfec906424e5d94cf99935dd90c2a29dc999e1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos; auto with real.",
                        "VernacExtend",
                        "b53ac380d2b69113675b5fb99ebc376873af379a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_neg_pos",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rle_pos_neg; replace (- (x * y))%R with (-x * y)%R; auto with real; try ring.",
                        "VernacExtend",
                        "457ebb2257fc92e149f938beabc7ba1a391a5bee"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos; auto with real.",
                        "VernacExtend",
                        "b53ac380d2b69113675b5fb99ebc376873af379a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_pos_pos",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmult_lt_0_compat; auto with real.",
                        "VernacExtend",
                        "fc9e6f41879fb676551de85e4c045ef24797297f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_neg_neg",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; replace (x * y)%R with (-x * -y)%R; auto with real; try ring.",
                        "VernacExtend",
                        "6125152fac7ee2d901eb0208beac4e07f9dfb45c"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; auto with real.",
                        "VernacExtend",
                        "29508a3e25efd62f64eb81a22892752f1882157d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_pos_neg",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
                        "VernacExtend",
                        "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_contravar; auto with real.",
                        "VernacExtend",
                        "0a5d41b6222d126714b3ae6ebb0fb0359f52a050"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0; auto with real.",
                        "VernacExtend",
                        "b8214b4192cc8462028cbfc79def29fa6828fc76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_pos_neg",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rlt_pos_neg; replace (- (x * y))%R with (x * (- y))%R; auto with real; try ring.",
                        "VernacExtend",
                        "b560c4bb55a69937dbaf398a10d939c9c410a0ad"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; auto.",
                        "VernacExtend",
                        "33612f92e970c7d28a81ee13ef74ef793e1b8b18"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (-0)%R; auto with real.",
                        "VernacExtend",
                        "ad9a3c816968bd85bd0ee7d9d06b032f07b0b811"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_neg_pos",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rlt_pos_neg; replace (- (x * y))%R with (-x * y)%R; auto with real; try ring.",
                        "VernacExtend",
                        "12a27288605a5e1f6485e27c185a70cbad2b8284"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; auto with real.",
                        "VernacExtend",
                        "29508a3e25efd62f64eb81a22892752f1882157d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_neg_neg",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros; apply Rle_ge; apply Rle_sign_neg_neg; auto with real.",
                        "VernacExtend",
                        "62a28465493f1f7d78f7b8447cf7e4d86805d1a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_pos_pos",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros; apply Rle_ge; apply Rle_sign_pos_pos; auto with real.",
                        "VernacExtend",
                        "da2d32e8ce8f37b2fdb059b894c28f7121669da6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_neg_pos",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
                        "VernacExtend",
                        "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge;apply Ropp_le_contravar; auto with real.",
                        "VernacExtend",
                        "3358af60709160ec467561a7b16936e823725d33"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0; auto with real.",
                        "VernacExtend",
                        "b8214b4192cc8462028cbfc79def29fa6828fc76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_neg_pos",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros; apply Rle_ge; apply Rle_sign_neg_pos; auto with real.",
                        "VernacExtend",
                        "c587a88201280c95e32c42f7ca70afba98a99202"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_pos_neg",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros; apply Rle_ge; apply Rle_sign_pos_neg; auto with real.",
                        "VernacExtend",
                        "675c929cd04c70f2037af7d857383e927550e1f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_neg_neg",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros; red; apply Rlt_sign_neg_neg; auto with real.",
                        "VernacExtend",
                        "64a5c3092561012046ca81f36b3f53dbcdbcfd0e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_pos_pos",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros; red; apply Rlt_sign_pos_pos; auto with real.",
                        "VernacExtend",
                        "089b8eaa883968a5293cf19ee6ccf6f77a5a46cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_neg_pos",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros x H; rewrite <- (Ropp_involutive 0); rewrite <- (Ropp_involutive x); auto with real.",
                        "VernacExtend",
                        "f21190ae0fbedfa2e3c4954d2f5344cb400bb2ce"
                    ]
                },
                {
                    "command": [
                        "red;apply Ropp_lt_contravar; auto with real.",
                        "VernacExtend",
                        "659dd07490592912cd8f7ac89e8daa7242936625"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0; auto with real.",
                        "VernacExtend",
                        "b8214b4192cc8462028cbfc79def29fa6828fc76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_neg_pos",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros; red; apply Rlt_sign_neg_pos; auto with real.",
                        "VernacExtend",
                        "a5e969cf41eaec24f1e5cb77dfa432b35995546d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_pos_neg",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros; red; apply Rlt_sign_pos_neg; auto with real.",
                        "VernacExtend",
                        "8ce3a03a7899207ca36eb704b88afc36b2de3884"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_pos_pos_rev",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
                        "VernacExtend",
                        "ec6bc3783e65fd88fc5009045d78e596adbe1086"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (0 <= x * y)%R; auto with real.",
                        "VernacExtend",
                        "1ad71ecb2589caa5e5285d951e9795bb4d1e5a18"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le;apply Rlt_sign_pos_neg; auto.",
                        "VernacExtend",
                        "871b158b709dd06f994984a74a2d1ca21dd372d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_neg_neg_rev",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
                        "VernacExtend",
                        "13b745a64bbc195e7081f317b528de654d8e98d4"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (0 <= x * y)%R; auto with real.",
                        "VernacExtend",
                        "1ad71ecb2589caa5e5285d951e9795bb4d1e5a18"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le;apply Rlt_sign_neg_pos; auto.",
                        "VernacExtend",
                        "27c239010484ec61db819e49bad93338a868170e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_pos_neg_rev",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
                        "VernacExtend",
                        "13b745a64bbc195e7081f317b528de654d8e98d4"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (x * y <= 0)%R; auto with real.",
                        "VernacExtend",
                        "fd6090cc3ab0458efd56164efa7cc399aea161df"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le;apply Rlt_sign_pos_pos; auto.",
                        "VernacExtend",
                        "5d125a7e3184d24a75d9cf3eff3455e53721e6a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_sign_neg_pos_rev",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
                        "VernacExtend",
                        "ec6bc3783e65fd88fc5009045d78e596adbe1086"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (x * y <= 0)%R; auto with real.",
                        "VernacExtend",
                        "fd6090cc3ab0458efd56164efa7cc399aea161df"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le;apply Rlt_sign_neg_neg; auto.",
                        "VernacExtend",
                        "7566bb26af20e08573440bff711297ab3c6498c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_pos_pos_rev",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rle_ge; apply Rle_sign_pos_pos_rev with x; auto with real.",
                        "VernacExtend",
                        "95c62e0b6a9dac3b0d107770355de236de3e0eec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_neg_neg_rev",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rle_ge; apply Rle_sign_neg_neg_rev with x; auto with real.",
                        "VernacExtend",
                        "68c25a82473c040036067d88299d6d2bb88c01b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_pos_neg_rev",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rle_ge; apply Rle_sign_pos_neg_rev with x; auto with real.",
                        "VernacExtend",
                        "1a5a359e0b270f5ecaacbfae7a9264800ca31cea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rge_sign_neg_pos_rev",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; apply Rle_ge; apply Rle_sign_neg_pos_rev with x; auto with real.",
                        "VernacExtend",
                        "3a5f8ede89a3f31715828e6ff71cb0e094e204ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_pos_pos_rev",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
                        "VernacExtend",
                        "13b745a64bbc195e7081f317b528de654d8e98d4"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (0 < x * y)%R; auto with real.",
                        "VernacExtend",
                        "b5ea4e625993bdcdbe1d4a5dcd4d872d98efc128"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt;apply Rle_sign_pos_neg; auto with real.",
                        "VernacExtend",
                        "b2d89c7eb7c707010b76eac2b3bf312c2d48ba2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_neg_neg_rev",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
                        "VernacExtend",
                        "ec6bc3783e65fd88fc5009045d78e596adbe1086"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (0 < x * y)%R; auto with real.",
                        "VernacExtend",
                        "b5ea4e625993bdcdbe1d4a5dcd4d872d98efc128"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt;apply Rle_sign_neg_pos; auto with real.",
                        "VernacExtend",
                        "d95db8967ad5fc023761fa0d8e45be7189641778"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_pos_neg_rev",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt 0 y); auto with real.",
                        "VernacExtend",
                        "ec6bc3783e65fd88fc5009045d78e596adbe1086"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (x * y < 0)%R; auto with real.",
                        "VernacExtend",
                        "cfd9582b69a985d5fd9128f58b223d228d9b7df1"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt;apply Rle_sign_pos_pos; auto with real.",
                        "VernacExtend",
                        "343d780d588a217e6e8fc84f9462601172527fb5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_sign_neg_pos_rev",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; case (Rle_or_lt y 0); auto with real.",
                        "VernacExtend",
                        "13b745a64bbc195e7081f317b528de654d8e98d4"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (x * y < 0)%R; auto with real.",
                        "VernacExtend",
                        "cfd9582b69a985d5fd9128f58b223d228d9b7df1"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt;apply Rle_sign_neg_neg; auto with real.",
                        "VernacExtend",
                        "7b5521867d380410b3da6f1db80944587fd9213a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_pos_pos_rev",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; red; apply Rlt_sign_pos_pos_rev with x; auto with real.",
                        "VernacExtend",
                        "0512402c5ceffcbbed89066e6af4473b1162443f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_neg_neg_rev",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; red; apply Rlt_sign_neg_neg_rev with x; auto with real.",
                        "VernacExtend",
                        "fc32b2175316b7438925dedb55348d15b3f65da8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_pos_neg_rev",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; red; apply Rlt_sign_pos_neg_rev with x; auto with real.",
                        "VernacExtend",
                        "b3f3f1b4549c59f026a56eaea5b95a85923eb452"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rgt_sign_neg_pos_rev",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2; red; apply Rlt_sign_neg_pos_rev with x; auto with real.",
                        "VernacExtend",
                        "a7056d36392b85ad64388d6ba4fd1bd1cfe890a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_le_compat_l",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_le_neg_compat_l",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
                        "VernacExtend",
                        "85b7a808b99c83e907442dbd47caf21c8423cd38"
                    ]
                },
                {
                    "command": [
                        "replace (p * m)%R with (-(-p * m))%R; auto with real; try ring.",
                        "VernacExtend",
                        "33fc4dcd673ff156089f12484ce8f2d89ce02062"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_lt",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_lt_neg_compat_l",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
                        "VernacExtend",
                        "85b7a808b99c83e907442dbd47caf21c8423cd38"
                    ]
                },
                {
                    "command": [
                        "replace (p * m)%R with (-(-p * m))%R; auto with real; try ring.",
                        "VernacExtend",
                        "33fc4dcd673ff156089f12484ce8f2d89ce02062"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_ge",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_ge_compat_l",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; apply Rle_ge; auto with real.",
                        "VernacExtend",
                        "fdaecb2a71447217e95ba4034a613628d81eae90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_ge_neg_compat_l",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
                        "VernacExtend",
                        "85b7a808b99c83e907442dbd47caf21c8423cd38"
                    ]
                },
                {
                    "command": [
                        "replace (p * m)%R with (-(-p * m))%R; auto with real;try ring.",
                        "VernacExtend",
                        "33fc4dcd673ff156089f12484ce8f2d89ce02062"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_gt",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_gt_compat_l",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "unfold Rgt; auto with real.",
                        "VernacExtend",
                        "16a65d960ee2a146467fbf79fcbc42cc05e74b56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_gt_neg_compat_l",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2; replace (p * n)%R with (-(-p * n))%R; auto with real; try ring.",
                        "VernacExtend",
                        "85b7a808b99c83e907442dbd47caf21c8423cd38"
                    ]
                },
                {
                    "command": [
                        "replace (p * m)%R with (-(-p * m))%R; auto with real; try ring.",
                        "VernacExtend",
                        "33fc4dcd673ff156089f12484ce8f2d89ce02062"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_le_compat_l_rev",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; case (Rle_or_lt n m); auto; intros H2.",
                        "VernacExtend",
                        "91cca7199d4b716142d5d3d1302ce5a81d71c9d1"
                    ]
                },
                {
                    "command": [
                        "absurd (p * n <= p * m)%R; auto with real.",
                        "VernacExtend",
                        "89d5aa7d041dc989983ce9fb98c5cad42bc9cab6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le; apply Rmult_lt_compat_l; auto.",
                        "VernacExtend",
                        "d9a203204bdfac97c4c42ad0690ccdf9d359b9ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_le_neg_compat_l_rev",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; case (Rle_or_lt m n); auto; intros H2.",
                        "VernacExtend",
                        "115e3f7ca754dfbcb4d69bf4b996dd1b6055d0bd"
                    ]
                },
                {
                    "command": [
                        "absurd (p * n <= p * m)%R; auto with real.",
                        "VernacExtend",
                        "89d5aa7d041dc989983ce9fb98c5cad42bc9cab6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le; apply Rmult_lt_neg_compat_l; auto.",
                        "VernacExtend",
                        "1d55cc340d79baf5636b982c0d388c774ef3dbb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_lt_compat_l_rev",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; case (Rle_or_lt m n); auto; intros H2.",
                        "VernacExtend",
                        "115e3f7ca754dfbcb4d69bf4b996dd1b6055d0bd"
                    ]
                },
                {
                    "command": [
                        "absurd (p * n < p * m)%R; auto with real.",
                        "VernacExtend",
                        "b7ae4f26e0694d9948bcb78f8fd6737315eeee19"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt; apply Rmult_le_compat_l; auto with real.",
                        "VernacExtend",
                        "f695fe15fb9f7aa54dcacc19ac87132bac7e80b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_lt_neg_compat_l_rev",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; case (Rle_or_lt n m); auto; intros H2.",
                        "VernacExtend",
                        "91cca7199d4b716142d5d3d1302ce5a81d71c9d1"
                    ]
                },
                {
                    "command": [
                        "absurd (p * n < p * m)%R; auto with real.",
                        "VernacExtend",
                        "b7ae4f26e0694d9948bcb78f8fd6737315eeee19"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt; apply Rmult_le_neg_compat_l; auto with real.",
                        "VernacExtend",
                        "d1f35edc80032f4104589e14d7b4ccdfc6ca08b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_ge_compat_l_rev",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; apply Rle_ge; apply Rmult_le_compat_l_rev with p; auto with real.",
                        "VernacExtend",
                        "f32321c08a377143cca50fa8d5cf483b84335e1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_ge_neg_compat_l_rev",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; apply Rle_ge; apply Rmult_le_neg_compat_l_rev with p; auto with real.",
                        "VernacExtend",
                        "e449fc1cfbc8634be230417ff3cd9a830f255a8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_gt_compat_l_rev",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; red; apply Rmult_lt_compat_l_rev with p; auto with real.",
                        "VernacExtend",
                        "577522d1a781e8337c1860b9518df4aa6e61885c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_gt_neg_compat_l_rev",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros n m p H H1; red; apply Rmult_lt_neg_compat_l_rev with p; auto with real.",
                        "VernacExtend",
                        "2f105f0b624037f9f886ff244b474102eed2c412"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros a b c H1 H.",
                        "VernacExtend",
                        "71e73a708bc5747b1edb9f5b8d0d0b07d55403cf"
                    ]
                },
                {
                    "command": [
                        "hyp_rsign_tac H.",
                        "VernacExtend",
                        "d6cfc668d3b94c17406f92be05996174c0cf3b29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test1",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "intros a b c H H1.",
                        "VernacExtend",
                        "74446c317a6c7b3e338ec92275b2fcf0ba8e4f71"
                    ]
                },
                {
                    "command": [
                        "hyp_rsign_tac H1.",
                        "VernacExtend",
                        "985a3fdd72329022a28b3bc046647b2e4fe2673d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test2",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros a b c H H1.",
                        "VernacExtend",
                        "74446c317a6c7b3e338ec92275b2fcf0ba8e4f71"
                    ]
                },
                {
                    "command": [
                        "hyp_rsign_tac H1.",
                        "VernacExtend",
                        "985a3fdd72329022a28b3bc046647b2e4fe2673d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test3",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros a b c H H1.",
                        "VernacExtend",
                        "74446c317a6c7b3e338ec92275b2fcf0ba8e4f71"
                    ]
                },
                {
                    "command": [
                        "hyp_rsign_tac H1.",
                        "VernacExtend",
                        "985a3fdd72329022a28b3bc046647b2e4fe2673d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}