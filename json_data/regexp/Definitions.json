{
    "filename": "Definitions.v",
    "coq_project": "regexp",
    "vernac_cmds": [
        [
            "Require Export RegExp.Utility.",
            "VernacRequire",
            "14bbc9102081b7a3584cf0cea062ae9512e4a040"
        ],
        [
            "Require Export Setoid.",
            "VernacRequire",
            "a0df4327e58518a5282381a0591ee590a2104408"
        ],
        [
            "Require Export Relation_Definitions.",
            "VernacRequire",
            "7609fde823572a97bac3f20d213dd37544e5ef7e"
        ],
        [
            "Inductive RegExp : Set := | Empty : RegExp | Eps : RegExp | Char : ascii -> RegExp | Cat : RegExp -> RegExp -> RegExp | Or : RegExp -> RegExp -> RegExp | Star : RegExp -> RegExp | Not : RegExp -> RegExp | And : RegExp -> RegExp -> RegExp.",
            "VernacInductive",
            "17302d2982fe9476b0fa44e381f6047c975192c8"
        ],
        [
            "Notation \"a ++ b\" := (Cat a b).",
            "VernacNotation",
            "37aa840efb031aeb7938d52275e833959e2b2530"
        ],
        [
            "Notation \"a || b\" := (Or a b).",
            "VernacNotation",
            "06734c591c8a1de000bdd6f783d3f05fd6b615c9"
        ],
        [
            "Fixpoint nu(re:RegExp):bool := match re with | Empty => false | Eps => true | Char c => false | Cat r s => (nu r && nu s)%bool | Or r s => (nu r || nu s)%bool | Star r => true | Not r => negb (nu r) | And r s => (nu r && nu s)%bool end.",
            "VernacFixpoint",
            "4f6b06ab1477b318df060210a8a7f17e185b5349"
        ],
        [
            "Fixpoint derive(a:ascii)(re:RegExp):RegExp := match re with | Empty => Empty | Eps => Empty | Char c => match (ascii_dec c a) with | left _ => Eps | right _ => Empty end | Cat r s => match (nu r) with | true => ((derive a r) ++ s) || (derive a s) | false => (derive a r) ++ s end | Or r s => (derive a r) || (derive a s) | Star r => (derive a r) ++ (Star r) | Not r => Not (derive a r) | And r s => And (derive a r) (derive a s) end.",
            "VernacFixpoint",
            "707cefd42979c3b4be0df548506c2224fa8c70dd"
        ],
        [
            "Notation \"re / a\" := (derive a re).",
            "VernacNotation",
            "7cdbc69322efb9ddf67b5c82af89e8d926ddeb59"
        ],
        [
            "Fixpoint matches (re:RegExp)(s:string) : bool := match s with | EmptyString => nu re | String a w => matches (re / a) w end.",
            "VernacFixpoint",
            "150bc1f8eced42c1bc4665eabd7b71c9413efff4"
        ],
        [
            "Notation \"re ~= s\" := (matches re s) (at level 60).",
            "VernacNotation",
            "77cdd0dd5a10bfccc962be5c481dc51e6e2f590a"
        ],
        [
            "Notation \"re ~== s\" := (matches re s = true) (at level 60).",
            "VernacNotation",
            "1f6472f156bec9e8c3107169044d0c0f9c06d104"
        ],
        [
            "Notation \"re ~!= s\" := (matches re s = false) (at level 60).",
            "VernacNotation",
            "bf0417b74a5fec426b893a8197805f28d1da0b86"
        ],
        [
            "Theorem derivation : forall (a:ascii)(w:string)(re:RegExp), re ~= (String a w) = (re / a) ~= w.",
            "VernacStartTheoremProof",
            "f95881b02851071f10d9e9c6106a07fdc0f83233"
        ],
        [
            "intros a w re.",
            "VernacExtend",
            "b4c6489de1765bbad562dab3a0b3b20f097af5a9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition re_eq (re re':RegExp) : Prop := forall s, re ~= s = re' ~= s.",
            "VernacDefinition",
            "1b184b5c7a4f39c0b8dcff3e2ad8a780ddd7a75d"
        ],
        [
            "Notation \"a =R= b\" := (re_eq a b) (at level 70).",
            "VernacNotation",
            "388c7366e83323aa6519f7592affb2d2a490dda9"
        ],
        [
            "Lemma re_eq_refl : reflexive RegExp re_eq.",
            "VernacStartTheoremProof",
            "469634af0a7a56b22f3254152589d8f537fabc29"
        ],
        [
            "unfold reflexive.",
            "VernacExtend",
            "21dcad806a4ad5199721afcc7ae0b64f75d1f0df"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "unfold re_eq.",
            "VernacExtend",
            "bcd862d7d8edb4d86d1ed3e74f6906bf101d6920"
        ],
        [
            "intro s.",
            "VernacExtend",
            "8f016ced1ae59837b7d879a76d5f880ff6397ebe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma re_eq_sym : symmetric RegExp re_eq.",
            "VernacStartTheoremProof",
            "4e9a2c1568b273281b9c3649260bbb32a76311f6"
        ],
        [
            "unfold symmetric.",
            "VernacExtend",
            "be4be2f59eec31f2955f95702b7bffaf80f0c2dd"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "unfold re_eq in *.",
            "VernacExtend",
            "0bfa2774ebe2593b15ef19ab6da8a371a0f3b4f4"
        ],
        [
            "intros s.",
            "VernacExtend",
            "f24a724dc5e422652c0513af3278d221ab4df04a"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma re_eq_trans : transitive RegExp re_eq.",
            "VernacStartTheoremProof",
            "4070ceba76b1a6c54129777cd1eb4267f9fd2604"
        ],
        [
            "unfold transitive.",
            "VernacExtend",
            "f25ed909ae05b72c02b7cf56db312c5d032e3c19"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "unfold re_eq in *.",
            "VernacExtend",
            "0bfa2774ebe2593b15ef19ab6da8a371a0f3b4f4"
        ],
        [
            "intros Hxy Hyz s.",
            "VernacExtend",
            "b38cc461664c7b1ffda8bcb17a66f6fed7bb783b"
        ],
        [
            "transitivity (y ~= s); eauto.",
            "VernacExtend",
            "9094013119ffdb231aa7748a26751f3287036cb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Relation : RegExp re_eq reflexivity proved by re_eq_refl symmetry proved by re_eq_sym transitivity proved by re_eq_trans as RegExp_setoid.",
            "VernacExtend",
            "308264371a49760eb5cb9f6995806169b531e843"
        ],
        [
            "Lemma nu_equals : forall r r', r =R= r' -> nu r = nu r'.",
            "VernacStartTheoremProof",
            "5078db665c6e3978cdd9bcad180626825e15f1c4"
        ],
        [
            "unfold re_eq in *.",
            "VernacExtend",
            "0bfa2774ebe2593b15ef19ab6da8a371a0f3b4f4"
        ],
        [
            "intros r r' H.",
            "VernacExtend",
            "809b3b7abd84d618b42b92f7f9f4be8959f2c5cb"
        ],
        [
            "specialize (H \"\"%string); simpl in H.",
            "VernacExtend",
            "a74cd31df557afe54bd744da23d61166d7208a0a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism : nu with signature re_eq ==> bool_eq as nu_morphism.",
            "VernacExtend",
            "62196454acac973bfa1d825cc59e93e42c0bbe79"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "eapply nu_equals.",
            "VernacExtend",
            "0fcafc67a5d577476453233381a3c86405ad8c52"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_equals : forall r r', r =R= r' -> (forall a, r / a =R= r' / a).",
            "VernacStartTheoremProof",
            "6c8bd652d035c487ca73001a528ecb0e7eba8bf6"
        ],
        [
            "intros r r' H.",
            "VernacExtend",
            "809b3b7abd84d618b42b92f7f9f4be8959f2c5cb"
        ],
        [
            "unfold re_eq.",
            "VernacExtend",
            "bcd862d7d8edb4d86d1ed3e74f6906bf101d6920"
        ],
        [
            "intros a s.",
            "VernacExtend",
            "a51c08e74341ec5fad008440764ad1230af7f502"
        ],
        [
            "repeat rewrite <- derivation.",
            "VernacExtend",
            "d97e26e8f0fd5d2f9d59e813988b59bab6df7805"
        ],
        [
            "unfold re_eq in H.",
            "VernacExtend",
            "ef66a05b41f4896ff97a9dac60e1b259e9fa5bf8"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_equals_inv : forall r r', (forall a, (r / a) =R= (r' / a)) -> nu r = nu r' -> r =R= r'.",
            "VernacStartTheoremProof",
            "35874c0d6400f9c69d8eedcbbd74cef91412753f"
        ],
        [
            "intros r r' Ha Hnu.",
            "VernacExtend",
            "995d7a5be407fbc4d082ed161ec4bfd95ab044e9"
        ],
        [
            "unfold re_eq.",
            "VernacExtend",
            "bcd862d7d8edb4d86d1ed3e74f6906bf101d6920"
        ],
        [
            "induction s.",
            "VernacExtend",
            "07b2950967b17efa9314973f4d8444c5caabf173"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat erewrite derivation.",
            "VernacExtend",
            "f55b6ec3140b44adcb58c0a00c066b258cbaa2ab"
        ],
        [
            "eapply Ha.",
            "VernacExtend",
            "1176cffe4981a50a29258420933f955d949f082a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism : derive with signature ascii_eq ==> re_eq ==> re_eq as derive_morphism.",
            "VernacExtend",
            "cb95e025f3d587519af81075ac0aa95384989cbb"
        ],
        [
            "intros x y H x0 y0 H0.",
            "VernacExtend",
            "956a04b30694b6fc4b11f3afeb6a046e046f210a"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "eapply derive_equals.",
            "VernacExtend",
            "ad65410b03be7b4809a17c7ed420f151f3acad22"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "derivation",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros a w re.",
                        "VernacExtend",
                        "b4c6489de1765bbad562dab3a0b3b20f097af5a9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "re_eq_refl",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "unfold reflexive.",
                        "VernacExtend",
                        "21dcad806a4ad5199721afcc7ae0b64f75d1f0df"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "unfold re_eq.",
                        "VernacExtend",
                        "bcd862d7d8edb4d86d1ed3e74f6906bf101d6920"
                    ]
                },
                {
                    "command": [
                        "intro s.",
                        "VernacExtend",
                        "8f016ced1ae59837b7d879a76d5f880ff6397ebe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "re_eq_sym",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold symmetric.",
                        "VernacExtend",
                        "be4be2f59eec31f2955f95702b7bffaf80f0c2dd"
                    ]
                },
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "unfold re_eq in *.",
                        "VernacExtend",
                        "0bfa2774ebe2593b15ef19ab6da8a371a0f3b4f4"
                    ]
                },
                {
                    "command": [
                        "intros s.",
                        "VernacExtend",
                        "f24a724dc5e422652c0513af3278d221ab4df04a"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "re_eq_trans",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold transitive.",
                        "VernacExtend",
                        "f25ed909ae05b72c02b7cf56db312c5d032e3c19"
                    ]
                },
                {
                    "command": [
                        "intros x y z.",
                        "VernacExtend",
                        "8357c7ce661033f932c65582aab008de3b5d8530"
                    ]
                },
                {
                    "command": [
                        "unfold re_eq in *.",
                        "VernacExtend",
                        "0bfa2774ebe2593b15ef19ab6da8a371a0f3b4f4"
                    ]
                },
                {
                    "command": [
                        "intros Hxy Hyz s.",
                        "VernacExtend",
                        "b38cc461664c7b1ffda8bcb17a66f6fed7bb783b"
                    ]
                },
                {
                    "command": [
                        "transitivity (y ~= s); eauto.",
                        "VernacExtend",
                        "9094013119ffdb231aa7748a26751f3287036cb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nu_equals",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "unfold re_eq in *.",
                        "VernacExtend",
                        "0bfa2774ebe2593b15ef19ab6da8a371a0f3b4f4"
                    ]
                },
                {
                    "command": [
                        "intros r r' H.",
                        "VernacExtend",
                        "809b3b7abd84d618b42b92f7f9f4be8959f2c5cb"
                    ]
                },
                {
                    "command": [
                        "specialize (H \"\"%string); simpl in H.",
                        "VernacExtend",
                        "a74cd31df557afe54bd744da23d61166d7208a0a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nu_morphism_Proper",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "eapply nu_equals.",
                        "VernacExtend",
                        "0fcafc67a5d577476453233381a3c86405ad8c52"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_equals",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros r r' H.",
                        "VernacExtend",
                        "809b3b7abd84d618b42b92f7f9f4be8959f2c5cb"
                    ]
                },
                {
                    "command": [
                        "unfold re_eq.",
                        "VernacExtend",
                        "bcd862d7d8edb4d86d1ed3e74f6906bf101d6920"
                    ]
                },
                {
                    "command": [
                        "intros a s.",
                        "VernacExtend",
                        "a51c08e74341ec5fad008440764ad1230af7f502"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- derivation.",
                        "VernacExtend",
                        "d97e26e8f0fd5d2f9d59e813988b59bab6df7805"
                    ]
                },
                {
                    "command": [
                        "unfold re_eq in H.",
                        "VernacExtend",
                        "ef66a05b41f4896ff97a9dac60e1b259e9fa5bf8"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_equals_inv",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros r r' Ha Hnu.",
                        "VernacExtend",
                        "995d7a5be407fbc4d082ed161ec4bfd95ab044e9"
                    ]
                },
                {
                    "command": [
                        "unfold re_eq.",
                        "VernacExtend",
                        "bcd862d7d8edb4d86d1ed3e74f6906bf101d6920"
                    ]
                },
                {
                    "command": [
                        "induction s.",
                        "VernacExtend",
                        "07b2950967b17efa9314973f4d8444c5caabf173"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "repeat erewrite derivation.",
                        "VernacExtend",
                        "f55b6ec3140b44adcb58c0a00c066b258cbaa2ab"
                    ]
                },
                {
                    "command": [
                        "eapply Ha.",
                        "VernacExtend",
                        "1176cffe4981a50a29258420933f955d949f082a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_morphism_Proper",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros x y H x0 y0 H0.",
                        "VernacExtend",
                        "956a04b30694b6fc4b11f3afeb6a046e046f210a"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "eapply derive_equals.",
                        "VernacExtend",
                        "ad65410b03be7b4809a17c7ed420f151f3acad22"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}