{
    "filename": "Field.v",
    "coq_project": "GeometricAlgebra",
    "vernac_cmds": [
        [
            "Require Import ZArith Aux Even.",
            "VernacRequire",
            "699d1f2e1733515997ab09eabfa75035f3eabb90"
        ],
        [
            "Structure fparams: Type := { K:> Set; v0: K; v1: K; eqK: K -> K -> bool; oppK: K -> K; addK : K -> K -> K; multK : K -> K -> K; invK : K -> K }.",
            "VernacInductive",
            "e3631177fbf6b16868c73e683eea25d74261b6e7"
        ],
        [
            "Delimit Scope field_scope with f.",
            "VernacDelimiters",
            "7db89c357e8832089cc1917fbc72490a0dea6d68"
        ],
        [
            "Notation \"x ?= y\" := (eqK _ x y) (at level 70) : field_scope.",
            "VernacNotation",
            "2ae03acf7827a8a573e0e0048e572bdc4565ff25"
        ],
        [
            "Notation \"x + y\" := (addK _ x y) : field_scope.",
            "VernacNotation",
            "2e0012e98c95164d3d8be83f5e8c60c8342153fb"
        ],
        [
            "Notation \"- x\" := (oppK _ x) : field_scope.",
            "VernacNotation",
            "4144c144fdad7cd9447dc4de19f8bd4d14798cb7"
        ],
        [
            "Notation \"x ^-1\" := (invK _ x) (at level 25) : field_scope.",
            "VernacNotation",
            "f0fe16241d39433bc409c7399c14dc4cf44e146b"
        ],
        [
            "Notation \"x * y\" := (multK _ x y) : field_scope.",
            "VernacNotation",
            "ab42ec319a495e7de02ce87466390cb47a79f208"
        ],
        [
            "Notation \"0\" := (v0 _) : field_scope.",
            "VernacNotation",
            "a818720e0a9dc15268e7ea8f835f78b09409c695"
        ],
        [
            "Notation \"1\" := (v1 _) : field_scope.",
            "VernacNotation",
            "0c37f1aa95d75fbadf58242231bb2ca457a43584"
        ],
        [
            "Section ParamsProp.",
            "VernacBeginSection",
            "21bfb786adaff0ef4ec03858cadc033c7306d15b"
        ],
        [
            "Variable p: fparams.",
            "VernacAssumption",
            "e24957601819580037083b2f2a4cd0a2e6f3d3f7"
        ],
        [
            "Open Scope field_scope.",
            "VernacOpenCloseScope",
            "ac5c0231b7645e9ceb2098fd5efe3375b0c9e2a7"
        ],
        [
            "Structure fparamsProp: Type := { eqK_dec: forall x y: p, if x ?= y then x = y else x <> y; addK_assoc: forall x y z: p, (x + y) + z = x + (y + z); addK_com: forall x y: p, x + y = y + x; addK0l: forall x: p, 0 + x = x; oppKr: forall x: p, x + - x = 0; multK_assoc: forall x y z: p, (x * y) * z = x * (y * z); multK_com: forall x y: p, x * y = y * x; multK1l: forall x: p, 1 * x = x; add_multKl: forall x y z: p, (x + y) * z = x * z + y * z; one_diff_zero: 1 <> 0 :> p; invKl: forall x: p, x <> 0 -> x * x^-1 = 1 }.",
            "VernacInductive",
            "1e7547091739c43bf87fe7feb4c83586d97dd60e"
        ],
        [
            "Fixpoint expK (k: p) (n:nat) {struct n}: p := match n with O => 1 | (S n1) => k * expK k n1 end.",
            "VernacFixpoint",
            "012a23588d135b967b6ba21b4006dada92f23b16"
        ],
        [
            "Notation \"x ^ k\" := (expK x k) : field_scope.",
            "VernacNotation",
            "48633a39a587dddd8139c1976904cd4f4940ad37"
        ],
        [
            "Variable Hp: fparamsProp.",
            "VernacAssumption",
            "b26ea1a2e325b0cfa6b7b35d80313a4ab52b00d8"
        ],
        [
            "Implicit Types x y z: p.",
            "VernacReserve",
            "fe360fa4f2c84152c1beefbf8df85fea25cc3156"
        ],
        [
            "Lemma eqKI: forall x, x ?= x = true.",
            "VernacStartTheoremProof",
            "ff196e77d6eb94e0ee4beb5336b2bd320e710bd4"
        ],
        [
            "intros x; generalize (eqK_dec Hp x x); case eqK; auto.",
            "VernacExtend",
            "552d34c7979aba2946774ea34bdc13b461e9ea5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqK_spec x y: eq_Spec x y (x ?= y).",
            "VernacStartTheoremProof",
            "1e72b607bb7cf1c3df4a6deb817b3d1c510baee8"
        ],
        [
            "generalize (eqK_dec Hp x y); case eqK; constructor; auto.",
            "VernacExtend",
            "1b84b3405ceac0e4730ab7482024938f089d208c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppKl: forall x, - x + x = 0.",
            "VernacStartTheoremProof",
            "b57d46a34979e18ae8308cc54a1540b8d9d2847c"
        ],
        [
            "intros x; rewrite (addK_com Hp); rewrite (oppKr Hp); auto.",
            "VernacExtend",
            "48e8f14860b19551e0868055f48440e64915d6cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addK_cancel x y z: x + y = x + z -> y = z.",
            "VernacStartTheoremProof",
            "98ce9f64949a08e6d727a4719ddb442d711cd7c3"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite <- (addK0l Hp y);rewrite <- (oppKl x);rewrite (addK_assoc Hp); rewrite H; rewrite <- (addK_assoc Hp); rewrite oppKl; rewrite (addK0l Hp); auto.",
            "VernacExtend",
            "bdf4d45f60c9af17e39fe05a2d7a26bca3060d78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addK_eq_opp: forall x y, x + (-y) = 0 -> x = y.",
            "VernacStartTheoremProof",
            "c563a8270e9fbbf13a1c6778465f9fbee98a834d"
        ],
        [
            "intros x y H; apply addK_cancel with (-y).",
            "VernacExtend",
            "cc1b2ef04487c1a3d223988e29e5e4e5496ffa21"
        ],
        [
            "rewrite addK_com, H, addK_com, oppKr; auto.",
            "VernacExtend",
            "f42a0056404f6059686573171a425d88ea0c2d6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addK0r x: x + 0 = x.",
            "VernacStartTheoremProof",
            "58d536114a9c2127bf349e62563232e0d933dd80"
        ],
        [
            "intros; rewrite (addK_com Hp); rewrite (addK0l Hp); auto.",
            "VernacExtend",
            "aa538dc71a2bd997526d82e50d5d517681b0109e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_oppK x: - (- x) = x.",
            "VernacStartTheoremProof",
            "7c40a3c4e15c262a5318df28b10b0c78d345925a"
        ],
        [
            "rewrite <- (addK0l Hp (- - x)); rewrite <- (oppKr Hp x); rewrite (addK_assoc Hp); rewrite (oppKr Hp); rewrite addK0r; auto.",
            "VernacExtend",
            "30aeea614654461d964af2c33747975606b7e43c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK1r x: x * 1 = x.",
            "VernacStartTheoremProof",
            "3671299fdb98d0127863e81b240aa390f160e0c9"
        ],
        [
            "intros; rewrite (multK_com Hp); rewrite (multK1l Hp); auto.",
            "VernacExtend",
            "43568d4c8efefac7fabc99840e7908022420f81b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_multKr x y z: z * (x + y) = z * x + z * y.",
            "VernacStartTheoremProof",
            "d4b066daab6c8b92261298a2d791233ef25d0921"
        ],
        [
            "repeat rewrite (multK_com Hp z).",
            "VernacExtend",
            "40086e7da5b86b6acb0dfaf2168e5d565499fa3e"
        ],
        [
            "exact (add_multKl Hp x y z).",
            "VernacExtend",
            "7512f9c73cb3d949320f47314b9e536190edb2d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppK0: - 0 = 0 :> p.",
            "VernacStartTheoremProof",
            "04dee5ca49f72550180c6c2223350ed8887449dd"
        ],
        [
            "apply (addK_cancel 0); rewrite oppKr; try rewrite addK0l; auto.",
            "VernacExtend",
            "17b18f5511bbba1d37bbdea91d6fab489b6d6d46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_addK x y: - (x + y) = - x + - y.",
            "VernacStartTheoremProof",
            "4963cef8603209de4d3b3c902b4440f7075f4b9a"
        ],
        [
            "apply (addK_cancel (x + y)).",
            "VernacExtend",
            "6663e97ec89f4d90424a0f821a36e693688a963f"
        ],
        [
            "rewrite (oppKr Hp); rewrite (addK_com Hp x); rewrite (addK_assoc Hp y); rewrite <- (addK_assoc Hp x); rewrite (oppKr Hp); rewrite (addK0l Hp); rewrite (oppKr Hp); auto.",
            "VernacExtend",
            "80e068c90bda5eaf5824ca1078fad54066f42ee1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK0l x: 0 * x = 0.",
            "VernacStartTheoremProof",
            "262a3105f3c2967b2bebf3e9569f4e9dead4bb8f"
        ],
        [
            "apply (addK_cancel (1 * x)).",
            "VernacExtend",
            "51f03aca0a4688d9c50572c102d6b59fbc42955f"
        ],
        [
            "rewrite <- (add_multKl Hp); rewrite addK0r; rewrite addK0r; auto.",
            "VernacExtend",
            "1eadc2d91b232b5eb419a38394e6f3d1657fe153"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK0r x: x * 0 = 0.",
            "VernacStartTheoremProof",
            "913b0b826a7829c248d5783c795334aed25f5200"
        ],
        [
            "rewrite (multK_com Hp); rewrite multK0l; auto.",
            "VernacExtend",
            "57318ba6641923ebfb928e511734e7bca810b974"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_multKl x y: - (x * y) = - x * y.",
            "VernacStartTheoremProof",
            "e258e4349a424ca428908dcc26d4d89f0fc2a539"
        ],
        [
            "apply (addK_cancel (x * y)).",
            "VernacExtend",
            "6ddd89ed84e2e9a90f7a48d5b946e9eb5b82e6a1"
        ],
        [
            "rewrite (oppKr Hp); rewrite <- (add_multKl Hp); rewrite (oppKr Hp); rewrite multK0l; auto.",
            "VernacExtend",
            "5ba8b125edd341e10e58fd435ac436b73e01aead"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_multKr x y: - (x * y) = x * - y.",
            "VernacStartTheoremProof",
            "6125d755121258cd78406dde96c56afe27f1544f"
        ],
        [
            "apply (addK_cancel (x * y)).",
            "VernacExtend",
            "6ddd89ed84e2e9a90f7a48d5b946e9eb5b82e6a1"
        ],
        [
            "rewrite (oppKr Hp); rewrite <- add_multKr; rewrite (oppKr Hp); rewrite multK0r; auto.",
            "VernacExtend",
            "c27a5fc7d640bf23a5cce9e3465ee3f7b498dd71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_multK1l x: - x = (-(1)) * x.",
            "VernacStartTheoremProof",
            "60cc71d7cf72e1c0fe0010570c1876a45f85d4e5"
        ],
        [
            "rewrite <-opp_multKl, multK1l; auto.",
            "VernacExtend",
            "41c355f31dd54eb97312b1e1e7e604a9d1a31b7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_multK1r x: - x = x * (-(1)).",
            "VernacStartTheoremProof",
            "d0e6b0b160417ad4861b7e577802d705df4b5824"
        ],
        [
            "rewrite <-opp_multKr, multK1r; auto.",
            "VernacExtend",
            "4ba06b7530bcdbececa06888e5939d01d52934a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK_m1_m1: -(1) * -(1) = 1 :>p.",
            "VernacStartTheoremProof",
            "72fec2db52b8d9d9c747f900f513acf2fcd2edfb"
        ],
        [
            "rewrite <-opp_multK1l, opp_oppK; auto.",
            "VernacExtend",
            "84ffdae114675e6d8d922bfbf0df3c294fc12ed0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expKS n: (-(1)) ^n.+1 = -(-(1)) ^n.",
            "VernacStartTheoremProof",
            "b854d274f39e62625894cc6aa5d5189f37358d72"
        ],
        [
            "intros; simpl; rewrite <-opp_multK1l; auto.",
            "VernacExtend",
            "ae26b1fb171d09b622895cd2b93b835089eba4b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expK2m1 n: (-(1)) ^ n * (- (1)) ^ n =1.",
            "VernacStartTheoremProof",
            "59984acad6ffea2a158f2a684409c42918908cb6"
        ],
        [
            "induction n as [| n Hrec]; simpl; auto.",
            "VernacExtend",
            "132f18b12c61b68ca0ad97d52d5f1a018cfd9350"
        ],
        [
            "rewrite multK1l; auto.",
            "VernacExtend",
            "0cd1aa051b2e32f37887d2aecaa12d6527d16e05"
        ],
        [
            "rewrite multK_assoc, (multK_com Hp (expK (- (1)) n)); auto.",
            "VernacExtend",
            "15b72bdb373fce3334b57a40ad6cadf75e2610d9"
        ],
        [
            "repeat rewrite <- multK_assoc; auto.",
            "VernacExtend",
            "655c0096282c7fe3533d59e6b09b2ce37ec6750b"
        ],
        [
            "rewrite multK_m1_m1, multK1l; auto.",
            "VernacExtend",
            "afc4bacff37fa0e9f22a5fb18911cdb98028bb35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expK_add n1 n2 a: a ^ (n1 + n2) = a ^n1 * a ^ n2.",
            "VernacStartTheoremProof",
            "f3bd629493d98ce7f75238fcd9c5ec4def55de3f"
        ],
        [
            "induction n1 as [| n1 Hrec]; simpl; auto.",
            "VernacExtend",
            "e5a5f59dc8098ab809f03d994606cc3a42f86c06"
        ],
        [
            "rewrite multK1l; auto.",
            "VernacExtend",
            "0cd1aa051b2e32f37887d2aecaa12d6527d16e05"
        ],
        [
            "rewrite Hrec, multK_assoc; auto.",
            "VernacExtend",
            "109c9a1813b20ca80a3380b2aeaf2b6c33491244"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expKm1_even n: even n -> (-(1))^ n = 1 with expKm1_odd n: odd n -> (-(1))^ n = -(1).",
            "VernacStartTheoremProof",
            "d9f257603975589b48250181543b792506c03cfb"
        ],
        [
            "intros H; elim H; simpl; auto; clear n H.",
            "VernacExtend",
            "acb1229dd46e3aab33f13063e7b7c969a46fa480"
        ],
        [
            "intros n H; rewrite expKm1_odd; auto.",
            "VernacExtend",
            "d5c4358e8869a999cb2ee84b940416fb26f70902"
        ],
        [
            "rewrite <-opp_multKr, multK1r, opp_oppK; auto.",
            "VernacExtend",
            "dc30a9f1c760af2addfbb335a43c1280f4f1ee65"
        ],
        [
            "intros H; elim H; simpl; auto; clear n H.",
            "VernacExtend",
            "acb1229dd46e3aab33f13063e7b7c969a46fa480"
        ],
        [
            "intros n H; rewrite expKm1_even; auto.",
            "VernacExtend",
            "cb2eb4892014bfd35698171a4d607a4739ab1e66"
        ],
        [
            "rewrite multK1r; auto.",
            "VernacExtend",
            "ddcd31ad3ffd2585cd03973ebad819543275235c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expKm1_sub m n: m <= n -> (-(1))^ (n - m) = (-(1))^ (n + m).",
            "VernacStartTheoremProof",
            "6e0dd9615e4bd4af61d0ef77facbc846808eb170"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply sym_equal; rewrite <-multK1l; auto.",
            "VernacExtend",
            "b4f66926cf0b27ed6ffbf77619eff58f30afdfac"
        ],
        [
            "pattern (v1 p) at 2; rewrite <-expK2m1 with (n:= m).",
            "VernacExtend",
            "cea9d34d063b17430374bef7905ab30c0c2ce44a"
        ],
        [
            "rewrite <-!expK_add, <-Plus.plus_assoc, <-Minus.le_plus_minus, Plus.plus_comm; auto.",
            "VernacExtend",
            "b89262c94956749c7c8cd70764682800bd1be182"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expKm1_2 n: (-(1))^ (2 * n) = 1.",
            "VernacStartTheoremProof",
            "0fc1c8c388f3531a9f3468ca45fa25ef5b9ba6af"
        ],
        [
            "apply expKm1_even; auto with arith.",
            "VernacExtend",
            "65fc86c264b2734d3845f6ac421f0b07e543b569"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expKm1_2E n m: (-(1))^ (2 * n + m) = (-(1))^ m.",
            "VernacStartTheoremProof",
            "35f7b44c3b08fd8761b999262ead574e86e84e63"
        ],
        [
            "rewrite expK_add, expKm1_2, multK1l; auto.",
            "VernacExtend",
            "d0c34149b75c8ac2a9340a0767dd38d9faca8cdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invKr x: x <> 0 -> x^-1 * x = 1.",
            "VernacStartTheoremProof",
            "c107a439de69f472edffb52bdc4fa50f06729fb2"
        ],
        [
            "intros Hx; rewrite multK_com; auto.",
            "VernacExtend",
            "b2d7ff55566c98e957cb453b68e200e4316004c0"
        ],
        [
            "apply invKl; auto.",
            "VernacExtend",
            "7006af3548330a8a94083902494785b9a7dd6ffc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK_cancel x y z: x <> 0 -> x * y = x * z -> y = z.",
            "VernacStartTheoremProof",
            "7dda841f4da942475563301c89e158f7cb441487"
        ],
        [
            "intros Hx H.",
            "VernacExtend",
            "c4c5a8bf6b53b6182e8f392063bf3b80e0a27bc1"
        ],
        [
            "rewrite <- multK1l; auto; rewrite <- (invKr _ Hx).",
            "VernacExtend",
            "551a77143cfc2ad3b669958cf79d5b6843f17ceb"
        ],
        [
            "rewrite multK_assoc; auto; rewrite <- H.",
            "VernacExtend",
            "522bbbef8747299e17ae265132e14a62bd487cd1"
        ],
        [
            "rewrite <- multK_assoc; try rewrite invKr; try rewrite multK1l; auto.",
            "VernacExtend",
            "44118e8742cd8c98ea4377fac68fcf5eb8ada9b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK_swap x y z: x * (y * z) = y * (x * z).",
            "VernacStartTheoremProof",
            "ccaf80c3247b06ccabcec44b0217ec8b24366b8c"
        ],
        [
            "intros; rewrite <-!multK_assoc, (multK_com Hp x); auto.",
            "VernacExtend",
            "493903242c4c90f05e520455f7c32fed29a67eaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multK_integral x y : x * y = 0 -> x = 0 \\/ y = 0.",
            "VernacStartTheoremProof",
            "25abbe862b61391a54eecaedae3ac61afe090ae6"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "generalize (eqK_dec Hp x 0); case eqK; intros Hx; auto; right.",
            "VernacExtend",
            "94154d17cfb7279a4ce7e432f2d57971034fbeb4"
        ],
        [
            "apply (multK_cancel _ y 0 Hx); rewrite H; rewrite multK0r; auto.",
            "VernacExtend",
            "ab5352625de41be54158f54ee8eee57b54102db7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expK_integral x n : x^n = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "efbe8a5bd805e3d6f97bc601c9e138582237eb08"
        ],
        [
            "induction n as [|n Hrec]; simpl; intros H.",
            "VernacExtend",
            "356b37958196067281a4d3e1ac15e8207397be39"
        ],
        [
            "case one_diff_zero; auto.",
            "VernacExtend",
            "a0d55e71b5dd32217c3b504cc0321ee1177ddfe3"
        ],
        [
            "case (multK_integral _ _ H); auto.",
            "VernacExtend",
            "2a2f30ae9398550ca963ee7a97adbff7b12618db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expKm1_n0 n : (-(1))^n <> 0.",
            "VernacStartTheoremProof",
            "4264d72765d92e28fd8e721b8c70d57e28bf1640"
        ],
        [
            "intros H; case one_diff_zero; auto.",
            "VernacExtend",
            "a2a1f45a24462904a9fb007141d7fa8e0884f9aa"
        ],
        [
            "apply (addK_cancel (-(1))).",
            "VernacExtend",
            "d604ca4ad6af66cc032eff0421585633c6dea919"
        ],
        [
            "rewrite oppKl, addK0r.",
            "VernacExtend",
            "4c87175aec4c6d8b115fc1a2ac8f89e02967efcf"
        ],
        [
            "apply sym_equal;apply expK_integral with (n := n); auto.",
            "VernacExtend",
            "b3dcf70d7f8dc9cd68e96e5c0b19594fd2015c57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint n_to_K n := match n with O => 0: p | S n => (1 + n_to_K n) end.",
            "VernacFixpoint",
            "74992b318084b66caba92b5e62f484db2d64a9d6"
        ],
        [
            "Lemma n_to_K0: n_to_K 0 = 0.",
            "VernacStartTheoremProof",
            "2c55082f55c6605316434dfebdccf2bd8e4bb678"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_to_K1: n_to_K 1 = 1.",
            "VernacStartTheoremProof",
            "964b8096f52cf40b615159fc408f3ef5837d3e25"
        ],
        [
            "simpl; rewrite addK0r; auto.",
            "VernacExtend",
            "1ca76534682da8ce803ecc36751b7b1838add2b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_to_K_add m n : n_to_K (m + n) = n_to_K m + n_to_K n.",
            "VernacStartTheoremProof",
            "6764799c1c2f91f5d1153c20ded37824a99d4d36"
        ],
        [
            "elim m; simpl.",
            "VernacExtend",
            "ad27bf2d2ae25faed3292d5657effb835ed7878f"
        ],
        [
            "rewrite addK0l; auto.",
            "VernacExtend",
            "fd2cfac3c4db9435f8ac519a7f92941f0378c55d"
        ],
        [
            "intros m1 Hrec; rewrite Hrec, <-addK_assoc; auto.",
            "VernacExtend",
            "a49d5feadc92570d412e4b59f13ddb4b9e83d466"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_to_K_minus m n : n <= m -> n_to_K (m - n) = n_to_K m + -n_to_K n.",
            "VernacStartTheoremProof",
            "427d660555307ff96cbcb4cb5a11ae5fdd5202b9"
        ],
        [
            "generalize n; clear n; elim m; simpl; clear m.",
            "VernacExtend",
            "2e9d203f9db80c44e87289067fd109b67cdcfc2f"
        ],
        [
            "intros [|n]; simpl; intros H.",
            "VernacExtend",
            "ff4ca30e2d2fa9ebd1a42def12f5a3115b65a001"
        ],
        [
            "rewrite oppKr; auto.",
            "VernacExtend",
            "1c0346bcba6c3365f55eeb23716a07c59551a95b"
        ],
        [
            "contradict H; auto with arith.",
            "VernacExtend",
            "b214f7778647ca17388e52789b102a05bada7ab4"
        ],
        [
            "intros m Hrec [|n]; simpl; intros H.",
            "VernacExtend",
            "b50ba7b9b39e50b28cbcfd0b3c7b28121635d7e4"
        ],
        [
            "rewrite oppK0, addK0r; auto.",
            "VernacExtend",
            "cef5f0e5cf675b60574310f165f420281ca9de46"
        ],
        [
            "rewrite Hrec; auto with arith.",
            "VernacExtend",
            "4676aff891ce2aaac02291d8dcecac346456e222"
        ],
        [
            "rewrite opp_addK.",
            "VernacExtend",
            "b9fa04f922d27044ce964af58ea6f5e46fabb1e4"
        ],
        [
            "rewrite <-!addK_assoc, (addK_com Hp 1); auto.",
            "VernacExtend",
            "35e4fe6e1d394b66eca83688b702ffaad3b2ea8c"
        ],
        [
            "rewrite (addK_assoc Hp (n_to_K m)), oppKr, addK0r; auto.",
            "VernacExtend",
            "6295df722830ae0aa0c1052535c7afa55a873373"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma n_to_K_mult m n : n_to_K (m * n) = n_to_K m * n_to_K n.",
            "VernacStartTheoremProof",
            "2ef84495eb31132d0ac0afd476392205f8c6e6ef"
        ],
        [
            "elim m; simpl.",
            "VernacExtend",
            "ad27bf2d2ae25faed3292d5657effb835ed7878f"
        ],
        [
            "rewrite multK0l; auto.",
            "VernacExtend",
            "d9fd994fb151459953bfa2baf32130a8d503b021"
        ],
        [
            "intros m1 Hrec; rewrite n_to_K_add, add_multKl, multK1l, Hrec; auto.",
            "VernacExtend",
            "438c7d9a0abc4ca1c9e3689f0102d86d2eaffe24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Z_to_K (z: Z) := match z with | Z0 => 0 | Zpos _ => n_to_K (Z.abs_nat z) | Zneg _ => - (n_to_K (Z.abs_nat z)) end.",
            "VernacDefinition",
            "f5caa381fbe34564558b4500a1c8e76db3352fba"
        ],
        [
            "Lemma Z_to_K_opp (z: Z): Z_to_K (-z)%Z = - Z_to_K z.",
            "VernacStartTheoremProof",
            "0681616f43a2717e9bec7bf81eef8324de160ae2"
        ],
        [
            "case z; simpl; auto.",
            "VernacExtend",
            "3553b594bf403b4c4ad630a6af3e892ed3b84b77"
        ],
        [
            "rewrite oppK0; auto.",
            "VernacExtend",
            "742177a89bad4c4bd97cd033a142bc5acad24c7c"
        ],
        [
            "intros p1; rewrite opp_oppK; auto.",
            "VernacExtend",
            "171f6a644364fc28bb1e8a6baf0cf713d71608ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_K_pos (z: Z): (0 <= z)%Z -> Z_to_K z = n_to_K (Z.abs_nat z).",
            "VernacStartTheoremProof",
            "37909a5b50e07359c39ef3cf3266959d093bd8c1"
        ],
        [
            "case z; simpl; auto.",
            "VernacExtend",
            "3553b594bf403b4c4ad630a6af3e892ed3b84b77"
        ],
        [
            "intros p1 H; contradict H; auto with zarith.",
            "VernacExtend",
            "21122add3578c3c147886e296593e92576ab2e84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_K_add (z1 z2: Z): Z_to_K (z1 + z2)%Z = Z_to_K z1 + Z_to_K z2.",
            "VernacStartTheoremProof",
            "20abdb99d991dafa8117c0d0d468e3244e55351f"
        ],
        [
            "assert (HH: forall z1 z2 : Z, (0 <= z1)%Z -> (0 <= z2)%Z -> Z_to_K (z1 + z2) = Z_to_K z1 + Z_to_K z2).",
            "VernacExtend",
            "7b61a174680dbecd3fd01efc5fff1efbeb6d0762"
        ],
        [
            "intros z3 z4 Hz3 Hz.",
            "VernacExtend",
            "a203fef4c0c6f0b7f4b9999b40fd95977a837d0e"
        ],
        [
            "rewrite !Z_to_K_pos, Zabs_nat_Zplus, n_to_K_add; auto with zarith.",
            "VernacExtend",
            "b81449e621eeec61796449453b329039cbc01665"
        ],
        [
            "assert (HH1: forall z1 z2 : Z, (0 <= z1 <= z2)%Z -> Z_to_K (z2 - z1) = Z_to_K z2 + - Z_to_K z1).",
            "VernacExtend",
            "47594b04ebf1708ea9d1cca67531a43675b50cf2"
        ],
        [
            "intros z3 z4 Hz3z4.",
            "VernacExtend",
            "f33b18daa9ba348cedd5abcb2247370dd4ea9145"
        ],
        [
            "rewrite !Z_to_K_pos, Zabs_nat_Zminus, n_to_K_minus; auto with zarith.",
            "VernacExtend",
            "7468c6b88fd2713629c23de48bb7a95f1bea7abb"
        ],
        [
            "apply Zabs_nat_le; auto.",
            "VernacExtend",
            "a4d9c48f7035913fc1dbe3362c92133cbaf19af2"
        ],
        [
            "case (Zle_or_lt 0 z1); case (Zle_or_lt 0 z2); intros H2 H1; auto.",
            "VernacExtend",
            "395372e7322b8b85655eaaaec42fc2a63efbebbf"
        ],
        [
            "case (Zle_or_lt 0 (z1 + z2)); intros H3.",
            "VernacExtend",
            "b388b99cc76dfea7286e215126634e3045dc0fdf"
        ],
        [
            "replace (z1 + z2)%Z with (z1 - (-z2))%Z; try ring.",
            "VernacExtend",
            "8ba45db0a8f28d4e8c5a6d626598ffd37a8aab25"
        ],
        [
            "rewrite HH1; auto with zarith.",
            "VernacExtend",
            "895936951711a813f14c66803b448ca56f31670f"
        ],
        [
            "rewrite Z_to_K_opp, opp_oppK; auto.",
            "VernacExtend",
            "88db3ff6d4e4a01ada6b9131c3d8bef43bd24cb2"
        ],
        [
            "replace (z1 + z2)%Z with (-(-z2 - z1))%Z; try ring.",
            "VernacExtend",
            "41147aedd7ee497d11d3e2afd84ee41cff19131a"
        ],
        [
            "rewrite Z_to_K_opp, HH1; auto with zarith.",
            "VernacExtend",
            "7cfb19e8f4433267cc38eefd1693265cfec740dd"
        ],
        [
            "rewrite !Z_to_K_opp, opp_addK, !opp_oppK, addK_com; auto.",
            "VernacExtend",
            "d4598842f9302b55146019edc3038e04f9ac2615"
        ],
        [
            "case (Zle_or_lt 0 (z1 + z2)); intros H3.",
            "VernacExtend",
            "b388b99cc76dfea7286e215126634e3045dc0fdf"
        ],
        [
            "replace (z1 + z2)%Z with (z2 - (-z1))%Z; try ring.",
            "VernacExtend",
            "28b9a12ac0822f6a1ee1078f6b643016acf341f1"
        ],
        [
            "rewrite HH1; auto with zarith.",
            "VernacExtend",
            "895936951711a813f14c66803b448ca56f31670f"
        ],
        [
            "rewrite Z_to_K_opp, opp_oppK, addK_com; auto.",
            "VernacExtend",
            "1868710bcb9d393a3b55e9d82792edfd1f6af2b5"
        ],
        [
            "replace (z1 + z2)%Z with (-(-z1 - z2))%Z; try ring.",
            "VernacExtend",
            "64d47696e09b1b12d1a05ef35148d61794a37f23"
        ],
        [
            "rewrite Z_to_K_opp, HH1; auto with zarith.",
            "VernacExtend",
            "7cfb19e8f4433267cc38eefd1693265cfec740dd"
        ],
        [
            "rewrite !Z_to_K_opp, opp_addK, !opp_oppK, addK_com; auto.",
            "VernacExtend",
            "d4598842f9302b55146019edc3038e04f9ac2615"
        ],
        [
            "replace (z1 + z2)%Z with (-((-z1) + (-z2)))%Z; try ring.",
            "VernacExtend",
            "8bee8a4fc9f838064ad4eb1865402e227b9342e4"
        ],
        [
            "rewrite Z_to_K_opp, HH; auto with zarith.",
            "VernacExtend",
            "0747f6aa6755f69246a3d9c4fe17662ee77932c8"
        ],
        [
            "rewrite !Z_to_K_opp, opp_addK, !opp_oppK; auto.",
            "VernacExtend",
            "0072b9a0604bf08d807ad56e14b6a186c4f3ba97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_K_minus (z1 z2: Z): Z_to_K (z1 - z2)%Z = Z_to_K z1 + - Z_to_K z2.",
            "VernacStartTheoremProof",
            "7cb3655a5b02e8ec996c2706040edd5ce8bab17d"
        ],
        [
            "replace (z1 - z2)%Z with (z1 + -z2)%Z.",
            "VernacExtend",
            "129f345864cbf1ce91a241e7c700c0a2e2d722c9"
        ],
        [
            "rewrite Z_to_K_add, Z_to_K_opp; auto with zarith.",
            "VernacExtend",
            "ba4255a37392f52c74e2c04a09084b8f253d3901"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_to_K_mult (z1 z2: Z): Z_to_K (z1 * z2)%Z = Z_to_K z1 * Z_to_K z2.",
            "VernacStartTheoremProof",
            "dbc7328a2438731a72a1247845625e59e3bb89ba"
        ],
        [
            "assert (HH: forall z1 z2 : Z, (0 <= z1)%Z -> (0 <= z2)%Z -> Z_to_K (z1 * z2) = Z_to_K z1 * Z_to_K z2).",
            "VernacExtend",
            "68d1a8e78c4a2f9013e08a8485a58f26b0cc77f1"
        ],
        [
            "intros z3 z4 Hz3 Hz4.",
            "VernacExtend",
            "aa561703267ea9cb8c97ed319529839c0e2ba46d"
        ],
        [
            "rewrite !Z_to_K_pos; auto with zarith.",
            "VernacExtend",
            "81930a5e01b6ad138e324b77158e7b07aa556c3b"
        ],
        [
            "rewrite Zabs_nat_mult, n_to_K_mult; auto.",
            "VernacExtend",
            "87a788931b6364b4b2651c836d13857745c41c9d"
        ],
        [
            "case (Zle_or_lt 0 z1); case (Zle_or_lt 0 z2); intros H2 H1; auto.",
            "VernacExtend",
            "395372e7322b8b85655eaaaec42fc2a63efbebbf"
        ],
        [
            "replace (z1 * z2)%Z with (-(z1 * (-z2)))%Z; try ring.",
            "VernacExtend",
            "f762dd19b85d46fe1cdb223b170e800676197727"
        ],
        [
            "rewrite Z_to_K_opp, HH, Z_to_K_opp; auto with zarith.",
            "VernacExtend",
            "cda791c59577aee46507b3255673820f4e108fea"
        ],
        [
            "rewrite opp_multKr, opp_oppK; auto.",
            "VernacExtend",
            "c371adb9a068a76c50e153a65105d644bf79f7c6"
        ],
        [
            "replace (z1 * z2)%Z with (-(-z1 * z2))%Z; try ring.",
            "VernacExtend",
            "8de7afb1da0494da96747aac498668ba72755dea"
        ],
        [
            "rewrite Z_to_K_opp, HH, Z_to_K_opp; auto with zarith.",
            "VernacExtend",
            "cda791c59577aee46507b3255673820f4e108fea"
        ],
        [
            "rewrite opp_multKl, opp_oppK; auto.",
            "VernacExtend",
            "1e356345615754a1147b6cc4e2df521fcb14597b"
        ],
        [
            "replace (z1 * z2)%Z with (-z1 * -z2)%Z; try ring.",
            "VernacExtend",
            "508b75efac06f88aaa2247775f198be70dee9d2f"
        ],
        [
            "rewrite HH, !Z_to_K_opp; auto with zarith.",
            "VernacExtend",
            "d4eabb65df039de84101bc4680c3ec7c27c2622e"
        ],
        [
            "rewrite <-opp_multKl, <-opp_multKr, opp_oppK; auto.",
            "VernacExtend",
            "7efeadb7121b45b0538c03a20bf9376bb69600c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ParamsProp.",
            "VernacEndSegment",
            "4f81e665a19908cc287a9f6ae3ca74ccb97d758f"
        ],
        [
            "Notation \"x ^ k\" := (expK _ x%f k) : field_scope.",
            "VernacNotation",
            "ed1327127a6e50cac3975ce35326932f3b727ead"
        ],
        [
            "Ltac Krm0 := repeat ((rewrite multK0l || rewrite multK0r || rewrite oppK0 || rewrite addK0l || rewrite addK0r)); auto.",
            "VernacExtend",
            "a198591204e39d56b317293d0c576e82aadfcfa4"
        ],
        [
            "Ltac Krm1 := Krm0; repeat (rewrite multK1l || rewrite multK1r || rewrite <- opp_multKr || rewrite expK2m1 || rewrite <- opp_multKl || rewrite opp_oppK); auto.",
            "VernacExtend",
            "5fdf34f0b86980531172e7f53e9b982fb77f7597"
        ]
    ],
    "proofs": [
        {
            "name": "eqKI",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros x; generalize (eqK_dec Hp x x); case eqK; auto.",
                        "VernacExtend",
                        "552d34c7979aba2946774ea34bdc13b461e9ea5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqK_spec",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "generalize (eqK_dec Hp x y); case eqK; constructor; auto.",
                        "VernacExtend",
                        "1b84b3405ceac0e4730ab7482024938f089d208c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppKl",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros x; rewrite (addK_com Hp); rewrite (oppKr Hp); auto.",
                        "VernacExtend",
                        "48e8f14860b19551e0868055f48440e64915d6cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addK_cancel",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (addK0l Hp y);rewrite <- (oppKl x);rewrite (addK_assoc Hp); rewrite H; rewrite <- (addK_assoc Hp); rewrite oppKl; rewrite (addK0l Hp); auto.",
                        "VernacExtend",
                        "bdf4d45f60c9af17e39fe05a2d7a26bca3060d78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addK_eq_opp",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros x y H; apply addK_cancel with (-y).",
                        "VernacExtend",
                        "cc1b2ef04487c1a3d223988e29e5e4e5496ffa21"
                    ]
                },
                {
                    "command": [
                        "rewrite addK_com, H, addK_com, oppKr; auto.",
                        "VernacExtend",
                        "f42a0056404f6059686573171a425d88ea0c2d6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addK0r",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (addK_com Hp); rewrite (addK0l Hp); auto.",
                        "VernacExtend",
                        "aa538dc71a2bd997526d82e50d5d517681b0109e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_oppK",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "rewrite <- (addK0l Hp (- - x)); rewrite <- (oppKr Hp x); rewrite (addK_assoc Hp); rewrite (oppKr Hp); rewrite addK0r; auto.",
                        "VernacExtend",
                        "30aeea614654461d964af2c33747975606b7e43c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK1r",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (multK_com Hp); rewrite (multK1l Hp); auto.",
                        "VernacExtend",
                        "43568d4c8efefac7fabc99840e7908022420f81b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_multKr",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "repeat rewrite (multK_com Hp z).",
                        "VernacExtend",
                        "40086e7da5b86b6acb0dfaf2168e5d565499fa3e"
                    ]
                },
                {
                    "command": [
                        "exact (add_multKl Hp x y z).",
                        "VernacExtend",
                        "7512f9c73cb3d949320f47314b9e536190edb2d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppK0",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "apply (addK_cancel 0); rewrite oppKr; try rewrite addK0l; auto.",
                        "VernacExtend",
                        "17b18f5511bbba1d37bbdea91d6fab489b6d6d46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_addK",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "apply (addK_cancel (x + y)).",
                        "VernacExtend",
                        "6663e97ec89f4d90424a0f821a36e693688a963f"
                    ]
                },
                {
                    "command": [
                        "rewrite (oppKr Hp); rewrite (addK_com Hp x); rewrite (addK_assoc Hp y); rewrite <- (addK_assoc Hp x); rewrite (oppKr Hp); rewrite (addK0l Hp); rewrite (oppKr Hp); auto.",
                        "VernacExtend",
                        "80e068c90bda5eaf5824ca1078fad54066f42ee1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK0l",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "apply (addK_cancel (1 * x)).",
                        "VernacExtend",
                        "51f03aca0a4688d9c50572c102d6b59fbc42955f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_multKl Hp); rewrite addK0r; rewrite addK0r; auto.",
                        "VernacExtend",
                        "1eadc2d91b232b5eb419a38394e6f3d1657fe153"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK0r",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "rewrite (multK_com Hp); rewrite multK0l; auto.",
                        "VernacExtend",
                        "57318ba6641923ebfb928e511734e7bca810b974"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_multKl",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "apply (addK_cancel (x * y)).",
                        "VernacExtend",
                        "6ddd89ed84e2e9a90f7a48d5b946e9eb5b82e6a1"
                    ]
                },
                {
                    "command": [
                        "rewrite (oppKr Hp); rewrite <- (add_multKl Hp); rewrite (oppKr Hp); rewrite multK0l; auto.",
                        "VernacExtend",
                        "5ba8b125edd341e10e58fd435ac436b73e01aead"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_multKr",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "apply (addK_cancel (x * y)).",
                        "VernacExtend",
                        "6ddd89ed84e2e9a90f7a48d5b946e9eb5b82e6a1"
                    ]
                },
                {
                    "command": [
                        "rewrite (oppKr Hp); rewrite <- add_multKr; rewrite (oppKr Hp); rewrite multK0r; auto.",
                        "VernacExtend",
                        "c27a5fc7d640bf23a5cce9e3465ee3f7b498dd71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_multK1l",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "rewrite <-opp_multKl, multK1l; auto.",
                        "VernacExtend",
                        "41c355f31dd54eb97312b1e1e7e604a9d1a31b7e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_multK1r",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "rewrite <-opp_multKr, multK1r; auto.",
                        "VernacExtend",
                        "4ba06b7530bcdbececa06888e5939d01d52934a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK_m1_m1",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "rewrite <-opp_multK1l, opp_oppK; auto.",
                        "VernacExtend",
                        "84ffdae114675e6d8d922bfbf0df3c294fc12ed0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expKS",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros; simpl; rewrite <-opp_multK1l; auto.",
                        "VernacExtend",
                        "ae26b1fb171d09b622895cd2b93b835089eba4b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expK2m1",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "induction n as [| n Hrec]; simpl; auto.",
                        "VernacExtend",
                        "132f18b12c61b68ca0ad97d52d5f1a018cfd9350"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1l; auto.",
                        "VernacExtend",
                        "0cd1aa051b2e32f37887d2aecaa12d6527d16e05"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc, (multK_com Hp (expK (- (1)) n)); auto.",
                        "VernacExtend",
                        "15b72bdb373fce3334b57a40ad6cadf75e2610d9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- multK_assoc; auto.",
                        "VernacExtend",
                        "655c0096282c7fe3533d59e6b09b2ce37ec6750b"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_m1_m1, multK1l; auto.",
                        "VernacExtend",
                        "afc4bacff37fa0e9f22a5fb18911cdb98028bb35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expK_add",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "induction n1 as [| n1 Hrec]; simpl; auto.",
                        "VernacExtend",
                        "e5a5f59dc8098ab809f03d994606cc3a42f86c06"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1l; auto.",
                        "VernacExtend",
                        "0cd1aa051b2e32f37887d2aecaa12d6527d16e05"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrec, multK_assoc; auto.",
                        "VernacExtend",
                        "109c9a1813b20ca80a3380b2aeaf2b6c33491244"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expKm1_sub",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite <-multK1l; auto.",
                        "VernacExtend",
                        "b4f66926cf0b27ed6ffbf77619eff58f30afdfac"
                    ]
                },
                {
                    "command": [
                        "pattern (v1 p) at 2; rewrite <-expK2m1 with (n:= m).",
                        "VernacExtend",
                        "cea9d34d063b17430374bef7905ab30c0c2ce44a"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!expK_add, <-Plus.plus_assoc, <-Minus.le_plus_minus, Plus.plus_comm; auto.",
                        "VernacExtend",
                        "b89262c94956749c7c8cd70764682800bd1be182"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expKm1_2",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "apply expKm1_even; auto with arith.",
                        "VernacExtend",
                        "65fc86c264b2734d3845f6ac421f0b07e543b569"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expKm1_2E",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "rewrite expK_add, expKm1_2, multK1l; auto.",
                        "VernacExtend",
                        "d0c34149b75c8ac2a9340a0767dd38d9faca8cdc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invKr",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros Hx; rewrite multK_com; auto.",
                        "VernacExtend",
                        "b2d7ff55566c98e957cb453b68e200e4316004c0"
                    ]
                },
                {
                    "command": [
                        "apply invKl; auto.",
                        "VernacExtend",
                        "7006af3548330a8a94083902494785b9a7dd6ffc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK_cancel",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros Hx H.",
                        "VernacExtend",
                        "c4c5a8bf6b53b6182e8f392063bf3b80e0a27bc1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- multK1l; auto; rewrite <- (invKr _ Hx).",
                        "VernacExtend",
                        "551a77143cfc2ad3b669958cf79d5b6843f17ceb"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc; auto; rewrite <- H.",
                        "VernacExtend",
                        "522bbbef8747299e17ae265132e14a62bd487cd1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- multK_assoc; try rewrite invKr; try rewrite multK1l; auto.",
                        "VernacExtend",
                        "44118e8742cd8c98ea4377fac68fcf5eb8ada9b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK_swap",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <-!multK_assoc, (multK_com Hp x); auto.",
                        "VernacExtend",
                        "493903242c4c90f05e520455f7c32fed29a67eaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multK_integral",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "generalize (eqK_dec Hp x 0); case eqK; intros Hx; auto; right.",
                        "VernacExtend",
                        "94154d17cfb7279a4ce7e432f2d57971034fbeb4"
                    ]
                },
                {
                    "command": [
                        "apply (multK_cancel _ y 0 Hx); rewrite H; rewrite multK0r; auto.",
                        "VernacExtend",
                        "ab5352625de41be54158f54ee8eee57b54102db7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expK_integral",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "induction n as [|n Hrec]; simpl; intros H.",
                        "VernacExtend",
                        "356b37958196067281a4d3e1ac15e8207397be39"
                    ]
                },
                {
                    "command": [
                        "case one_diff_zero; auto.",
                        "VernacExtend",
                        "a0d55e71b5dd32217c3b504cc0321ee1177ddfe3"
                    ]
                },
                {
                    "command": [
                        "case (multK_integral _ _ H); auto.",
                        "VernacExtend",
                        "2a2f30ae9398550ca963ee7a97adbff7b12618db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expKm1_n0",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros H; case one_diff_zero; auto.",
                        "VernacExtend",
                        "a2a1f45a24462904a9fb007141d7fa8e0884f9aa"
                    ]
                },
                {
                    "command": [
                        "apply (addK_cancel (-(1))).",
                        "VernacExtend",
                        "d604ca4ad6af66cc032eff0421585633c6dea919"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKl, addK0r.",
                        "VernacExtend",
                        "4c87175aec4c6d8b115fc1a2ac8f89e02967efcf"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal;apply expK_integral with (n := n); auto.",
                        "VernacExtend",
                        "b3dcf70d7f8dc9cd68e96e5c0b19594fd2015c57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_to_K0",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_to_K1",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "simpl; rewrite addK0r; auto.",
                        "VernacExtend",
                        "1ca76534682da8ce803ecc36751b7b1838add2b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_to_K_add",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "elim m; simpl.",
                        "VernacExtend",
                        "ad27bf2d2ae25faed3292d5657effb835ed7878f"
                    ]
                },
                {
                    "command": [
                        "rewrite addK0l; auto.",
                        "VernacExtend",
                        "fd2cfac3c4db9435f8ac519a7f92941f0378c55d"
                    ]
                },
                {
                    "command": [
                        "intros m1 Hrec; rewrite Hrec, <-addK_assoc; auto.",
                        "VernacExtend",
                        "a49d5feadc92570d412e4b59f13ddb4b9e83d466"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_to_K_minus",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "generalize n; clear n; elim m; simpl; clear m.",
                        "VernacExtend",
                        "2e9d203f9db80c44e87289067fd109b67cdcfc2f"
                    ]
                },
                {
                    "command": [
                        "intros [|n]; simpl; intros H.",
                        "VernacExtend",
                        "ff4ca30e2d2fa9ebd1a42def12f5a3115b65a001"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKr; auto.",
                        "VernacExtend",
                        "1c0346bcba6c3365f55eeb23716a07c59551a95b"
                    ]
                },
                {
                    "command": [
                        "contradict H; auto with arith.",
                        "VernacExtend",
                        "b214f7778647ca17388e52789b102a05bada7ab4"
                    ]
                },
                {
                    "command": [
                        "intros m Hrec [|n]; simpl; intros H.",
                        "VernacExtend",
                        "b50ba7b9b39e50b28cbcfd0b3c7b28121635d7e4"
                    ]
                },
                {
                    "command": [
                        "rewrite oppK0, addK0r; auto.",
                        "VernacExtend",
                        "cef5f0e5cf675b60574310f165f420281ca9de46"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrec; auto with arith.",
                        "VernacExtend",
                        "4676aff891ce2aaac02291d8dcecac346456e222"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_addK.",
                        "VernacExtend",
                        "b9fa04f922d27044ce964af58ea6f5e46fabb1e4"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!addK_assoc, (addK_com Hp 1); auto.",
                        "VernacExtend",
                        "35e4fe6e1d394b66eca83688b702ffaad3b2ea8c"
                    ]
                },
                {
                    "command": [
                        "rewrite (addK_assoc Hp (n_to_K m)), oppKr, addK0r; auto.",
                        "VernacExtend",
                        "6295df722830ae0aa0c1052535c7afa55a873373"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "n_to_K_mult",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "elim m; simpl.",
                        "VernacExtend",
                        "ad27bf2d2ae25faed3292d5657effb835ed7878f"
                    ]
                },
                {
                    "command": [
                        "rewrite multK0l; auto.",
                        "VernacExtend",
                        "d9fd994fb151459953bfa2baf32130a8d503b021"
                    ]
                },
                {
                    "command": [
                        "intros m1 Hrec; rewrite n_to_K_add, add_multKl, multK1l, Hrec; auto.",
                        "VernacExtend",
                        "438c7d9a0abc4ca1c9e3689f0102d86d2eaffe24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_K_opp",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "case z; simpl; auto.",
                        "VernacExtend",
                        "3553b594bf403b4c4ad630a6af3e892ed3b84b77"
                    ]
                },
                {
                    "command": [
                        "rewrite oppK0; auto.",
                        "VernacExtend",
                        "742177a89bad4c4bd97cd033a142bc5acad24c7c"
                    ]
                },
                {
                    "command": [
                        "intros p1; rewrite opp_oppK; auto.",
                        "VernacExtend",
                        "171f6a644364fc28bb1e8a6baf0cf713d71608ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_K_pos",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "case z; simpl; auto.",
                        "VernacExtend",
                        "3553b594bf403b4c4ad630a6af3e892ed3b84b77"
                    ]
                },
                {
                    "command": [
                        "intros p1 H; contradict H; auto with zarith.",
                        "VernacExtend",
                        "21122add3578c3c147886e296593e92576ab2e84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_K_add",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "assert (HH: forall z1 z2 : Z, (0 <= z1)%Z -> (0 <= z2)%Z -> Z_to_K (z1 + z2) = Z_to_K z1 + Z_to_K z2).",
                        "VernacExtend",
                        "7b61a174680dbecd3fd01efc5fff1efbeb6d0762"
                    ]
                },
                {
                    "command": [
                        "intros z3 z4 Hz3 Hz.",
                        "VernacExtend",
                        "a203fef4c0c6f0b7f4b9999b40fd95977a837d0e"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_to_K_pos, Zabs_nat_Zplus, n_to_K_add; auto with zarith.",
                        "VernacExtend",
                        "b81449e621eeec61796449453b329039cbc01665"
                    ]
                },
                {
                    "command": [
                        "assert (HH1: forall z1 z2 : Z, (0 <= z1 <= z2)%Z -> Z_to_K (z2 - z1) = Z_to_K z2 + - Z_to_K z1).",
                        "VernacExtend",
                        "47594b04ebf1708ea9d1cca67531a43675b50cf2"
                    ]
                },
                {
                    "command": [
                        "intros z3 z4 Hz3z4.",
                        "VernacExtend",
                        "f33b18daa9ba348cedd5abcb2247370dd4ea9145"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_to_K_pos, Zabs_nat_Zminus, n_to_K_minus; auto with zarith.",
                        "VernacExtend",
                        "7468c6b88fd2713629c23de48bb7a95f1bea7abb"
                    ]
                },
                {
                    "command": [
                        "apply Zabs_nat_le; auto.",
                        "VernacExtend",
                        "a4d9c48f7035913fc1dbe3362c92133cbaf19af2"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt 0 z1); case (Zle_or_lt 0 z2); intros H2 H1; auto.",
                        "VernacExtend",
                        "395372e7322b8b85655eaaaec42fc2a63efbebbf"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt 0 (z1 + z2)); intros H3.",
                        "VernacExtend",
                        "b388b99cc76dfea7286e215126634e3045dc0fdf"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + z2)%Z with (z1 - (-z2))%Z; try ring.",
                        "VernacExtend",
                        "8ba45db0a8f28d4e8c5a6d626598ffd37a8aab25"
                    ]
                },
                {
                    "command": [
                        "rewrite HH1; auto with zarith.",
                        "VernacExtend",
                        "895936951711a813f14c66803b448ca56f31670f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, opp_oppK; auto.",
                        "VernacExtend",
                        "88db3ff6d4e4a01ada6b9131c3d8bef43bd24cb2"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + z2)%Z with (-(-z2 - z1))%Z; try ring.",
                        "VernacExtend",
                        "41147aedd7ee497d11d3e2afd84ee41cff19131a"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, HH1; auto with zarith.",
                        "VernacExtend",
                        "7cfb19e8f4433267cc38eefd1693265cfec740dd"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_to_K_opp, opp_addK, !opp_oppK, addK_com; auto.",
                        "VernacExtend",
                        "d4598842f9302b55146019edc3038e04f9ac2615"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt 0 (z1 + z2)); intros H3.",
                        "VernacExtend",
                        "b388b99cc76dfea7286e215126634e3045dc0fdf"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + z2)%Z with (z2 - (-z1))%Z; try ring.",
                        "VernacExtend",
                        "28b9a12ac0822f6a1ee1078f6b643016acf341f1"
                    ]
                },
                {
                    "command": [
                        "rewrite HH1; auto with zarith.",
                        "VernacExtend",
                        "895936951711a813f14c66803b448ca56f31670f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, opp_oppK, addK_com; auto.",
                        "VernacExtend",
                        "1868710bcb9d393a3b55e9d82792edfd1f6af2b5"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + z2)%Z with (-(-z1 - z2))%Z; try ring.",
                        "VernacExtend",
                        "64d47696e09b1b12d1a05ef35148d61794a37f23"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, HH1; auto with zarith.",
                        "VernacExtend",
                        "7cfb19e8f4433267cc38eefd1693265cfec740dd"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_to_K_opp, opp_addK, !opp_oppK, addK_com; auto.",
                        "VernacExtend",
                        "d4598842f9302b55146019edc3038e04f9ac2615"
                    ]
                },
                {
                    "command": [
                        "replace (z1 + z2)%Z with (-((-z1) + (-z2)))%Z; try ring.",
                        "VernacExtend",
                        "8bee8a4fc9f838064ad4eb1865402e227b9342e4"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, HH; auto with zarith.",
                        "VernacExtend",
                        "0747f6aa6755f69246a3d9c4fe17662ee77932c8"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_to_K_opp, opp_addK, !opp_oppK; auto.",
                        "VernacExtend",
                        "0072b9a0604bf08d807ad56e14b6a186c4f3ba97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_K_minus",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "replace (z1 - z2)%Z with (z1 + -z2)%Z.",
                        "VernacExtend",
                        "129f345864cbf1ce91a241e7c700c0a2e2d722c9"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_add, Z_to_K_opp; auto with zarith.",
                        "VernacExtend",
                        "ba4255a37392f52c74e2c04a09084b8f253d3901"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_K_mult",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "assert (HH: forall z1 z2 : Z, (0 <= z1)%Z -> (0 <= z2)%Z -> Z_to_K (z1 * z2) = Z_to_K z1 * Z_to_K z2).",
                        "VernacExtend",
                        "68d1a8e78c4a2f9013e08a8485a58f26b0cc77f1"
                    ]
                },
                {
                    "command": [
                        "intros z3 z4 Hz3 Hz4.",
                        "VernacExtend",
                        "aa561703267ea9cb8c97ed319529839c0e2ba46d"
                    ]
                },
                {
                    "command": [
                        "rewrite !Z_to_K_pos; auto with zarith.",
                        "VernacExtend",
                        "81930a5e01b6ad138e324b77158e7b07aa556c3b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_nat_mult, n_to_K_mult; auto.",
                        "VernacExtend",
                        "87a788931b6364b4b2651c836d13857745c41c9d"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt 0 z1); case (Zle_or_lt 0 z2); intros H2 H1; auto.",
                        "VernacExtend",
                        "395372e7322b8b85655eaaaec42fc2a63efbebbf"
                    ]
                },
                {
                    "command": [
                        "replace (z1 * z2)%Z with (-(z1 * (-z2)))%Z; try ring.",
                        "VernacExtend",
                        "f762dd19b85d46fe1cdb223b170e800676197727"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, HH, Z_to_K_opp; auto with zarith.",
                        "VernacExtend",
                        "cda791c59577aee46507b3255673820f4e108fea"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_multKr, opp_oppK; auto.",
                        "VernacExtend",
                        "c371adb9a068a76c50e153a65105d644bf79f7c6"
                    ]
                },
                {
                    "command": [
                        "replace (z1 * z2)%Z with (-(-z1 * z2))%Z; try ring.",
                        "VernacExtend",
                        "8de7afb1da0494da96747aac498668ba72755dea"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_to_K_opp, HH, Z_to_K_opp; auto with zarith.",
                        "VernacExtend",
                        "cda791c59577aee46507b3255673820f4e108fea"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_multKl, opp_oppK; auto.",
                        "VernacExtend",
                        "1e356345615754a1147b6cc4e2df521fcb14597b"
                    ]
                },
                {
                    "command": [
                        "replace (z1 * z2)%Z with (-z1 * -z2)%Z; try ring.",
                        "VernacExtend",
                        "508b75efac06f88aaa2247775f198be70dee9d2f"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, !Z_to_K_opp; auto with zarith.",
                        "VernacExtend",
                        "d4eabb65df039de84101bc4680c3ec7c27c2622e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-opp_multKl, <-opp_multKr, opp_oppK; auto.",
                        "VernacExtend",
                        "7efeadb7121b45b0538c03a20bf9376bb69600c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}