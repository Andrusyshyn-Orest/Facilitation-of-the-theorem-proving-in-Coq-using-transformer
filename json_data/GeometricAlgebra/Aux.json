{
    "filename": "Aux.v",
    "coq_project": "GeometricAlgebra",
    "vernac_cmds": [
        [
            "Require Import List Min Arith Div2.",
            "VernacRequire",
            "322201c41e0f1f2cde1727fe1602583ced524512"
        ],
        [
            "Notation \"n .+1\" := (S n)(at level 2, left associativity, format \"n .+1\"): nat_scope.",
            "VernacNotation",
            "1e38cb43997fd42d3f23c0a2edf9f91bbce64e6e"
        ],
        [
            "Lemma minus_match k1 k2: match k2 - k1 with O => k2 <= k1 | S _ => k1 < k2 end.",
            "VernacStartTheoremProof",
            "d5064f54db8568cac075eba048d485b7e08ecc5c"
        ],
        [
            "generalize k2; clear k2.",
            "VernacExtend",
            "a3311f368384d93c659d3c88c175f762698b4a14"
        ],
        [
            "induction k1 as [| k1 IH]; intros [| k2]; simpl; auto with arith.",
            "VernacExtend",
            "9fe78217f6171046c465289c915f91bf6127f4f8"
        ],
        [
            "generalize (IH k2); case minus; auto with arith.",
            "VernacExtend",
            "0c1380b9dee309b1901449c38a373ebdc8cc1e65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Exp.",
            "VernacBeginSection",
            "d93ad7d5c8ba4ff2dd0af59eb0eb86e7dae929d5"
        ],
        [
            "Fixpoint exp (n m: nat) {struct m} : nat := match m with O => 1 | 1 => n | (S m1) => n * exp n m1 end.",
            "VernacFixpoint",
            "52e9ea308a54073eb0c5d262e87a9b27973b8c5a"
        ],
        [
            "Lemma exp0 n: exp n 0 = 1.",
            "VernacStartTheoremProof",
            "09a56d716edc21d39f91f5c86077b7fdf16143ac"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expS n m: exp n (S m) = n * exp n m.",
            "VernacStartTheoremProof",
            "5b5586470a76ea525de402839df299bb0dbed029"
        ],
        [
            "destruct m; simpl; auto; rewrite <- mult_n_Sm; rewrite <- mult_n_O; auto.",
            "VernacExtend",
            "d35233d360e3e2a493079a09cf655e971e479ac7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exp.",
            "VernacEndSegment",
            "7e707fa77131b6668ea9e4a5d0328ba55cfaff50"
        ],
        [
            "Section Fold2.",
            "VernacBeginSection",
            "3ecbc48386d7f2414be88cd787e3905d83a1bb1c"
        ],
        [
            "Variable A B C: Type.",
            "VernacAssumption",
            "b984fd511dd9c74615ca3bfe47bac591ca7927d3"
        ],
        [
            "Variable f: A -> B -> C -> C.",
            "VernacAssumption",
            "7b2ac07c92fc7f8b1bf107e9aa50303cfa6ec84f"
        ],
        [
            "Definition dhead a (l : list A) := match l with nil => a | b :: _ => b end.",
            "VernacDefinition",
            "506ba231d223390890ed8ba198cc11b1a2513f55"
        ],
        [
            "Fixpoint fold2 (l1: list A) (l2: list B) (c: C) {struct l1}: C := match l1, l2 with a::l3, b::l4 => fold2 l3 l4 (f a b c) | _, _ => c end.",
            "VernacFixpoint",
            "714f4a4c50e8e43700801c5d1226441bf6213463"
        ],
        [
            "Variable g: A -> B -> C.",
            "VernacAssumption",
            "eb71fa0672263218c1515cb502220ec43df6d47d"
        ],
        [
            "Fixpoint map2 (l1: list A) (l2: list B) {struct l1}: list C := match l1, l2 with a::l3, b::l4 => (g a b)::map2 l3 l4 | _, _ => nil end.",
            "VernacFixpoint",
            "e0251f33c6c970654ee5a45e6bf2ba03024577ec"
        ],
        [
            "Lemma map2_length l1 l2: length (map2 l1 l2) = min (length l1) (length l2).",
            "VernacStartTheoremProof",
            "04ba7dbd66880bfd87a41089db6e70c6afc86fd8"
        ],
        [
            "generalize l2; clear l2.",
            "VernacExtend",
            "c8f375d0924edaf671165c137c768badd4fd9449"
        ],
        [
            "induction l1 as [| a1 l1 IH]; intros [| a2 l2]; simpl; auto.",
            "VernacExtend",
            "9f6a7df3b9d2712b395a8e724831918d5d95ec1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint dmap2 (a : A) (l1: list A) (l2: list B) {struct l2}: list C := match l1, l2 with a1::l3, b1 :: l4 => g a1 b1 :: dmap2 a l3 l4 | nil, b1 :: l4 => g a b1 :: dmap2 a nil l4 | _, _ => nil end.",
            "VernacFixpoint",
            "f4eb881b61073887fdb54cde4f684ff28f41b8be"
        ],
        [
            "End Fold2.",
            "VernacEndSegment",
            "b53af22da287108bbf7c23f35d89834ed1cdef75"
        ],
        [
            "Arguments dhead[A].",
            "VernacArguments",
            "48302f65ac5da129c59d5be842ea13b031ad03f5"
        ],
        [
            "Arguments fold2[A B C].",
            "VernacArguments",
            "b60203cd782c549dfd9e26182798b938cbd2c3ec"
        ],
        [
            "Arguments map2[A B C].",
            "VernacArguments",
            "ccd2b1cd75f3feedf6e84a63468dd2df85c82aba"
        ],
        [
            "Arguments dmap2[A B C].",
            "VernacArguments",
            "33b42ba72e4cf2bfb9816e86a592be2c8dccc438"
        ],
        [
            "Section Perm.",
            "VernacBeginSection",
            "7b4be30f9a2c3ef4eca51dd26254806053c3e6bf"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Inductive perm: list A -> list A -> Prop := perm_id: forall l, perm l l | perm_swap: forall a b l, perm (a::b::l) (b::a::l) | perm_skip: forall a l1 l2, perm l1 l2 -> perm (a::l1) (a::l2) | perm_trans: forall l1 l2 l3, perm l1 l2 -> perm l2 l3 -> perm l1 l3.",
            "VernacInductive",
            "dc8c362f940c75969f5c69947a56ffb6feb3b2db"
        ],
        [
            "Lemma perm_sym l1 l2: perm l1 l2 -> perm l2 l1.",
            "VernacStartTheoremProof",
            "e4898814cd08099969bce7d80e91c0e8173dc964"
        ],
        [
            "intros HH; elim HH; simpl; auto.",
            "VernacExtend",
            "f8f27c0df6725e3adfae98f1dfb8cc858a9707c4"
        ],
        [
            "intros; apply perm_id; auto.",
            "VernacExtend",
            "3b91d284a42c46b2c49916343e82ccf2611a0580"
        ],
        [
            "intros; apply perm_swap.",
            "VernacExtend",
            "419e8136895dc58161dd3b4e46073347d90ad6c9"
        ],
        [
            "intros; apply perm_skip; auto.",
            "VernacExtend",
            "e0af9f92018c994068c7c064bacd4ccb337a554d"
        ],
        [
            "intros l3 l4 l5 H1 H2 H3 H4; apply perm_trans with (1 := H4); auto.",
            "VernacExtend",
            "db47fcb6361dff0eb13c582870a6f4fbad61ef8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_cons_app a l1 l2: perm ((a:: l1) ++ l2) (l1 ++ (a:: l2)).",
            "VernacStartTheoremProof",
            "71b05e83ea2dbe5654fd1fa1cffc895b88e62c1a"
        ],
        [
            "generalize l2; clear l2; induction l1 as [| b l1 IH]; auto.",
            "VernacExtend",
            "cfac3dd4df838f3b36dc1f3d245e1c4a3d4e953f"
        ],
        [
            "intros l2; apply perm_id.",
            "VernacExtend",
            "f7fcbb4f751ec64bdab39106b84b95d8dd20ed1f"
        ],
        [
            "intros l2; apply perm_trans with (1 := perm_swap a b (l1 ++ l2)).",
            "VernacExtend",
            "23ba7141848c2873d83ef3ef3306dfd42a8987a9"
        ],
        [
            "simpl; apply perm_skip; auto.",
            "VernacExtend",
            "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
        ],
        [
            "apply (IH l2).",
            "VernacExtend",
            "ed51d2714b5c9aa125135c8b69ed11235617de52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_length l1 l2: perm l1 l2 -> length l1 = length l2.",
            "VernacStartTheoremProof",
            "d34ef946d558dc069428538d765796c1fcd8b336"
        ],
        [
            "intros HH; elim HH; simpl; auto.",
            "VernacExtend",
            "f8f27c0df6725e3adfae98f1dfb8cc858a9707c4"
        ],
        [
            "intros l3 l4 l5 H1 H2 H3 H4; rewrite H2; auto.",
            "VernacExtend",
            "09ed8b1bd4597adf6c1f5151753a9a6ad97de256"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_in a l1 l2: perm l1 l2 -> In a l1 -> In a l2.",
            "VernacStartTheoremProof",
            "6dfe00819fe891067f3e6e173a09bbca228ba4ee"
        ],
        [
            "intros H; generalize a; elim H; clear a l1 l2 H; auto with datatypes.",
            "VernacExtend",
            "bde02d923e85883bacedba584551c1fb415b657e"
        ],
        [
            "simpl; intros a b l c [H1 | [H1 | H1]]; subst; auto.",
            "VernacExtend",
            "5784b9b54855f44fc2951cd6743ac3110000488c"
        ],
        [
            "simpl; intros a l1 l2 H IH c [H1 | H1]; subst; auto.",
            "VernacExtend",
            "929a8a17a7648412e650cc24508a91ff157cc73d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_in_inv a l1: In a l1 -> exists l2, perm l1 (a:: l2).",
            "VernacStartTheoremProof",
            "af8b2f536efb6329bb22d78489bcc866e81d36de"
        ],
        [
            "induction l1 as [| b l1 IH]; simpl; intros HH; case HH; auto.",
            "VernacExtend",
            "36dde7348c34c3039d27963faf1f57704368cf7d"
        ],
        [
            "intros HH1; subst; exists l1; apply perm_id.",
            "VernacExtend",
            "da2202bc6a10f22f73f47b763f4b058599dc0b68"
        ],
        [
            "intros HH1; case IH; auto.",
            "VernacExtend",
            "7a7f5f1434b6856428256c8e3e8ef3cbcc0f76e2"
        ],
        [
            "intros l2 Hl2; exists (b::l2).",
            "VernacExtend",
            "6d9ca5dd5e291fdb89cb3e68f90812dc16d75a23"
        ],
        [
            "apply perm_trans with (b::a::l2).",
            "VernacExtend",
            "6a2f0ff508bfc1d19382eef7206df5c2d48077b9"
        ],
        [
            "apply perm_skip; auto.",
            "VernacExtend",
            "1654357afb92e41945aa99b59e1f36ede00cf103"
        ],
        [
            "apply perm_swap; auto.",
            "VernacExtend",
            "7cf8cd32ebdf8343a2eccc0aa938562997b82326"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_incl_r l1 l2 l3: perm l1 l2 -> incl l1 l3 -> incl l2 l3.",
            "VernacStartTheoremProof",
            "865580ee663ce4647f518721cb1bb0091ddb27cd"
        ],
        [
            "intros H; generalize l3; elim H; clear l3 l1 l2 H; auto with datatypes.",
            "VernacExtend",
            "53162c893e5a1d2ab2340097b628668b9913c0a7"
        ],
        [
            "intros a b l1 l2 H x; simpl; intros [H1 | [H1 | H1]]; subst; apply H; auto with datatypes.",
            "VernacExtend",
            "ca1f0feea729a8b942a99befa11ffd34d3cfa8a9"
        ],
        [
            "intros a l1 l2 Hp IH l3 Hi x; simpl; intros [H1 | H1]; subst.",
            "VernacExtend",
            "49644690fc279d5a0979869e174ce8877027a3e8"
        ],
        [
            "apply Hi; auto with datatypes.",
            "VernacExtend",
            "efcb8a5011deedeac5a362e97c57b5b1071f3cda"
        ],
        [
            "apply IH; auto with datatypes.",
            "VernacExtend",
            "54f1e45ff4768a69b8f0024b8f45d0d42b867ff3"
        ],
        [
            "intros y Hy; apply Hi; auto with datatypes.",
            "VernacExtend",
            "ba5a5a4ea65760e1388f57c2d866d89e33fc9ece"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_incl_l l1 l2 l3: perm l1 l2 -> incl l3 l1 -> incl l3 l2.",
            "VernacStartTheoremProof",
            "9dfa4387bf792dab411f985fb995ebcf80f987d7"
        ],
        [
            "intros H; generalize l3; elim H; clear l3 l1 l2 H; auto with datatypes.",
            "VernacExtend",
            "53162c893e5a1d2ab2340097b628668b9913c0a7"
        ],
        [
            "intros a b l1 l2 H x Hx.",
            "VernacExtend",
            "0a4be10d3164bc187f4b5b8d4d0fa0eb2bf7f01d"
        ],
        [
            "generalize (H _ Hx); simpl; intros [H1 | [H1 | H1]]; subst; auto.",
            "VernacExtend",
            "790c9141d96ff42d182662b794cc29a5163cf00b"
        ],
        [
            "intros a l1 l2 Hp IH l3 Hi x Hx.",
            "VernacExtend",
            "63d4fafd9e68aa60b9c85530b2ff77fcd600f07e"
        ],
        [
            "generalize (Hi _ Hx); simpl; intros [H1 | H1]; subst; auto.",
            "VernacExtend",
            "90072249a77b2c1053baf534015559d0889446e0"
        ],
        [
            "right; apply perm_in with (1 := Hp); auto.",
            "VernacExtend",
            "d40a77e8cdea93408e0550cf900d5cbca7252fbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Perm.",
            "VernacEndSegment",
            "0f830b9abc3a788801ca9485c0bd0d256437184f"
        ],
        [
            "Arguments perm[A].",
            "VernacArguments",
            "712ad08b8e460b8b1fd88e2f275233d827b5325e"
        ],
        [
            "Section Uniq.",
            "VernacBeginSection",
            "35ff65a41c86994f62acda5d31f751f2ba62552a"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Inductive uniq: list A -> Prop := uniq_nil: uniq nil | uniq_cons: forall a l, ~ In a l -> uniq l -> uniq (a::l).",
            "VernacInductive",
            "572b1d2f1afdbe8b368bd58dee0ebdf99b42ee50"
        ],
        [
            "Lemma uniq_perm l1 l2: perm l1 l2 -> uniq l1 -> uniq l2.",
            "VernacStartTheoremProof",
            "dccf43b20bbf2fccae9bf5020b87ad13576ab1c0"
        ],
        [
            "intros H; elim H; auto.",
            "VernacExtend",
            "c158e4bfc9cdce92a9dfc7537b5eda1a747af971"
        ],
        [
            "intros a b l HH; inversion_clear HH as [| aa bb Hi HH1].",
            "VernacExtend",
            "44de3db3dc9baebe740e22a72f5adae9021e8456"
        ],
        [
            "inversion_clear HH1 as [| aa bb Hi1 HH2].",
            "VernacExtend",
            "b808f0564c1a4fc1b4134bbffd9446a168d0b780"
        ],
        [
            "repeat apply uniq_cons; auto with datatypes.",
            "VernacExtend",
            "ebdfbed03320911fd73d3373810b6fa4c2275076"
        ],
        [
            "simpl; intros [H1 | H1]; subst; auto.",
            "VernacExtend",
            "4fc0950e5b17bbc136f777b1033615cf16b07a00"
        ],
        [
            "case Hi; auto with datatypes.",
            "VernacExtend",
            "03c83ea1682a4398f5e2cf80402ffcc677b7ea56"
        ],
        [
            "intros a l3 l4 H1 IH HH.",
            "VernacExtend",
            "79e2f5cae283ce6fe581cee0b2dd8804ae5a001b"
        ],
        [
            "inversion_clear HH as [| aa bb Hi HH1].",
            "VernacExtend",
            "83123bb4dd0f2eca60c994a10fae1adc8f10fcc0"
        ],
        [
            "apply uniq_cons; auto.",
            "VernacExtend",
            "254111457977534262219293b72bdfce8d692935"
        ],
        [
            "intros HH2; case Hi; apply perm_in with (1 := perm_sym _ _ _ H1); auto.",
            "VernacExtend",
            "eef1c260f5bf4f01ba16be37cbf99388e6b71c58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_cons_inv a l: uniq (a::l) -> uniq l.",
            "VernacStartTheoremProof",
            "4000a19762e30449fd5384bdb1fb5c045a9be66d"
        ],
        [
            "intros HH; inversion HH; auto.",
            "VernacExtend",
            "b202c98d372fc53c57eb32b35a3f751527b11c1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_app_inv_l l1 l2: uniq (l1 ++ l2) -> uniq l1.",
            "VernacStartTheoremProof",
            "88134842d057ddf782aa0aa0c8e9c1184563b6f8"
        ],
        [
            "generalize l1; induction l2 as [| a l2 IH]; clear l1; intros l1.",
            "VernacExtend",
            "38eb271d474fb9ca841d64f88389d7d5302d2072"
        ],
        [
            "rewrite <-app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "intros HH; apply uniq_cons_inv with a.",
            "VernacExtend",
            "580c4745af29823d80fdc6908ea89d025ff45abc"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "apply uniq_perm with (2 := HH).",
            "VernacExtend",
            "ae084fd610ca6f07eef14ea45bbe8cff12998c3c"
        ],
        [
            "apply perm_sym; apply perm_cons_app.",
            "VernacExtend",
            "647d087b005e6334a4c4667b875df3fc84313943"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_app_inv_r l1 l2: uniq (l1 ++ l2) -> uniq l2.",
            "VernacStartTheoremProof",
            "4d5bce6e6e91e24f9fadb095aa8b0e017725201d"
        ],
        [
            "generalize l2; clear l2; induction l1 as [| a l1 IH]; auto.",
            "VernacExtend",
            "7eb1e2fca00d911605689e5b464568d49b57354b"
        ],
        [
            "intros l2 Hl2.",
            "VernacExtend",
            "a2ac701415dcef4e78cf414208e8cdca42df8d80"
        ],
        [
            "apply uniq_cons_inv with a.",
            "VernacExtend",
            "feb9475d69ee687234bba2fd0f410b192313b172"
        ],
        [
            "apply IH.",
            "VernacExtend",
            "88103d45393d3ee3ab547447d913543854db8cea"
        ],
        [
            "apply uniq_perm with (2 := Hl2).",
            "VernacExtend",
            "f080514d8b809a5415bc84fba9df5a481d78d5fa"
        ],
        [
            "apply perm_cons_app.",
            "VernacExtend",
            "2a46c86421ed4e2f7f5614ec3d813fd84f62b227"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_incl_inv l1 l2: uniq l1 -> uniq l2 -> incl l1 l2 -> exists l3, perm l2 (l1 ++ l3).",
            "VernacStartTheoremProof",
            "4641a7f088a7f32d3c145657e27e61d16c5c7be9"
        ],
        [
            "generalize l2; clear l2; induction l1 as [| a l1 IH]; intros l2.",
            "VernacExtend",
            "a85be072e9719b44644c0c086c007a1cf4c28ab8"
        ],
        [
            "intros; exists l2; apply perm_id.",
            "VernacExtend",
            "b9edd169fb2c76c9fad3f4dc7b443f3c8842c159"
        ],
        [
            "intros Hu1 Hu2 Hi.",
            "VernacExtend",
            "8f787f89e162974c394440331f3dfaf87523e1ca"
        ],
        [
            "assert (H1: In a l2).",
            "VernacExtend",
            "b4f54273474855080b2577eb4d1f1dcc78968ee3"
        ],
        [
            "apply Hi; auto with datatypes.",
            "VernacExtend",
            "efcb8a5011deedeac5a362e97c57b5b1071f3cda"
        ],
        [
            "case perm_in_inv with (1 := H1).",
            "VernacExtend",
            "1ecb6e52ca94589eaffa675e83baae3800c8f20e"
        ],
        [
            "intros l3 Hl3.",
            "VernacExtend",
            "73ba65bce66aa7b9cdc47c061d276ab144d10624"
        ],
        [
            "case (IH l3); auto.",
            "VernacExtend",
            "6238089a5c11e1e2062ca2f43c4050888d248b45"
        ],
        [
            "apply uniq_cons_inv with a; auto.",
            "VernacExtend",
            "5a4b1e85c65f5dd4b4a68e16f02a16418cd83afa"
        ],
        [
            "apply uniq_cons_inv with a; auto.",
            "VernacExtend",
            "5a4b1e85c65f5dd4b4a68e16f02a16418cd83afa"
        ],
        [
            "apply uniq_perm with (1 := Hl3); auto.",
            "VernacExtend",
            "3209a0937725204c8721ec23039d35287ecf399c"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "assert (H2: In x (a::l3)).",
            "VernacExtend",
            "93d467bf30e43875ca8352bb282cdae7bf3abea4"
        ],
        [
            "apply perm_in with (1 := Hl3).",
            "VernacExtend",
            "320d90f32bcbf1995a311d8dfa6cc218290d9913"
        ],
        [
            "apply Hi; auto with datatypes.",
            "VernacExtend",
            "efcb8a5011deedeac5a362e97c57b5b1071f3cda"
        ],
        [
            "simpl in H2; case H2; intros HH; subst; auto.",
            "VernacExtend",
            "2b07e83a15a230bbcf749be51de103347ca89004"
        ],
        [
            "inversion_clear Hu1 as [| aa bb HH1 HH2].",
            "VernacExtend",
            "62fe296049889f319076582bf6d28184e33bbb25"
        ],
        [
            "case HH1; auto.",
            "VernacExtend",
            "2091d7846677ca541a675dd017332221c7337d3a"
        ],
        [
            "intros l4 Hl4.",
            "VernacExtend",
            "cecb9f631e57e5fa196c015505e2f403e121b463"
        ],
        [
            "exists l4.",
            "VernacExtend",
            "822e274a9d2a887ace3f0447689ecf76af083217"
        ],
        [
            "apply perm_trans with (1 := Hl3).",
            "VernacExtend",
            "fc86f227f4d802887684ad9b1f79191c14e95d73"
        ],
        [
            "simpl; apply perm_skip; auto.",
            "VernacExtend",
            "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Uniq.",
            "VernacEndSegment",
            "796e8417ed84e185e8837b86b2d280bde1f2ba0b"
        ],
        [
            "Lemma list_split (A: Type) n1 n2 (l: list A): length l = n1 + n2 -> exists l1, exists l2, l = l1 ++ l2 /\\ length l1 = n1 /\\ length l2 = n2.",
            "VernacStartTheoremProof",
            "946b36ec6bd8cad550e36470c11295675ca42925"
        ],
        [
            "generalize n2 l; clear n2 l; induction n1 as [| n1 IH].",
            "VernacExtend",
            "aa6081453acce5245334d0b02485ccf1f16322c8"
        ],
        [
            "intros n2 l Hl; exists nil; exists l; auto.",
            "VernacExtend",
            "63562d4f30121e3c867fd8057beeeb3582d1fda2"
        ],
        [
            "intros n2 [| a l] H; try discriminate.",
            "VernacExtend",
            "c22d45d5dd7e13c028305bc9c1fd9486f978b768"
        ],
        [
            "case (IH n2 l); auto.",
            "VernacExtend",
            "f6e4d65fbe13de9a40c53a2a9a37fda7405d8ff3"
        ],
        [
            "intros l1 (l2, (H1, (H2, H3))).",
            "VernacExtend",
            "e7ccbdd1a04f28548ea348a17217e3c1bdc3b48f"
        ],
        [
            "exists (a::l1); exists l2; repeat split; subst; simpl; auto.",
            "VernacExtend",
            "8037b52610f51173e5151f73d0cce6d2fce936b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_split (A B: Type) (a b: A) (lk: list B) l1 l2: length lk = length ((a:: l1) ++ b :: l2)%list -> exists k1, exists k2, exists lk1, exists lk2, lk = ((k1::lk1) ++ k2::lk2)%list /\\ length lk1 = length l1 /\\ length lk2 = length l2.",
            "VernacStartTheoremProof",
            "f8b7c7ea5c561056de6888ff2ed79a2883c9cf5d"
        ],
        [
            "destruct lk as [| a1 lk].",
            "VernacExtend",
            "a5a518a37011ff11f00e9bb4975efd781beed2ae"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "simpl; intros HH; injection HH; clear HH; intros HH.",
            "VernacExtend",
            "15c483e19876675371c172cf4454346aa732aa30"
        ],
        [
            "assert (H1: exists k2, exists lk1, exists lk2, lk = (lk1 ++ k2::lk2)%list /\\ length lk1 = length l1 /\\ length lk2 = length l2).",
            "VernacExtend",
            "9fec871c3c1423f3fb1ebc69d0ca5b97cb39918b"
        ],
        [
            "generalize l1 HH; clear HH; induction lk as [| a2 lk IH]; clear l1; intros [| b1 l1]; try (intros; discriminate).",
            "VernacExtend",
            "2f7c38b12206e0d4836eaf63cb99a472ee6b22f2"
        ],
        [
            "simpl; intros HH; injection HH; clear HH; intros HH.",
            "VernacExtend",
            "15c483e19876675371c172cf4454346aa732aa30"
        ],
        [
            "exists a2; exists (@nil _); exists lk; repeat split; auto.",
            "VernacExtend",
            "525acf47a0c6d6dddb42f5852432823415616bd9"
        ],
        [
            "simpl; intros HH; injection HH; clear HH; intros HH.",
            "VernacExtend",
            "15c483e19876675371c172cf4454346aa732aa30"
        ],
        [
            "case (IH _ HH); auto.",
            "VernacExtend",
            "b4b483f2d9f13541e25230cdce549bbcb83e3929"
        ],
        [
            "intros k1 (lk1, (lk2, (H1lk1, (H2lk1, H3lk1)))).",
            "VernacExtend",
            "3729b7009e95596ee0c8a5050d0abacbe06c3c20"
        ],
        [
            "exists k1; exists (a2::lk1); exists lk2; simpl; repeat split; auto.",
            "VernacExtend",
            "323d258d043780905f6b0059903eef06e43508ed"
        ],
        [
            "rewrite H1lk1; auto.",
            "VernacExtend",
            "9f96f664bfa4da0fb658b807d323ad68e6be0a9c"
        ],
        [
            "case H1; intros k2 (lk1, (lk2, (H1lk, (H2lk, H3lk)))).",
            "VernacExtend",
            "e4ce658accf4aac7510de45b9fbe356c27a7f47d"
        ],
        [
            "exists a1; exists k2; exists lk1; exists lk2; repeat split; auto.",
            "VernacExtend",
            "e6859683cce4db40055e8925233f68ab894c52d4"
        ],
        [
            "rewrite H1lk; auto.",
            "VernacExtend",
            "43e2d400d07fae464e94730272570fa56082b1d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_app_inj (A: Type) (l1 l2 l3 l4: list A): length l1 = length l3 -> l1 ++ l2 = l3 ++ l4 -> l1 = l3 /\\ l2 = l4.",
            "VernacStartTheoremProof",
            "500bdd2874da7099684c7f01e54cbd03701aa060"
        ],
        [
            "generalize l2 l3 l4; clear l2 l3 l4; induction l1 as [| x1 l1 IH].",
            "VernacExtend",
            "1da889e7cada8ffa57d3f820d00c088e2b3fdfad"
        ],
        [
            "intros l2 [| x3 l3] l4 H1 H2; try discriminate; auto.",
            "VernacExtend",
            "e5c7c729a2d150b2eb7de58caeab63c0439d6e41"
        ],
        [
            "intros l2 [| x3 l3] l4 H1 H2; try discriminate.",
            "VernacExtend",
            "d762b452f7b82959b7a78e782d45a2cc7564cb0e"
        ],
        [
            "injection H2; intros; subst; auto.",
            "VernacExtend",
            "2620ac2850e80c2f632902cf1a2b9a7b2c2581c3"
        ],
        [
            "case (IH l2 l3 l4); auto; intros; subst; auto.",
            "VernacExtend",
            "09e179d0bd45207a8a79942e930a0be081efbfca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_case (A:Type) (l: list A): l = nil \\/ l <> nil.",
            "VernacStartTheoremProof",
            "d17b043ada7068edd0ffe79585383a105bce4829"
        ],
        [
            "destruct l as [|a l]; simpl; auto.",
            "VernacExtend",
            "259dc32710793a36875e2e27db62f0fb055c27b9"
        ],
        [
            "right; intros HH; discriminate.",
            "VernacExtend",
            "22446328682ce0e30c1de63877dfe298fec5fce7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_dec (A: Type) (P: A -> Prop) l: (forall x, P x \\/ ~ P x) -> (forall x, In x l -> P x) \\/ (exists x, In x l /\\ ~ P x).",
            "VernacStartTheoremProof",
            "3ead88d6144f6924b9cbccdeb8750e27b3431b89"
        ],
        [
            "intros Pdec.",
            "VernacExtend",
            "0e0efd8cf14daf7958d6937ee435f44bd9582481"
        ],
        [
            "induction l as [| a l IH].",
            "VernacExtend",
            "8ac38a9c2f0b45df33c5c5c335d05f5dfdd320e7"
        ],
        [
            "left; intros x [].",
            "VernacExtend",
            "3ad0cca8cdfb57c434e74abb28d71ceb61abcd51"
        ],
        [
            "case (Pdec a); intros H.",
            "VernacExtend",
            "30fd4ab18f301a7ac1aafcbddf5745acf80a9785"
        ],
        [
            "2: right; exists a; auto with datatypes.",
            "VernacExtend",
            "7775498a7cf886ab7bf85297b64fd40374553d49"
        ],
        [
            "case IH.",
            "VernacExtend",
            "10b1483cc2a66b247f9e5121bc6607567632f2f7"
        ],
        [
            "simpl; intros H1; left; intros x [Hx|Hx]; subst; auto.",
            "VernacExtend",
            "886d0acae32d8b183005037929ffbf3dc24e6699"
        ],
        [
            "intros (x,(H1x,H2x)); right; exists x; auto with datatypes.",
            "VernacExtend",
            "cf8796f4d86b6bcf583643048912f2a998693160"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments uniq[A].",
            "VernacArguments",
            "a9961993236b3b847bb2927734e45c2ab169ca12"
        ],
        [
            "Inductive eq_Spec (A: Type) (x y: A): bool -> Prop := |eq_Spect: x = y -> eq_Spec A x y true |eq_Specf: x <> y -> eq_Spec A x y false.",
            "VernacInductive",
            "dc147d58cd97d3fc738f82c7f76652171e1b061d"
        ],
        [
            "Arguments eq_Spec[A].",
            "VernacArguments",
            "4ec987d03c05374912e14729b44a85a7f39c1b8b"
        ],
        [
            "Fixpoint bin (a b : nat) {struct a} : nat := match a, b with _, O => 1 | O, S b' => 0 | S a', S b' => bin a' (S b') + bin a' b' end.",
            "VernacFixpoint",
            "ea13b33cae6c0180d8104edd990e346ced41ad62"
        ],
        [
            "Lemma bin_0: forall (n : nat), bin n 0 = 1.",
            "VernacStartTheoremProof",
            "85ac344bda76f9dd5c514f671765eac5b214bb22"
        ],
        [
            "intros n; induction n; auto.",
            "VernacExtend",
            "0415e441e567c3d601aa095f6712a5ff387df198"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bin_1: forall (n : nat), bin n 1 = n.",
            "VernacStartTheoremProof",
            "b49b73a903fc25430f213716668aaced9744d822"
        ],
        [
            "intros; induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "1c1533ce0149f2c96ac74cbc2e10bda62f4e7c13"
        ],
        [
            "rewrite bin_0, IH, Plus.plus_comm; auto.",
            "VernacExtend",
            "d8d5bb089289b0c0cd3945b479976cde0be49cbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bin_more: forall (n m : nat), n < m -> bin n m = 0.",
            "VernacStartTheoremProof",
            "43b80b42629fcf67c4648f4dd70d35377d3f6d2a"
        ],
        [
            "intros n; induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "8f055a830406ba7bfd1497a0a5b2fc172309d5bc"
        ],
        [
            "intros m; case m; simpl; auto.",
            "VernacExtend",
            "97780f9803eda6eefeb6a3302f6b0c72158ff0cf"
        ],
        [
            "intros H'; inversion H'; auto.",
            "VernacExtend",
            "45f67d385b09c783aaadc9044602b5adb2cd748d"
        ],
        [
            "intros m; case m; simpl; auto.",
            "VernacExtend",
            "97780f9803eda6eefeb6a3302f6b0c72158ff0cf"
        ],
        [
            "intros H'0; contradict H'0; auto with arith.",
            "VernacExtend",
            "a1af53c9646f66e9e1bb70de3aa2eaa5bc2cf7aa"
        ],
        [
            "intros n1 H'0; rewrite !IH; auto with arith.",
            "VernacExtend",
            "4c685e0219bcec4d6de89d5e3d517f7c8e8b3656"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bin_nn: forall (n : nat), bin n n = 1.",
            "VernacStartTheoremProof",
            "90e9ee96e49735dd30ef22481e2320beb2e3f0be"
        ],
        [
            "intros n; induction n as [| n IH]; intros; simpl; auto.",
            "VernacExtend",
            "fca473c99723c237c91d83b09ade8929883fa3ca"
        ],
        [
            "rewrite (bin_more n (S n)); auto.",
            "VernacExtend",
            "f57fc71ab0e6dfc8d037715650126a8bf17ae293"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bin_def: forall (n k : nat), bin (S n) (S k) = bin n (S k) + bin n k.",
            "VernacStartTheoremProof",
            "685bd9b94a8bde366e3e364128e6c90ca9350121"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint iter {A: Type} (f: A -> A) (n: nat) (x: A) := match n with | O => x | S n1 => f (iter f n1 x) end.",
            "VernacFixpoint",
            "da20f462d0414f1e49406631b878b7931954b184"
        ],
        [
            "Coercion b2Prop (x : bool) := x = true.",
            "VernacDefinition",
            "13d592a7cb4c8beff6b1cae0b73571c7b9c72a38"
        ],
        [
            "Lemma b2PropT: b2Prop true.",
            "VernacStartTheoremProof",
            "e16c7a52464c09dd0fcb675b1831b8a269f1c5f3"
        ],
        [
            "exact (refl_equal true).",
            "VernacExtend",
            "4c24d0cac71951247a4671c9a67fffb7d99a300c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve b2PropT.",
            "VernacHints",
            "0ab0a48bfd3f087dd8d6827b95606fd09da501d9"
        ],
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Lemma andbP b1 b2: b1 && b2 <-> b1 /\\ b2.",
            "VernacStartTheoremProof",
            "33dfad80e0ab72bac5e498648af31320e47ac1ca"
        ],
        [
            "case b1; case b2; intuition.",
            "VernacExtend",
            "71b42821d48b37bfea1127219fe0671f31a12b3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div2_double_p n m : div2 (2 * n + m) = n + div2 m.",
            "VernacStartTheoremProof",
            "9d496c60b0bc8335db9d3d32727dae901d38c87f"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite <-plus_n_Sm; simpl in IH |- *.",
            "VernacExtend",
            "5d1d5035c7b819886bb17a03cce19b7451298428"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div2_prop n: n + div2 (n * (n - 1)) = div2 (n.+1 * n).",
            "VernacStartTheoremProof",
            "c378dc42acb640a9367e2bfca38e76e2aaa5be4a"
        ],
        [
            "assert (F1: forall n, (n + n * n = 2 * n + n * (n - 1))%nat).",
            "VernacExtend",
            "0832e2130fdc611a9d81fe6a5b939ff63cda9e51"
        ],
        [
            "intros [|n1]; simpl; auto.",
            "VernacExtend",
            "b9eed64bb61f2d77afe28dbeb2a63de03865d079"
        ],
        [
            "rewrite <-!Minus.minus_n_O; ring.",
            "VernacExtend",
            "b9b54c5c2df641cc1cb724b916dbccc1d89f9066"
        ],
        [
            "induction n; simpl; auto.",
            "VernacExtend",
            "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
        ],
        [
            "rewrite <-plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "rewrite <-Minus.minus_n_O.",
            "VernacExtend",
            "02fbf6ca9654335551fa1fe5d22988d676c836eb"
        ],
        [
            "rewrite F1, div2_double_p.",
            "VernacExtend",
            "77aae2dd6f33db48c39d802cd2e167b67fb86351"
        ],
        [
            "rewrite !Plus.plus_assoc; replace (n + n) with (2 * n); try ring.",
            "VernacExtend",
            "0727402810c7a2fdae31c4029307a37ae914240f"
        ],
        [
            "rewrite div2_double_p, <-(Mult.mult_comm (n.+1)), <-IHn.",
            "VernacExtend",
            "453d19107dc02bbb5aa584109406d0c0861ad06a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minus_minus_le m n: n <= m -> m - (m - n) = n.",
            "VernacStartTheoremProof",
            "7715031a5e90dbb34ad7ebf99a3a6bff0c1cc453"
        ],
        [
            "assert (F1: (forall n m, n <= m -> exists k, m = k + n)%nat).",
            "VernacExtend",
            "eb888abf6ef3e4781180c6e148b58b30f49f4cec"
        ],
        [
            "intros n1 m1 H; elim H; auto.",
            "VernacExtend",
            "132e290c4658cf580336ab9fec2fcea9731ddbde"
        ],
        [
            "exists 0%nat; auto.",
            "VernacExtend",
            "815a7dfd5eb81dc69151fb22cee9f66c11e56534"
        ],
        [
            "intros m2 _ (k, Hk); rewrite Hk; exists k.+1; auto.",
            "VernacExtend",
            "eea844cb637a692215909f078263cb6d078bfdc4"
        ],
        [
            "intros H; case (F1 _ _ H).",
            "VernacExtend",
            "f62cde89853c84a2ce911f3807e8980eb28abcaa"
        ],
        [
            "intros k Hk; subst.",
            "VernacExtend",
            "8aaee8726b6b7e83ba74a2dd126da0cd14d5bb5d"
        ],
        [
            "rewrite (Plus.plus_comm k), Minus.minus_plus.",
            "VernacExtend",
            "512a808c3aeb046b67acf7d2689e8a25bf18e690"
        ],
        [
            "rewrite (Plus.plus_comm n), Minus.minus_plus; auto.",
            "VernacExtend",
            "ccbf261aa8a95b72980d31eee8187f2fbaceca7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minus0_le m n: m <= n -> m - n = 0.",
            "VernacStartTheoremProof",
            "30bc6dc0a49f102012ca9e0dec80ee496fe34885"
        ],
        [
            "generalize n; clear n; induction m as [| m IH]; auto.",
            "VernacExtend",
            "c705ae2f69eaab239c62448be295275e2b134b72"
        ],
        [
            "intros [|n]; simpl; auto with arith.",
            "VernacExtend",
            "7f42d05407be06dcaaf236a278af160e7a0936c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint eq_nat (m n: nat) := match m, n with (S m), (S n) => eq_nat m n | 0, 0 => true | _, _ => false end.",
            "VernacFixpoint",
            "b9635f8f656cf6ff2457f338777269907e279c90"
        ],
        [
            "Notation \"m ?= n\" := (eq_nat m n) (at level 70): nat_scope.",
            "VernacNotation",
            "1b8a29515eb9ac0f82c64f22d933682408ebc273"
        ],
        [
            "Inductive eq_nat_spec: nat -> nat -> bool -> Type := eq_nat_spect: forall m, eq_nat_spec m m true | eq_nat_specb: forall m n, m <> n -> eq_nat_spec m n false.",
            "VernacInductive",
            "29e5cb44405d2332c70fa054780ca8cdd8aaa817"
        ],
        [
            "Lemma eq_natP m n: eq_nat_spec m n (m ?= n).",
            "VernacStartTheoremProof",
            "21f598271bd1df7dbc00f79cd1936f81c3a69497"
        ],
        [
            "generalize n; clear n; induction m as [| m IH]; intros [| n]; simpl; try constructor; try (intros; discriminate).",
            "VernacExtend",
            "cd8ccc2c8adb511c98023cff7613b1aebd7d7a44"
        ],
        [
            "(case (IH n); clear m n IH); [intros m | intros m n H]; constructor; intros H1; case H; injection H1; auto.",
            "VernacExtend",
            "ace2b3ff2be115c7d6fa13aba972312020633ab3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \"x .+2\" := (S (S x)) (at level 9): nat_scope.",
            "VernacNotation",
            "55b6e3d306a68004bc8a768cdad33d934507cd87"
        ]
    ],
    "proofs": [
        {
            "name": "minus_match",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "generalize k2; clear k2.",
                        "VernacExtend",
                        "a3311f368384d93c659d3c88c175f762698b4a14"
                    ]
                },
                {
                    "command": [
                        "induction k1 as [| k1 IH]; intros [| k2]; simpl; auto with arith.",
                        "VernacExtend",
                        "9fe78217f6171046c465289c915f91bf6127f4f8"
                    ]
                },
                {
                    "command": [
                        "generalize (IH k2); case minus; auto with arith.",
                        "VernacExtend",
                        "0c1380b9dee309b1901449c38a373ebdc8cc1e65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exp0",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expS",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "destruct m; simpl; auto; rewrite <- mult_n_Sm; rewrite <- mult_n_O; auto.",
                        "VernacExtend",
                        "d35233d360e3e2a493079a09cf655e971e479ac7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_length",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "generalize l2; clear l2.",
                        "VernacExtend",
                        "c8f375d0924edaf671165c137c768badd4fd9449"
                    ]
                },
                {
                    "command": [
                        "induction l1 as [| a1 l1 IH]; intros [| a2 l2]; simpl; auto.",
                        "VernacExtend",
                        "9f6a7df3b9d2712b395a8e724831918d5d95ec1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_sym",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros HH; elim HH; simpl; auto.",
                        "VernacExtend",
                        "f8f27c0df6725e3adfae98f1dfb8cc858a9707c4"
                    ]
                },
                {
                    "command": [
                        "intros; apply perm_id; auto.",
                        "VernacExtend",
                        "3b91d284a42c46b2c49916343e82ccf2611a0580"
                    ]
                },
                {
                    "command": [
                        "intros; apply perm_swap.",
                        "VernacExtend",
                        "419e8136895dc58161dd3b4e46073347d90ad6c9"
                    ]
                },
                {
                    "command": [
                        "intros; apply perm_skip; auto.",
                        "VernacExtend",
                        "e0af9f92018c994068c7c064bacd4ccb337a554d"
                    ]
                },
                {
                    "command": [
                        "intros l3 l4 l5 H1 H2 H3 H4; apply perm_trans with (1 := H4); auto.",
                        "VernacExtend",
                        "db47fcb6361dff0eb13c582870a6f4fbad61ef8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_cons_app",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "generalize l2; clear l2; induction l1 as [| b l1 IH]; auto.",
                        "VernacExtend",
                        "cfac3dd4df838f3b36dc1f3d245e1c4a3d4e953f"
                    ]
                },
                {
                    "command": [
                        "intros l2; apply perm_id.",
                        "VernacExtend",
                        "f7fcbb4f751ec64bdab39106b84b95d8dd20ed1f"
                    ]
                },
                {
                    "command": [
                        "intros l2; apply perm_trans with (1 := perm_swap a b (l1 ++ l2)).",
                        "VernacExtend",
                        "23ba7141848c2873d83ef3ef3306dfd42a8987a9"
                    ]
                },
                {
                    "command": [
                        "simpl; apply perm_skip; auto.",
                        "VernacExtend",
                        "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
                    ]
                },
                {
                    "command": [
                        "apply (IH l2).",
                        "VernacExtend",
                        "ed51d2714b5c9aa125135c8b69ed11235617de52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_length",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros HH; elim HH; simpl; auto.",
                        "VernacExtend",
                        "f8f27c0df6725e3adfae98f1dfb8cc858a9707c4"
                    ]
                },
                {
                    "command": [
                        "intros l3 l4 l5 H1 H2 H3 H4; rewrite H2; auto.",
                        "VernacExtend",
                        "09ed8b1bd4597adf6c1f5151753a9a6ad97de256"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_in",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros H; generalize a; elim H; clear a l1 l2 H; auto with datatypes.",
                        "VernacExtend",
                        "bde02d923e85883bacedba584551c1fb415b657e"
                    ]
                },
                {
                    "command": [
                        "simpl; intros a b l c [H1 | [H1 | H1]]; subst; auto.",
                        "VernacExtend",
                        "5784b9b54855f44fc2951cd6743ac3110000488c"
                    ]
                },
                {
                    "command": [
                        "simpl; intros a l1 l2 H IH c [H1 | H1]; subst; auto.",
                        "VernacExtend",
                        "929a8a17a7648412e650cc24508a91ff157cc73d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_in_inv",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "induction l1 as [| b l1 IH]; simpl; intros HH; case HH; auto.",
                        "VernacExtend",
                        "36dde7348c34c3039d27963faf1f57704368cf7d"
                    ]
                },
                {
                    "command": [
                        "intros HH1; subst; exists l1; apply perm_id.",
                        "VernacExtend",
                        "da2202bc6a10f22f73f47b763f4b058599dc0b68"
                    ]
                },
                {
                    "command": [
                        "intros HH1; case IH; auto.",
                        "VernacExtend",
                        "7a7f5f1434b6856428256c8e3e8ef3cbcc0f76e2"
                    ]
                },
                {
                    "command": [
                        "intros l2 Hl2; exists (b::l2).",
                        "VernacExtend",
                        "6d9ca5dd5e291fdb89cb3e68f90812dc16d75a23"
                    ]
                },
                {
                    "command": [
                        "apply perm_trans with (b::a::l2).",
                        "VernacExtend",
                        "6a2f0ff508bfc1d19382eef7206df5c2d48077b9"
                    ]
                },
                {
                    "command": [
                        "apply perm_skip; auto.",
                        "VernacExtend",
                        "1654357afb92e41945aa99b59e1f36ede00cf103"
                    ]
                },
                {
                    "command": [
                        "apply perm_swap; auto.",
                        "VernacExtend",
                        "7cf8cd32ebdf8343a2eccc0aa938562997b82326"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_incl_r",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros H; generalize l3; elim H; clear l3 l1 l2 H; auto with datatypes.",
                        "VernacExtend",
                        "53162c893e5a1d2ab2340097b628668b9913c0a7"
                    ]
                },
                {
                    "command": [
                        "intros a b l1 l2 H x; simpl; intros [H1 | [H1 | H1]]; subst; apply H; auto with datatypes.",
                        "VernacExtend",
                        "ca1f0feea729a8b942a99befa11ffd34d3cfa8a9"
                    ]
                },
                {
                    "command": [
                        "intros a l1 l2 Hp IH l3 Hi x; simpl; intros [H1 | H1]; subst.",
                        "VernacExtend",
                        "49644690fc279d5a0979869e174ce8877027a3e8"
                    ]
                },
                {
                    "command": [
                        "apply Hi; auto with datatypes.",
                        "VernacExtend",
                        "efcb8a5011deedeac5a362e97c57b5b1071f3cda"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto with datatypes.",
                        "VernacExtend",
                        "54f1e45ff4768a69b8f0024b8f45d0d42b867ff3"
                    ]
                },
                {
                    "command": [
                        "intros y Hy; apply Hi; auto with datatypes.",
                        "VernacExtend",
                        "ba5a5a4ea65760e1388f57c2d866d89e33fc9ece"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_incl_l",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros H; generalize l3; elim H; clear l3 l1 l2 H; auto with datatypes.",
                        "VernacExtend",
                        "53162c893e5a1d2ab2340097b628668b9913c0a7"
                    ]
                },
                {
                    "command": [
                        "intros a b l1 l2 H x Hx.",
                        "VernacExtend",
                        "0a4be10d3164bc187f4b5b8d4d0fa0eb2bf7f01d"
                    ]
                },
                {
                    "command": [
                        "generalize (H _ Hx); simpl; intros [H1 | [H1 | H1]]; subst; auto.",
                        "VernacExtend",
                        "790c9141d96ff42d182662b794cc29a5163cf00b"
                    ]
                },
                {
                    "command": [
                        "intros a l1 l2 Hp IH l3 Hi x Hx.",
                        "VernacExtend",
                        "63d4fafd9e68aa60b9c85530b2ff77fcd600f07e"
                    ]
                },
                {
                    "command": [
                        "generalize (Hi _ Hx); simpl; intros [H1 | H1]; subst; auto.",
                        "VernacExtend",
                        "90072249a77b2c1053baf534015559d0889446e0"
                    ]
                },
                {
                    "command": [
                        "right; apply perm_in with (1 := Hp); auto.",
                        "VernacExtend",
                        "d40a77e8cdea93408e0550cf900d5cbca7252fbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_perm",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; auto.",
                        "VernacExtend",
                        "c158e4bfc9cdce92a9dfc7537b5eda1a747af971"
                    ]
                },
                {
                    "command": [
                        "intros a b l HH; inversion_clear HH as [| aa bb Hi HH1].",
                        "VernacExtend",
                        "44de3db3dc9baebe740e22a72f5adae9021e8456"
                    ]
                },
                {
                    "command": [
                        "inversion_clear HH1 as [| aa bb Hi1 HH2].",
                        "VernacExtend",
                        "b808f0564c1a4fc1b4134bbffd9446a168d0b780"
                    ]
                },
                {
                    "command": [
                        "repeat apply uniq_cons; auto with datatypes.",
                        "VernacExtend",
                        "ebdfbed03320911fd73d3373810b6fa4c2275076"
                    ]
                },
                {
                    "command": [
                        "simpl; intros [H1 | H1]; subst; auto.",
                        "VernacExtend",
                        "4fc0950e5b17bbc136f777b1033615cf16b07a00"
                    ]
                },
                {
                    "command": [
                        "case Hi; auto with datatypes.",
                        "VernacExtend",
                        "03c83ea1682a4398f5e2cf80402ffcc677b7ea56"
                    ]
                },
                {
                    "command": [
                        "intros a l3 l4 H1 IH HH.",
                        "VernacExtend",
                        "79e2f5cae283ce6fe581cee0b2dd8804ae5a001b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear HH as [| aa bb Hi HH1].",
                        "VernacExtend",
                        "83123bb4dd0f2eca60c994a10fae1adc8f10fcc0"
                    ]
                },
                {
                    "command": [
                        "apply uniq_cons; auto.",
                        "VernacExtend",
                        "254111457977534262219293b72bdfce8d692935"
                    ]
                },
                {
                    "command": [
                        "intros HH2; case Hi; apply perm_in with (1 := perm_sym _ _ _ H1); auto.",
                        "VernacExtend",
                        "eef1c260f5bf4f01ba16be37cbf99388e6b71c58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_cons_inv",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros HH; inversion HH; auto.",
                        "VernacExtend",
                        "b202c98d372fc53c57eb32b35a3f751527b11c1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_app_inv_l",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "generalize l1; induction l2 as [| a l2 IH]; clear l1; intros l1.",
                        "VernacExtend",
                        "38eb271d474fb9ca841d64f88389d7d5302d2072"
                    ]
                },
                {
                    "command": [
                        "rewrite <-app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "intros HH; apply uniq_cons_inv with a.",
                        "VernacExtend",
                        "580c4745af29823d80fdc6908ea89d025ff45abc"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "apply uniq_perm with (2 := HH).",
                        "VernacExtend",
                        "ae084fd610ca6f07eef14ea45bbe8cff12998c3c"
                    ]
                },
                {
                    "command": [
                        "apply perm_sym; apply perm_cons_app.",
                        "VernacExtend",
                        "647d087b005e6334a4c4667b875df3fc84313943"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_app_inv_r",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "generalize l2; clear l2; induction l1 as [| a l1 IH]; auto.",
                        "VernacExtend",
                        "7eb1e2fca00d911605689e5b464568d49b57354b"
                    ]
                },
                {
                    "command": [
                        "intros l2 Hl2.",
                        "VernacExtend",
                        "a2ac701415dcef4e78cf414208e8cdca42df8d80"
                    ]
                },
                {
                    "command": [
                        "apply uniq_cons_inv with a.",
                        "VernacExtend",
                        "feb9475d69ee687234bba2fd0f410b192313b172"
                    ]
                },
                {
                    "command": [
                        "apply IH.",
                        "VernacExtend",
                        "88103d45393d3ee3ab547447d913543854db8cea"
                    ]
                },
                {
                    "command": [
                        "apply uniq_perm with (2 := Hl2).",
                        "VernacExtend",
                        "f080514d8b809a5415bc84fba9df5a481d78d5fa"
                    ]
                },
                {
                    "command": [
                        "apply perm_cons_app.",
                        "VernacExtend",
                        "2a46c86421ed4e2f7f5614ec3d813fd84f62b227"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_incl_inv",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "generalize l2; clear l2; induction l1 as [| a l1 IH]; intros l2.",
                        "VernacExtend",
                        "a85be072e9719b44644c0c086c007a1cf4c28ab8"
                    ]
                },
                {
                    "command": [
                        "intros; exists l2; apply perm_id.",
                        "VernacExtend",
                        "b9edd169fb2c76c9fad3f4dc7b443f3c8842c159"
                    ]
                },
                {
                    "command": [
                        "intros Hu1 Hu2 Hi.",
                        "VernacExtend",
                        "8f787f89e162974c394440331f3dfaf87523e1ca"
                    ]
                },
                {
                    "command": [
                        "assert (H1: In a l2).",
                        "VernacExtend",
                        "b4f54273474855080b2577eb4d1f1dcc78968ee3"
                    ]
                },
                {
                    "command": [
                        "apply Hi; auto with datatypes.",
                        "VernacExtend",
                        "efcb8a5011deedeac5a362e97c57b5b1071f3cda"
                    ]
                },
                {
                    "command": [
                        "case perm_in_inv with (1 := H1).",
                        "VernacExtend",
                        "1ecb6e52ca94589eaffa675e83baae3800c8f20e"
                    ]
                },
                {
                    "command": [
                        "intros l3 Hl3.",
                        "VernacExtend",
                        "73ba65bce66aa7b9cdc47c061d276ab144d10624"
                    ]
                },
                {
                    "command": [
                        "case (IH l3); auto.",
                        "VernacExtend",
                        "6238089a5c11e1e2062ca2f43c4050888d248b45"
                    ]
                },
                {
                    "command": [
                        "apply uniq_cons_inv with a; auto.",
                        "VernacExtend",
                        "5a4b1e85c65f5dd4b4a68e16f02a16418cd83afa"
                    ]
                },
                {
                    "command": [
                        "apply uniq_cons_inv with a; auto.",
                        "VernacExtend",
                        "5a4b1e85c65f5dd4b4a68e16f02a16418cd83afa"
                    ]
                },
                {
                    "command": [
                        "apply uniq_perm with (1 := Hl3); auto.",
                        "VernacExtend",
                        "3209a0937725204c8721ec23039d35287ecf399c"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "assert (H2: In x (a::l3)).",
                        "VernacExtend",
                        "93d467bf30e43875ca8352bb282cdae7bf3abea4"
                    ]
                },
                {
                    "command": [
                        "apply perm_in with (1 := Hl3).",
                        "VernacExtend",
                        "320d90f32bcbf1995a311d8dfa6cc218290d9913"
                    ]
                },
                {
                    "command": [
                        "apply Hi; auto with datatypes.",
                        "VernacExtend",
                        "efcb8a5011deedeac5a362e97c57b5b1071f3cda"
                    ]
                },
                {
                    "command": [
                        "simpl in H2; case H2; intros HH; subst; auto.",
                        "VernacExtend",
                        "2b07e83a15a230bbcf749be51de103347ca89004"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hu1 as [| aa bb HH1 HH2].",
                        "VernacExtend",
                        "62fe296049889f319076582bf6d28184e33bbb25"
                    ]
                },
                {
                    "command": [
                        "case HH1; auto.",
                        "VernacExtend",
                        "2091d7846677ca541a675dd017332221c7337d3a"
                    ]
                },
                {
                    "command": [
                        "intros l4 Hl4.",
                        "VernacExtend",
                        "cecb9f631e57e5fa196c015505e2f403e121b463"
                    ]
                },
                {
                    "command": [
                        "exists l4.",
                        "VernacExtend",
                        "822e274a9d2a887ace3f0447689ecf76af083217"
                    ]
                },
                {
                    "command": [
                        "apply perm_trans with (1 := Hl3).",
                        "VernacExtend",
                        "fc86f227f4d802887684ad9b1f79191c14e95d73"
                    ]
                },
                {
                    "command": [
                        "simpl; apply perm_skip; auto.",
                        "VernacExtend",
                        "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_split",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "generalize n2 l; clear n2 l; induction n1 as [| n1 IH].",
                        "VernacExtend",
                        "aa6081453acce5245334d0b02485ccf1f16322c8"
                    ]
                },
                {
                    "command": [
                        "intros n2 l Hl; exists nil; exists l; auto.",
                        "VernacExtend",
                        "63562d4f30121e3c867fd8057beeeb3582d1fda2"
                    ]
                },
                {
                    "command": [
                        "intros n2 [| a l] H; try discriminate.",
                        "VernacExtend",
                        "c22d45d5dd7e13c028305bc9c1fd9486f978b768"
                    ]
                },
                {
                    "command": [
                        "case (IH n2 l); auto.",
                        "VernacExtend",
                        "f6e4d65fbe13de9a40c53a2a9a37fda7405d8ff3"
                    ]
                },
                {
                    "command": [
                        "intros l1 (l2, (H1, (H2, H3))).",
                        "VernacExtend",
                        "e7ccbdd1a04f28548ea348a17217e3c1bdc3b48f"
                    ]
                },
                {
                    "command": [
                        "exists (a::l1); exists l2; repeat split; subst; simpl; auto.",
                        "VernacExtend",
                        "8037b52610f51173e5151f73d0cce6d2fce936b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_split",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "destruct lk as [| a1 lk].",
                        "VernacExtend",
                        "a5a518a37011ff11f00e9bb4975efd781beed2ae"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "simpl; intros HH; injection HH; clear HH; intros HH.",
                        "VernacExtend",
                        "15c483e19876675371c172cf4454346aa732aa30"
                    ]
                },
                {
                    "command": [
                        "assert (H1: exists k2, exists lk1, exists lk2, lk = (lk1 ++ k2::lk2)%list /\\ length lk1 = length l1 /\\ length lk2 = length l2).",
                        "VernacExtend",
                        "9fec871c3c1423f3fb1ebc69d0ca5b97cb39918b"
                    ]
                },
                {
                    "command": [
                        "generalize l1 HH; clear HH; induction lk as [| a2 lk IH]; clear l1; intros [| b1 l1]; try (intros; discriminate).",
                        "VernacExtend",
                        "2f7c38b12206e0d4836eaf63cb99a472ee6b22f2"
                    ]
                },
                {
                    "command": [
                        "simpl; intros HH; injection HH; clear HH; intros HH.",
                        "VernacExtend",
                        "15c483e19876675371c172cf4454346aa732aa30"
                    ]
                },
                {
                    "command": [
                        "exists a2; exists (@nil _); exists lk; repeat split; auto.",
                        "VernacExtend",
                        "525acf47a0c6d6dddb42f5852432823415616bd9"
                    ]
                },
                {
                    "command": [
                        "simpl; intros HH; injection HH; clear HH; intros HH.",
                        "VernacExtend",
                        "15c483e19876675371c172cf4454346aa732aa30"
                    ]
                },
                {
                    "command": [
                        "case (IH _ HH); auto.",
                        "VernacExtend",
                        "b4b483f2d9f13541e25230cdce549bbcb83e3929"
                    ]
                },
                {
                    "command": [
                        "intros k1 (lk1, (lk2, (H1lk1, (H2lk1, H3lk1)))).",
                        "VernacExtend",
                        "3729b7009e95596ee0c8a5050d0abacbe06c3c20"
                    ]
                },
                {
                    "command": [
                        "exists k1; exists (a2::lk1); exists lk2; simpl; repeat split; auto.",
                        "VernacExtend",
                        "323d258d043780905f6b0059903eef06e43508ed"
                    ]
                },
                {
                    "command": [
                        "rewrite H1lk1; auto.",
                        "VernacExtend",
                        "9f96f664bfa4da0fb658b807d323ad68e6be0a9c"
                    ]
                },
                {
                    "command": [
                        "case H1; intros k2 (lk1, (lk2, (H1lk, (H2lk, H3lk)))).",
                        "VernacExtend",
                        "e4ce658accf4aac7510de45b9fbe356c27a7f47d"
                    ]
                },
                {
                    "command": [
                        "exists a1; exists k2; exists lk1; exists lk2; repeat split; auto.",
                        "VernacExtend",
                        "e6859683cce4db40055e8925233f68ab894c52d4"
                    ]
                },
                {
                    "command": [
                        "rewrite H1lk; auto.",
                        "VernacExtend",
                        "43e2d400d07fae464e94730272570fa56082b1d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_app_inj",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "generalize l2 l3 l4; clear l2 l3 l4; induction l1 as [| x1 l1 IH].",
                        "VernacExtend",
                        "1da889e7cada8ffa57d3f820d00c088e2b3fdfad"
                    ]
                },
                {
                    "command": [
                        "intros l2 [| x3 l3] l4 H1 H2; try discriminate; auto.",
                        "VernacExtend",
                        "e5c7c729a2d150b2eb7de58caeab63c0439d6e41"
                    ]
                },
                {
                    "command": [
                        "intros l2 [| x3 l3] l4 H1 H2; try discriminate.",
                        "VernacExtend",
                        "d762b452f7b82959b7a78e782d45a2cc7564cb0e"
                    ]
                },
                {
                    "command": [
                        "injection H2; intros; subst; auto.",
                        "VernacExtend",
                        "2620ac2850e80c2f632902cf1a2b9a7b2c2581c3"
                    ]
                },
                {
                    "command": [
                        "case (IH l2 l3 l4); auto; intros; subst; auto.",
                        "VernacExtend",
                        "09e179d0bd45207a8a79942e930a0be081efbfca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_case",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "destruct l as [|a l]; simpl; auto.",
                        "VernacExtend",
                        "259dc32710793a36875e2e27db62f0fb055c27b9"
                    ]
                },
                {
                    "command": [
                        "right; intros HH; discriminate.",
                        "VernacExtend",
                        "22446328682ce0e30c1de63877dfe298fec5fce7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bin_0",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "intros n; induction n; auto.",
                        "VernacExtend",
                        "0415e441e567c3d601aa095f6712a5ff387df198"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bin_1",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "1c1533ce0149f2c96ac74cbc2e10bda62f4e7c13"
                    ]
                },
                {
                    "command": [
                        "rewrite bin_0, IH, Plus.plus_comm; auto.",
                        "VernacExtend",
                        "d8d5bb089289b0c0cd3945b479976cde0be49cbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bin_more",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros n; induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "8f055a830406ba7bfd1497a0a5b2fc172309d5bc"
                    ]
                },
                {
                    "command": [
                        "intros m; case m; simpl; auto.",
                        "VernacExtend",
                        "97780f9803eda6eefeb6a3302f6b0c72158ff0cf"
                    ]
                },
                {
                    "command": [
                        "intros H'; inversion H'; auto.",
                        "VernacExtend",
                        "45f67d385b09c783aaadc9044602b5adb2cd748d"
                    ]
                },
                {
                    "command": [
                        "intros m; case m; simpl; auto.",
                        "VernacExtend",
                        "97780f9803eda6eefeb6a3302f6b0c72158ff0cf"
                    ]
                },
                {
                    "command": [
                        "intros H'0; contradict H'0; auto with arith.",
                        "VernacExtend",
                        "a1af53c9646f66e9e1bb70de3aa2eaa5bc2cf7aa"
                    ]
                },
                {
                    "command": [
                        "intros n1 H'0; rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "4c685e0219bcec4d6de89d5e3d517f7c8e8b3656"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bin_nn",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros n; induction n as [| n IH]; intros; simpl; auto.",
                        "VernacExtend",
                        "fca473c99723c237c91d83b09ade8929883fa3ca"
                    ]
                },
                {
                    "command": [
                        "rewrite (bin_more n (S n)); auto.",
                        "VernacExtend",
                        "f57fc71ab0e6dfc8d037715650126a8bf17ae293"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bin_def",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "b2PropT",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "exact (refl_equal true).",
                        "VernacExtend",
                        "4c24d0cac71951247a4671c9a67fffb7d99a300c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbP",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "case b1; case b2; intuition.",
                        "VernacExtend",
                        "71b42821d48b37bfea1127219fe0671f31a12b3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div2_double_p",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-plus_n_Sm; simpl in IH |- *.",
                        "VernacExtend",
                        "5d1d5035c7b819886bb17a03cce19b7451298428"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div2_prop",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "assert (F1: forall n, (n + n * n = 2 * n + n * (n - 1))%nat).",
                        "VernacExtend",
                        "0832e2130fdc611a9d81fe6a5b939ff63cda9e51"
                    ]
                },
                {
                    "command": [
                        "intros [|n1]; simpl; auto.",
                        "VernacExtend",
                        "b9eed64bb61f2d77afe28dbeb2a63de03865d079"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!Minus.minus_n_O; ring.",
                        "VernacExtend",
                        "b9b54c5c2df641cc1cb724b916dbccc1d89f9066"
                    ]
                },
                {
                    "command": [
                        "induction n; simpl; auto.",
                        "VernacExtend",
                        "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
                    ]
                },
                {
                    "command": [
                        "rewrite <-plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Minus.minus_n_O.",
                        "VernacExtend",
                        "02fbf6ca9654335551fa1fe5d22988d676c836eb"
                    ]
                },
                {
                    "command": [
                        "rewrite F1, div2_double_p.",
                        "VernacExtend",
                        "77aae2dd6f33db48c39d802cd2e167b67fb86351"
                    ]
                },
                {
                    "command": [
                        "rewrite !Plus.plus_assoc; replace (n + n) with (2 * n); try ring.",
                        "VernacExtend",
                        "0727402810c7a2fdae31c4029307a37ae914240f"
                    ]
                },
                {
                    "command": [
                        "rewrite div2_double_p, <-(Mult.mult_comm (n.+1)), <-IHn.",
                        "VernacExtend",
                        "453d19107dc02bbb5aa584109406d0c0861ad06a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_minus_le",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "assert (F1: (forall n m, n <= m -> exists k, m = k + n)%nat).",
                        "VernacExtend",
                        "eb888abf6ef3e4781180c6e148b58b30f49f4cec"
                    ]
                },
                {
                    "command": [
                        "intros n1 m1 H; elim H; auto.",
                        "VernacExtend",
                        "132e290c4658cf580336ab9fec2fcea9731ddbde"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; auto.",
                        "VernacExtend",
                        "815a7dfd5eb81dc69151fb22cee9f66c11e56534"
                    ]
                },
                {
                    "command": [
                        "intros m2 _ (k, Hk); rewrite Hk; exists k.+1; auto.",
                        "VernacExtend",
                        "eea844cb637a692215909f078263cb6d078bfdc4"
                    ]
                },
                {
                    "command": [
                        "intros H; case (F1 _ _ H).",
                        "VernacExtend",
                        "f62cde89853c84a2ce911f3807e8980eb28abcaa"
                    ]
                },
                {
                    "command": [
                        "intros k Hk; subst.",
                        "VernacExtend",
                        "8aaee8726b6b7e83ba74a2dd126da0cd14d5bb5d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Plus.plus_comm k), Minus.minus_plus.",
                        "VernacExtend",
                        "512a808c3aeb046b67acf7d2689e8a25bf18e690"
                    ]
                },
                {
                    "command": [
                        "rewrite (Plus.plus_comm n), Minus.minus_plus; auto.",
                        "VernacExtend",
                        "ccbf261aa8a95b72980d31eee8187f2fbaceca7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus0_le",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "generalize n; clear n; induction m as [| m IH]; auto.",
                        "VernacExtend",
                        "c705ae2f69eaab239c62448be295275e2b134b72"
                    ]
                },
                {
                    "command": [
                        "intros [|n]; simpl; auto with arith.",
                        "VernacExtend",
                        "7f42d05407be06dcaaf236a278af160e7a0936c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_natP",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "generalize n; clear n; induction m as [| m IH]; intros [| n]; simpl; try constructor; try (intros; discriminate).",
                        "VernacExtend",
                        "cd8ccc2c8adb511c98023cff7613b1aebd7d7a44"
                    ]
                },
                {
                    "command": [
                        "(case (IH n); clear m n IH); [intros m | intros m n H]; constructor; intros H1; case H; injection H1; auto.",
                        "VernacExtend",
                        "ace2b3ff2be115c7d6fa13aba972312020633ab3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}