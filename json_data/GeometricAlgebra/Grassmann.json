{
    "filename": "Grassmann.v",
    "coq_project": "GeometricAlgebra",
    "vernac_cmds": [
        [
            "Require Import ArithRing Div2 Bool Even Setoid Min List Aux Field VectorSpace Kn.",
            "VernacRequire",
            "5dd913b8016934bb628438d5dd8a6c87c3970bac"
        ],
        [
            "Section Vect.",
            "VernacBeginSection",
            "604c0d0ebb98f6315d6d2cfa8d4551abc7b44ecc"
        ],
        [
            "Variable p : params.",
            "VernacAssumption",
            "72905ffbdc7f8776e009a425ca95b4a55c9f9427"
        ],
        [
            "Hypothesis Hp : fparamsProp p.",
            "VernacAssumption",
            "6b9cc2813e9902265fa4ac9b9eec1bf0094b2503"
        ],
        [
            "Delimit Scope g_scope with g.",
            "VernacDelimiters",
            "bd2220ee090750b35f878e1b7d2dbb0851526e75"
        ],
        [
            "Open Scope g_scope.",
            "VernacOpenCloseScope",
            "4c7f595db8229064c29f719408bcd90c97e81628"
        ],
        [
            "Open Scope vector_scope.",
            "VernacOpenCloseScope",
            "354c4804e43716fe91c23b355f418525d1f104ed"
        ],
        [
            "Definition K1 := K.",
            "VernacDefinition",
            "fbe381da1c4f51a9b922b1f728932d5f51ea5b50"
        ],
        [
            "Notation \"'K'\" := (K1 p) : g_scope.",
            "VernacNotation",
            "9539240b977b61f4c8d25b07e5d82016d8f55308"
        ],
        [
            "Notation \"'kn'\" := (kn p).",
            "VernacNotation",
            "19eb9f2bd5f444913db0a11e200157b85700c20c"
        ],
        [
            "Notation projk := (proj p).",
            "VernacSyntacticDefinition",
            "f7d715859aa103e66762a23d6aec74303a9a81cd"
        ],
        [
            "Ltac Kfold n := change (Kn.add p n) with (addE (Kn.vn_eparams p n)); change (Kn.scal p n) with (scalE (Kn.vn_eparams p n)); change (Kn.genk p n 0%f) with (E0 (Kn.vn_eparams p n)).",
            "VernacExtend",
            "a893ff45c42b4abc9ea06ef5d7fe5902286d9da6"
        ],
        [
            "Fixpoint vect (n: nat): Set := match n with O => K | S n1 => (vect n1 * vect n1)%type end.",
            "VernacFixpoint",
            "6d1da947609061c323014773416dcaae7f8c6063"
        ],
        [
            "Fixpoint eq (n : nat) : vect n -> vect n -> bool := match n return (vect n -> vect n -> bool) with | 0%nat => fun a b => (a ?= b)%f | S n1 => fun l1 l2 => let (l3, l5) := l1 in let (l4, l6) := l2 in if eq n1 l3 l4 then eq n1 l5 l6 else false end.",
            "VernacFixpoint",
            "e9aba01ed47bef2b6db651456914e195e9c40dc8"
        ],
        [
            "Fixpoint add (n : nat) : vect n -> vect n -> vect n := match n return (vect n -> vect n -> vect n) with | 0%nat => fun a b => (a + b)%f | S n1 => fun l1 l2 => let (l3, l5) := l1 in let (l4, l6) := l2 in (add n1 l3 l4, add n1 l5 l6) end.",
            "VernacFixpoint",
            "ae13d7e727c3a08376b8578f0ec2b17a04e66f01"
        ],
        [
            "Fixpoint genk (n: nat) (k: K) {struct n}: (vect n) := match n return vect n with 0%nat => k | n1.+1 => (genk n1 0%f, genk n1 k) end.",
            "VernacFixpoint",
            "01c2ed2d5315e4b5bc3544abc5d2c553c1aa60e3"
        ],
        [
            "Notation \" [ k ] \" := (genk _ k%f) (at level 9): g_scope.",
            "VernacNotation",
            "1462d4448f34a787a3b30c84aab6c5147588acd0"
        ],
        [
            "Arguments genk _ _%field_scope.",
            "VernacArguments",
            "4bc52d8c54c3fc13357f957ab25978be9d2b1980"
        ],
        [
            "Fixpoint scal (n : nat) (k: K) {struct n}: vect n -> vect n := match n return (vect n -> vect n) with | 0%nat => fun a => (k * a)%f | S n1 => fun l1 => let (l2, l3) := l1 in (scal n1 k l2, scal n1 k l3) end.",
            "VernacFixpoint",
            "4dc7adedfb318be58c135c366351f997a47591ce"
        ],
        [
            "Canonical Structure vn_eparams (n: nat) := Build_eparams (vect n) K [0] (eq n) (add n) (scal n).",
            "VernacDefinition",
            "c5d0b49ac3089ef28e508ed3cee23dab8b40844a"
        ],
        [
            "Definition fn n : vparamsProp (vn_eparams n).",
            "VernacDefinition",
            "3bd32187d373a4a9ca6fe643e649a1781cfac60f"
        ],
        [
            "apply Build_vparamsProp; auto.",
            "VernacExtend",
            "47d6b1735c536f02dfa0f4fcbb52568aef13298a"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x y; apply eqK_dec; auto.",
            "VernacExtend",
            "fc10c8b252785c68baa7adb7bf31d0927b1016e7"
        ],
        [
            "intros (l3,l5) (l4, l6); simpl in IH; generalize (IH l3 l4); case eq.",
            "VernacExtend",
            "381fa9cc1639709e713657fd1fa2dc768227556e"
        ],
        [
            "generalize (IH l5 l6); case eq; intros HH1 HH2; subst; auto.",
            "VernacExtend",
            "29b3fa748b5017dc7597b8f35f7c5aa4ba6efe79"
        ],
        [
            "intros HH3; case HH1; injection HH3; auto.",
            "VernacExtend",
            "c37bd97886f19790e4fad393c7efc4da535e2c57"
        ],
        [
            "intros HH1 HH2; case HH1; injection HH2; auto.",
            "VernacExtend",
            "bec6a449510f5c21ad2f744dde29f7d900ebf7ef"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x y z; rewrite (addK_assoc _ Hp); auto.",
            "VernacExtend",
            "82bfe03c64ed85c84c3f57edcc8bcc5d52f1fb85"
        ],
        [
            "intros (l3,l5) (l4, l6) (l7, l8); simpl in IH; rewrite !IH; auto.",
            "VernacExtend",
            "9f08561aff6e61ca5e6554966dd5a42c4f03b2f9"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x y; rewrite (addK_com _ Hp); auto.",
            "VernacExtend",
            "7988a5c9a41ce1d1b3e8cf72ef862773a66beec7"
        ],
        [
            "intros (l3,l5) (l4, l6); simpl in IH; rewrite (IH l3), (IH l5); auto.",
            "VernacExtend",
            "f4fc75d8baf00ad89cbd593d6686fb2e51f3133e"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x; rewrite (addK0l _ Hp); auto.",
            "VernacExtend",
            "ca2a43f99664e6d4dc3f406d7f70e520cea5ef63"
        ],
        [
            "intros (l1,l2); simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "0021f42ab35f32252e330ae90d66ca5d2c4e1688"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x; rewrite (multK0l _ Hp); auto.",
            "VernacExtend",
            "ed7bd33e6cd7cb84f76bdd0f11500eb2e7ff3192"
        ],
        [
            "intros (l1, l2); simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "0021f42ab35f32252e330ae90d66ca5d2c4e1688"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x; rewrite (multK1l _ Hp); auto.",
            "VernacExtend",
            "896e1eec573f11e7627d4c0aa0ba9fe7c40a59ed"
        ],
        [
            "intros (l1, l2); simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "0021f42ab35f32252e330ae90d66ca5d2c4e1688"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros k x y; rewrite (add_multKl _ Hp); auto.",
            "VernacExtend",
            "96ec9df36468aa9d328294d6ea76c4d40ac77a79"
        ],
        [
            "intros k1 k2 (l1, l2); simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "7eb47e671986760bb477c4ccaf4ad83ab0edea59"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros k x y; rewrite (add_multKr _ Hp); auto.",
            "VernacExtend",
            "4e6f05fd11aff4ed767386312199f1256e4e938f"
        ],
        [
            "intros k (l1, l3) (l2, l4); simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "26c0776635bfe594fb4fa55f1cc37589286347c3"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros x y z; rewrite (multK_assoc _ Hp); auto.",
            "VernacExtend",
            "39c350563c85b06f269543198b6858785b8479e3"
        ],
        [
            "intros k1 k2 (l1, l2); simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "7eb47e671986760bb477c4ccaf4ad83ab0edea59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve fn.",
            "VernacHints",
            "a6cfc170f1b52663bc369de00642aed3ca28afe3"
        ],
        [
            "Notation \"1\" := ([1]): g_scope.",
            "VernacNotation",
            "240ad7f050752aaec87b1e7d1df1db19d7e33e2c"
        ],
        [
            "Ltac Vfold n := change (add n) with (addE (vn_eparams n)); change (scal n) with (scalE (vn_eparams n)); change (genk n 0) with (E0 (vn_eparams n)).",
            "VernacExtend",
            "e7f3a6136ecf06e5c252a4335a44822f62afab7b"
        ],
        [
            "Hint Rewrite multK0l multK0r oppK0 addK0l addK0r addE0r addE0l scalE0r scalE0l: GRm0.",
            "VernacExtend",
            "67e653a6d83dcd0a5bc2139dc8a87ff822eb857d"
        ],
        [
            "Ltac Grm0 := autorewrite with GRm0; auto.",
            "VernacExtend",
            "a7f0ba11b9fcf2bc344fef83ad5f8654d91e4e4a"
        ],
        [
            "Fixpoint sub (n : nat) : vect n -> vect n -> vect n := match n return (vect n -> vect n -> vect n) with | 0%nat => fun a b => (a + (- b))%f | S n1 => fun v1 v2 => let (x1, y1) := v1 in let (x2, y2) := v2 in (sub n1 x1 x2, sub n1 y1 y2) end.",
            "VernacFixpoint",
            "326cfd8513046937f933575f4c77bce65ad607cf"
        ],
        [
            "Notation \"x - y\" := (sub _ x y): g_scope.",
            "VernacNotation",
            "ca3a2f7899c84fd5f820915eb5a94b931ca77a57"
        ],
        [
            "Lemma sub_add n (v1 v2: vect n) : v1 - v2 = v1 + (-(1)).* v2.",
            "VernacStartTheoremProof",
            "22d323e8a1b0ed4a765c6c6fd0f5e6d1a2768380"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite <-opp_multKl, multK1l; auto.",
            "VernacExtend",
            "41c355f31dd54eb97312b1e1e7e604a9d1a31b7e"
        ],
        [
            "destruct v1; destruct v2; rewrite !IH; auto.",
            "VernacExtend",
            "e370219ead64d614776f2bee0aaf89e324f64f87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub0l n (v: vect n) : 0 - v = (-(1)) .* v.",
            "VernacStartTheoremProof",
            "b149eb72cb4d8b277f1ae5c20863b7029a17ad46"
        ],
        [
            "rewrite sub_add; Grm0.",
            "VernacExtend",
            "ebeb08b5429c6ddd14871ec7a10b76a78f7653c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite sub0l: GRm0.",
            "VernacExtend",
            "25526ded083803f164df81d340b6dffe7cc193a8"
        ],
        [
            "Lemma sub0r n (v: vect n) : v - 0 = v.",
            "VernacStartTheoremProof",
            "3206752fa20cf57810aa374d63f1bd4d8800f563"
        ],
        [
            "rewrite sub_add; Grm0.",
            "VernacExtend",
            "ebeb08b5429c6ddd14871ec7a10b76a78f7653c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite sub0r: GRm0.",
            "VernacExtend",
            "198c29e6b04ed9d98c9bed3215625529c13c94f2"
        ],
        [
            "Lemma injk n k1 k2 : [k1] = [k2] :> vect n -> k1 = k2.",
            "VernacStartTheoremProof",
            "bd4dec1137050163ef709847f174f9ead44ec03b"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros HH; injection HH; auto.",
            "VernacExtend",
            "dbda8725995ae8d22bd699d451bdde89f4128fd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma oppk n k : [-k] = (-(1)).* [k] :> vect n.",
            "VernacStartTheoremProof",
            "6382bc4969204aefa7ddb7a02aad9fe1df555a35"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite <- opp_multKl, multK1l; auto.",
            "VernacExtend",
            "41c355f31dd54eb97312b1e1e7e604a9d1a31b7e"
        ],
        [
            "rewrite scalE0r, IH; auto.",
            "VernacExtend",
            "8dc69d98265d53f3a5c626b023c63c4da46932c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma genkE n k : [k] = k .* 1 :> vect n.",
            "VernacStartTheoremProof",
            "616d867044b219b060d0c8d6c4cd8dae109cb6ae"
        ],
        [
            "induction n as [| n IH]; simpl; Krm1; try Vfold n.",
            "VernacExtend",
            "7d10351aa914988c7814e46083186f766ad4023b"
        ],
        [
            "rewrite IH, scalE0r; auto.",
            "VernacExtend",
            "5c38ecbaa948c13bc1f443f82a6e403969d41b91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deck0 n (x: vect n): x = 0 \\/ x <> 0.",
            "VernacStartTheoremProof",
            "88829ddc27184fe87e92002760065c6f0e7d8132"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "generalize (eqK_dec _ Hp x 0%f).",
            "VernacExtend",
            "417d98a08d95d737aa59bca29dcd2b311864011c"
        ],
        [
            "case eqK; auto.",
            "VernacExtend",
            "0fb3d00d8c1372f144461e06fa2edad33449b45d"
        ],
        [
            "destruct x as (x1, x2).",
            "VernacExtend",
            "c35cecb7dbd0c68be9bc57c43b6348d79730e966"
        ],
        [
            "case (IH x1); auto; intros H1; subst.",
            "VernacExtend",
            "20c9723fea0dadafb8a91cc96c2a3222ba5ab059"
        ],
        [
            "case (IH x2); auto; intros H1; subst; auto.",
            "VernacExtend",
            "3cf5878425818d7e5687633ea3a9ef39d1fe3280"
        ],
        [
            "right; intro HH; case H1; injection HH; auto.",
            "VernacExtend",
            "b03bfb7900c31a10f9b3a910bc87a374365e9c7c"
        ],
        [
            "right; intro HH; case H1; injection HH; auto.",
            "VernacExtend",
            "b03bfb7900c31a10f9b3a910bc87a374365e9c7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gen (n: nat) (p: nat) {struct n} : vect n := match n return vect n with 0 => 1%f | S n1 => match p with 0 => (genk n1 1%f, genk n1 0%f) | S p1 => (genk n1 0%f, gen n1 p1) end end.",
            "VernacFixpoint",
            "a61084bf8cefc9e45f37fb33c0cd859d745a6a3a"
        ],
        [
            "Notation \"''e_' p\" := (gen _ p) (at level 8, format \"''e_' p\"): g_scope.",
            "VernacNotation",
            "8c7e7b0ecde10505d4ff4be775914fe1e86fcc52"
        ],
        [
            "Lemma inj_e n p1 p2 : p1 < n -> p2 < n -> 'e_p1 = 'e_p2 :> vect n -> p1 = p2.",
            "VernacStartTheoremProof",
            "b527f443b0e376dc34abe905a7c656f2b4c5b92e"
        ],
        [
            "generalize p1 p2; clear p1 p2.",
            "VernacExtend",
            "b3c68aa09651c772af09bc49df253819b8b149d8"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "intros p1 p2 HH; contradict HH; auto with arith.",
            "VernacExtend",
            "c45a6ce68c3fa71855e1a37d0642d59a18d7f913"
        ],
        [
            "intros [|p1]; intros [|p2]; simpl; auto; try (intros _ _ HH; injection HH; intros _ HH1; case (one_diff_zero _ Hp); apply (injk n); auto).",
            "VernacExtend",
            "25bf6f80b4b498c91788796d685949f7136973e3"
        ],
        [
            "intros H1 H2 HH; injection HH; intros HH1.",
            "VernacExtend",
            "0716ec55571cfca95d44836fee141e6a1bc95649"
        ],
        [
            "rewrite (IH p1 p2); auto with arith.",
            "VernacExtend",
            "6cd2b2a7e32932f451de76e0aeebc3b166905610"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint const (n: nat): (vect n) -> K := match n return vect n -> K with | O => fun a => a | S n1 => fun l => let (l1,l2) := l in const n1 l2 end.",
            "VernacFixpoint",
            "b99b445740c7a3a7bba85910881d8603dafa5efd"
        ],
        [
            "Notation \"'C[ x ]\" := (const _ x).",
            "VernacNotation",
            "907d7e363abcc91d7c41ad17794e2f5952c85d28"
        ],
        [
            "Lemma const0 n : 'C[ 0: vect n ] = 0%f.",
            "VernacStartTheoremProof",
            "624cb4212808fff106a30a342e2852307b68cfe1"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite const0: GRm0.",
            "VernacExtend",
            "b26133fef1e3fbc88ebc7a1b7b137f762512d2f5"
        ],
        [
            "Lemma constk n k : 'C[[k]: vect n] = k.",
            "VernacStartTheoremProof",
            "c2dca6175bd7bd867771881e5f3d17e6b9dbb86b"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const_scal n k (x: vect n): 'C[k .* x] = (k * 'C[x])%f.",
            "VernacStartTheoremProof",
            "384423710723437dcef5f2d853af7bc3773c72d2"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; auto.",
            "VernacExtend",
            "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
        ],
        [
            "destruct x; rewrite IH; auto.",
            "VernacExtend",
            "cfc6663f1c7be2df3fba3b4e0cba871283f81c80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const_add n (x1 x2: vect n): 'C[x1 + x2] = ('C[x1] + 'C[x2])%f.",
            "VernacStartTheoremProof",
            "b6f6f3c3ce69a9171b9232602b8c4a47856e21a0"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; auto.",
            "VernacExtend",
            "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
        ],
        [
            "destruct x1; destruct x2; rewrite IH; auto.",
            "VernacExtend",
            "1b1b9fd9fcbb2e080de6f44019392a9d10429ba7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint eq0 (n : nat) : vect n -> bool := match n return (vect n -> bool) with | 0%nat => fun a => (a ?= 0)%f | S n1 => fun l1 => let (l2, l3) := l1 in if eq0 n1 l2 then eq0 n1 l3 else false end.",
            "VernacFixpoint",
            "d06408e5c6d51b750744d1f81f5e8f0c752cfd63"
        ],
        [
            "Notation \"x ?= 0\" := (eq0 _ x) (at level 70): g_scope.",
            "VernacNotation",
            "aadf08a66bcf0ec835795896f11905cde1c7e7c3"
        ],
        [
            "Lemma eq0_dec n (x: vect n) : if x ?= 0 then x = 0 else x <> 0.",
            "VernacStartTheoremProof",
            "4626229a02242c00fdc493e8de7872fe000a77c0"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "apply eqK_dec; auto.",
            "VernacExtend",
            "e617ba3f942da49f8312e076282d114c7f7679e6"
        ],
        [
            "destruct x as [l1 l2]; generalize (IH l1); case eq0.",
            "VernacExtend",
            "4afc54af1f34d918004343da6be636c4528e6aa4"
        ],
        [
            "generalize (IH l2); case eq0; intros HH1 HH2; subst; auto.",
            "VernacExtend",
            "e5443bca292c033d97783cee9b7c0d288c635b1d"
        ],
        [
            "intros HH3; case HH1; injection HH3; auto.",
            "VernacExtend",
            "c37bd97886f19790e4fad393c7efc4da535e2c57"
        ],
        [
            "intros HH1 HH2; case HH1; injection HH2; auto.",
            "VernacExtend",
            "bec6a449510f5c21ad2f744dde29f7d900ebf7ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq0_spec n (x: vect n) : eq_Spec x 0 (x ?= 0).",
            "VernacStartTheoremProof",
            "540ec07e3df11697b6c35e6f98b173d00b430e1a"
        ],
        [
            "generalize (eq0_dec n x); case eq0; intros; constructor; auto.",
            "VernacExtend",
            "5d200d91cd55b1334afff02468efc54a8aa97b85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq0I n : ((0: vect n) ?= 0) = true.",
            "VernacStartTheoremProof",
            "491b9e163ac4df8bb7379840edf17a6b160f5f78"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "case eqK_spec; auto.",
            "VernacExtend",
            "94ee2ec7970fc2e17663d54a51cfe9eee8c5f65b"
        ],
        [
            "simpl in IH; rewrite IH; auto.",
            "VernacExtend",
            "e1815ece4e1854e7221a579ebb1f24ffc3908dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma en_def n : 'e_n = 1 :> vect n.",
            "VernacStartTheoremProof",
            "25a8af49e6e38badf711203d499df900ff0d9014"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addk n k1 k2 : [k1] + [k2] = [k1 + k2] :> vect n.",
            "VernacStartTheoremProof",
            "86e38282f86c34a8c5e5d1905bbb9a2239e66786"
        ],
        [
            "induction n as [|n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "rewrite !IH; Vrm0.",
            "VernacExtend",
            "0e76d327773cb00d1b1dfbe77004411c5ec93593"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scal_integral n k (x: vect n) : k .* x = 0 -> k = 0%f \\/ x = 0.",
            "VernacStartTheoremProof",
            "2001d2a1352791bec4ecf579de86580491af4c89"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros; apply (multK_integral _ Hp k); auto.",
            "VernacExtend",
            "c86689fe6257d93a84e1a7795769733ef9e6b142"
        ],
        [
            "destruct x; intros HH; injection HH; intros HH1 HH2.",
            "VernacExtend",
            "e9ba356128879d42ec0ad37265893e5083bf3734"
        ],
        [
            "case (IH _ _ HH1); case (IH _ _ HH2); auto.",
            "VernacExtend",
            "b25d32fad6c61c78e24e90679098ccc2c445255d"
        ],
        [
            "intros; right; apply f_equal2 with (f := @pair (vect n) (vect n)); auto.",
            "VernacExtend",
            "76e562f12de7037f0adc265b23886506da2634ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalk n k1 k2 : k1 .* [k2] = [k1 * k2] :> vect n.",
            "VernacStartTheoremProof",
            "5f66cc7989a4195fd7bdbaf92b5a65cf1e200162"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "generalize IH; Vfold n; clear IH; intros IH.",
            "VernacExtend",
            "3073da5141bfcf633dbcec314a99f40a2a1a0aed"
        ],
        [
            "rewrite scalE0r, IH; auto.",
            "VernacExtend",
            "8dc69d98265d53f3a5c626b023c63c4da46932c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint hom (n k : nat) {struct n} : vect n -> bool := match n return (vect n -> bool) with | 0%nat => fun a => match k with O => true | S _ => a ?= 0 end | S n1 => fun l1 => let (l2, l3) := l1 in (match k with O => l2 ?= 0 | S k1 => hom n1 k1 l2 end) && hom n1 k l3 end.",
            "VernacFixpoint",
            "34be15b1956f63d1f64656516703aec6343c9bfa"
        ],
        [
            "Lemma homk0 n k : hom n k 0.",
            "VernacStartTheoremProof",
            "f938530d6cf0bd5757175ef9142d591472869b6a"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [|k]; auto; rewrite eqKI; auto.",
            "VernacExtend",
            "b6011181808cef110d9b6b418e04456e3d4bec72"
        ],
        [
            "intros [|k]; auto.",
            "VernacExtend",
            "dd9aa8cc98c579167047f915196ade2b4fbb6886"
        ],
        [
            "rewrite eq0I; simpl; auto.",
            "VernacExtend",
            "8a00ea89e20ce8b770879d34f90d4171de0be067"
        ],
        [
            "rewrite !IH; auto.",
            "VernacExtend",
            "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve homk0.",
            "VernacHints",
            "4097920a319971ef40f34cba7f7dbfdc8a4bf263"
        ],
        [
            "Lemma hom0K n k : hom n 0 [k].",
            "VernacStartTheoremProof",
            "e51df55ddd5d9cee38cef14e0f31dcf39f5e74cc"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "case eq0_spec; auto.",
            "VernacExtend",
            "8047ccd08900b8ae8a4ef42ac6f6246fbd393936"
        ],
        [
            "intros HH; case HH; auto.",
            "VernacExtend",
            "a97474b3a6d037a220684ae5bfeedc33f9346833"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve hom0K.",
            "VernacHints",
            "d249c64743817bbe494a5ba3f95078ecab0abc6f"
        ],
        [
            "Lemma const_hom n k x : hom n k x -> 0 < k -> 'C[x] = 0%f.",
            "VernacStartTheoremProof",
            "07e6e0178870bc9ade41f385273b7732502f7617"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [|n IH]; intros [|k]; simpl; auto.",
            "VernacExtend",
            "e3ffd9d113a71e413e62090260dec32013f0f44e"
        ],
        [
            "intros _ H; contradict H; auto with arith.",
            "VernacExtend",
            "32390d151bd97529490862dbb2dcb1d97af3cc90"
        ],
        [
            "case eqK_spec; auto; intros; discriminate.",
            "VernacExtend",
            "7b3395b0a6bb1c96dd79c1b95950f09ecbfa52f0"
        ],
        [
            "intros _ H; contradict H; auto with arith.",
            "VernacExtend",
            "32390d151bd97529490862dbb2dcb1d97af3cc90"
        ],
        [
            "destruct x; rewrite andbP; intros (H1,H2) _.",
            "VernacExtend",
            "eb50a7e67081baa1327e057256f400455028f78f"
        ],
        [
            "apply (IH _ k.+1); auto with arith.",
            "VernacExtend",
            "37b32227697a327d6946d8dd9af13d168a48e2d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom0E n (x: vect n) : hom n 0 x -> x = ['C[x]].",
            "VernacStartTheoremProof",
            "1293eccaf58e2951103ba3c02257677c16cc7db7"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x; case eq0_spec; try (intros; discriminate).",
            "VernacExtend",
            "e2900ca37a48325201096d254c286c218613a924"
        ],
        [
            "intros H H2; rewrite H, <-IH; auto.",
            "VernacExtend",
            "2f1a533c133731a05a1bc3e61391bb163f833fce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom1e n i : i < n -> hom n 1 'e_i.",
            "VernacStartTheoremProof",
            "2ac37158bbf9bfa605dbdb17826ef8044b70de4d"
        ],
        [
            "generalize i; clear i.",
            "VernacExtend",
            "208b471d15be521271abdaf4ee90e51a9a779dca"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros k HH; contradict HH; auto with arith.",
            "VernacExtend",
            "c20d59009a02e389fe024409d4267ecee5629308"
        ],
        [
            "intros [|k]; simpl; rewrite hom0K; intros HH.",
            "VernacExtend",
            "0a7daf4563845b3c81e9a3737c9e0b410c97132f"
        ],
        [
            "apply homk0.",
            "VernacExtend",
            "497b8c244c32adb3f2fde3d4c6b33c8565655a80"
        ],
        [
            "apply IH; auto with arith.",
            "VernacExtend",
            "b5201a12b405bfa799f8cf16c59b7f895e731d0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homE n k1 k2 (x: vect n) : hom n k1 x -> hom n k2 x -> k1 = k2 \\/ x = 0.",
            "VernacStartTheoremProof",
            "030853efa2ea33ace5298d34db50528df4961906"
        ],
        [
            "assert (aux: forall n k1 k2, hom n k1.+1 [k2] -> k2 = 0%f).",
            "VernacExtend",
            "a4b07d9ecdd273f612d4318682389a456bd5cbd4"
        ],
        [
            "intros n1; elim n1; simpl; auto; clear n1.",
            "VernacExtend",
            "644fd2f0bb4b453d0efbd94e407d9f063d942095"
        ],
        [
            "intros _ k4; case eqK_spec; auto; intros; discriminate.",
            "VernacExtend",
            "32a69cd1d9d72b3f26165569cabe57eb5cc30182"
        ],
        [
            "intros n1 IH k3 k4.",
            "VernacExtend",
            "7d9a9c6cf34a14904e34fc040251b57e73fcc252"
        ],
        [
            "rewrite homk0; intros HH; apply (IH _ _ HH).",
            "VernacExtend",
            "591f21ffcec189f970798503f1c48ad9258c0c9e"
        ],
        [
            "generalize k1 k2 x; clear k1 k2 x.",
            "VernacExtend",
            "efdb82fed48a1cb7005e85b9e8dcc1a31536adce"
        ],
        [
            "elim n; simpl; auto; clear n.",
            "VernacExtend",
            "f56d79fa790257818a6ccebaaa6d291ecb3c5520"
        ],
        [
            "intros [|k1] [|k2]; auto; try (intros x; case eqK_spec; auto; intros; discriminate).",
            "VernacExtend",
            "f66c2903b07a44b27062a41a45c90cd7a8f913ef"
        ],
        [
            "intros n IH [|k1] [|k2] (x1, x2); auto.",
            "VernacExtend",
            "1f3640d87695865c5e92196cd32b3a0582a33227"
        ],
        [
            "case eq0_spec; try (intros; discriminate).",
            "VernacExtend",
            "b2e2482cd85ea7af5b7e0c3adecc9660d813518f"
        ],
        [
            "rewrite !andbP; intros H (_,H1) (_,H2).",
            "VernacExtend",
            "dfe3c42bbb7e424e9ba9666af6ff7ebb1a1da310"
        ],
        [
            "case (IH _ _ _ H1 H2); intros; subst; auto.",
            "VernacExtend",
            "a30aaea6d08bfd3737c7162e806bfa7b42f04930"
        ],
        [
            "case eq0_spec; try (intros; discriminate).",
            "VernacExtend",
            "b2e2482cd85ea7af5b7e0c3adecc9660d813518f"
        ],
        [
            "rewrite !andbP; intros H (_,H1) (_,H2).",
            "VernacExtend",
            "dfe3c42bbb7e424e9ba9666af6ff7ebb1a1da310"
        ],
        [
            "case (IH _ _ _ H1 H2); intros; subst; auto.",
            "VernacExtend",
            "a30aaea6d08bfd3737c7162e806bfa7b42f04930"
        ],
        [
            "rewrite !andbP; intros (H1,H2) (H3,H4).",
            "VernacExtend",
            "dcec71b7239743ae41890b8f144ee893474415d0"
        ],
        [
            "case (IH _ _ _ H1 H3); intros; subst; auto.",
            "VernacExtend",
            "d24cbbec74d809f3830f7a42f05188920a4c3d2f"
        ],
        [
            "case (IH _ _ _ H2 H4); intros; subst; auto.",
            "VernacExtend",
            "92aae91680915f7b0e7315b6c47257baaaa9e622"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_lt n k v : n < k -> hom n k v -> v = 0.",
            "VernacStartTheoremProof",
            "f70d56bc244d4c5e57c74b994108f0e4c9e59779"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; intros [|k]; simpl; auto; try (intros HH; contradict HH; auto with arith; fail).",
            "VernacExtend",
            "e3cb1ba55c11a331f1a22e7e06c61e6e362b1c92"
        ],
        [
            "case eqK_spec; auto; intros; discriminate.",
            "VernacExtend",
            "7b3395b0a6bb1c96dd79c1b95950f09ecbfa52f0"
        ],
        [
            "destruct v as [x y]; intros H1; rewrite andbP; intros (H2, H3).",
            "VernacExtend",
            "20590f8d9a06c6a2d275b4f81b735dae7afbe89d"
        ],
        [
            "rewrite (IH x k), (IH y k.+1); auto with arith.",
            "VernacExtend",
            "af57129391526b56d8f0d405654fbfb20bfc4408"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_hom n k (x y: vect n) : hom n k x -> hom n k y -> hom n k (x + y).",
            "VernacStartTheoremProof",
            "4d9e3604dc6336d8bf4483e88d7a89b9deaa315a"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; try (Vfold n).",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros k; case k; auto.",
            "VernacExtend",
            "d3b2159c2aa8a1793895c3265cc35e1bde38442d"
        ],
        [
            "intros _; case eqK_spec; auto; intros Hx HH; try discriminate HH.",
            "VernacExtend",
            "3cc09eb337f9b5a5bf8fcdee5d311b5f723eba49"
        ],
        [
            "case eqK_spec; auto; intros Hy HH1; try discriminate HH1.",
            "VernacExtend",
            "6088d338328616cf5b2a00b033dba431abcd624a"
        ],
        [
            "rewrite Hx; rewrite Hy; rewrite addK0l; auto.",
            "VernacExtend",
            "12f158f66988e64c56600bc2a8b2db3c25634611"
        ],
        [
            "rewrite eqKI; auto.",
            "VernacExtend",
            "ca078dadd9f4e418868b01a515b29125b20be296"
        ],
        [
            "intros [| k]; destruct x; destruct y; rewrite !andbP; intros (H1, H2) (H3, H4); split; auto.",
            "VernacExtend",
            "c4f1f9af2c91ac76712afeaa3644b50f76a12f32"
        ],
        [
            "generalize H1 H3; do 2 (case eq0_spec; try (intros; discriminate)); intros; subst; rewrite addE0l; auto.",
            "VernacExtend",
            "d6ad0c9ecb7b18cc48f3d070aae562278a7d281b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve add_hom.",
            "VernacHints",
            "46836251c4167a1fe2b8995802d0bad7050a4cbc"
        ],
        [
            "Lemma scal_hom n k1 k2 (x: vect n) : hom n k1 x -> hom n k1 (k2 .* x).",
            "VernacStartTheoremProof",
            "299c93ff83e5e54ee593028228c57aabfd979d9a"
        ],
        [
            "generalize k1; clear k1.",
            "VernacExtend",
            "2a0652b5f4391e2c1036aa2fbafaa5daec1dcd36"
        ],
        [
            "induction n as [| n IH]; simpl; try (Vfold n).",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros k1; case k1; auto.",
            "VernacExtend",
            "63414045842cd721283b208936df82dc3ae66f9a"
        ],
        [
            "intros _; case eqK_spec; auto; intros Hx HH; try discriminate.",
            "VernacExtend",
            "a09c4e74977e2bd3d4e78f9be253d57303c88f22"
        ],
        [
            "rewrite Hx; rewrite multK0r, eqKI; auto.",
            "VernacExtend",
            "4f98f72f62c8609575443ce47bdcb4d3d66988c6"
        ],
        [
            "intros [| k]; destruct x; rewrite !andbP; intros (H1, H2); split; auto.",
            "VernacExtend",
            "d40ad65136ebfa274c219154fb2bb0f35871c2ee"
        ],
        [
            "generalize H1; case eq0_spec; try (intros; discriminate); intros; subst; rewrite scalE0r, eq0I; auto.",
            "VernacExtend",
            "85f6a04e89ade948bb61c08082275df66a5e1171"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve scal_hom.",
            "VernacHints",
            "857fdc4bf4d7647e3612b87ce2fc7007e0bfa004"
        ],
        [
            "Fixpoint get_hom (n m : nat) {struct n} : vect n -> vect n := match n return (vect n -> vect n) with | 0%nat => fun a => match m with O => a | S _ => 0 end | S n1 => fun l1 => let (l2, l3) := l1 in ((match m with O => [0] | S m1 => get_hom n1 m1 l2 end), get_hom n1 m l3) end.",
            "VernacFixpoint",
            "18cb0ae110d36948c3d59b402396ddecf8016977"
        ],
        [
            "Lemma get_hom0 n m : get_hom n m [0] = [0].",
            "VernacStartTheoremProof",
            "fb9b33cf2077a3b059009f50eb164502a02f4f8f"
        ],
        [
            "generalize m; clear m; induction n as [|n IH]; intros [|m]; simpl; auto; rewrite !IH; auto.",
            "VernacExtend",
            "427b3d1e0fc3dfc11412d75598a3471e4276f156"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_homk0 n k: get_hom n 0 [k] = [k].",
            "VernacStartTheoremProof",
            "2ef14decbbca1239007314485b7a11dd5398abeb"
        ],
        [
            "induction n as [|n IH]; simpl; auto; rewrite !IH; auto.",
            "VernacExtend",
            "5115f0ddaf20441fac76d63b2ee5657a42e1df96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_homkS n m k: get_hom n m.+1 [k] = [0].",
            "VernacStartTheoremProof",
            "4d544e79c1da79878aa1bb011fe7ba0ff73f9cd1"
        ],
        [
            "induction n as [|n IH]; simpl; auto; rewrite !IH, ?get_hom0; auto.",
            "VernacExtend",
            "4e2fa2a674734497db4dbdad4b5f1a418d3d9a57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_hom_ei n m i : i < n -> get_hom n m 'e_i = match m with 1 => 'e_i | _ => [0] end.",
            "VernacStartTheoremProof",
            "3fef29cb0204fcf583adf3cdd3f8398c094c2a4e"
        ],
        [
            "generalize m i; clear m i; induction n as [|n IH].",
            "VernacExtend",
            "ee9d453728c2d6659dba190da8428feb7510261d"
        ],
        [
            "intros m i HH; contradict HH; auto with arith.",
            "VernacExtend",
            "37072531f28cc749bd772320c34c8f8ada70e857"
        ],
        [
            "intros [|[|m]] [|i] H; simpl; rewrite ?get_hom0; auto.",
            "VernacExtend",
            "0d4b40ca3df79d726f45556761b6230f5820f13b"
        ],
        [
            "rewrite IH; auto with arith.",
            "VernacExtend",
            "bf8d1ec9c3e811f8f5ef611f01fbad87c0c64ff2"
        ],
        [
            "rewrite get_homk0; auto.",
            "VernacExtend",
            "0a72cb6cb4e8ee2db82a18b67565c299cce1d7f6"
        ],
        [
            "rewrite !IH; auto with arith.",
            "VernacExtend",
            "d9f4c2ca985ff89bd8cafa953bfb15a4a7231405"
        ],
        [
            "rewrite get_homkS; auto.",
            "VernacExtend",
            "309562ee6c9e1a2bc9966e1bf6b147ca8eb5f25e"
        ],
        [
            "rewrite !IH; auto with arith.",
            "VernacExtend",
            "d9f4c2ca985ff89bd8cafa953bfb15a4a7231405"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_hom_scal n m k x : get_hom n m (k .* x) = k .* get_hom n m x.",
            "VernacStartTheoremProof",
            "5792e2c622cb01c8d2ab513efb5ae13c750d1128"
        ],
        [
            "generalize m x; clear m x; induction n as [|n IH]; intros [|m]; simpl; Krm0; intros [x y]; Vfold n; rewrite ?IH; Vrm0.",
            "VernacExtend",
            "8a8da0e2219343be75a9cb0f19500d35bc35307b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_hom_add n m x y : get_hom n m (x + y) = get_hom n m x + get_hom n m y.",
            "VernacStartTheoremProof",
            "9f225943cc355710e8bb241d3000cd56c029b723"
        ],
        [
            "generalize m x y; clear m x y; induction n as [|n IH]; intros [|m]; simpl; Krm0; intros [x1 x2] [y1 y2]; Vfold n; rewrite ?IH; Vrm0.",
            "VernacExtend",
            "05d3c48eb2db07b954fe3b304eaa3e0eee7ab2fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_hom_up n m x : n < m -> get_hom n m x = [0].",
            "VernacStartTheoremProof",
            "4894c234153c4ffdaa8f1f0c32311b85be074d74"
        ],
        [
            "generalize m; clear m; induction n as [| n IH]; intros m Hnm.",
            "VernacExtend",
            "2d1dff615b15c55676a713e3f91a288239929a27"
        ],
        [
            "destruct m; simpl; auto; contradict Hnm; auto with arith.",
            "VernacExtend",
            "9b3209db171247fd82174e4b96b5b754a8b1e71d"
        ],
        [
            "destruct m as [|m]; simpl; auto.",
            "VernacExtend",
            "8a976b3fbf4108dd15bef6afe96106a2e862fb3e"
        ],
        [
            "contradict Hnm; auto with arith.",
            "VernacExtend",
            "9c648518fa1f7441d61a26c9bc0f90e8280a8306"
        ],
        [
            "destruct x as [x1 x2]; rewrite !IH; auto with arith.",
            "VernacExtend",
            "b5809bee6fb8340ec5c6b90abf115479009e0dbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint sum (n : nat) (f: (nat -> vect n)) (m : nat) {struct m} : vect n := match m with | 0%nat => f 0%nat | S m1 => f m + sum n f m1 end.",
            "VernacFixpoint",
            "54ee6091b26654f20a4bbe0571ed14e237d15925"
        ],
        [
            "Lemma sumEl n f m : sum n f m.+1 = f 0%nat + sum n (fun m => f m.+1) m.",
            "VernacStartTheoremProof",
            "27532a4ff1b5a9db18f18a05ac16a09cdbe55214"
        ],
        [
            "induction m as [|m IH]; simpl; Vfold n.",
            "VernacExtend",
            "d9e909bb68b0d6035475dce170e280bbe061dca6"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "rewrite addE_swap with (x1 := f 0%nat); auto.",
            "VernacExtend",
            "8015d8bfc013287deffd6eef0a4119effce8335b"
        ],
        [
            "rewrite <-IH; simpl; auto.",
            "VernacExtend",
            "c0292c5dab2bf19cfdbf693388c9401a08a00ee0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumEr n f m : sum n f m.+1 = f m.+1 + sum n f m.",
            "VernacStartTheoremProof",
            "3951e8e61c6f2e4994e20e360b0d4e979f15f5b9"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_ext (n : nat) (f1 f2: (nat -> vect n)) (m : nat) : sum n.+1 (fun m => (f1 m, f2 m)) m = (sum n f1 m, sum n f2 m).",
            "VernacStartTheoremProof",
            "38a6de8c96451ffda1f15faa8ad9601599321030"
        ],
        [
            "induction m as [|m IH]; simpl; auto.",
            "VernacExtend",
            "28ecc4b29f115dd963c73a6889411ae30beb9424"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_hom_sum n (x : vect n) : x = sum n (fun m => get_hom n m x) n.",
            "VernacStartTheoremProof",
            "9b8c63d6ad36e412eac140df15e4a687a7d222eb"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x as [x y]; simpl.",
            "VernacExtend",
            "d22277c5d9d7a38a0e9aa29cbc12c640ee49245b"
        ],
        [
            "rewrite sum_ext.",
            "VernacExtend",
            "ddd88600e73af1fa8f299f9d380995aa91952534"
        ],
        [
            "rewrite <-(IH y).",
            "VernacExtend",
            "3e195a30fcaa221f450eebd12babe69c8cbd6a89"
        ],
        [
            "change (get_hom n n x) with ((fun m : nat => match m with | 0 => [0] | m1.+1 => get_hom n m1 x end) n.+1).",
            "VernacExtend",
            "0caecce33aade8cfd4d66108ecf141dacd21d436"
        ],
        [
            "Vfold n; rewrite <-sumEr, sumEl; Vrm0.",
            "VernacExtend",
            "bbcca683de451b7d79ac7e903f3e33a73a351b95"
        ],
        [
            "rewrite <-IH, get_hom_up; Vrm0.",
            "VernacExtend",
            "455f6598495b1429ae68712da3a9c25c2df8aa45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_get_hom n (x : vect n) m : hom n m (get_hom n m x).",
            "VernacStartTheoremProof",
            "28f5f1c1b0618c7a5e80c13c9b800a62e786ee29"
        ],
        [
            "generalize m; induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "9763030cf44d4ee29d1a332a4e2faeeff28f9947"
        ],
        [
            "intros []; auto.",
            "VernacExtend",
            "538859518958c62815d503605e1de1531db219d1"
        ],
        [
            "rewrite eqKI; auto.",
            "VernacExtend",
            "ca078dadd9f4e418868b01a515b29125b20be296"
        ],
        [
            "intros [|m1]; destruct x as [x1 x2].",
            "VernacExtend",
            "be09623272295bdf0089cfc304ae86929f407ced"
        ],
        [
            "rewrite eq0I, IH; auto.",
            "VernacExtend",
            "12122ca7baac7b189fee469b6c6d77b2a552ca4f"
        ],
        [
            "rewrite !IH; auto.",
            "VernacExtend",
            "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint first_deg (n : nat) {struct n} : vect n -> nat := match n return (vect n -> nat) with | 0%nat => fun a => 0%nat | S n1 => fun l1 => let (l2, l3) := l1 in if l2 ?= 0 then first_deg n1 l3 else S (first_deg n1 l2) end.",
            "VernacFixpoint",
            "4e3d6585eca07c3ff2af1f57312b964cc1d3df1d"
        ],
        [
            "Lemma first_deg0 n : first_deg n 0 = 0%nat.",
            "VernacStartTheoremProof",
            "337d600b5a57a2572a2ac1070f085bad58ee05cd"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite eq0I; auto.",
            "VernacExtend",
            "a06a75bba6d56b673bd55816ed0e47683e4f695c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma first_deg0i n v : first_deg n v = 0%nat -> hom n 0 v.",
            "VernacStartTheoremProof",
            "cd7f725693059dbdac71b4ef7ac7e9ada7a2e415"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct v.",
            "VernacExtend",
            "6f1469bc2ceb2b76ca58f6ada86b5fc3c1e42ed3"
        ],
        [
            "case eq0_spec; intros H1 H2; simpl; auto.",
            "VernacExtend",
            "4ce9ca9252c11b1463d0d01fb0748914f67784b5"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_first_deg n k x : x <> 0 -> hom n k x -> first_deg n x = k.",
            "VernacStartTheoremProof",
            "c8fae14546718a12c9380a3a652b64dcd41464bc"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; intros [|k]; simpl; auto.",
            "VernacExtend",
            "e3ffd9d113a71e413e62090260dec32013f0f44e"
        ],
        [
            "case eqK_spec; auto; try (intros; discriminate).",
            "VernacExtend",
            "e242e2390977096108d43e24307f79e689793e20"
        ],
        [
            "intros H1 H2; case H2; auto.",
            "VernacExtend",
            "64473c0bac90940aec179baa53933e91e736e033"
        ],
        [
            "destruct x; case eq0_spec; intros Hx Hy; subst; try (discriminate).",
            "VernacExtend",
            "bf72b0c4b27e25d611ee2d0b13abd9ae6b56ee8e"
        ],
        [
            "rewrite andbP; intros (_, H1); apply IH; auto.",
            "VernacExtend",
            "1b3320dddb96d59cd8e2fde12e257b33d6373b79"
        ],
        [
            "intros H2; case Hy; subst; auto.",
            "VernacExtend",
            "b6e86e1f220ed84ac0b82d7c328db060af9cdc03"
        ],
        [
            "try (rewrite andbP; intros (H1,_); discriminate).",
            "VernacExtend",
            "dc86577b1b3f4cabcaaea810817e8fa09aa73aef"
        ],
        [
            "destruct x; rewrite andbP; case eq0_spec; intros Hx Hy (H1,H2).",
            "VernacExtend",
            "9620d602526ab0a6d6bade676c479efa3e535f7d"
        ],
        [
            "apply IH; auto; intros H3; case Hy; subst; auto.",
            "VernacExtend",
            "c16418fb8d87c0cd7f506e1fd3bf08301acad61b"
        ],
        [
            "rewrite (IH _ k); auto.",
            "VernacExtend",
            "822bc2e8af4693d58f67f6c3b831975eed2492ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lift (n: nat) (v: vect n) : (vect n.+1) := ((0: vect n), v).",
            "VernacDefinition",
            "c4e9f9fd6d6f8ef395ef66f9f3aa75880ea2bb2f"
        ],
        [
            "Notation \" x ^'l \" := (lift _ x) (at level 9, format \"x ^'l\"): g_scope.",
            "VernacNotation",
            "4a1f112cc7429b1dee34c6ae49ece51e6fca28f8"
        ],
        [
            "Lemma gen_lift n i : 'e_i.+1 = 'e_i^'l :> vect n.+1.",
            "VernacStartTheoremProof",
            "8c2fb20abbf0addbbda71d9e89c45b00e4de841d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_k n k : [k] = [k]^'l :> vect n.+1.",
            "VernacStartTheoremProof",
            "24019f1321f94189d6f0785c7c6accc653201ef2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_add n x y : (x + y)^'l = x^'l + y^'l :> vect n.+1.",
            "VernacStartTheoremProof",
            "00fc2372098c477878b1f7fb4c54f6bd5bd5549b"
        ],
        [
            "unfold lift; simpl; Vfold n; rewrite addE0l; auto.",
            "VernacExtend",
            "3cffe14b7d9d29d99bd64e82d545ef38fb1fd95d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_scal n (k: K) x : (k .* x)^'l = k .* x^'l :> vect n.+1.",
            "VernacStartTheoremProof",
            "b4ff4721aa5542835d49a8cc124d417d05c96253"
        ],
        [
            "unfold lift; simpl; Vfold n; rewrite scalE0r; auto.",
            "VernacExtend",
            "a52e7f4fc29fd0e5e2e43132a75197d365bd67ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_mprod (n: nat) (ks: list K) vs : ks *X* map (lift n) vs = (ks *X* vs)^'l.",
            "VernacStartTheoremProof",
            "4cb092493d28def5b63eb2bb3156981396c1b220"
        ],
        [
            "generalize vs; clear vs.",
            "VernacExtend",
            "26131db3d7a72c66a2fbfcd4a3908f965c6f1f22"
        ],
        [
            "induction ks as [| k ks IH].",
            "VernacExtend",
            "0abf936de74fc97faf8966751f6af2ea12a7fc7f"
        ],
        [
            "intros vs; rewrite !mprod0l; auto.",
            "VernacExtend",
            "2d699b6314e7f211f667442536f8b7ed4cb74d27"
        ],
        [
            "intros [| v vs]; simpl; try rewrite mprod0r; auto.",
            "VernacExtend",
            "b2b0928516665e31e343db2e4d2a6aa42ddd04ef"
        ],
        [
            "rewrite (mprod_S (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
        ],
        [
            "rewrite mprod_S; auto.",
            "VernacExtend",
            "b18aeba88ce23deabc660914af9148947616b7fa"
        ],
        [
            "rewrite IH, lift_add, lift_scal; auto.",
            "VernacExtend",
            "f94c2202f8f18c428692f7ac58c415c5c17ea014"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_cbl n l (x: vect n) : cbl _ l x -> cbl _ (map (lift n) l) x^'l.",
            "VernacStartTheoremProof",
            "d5d85194d7f82cd711a28ab89c35e287e7a7b0dd"
        ],
        [
            "intros H; elim H; clear x H; auto.",
            "VernacExtend",
            "03271805f7524b51b8c85c80504126f51e71e336"
        ],
        [
            "apply cbl0.",
            "VernacExtend",
            "a30a6dc0e0b9363a44a8082e597a09cb39921056"
        ],
        [
            "intros v Hv; apply cbl_in; apply in_map; auto.",
            "VernacExtend",
            "aed8f1692d3fc364d56214c9e5e705f062323fd8"
        ],
        [
            "intros x y H1x H2x H1y H2y.",
            "VernacExtend",
            "1c9596c6206815a5cb596222d7e40976f460a568"
        ],
        [
            "rewrite lift_add; apply cbl_add; auto.",
            "VernacExtend",
            "ae8dc33d0749ad36af1bbb3b766175e8bbdd6b92"
        ],
        [
            "intros k x H1x H2x.",
            "VernacExtend",
            "f0d354ba760f995a46f323f98781adc5cd5be1a1"
        ],
        [
            "rewrite lift_scal; apply cbl_scal; auto.",
            "VernacExtend",
            "4fb909daf2f4df461da16351c8083abf21026d33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_inj n (x1 x2: vect n) : x1^'l = x2^'l -> x1 = x2.",
            "VernacStartTheoremProof",
            "d71302a287d3160efe96d92ef364b855ddc286cc"
        ],
        [
            "destruct n as [| n]; simpl; intros HH; injection HH; auto.",
            "VernacExtend",
            "a8abc516f77d5218b1335ebbf0fe94d9112aced6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dlift (n: nat) (v: vect n) : (vect n.+1) := (v,(0: vect n)).",
            "VernacDefinition",
            "e63368f46246248c79169248272f36c210312658"
        ],
        [
            "Notation \"x ^'dl\" := (dlift _ x) (at level 9, format \"x ^'dl\" ): g_scope.",
            "VernacNotation",
            "52695088e20d6fbc44967ac6457e0d1b74812193"
        ],
        [
            "Lemma dlift_add n x y : (x + y)^'dl = x^'dl + y^'dl :> vect n.+1.",
            "VernacStartTheoremProof",
            "fca16285994b29e674b7a8661e7feb8e75bed177"
        ],
        [
            "unfold dlift; simpl; Vfold n; rewrite addE0l; auto.",
            "VernacExtend",
            "f1e2c8090e54ca9654e60e5010306724b02c8911"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dlift_scal n (k: K) x : (k .* x)^'dl = k .* x^'dl :> vect n.+1.",
            "VernacStartTheoremProof",
            "44574acc6d00b888c1926633ba02fb408dbbe537"
        ],
        [
            "unfold dlift; simpl; Vfold n; rewrite scalE0r; auto.",
            "VernacExtend",
            "2e4a553a0352da074d6f7686302b53ef60448e0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dlift_mprod (n: nat) (ks: list K) vs : ks *X* map (dlift n) vs = (ks *X* vs)^'dl.",
            "VernacStartTheoremProof",
            "5f9e8e1c4143a89fb5cdc7ba02346fe9bb8234ca"
        ],
        [
            "generalize vs; clear vs.",
            "VernacExtend",
            "26131db3d7a72c66a2fbfcd4a3908f965c6f1f22"
        ],
        [
            "induction ks as [| k ks IH].",
            "VernacExtend",
            "0abf936de74fc97faf8966751f6af2ea12a7fc7f"
        ],
        [
            "intros vs; rewrite !mprod0l; auto.",
            "VernacExtend",
            "2d699b6314e7f211f667442536f8b7ed4cb74d27"
        ],
        [
            "intros [| v vs]; simpl; try rewrite mprod0r; auto.",
            "VernacExtend",
            "b2b0928516665e31e343db2e4d2a6aa42ddd04ef"
        ],
        [
            "rewrite (mprod_S (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
        ],
        [
            "rewrite mprod_S; auto.",
            "VernacExtend",
            "b18aeba88ce23deabc660914af9148947616b7fa"
        ],
        [
            "rewrite IH, dlift_add, dlift_scal; auto.",
            "VernacExtend",
            "06f3e9937edfa0e1d576eddc0caf50cd79f72c4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint proj (n: nat) k: (vect n) -> (list K) := match n return vect n -> list K with | O => fun a => match k with | O => a::nil | _ => nil end | S n1 => fun l => let (l1,l2) := l in match k with | O => proj n1 k l2 | S k1 => (proj n1 k1 l1 ++ proj n1 k l2)%list end end.",
            "VernacFixpoint",
            "983262359dd98cdf97ed6dd95fa7b2b7e6f31ebc"
        ],
        [
            "Lemma proj0 n x : proj n 0 x = 'C[x]:: nil.",
            "VernacStartTheoremProof",
            "88d6b5b3b005ed17317ede890b303a30a08adcd9"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x; rewrite IH; auto.",
            "VernacExtend",
            "cfc6663f1c7be2df3fba3b4e0cba871283f81c80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_hom0_eq n x y : hom n 0 x -> hom n 0 y -> nth 0 (proj n 0 x) 0%f = nth 0 (proj n 0 y) 0%f -> x = y.",
            "VernacStartTheoremProof",
            "457229ac1dae33971167a4e750c52935782be936"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "do 2 (case eq0_spec; try (intros; discriminate)).",
            "VernacExtend",
            "b9cb438d0bdc0f41fa906899baf3d6e64b57e927"
        ],
        [
            "intros; subst; apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "8ef8ee3c06a4412630c4d186c42f2588128bc330"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_lt n m x : n < m -> proj n m x = nil.",
            "VernacStartTheoremProof",
            "4bf3a2ad98a2d840b319855c0aec0615c8699e95"
        ],
        [
            "generalize m; clear m.",
            "VernacExtend",
            "c69856faa0bcd071a0574edf0780395f33a826ba"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [] H; auto; contradict H; auto with arith.",
            "VernacExtend",
            "a6be544b1d86fb2d1c2e351c10d99a82b138465c"
        ],
        [
            "intros [| m] H; destruct x; rewrite !IH; auto with arith.",
            "VernacExtend",
            "5ef44413bc926b45772181e220e077cc49aad69b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_homn_eq n x y : hom n n x -> hom n n y -> nth 0 (proj n n x) 0%f = nth 0 (proj n n y) 0%f -> x = y.",
            "VernacStartTheoremProof",
            "d36a2b83e0666e55983afeee478a714cdf1e5550"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x; destruct y; rewrite !andbP; intros (H1,H2) (H3,H4).",
            "VernacExtend",
            "dd4b3b6f7a7c4cc02ec662b59cb32727d22fa334"
        ],
        [
            "rewrite hom_lt with (2:= H2); auto with arith.",
            "VernacExtend",
            "efa622160d8b80ef71454d984f9e2fb70dd57ed5"
        ],
        [
            "rewrite hom_lt with (2:= H4); auto with arith.",
            "VernacExtend",
            "3fefa0d05a97cd6119e4ac1e0f7fe4026705d9bf"
        ],
        [
            "rewrite !(proj_lt n n.+1), <-!app_nil_end; auto with arith.",
            "VernacExtend",
            "9e7d4e7c2790500766d28146e1283b94cc80588f"
        ],
        [
            "intros H; rewrite (IH _ _ H1 H3); auto.",
            "VernacExtend",
            "303ff197b9b4de03117c655ed1b49462a3c917d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint all (n: nat): vect n := match n return vect n with | 0 => 1 | S n1 => (all n1, 0: vect n1) end.",
            "VernacFixpoint",
            "4d252105fc92be15730077a5ca3375fb4f2cf19d"
        ],
        [
            "Notation \"'E'\" := (all _).",
            "VernacNotation",
            "bfa81d21b5d89536fe23f202d9c32bf64b198a03"
        ],
        [
            "Lemma all_hom n : hom n n E.",
            "VernacStartTheoremProof",
            "f2452ae5dc4dd38b24421296244f224621995313"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite IH, homk0; auto.",
            "VernacExtend",
            "92cda27737f8b669280e160dd2c29bbd8de22c9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve all_hom.",
            "VernacHints",
            "b7fb6fb49d8ee298c99b5d6366df046050171c62"
        ],
        [
            "Fixpoint base (n: nat) k:list (vect n) := match n return list (vect n) with | O => match k with | O => 1%f::nil | _ => nil end | S n1 => match k with | O => map (lift n1) (base n1 k) | S k1 => (map (dlift n1) (base n1 k1) ++ map (lift n1) (base n1 k))%list end end.",
            "VernacFixpoint",
            "6f2f728ec26e1daf90ffc44a6741a5ef4d0b3922"
        ],
        [
            "Lemma proj_base_length n (x: vect n) k : length (proj n k x) = length (base n k).",
            "VernacStartTheoremProof",
            "ce515b819e0c3dd6ed334d119ac6e2dcbf1daa84"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros [| k]; auto.",
            "VernacExtend",
            "dd9aa8cc98c579167047f915196ade2b4fbb6886"
        ],
        [
            "intros [| k]; destruct x; rewrite ?map_length; auto.",
            "VernacExtend",
            "1befb0e969cbd25d334f43fa1f0c1ed82a60ffce"
        ],
        [
            "rewrite !app_length, !map_length, !IH; auto.",
            "VernacExtend",
            "233a534561c45e5a8f4113521177fb359a46f863"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base0 n : base n 0 = 'e_n::nil.",
            "VernacStartTheoremProof",
            "e4f53b1dc2d383f5d555671cf6410a86e6d36fc2"
        ],
        [
            "induction n as [| n IH]; simpl; rewrite ?IH; auto.",
            "VernacExtend",
            "c8544f3a40522be5887b289abb603fdaab768f8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_lt_nil m n : m < n -> base m n = nil.",
            "VernacStartTheoremProof",
            "49cf252c82eb70bbe57eb045c8737cda39c866bb"
        ],
        [
            "generalize n; clear n.",
            "VernacExtend",
            "a8c7333e313c64ce34e20216bbcbe6f6e05e8e7c"
        ],
        [
            "induction m as [| m IH]; intros [| n]; simpl; auto; try (intros HH; contradict HH; auto with arith; fail).",
            "VernacExtend",
            "9e565100f40db71ca7495b2a2745aee48ee9be85"
        ],
        [
            "intros Hm; rewrite !IH; auto with arith.",
            "VernacExtend",
            "48beb3d52757ba86121e1de082e6b7ff6467efef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_n n : base n n = all n::nil.",
            "VernacStartTheoremProof",
            "e8912afed2439250b1a842a7b5fe2032ce769491"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite IH, base_lt_nil; auto.",
            "VernacExtend",
            "76e2921f94dd7a03e9c4a701ec0294a09d048e87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_length n k : length (base n k) = bin n k.",
            "VernacStartTheoremProof",
            "6c9c31b6eefe2e26a6d861e349832808fd85c265"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl base; intros [| k]; auto.",
            "VernacExtend",
            "f539366ad1e8084ad8be272082d21d46ec995181"
        ],
        [
            "rewrite base0; auto.",
            "VernacExtend",
            "7866375ca954e75474870512fd53803ba947e1bd"
        ],
        [
            "rewrite app_length, !map_length, !IH, bin_def, Plus.plus_comm; auto.",
            "VernacExtend",
            "4b03ab0a23bef41439d7a3eec656ca3c72b71969"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_lift n k : incl (map (lift n) (base n k)) (base n.+1 k).",
            "VernacStartTheoremProof",
            "55baaae8e911f083117075a70142bdd1c37d4394"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; intros [| k]; simpl; auto with datatypes.",
            "VernacExtend",
            "a315903d49980e8664337eb63eabd2e78106c509"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_hom n k v : k <= n -> In v (base n k) -> hom n k v.",
            "VernacStartTheoremProof",
            "c19b8ef7483bbffbe0b2151f0c126284701a4a0f"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; intros [| k]; auto.",
            "VernacExtend",
            "e2b4e180877c9be66e4f96bfdfc75df0fd7370c4"
        ],
        [
            "intros HH; contradict HH; auto with arith.",
            "VernacExtend",
            "287c60339f0c8deff5ebf7c6e4f6af547967c4e8"
        ],
        [
            "destruct v as [v1 v2].",
            "VernacExtend",
            "e410adef3db89cef6929243ea83a94f3d213387e"
        ],
        [
            "rewrite base0, en_def; simpl.",
            "VernacExtend",
            "ea00402dea12f465894122b39fa44a389a7a16aa"
        ],
        [
            "intros _ [H1|[]]; injection H1; intros; subst.",
            "VernacExtend",
            "7628c92c9d91af07681021db0c80cba7c8e5a5ef"
        ],
        [
            "rewrite eq0I, hom0K; auto.",
            "VernacExtend",
            "9a15b4fb5471f7a022241b8ae07bf84acaa02db4"
        ],
        [
            "intros HH; case (Lt.le_lt_or_eq k n); auto with arith; intros H1 H2; subst.",
            "VernacExtend",
            "31f67c1776fe0cd7211729a35013f9f153cfe896"
        ],
        [
            "case (in_app_or _ _ _ H2); rewrite in_map_iff; intros (v1, ([],Hv1)); simpl.",
            "VernacExtend",
            "4d719acf4e2568026a1a355f13d213d6da2bfdb4"
        ],
        [
            "rewrite IH, homk0; auto with arith.",
            "VernacExtend",
            "21e26ab157c544d3cf4c9ad4a20b2324bccf21e3"
        ],
        [
            "rewrite homk0, IH; auto with arith.",
            "VernacExtend",
            "694f04005ddd94f07b214667d03fb8e89e6d0ada"
        ],
        [
            "rewrite base_n, base_lt_nil in H2; auto.",
            "VernacExtend",
            "5860473bf7fed7d53c5e7657bcf661857c245ed2"
        ],
        [
            "simpl in H2; case H2; intros []; simpl.",
            "VernacExtend",
            "174c0852411f637b7b418dacac4b00bcba97d26e"
        ],
        [
            "rewrite all_hom, homk0; auto.",
            "VernacExtend",
            "dcb099186d38495136f02fafb69ed2daeeb104c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proj_homk n (x: vect n) k : hom n k x -> proj n k x *X* base n k = x.",
            "VernacStartTheoremProof",
            "34e521fe37b7900ee7b612896ccc21bf4ebdd115"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros [| k] Hx.",
            "VernacExtend",
            "2221b99af7664ff344258aebbb72083534fcc6a5"
        ],
        [
            "rewrite (mprod_S (vn_eparams 0)); auto.",
            "VernacExtend",
            "ce7ad0280aa94af3970bbcc96844a35e1d72b6f2"
        ],
        [
            "rewrite mprod0l, addE0r; auto.",
            "VernacExtend",
            "0ca5e779d571c0bf28a7a2a3e91e4fda10dcf728"
        ],
        [
            "simpl; rewrite multK1r; auto.",
            "VernacExtend",
            "a3546296f43711fd9f82bbea5e4d903f3d6f6653"
        ],
        [
            "rewrite mprod0r.",
            "VernacExtend",
            "f60f4c923701f1b8cb6846ccf70ee78683c42b50"
        ],
        [
            "generalize Hx; case eqK_spec; auto.",
            "VernacExtend",
            "157e02c066694fdd32705f84fd707c71ecfb2a4f"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros [|k ]; destruct x.",
            "VernacExtend",
            "97bc4639898f55dd8f83f2822e6d9b93be059149"
        ],
        [
            "case eq0_spec; intros Hx Hx1; try discriminate; subst.",
            "VernacExtend",
            "24638d0f35b22f84aa54872097c2c8e80fc3a87a"
        ],
        [
            "rewrite lift_mprod, IH; auto.",
            "VernacExtend",
            "921de209fec6cffa577077e8fab1afad9ea948ba"
        ],
        [
            "intros HH.",
            "VernacExtend",
            "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
        ],
        [
            "rewrite (mprod_app (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "7ac536e9dfdbce82901635a018337f6e24ab4703"
        ],
        [
            "rewrite !lift_mprod, !dlift_mprod, !IH; auto.",
            "VernacExtend",
            "a447c58935cab60762bd859636b1cdeaa46e4d63"
        ],
        [
            "simpl; Vfold n; rewrite addE0l, addE0r; auto.",
            "VernacExtend",
            "9271af485e94525c2984579618cd689465134f8c"
        ],
        [
            "generalize HH; case hom; auto; intros; discriminate.",
            "VernacExtend",
            "c0d0206fbe1bef41c97c8e1af6e3bacb66c1d811"
        ],
        [
            "generalize HH; case hom; auto; intros; discriminate.",
            "VernacExtend",
            "c0d0206fbe1bef41c97c8e1af6e3bacb66c1d811"
        ],
        [
            "rewrite map_length, proj_base_length; auto.",
            "VernacExtend",
            "bb99c149eebc39ec9871cf292f7dfd54109d92a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_free n k : free _ (base n k).",
            "VernacStartTheoremProof",
            "33515982ce5fde4f36811498543522f8065b1961"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [|k] [|x [|]]; simpl; try (intros; discriminate); auto.",
            "VernacExtend",
            "2584f22e9edfa35f08b43c8052c53e7edacc8879"
        ],
        [
            "rewrite (mprod_S (vn_eparams 0)); auto.",
            "VernacExtend",
            "ce7ad0280aa94af3970bbcc96844a35e1d72b6f2"
        ],
        [
            "rewrite !mprod0r, !addE0r; simpl; auto.",
            "VernacExtend",
            "f2beb391d785af465b459495c5287f56c4835fb4"
        ],
        [
            "rewrite multK1r; auto; intros _ HH k [HH1 | []]; subst; auto.",
            "VernacExtend",
            "628401f0aa766bbd5d638834439a678fd23bf9cc"
        ],
        [
            "intros _ _ k1 HH; case HH.",
            "VernacExtend",
            "6539446ea95d8d5868cd8318c1be303ecc098534"
        ],
        [
            "intros [| k].",
            "VernacExtend",
            "17ed4cb94ccbe888b3457daf9accd95143560509"
        ],
        [
            "rewrite base0; intros [| x []]; try (intros; discriminate); simpl.",
            "VernacExtend",
            "5f6da70ee0f1a8190a6b8d9a4b3887914fdb9063"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite (mprod_S (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
        ],
        [
            "rewrite mprod0r; simpl; auto; Vfold n.",
            "VernacExtend",
            "a7b6d5d80790d9e1973e14b7713e60843144182d"
        ],
        [
            "rewrite en_def, scalE0r, addE0l, addE0r, scalk, multK1r; auto.",
            "VernacExtend",
            "6d331df808fa2b72db8fe654fb121054ef3ca232"
        ],
        [
            "intros HH; injection HH; intros HH1 k [HK | []]; subst.",
            "VernacExtend",
            "0987a6e7e44f6d517436436dc1d9ae0ffcee23c2"
        ],
        [
            "apply injk with (1 := HH1); auto.",
            "VernacExtend",
            "492a0b36f047030549d19d1110c08b3e13c5e77e"
        ],
        [
            "intros l; rewrite app_length, !map_length.",
            "VernacExtend",
            "43c432d03faeb875b3425511cc19f7fc309e8331"
        ],
        [
            "intros H1 H2 k1 Hk1.",
            "VernacExtend",
            "db8e527b0166a3609b5482d726ee586e2ffff339"
        ],
        [
            "case (list_split _ _ _ _ H1); intros l1 (l2, (Hl1, (Hl2, Hl3))); subst.",
            "VernacExtend",
            "f8340037c55d819f2509d1a5b7f4da95e5004847"
        ],
        [
            "rewrite mprod_app, lift_mprod, dlift_mprod in H2; try rewrite map_length; auto.",
            "VernacExtend",
            "286d7497af44c004abf85b4a667edc50d30a7f3b"
        ],
        [
            "injection H2; Vfold n; rewrite addE0r, addE0l; auto; intros He1 He2.",
            "VernacExtend",
            "20766e1bcd6e828bd3924de34d5fba98c49071ea"
        ],
        [
            "case (in_app_or _ _ _ Hk1); intros H3.",
            "VernacExtend",
            "d234f0a82271cffeb84896b308e1e7b9fc8cad6c"
        ],
        [
            "apply (IH k l1); auto.",
            "VernacExtend",
            "dbbc59b93b4c4cd4c6c133353be958d7065f6e6c"
        ],
        [
            "apply (IH k.+1 l2); auto.",
            "VernacExtend",
            "473d58598002d1cf3a1863eee6fd220d00afe5d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma e_in_base1 n i : i < n -> In 'e_i (base n 1).",
            "VernacStartTheoremProof",
            "061e590980baa9448e968ed11e712ed5040b540e"
        ],
        [
            "generalize i; clear i.",
            "VernacExtend",
            "208b471d15be521271abdaf4ee90e51a9a779dca"
        ],
        [
            "induction n as [| n IH].",
            "VernacExtend",
            "bec3d336f40e4640fd88fbd8808c6c8e8800159f"
        ],
        [
            "intros p1 Hp1; absurd (p1 < 0); auto with arith.",
            "VernacExtend",
            "00d12c7b1dac2610e684b6a6833ec8a7af32e8b5"
        ],
        [
            "intros [| p1] Hp1; simpl; Vfold n; auto.",
            "VernacExtend",
            "88d4e190dba54393ec690b666654288640772f45"
        ],
        [
            "apply in_or_app; left; auto.",
            "VernacExtend",
            "fa822ce1f0a29c1ea205febda6266e0c22e87652"
        ],
        [
            "change (1: vect n, 0: vect n) with (dlift n (1)).",
            "VernacExtend",
            "5e06e6f4bd735e2afde362340f37900eb8505ab4"
        ],
        [
            "rewrite base0, en_def; simpl; auto.",
            "VernacExtend",
            "183b2a163b8d37058e4f23ec981f3f0778799289"
        ],
        [
            "apply in_or_app; right; auto.",
            "VernacExtend",
            "3dddf2e09d3f97080e782630269f5dd3d75a172b"
        ],
        [
            "change (0: vect n, 'e_p1: vect n) with ('e_p1^'l:vect n.+1).",
            "VernacExtend",
            "53804294e037fc1191d50a35ac5b3ee20d077ce0"
        ],
        [
            "refine (in_map _ _ _ _); auto with arith.",
            "VernacExtend",
            "51155b03b1dbd88b15ccac061570c4c773127476"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma e_in_base1_ex n v : In v (base n 1) -> exists p1, p1 < n /\\ v = 'e_p1.",
            "VernacStartTheoremProof",
            "43ef4f755741824bf36603b5a63c1e3e8314a764"
        ],
        [
            "induction n as [| n IH]; intros HH.",
            "VernacExtend",
            "36fa14711c9f153f2eae76c652e445265b1cdf63"
        ],
        [
            "inversion HH.",
            "VernacExtend",
            "2dd4148222bdef6d8f727509143734ec930d8f35"
        ],
        [
            "destruct v as [vv1 vv2].",
            "VernacExtend",
            "bd74636205df89b654310ade64bc3623f217ab60"
        ],
        [
            "case (in_app_or _ _ _ HH); rewrite in_map_iff; intros (v, (Hv1, Hv2)); injection Hv1; intros H1 H2; subst; auto.",
            "VernacExtend",
            "0663d0d606485fa16abded86916f4e74962e67e4"
        ],
        [
            "exists 0%nat; split; auto with arith.",
            "VernacExtend",
            "4e63bbbda321aa632339f6e7453572a22fa6ac48"
        ],
        [
            "rewrite base0, en_def in Hv2.",
            "VernacExtend",
            "89a96cc42a05b542840177c8e9df928ae5ef5b67"
        ],
        [
            "simpl in Hv2; case Hv2; intros HH1; subst; auto.",
            "VernacExtend",
            "cdc544315145f3da2cada58a0df8ff85c00c54d5"
        ],
        [
            "case HH1.",
            "VernacExtend",
            "258202da6e637d48883584e842bca3ab4c9e972d"
        ],
        [
            "case (IH _ Hv2); auto; intros p1 (H1p1, H2p1).",
            "VernacExtend",
            "a01a27bbfd320082a95b9571051733eeccbbd136"
        ],
        [
            "exists p1.+1; split; subst; auto with arith.",
            "VernacExtend",
            "4db9f439175bcc7637c7c5de54c8b45ad2ee16db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base1_length n : length (base n 1) = n.",
            "VernacStartTheoremProof",
            "9ff122f5bec143484babbc6553f14dc37834cae2"
        ],
        [
            "rewrite base_length, bin_1; auto.",
            "VernacExtend",
            "73f95519394b24eb2355b2ca808bb20883301ca6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base1_S n: base n.+1 1 = ('e_0: vect n.+1) :: map (lift n) (base n 1).",
            "VernacStartTheoremProof",
            "61d73231fc2b43c3a28ce57baeb9c4a34fec02e1"
        ],
        [
            "simpl; unfold dlift; simpl; rewrite base0, en_def; simpl; auto.",
            "VernacExtend",
            "67b0318f986f6dc8ce6bced9ecd8609b6840aaed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_nil n k : n < k -> base n k = nil.",
            "VernacStartTheoremProof",
            "5ce1db9a6720f728d2c5fc3cd9519b7d09a7f151"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; intros [| k] H; simpl; auto; try (contradict H; auto with arith; fail).",
            "VernacExtend",
            "b1b88809baf015bb640f9c8f911b801a901aca01"
        ],
        [
            "rewrite !IH; auto with arith.",
            "VernacExtend",
            "d9f4c2ca985ff89bd8cafa953bfb15a4a7231405"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl1_hom1_equiv n (x: vect n) : cbl _ (base n 1) x <-> hom n 1 x.",
            "VernacStartTheoremProof",
            "c1decad692f463a4c062dbec638a0c6136db1ebc"
        ],
        [
            "split; intros Hx; elim Hx.",
            "VernacExtend",
            "51e18a70b8e1590adbef78f9ef547d442b7bf91a"
        ],
        [
            "rewrite homk0; auto.",
            "VernacExtend",
            "7edbed20cb3421cfdbb0d7207d84a612555b2f0a"
        ],
        [
            "intros v Hv.",
            "VernacExtend",
            "7085e3055ce1f1fa4943d89c8ab383f3d7b2f17b"
        ],
        [
            "case (e_in_base1_ex _ _ Hv); intros i (Hi, Hei); subst.",
            "VernacExtend",
            "840053db4b6a7bee7547647807f128697dff0ca5"
        ],
        [
            "apply hom1e; auto.",
            "VernacExtend",
            "0517ffeef53c1082711fea6ecfc55ad2f83185c8"
        ],
        [
            "intros y1 y2 _ Hy1 _ Hy2; apply add_hom; auto.",
            "VernacExtend",
            "8529c6bb028875b5f3f34da7c6c50598009465d0"
        ],
        [
            "intros k y _ Hy; apply scal_hom; auto.",
            "VernacExtend",
            "58d190b099aa67602ce791df47f1e16003b4121a"
        ],
        [
            "rewrite <- (proj_homk _ _ _ Hx).",
            "VernacExtend",
            "419601c3cf367d401cae2647ad58d190bfd70a40"
        ],
        [
            "apply mprod_cbl; auto.",
            "VernacExtend",
            "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cblk_homk_equiv n k (x: vect n): cbl _ (base n k) x <-> hom n k x.",
            "VernacStartTheoremProof",
            "0daac9ad6e868f7ab35bc15ffc786d313086bfe7"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [| k]; split; intros H; auto.",
            "VernacExtend",
            "efd6454f0e434640cd044a1f6d7f1d4b9cce57f6"
        ],
        [
            "replace x with (x .* 1: vect 0).",
            "VernacExtend",
            "3be43bd2914717e91f0a24af60bf586efd4a1d2c"
        ],
        [
            "apply cbl_scal.",
            "VernacExtend",
            "b9dab6b9299440e8a6c3b8e2e143e1c66ec4e87a"
        ],
        [
            "constructor; auto with datatypes.",
            "VernacExtend",
            "e0e3bc33ebd13f0a395d8591fc2c15599b8c0499"
        ],
        [
            "rewrite scalk, multK1r; auto.",
            "VernacExtend",
            "e27cb05d2bc16fbdb80b52d099a9a627debf2040"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite eqKI; auto.",
            "VernacExtend",
            "ca078dadd9f4e418868b01a515b29125b20be296"
        ],
        [
            "intros v [].",
            "VernacExtend",
            "9186533daeb1e4ccd468f2e1d3aa89a285d8edea"
        ],
        [
            "intros x1 y1 _; do 2 (case eqK_spec; auto; intros HH; subst; try (intros; discriminate)).",
            "VernacExtend",
            "3f4740eca2999292de96f39800931fdffe207a14"
        ],
        [
            "Vrm0; rewrite eqKI; auto.",
            "VernacExtend",
            "c39435304eff3827997bf6fc540e0e25b79e8809"
        ],
        [
            "intros k1 x1 _; case eqK_spec; auto; intros HH HH1; subst; Vrm0; try discriminate; rewrite eqKI; auto.",
            "VernacExtend",
            "5d8ac0cae91cd19fcd9f205a6560c1a134e40834"
        ],
        [
            "generalize H; case eqK_spec; auto; intros; subst; try discriminate.",
            "VernacExtend",
            "143437c6a34f86dce416c03a68067d5eaecd367d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros [| k]; destruct x as [x y]; split; intros HH.",
            "VernacExtend",
            "f6b4578224386b8c4e6f4bc3a80fa7cafa420624"
        ],
        [
            "case (cbl_map_inv _ _ (lift n) id id) with (5 := HH); auto.",
            "VernacExtend",
            "e0f0d34574c116ff4ebb93fd9fb7d33ed112c8f3"
        ],
        [
            "intros; apply (lift_add n).",
            "VernacExtend",
            "22c8f88184629dab3a9831631b3d87442048d9e8"
        ],
        [
            "intros; apply (lift_scal n).",
            "VernacExtend",
            "48b6d32f32425411024e32b263a4ebfd04357ebc"
        ],
        [
            "intros x1 (H1x1, H2x1); injection H2x1; intros; subst.",
            "VernacExtend",
            "4445d68cf850efaa6a337a9082861ad944d87807"
        ],
        [
            "rewrite eq0I; simpl; rewrite <- IH; auto.",
            "VernacExtend",
            "62611c6dbf9981cc5e39a24fa2d39380a0dba523"
        ],
        [
            "generalize HH; case eq0_spec; try (intros; discriminate).",
            "VernacExtend",
            "4697fdfdb989be4670dc6419875cc23696eba5ba"
        ],
        [
            "intros H1 H2; subst.",
            "VernacExtend",
            "40571e8f28ed3282e281bf864e96a99915f52641"
        ],
        [
            "apply cbl_map with (f := lift n) (g:= id); auto.",
            "VernacExtend",
            "7e3bf5766907fcdd9058c9f3a02a91dcec7527b6"
        ],
        [
            "intros; apply (lift_add n).",
            "VernacExtend",
            "22c8f88184629dab3a9831631b3d87442048d9e8"
        ],
        [
            "intros; apply (lift_scal n).",
            "VernacExtend",
            "48b6d32f32425411024e32b263a4ebfd04357ebc"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "rewrite andbP; rewrite <-!IH.",
            "VernacExtend",
            "77b9592d649a0043e9fb1aaab9c8a8e622639d62"
        ],
        [
            "generalize HH; clear HH.",
            "VernacExtend",
            "4dcdcfa2e1145dc5b5eed037acf2c3afc813b5d4"
        ],
        [
            "generalize (base n k) (base n k.+1); intros l1 l2.",
            "VernacExtend",
            "f758035187c19dc2d2a3852cea131af440663242"
        ],
        [
            "assert (He: exists l3, l3 = (map (dlift n) l1 ++ map (lift n) l2)%list).",
            "VernacExtend",
            "a89b0e9a3b53c7024cd24b2e9aeb4fb048d5fd1f"
        ],
        [
            "exists (map (dlift n) l1 ++ map (lift n) l2)%list; auto.",
            "VernacExtend",
            "793c046aa58fc0d41b686b55a22c560a362334b5"
        ],
        [
            "intros HH.",
            "VernacExtend",
            "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
        ],
        [
            "change (cbl (vn_eparams n) l1 (fst (x, y)) /\\ cbl (vn_eparams n) l2 (snd (x, y))).",
            "VernacExtend",
            "209994e437b8ee96b563210bc1f093c4229073ea"
        ],
        [
            "case He; intros l3 Hl3; simpl in Hl3; rewrite <-Hl3 in HH; generalize Hl3.",
            "VernacExtend",
            "32003d504b7f6f1a33e7a51ba7340283b5911142"
        ],
        [
            "elim HH; clear HH Hl3.",
            "VernacExtend",
            "ee867ad6d7d27c6e4c6e3bdc63c92c81b2315981"
        ],
        [
            "intros; split; constructor.",
            "VernacExtend",
            "4cf63282befab5561acee041896c1f3617f0e1f0"
        ],
        [
            "simpl; intros (x1, y1) H1 H2; subst.",
            "VernacExtend",
            "f533160522173222599cc93762e68d78bcd6652f"
        ],
        [
            "case (in_app_or _ _ _ H1); rewrite in_map_iff; intros (v, (H1v, H2v)); injection H1v; intros; subst; split; constructor; auto.",
            "VernacExtend",
            "2ba2aed4ff468d912c3b0784b553f25a5eee91d9"
        ],
        [
            "simpl; intros (x1,x2) (y1, y2) Hx1 H1 H2 H3 H4; Vfold n.",
            "VernacExtend",
            "e424986cde2b3063093ccc614ce37d30fb3302a0"
        ],
        [
            "split; auto; simpl fst; simpl snd; apply cbl_add; auto.",
            "VernacExtend",
            "7664e14189cf6585192d43435a682ce75d3cb1e6"
        ],
        [
            "case H1; auto.",
            "VernacExtend",
            "e17d7763e318012934dd49304a7a1025b1fa8bd4"
        ],
        [
            "case H3; auto.",
            "VernacExtend",
            "9cb9bbe341f7f1cb8a595ff7b0fa94c496f79f20"
        ],
        [
            "case H1; auto.",
            "VernacExtend",
            "e17d7763e318012934dd49304a7a1025b1fa8bd4"
        ],
        [
            "case H3; auto.",
            "VernacExtend",
            "9cb9bbe341f7f1cb8a595ff7b0fa94c496f79f20"
        ],
        [
            "simpl; intros k1 (x1, x2) Hx1 H1 H2.",
            "VernacExtend",
            "28617211b96f3ebd37ceffe4383cb306eecf2e7c"
        ],
        [
            "split; auto; simpl fst; simpl snd; apply cbl_scal; auto.",
            "VernacExtend",
            "61ef6ae499fe3cee632ff7dd73caad82b67bb110"
        ],
        [
            "case H1; auto.",
            "VernacExtend",
            "e17d7763e318012934dd49304a7a1025b1fa8bd4"
        ],
        [
            "case H1; auto.",
            "VernacExtend",
            "e17d7763e318012934dd49304a7a1025b1fa8bd4"
        ],
        [
            "rewrite andbP in HH; case HH; intros HH1 HH2.",
            "VernacExtend",
            "51353f7457a7edd727ecd2b12ca5691b421834e3"
        ],
        [
            "replace (x,y) with (dlift n x + lift n y).",
            "VernacExtend",
            "31fa830339f39560bc0d0c1160ea1013d7aa6e23"
        ],
        [
            "apply cbl_add.",
            "VernacExtend",
            "0442bdf7cd3553e4cc8e92367ac5905076fa78aa"
        ],
        [
            "apply cbl_incl with (l1 := map (dlift n) (base n k)); auto with datatypes.",
            "VernacExtend",
            "086e7755b61ae955490dca4f663ec0035e08e8c0"
        ],
        [
            "apply cbl_map with (f := dlift n) (g:= id); auto.",
            "VernacExtend",
            "c2e745280a1b7dffb0fbf09e8d3e93dd2be6dbce"
        ],
        [
            "intros; apply (dlift_add n).",
            "VernacExtend",
            "e412a3760cfa576d1ba1a71d68ddf83646b609ce"
        ],
        [
            "intros; apply (dlift_scal n).",
            "VernacExtend",
            "02f396d7cc78479f57d5c50dce865e142b1a3318"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "apply cbl_incl with (l1 := map (lift n) (base n k.+1)); auto with datatypes.",
            "VernacExtend",
            "e047e64225dd690a36a0223752be2ea8d87d5582"
        ],
        [
            "apply cbl_map with (f := lift n) (g:= id); auto.",
            "VernacExtend",
            "7e3bf5766907fcdd9058c9f3a02a91dcec7527b6"
        ],
        [
            "intros; apply (lift_add n).",
            "VernacExtend",
            "22c8f88184629dab3a9831631b3d87442048d9e8"
        ],
        [
            "intros; apply (lift_scal n).",
            "VernacExtend",
            "48b6d32f32425411024e32b263a4ebfd04357ebc"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "simpl; Vfold n; Vrm0; auto.",
            "VernacExtend",
            "4952ecab600c1b1817f2895f391e2590485fd41d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_base1_split n x : cbl _ (base n.+1 1) x -> exists k, exists y, cbl _ (base n 1) y /\\ x = ([k], y).",
            "VernacStartTheoremProof",
            "17f438c82808c90cdb9da0cbda93c8faf684bd83"
        ],
        [
            "intros H; elim H; clear x H.",
            "VernacExtend",
            "a1c2ff183583e9b4c29c213ded6aa6f0355f8615"
        ],
        [
            "exists (0%f); exists (0: vect n); split; auto; apply cbl0.",
            "VernacExtend",
            "ee443f27fc28dc8d935c6244e8ab63d1e82a608b"
        ],
        [
            "intros v; rewrite base1_S; simpl In.",
            "VernacExtend",
            "556a7a4def08fbdc0e7c4c05d82f37e4bf89fd49"
        ],
        [
            "intros [H1 | H1].",
            "VernacExtend",
            "e39bf3bab67e37614d01e5b5569f2d4d21689dab"
        ],
        [
            "exists (1%f: K); exists (0: vect n); split; auto; apply cbl0.",
            "VernacExtend",
            "ab3266b6e497f6be8a5a33196571614e0f499907"
        ],
        [
            "rewrite in_map_iff in H1; case H1; intros y [H1y H2y].",
            "VernacExtend",
            "abfd028b8660ba9a83460e940a216c91ec0058e4"
        ],
        [
            "exists (0%f); exists y; split; auto.",
            "VernacExtend",
            "1d968bb7e4be8a91f0a1a9e3c3257b17dbff603f"
        ],
        [
            "apply cbl_in; auto.",
            "VernacExtend",
            "6e75a9addbb8a44cb5f7a3086f16bc7355249828"
        ],
        [
            "intros x y _ (k1,(y1, (H1y1, H2y1))) _ (k2,(y2, (H1y2, H2y2))); subst x y.",
            "VernacExtend",
            "8d23167b575e40bff75f0e50d09631a805395e3b"
        ],
        [
            "exists (k1 + k2)%f; exists (y1 + y2); split; auto.",
            "VernacExtend",
            "5897e7690462f0750da686b33ea279dac75ba30e"
        ],
        [
            "apply cbl_add; auto.",
            "VernacExtend",
            "9df6b6a5fe172acffe669b4679999f527312c89c"
        ],
        [
            "simpl; Vfold n; rewrite addk; auto.",
            "VernacExtend",
            "f2304fdd9bfbd15f1069988fa9b208f3d5effb3c"
        ],
        [
            "intros k x _ (k1, (y, (H1y, H2y))); subst x.",
            "VernacExtend",
            "5aa891c95f1350e00392f994b930b604890b6cc5"
        ],
        [
            "exists (k*k1)%f; exists ((k: K) .* y); split; auto.",
            "VernacExtend",
            "cebe7f220d928171df97f6fade0638e385277c7b"
        ],
        [
            "apply cbl_scal; auto.",
            "VernacExtend",
            "51daf280d91a2a62f959c15ac782759afba31c8e"
        ],
        [
            "simpl; Vfold n; rewrite scalk; auto.",
            "VernacExtend",
            "6441a31f7ef0442613ac582fa5300f595d3e59eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_base1_list_split n l: (forall x, In x l -> cbl _ (base n.+1 1) x) -> exists lk, exists ly, (forall i, In i lk -> (fst i) <> 0%f) /\\ (forall i, In i lk -> cbl _ (base n 1) (snd i)) /\\ (forall i, In i ly -> cbl _ (base n 1) i) /\\ perm l ((map (fun x => ([fst x],(snd x))) lk) ++ map (lift n) ly).",
            "VernacStartTheoremProof",
            "e4ea65f681436b2c2092844f7745d63909398edc"
        ],
        [
            "induction l as [| a l1 IH]; auto.",
            "VernacExtend",
            "5840821dfcd86444ebe034dd57daed295289613a"
        ],
        [
            "intros; exists (@nil (K * vect n)); exists (@nil (vect n)); repeat split.",
            "VernacExtend",
            "9085ebcd8f9436aabe20080859d769b3ddfbbae8"
        ],
        [
            "intros i HH; inversion HH.",
            "VernacExtend",
            "de8b8daa43eb1c07fcb6f2396863e2942dd0d245"
        ],
        [
            "intros i HH; inversion HH.",
            "VernacExtend",
            "de8b8daa43eb1c07fcb6f2396863e2942dd0d245"
        ],
        [
            "intros i HH; inversion HH.",
            "VernacExtend",
            "de8b8daa43eb1c07fcb6f2396863e2942dd0d245"
        ],
        [
            "simpl map; apply perm_id.",
            "VernacExtend",
            "310419d2a339c08dc82ec383af1bfe7629c9ddae"
        ],
        [
            "intros Hi.",
            "VernacExtend",
            "1760e50437fee0aca9b028404143ef4a8c472680"
        ],
        [
            "case IH; auto with datatypes.",
            "VernacExtend",
            "3c25644a203ece9f69ec07e69ea66fedb5480b39"
        ],
        [
            "intros lk (ly, (H1ly, (H2ly, (H3ly, H4ly)))).",
            "VernacExtend",
            "8674196211b83d29a78bfcee17eb1c4bd2f690bf"
        ],
        [
            "case (cbl_base1_split n a); auto with datatypes.",
            "VernacExtend",
            "27ade18ed0d03effc056515367d7cd01c28b7b14"
        ],
        [
            "intros k (y, (H1y, H2y)); subst a.",
            "VernacExtend",
            "39ba9ef944b779c5d57b285fd636419e3987fa0c"
        ],
        [
            "generalize (eqK_dec _ Hp k 0%f); case eqK; intros Hk; try subst k.",
            "VernacExtend",
            "a6daee0646c54408e59766a4aaae9f49146e2650"
        ],
        [
            "exists lk; exists (y::ly); repeat split; auto with datatypes.",
            "VernacExtend",
            "4ce0d362b7a5679db1048aeac19f10d2313361c9"
        ],
        [
            "simpl; intros i1 [Hi1 | Hi1]; try subst i1; auto.",
            "VernacExtend",
            "6dcabb72d267295893b1d50d7acd374bb7a45f17"
        ],
        [
            "apply perm_trans with (2 := perm_cons_app _ y^'l (map (fun x => ([fst x], snd x)) lk) (map (lift n) ly)).",
            "VernacExtend",
            "7132e6a8d30354abe9392064d82f7090c521c758"
        ],
        [
            "simpl; apply perm_skip; auto.",
            "VernacExtend",
            "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
        ],
        [
            "exists ((k,y)::lk); exists ly; repeat split; auto with datatypes.",
            "VernacExtend",
            "641e23f6358939067b0d3c8e13afdd8a6fc22e72"
        ],
        [
            "simpl; intros i1 [Hi1 | Hi1]; try subst i1; auto.",
            "VernacExtend",
            "6dcabb72d267295893b1d50d7acd374bb7a45f17"
        ],
        [
            "simpl; intros i1 [Hi1 | Hi1]; try subst i1; auto.",
            "VernacExtend",
            "6dcabb72d267295893b1d50d7acd374bb7a45f17"
        ],
        [
            "simpl; apply perm_skip; auto.",
            "VernacExtend",
            "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom_induct n k (P: vect n -> Prop) : P 0 -> (forall v, In v (base n k) -> P v) -> (forall v1 v2, P v1 -> P v2 -> P (v1 + v2)) -> (forall k v, P v -> P (k .* v)) -> (forall v, hom n k v -> P v).",
            "VernacStartTheoremProof",
            "8758c6f218f5e286cd6bb872f31204976f486b85"
        ],
        [
            "intros H1 H2 H3 H4 v.",
            "VernacExtend",
            "ccac594215ee53cd82b251a079ddd64312c08c07"
        ],
        [
            "rewrite <-cblk_homk_equiv; intros HH; elim HH; auto.",
            "VernacExtend",
            "d54b9a98c481a898b579c5caef24a7bca085c4e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint conj (n : nat) (b: bool) {struct n}: vect n -> vect n := match n return (vect n -> vect n) with | 0%nat => fun a => if b then (- a)%f else a | S n1 => fun l1 => let (l2, l3) := l1 in (conj n1 (negb b) l2, conj n1 b l3) end.",
            "VernacFixpoint",
            "ba6719cc01b4874c33acbfecea3647256f432540"
        ],
        [
            "Notation \"x ^_ b\" := (conj _ b x) (at level 30).",
            "VernacNotation",
            "553a739c868fbf987aae91a8cea0bac91328593a"
        ],
        [
            "Notation \"x ^_'t\" := (conj _ true x) (at level 30).",
            "VernacNotation",
            "0b619ea80d72232c39ea8ed23cd2e4d08813f640"
        ],
        [
            "Notation \"x ^_'f\" := (conj _ false x) (at level 30).",
            "VernacNotation",
            "af1a7391341830391ff5f8c89f6d57d8735f0bb1"
        ],
        [
            "Lemma conj_add n b (x y: vect n) : (x + y) ^_ b = x ^_ b + y ^_ b.",
            "VernacStartTheoremProof",
            "b54db3ccdf88fde4d01e2d505f9edf9826646ebd"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros []; auto; rewrite opp_addK; auto.",
            "VernacExtend",
            "d0840b6b30797e0d0e366a35897c8daf13a13857"
        ],
        [
            "destruct x; destruct y; intros b; Vfold n.",
            "VernacExtend",
            "9d2005e9f9d62ea97984496a85764a579def01ea"
        ],
        [
            "rewrite IH, IH; auto.",
            "VernacExtend",
            "db585773d6aa3023d238ac9be82e41e198ea9a00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_invo n b (x: vect n) : x ^_ b ^_ b = x.",
            "VernacStartTheoremProof",
            "dae6baf1a812c63d226c46601ddb5f53dd9aa096"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros []; auto; rewrite opp_oppK; auto.",
            "VernacExtend",
            "9e9ec5d34ac010b0ec8fbf7f96676d020090150a"
        ],
        [
            "intros vv; destruct x; rewrite !IH; auto.",
            "VernacExtend",
            "83ff6ae1284249c775244692e3ea9c92ec22d0e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj0 n b : 0 ^_ b = (0 : vect n).",
            "VernacStartTheoremProof",
            "a2e17cfe38bf10f0f074758928a1f5e88a0bcf11"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros []; auto; rewrite oppK0; auto.",
            "VernacExtend",
            "5b2557ebff0423ef12e5250be4d9dcf84c16173a"
        ],
        [
            "intros b; rewrite IH; rewrite IH; auto.",
            "VernacExtend",
            "0fec3ea18563eda493951b1d0b526726cf7fa9ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite conj0: GRm0.",
            "VernacExtend",
            "f09c3dba881ff8c5674f412e6a4af9afbdf5812f"
        ],
        [
            "Lemma conjk n b k : [k] ^_ b= if b then [-k] else ([k]: vect n).",
            "VernacStartTheoremProof",
            "64b9b347a70222c16ec4572626e53565977b2d80"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; auto.",
            "VernacExtend",
            "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
        ],
        [
            "destruct b; auto; rewrite IH, conj0; auto.",
            "VernacExtend",
            "e82329b3d6649ccc208baacfcea3247487c0b016"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_neg n b (v: vect n) : v ^_ (negb b) = (-(1)) .* (v ^_ b).",
            "VernacStartTheoremProof",
            "960fd88e97c22391e233faba9a591dc40fb54479"
        ],
        [
            "induction n as [| n IH];simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct b; simpl; Krm1.",
            "VernacExtend",
            "8a5eacfb7e4a2a4d2ca5a88d71a780edbc1a7a56"
        ],
        [
            "destruct v; Vfold n.",
            "VernacExtend",
            "664453bcd0e70623c9d29f0e9ca3d69b7abc70b9"
        ],
        [
            "rewrite negb_involutive, !IH, <-scal_multE; Krm1; rewrite scalE1; auto.",
            "VernacExtend",
            "18814a6e76b5559aaeb399c6faf4e66a17e01fca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjt n (v: vect n) : v ^_'t = (-(1)) .* (v ^_'f).",
            "VernacStartTheoremProof",
            "75a1b22473c4d6c51090f4da3bf51dafbd53b09e"
        ],
        [
            "apply (conj_neg n false).",
            "VernacExtend",
            "148d1e50e430d313da0c75995cdfb1e96ca73849"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_e n b i : i < n -> 'e_i ^_ b = if b then ('e_i: vect n) else (- (1)).* 'e_i.",
            "VernacStartTheoremProof",
            "9c29b71bdabe0071bdc7a8f68003871f9525f8f8"
        ],
        [
            "generalize i; clear i.",
            "VernacExtend",
            "208b471d15be521271abdaf4ee90e51a9a779dca"
        ],
        [
            "induction n as [| n IH]; simpl; try (Vfold n).",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros i H; absurd (i < 0); auto with arith.",
            "VernacExtend",
            "8c1b057a1aff91ea817a7d6cdc2911b84fff562e"
        ],
        [
            "intros [| i] H.",
            "VernacExtend",
            "a0dd3ff1c21b6a3e0c89dd81a80bdebfa76578bd"
        ],
        [
            "rewrite conj0, scalE0r, conjk; case b; auto.",
            "VernacExtend",
            "25ec0ea9723a4afcd3c4f44b525d27e1bcf69284"
        ],
        [
            "rewrite scalk, multK1r; auto.",
            "VernacExtend",
            "e27cb05d2bc16fbdb80b52d099a9a627debf2040"
        ],
        [
            "rewrite IH; auto with arith.",
            "VernacExtend",
            "bf8d1ec9c3e811f8f5ef611f01fbad87c0c64ff2"
        ],
        [
            "rewrite conj0, scalE0r; case b; auto.",
            "VernacExtend",
            "1ede9e2dadc0fe6d792e611bfbd1e0cde9506042"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_scal n b k (x: vect n) : (k .* x) ^_ b = k .* x ^_ b.",
            "VernacStartTheoremProof",
            "acf8acb77c71d30c6ece9e9fba6e97da500cd1b4"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros []; auto; rewrite opp_multKr; auto.",
            "VernacExtend",
            "094de29aa7befa088906d1cac35c65213056e9c6"
        ],
        [
            "intros []; destruct x; rewrite IH, IH; auto.",
            "VernacExtend",
            "399fd3c91ce9f165db118314a1787dd1a3df3ff6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_hom n b k (x: vect n) : hom n k x -> hom n k (x ^_ b).",
            "VernacStartTheoremProof",
            "897059a2c0e00dad4787dad873e1c762b5a84597"
        ],
        [
            "generalize b k; clear b k.",
            "VernacExtend",
            "4efa106ee9807e78293dcda639d7278b02fda912"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros [|] [|k]; auto.",
            "VernacExtend",
            "aadc30ced7744766ea503ec1c78edc98157515a2"
        ],
        [
            "case eqK_spec; auto; intros HH HH1; try discriminate.",
            "VernacExtend",
            "70261e64d6157d748f36571ca413cadf5ba6afe7"
        ],
        [
            "rewrite HH, oppK0, eqKI; auto.",
            "VernacExtend",
            "f255b7316e050842ad17712da6832c89ea37e8f3"
        ],
        [
            "intros b [|k]; destruct x; rewrite !andbP; intros (H1, H2); split; auto.",
            "VernacExtend",
            "4a74c0b0eb146a7169f7cde1775455aca5cf895e"
        ],
        [
            "generalize H1; case eq0_spec; intros Hx1 HH; try discriminate.",
            "VernacExtend",
            "65b65c297fb4d405d71336285a0ddf1cc47101e6"
        ],
        [
            "rewrite Hx1, conj0, eq0I; auto.",
            "VernacExtend",
            "b3e9d3327fe994bc7109f11fe56a69c7016d1458"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve conj_hom.",
            "VernacHints",
            "9910379e1d1332235439c0235eab1699e80ba6ae"
        ],
        [
            "Lemma conjf_hom n k (M: vect n) : hom n k M -> M ^_'f = (- (1))^k .* M.",
            "VernacStartTheoremProof",
            "42c864e5f5c11a086f81faca1db141fea340cf28"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH];simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros [|k] H; simpl; Krm1.",
            "VernacExtend",
            "72b86465ff5179faf1cc8f0943d0adb3bca61159"
        ],
        [
            "generalize H; case eqK_spec; try (intros; discriminate); auto.",
            "VernacExtend",
            "4439e44003a964484d89514f488a142e3a87f635"
        ],
        [
            "intros H1; rewrite H1; Krm0.",
            "VernacExtend",
            "40630e130cf05244dd99f99adafaa53d7acb8eb4"
        ],
        [
            "intros [| k]; destruct M; rewrite andbP; intros (HM1, HM2); rewrite conjt; simpl; Vfold n; Krm1.",
            "VernacExtend",
            "69dd6dc4a4f35878456991bb98332017d002f786"
        ],
        [
            "generalize HM1; case eq0_spec; try (intros; discriminate); auto.",
            "VernacExtend",
            "f410750ffeb8f9c3b706bf61b3ffa9979e7b28a7"
        ],
        [
            "intros H1; rewrite H1, (IH _ _ HM2); simpl; Vfold n; Krm1.",
            "VernacExtend",
            "fcaf3fe8a4f7d6dc586c474d28b06fd817bec417"
        ],
        [
            "rewrite conj0; Vrm0.",
            "VernacExtend",
            "2057e36f92e9ff8d9de1b41d0fa7ca488d5e471d"
        ],
        [
            "rewrite (IH _ _ HM1), (IH _ _ HM2).",
            "VernacExtend",
            "c7d845fdbacc94c3d2ba29a7e34f88f97c288bb0"
        ],
        [
            "simpl; Vfold n; rewrite <-!scal_multE; Krm1.",
            "VernacExtend",
            "a3c37245b3e28909b713575fbbfca336d6f19e8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjt_hom n k (M: vect n) : hom n k M -> M ^_'t = (- (1))^k.+1 .* M.",
            "VernacStartTheoremProof",
            "800b07f9b8d0e75af3578903493815c8fcf4f9e5"
        ],
        [
            "intros HH; rewrite conjt, (conjf_hom n k); auto.",
            "VernacExtend",
            "b0774f69b05f6ea79ecd6185030be241de6a83a8"
        ],
        [
            "simpl; Vfold n; rewrite scal_multE; auto.",
            "VernacExtend",
            "3fc360d1e33e755635eaf7fb952a57780aa4039e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_const n b (x: vect n) : 'C[x ^_ b] = if b then (-'C[x])%f else 'C[x].",
            "VernacStartTheoremProof",
            "19015b7dac69399246d57f48512969c15ee388ae"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; destruct x; rewrite IH; auto.",
            "VernacExtend",
            "b3145a5dd61551b971f707483d54389c8eb68dec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_swap n b1 b2 (x: vect n) : x ^_ b2 ^_ b1 = x ^_ b1 ^_ b2.",
            "VernacStartTheoremProof",
            "9f5516fc3196e29cb560958872974eaa64de6efd"
        ],
        [
            "case b1; case b2; rewrite ?conjt, ?conj_scal, !conj_invo; auto.",
            "VernacExtend",
            "de14a206c38313833cca3649b9eb26b96ebddd0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_all n b: (E ^_ b) = (if b then (-((-(1))^ n))%f else ((-(1))^ n)%f) .* E :> vect n.",
            "VernacStartTheoremProof",
            "d6145b46900c36fbf78521912b9a9b328c4cf789"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n Hrec]; simpl; auto.",
            "VernacExtend",
            "132f18b12c61b68ca0ad97d52d5f1a018cfd9350"
        ],
        [
            "intros b; Krm1.",
            "VernacExtend",
            "524c332f8a560953803f21f7d562ec649b235b9f"
        ],
        [
            "intros b; repeat rewrite Hrec; case b; simpl; auto; rewrite conj0; Vfold n; Vrm0.",
            "VernacExtend",
            "e4dfac3950cd6fc093c6ccbb5e6dc984f4ba81dd"
        ],
        [
            "rewrite <-opp_multK1l; Krm1.",
            "VernacExtend",
            "2b95cf3589d56bbb19fae12cc0c7bbda0243804d"
        ],
        [
            "rewrite <-opp_multK1l; auto.",
            "VernacExtend",
            "7d8594a972782cd327179f5cfa742a0ad0d1dce4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint join (n : nat) : vect n -> vect n -> vect n := match n return (vect n -> vect n -> vect n) with | 0%nat => fun x y => (x * y)%f | S n1 => fun x y => let (x1, x2) := x in let (y1, y2) := y in (join n1 x1 y2 + join n1 (x2 ^_'f) y1, join n1 x2 y2) end.",
            "VernacFixpoint",
            "058182fb24746090e9a9be59fdcfc300ef207e01"
        ],
        [
            "Notation \"x '\u2228' y\" := (join _ x y) (at level 40, left associativity): type_scope.",
            "VernacNotation",
            "df052a64d921196d3c16db5c85536717049e2621"
        ],
        [
            "Lemma join_scall n k (x y : vect n) : k .* x \u2228 y = k .* (x \u2228 y).",
            "VernacStartTheoremProof",
            "76d4d2911655a4907febd3446179005ac77a6fce"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite multK_assoc; auto.",
            "VernacExtend",
            "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
        ],
        [
            "destruct x; destruct y; rewrite scal_addEr, conj_scal, !IH; auto.",
            "VernacExtend",
            "1a73117f1dd9b42e075e07eaba9f624a4d0ed21e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join0 (v1 v2: vect 0) : v1 \u2228 v2 = (v1 \u2228 v2)%f.",
            "VernacStartTheoremProof",
            "0b713806bcc54cf9de82cae16065b449dc228e85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join0l n (x : vect n) : 0 \u2228 x = 0.",
            "VernacStartTheoremProof",
            "754879c1eb53fe825a45bd77fdd3b5536a0b6e98"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite multK0l; auto.",
            "VernacExtend",
            "d9fd994fb151459953bfa2baf32130a8d503b021"
        ],
        [
            "destruct x; rewrite IH, conj0, IH; Vrm0.",
            "VernacExtend",
            "08282addd5ee814f17825ef754eb4850efd116f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite join0l: GRm0.",
            "VernacExtend",
            "69bb466dc701b9ac39bf6bf54ac88603e5a0aebc"
        ],
        [
            "Lemma join0r n (x : vect n) : x \u2228 0 = 0.",
            "VernacStartTheoremProof",
            "9281895e17adbb802ee88ed0b597321e4fdc5ad1"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite multK0r; auto.",
            "VernacExtend",
            "26ceb2e14741c0b552d3ebdce818a91972e3fbff"
        ],
        [
            "destruct x; rewrite !IH; Vrm0.",
            "VernacExtend",
            "88f8117d0ebc0b0a6510bc5306bf302ab99c7ff5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite join0r: GRm0.",
            "VernacExtend",
            "41d0a806a871f55dc08b37dc48188f41999919aa"
        ],
        [
            "Lemma joinkl n k (x : vect n) : [k] \u2228 x = k .* x.",
            "VernacStartTheoremProof",
            "89e316d0877f28e455416852ce8995202f1ef3ba"
        ],
        [
            "induction n as [| n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "destruct x; rewrite IH, conjk, join0l, addE0l, IH; auto.",
            "VernacExtend",
            "3a2ff8e10273bdcf00a8031a4a10c2bfd82e6b3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinkr n k (x : vect n) : x \u2228 [k] = k .* x.",
            "VernacStartTheoremProof",
            "ac839859b3fb981ca7a286d98dc10911813d583f"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "rewrite multK_com; auto.",
            "VernacExtend",
            "101cba15515a9d835b9963a8591487a473d1eb94"
        ],
        [
            "destruct x; rewrite !IH, join0r, addE0r; auto.",
            "VernacExtend",
            "26a09fad954aaf12bca50f9c5ba582a0299cbb88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join1l n (x : vect n) : 1 \u2228 x = x.",
            "VernacStartTheoremProof",
            "afd71bb0f8c8f23e79743b948c32139f8ed7c0d5"
        ],
        [
            "rewrite joinkl, scalE1; auto.",
            "VernacExtend",
            "97b34e638e8710de8c4d1d0a25f7a1d82ad11b3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join1r n (x : vect n) : x \u2228 1 = x.",
            "VernacStartTheoremProof",
            "58c18b21fa615d9aada5a236e67b809331f8c2f9"
        ],
        [
            "intros; rewrite joinkr, scalE1; auto.",
            "VernacExtend",
            "21f2bc0bb5f2c14add067ac85fd0aa421abcd9ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_alll n (x: vect n) : all n \u2228 x = 'C[x] .* all n.",
            "VernacStartTheoremProof",
            "f59160576849ef807e949fcbf5a4abdacd8d0502"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "simpl; rewrite multK_com; auto.",
            "VernacExtend",
            "fa6d9a06ebff52e4b6db767975910908886771ff"
        ],
        [
            "destruct x; rewrite conj0, !join0l, addE0r, IH; auto.",
            "VernacExtend",
            "64e4627b5d652977dc0b8501fe7e7691aaf8633a"
        ],
        [
            "simpl; Vfold n; rewrite scalE0r; auto.",
            "VernacExtend",
            "d09b8061bdfc2ca827baa7883fccaa98030b1371"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_allr n (x: vect n) : x \u2228 all n = 'C[x] .* all n.",
            "VernacStartTheoremProof",
            "ee1e297e69dc7255e9d0d1eacbf95439323df815"
        ],
        [
            "induction n as [| n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "destruct x; rewrite !join0r, addE0l, IH; auto.",
            "VernacExtend",
            "61ebd856b3e4bb9f70fe7cdfa9f8ff16fd7c2e71"
        ],
        [
            "simpl; Vfold n; rewrite scalE0r, conj_const; auto.",
            "VernacExtend",
            "02a231ef4b4fda6f5e9a2c946c55747960079106"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_allhr k n x : hom n k x -> 0 < k -> x \u2228 E = 0.",
            "VernacStartTheoremProof",
            "2f653756804a7ac95cc082dc2d6692bb72352db8"
        ],
        [
            "intros Hh Hl; rewrite join_allr, (const_hom n k), scalE0l; auto.",
            "VernacExtend",
            "5a44ecc51dec5677b11d21a513d8d6ca01351aae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_allhl k n x : hom n k x -> 0 < k -> E \u2228 x = 0.",
            "VernacStartTheoremProof",
            "f1abfdc392f324383dbdf4cc76b06c3bb6a44719"
        ],
        [
            "intros Hh Hl; rewrite join_alll, (const_hom n k), scalE0l; auto.",
            "VernacExtend",
            "37433f840d2cb7189a2da66c97754cc6b824ed56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_scalr n k (x y : vect n) : x \u2228 (k .* y) = k .* (x \u2228 y).",
            "VernacStartTheoremProof",
            "8772e4a23b7d4930e5f2d520e0d0d9c4cbe43a0f"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite (multK_com _ Hp x), (multK_com _ Hp x), multK_assoc; auto.",
            "VernacExtend",
            "53ba13306ac748c74bfc88ec1007eb4105addfdc"
        ],
        [
            "destruct x; destruct y; apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4afd4b00a15d150c043e397c57c0ba1d7dd72f11"
        ],
        [
            "rewrite IH, IH, <- scal_addEr; auto.",
            "VernacExtend",
            "0e1a40b661002189db9d729d1d759ed895ba02c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joink n k1 k2 : [k1] \u2228 [k2] = [k1 * k2] :> vect n.",
            "VernacStartTheoremProof",
            "312cefcda1259c0612d6f0ccdf4f6adfffa52670"
        ],
        [
            "rewrite joinkl, <- scalk; auto.",
            "VernacExtend",
            "6f5daa2ce82183d2e774ce60cb0b15b5bf5a0638"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_e0 n (M : vect n.+1) : 'e_0 \u2228 M = (snd M, [0]).",
            "VernacStartTheoremProof",
            "055349ac8e4e50c229b05fe6f4d023f49c46dc10"
        ],
        [
            "destruct M; simpl; Vfold n.",
            "VernacExtend",
            "57d14b4d637b3e6ab4278e3510e7a19749028849"
        ],
        [
            "rewrite conj0, !join0l, joinkl, scalE1; Vrm0.",
            "VernacExtend",
            "ec9b03e6135b8e6bcacbd57e1e3bf91c9828406b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_ei n i (M : vect n.+1) : i < n -> 'e_i.+1 \u2228 M = ((-(1))%f .* ('e_i \u2228 fst M), 'e_i \u2228 snd M).",
            "VernacStartTheoremProof",
            "ded6676118e1c07f8fa8979dc3b7a9fd9eedee8c"
        ],
        [
            "intros HH; destruct M; simpl; Vfold n.",
            "VernacExtend",
            "e4338fce2c00bffcc5767e3c857f3a5b0d416884"
        ],
        [
            "rewrite join0l, conj_e, join_scall; Vrm0.",
            "VernacExtend",
            "d86fd871c8b6fef9d5aaeef600328293f2952b5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_es n i j : i < n -> j < n -> 'e_ i \u2228 'e_ j + 'e_ j \u2228 'e_ i = (0: vect n).",
            "VernacStartTheoremProof",
            "860d636ac1aef10b23fc0d4b95d300287dc33810"
        ],
        [
            "generalize i j; clear i j.",
            "VernacExtend",
            "7230cc281ef8db497ddc79e16ce29d12f2650ff7"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros i j H; absurd (i < 0); auto with arith.",
            "VernacExtend",
            "4d4e481330c04402d0fea9a4245fd00bef1826d5"
        ],
        [
            "intros [|i] [|j].",
            "VernacExtend",
            "5c49da5d1d2d1a4419569702364ce9d926c0308f"
        ],
        [
            "rewrite join0l, join0r, conj0, join0l, addE0r, addE0r; auto.",
            "VernacExtend",
            "e3e491a74c8e251be6631c156fd15fb58a11e043"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "rewrite join0l, join0r, join1r, join1l, join0l, addE0l, addE0r, join0r, addE0r, conj_e; simpl; auto with arith.",
            "VernacExtend",
            "1330731369d4e6557ae9f20682675924bd010341"
        ],
        [
            "Vfold n; pattern (gen n j) at 1; replace (gen n j) with (1.* (gen n j)) by (rewrite scalE1; auto).",
            "VernacExtend",
            "e277ea0bb3538190429b253a46e00ea0e7f66413"
        ],
        [
            "rewrite <- scal_addEl, oppKr, scalE0l; auto.",
            "VernacExtend",
            "6144431eee905af2eaa124d266a1990bd17b9f33"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "rewrite join0l, join0r, join1r, join1l, join0l, addE0l, addE0r, join0r, addE0r, conj_e; simpl; auto with arith.",
            "VernacExtend",
            "1330731369d4e6557ae9f20682675924bd010341"
        ],
        [
            "Vfold n; pattern (gen n i) at 2; replace (gen n i) with (1.* (gen n i)) by (rewrite scalE1; auto).",
            "VernacExtend",
            "d25572fb83b9ab7132c102b73f46480e82a9e8dd"
        ],
        [
            "rewrite <- scal_addEl, oppKl, scalE0l; auto.",
            "VernacExtend",
            "ab5da88185fda9886ed24ac7cda51a687a73f29f"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "rewrite join0l, join0r, IH; try rewrite join0l; try rewrite join0r; try rewrite addE0l; try rewrite addE0l; auto with arith.",
            "VernacExtend",
            "47c2b77632a568802469be5196b22979047f7571"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_e n i : i < n -> 'e_ i \u2228 'e_ i = (0 : vect n).",
            "VernacStartTheoremProof",
            "bbd08114c9caaead8d29abf8ee165efc4887bcaf"
        ],
        [
            "generalize i; clear i.",
            "VernacExtend",
            "208b471d15be521271abdaf4ee90e51a9a779dca"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros i Hi; absurd (i < 0); auto with arith.",
            "VernacExtend",
            "b41886e95cab13fe29ed981f0183b92b5c1af50d"
        ],
        [
            "intros [|i] Hi.",
            "VernacExtend",
            "164d9a97294d4c551d461a218f7fa5277592ebfe"
        ],
        [
            "rewrite join0l, join0r, addE0l, conj0, join0l; auto.",
            "VernacExtend",
            "a12261efc1e5580aa9faced0a132f65639ead526"
        ],
        [
            "rewrite IH, join0l, join0r, addE0l; auto with arith.",
            "VernacExtend",
            "286d3fb27b2bc20fde6920b0ba428215d4c4cc73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_addl n (x y z : vect n) : (x + y) \u2228 z = x \u2228 z + y \u2228 z.",
            "VernacStartTheoremProof",
            "5396bbe5986d5b5a14317e866c04dd1d7102111a"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "apply (add_multKl p); auto.",
            "VernacExtend",
            "d8df24b9d8fa982ffaa697acabefe391209fd837"
        ],
        [
            "destruct x; destruct y; destruct z.",
            "VernacExtend",
            "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
            "VernacExtend",
            "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
        ],
        [
            "rewrite conj_add, !addE_assoc; auto.",
            "VernacExtend",
            "2af3526902486da5dd77578a3c66c73b16aae781"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite IH, addE_com, !addE_assoc; auto.",
            "VernacExtend",
            "78c88575968029f80232b3d262c4dd90bc74a7bb"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_addr n (x y z : vect n) : z \u2228 (x + y) = z \u2228 x + z \u2228 y.",
            "VernacStartTheoremProof",
            "0820eedf1960d81bc8fe21710dfcab70af0580c5"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros; apply (add_multKr p); auto.",
            "VernacExtend",
            "bef705bbd270bdcf25983a12b6d3c79b4ca27ab7"
        ],
        [
            "destruct x; destruct y; destruct z.",
            "VernacExtend",
            "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
            "VernacExtend",
            "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
        ],
        [
            "rewrite !addE_assoc; auto.",
            "VernacExtend",
            "ce214b315400588aac8118eb43bbb788a8f0634d"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite IH, addE_com,!addE_assoc; auto.",
            "VernacExtend",
            "78c88575968029f80232b3d262c4dd90bc74a7bb"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjf_join n (x y: vect n) : (x \u2228 y) ^_'f = x ^_'f \u2228 y ^_'f.",
            "VernacStartTheoremProof",
            "b7b158ce6a193eeeeef78928924c587ce2cd37e9"
        ],
        [
            "induction n as [| n IH]; auto; simpl; Vfold n.",
            "VernacExtend",
            "234c1213ae30fd3e7ce8be608aca8d8c90ab9bc1"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "rewrite conj_add, IH, !conjt, !IH, conj_invo, !join_scall, !join_scalr; auto.",
            "VernacExtend",
            "b39e34fb4ae980f6fe0f28b9e70dde2a38bbbedc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_assoc n (x y z : vect n) : x \u2228 y \u2228 z = x \u2228 (y \u2228 z).",
            "VernacStartTheoremProof",
            "1c7aea438676d048e74d4ddbf8e1618c79480136"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite multK_assoc; auto.",
            "VernacExtend",
            "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
        ],
        [
            "destruct x; destruct y; destruct z.",
            "VernacExtend",
            "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "2: rewrite IH; auto.",
            "VernacExtend",
            "fa4c2a49122efb0e0e971fe9eeeb717c08ee788d"
        ],
        [
            "rewrite join_addr, join_addl, !addE_assoc; auto.",
            "VernacExtend",
            "79169945c470f313c6a8b67133119f992159d126"
        ],
        [
            "repeat apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "ee3c55b5a98a56c0479089302cbf5110b4ac9b87"
        ],
        [
            "rewrite <- IH.",
            "VernacExtend",
            "ec7c6463021327bc4948e960954569dd6834561d"
        ],
        [
            "apply f_equal2 with (f := join n); auto.",
            "VernacExtend",
            "14e66b6e63114f4af5043cabe8baeab96c1dd181"
        ],
        [
            "rewrite conjf_join; auto.",
            "VernacExtend",
            "d95125a54b47a1a88098a28ecb2c9d56b05cf6b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_join_com n (vs: list (vect n)) : (forall x y, In x vs -> In y vs -> y \u2228 x = (- (1)).* (x \u2228 y)) -> forall x y, cbl _ vs x -> cbl _ vs y -> y \u2228 x = (- (1)).* (x \u2228 y).",
            "VernacStartTheoremProof",
            "fc269286ae75e15810970c8c82e916b6542dd864"
        ],
        [
            "intros H x y Hx; elim Hx; clear x Hx.",
            "VernacExtend",
            "b03e0da6294a175cebc9b1e1b708680b54932433"
        ],
        [
            "intros; rewrite join0l; rewrite join0r; rewrite scalE0r; auto.",
            "VernacExtend",
            "67558ec1547594adc6c242c80d89e79bf96cf5e5"
        ],
        [
            "intros vx Hvx Hy; elim Hy; clear y Hy; auto.",
            "VernacExtend",
            "462d1e99e64efe77e96594370f459f0d3c9b265b"
        ],
        [
            "rewrite join0l, join0r, scalE0r; auto.",
            "VernacExtend",
            "ede9ef0f0518cf685fffa71a356fb7941e825490"
        ],
        [
            "intros x y Hx Hx1 Hy Hy1; rewrite join_addl, Hx1, Hy1, <- scal_addEr, join_addr; auto.",
            "VernacExtend",
            "ffbc431264b2b68d781d64c3ab7b62ea21c6ad11"
        ],
        [
            "intros k x Hx Hx1.",
            "VernacExtend",
            "2b09d44292c93c18f26a186272d2103f24f3c202"
        ],
        [
            "rewrite join_scall, Hx1, <- scal_multE, join_scalr, <- scal_multE, multK_com; auto.",
            "VernacExtend",
            "a85369ba3c102dbe0a72f9190e6b8376c8ba9c56"
        ],
        [
            "intros x y1 Hx Hxrec Hy1 Hy1rec Hy.",
            "VernacExtend",
            "727ea32fe8ce99626e3c2ac4e1b592e039061faf"
        ],
        [
            "rewrite join_addr, Hxrec, Hy1rec; auto.",
            "VernacExtend",
            "cbf61df63bd1f625e8a7c34f1e3b1aa789bfb6dd"
        ],
        [
            "rewrite <- scal_addEr, join_addl; auto.",
            "VernacExtend",
            "40bbd6508ab5b7e882abf43e52278dba60ec2718"
        ],
        [
            "intros k x Hx Hxrec Hy.",
            "VernacExtend",
            "7dd1a1c3bccbe06058ae9a4ede49ed8df3de682f"
        ],
        [
            "rewrite join_scalr, Hxrec, <- scal_multE, join_scall, <- scal_multE, multK_com; auto.",
            "VernacExtend",
            "bbaff2b2066301673114bdd6e33ca59d9406e82f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_base_join_com n x y : cbl _ (base n 1) x -> cbl _ (base n 1) y -> y \u2228 x = (- (1)).* (x \u2228 y).",
            "VernacStartTheoremProof",
            "f1c431584e5bfe93d928d5dbcc919dc3fadfabbc"
        ],
        [
            "apply (cbl_join_com n).",
            "VernacExtend",
            "dc55e383ab31365912fce787c687b7eebbad018e"
        ],
        [
            "intros x1 y1 Hx Hy.",
            "VernacExtend",
            "2c801f18e913e53c4d66a3e03a79f739311092a7"
        ],
        [
            "case (e_in_base1_ex _ _ Hx); intros i (Hi, Hi1).",
            "VernacExtend",
            "644d706484d2b3335b36bb4e9b1d084150800d00"
        ],
        [
            "case (e_in_base1_ex _ _ Hy); intros j (Hj, Hj1).",
            "VernacExtend",
            "3832755871785d313d9e5b77dc07e00751240b96"
        ],
        [
            "rewrite Hi1; rewrite Hj1.",
            "VernacExtend",
            "2e40ab40a228242b04cf5b6bb7a9c662b5562ed6"
        ],
        [
            "rewrite <- (addE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "84e425537ed68ccfc9348fef669063318831d6d4"
        ],
        [
            "rewrite <- (join_es n j i), addE_assoc, scal_addE0, addE0r; auto.",
            "VernacExtend",
            "4fa7d5b6f59e4de2b3dfc42a843670318cf8f53b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_join_id n vs : (forall x y, In x vs -> In y vs -> join n y x = (- (1)).* (x \u2228 y)) -> (forall x, In x vs -> x \u2228 x = 0) -> forall x, cbl _ vs x -> x \u2228 x = 0.",
            "VernacStartTheoremProof",
            "2e6f1bb19b4d0ba21cae357946359400c325c0ca"
        ],
        [
            "intros H H1 x Hx; elim Hx; clear x Hx; auto.",
            "VernacExtend",
            "db903afd24ddb412f349b0d5709e94d0fb53a08f"
        ],
        [
            "intros; rewrite join0l; auto.",
            "VernacExtend",
            "b8d3dfdddab7f12b4f32262dc77cb50fb578fdea"
        ],
        [
            "intros x y Hx Hxrec Hy Hyrec.",
            "VernacExtend",
            "6de7ec2686bf3f3274fcbd3d4df56c04e7ed34e2"
        ],
        [
            "rewrite join_addr, join_addl, join_addl, Hxrec, Hyrec, addE0l, addE0r; auto.",
            "VernacExtend",
            "672d0f92c6ec823c1b250ea3013728ff3ca5df8d"
        ],
        [
            "rewrite (cbl_join_com _ _ H x), addE_com, scal_addE0; auto.",
            "VernacExtend",
            "84a46bd0e22c38039ae161fae43d32be69268b29"
        ],
        [
            "intros k x Hx IH; rewrite join_scall, join_scalr, IH, scalE0r, scalE0r; auto.",
            "VernacExtend",
            "bf10f3f2fb1f0693916db13ce5de6434a0c825bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_base_join_id n x : cbl _ (base n 1) x -> x \u2228 x = 0.",
            "VernacStartTheoremProof",
            "bec0fc9d453ad48993bdccf9705878a062693561"
        ],
        [
            "intros Hx; apply (cbl_join_id n (base n 1)); auto; clear x Hx.",
            "VernacExtend",
            "343c8e455220a226b8b194e91b4e2c87a4659613"
        ],
        [
            "intros x y Hx Hy.",
            "VernacExtend",
            "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
        ],
        [
            "case (e_in_base1_ex _ _ Hx); intros i (Hi, Hi1).",
            "VernacExtend",
            "644d706484d2b3335b36bb4e9b1d084150800d00"
        ],
        [
            "case (e_in_base1_ex _ _ Hy); intros j (Hj, Hj1).",
            "VernacExtend",
            "3832755871785d313d9e5b77dc07e00751240b96"
        ],
        [
            "rewrite Hi1; rewrite Hj1.",
            "VernacExtend",
            "2e40ab40a228242b04cf5b6bb7a9c662b5562ed6"
        ],
        [
            "rewrite <- (addE0l (vn_eparams n)), <- (join_es n j i), addE_assoc, scal_addE0, addE0r; auto.",
            "VernacExtend",
            "84bc4c4ad5536fe14dccd5bb80d0072117dec5ec"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "case (e_in_base1_ex _ _ Hx); intros i (Hi, Hi1).",
            "VernacExtend",
            "644d706484d2b3335b36bb4e9b1d084150800d00"
        ],
        [
            "rewrite Hi1, join_e; auto.",
            "VernacExtend",
            "a97bbe990e36d14e7aefda311727e27f8a7319ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_hom1_id n x : hom n 1 x -> x \u2228 x = 0.",
            "VernacStartTheoremProof",
            "a92e6e92160b8a3f194edfc701fd412ae851bb07"
        ],
        [
            "rewrite <-cbl1_hom1_equiv.",
            "VernacExtend",
            "2ba6aab797ea092e1704a86e4cd16f4147d09661"
        ],
        [
            "intros; apply cbl_base_join_id; auto.",
            "VernacExtend",
            "1737d0edd32ec4c0f3f7dfca2b963f3985c6170d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_join n x y : lift n (x \u2228 y) = lift n x \u2228 lift n y.",
            "VernacStartTheoremProof",
            "0fe8bde99dd13c4969e90c4f5dbd14bde7c400f0"
        ],
        [
            "unfold lift; simpl; try Vfold n.",
            "VernacExtend",
            "849ebe511939fb78e3cfe57904f5e17896b57209"
        ],
        [
            "rewrite join0l, addE0l, join0r; auto.",
            "VernacExtend",
            "dd6fe0f5505c26d91e5bbb01a84948adf012bd47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_hom n k1 k2 (x y: vect n) : hom n k1 x -> hom n k2 y -> hom n (k1 + k2) (x \u2228 y).",
            "VernacStartTheoremProof",
            "5d357fb1a0d85dbc31000a5b15f8f5ef9dd00280"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [|k1] [|k2]; simpl; auto.",
            "VernacExtend",
            "8d6e5065d98eacfb2cad6a5c9453db513c173ed3"
        ],
        [
            "intros _; case eqK_spec; auto; intros HH HH1; try discriminate.",
            "VernacExtend",
            "3f25c1ddbda11b9d35b3722cb48c601b298bec1b"
        ],
        [
            "rewrite HH, multK0r, eqKI; auto.",
            "VernacExtend",
            "146b9750e0c522ec943b9af77a6d0c4f349edea7"
        ],
        [
            "case eqK_spec; auto; intros HH HH1 _; try discriminate.",
            "VernacExtend",
            "a54243a2c832010d72e5d2111dca5c66042c4253"
        ],
        [
            "rewrite HH, multK0l, eqKI; auto.",
            "VernacExtend",
            "8cc21617b65ae20afcfd60f8e8d1fa1ad4a39b85"
        ],
        [
            "intros _; case eqK_spec; auto; intros HH HH1; try discriminate.",
            "VernacExtend",
            "3f25c1ddbda11b9d35b3722cb48c601b298bec1b"
        ],
        [
            "rewrite HH, multK0r, eqKI; auto.",
            "VernacExtend",
            "146b9750e0c522ec943b9af77a6d0c4f349edea7"
        ],
        [
            "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2]; simpl; auto; Vfold n.",
            "VernacExtend",
            "7c0c4bc4855d39118f98f5c1e55c5fb141e560ed"
        ],
        [
            "case eq0_spec; case eq0_spec; try (intros; discriminate); intros HH1 HH2; subst.",
            "VernacExtend",
            "701956c7ff16218a4f331b4baef8f9e644751206"
        ],
        [
            "rewrite join0l, join0r, addE0l, eq0I; auto; intros HH1 HH2.",
            "VernacExtend",
            "a9dd68ee534e5ff0c2174931c8aa8993b5d063d4"
        ],
        [
            "rewrite (hom0E _ _ HH1), (hom0E _ _ HH2), joink, hom0K; auto.",
            "VernacExtend",
            "33b99b4f3a31540fce3133655055f75a6b40df87"
        ],
        [
            "case eq0_spec; try (intros; discriminate); intros HH1 HH2 HH3; subst.",
            "VernacExtend",
            "03b4e9dbf024e7c7df2bcf0f1ecf6bb2f94be760"
        ],
        [
            "rewrite join0l, addE0l; auto.",
            "VernacExtend",
            "9092ad0851e303379e5260dbf7b78e64e245a4ff"
        ],
        [
            "generalize (IH x2 y1 0%nat k2.+1 HH2).",
            "VernacExtend",
            "230824b094b1d9c6a43b90afd660acb328f23c94"
        ],
        [
            "intros HH4.",
            "VernacExtend",
            "7a9bc088eebb1bedbc4ce1401f64e329a0bc5b92"
        ],
        [
            "rewrite (IH _ _ 0%nat k2); auto.",
            "VernacExtend",
            "f73209197dc45e0d7cdf6ca74953b3bb72dba152"
        ],
        [
            "apply (IH _ _ 0%nat k2.+1); auto.",
            "VernacExtend",
            "59a0dde42b68b76ff8a7976cc2aa6a0c92f5febe"
        ],
        [
            "generalize HH3; case hom; auto; intros; discriminate.",
            "VernacExtend",
            "4eed288d2bddf0dc21b14b24dfcbb478db902130"
        ],
        [
            "generalize HH3; case hom; auto.",
            "VernacExtend",
            "72d522f2c77c32df2eb6436e27c743268cdf8d00"
        ],
        [
            "case eq0_spec; try (intros; discriminate); intros HH1 HH2 HH3; subst.",
            "VernacExtend",
            "03b4e9dbf024e7c7df2bcf0f1ecf6bb2f94be760"
        ],
        [
            "rewrite join0r, addE0r, <- plus_n_O; auto.",
            "VernacExtend",
            "009c99ee015de727e10360468f04f08affca38af"
        ],
        [
            "pattern k1 at 1; rewrite (plus_n_O k1).",
            "VernacExtend",
            "60bf6992046887623480ce3ef3480c0f4cf9465f"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "rewrite (plus_n_O k1.+1).",
            "VernacExtend",
            "aac1f41360220862645428db36393e653b729cd9"
        ],
        [
            "apply IH; auto.",
            "VernacExtend",
            "ab7c838ddd716a3b14059f64c365105253349c54"
        ],
        [
            "generalize HH2; case hom; auto; intros; discriminate.",
            "VernacExtend",
            "68190841072a6abc548cbdc4b3cbef09adbf4a87"
        ],
        [
            "generalize HH2; case hom; auto; intros; discriminate.",
            "VernacExtend",
            "68190841072a6abc548cbdc4b3cbef09adbf4a87"
        ],
        [
            "intros HH1 HH2.",
            "VernacExtend",
            "73da631e2c763e0cfe29b2b1efe09ef1b4873d80"
        ],
        [
            "assert (Hx1: hom n k1 x1).",
            "VernacExtend",
            "7f35ff018fc097841a609cd9dfbbd7ef2ce648e9"
        ],
        [
            "generalize HH1; case hom; auto.",
            "VernacExtend",
            "32b73952960eb29d93be4f762c29746a14160f8e"
        ],
        [
            "assert (Hx2: hom n k1.+1 x2).",
            "VernacExtend",
            "6c5b8b47bc3de60cdf9405a27978da691aad4cb8"
        ],
        [
            "generalize HH1; rewrite Hx1; auto.",
            "VernacExtend",
            "f375d75890efde357ce4f5e0c05cfd6f85305511"
        ],
        [
            "assert (Hy1: hom n k2 y1).",
            "VernacExtend",
            "6a342c773c6002363c0558e9510ff01a6df40e74"
        ],
        [
            "generalize HH2; case hom; auto.",
            "VernacExtend",
            "a3b04198395d8e2aacaa8c089ec05628a5591674"
        ],
        [
            "assert (Hy2: hom n k2.+1 y2).",
            "VernacExtend",
            "e27d79b4a565d3e487d2bc0e02c4e2b4a0cd58a6"
        ],
        [
            "generalize HH2; rewrite Hy1; auto.",
            "VernacExtend",
            "fe1855f8edcd8e59633531e65d71c73ae899982d"
        ],
        [
            "rewrite add_hom; auto.",
            "VernacExtend",
            "aec76efedf2adfbd6baa817954a8188e4fad087e"
        ],
        [
            "apply (IH _ _ k1.+1 k2.+1); auto.",
            "VernacExtend",
            "3d4ac702ff31ccdfbe1badfc517b00c54e269dcf"
        ],
        [
            "rewrite <- Plus.plus_Snm_nSm.",
            "VernacExtend",
            "81f2adf51f45cca9ce405dc47c99d5046741f60c"
        ],
        [
            "apply IH; auto.",
            "VernacExtend",
            "ab7c838ddd716a3b14059f64c365105253349c54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve join_hom.",
            "VernacHints",
            "06c66619f2f8f77f35b02d8bb067a6dce62aa65c"
        ],
        [
            "Lemma join_big n k1 k2 (x y : vect n) : hom n k1 x -> hom n k2 y -> n < k1 + k2 -> x \u2228 y = 0.",
            "VernacStartTheoremProof",
            "4f3be4eec66efca06f1013a71d84f2c0465ec8b8"
        ],
        [
            "intros Hx Hy Hlt; apply hom_lt with (k1 + k2)%nat; auto.",
            "VernacExtend",
            "bec2cd2ba6d00737bd8b7ff3132c5347faea6653"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const_join n (x y: vect n): 'C[x \u2228 y] = ('C[x] * 'C[y])%f.",
            "VernacStartTheoremProof",
            "3c011df8497c656dc79f5a43d356532ec8f173d9"
        ],
        [
            "induction n as [| n IH]; auto; simpl; try Vfold n.",
            "VernacExtend",
            "c3709a7fa359654a333f9e914a0cd7ecdad13148"
        ],
        [
            "destruct x; destruct y; simpl; auto.",
            "VernacExtend",
            "614cfef5ea21474c7ae778ecba30d154f3fcc9a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_decomp n (x y: vect n) : (x, y) = 'e_0 \u2228 x^'l + y^'l.",
            "VernacStartTheoremProof",
            "d321c7918ee580a8ea4e42a6e2ba853c8ede5540"
        ],
        [
            "simpl; Vfold n; rewrite conj0, !join0l, !addE0r, addE0l, join1l; auto.",
            "VernacExtend",
            "ee84d042a36bbf27a0ba869f16bee1be4873fb88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma base_in n k x: In x (base n k.+1) -> exists i, exists y, x = 'e_i \u2228 y /\\ In y (base n k).",
            "VernacStartTheoremProof",
            "5d6bdb088ac908f8163b24a60901ee9689e30348"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros k [].",
            "VernacExtend",
            "c55ace338c9e9989d901e06380d6257266708513"
        ],
        [
            "intros [| k] HH; destruct x as [x1 x2].",
            "VernacExtend",
            "a993805243758e29ce705af1ee7d5e8008871f00"
        ],
        [
            "case (in_app_or _ _ _ HH); rewrite in_map_iff; intros (x, (H1x, H2x)); injection H1x; intros; subst.",
            "VernacExtend",
            "3bf26d39df69b937d150cf0ecc272b65f15fc50d"
        ],
        [
            "exists 0%nat; exists (lift n x1); simpl; split; Vfold n.",
            "VernacExtend",
            "d1a581579dc14b95f03ce616934c6146552d81a6"
        ],
        [
            "rewrite join0l, join0r, join1l, addE0r; auto .",
            "VernacExtend",
            "47d152d20a6e2682c49874c056b776fdc1c0e59b"
        ],
        [
            "apply in_map; auto.",
            "VernacExtend",
            "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
        ],
        [
            "case (IH x2 0%nat); auto; intros i (y, (H1y, H2y)).",
            "VernacExtend",
            "1215f6bf56cb884d0fa25036e4e9283b71366c61"
        ],
        [
            "exists (1 + i)%nat; exists (lift n y); simpl; split; Vfold n.",
            "VernacExtend",
            "ee1bce6d5d5751c976d4369a387cb18427f0fb25"
        ],
        [
            "rewrite join0l, join0r, addE0r, H1y; auto .",
            "VernacExtend",
            "411aa01b3826d0ae4f2949b46a49b8264393b77f"
        ],
        [
            "apply in_map; auto.",
            "VernacExtend",
            "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
        ],
        [
            "case (in_app_or _ _ _ HH); rewrite in_map_iff; intros (x, (H1x, H2x)); injection H1x; intros; subst.",
            "VernacExtend",
            "3bf26d39df69b937d150cf0ecc272b65f15fc50d"
        ],
        [
            "exists 0%nat; exists (lift n x1); simpl; split; Vfold n.",
            "VernacExtend",
            "d1a581579dc14b95f03ce616934c6146552d81a6"
        ],
        [
            "rewrite join0l, join0r, join1l, addE0r; auto .",
            "VernacExtend",
            "47d152d20a6e2682c49874c056b776fdc1c0e59b"
        ],
        [
            "apply in_or_app; right; apply in_map; auto.",
            "VernacExtend",
            "ec3da475b92b9bd267d2592c154df5f3b6b8cbb8"
        ],
        [
            "case (IH x2 k.+1%nat); auto; intros i (y, (H1y, H2y)).",
            "VernacExtend",
            "994cada2c8c2775a84f61088049249b33dd08509"
        ],
        [
            "exists (1 + i)%nat; exists (lift n y); simpl; split; Vfold n.",
            "VernacExtend",
            "ee1bce6d5d5751c976d4369a387cb18427f0fb25"
        ],
        [
            "rewrite join0l, join0r, addE0r, H1y; auto .",
            "VernacExtend",
            "411aa01b3826d0ae4f2949b46a49b8264393b77f"
        ],
        [
            "apply in_or_app; right; apply in_map; auto.",
            "VernacExtend",
            "ec3da475b92b9bd267d2592c154df5f3b6b8cbb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint all_prods (n: nat) (vs: list (vect n)) {struct vs} : list (vect n) := match vs with nil => 1 :: nil | v::vs1 => let vs1 := all_prods n vs1 in (map (join n v) vs1 ++ vs1)%list end.",
            "VernacFixpoint",
            "175eefcec3e98c768bbb53cc8bae167a37475ad9"
        ],
        [
            "Lemma all_prods_nil n : all_prods n nil = 1 :: nil.",
            "VernacStartTheoremProof",
            "6fb3afb0a16d7ebd0a89b58757408472b45d85e0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods_cons n v vs : all_prods n (v :: vs) = (map (join n v) (all_prods n vs) ++ (all_prods n vs))%list.",
            "VernacStartTheoremProof",
            "464f36780296945ee194860bcdb244a2c76d00fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods1 n vs : In (1) (all_prods n vs).",
            "VernacStartTheoremProof",
            "7516d2ab0fa59080b5adc92e2ce59ee58d4b027d"
        ],
        [
            "induction vs as [| v vs IH]; simpl; auto with datatypes.",
            "VernacExtend",
            "c01553739a4704dcb13608dd712457a3d9084b8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods_id n vs : incl vs (all_prods n vs).",
            "VernacStartTheoremProof",
            "1ca83e39d6e4bfbb87a8e4d06485f73d24c20413"
        ],
        [
            "induction vs as [| v vs IH]; intros x; simpl In; auto.",
            "VernacExtend",
            "d88c28f2f788f3805999d149de17dfd02dbb66f2"
        ],
        [
            "intros [H1 | H1]; auto with datatypes.",
            "VernacExtend",
            "d8e5442b32bb2934ef07a1684eddb160cff35053"
        ],
        [
            "apply in_or_app; left; rewrite <- H1.",
            "VernacExtend",
            "1ba5b76cb6760dec3e2429d647426560835972f8"
        ],
        [
            "pattern v at 1; rewrite <- (join1r n v); apply in_map.",
            "VernacExtend",
            "b508be72bf21a61b81e9fd1a212619059bf8b219"
        ],
        [
            "apply all_prods1.",
            "VernacExtend",
            "80b4461720e1d0af421726f2b23d962a89553c85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods_length n vs : length (all_prods n vs) = exp 2 (length vs).",
            "VernacStartTheoremProof",
            "ddef318fb52f60af801990b4ae81a6c4e328a20b"
        ],
        [
            "induction vs as [| v vs IH]; simpl all_prods; auto.",
            "VernacExtend",
            "71df22ff50a7fd83f70219d737169cd456b9bc38"
        ],
        [
            "rewrite app_length; rewrite map_length; rewrite IH.",
            "VernacExtend",
            "585f6a3a647837d45f870488149e1e1dc42e5945"
        ],
        [
            "simpl length; rewrite expS; simpl; auto with arith.",
            "VernacExtend",
            "d3f15ad407822e4cdb1e9d30d3fed4c229866ca5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods_lift n vs : all_prods n.+1 (map (lift n) vs) = map (lift n) (all_prods n vs).",
            "VernacStartTheoremProof",
            "1abe0fd68a91a313b8cf639c067b3b5576eaa3f1"
        ],
        [
            "induction vs as [| v vs IH].",
            "VernacExtend",
            "3bb558582565db25eb750548bde8443fbd0ba694"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "simpl map; rewrite (all_prods_cons n.+1).",
            "VernacExtend",
            "2951aa4ecd9eb33b1429caea332bf7c640ff338d"
        ],
        [
            "change (vect n * vect n)%type with (vect n.+1).",
            "VernacExtend",
            "f60a7b990ddeea10400d072bacc26aa80712420c"
        ],
        [
            "rewrite map_app; rewrite IH.",
            "VernacExtend",
            "aecbad5a3d54aabb059006151be6ed8c8a485ebd"
        ],
        [
            "apply f_equal2 with (f := @app (vect n.+1)); auto.",
            "VernacExtend",
            "1f0d62f26c9669172cd0bf21646eb88a761c0d4c"
        ],
        [
            "elim all_prods; auto.",
            "VernacExtend",
            "5fc91a8cade9d86f63b45e2e5cc248d8711f5f0e"
        ],
        [
            "intros a l IH1.",
            "VernacExtend",
            "1efbc0c8e77f24cec81fa0a7b2bfefb36c07ea52"
        ],
        [
            "assert (map_cons: forall (A B: Type) (f: A -> B) a l, map f (a:: l) = f a :: map f l); auto.",
            "VernacExtend",
            "d3563c10ebfebc1b9f6230f1302ef8d8f441c9b4"
        ],
        [
            "rewrite !map_cons, IH1, lift_join; auto.",
            "VernacExtend",
            "c26ffbb0ca3ab3c57b319c0aca83e86c7799eac1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods_hom n vs : (forall i, In i vs -> exists k, hom n k i) -> (forall i, In i (all_prods n vs) -> exists k, hom n k i).",
            "VernacStartTheoremProof",
            "c610436ee61851151d3ee3fee315f4c483b6e865"
        ],
        [
            "induction vs as [| v vs IH]; simpl.",
            "VernacExtend",
            "dbea37c1950c0c40977921e59c7611df5b19d4ad"
        ],
        [
            "intros _ i [[]|[]]; exists 0%nat; apply hom0K.",
            "VernacExtend",
            "ce654bf8a06cdffb8ef3648e88752912594f4d21"
        ],
        [
            "intros H i Hi; case (in_app_or _ _ _ Hi); clear Hi; intros Hi.",
            "VernacExtend",
            "08dd87c8cc6e1def7a72fc2b096c5e000f781e25"
        ],
        [
            "rewrite in_map_iff in Hi; case Hi; intros v1 (H1v,H2v); subst.",
            "VernacExtend",
            "69475a64bb6f60643f30e0cb9465f494ab7e5a32"
        ],
        [
            "assert (H1: forall i, In i vs -> exists k : nat, hom n k i); auto with datatypes.",
            "VernacExtend",
            "e8bd2fea623c4113f5dc99486ce20f5cbf110c5f"
        ],
        [
            "case (H v); auto; intros k1 Hk1.",
            "VernacExtend",
            "307102da410b6b1a2bb9ca14cba16d5ce71ef401"
        ],
        [
            "case (IH H1 v1); auto; intros k2 Hk2.",
            "VernacExtend",
            "4ec970b82770b3f3589dc74e1a3b46539fe32fd1"
        ],
        [
            "exists (k1 + k2)%nat; auto.",
            "VernacExtend",
            "7a2319ee4cfa4f641a44f9b82f41622338ebe62e"
        ],
        [
            "apply IH; auto.",
            "VernacExtend",
            "ab7c838ddd716a3b14059f64c365105253349c54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint v2l (n: nat) : vect n -> list K := match n return vect n -> list K with O => fun k => k :: nil | S n1 => fun x => let (x1, x2) := x in (v2l n1 x1 ++ v2l n1 x2)%list end.",
            "VernacFixpoint",
            "2412596ca75b4c528f9dba24b9ccc7e20c634d24"
        ],
        [
            "Lemma v2l_length n v : length (v2l n v) = exp 2 n.",
            "VernacStartTheoremProof",
            "f692bdf05dab4e41514b907c873ee28b446b1eca"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "simpl; destruct v; rewrite app_length; rewrite IH; rewrite IH.",
            "VernacExtend",
            "7142f353c8142884a5cdcdb12b1f1de5acc96e05"
        ],
        [
            "case n; auto.",
            "VernacExtend",
            "9e0de88c8c640757fc906751ce11b2a80762e3de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_2l n (v: vect n) : v2l n v *X* all_prods n (base n 1) = v.",
            "VernacStartTheoremProof",
            "74a29b273f7ee5db48650e352186b0ef9a630e7a"
        ],
        [
            "induction n as [| n IH].",
            "VernacExtend",
            "bec3d336f40e4640fd88fbd8808c6c8e8800159f"
        ],
        [
            "unfold mprod; simpl; rewrite multK1r; auto; rewrite addK0r; auto.",
            "VernacExtend",
            "c938eedcad913b4485fe9a07e901a2f6f5220915"
        ],
        [
            "assert (UUn := fn n); assert (UUsn := fn n.+1).",
            "VernacExtend",
            "b50a5c63b6ed46f390ab2a2702c077dd284e2dd2"
        ],
        [
            "simpl vect; destruct v as [x1 x2].",
            "VernacExtend",
            "787987d4020e7ddd8ff2a6b29d33d3201e377297"
        ],
        [
            "simpl v2l; simpl base; rewrite base0, en_def; simpl app; unfold dlift.",
            "VernacExtend",
            "3663a9c8bca428d9386a721e7deaea80e4ba35eb"
        ],
        [
            "rewrite (all_prods_cons n.+1).",
            "VernacExtend",
            "f2e834dcaa95dca48a1c15c2b3746c24d365884c"
        ],
        [
            "rewrite mprod_app; auto.",
            "VernacExtend",
            "57ec243ebbcd8e6c93e960a6404a0e71d0a5fe4e"
        ],
        [
            "2: rewrite v2l_length, map_length, all_prods_length, map_length, base_length; auto.",
            "VernacExtend",
            "f88c2e1c9526a5bdefff1bf24e9a58bd2b4185f3"
        ],
        [
            "rewrite (all_prods_lift n), (lift_mprod n), IH, map_map.",
            "VernacExtend",
            "3fafcf3a02a00673ac834003a86437183b8d9fa2"
        ],
        [
            "replace ((v2l n x1) *X* (map (fun x : vect n => ((1: vect n, 0: vect n): vect n.+1) \u2228 lift n x) (all_prods n (base n 1)))) with (x1, 0: vect n); auto.",
            "VernacExtend",
            "a1e386d092735ff345fad92f0bb2eb0f5b200ab3"
        ],
        [
            "simpl; Vfold n; rewrite addE0l, addE0r; auto.",
            "VernacExtend",
            "9271af485e94525c2984579618cd689465134f8c"
        ],
        [
            "change ((1: vect n, 0: vect n): vect n.+1) with ('e_0: vect n.+1).",
            "VernacExtend",
            "c6c995b7f0470a09ea06a557fa0e74ee91db472a"
        ],
        [
            "assert (H: forall l, map (fun x : vect n => 'e_0 \u2228 (lift n x)) l = map (fun x => (x, genk n 0)) l).",
            "VernacExtend",
            "938f3bc942ecf0c3bc64708980e5dedd9a2cadf8"
        ],
        [
            "induction l as [| a l Hlrec]; simpl; Vfold n; auto.",
            "VernacExtend",
            "72cca978d3b991512eb0d4db6dffd3e4318c60f2"
        ],
        [
            "apply f_equal2 with (f := @cons (vect n.+1)); auto.",
            "VernacExtend",
            "24d3399cdd0e083f025b5accaa91c35a556f454f"
        ],
        [
            "rewrite join1l, conj0, join0l, addE0r, join0l; auto.",
            "VernacExtend",
            "a4c76748fa1338293123d04587c5313c5a5a75f0"
        ],
        [
            "rewrite H; clear H.",
            "VernacExtend",
            "a60de8fe6903e17bd74acece0951cbb10e6ef842"
        ],
        [
            "assert (H: forall l1 (l2: list (vect n)), mprod (vn_eparams n.+1) l1 (map (fun x => (x, genk n 0)) l2) = (mprod (vn_eparams n) l1 l2, genk n 0)).",
            "VernacExtend",
            "cb761be517152ffbf1fe6b49bd1278619ae9550c"
        ],
        [
            "induction l1 as [| a l1 Hlrec]; intros [| b l2]; auto.",
            "VernacExtend",
            "44ff27c7b7d91f2a155c66d540f4954198ba2d20"
        ],
        [
            "simpl map; rewrite (mprod_S), Hlrec; auto.",
            "VernacExtend",
            "c0923cc891afde0751c9e102b1c90491608c69e7"
        ],
        [
            "simpl; Vfold n; rewrite scalE0r, addE0l, mprod_S; auto.",
            "VernacExtend",
            "4c21f988e1d17c2c0bdcf1d1338642dfef5ef722"
        ],
        [
            "rewrite H, IH; auto.",
            "VernacExtend",
            "dfe12b7001f8ad7dc323bf8392e0319b012e80a2"
        ],
        [
            "rewrite bin_1; auto.",
            "VernacExtend",
            "9fa5002171712cfbe19d6ca9c41b9adc18d28cc9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_all_prods n v : cbl _ (all_prods _ (base n 1)) v.",
            "VernacStartTheoremProof",
            "e638faf634b45c67fbaf2834ea1c82502e7c8e36"
        ],
        [
            "rewrite <- (mprod_2l n v); apply mprod_cbl; auto.",
            "VernacExtend",
            "e42f9e7fcc81c70c684d8b504e1c0c4e71d8214b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_prods_free n: free _ (all_prods _ (base n 1)).",
            "VernacStartTheoremProof",
            "bcc4215fc72339ebb8c57984d4a09e34c2b3b645"
        ],
        [
            "induction n as [| n IH]; intros ks.",
            "VernacExtend",
            "fa7fc8c4aa79434761a7f384212c0cc6cac18b90"
        ],
        [
            "simpl; case ks; try (intros; discriminate).",
            "VernacExtend",
            "95356ddd8b3957d0bb3eceec7c9e28e9f4439899"
        ],
        [
            "intros k1 [| k2 l]; try (intros; discriminate); simpl.",
            "VernacExtend",
            "8b5d79abd8d450e26ea9bbfb8f5f827afa3b24ef"
        ],
        [
            "unfold mprod; simpl.",
            "VernacExtend",
            "c6a3ec1f07d3a3f3e84dbde60bd9336866bc6ebd"
        ],
        [
            "rewrite multK1r; auto; rewrite addK0r; auto; intros _ H k.",
            "VernacExtend",
            "f6f39d8ad5384c8d080c858063635e1fa41873a8"
        ],
        [
            "rewrite H; intros [H1 | H1]; auto; case H1.",
            "VernacExtend",
            "7152fe1d8eb799ff877dc7b3d2abd6355c6bc6d6"
        ],
        [
            "rewrite base1_S; simpl.",
            "VernacExtend",
            "fc32915e8c462482e514989bd1466619894f6c93"
        ],
        [
            "rewrite app_length, map_length, (all_prods_lift n), map_length; intros Hk1.",
            "VernacExtend",
            "7154c89078c8c2bc3ac1b78eb95658bc4f6be415"
        ],
        [
            "case (list_split _ _ _ _ Hk1).",
            "VernacExtend",
            "15bf1df589fc0ceba36cb3e96d468468158b79c4"
        ],
        [
            "intros l1 (l2, (Hl1, (Hl2, Hl3))).",
            "VernacExtend",
            "c53ec40a84a8efee6451d5aab2ac55aaba431a20"
        ],
        [
            "rewrite Hl1.",
            "VernacExtend",
            "d1df4d968e84cfc17f30ae638195ac54617bb6cf"
        ],
        [
            "unfold base, all_prods; fold base; fold all_prods.",
            "VernacExtend",
            "a7103c306b25fd6640a160aba11a3a573cc0b1ec"
        ],
        [
            "rewrite (mprod_app (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "7ac536e9dfdbce82901635a018337f6e24ab4703"
        ],
        [
            "2: rewrite map_length, map_length; auto.",
            "VernacExtend",
            "26efce412f2f058c9a5a09607fb992ba96341f20"
        ],
        [
            "rewrite map_map.",
            "VernacExtend",
            "ae8e13105f5289f0c1e44cbfa83eff3c6f47acee"
        ],
        [
            "assert (H1: forall l, map (fun x : vect n => join n.+1 (gen n.+1 0) (lift n x)) l = map (fun x => (x, genk n 0)) l).",
            "VernacExtend",
            "c243ecb152281a88f05282e7c14bf68c65e6487b"
        ],
        [
            "induction l as [| a l Hlrec]; simpl; auto.",
            "VernacExtend",
            "4ecdece4398921e2209525a0d6cc46029b6e762a"
        ],
        [
            "apply f_equal2 with (f := @cons (vect n.+1)); auto.",
            "VernacExtend",
            "24d3399cdd0e083f025b5accaa91c35a556f454f"
        ],
        [
            "Vfold n; rewrite join1l, conj0, join0l, addE0r, join0l; auto.",
            "VernacExtend",
            "8ddaf3a354c92bff6e4afb7ed293e44e060f2980"
        ],
        [
            "rewrite H1; clear H1.",
            "VernacExtend",
            "00d5f4aac5a8b3519e323a55e4be18868171cc4f"
        ],
        [
            "assert (H1: forall (l1: list K) (l2: list (vect n)), mprod (vn_eparams n.+1) l1 (map (fun x => (x, genk n 0)) l2) = (l1 *X* l2, genk n 0)).",
            "VernacExtend",
            "b50c14cd1dd40d31a35d3238a4f746e40824e4cf"
        ],
        [
            "clear l1 l2 Hl1 Hl2 Hl3.",
            "VernacExtend",
            "0df09f3c8ebafcc661c66950269cf0898fa4a4e9"
        ],
        [
            "induction l1 as [| a l1 Hlrec]; intros [| b l2]; auto.",
            "VernacExtend",
            "44ff27c7b7d91f2a155c66d540f4954198ba2d20"
        ],
        [
            "simpl; Vfold n.",
            "VernacExtend",
            "b9f9449f47b4fc50318b4052e4f924187e72923e"
        ],
        [
            "rewrite (mprod_S (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
        ],
        [
            "rewrite (mprod_S (vn_eparams n)); auto.",
            "VernacExtend",
            "ec5bdfd381b92a746963571db2df1b199df435a0"
        ],
        [
            "rewrite Hlrec; auto.",
            "VernacExtend",
            "1de0ff22be71cd5b4806b6b39a7723d547434f75"
        ],
        [
            "simpl; Vfold n; rewrite scalE0r, addE0l; auto.",
            "VernacExtend",
            "067cc78ab9e8cc72b2772027b55fff9f0ebcc18e"
        ],
        [
            "rewrite H1, lift_mprod.",
            "VernacExtend",
            "a98c3510bd80f107709c5be21eb8aef0ac1397e4"
        ],
        [
            "simpl; Vfold n; rewrite addE0l, addE0r; auto.",
            "VernacExtend",
            "9271af485e94525c2984579618cd689465134f8c"
        ],
        [
            "intros HH; injection HH; clear HH; intros HH1 HH2 k Hk.",
            "VernacExtend",
            "f53803f9d132e3dfbf49535969af034ca8dbd167"
        ],
        [
            "case (in_app_or _ _ _ Hk); intros Hl.",
            "VernacExtend",
            "8d4dc89ef7c54114e46e0459193f1681913df589"
        ],
        [
            "apply (IH l1); auto.",
            "VernacExtend",
            "ccac51f337e4b2a7282235ee3edcccc4bd5d5b40"
        ],
        [
            "apply (IH l2); auto.",
            "VernacExtend",
            "8ebda9cba7e32bc2ae43dbb2ceaa5a56a5084fcd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vect_induct n (P: vect n -> Prop) : P (1: vect n) -> (forall v, In v (base n 1) -> P v) -> (forall v1 v2, P v1 -> P v2 -> P (v1 \u2228 v2)) -> (forall v1 v2, P v1 -> P v2 -> P (v1 + v2)) -> (forall k v, P v -> P (k .* v)) -> (forall v, P v).",
            "VernacStartTheoremProof",
            "0205266a60b4b595f2debc18d283392d8c1c3d6d"
        ],
        [
            "intros H1 H2 H3 H4 H5 v.",
            "VernacExtend",
            "f119dc5cdc1026cdc5302b36b3d978123255f290"
        ],
        [
            "generalize (cbl_all_prods n v); intros HH; elim HH; auto; clear v HH.",
            "VernacExtend",
            "11d8b6a0e984cb7a81850ec5beafe2a85573367a"
        ],
        [
            "generalize (H5 0%f (1)); Vrm0.",
            "VernacExtend",
            "ac4d24c8b5cd1cf99798a53f4b1183bd5139225c"
        ],
        [
            "generalize (incl_refl (base n 1)).",
            "VernacExtend",
            "f22cb77896de80b31bd175d7a7ae7f6a93bf9359"
        ],
        [
            "generalize (base n 1) at 1 3.",
            "VernacExtend",
            "f7783cceeaae60a1c3b7633b97302ab9e78ab37a"
        ],
        [
            "intros l; induction l as [| a l IH]; simpl.",
            "VernacExtend",
            "f9fb8d746309aefe1d28fe032c345c274f94832b"
        ],
        [
            "intros _ v [H6|[]]; subst; auto.",
            "VernacExtend",
            "8fb5169a7b6ba3e7db55fd208aeeab495d3508c1"
        ],
        [
            "intros Hu1 v Ha.",
            "VernacExtend",
            "ef22fada80f0e3ce43c472b7408b46c6e9775b04"
        ],
        [
            "assert (Ht: incl l (base n 1)) by (intros u; auto with datatypes).",
            "VernacExtend",
            "918af55f5cd9d26ff8e40663a0f2a779eefdf223"
        ],
        [
            "case (in_app_or _ _ _ Ha); intros Hb; auto with datatypes.",
            "VernacExtend",
            "e0f502b6a2dd0405374fa11479476db0da7fd4b4"
        ],
        [
            "generalize IH Hb; elim (all_prods n l); simpl; auto.",
            "VernacExtend",
            "c60e718653b55f1f668385941b9174db0810aac5"
        ],
        [
            "intros a1 l1 IH1 H1i [H2i|H2i]; subst; auto with datatypes.",
            "VernacExtend",
            "c487777dfe4e11aa191bb5dc89ebeb458fe28b97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vect_hom_induct n (P: vect n -> Prop) : (forall k v, hom n k v -> P v) -> (forall v1 v2, P v1 -> P v2 -> P (v1 + v2)) -> (forall v, P v).",
            "VernacStartTheoremProof",
            "b91dc1ea18b00b6fa6673c664817d42c8a7c9ec5"
        ],
        [
            "intros H1 H2 v.",
            "VernacExtend",
            "9a6b64163a82ab07a97fad4a99756c1a1d1cca59"
        ],
        [
            "rewrite <-mprod_2l.",
            "VernacExtend",
            "3b85bd203ba9a00fefd1817b51f94a18a957d2ab"
        ],
        [
            "assert (F1: forall i, In i (all_prods n (base n 1)) -> exists k, hom n k i).",
            "VernacExtend",
            "f9b73d4196d6a87d843d93a53a1fee8de80736e7"
        ],
        [
            "apply all_prods_hom; intros i Hi; exists 1%nat.",
            "VernacExtend",
            "393c6542bbf1fd95ab40cb5064b74bb1a04f638f"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; constructor; auto.",
            "VernacExtend",
            "02ce3c95e20894bb8c39a962488f1d1e7f4f511a"
        ],
        [
            "generalize (v2l n v); induction (all_prods n (base n 1)) as [|a2 l2 IH]; simpl; auto.",
            "VernacExtend",
            "fb15b7bba9ef60d265862a023e196a650d95b2d1"
        ],
        [
            "intros l; rewrite mprod0r; apply (H1 0%nat); apply homk0.",
            "VernacExtend",
            "1abcddeb1b1732c1c3d38bb16c872e52fac2cd78"
        ],
        [
            "intros [|a1 l1].",
            "VernacExtend",
            "04b5bd1e5a2eb65547168ad19953a5b9a1727767"
        ],
        [
            "rewrite mprod0l; apply (H1 0%nat); apply homk0.",
            "VernacExtend",
            "cf18981029a5d2f45b93a650bcb2ae6bc4cb9083"
        ],
        [
            "rewrite mprod_S; auto; apply H2; auto with datatypes.",
            "VernacExtend",
            "9ad8ab946bd243256dbd8a1ddcbbf9df1cb22b17"
        ],
        [
            "case (F1 a2); auto with datatypes; intros k Hk.",
            "VernacExtend",
            "0c94a12ecf45ea9eaaca3ece627956885b8249fd"
        ],
        [
            "apply (H1 k); auto.",
            "VernacExtend",
            "540d3334dc2038186493a5cbfca6bfeaf554c249"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint joinl n (l: list (vect n)) := match l with | nil => 0 | a::nil => a | a::l => a \u2228 joinl n l end.",
            "VernacFixpoint",
            "30fcac65a77ea692e2a84e5de1eb337eb21c4acd"
        ],
        [
            "Lemma joinl0 n : joinl n nil = 0.",
            "VernacStartTheoremProof",
            "16e496effba6c417f43e43b26d03a177060779fc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite joinl0 : GRm0.",
            "VernacExtend",
            "ed56419810f8dcd759be3237f4316a60603fdf35"
        ],
        [
            "Lemma joinl1 n x : joinl n (x::nil) = x.",
            "VernacStartTheoremProof",
            "91e04dfaee9a606013930430214bdf60e416d665"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinlS n x l : l <> nil -> joinl n (x::l) = x \u2228 joinl n l.",
            "VernacStartTheoremProof",
            "ebdeab247efe1c65765f8621e00b7fc15d8d8b2f"
        ],
        [
            "destruct l; auto; intros []; auto.",
            "VernacExtend",
            "911a736101567766c4215068ebfce74f120d159c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_scal n k (a: vect n) l : joinl _ (k .* a::l) = k .* joinl _ (a::l).",
            "VernacStartTheoremProof",
            "be6ec201219ef43146b9bc3ed2804b6a29eff778"
        ],
        [
            "case (list_case _ l); intros Hl.",
            "VernacExtend",
            "e4ec71c0e7429e1d8ca85a703fdc585b97077fb5"
        ],
        [
            "rewrite Hl; simpl; Vfold n; auto.",
            "VernacExtend",
            "eacf5e7bb5ad9f89f10da1c37feb00c9e868352c"
        ],
        [
            "rewrite !joinlS, join_scall; auto.",
            "VernacExtend",
            "503b16235a0f390b3bc0b2cf690484d144b3545b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_app n l1 l2 : l1 <> nil -> l2 <> nil -> joinl n (l1 ++ l2)%list = joinl n l1 \u2228 joinl n l2.",
            "VernacStartTheoremProof",
            "330b1da52139175e54b9c2e5cf61a54a6587ea6e"
        ],
        [
            "induction l1 as [| a1 l1 IH].",
            "VernacExtend",
            "850a01ccd2cab8ea3b6e49eab48b5ae72b4fc3c9"
        ],
        [
            "intros H; case H; auto.",
            "VernacExtend",
            "0b36977cda16a9ec120d6463bb6c43bcda418cba"
        ],
        [
            "intros _ Hl2.",
            "VernacExtend",
            "5ac59d5be65a6e8fabf129c98dc3610dc99355ec"
        ],
        [
            "case (list_case _ l1); intros; subst; simpl app; rewrite joinlS; auto.",
            "VernacExtend",
            "d30a40008dbec19f30bdbe79374d5dc9252f7677"
        ],
        [
            "rewrite joinlS, IH, join_assoc; auto.",
            "VernacExtend",
            "87e95f4a4c19a70fc6b145941f309d363862e805"
        ],
        [
            "destruct l1; auto; try (intros; discriminate).",
            "VernacExtend",
            "02cf8770f59df2003673f7a17982289aae76702c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_base1_perm n l1 l2 : perm l1 l2 -> (forall x, In x l1 -> cbl _ (base n 1) x) -> (joinl n l1 = joinl n l2) \\/ (joinl n l1 = (-(1)).* joinl n l2) .",
            "VernacStartTheoremProof",
            "31ba49cc8792215ba903a173b7cd18a50d6e3092"
        ],
        [
            "intros H; elim H; simpl; auto; clear l1 l2 H; try Vfold n.",
            "VernacExtend",
            "1baa5edf7d7e56a801f8e3913e0e3eb1185be446"
        ],
        [
            "intros a b [|c l] IH; right.",
            "VernacExtend",
            "21f8b488879570c535221213f4f56a116cebec40"
        ],
        [
            "rewrite <-cbl_base_join_com; auto.",
            "VernacExtend",
            "c5bda4fac1ad37a19110607e46b26162d27f2b24"
        ],
        [
            "rewrite <-join_assoc, <-(join_assoc _ b), (cbl_base_join_com _ b), !join_assoc, !join_scall; auto with datatypes.",
            "VernacExtend",
            "13ffaddfb20cbb4305015d5508a4ff1c519fa7ff"
        ],
        [
            "rewrite join_assoc; auto.",
            "VernacExtend",
            "f2fea3c39c10d7c5718821237dec550104b8713b"
        ],
        [
            "intros a [|a1 l1] [|b1 l2] Hl; auto.",
            "VernacExtend",
            "6cfc37442e94dadb71c3a3c6b6cd952de43d9a7b"
        ],
        [
            "assert (HH:= perm_length _ _ _ Hl); discriminate.",
            "VernacExtend",
            "adf8e9ac3ecdf3c83d941ad9ad046a4f808204fc"
        ],
        [
            "assert (HH:= perm_length _ _ _ Hl); discriminate.",
            "VernacExtend",
            "adf8e9ac3ecdf3c83d941ad9ad046a4f808204fc"
        ],
        [
            "intros H1 H2; case H1; auto; intros H3; rewrite H3; auto.",
            "VernacExtend",
            "91443154a662238742d2c951069f0890bf455ce6"
        ],
        [
            "rewrite join_scalr; auto.",
            "VernacExtend",
            "5f533372aad5a84c54a8d5eb9aa71bcb7906631b"
        ],
        [
            "intros l1 l2 l3 Hp1 HH1 Hp2 HH2 H1.",
            "VernacExtend",
            "f46a363bfe4b178db1f24a9936e82ac52d1d288d"
        ],
        [
            "assert (H2: forall x, In x l2 -> cbl _ (base n 1) x).",
            "VernacExtend",
            "20ed2f28b71133a08f286c9aed698e6f56d20277"
        ],
        [
            "intros x Hx; apply H1; auto.",
            "VernacExtend",
            "42e1c1358646fa852825ba522606afbc3422f4cf"
        ],
        [
            "apply perm_in with (1 := perm_sym _ _ _ Hp1); auto.",
            "VernacExtend",
            "5b34289b053ddc85afdc629380cc932d2b6e57df"
        ],
        [
            "case HH1; auto; intros HH3; rewrite HH3; auto.",
            "VernacExtend",
            "0b38033ac94d5ad2208d4f1b2f902fa231c2a423"
        ],
        [
            "case HH2; auto; intros HH4; rewrite HH4; auto.",
            "VernacExtend",
            "13397154dab450d3f4ed5e47efb6adb338240c08"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- scal_multE, multK_m1_m1, scalE1; auto.",
            "VernacExtend",
            "1663abff25e655f99c99d514e0495b9592678bf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl0_base1_perm n l1 l2 : perm l1 l2 -> (forall x, In x l1 -> cbl _ (base n 1) x) -> joinl n l1 = 0 -> joinl n l2 = 0.",
            "VernacStartTheoremProof",
            "b4ed662071ec89fec7bc700518064addfa71abc3"
        ],
        [
            "intros H1 H2 H3; case (joinl_base1_perm n l1 l2); auto.",
            "VernacExtend",
            "650d7e708daa3944daec2f60b9ea5eedbb3709e2"
        ],
        [
            "intros HH; rewrite <-HH; auto.",
            "VernacExtend",
            "019ae334b4809bb4160fa91bb450dde30db3b7ee"
        ],
        [
            "intros HH.",
            "VernacExtend",
            "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
        ],
        [
            "rewrite <- (scalE0r _ (fn n) (-(1))%f), <- H3, HH, <- scal_multE, multK_m1_m1, scalE1; auto.",
            "VernacExtend",
            "d57c17f37da3b06aaff1fe83e8361d2b35f1bdea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_joinl n l : lift n (joinl n l) = joinl n.+1 (map (lift n) l).",
            "VernacStartTheoremProof",
            "db7abca4095c0b14f1747e1da0a3f769f6b5f8aa"
        ],
        [
            "elim l; auto.",
            "VernacExtend",
            "b86d930eda332ac2d96a39239320b0e797a08a19"
        ],
        [
            "intros a l1 IH; case (list_case _ l1); intros H1; subst; auto.",
            "VernacExtend",
            "0160fc838c2e43e29c05eeb79b4b1cb6007c8285"
        ],
        [
            "simpl map; rewrite ?joinl0, ?joinl1, ?joinlS; auto.",
            "VernacExtend",
            "a2fac15a674628c34f2b43cbb7b7838d86fef88f"
        ],
        [
            "rewrite lift_join, IH; auto.",
            "VernacExtend",
            "be8a414e6dda9dbb45ba703e8ff7a5805af4226b"
        ],
        [
            "destruct l1; simpl; try (intros; discriminate); case H1; auto.",
            "VernacExtend",
            "61e181ed5a0ef46d1aa0cb54f38e8142c986c5d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_hom1 n l : (forall x, In x l -> hom n 1 x) -> hom n (length l) (joinl n l).",
            "VernacStartTheoremProof",
            "28959e75e4640c71aa3f7cb5be73c700f8a8873d"
        ],
        [
            "elim l; auto.",
            "VernacExtend",
            "b86d930eda332ac2d96a39239320b0e797a08a19"
        ],
        [
            "intros; simpl; apply homk0.",
            "VernacExtend",
            "df42e61322dbe556e9691a2d79a6bb1b79294f35"
        ],
        [
            "intros a l1 IH H1.",
            "VernacExtend",
            "5c07751ce9de068f7d1bb017d8f52f90aebcc80f"
        ],
        [
            "case (list_case _ l1); intros Hl1.",
            "VernacExtend",
            "f6715e078dee549d2f56085daa4ca6d0ae24c1ee"
        ],
        [
            "subst; simpl; auto with datatypes.",
            "VernacExtend",
            "aecf2f1e41da010c4d32104440fb6b700f73845b"
        ],
        [
            "rewrite joinlS; auto.",
            "VernacExtend",
            "42867c5d4805f35d99dd977b40eccd4212783cd2"
        ],
        [
            "change (length (a::l1)) with (1 + length l1)%nat.",
            "VernacExtend",
            "f173fc524fbb566f5fa0fe7746710944cfaf8557"
        ],
        [
            "apply join_hom; auto with datatypes.",
            "VernacExtend",
            "223af429649057f20c4fcb21d392d742b82439cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve joinl_hom1.",
            "VernacHints",
            "7d511bb9c74c68c61234f893493981aef95e2b80"
        ],
        [
            "Lemma joinl_swap n (a b: vect n) l: cbl _ (base n 1) a -> cbl _ (base n 1) b -> joinl _ (a::b::l) = (-(1)).* joinl _ (b::a::l).",
            "VernacStartTheoremProof",
            "90e0270e5eb15952e020eb43a887ed62e131946d"
        ],
        [
            "intros Ha Hb.",
            "VernacExtend",
            "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
        ],
        [
            "case (list_case _ l); intros Hl.",
            "VernacExtend",
            "e4ec71c0e7429e1d8ca85a703fdc585b97077fb5"
        ],
        [
            "rewrite Hl; simpl; Vfold n.",
            "VernacExtend",
            "32031f84ae51298420a62b8ba516b97033e32b60"
        ],
        [
            "apply cbl_base_join_com; auto.",
            "VernacExtend",
            "e94977092021ae747766f1cbe266bfceeb00cadc"
        ],
        [
            "rewrite !joinlS, <-join_assoc, (cbl_base_join_com n b), !join_scall, !join_assoc; try (intros; discriminate); auto.",
            "VernacExtend",
            "774648c284a8e6395a5c422c1e5cd6430affffa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_top n (a: vect n) l1 l2 : (forall i, In i (a :: l1) -> cbl _ (base n 1) i) -> joinl _ (l1 ++ (a::l2)) = (-(1))^length l1 .* joinl _ (a:: (l1 ++ l2)%list).",
            "VernacStartTheoremProof",
            "1fa42ec9d79bdd59fd7252813e48d992156c7e6e"
        ],
        [
            "induction l1 as [| b l1 IH]; intros Hl2; auto.",
            "VernacExtend",
            "93eb19157bcdf9eec5476527135d7efe1462a34e"
        ],
        [
            "simpl app; simpl expK; rewrite scalE1; auto.",
            "VernacExtend",
            "f957c7376991b7a34e71602a3b73ef8e74c52759"
        ],
        [
            "simpl app; simpl expK; rewrite joinlS, IH, join_scalr, <-joinlS, multK_com, scal_multE, joinl_swap; auto with datatypes.",
            "VernacExtend",
            "034c55aecc58fa2aaa98a091bafd11f95ad5af9b"
        ],
        [
            "simpl In; intros i [[]|Hi]; auto with datatypes.",
            "VernacExtend",
            "6fef0d93c92d30c935b439012d0df968f87a77f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_all n : 0 < n -> joinl n (base n 1) = E.",
            "VernacStartTheoremProof",
            "d76b83458cb502cbb28a047d9600bf8f02344ac7"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros H; contradict H; auto with arith.",
            "VernacExtend",
            "839e6c9594cc0311561540582a7e49d9dec9c507"
        ],
        [
            "destruct n as [|n].",
            "VernacExtend",
            "e9a6c38314370079277fe54649bef28abc1a6c0c"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "rewrite joinl_app, <-lift_joinl, IH; auto with arith.",
            "VernacExtend",
            "ff0b5d0e89a72559617fe2b12bc6d1e1fca31100"
        ],
        [
            "rewrite base0; simpl; Vfold n; Grm0.",
            "VernacExtend",
            "3523d30a006cc47b0327dcfa132815d5f8e5ac5f"
        ],
        [
            "rewrite en_def, conjk, joinkl, scalE1; auto.",
            "VernacExtend",
            "b28eca227206dc38d87701ff379e2af054a582c8"
        ],
        [
            "rewrite base0; intros; discriminate.",
            "VernacExtend",
            "afd4f850021dee080afe9cc03904fd8f6755df7c"
        ],
        [
            "simpl; rewrite base0; intros; discriminate.",
            "VernacExtend",
            "26b564d6ae77463ee46a7cf89c1e8d123f404b55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_vector n v := cbl _ (base n 1) v.",
            "VernacDefinition",
            "897b99158ee015d1b92fa985f69cdb0bb05fdb6b"
        ],
        [
            "Definition is_vector_space n l := forall x, In x l -> is_vector n x.",
            "VernacDefinition",
            "2569ec78a0673bcb4552740e3c6836aab0c40922"
        ],
        [
            "Lemma joinl0_mprod n M : M <> nil -> is_vector_space n M -> joinl n M = 0 -> exists lk, exists i, length lk = length M /\\ In i lk /\\ i <> 0%f /\\ lk *X* M = 0.",
            "VernacStartTheoremProof",
            "82b49c7def2a900c743a7be765e6e3a4d04a8d01"
        ],
        [
            "generalize M; clear M.",
            "VernacExtend",
            "f7a0bf941831a5d73bc0603690f0c6751b3e51f6"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros l Hd Hl Hp1.",
            "VernacExtend",
            "3a9a9df6ed426260b261733b034dd95699a93e49"
        ],
        [
            "assert (forall a, In a l -> (a: vect 0) = 0).",
            "VernacExtend",
            "0fec8778a894042dee30e2c3783d0b20ca5f8aad"
        ],
        [
            "intros a H1; apply (cbl0_inv _ (fn 0)); apply Hl; auto.",
            "VernacExtend",
            "d1359bf3e825afb4db63b3d465c057e26505cd3b"
        ],
        [
            "exists (map (fun x => (1%f)) l); exists (1%f); repeat split.",
            "VernacExtend",
            "4a50eeabe66641168e5be93a0365685b9f6c34a2"
        ],
        [
            "rewrite map_length; auto.",
            "VernacExtend",
            "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
        ],
        [
            "destruct l; simpl; auto.",
            "VernacExtend",
            "0d38c36eba25efd8427e35fac4fbc2b7b810d9c7"
        ],
        [
            "apply one_diff_zero; auto.",
            "VernacExtend",
            "b4265fced6ca88f166e4b9a5039aaf9613126b42"
        ],
        [
            "clear Hd Hl Hp1; induction l as [|a l IH]; simpl; auto.",
            "VernacExtend",
            "85f44879313439677131950222344aaa61e1d15c"
        ],
        [
            "rewrite (mprod_S (vn_eparams 0)); auto.",
            "VernacExtend",
            "ce7ad0280aa94af3970bbcc96844a35e1d72b6f2"
        ],
        [
            "rewrite (H a); Vrm0; auto with datatypes.",
            "VernacExtend",
            "b3a2e4eed9c7565fee71ed350c613ba45f279bf7"
        ],
        [
            "intros l Hl Hd Hprod; unfold is_vector in Hl.",
            "VernacExtend",
            "3429173dcb38d1eb61ca5024e371d7a19d2a301d"
        ],
        [
            "case (cbl_base1_list_split n l); auto.",
            "VernacExtend",
            "4e5b7be9c0b94849665e764c7fd2244ee6375ae8"
        ],
        [
            "intros lx (ly, (H1ly, (H2ly, (H3ly, H4ly)))).",
            "VernacExtend",
            "5d78992422e399fa2b2ac2e56f8af85e0e703f28"
        ],
        [
            "match type of H4ly with perm _ ?X => set (l1 := (X: list (vect n.+1))) in H4ly end.",
            "VernacExtend",
            "734a36b40cff452cb9da260fae6fe20a4c0df12b"
        ],
        [
            "assert (Hl1: exists lk, exists i, length lk = length l1 /\\ In i lk /\\ i <> 0%f /\\ lk *X* l1 = 0).",
            "VernacExtend",
            "f43a71538f53097b7fdeb492b18028923d7ef192"
        ],
        [
            "2: case Hl1; intros lk (i, (H1i, (H2i, (H3i, H4i)))).",
            "VernacExtend",
            "feac1b1ef8ea023d370481ca027349180c6ca8a4"
        ],
        [
            "2: assert (Hlk: length lk = length l).",
            "VernacExtend",
            "f90c5741f79af91a3e4c3487ef9ca2563248d278"
        ],
        [
            "2: rewrite H1i; apply perm_length; apply perm_sym; auto.",
            "VernacExtend",
            "215bf8ba6169871e11c2a26c0502d344a14df44b"
        ],
        [
            "2: case (mprod_perm _ (fn n.+1) _ _ _ (perm_sym _ _ _ H4ly) H1i); intros lk2 (H1lk2, H2lk2).",
            "VernacExtend",
            "e79f15de7d9418411ced10057023bbf1d755eca7"
        ],
        [
            "2: exists lk2; exists i; repeat split; auto.",
            "VernacExtend",
            "1e474a13b7b3457e96befbc10fe0b896abfe67a7"
        ],
        [
            "2: rewrite <- Hlk; apply perm_length; apply perm_sym; auto.",
            "VernacExtend",
            "462075490805bacf36a2f86d969a99d4701492d1"
        ],
        [
            "2: apply perm_in with (1 := H1lk2); auto.",
            "VernacExtend",
            "1287062901aa3d203da2b4534764eab2ea7a78fd"
        ],
        [
            "2: rewrite <-H2lk2; auto.",
            "VernacExtend",
            "420f432ce9f32f6e44912609a82a1c0deb0e122a"
        ],
        [
            "assert (HH: l1 <> nil).",
            "VernacExtend",
            "0240d5ffdd21978a3c20e74859957390347f9211"
        ],
        [
            "generalize (perm_length _ _ _ H4ly) Hl.",
            "VernacExtend",
            "416d297e0dc33dcb850648ee4116b6e4d45c0f6a"
        ],
        [
            "case l; case l1; auto; intros; discriminate.",
            "VernacExtend",
            "03fa0202a659367c095353965fcec9ea29e30aca"
        ],
        [
            "assert (HH1:= joinl0_base1_perm n.+1 _ _ H4ly Hd Hprod).",
            "VernacExtend",
            "aab52324b9d6a1756ad5dce04d866d21bcf3007b"
        ],
        [
            "generalize HH HH1; unfold l1; generalize (refl_equal (length lx)) ly H1ly H2ly H3ly.",
            "VernacExtend",
            "ed9d4813426b23e6fe035ca07625f972e6916de2"
        ],
        [
            "pattern lx at -2; generalize (length lx); intros n1; generalize lx.",
            "VernacExtend",
            "99566bdb10e2fdb26341d19dd900c8a02e04c096"
        ],
        [
            "induction n1 as [| n1 IH1]; clear lx l1 l Hl Hd Hprod ly H1ly H2ly H3ly H4ly HH HH1.",
            "VernacExtend",
            "795728d7025e71d0a2b0316e6659273ee5332507"
        ],
        [
            "intros [| a [| b lx]] HH ly H1ly H2ly H3ly H4ly H5ly.",
            "VernacExtend",
            "aaff9ae5a24299c90b499c23a883df6abd2a7e2c"
        ],
        [
            "2: discriminate HH.",
            "VernacExtend",
            "bebed6bcd7c4ac5fb026b6577edaa4299a9a704c"
        ],
        [
            "2: discriminate HH.",
            "VernacExtend",
            "bebed6bcd7c4ac5fb026b6577edaa4299a9a704c"
        ],
        [
            "case (list_case _ ly); intros Hly; subst.",
            "VernacExtend",
            "f0c564024604c2add4145f31d8265df043fd3db9"
        ],
        [
            "case H4ly; auto.",
            "VernacExtend",
            "c483617306b3a4b87b1e59438f9f6d6025b00ed7"
        ],
        [
            "case (IH ly); auto; clear HH.",
            "VernacExtend",
            "1b53d3de4f6a6d9539e30eeeb1057cd8394c08bc"
        ],
        [
            "generalize H5ly; simpl; rewrite <-(lift_joinl n); intros HH; injection HH; auto.",
            "VernacExtend",
            "99eafe56ea5b80acad3a4bf83c0ad71052d437af"
        ],
        [
            "intros ly1 (i, (H1i, (H2i, (H3i, H4i)))).",
            "VernacExtend",
            "1f6f182977da86b3f4fdc1e8240bd35ad0c7a45f"
        ],
        [
            "exists ly1; exists i; repeat split; simpl; auto.",
            "VernacExtend",
            "952ba4f59ed5de3bc04f8959dd334999ea192680"
        ],
        [
            "rewrite map_length; auto.",
            "VernacExtend",
            "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
        ],
        [
            "rewrite (lift_mprod n); rewrite H4i; auto.",
            "VernacExtend",
            "470d145810a11287e74d016ccdc0aa30283c4c8b"
        ],
        [
            "intros [| a [| b lx]]; try (intros; discriminate).",
            "VernacExtend",
            "3b7bb482e7154a2b66621733a2b90270ac4a5ca9"
        ],
        [
            "intros HH ly H1y H2y H3y H4y H5y; injection HH; intros; subst n1; clear HH.",
            "VernacExtend",
            "333682365f8e82054c1f4919827aff6e038789e4"
        ],
        [
            "generalize H5y; simpl map.",
            "VernacExtend",
            "0b60ce695bf827dfde4542b5727adaa5243a7a48"
        ],
        [
            "case (list_case _ ly); intros Hly; subst.",
            "VernacExtend",
            "f0c564024604c2add4145f31d8265df043fd3db9"
        ],
        [
            "intros HH; injection HH; intros.",
            "VernacExtend",
            "0077d008f607ff8c32f209e45f1946619cb51063"
        ],
        [
            "case (H1y a); auto with datatypes; auto.",
            "VernacExtend",
            "b38072774d520c20565c770a6333004d7c2835dc"
        ],
        [
            "apply injk with n; auto.",
            "VernacExtend",
            "cab3b7b01db48820c12f4b396a76c01ab8f6191d"
        ],
        [
            "rewrite joinl_app; auto; simpl; auto.",
            "VernacExtend",
            "9ca8314e748dd96a66a91533909392b5604ed17a"
        ],
        [
            "rewrite <-(lift_joinl n); simpl; Vfold n.",
            "VernacExtend",
            "bb43bb75ecc4e0dd6aff7cac3406168903f7d99c"
        ],
        [
            "rewrite join0r, addE0r; auto.",
            "VernacExtend",
            "071d181708c2fc8079b00515f9df9857a741bf61"
        ],
        [
            "replace (@fst (Field.K K) (vect n) a) with ((fst a * 1)%f) by (rewrite multK1r; auto).",
            "VernacExtend",
            "124b0ddaa6b73984526a3c72581a5ebc2f65bc6c"
        ],
        [
            "rewrite <- scalk, join_scall, join1l; auto.",
            "VernacExtend",
            "3601389e208585cd693c1048c85edafb96244804"
        ],
        [
            "intros HH; injection HH; clear HH; intros _ HH.",
            "VernacExtend",
            "0127ebeab04ec762378b55fedce50aed0d67219b"
        ],
        [
            "case (scal_integral _ _ _ HH); intros HH1.",
            "VernacExtend",
            "495076616b0937a8bc446ee448365fa347451563"
        ],
        [
            "case (H1y a); auto with datatypes.",
            "VernacExtend",
            "1069052565cd864ad88e0ad22b24cd99fc36a625"
        ],
        [
            "case (IH ly); auto; try split.",
            "VernacExtend",
            "5da8825aeea201bf97053d68d269d51b7cb68d42"
        ],
        [
            "intros ly1 (i1, (H1i1, (H2i1, (H3i1, H4i1)))).",
            "VernacExtend",
            "2462bf26b6e8b464d9741048ba48550c89e6c5f0"
        ],
        [
            "exists (0%f::ly1); exists i1; repeat split; simpl; Vfold n; auto.",
            "VernacExtend",
            "32087eb3ecc07792ec9a9b4bfd9d33dfa2c67fd3"
        ],
        [
            "rewrite map_length; simpl in H1i1; rewrite H1i1; auto.",
            "VernacExtend",
            "50f1fd869b6be8ce492f83df16e99e173e42c0f7"
        ],
        [
            "rewrite (mprod_S (vn_eparams n.+1)), scalE0l, addE0l; auto.",
            "VernacExtend",
            "b2a7f4cbac2eea0dd917ff93d53722e644d355a0"
        ],
        [
            "rewrite (lift_mprod n), H4i1; auto.",
            "VernacExtend",
            "0d41aea5c2f331502cadddad69e2353cdddb5828"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "destruct ly; try (intros; discriminate); case Hly; auto.",
            "VernacExtend",
            "a70d0d180fe9544fcd36d1de0df623f81f566864"
        ],
        [
            "intros Hl ly1 H1ly H2ly H3ly H4ly H5ly.",
            "VernacExtend",
            "fe5872107a361d4bd6ad7f301306f0854ee2cd55"
        ],
        [
            "pose (x1 := fst a .* snd b + (- (fst b)).* snd a).",
            "VernacExtend",
            "53a3777af0c743cd14fbb674930b7fef18140e7f"
        ],
        [
            "pose (mk_v:= fun x : K * vect n => ([fst x], snd x) : vect n.+1).",
            "VernacExtend",
            "2df431c62ffa27e21dda56d48e34a896aa5b692c"
        ],
        [
            "assert (Hx1: lift n x1 = ((fst a) .* (mk_v b) + (- (fst b)).* mk_v a)).",
            "VernacExtend",
            "cbfe49b5f59902cbc2036b65e8181c6125719476"
        ],
        [
            "unfold x1; simpl; Vfold n.",
            "VernacExtend",
            "c6693578a6e85ede61e95cc7b0a90263fcc757d8"
        ],
        [
            "rewrite !scalk, addk, multK_com, <-opp_multKl, oppKr; auto.",
            "VernacExtend",
            "e76208abafccd4565e8280ce2f288de9d3da693d"
        ],
        [
            "assert (Halx: length (a :: lx) = n1).",
            "VernacExtend",
            "e999f252a795800a1bbdbd477132fde55203ee6c"
        ],
        [
            "generalize Hl; simpl; intros HH1; injection HH1; auto.",
            "VernacExtend",
            "bf713c1b8954dd3ef78dd4eaebd9e610046b9c3e"
        ],
        [
            "case (IH1 _ Halx (x1::ly1)); auto.",
            "VernacExtend",
            "a21b36a2f0f5da11789c07c39d34dbb77d821206"
        ],
        [
            "simpl; intros i [Hi | Hi]; try subst i; apply H1ly; auto with datatypes.",
            "VernacExtend",
            "8fa2b08c49c470e7a7a1950c1d1b434e169f823c"
        ],
        [
            "simpl; intros i [Hi | Hi]; try subst i; apply H2ly; auto with datatypes.",
            "VernacExtend",
            "4636fb25c3c46d366e85237c8f1306ba88033889"
        ],
        [
            "simpl; intros i [Hi | Hi]; try subst i; auto.",
            "VernacExtend",
            "502a9d99d4b28b1e54192e55b810ab7473235b17"
        ],
        [
            "unfold x1; apply cbl_add; apply cbl_scal; apply H2ly; auto with datatypes.",
            "VernacExtend",
            "06f738c40bb4aa7fa0a0ba3827309ab790f54d11"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "simpl map.",
            "VernacExtend",
            "09bcd1b174cca4985ee08b62f9f955b2e346c941"
        ],
        [
            "assert (Hmk: forall b, mk_v b = (fst b) .* (gen n.+1 0) + lift n (snd b)).",
            "VernacExtend",
            "949dcae7b23402aea99952f3d2ccb712ecfd41ee"
        ],
        [
            "intros (vv, bb); unfold mk_v; simpl; Vfold n.",
            "VernacExtend",
            "226a254734cc7af719a149a489d75a336cc1b3dd"
        ],
        [
            "rewrite addE0r, scalE0r, addE0l, scalk, multK1r; auto.",
            "VernacExtend",
            "2d46ac14e57a7a6ba47a30ad20bf9aac136e892c"
        ],
        [
            "assert (F1: cbl (vn_eparams n.+1) (base n.+1 1) (mk_v a)).",
            "VernacExtend",
            "93252ce7b4bd33407c9ba3bf36434704c036cc26"
        ],
        [
            "rewrite Hmk.",
            "VernacExtend",
            "dbf51b32a252fc6eff92e8bdbd7e1c419d4e39c6"
        ],
        [
            "apply cbl_add; try apply cbl_scal; auto with datatypes.",
            "VernacExtend",
            "118ce8ef9fd49b3cdf3a24caa4c9eb24d0b28816"
        ],
        [
            "constructor; apply (e_in_base1 n.+1 0); auto with arith.",
            "VernacExtend",
            "6660560c8b190cf325b98cf50af3697517a07657"
        ],
        [
            "apply cbl_incl with (l1 := map (lift n) (base n 1)); simpl; auto with datatypes.",
            "VernacExtend",
            "6f9c1cd37e243d56cfb0e656adc467bf908a145d"
        ],
        [
            "apply lift_cbl; auto with datatypes.",
            "VernacExtend",
            "b71a0330d0e769ae8db1462fbe1a5eb80417e178"
        ],
        [
            "assert (F2: cbl (vn_eparams n.+1) (base n.+1 1) (lift n x1)).",
            "VernacExtend",
            "3d4f39aeec4dadd045fa4de5dedcd218763444d0"
        ],
        [
            "apply cbl_incl with (l1 := map (lift n) (base n 1)); simpl; auto with datatypes.",
            "VernacExtend",
            "6f9c1cd37e243d56cfb0e656adc467bf908a145d"
        ],
        [
            "apply lift_cbl; auto with datatypes.",
            "VernacExtend",
            "b71a0330d0e769ae8db1462fbe1a5eb80417e178"
        ],
        [
            "apply cbl_add; apply cbl_scal; auto with datatypes.",
            "VernacExtend",
            "ace88c3bea8a4d7b5296b28b032588256560677c"
        ],
        [
            "rewrite joinl_top; auto.",
            "VernacExtend",
            "88dcefd8f682483548894e9e8cce660e872616ec"
        ],
        [
            "simpl app; rewrite joinl_swap; auto.",
            "VernacExtend",
            "96d335281a76b2afaaab614755820c4fe018f2c1"
        ],
        [
            "rewrite Hx1.",
            "VernacExtend",
            "135544c89bce8a91175751ef44480f0b7783d9a2"
        ],
        [
            "assert (F3: forall a k1 k2 b l, cbl _ (base n.+1 1) a -> joinl n.+1 (a::(k1 .* b + k2 .* a)::l) = k1 .* joinl n.+1 (a::b ::l)).",
            "VernacExtend",
            "268100e07aa9a13e4b110e48c50c95d9a9a1e95e"
        ],
        [
            "intros a1 k1 k2 a2 l H.",
            "VernacExtend",
            "8ee90dd9ef6d49eceb567faea650659f2217bcd3"
        ],
        [
            "case (list_case _ l); intros Hll.",
            "VernacExtend",
            "c97b3fd20d54ebeb63cbff0a6e926b882c9a814e"
        ],
        [
            "subst; apply trans_equal with (a1 \u2228 (k1 .* a2 + k2 .* a1)); auto.",
            "VernacExtend",
            "fc6338c0340bbcee6221ac60fce1aec0c22689ce"
        ],
        [
            "rewrite join_addr, !join_scalr, cbl_base_join_id; Vrm0.",
            "VernacExtend",
            "61b046a28240da4d94c29f9ebb34ec84a3681b57"
        ],
        [
            "rewrite !joinlS; auto; try (intros; discriminate).",
            "VernacExtend",
            "1636361c9144b3ca90dce1a1467cb12dbaa7a067"
        ],
        [
            "rewrite <-join_assoc, join_addr, !join_scalr, cbl_base_join_id; Vrm0.",
            "VernacExtend",
            "ec7a382308459839a5e822dc13a14446e7e854ae"
        ],
        [
            "rewrite join_scall, <-!join_assoc; auto.",
            "VernacExtend",
            "d6a75505e96cb9e7a3a06cd2d6432f288ef06000"
        ],
        [
            "rewrite F3; auto.",
            "VernacExtend",
            "c3bed7a617290e0c3ce1941775505e928f35b2cb"
        ],
        [
            "generalize H5ly; unfold mk_v; simpl; intros HH; rewrite HH; Vfold n; Vrm0.",
            "VernacExtend",
            "e569b24ac477b490872e5cd7de25797bcf4429ab"
        ],
        [
            "simpl In; intros i [[]|[[]|H]]; auto.",
            "VernacExtend",
            "2e34d2b3fd4f124b058291c7dffa7bc0419fb809"
        ],
        [
            "rewrite in_map_iff in H; case H.",
            "VernacExtend",
            "4d4dca4fe57b03612addcf93d94487e4be5fd942"
        ],
        [
            "intros x [[] Hx].",
            "VernacExtend",
            "3e9f5879d1c87f4606a60b1a658372a8ae9be72e"
        ],
        [
            "generalize (Hmk x); unfold mk_v; intros HH; rewrite HH.",
            "VernacExtend",
            "d139fea31b2430db3fbf1ba943142c8836828437"
        ],
        [
            "apply cbl_add; try apply cbl_scal; auto with datatypes.",
            "VernacExtend",
            "118ce8ef9fd49b3cdf3a24caa4c9eb24d0b28816"
        ],
        [
            "constructor; apply (e_in_base1 n.+1 0); auto with arith.",
            "VernacExtend",
            "6660560c8b190cf325b98cf50af3697517a07657"
        ],
        [
            "apply cbl_incl with (l1 := map (lift n) (base n 1)); simpl; auto with datatypes.",
            "VernacExtend",
            "6f9c1cd37e243d56cfb0e656adc467bf908a145d"
        ],
        [
            "apply lift_cbl; auto with datatypes.",
            "VernacExtend",
            "b71a0330d0e769ae8db1462fbe1a5eb80417e178"
        ],
        [
            "simpl map; intros ly2 (i2, (H1ly2, (H2ly2, (H3ly3, H3ly4)))).",
            "VernacExtend",
            "1671dc536a05fb12089a1b1d7d8c2b8ad009c281"
        ],
        [
            "case (length_split _ _ _ _ _ _ _ H1ly2).",
            "VernacExtend",
            "5c26322c9234dba4905d62af30a8f443910b0c4d"
        ],
        [
            "intros k1 (k2, (lk1, (lk2, (Hlk1, (Hlk2, Hlk3))))).",
            "VernacExtend",
            "c7812529936d2653b2716fe576adb001353ee627"
        ],
        [
            "generalize (eqK_dec _ Hp k2 0%f); case eqK; intros Hk2.",
            "VernacExtend",
            "b4a655ce56f684dacfa9d46e0eb422202620808d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists (k1::0%f::lk1++lk2)%list; exists i2; repeat split; auto.",
            "VernacExtend",
            "4092d49ec9d5ec1a8a08c526041f53f290f980d4"
        ],
        [
            "generalize Hlk2 Hlk3; simpl; clear Hlk2 Hlk3; intros Hlk2 Hlk3.",
            "VernacExtend",
            "2e26b75821a009e573a325f312eba2692e730f78"
        ],
        [
            "rewrite !app_length, Hlk2, Hlk3; auto.",
            "VernacExtend",
            "365280de4e3f56259247bf8da2269e9a3ddb0c18"
        ],
        [
            "generalize H2ly2; rewrite Hlk1; simpl.",
            "VernacExtend",
            "f98668c007c084183caa3658ba717796eb27853a"
        ],
        [
            "intros [HH | HH]; auto.",
            "VernacExtend",
            "b206cf6c1a8ecf5ef7acbe04a9b93276d5c4e2a3"
        ],
        [
            "case (in_app_or _ _ _ HH); auto with datatypes.",
            "VernacExtend",
            "f44ab274f654b8c0f91a99076f6b8486133439c8"
        ],
        [
            "simpl; intros [HH1 | HH2]; try subst; auto with datatypes.",
            "VernacExtend",
            "5a028c2852f8969eb3ccb058002e1241c1b3efb8"
        ],
        [
            "generalize H3ly4; rewrite Hlk1, Hk2; simpl.",
            "VernacExtend",
            "fd748b91c7093a552213727697005ce366c9a751"
        ],
        [
            "rewrite !(mprod_S (vn_eparams n.+1)), !(mprod_app (vn_eparams n.+1)), !(mprod_S (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "2a29290b968d1ce26edb07a2a3c2821c44850ab9"
        ],
        [
            "rewrite !scalE0l, !addE0l; auto.",
            "VernacExtend",
            "909b79969bf71d08b926bbf891b2e8f4592a65ac"
        ],
        [
            "rewrite (scalE0l (vn_eparams n.+1)); auto.",
            "VernacExtend",
            "3dccb8540e9476b395cc441588e6fa1de08c3fe8"
        ],
        [
            "rewrite addE0l; auto.",
            "VernacExtend",
            "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists ((k1+-(k2 * fst b))%f::(k2 * fst a)%f::lk1++lk2)%list; exists (k2 * fst a)%f; repeat split; auto with datatypes.",
            "VernacExtend",
            "f201ba93c2b331a73750267c56fcabff764a024e"
        ],
        [
            "generalize Hlk2 Hlk3; simpl; clear Hlk2 Hlk3; intros Hlk2 Hlk3.",
            "VernacExtend",
            "2e26b75821a009e573a325f312eba2692e730f78"
        ],
        [
            "rewrite !app_length, Hlk2, Hlk3; auto.",
            "VernacExtend",
            "365280de4e3f56259247bf8da2269e9a3ddb0c18"
        ],
        [
            "intros HH; case (multK_integral _ Hp _ _ HH); intros HH1; auto with datatypes.",
            "VernacExtend",
            "ad540dadcad58c1992b1a336fd30b6a976cdc049"
        ],
        [
            "case (H1ly a); auto with datatypes.",
            "VernacExtend",
            "4dcd794e5907b0fcad342bd3a1e05850101fb7cb"
        ],
        [
            "rewrite <- H3ly4; rewrite Hlk1; simpl.",
            "VernacExtend",
            "1c85ef1b820d321577e7589119b1120ad5c81cc3"
        ],
        [
            "rewrite Hx1, !(mprod_S (vn_eparams n.+1)), !(mprod_app (vn_eparams n.+1)), !(mprod_S (vn_eparams n.+1)), !scal_addEr, !scal_addEl, !addE_assoc; auto.",
            "VernacExtend",
            "3947c1b0d232bc853f73f597d527ede4bfb25e30"
        ],
        [
            "apply f_equal2 with (f := add n.+1); auto.",
            "VernacExtend",
            "eae761f5edddf31dad2d1eb353e95c8995534691"
        ],
        [
            "rewrite addE_com,!addE_assoc, addE_com, !addE_assoc; auto.",
            "VernacExtend",
            "24d8449e0a3150364b8158a703b079a0307191be"
        ],
        [
            "apply f_equal2 with (f := add n.+1); auto.",
            "VernacExtend",
            "eae761f5edddf31dad2d1eb353e95c8995534691"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "rewrite addE_com, !addE_assoc, addE_com, !addE_assoc; auto.",
            "VernacExtend",
            "24d8449e0a3150364b8158a703b079a0307191be"
        ],
        [
            "apply f_equal2 with (f := add n.+1); auto.",
            "VernacExtend",
            "eae761f5edddf31dad2d1eb353e95c8995534691"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "rewrite addE_com, <-!scal_multE, opp_multKr; auto.",
            "VernacExtend",
            "b2500cd21f248c4759002d21c078273816d0f4df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_joinl0_mprod n M x : is_vector_space n M -> cbl _ M x -> joinl n (x::M) = 0.",
            "VernacStartTheoremProof",
            "5889c21c9c819f3c87982e87e6324e6f1e187063"
        ],
        [
            "intros H1 H2; elim H2; clear x H2.",
            "VernacExtend",
            "450722b6f38b416bb345b5e69b2ec99fd40aadae"
        ],
        [
            "destruct M; auto; rewrite joinlS, join0l; auto; intros; discriminate.",
            "VernacExtend",
            "6608b891b9d68225ae77e73a226d3a385befb08e"
        ],
        [
            "intros v.",
            "VernacExtend",
            "5d2dff1cafba6d28a31fb52185693bf62bb9a78f"
        ],
        [
            "generalize H1; elim M; auto with datatypes.",
            "VernacExtend",
            "820de4545c2de756475596caea49467845a0ba61"
        ],
        [
            "intros _ HH; case HH.",
            "VernacExtend",
            "644927142fcd389b4249109424aa187016c777d6"
        ],
        [
            "intros a l1 IH Hc; simpl In; intros [H3 | H3]; try subst.",
            "VernacExtend",
            "6422b2b535a439237e716c84810711007877787a"
        ],
        [
            "case (list_case _ l1); intros Hl1.",
            "VernacExtend",
            "f6715e078dee549d2f56085daa4ca6d0ae24c1ee"
        ],
        [
            "rewrite Hl1; simpl; rewrite cbl_base_join_id; try apply Hc; auto with datatypes.",
            "VernacExtend",
            "a1a994231881933de27c4c3a5fb9e557f191a8c2"
        ],
        [
            "rewrite !joinlS, <-join_assoc, cbl_base_join_id, join0l; try apply Hc; auto with datatypes.",
            "VernacExtend",
            "7c7360ceb9ece059550f5e4c21568a402bc847cd"
        ],
        [
            "rewrite !joinlS; try (intros; discriminate).",
            "VernacExtend",
            "45c2c878cc8b42113224b291320799a40eea427c"
        ],
        [
            "2: intros HH; subst; case H3.",
            "VernacExtend",
            "56c2e70f379b890dc1d4e57d79e320bedebd231f"
        ],
        [
            "rewrite <-join_assoc, (cbl_base_join_com n a), join_scall, join_assoc, <-joinlS; try apply Hc; auto with datatypes.",
            "VernacExtend",
            "b19508c68bf2ea7b2850d219c07a2c34389de8ac"
        ],
        [
            "generalize IH; simpl; intros HH; rewrite HH; Vfold n; auto.",
            "VernacExtend",
            "e5706e3d379885e34454be79cccac57680119fe8"
        ],
        [
            "rewrite join0r; Vrm0.",
            "VernacExtend",
            "89d8fd5f8a706ffd258e3816b1cc7494188934be"
        ],
        [
            "intros i Hi; apply Hc; auto with datatypes.",
            "VernacExtend",
            "42aec76e9f301b7528077f0801fa35e153ed7df8"
        ],
        [
            "intros HH; subst; case H3.",
            "VernacExtend",
            "6c835cdffad95f1f2638f93fe543690cdba30402"
        ],
        [
            "intros x y _ Hx _ Hy.",
            "VernacExtend",
            "85a07a8b6d8772418fc57a61ac15f8567f42e336"
        ],
        [
            "case (list_case _ M); intros Hl; subst.",
            "VernacExtend",
            "15fb1669363e80903be81cb7ab0bd5cd94667add"
        ],
        [
            "simpl in Hx,Hy |- *; Vfold n; rewrite Hx, Hy; Vrm0.",
            "VernacExtend",
            "ea8cc91cded058ba8173e45de1a892f5f42ddd6a"
        ],
        [
            "rewrite joinlS, join_addl, <-!joinlS; Vrm0.",
            "VernacExtend",
            "6d3abf36a409267261f830f19ca104a8ab71a7b4"
        ],
        [
            "generalize Hx Hy; simpl; intros Hx1 Hx2; rewrite Hx1, Hx2; Vfold n; Vrm0.",
            "VernacExtend",
            "c5a1581d05745d4e75551d68335b2c7ca0a63ddd"
        ],
        [
            "intros k x Hc Hpr.",
            "VernacExtend",
            "7492ca596fa6e49b957f3d3a1290479c42106e49"
        ],
        [
            "case (list_case _ M); intros Hl; subst.",
            "VernacExtend",
            "15fb1669363e80903be81cb7ab0bd5cd94667add"
        ],
        [
            "generalize Hpr; simpl; Vfold n; intros Hpr1.",
            "VernacExtend",
            "acea150c5b5b6da0f5a4b66c6313f35c11216163"
        ],
        [
            "simpl; Vfold n; rewrite Hpr1, scalE0r; auto.",
            "VernacExtend",
            "1a723f4d0fbf19f078e1c61e26b537b7b9f8b5e9"
        ],
        [
            "rewrite joinlS, join_scall, <-joinlS; auto.",
            "VernacExtend",
            "92fe00074f9842b53911e7e03b362bfb8d6f605a"
        ],
        [
            "generalize Hpr; simpl; intros Hpr1; rewrite Hpr1; Vfold n; auto.",
            "VernacExtend",
            "b4f0f5e08328dea02160c30b794f237031485bf1"
        ],
        [
            "rewrite scalE0r; auto.",
            "VernacExtend",
            "569dbc9344a7b824faafbea6580f9d0b8ac4bff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition decomposable n l M := is_vector_space n l /\\ M = joinl n l.",
            "VernacDefinition",
            "17c2137bccb58ba7229cf5862d1f6588440d4441"
        ],
        [
            "Lemma decomp_cbl n M l x : is_vector n x -> decomposable n l M -> M <> 0 -> (x \u2228 M = 0 <-> cbl _ l x).",
            "VernacStartTheoremProof",
            "1451cb05cbb225d99fdd99baabc18a14a41e0ef6"
        ],
        [
            "intros Hx [Hn HM] Hdiff; subst; split; intros H1.",
            "VernacExtend",
            "3ff6e2a3b6667bb5ee80eec52227e5819bde58b0"
        ],
        [
            "assert (Hd: l <> nil) by (intros HH; case Hdiff; subst; auto).",
            "VernacExtend",
            "7720b8f46b2e6b5075340770882dba2eced55ffb"
        ],
        [
            "case (joinl0_mprod n (x::l)); auto with datatypes.",
            "VernacExtend",
            "57429d14560197771654a1d946f743be726cb806"
        ],
        [
            "simpl; intros x1 [Hx1 | Hx1]; subst; auto with datatypes.",
            "VernacExtend",
            "d9f0a61569f9e3b6320819dde1d6ba171a7c0972"
        ],
        [
            "rewrite joinlS; auto; intros HH1; case Hdiff; rewrite HH1; auto.",
            "VernacExtend",
            "00c2cbb2a0ae31487563715e640a66e8ab7c9306"
        ],
        [
            "intros [| k lk] (i, (H1lk, (H2lk, (H3lk, H4lk)))); try discriminate.",
            "VernacExtend",
            "d89b1553e554e96684f07ba7b8c0e12f4f18dc30"
        ],
        [
            "generalize (eqK_dec _ Hp k 0%f); case eqK; intros Hk; subst; auto.",
            "VernacExtend",
            "150bd10200093fa9bd6aaff8c1368814e4326c08"
        ],
        [
            "generalize H4lk.",
            "VernacExtend",
            "8d4873c0addacf7fb5bce3fb020f963619ab6b6c"
        ],
        [
            "rewrite (mprod_S (vn_eparams n)); auto.",
            "VernacExtend",
            "ec5bdfd381b92a746963571db2df1b199df435a0"
        ],
        [
            "rewrite (scalE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
        ],
        [
            "rewrite addE0l; auto; intros HH.",
            "VernacExtend",
            "8b1919a184e4eb4d99e7931d536d41b73b8cc409"
        ],
        [
            "simpl in H2lk; case H2lk; clear H2lk; intros H2lk; subst.",
            "VernacExtend",
            "955aa2cfd84c2dc2adcf2f56232d3ce6f15ae89e"
        ],
        [
            "case H3lk; auto.",
            "VernacExtend",
            "2a42f53b10fafe3a8436e4ffd0cd130d812ad5a6"
        ],
        [
            "case Hdiff; injection H1lk.",
            "VernacExtend",
            "a59c24f10b39b9fcd92d24ccc7b967f746767fc2"
        ],
        [
            "generalize l Hn Hd HH H2lk; clear l H4lk H1lk Hdiff H1 Hd Hn HH H2lk.",
            "VernacExtend",
            "004ac1f57b023025f718ff00e35a6474b9aa8602"
        ],
        [
            "elim lk; simpl; auto.",
            "VernacExtend",
            "25aa52b5f5e0bb66aa99e5f6505c2ac0e1fdbfff"
        ],
        [
            "intros l; case l; intros; try discriminate; auto.",
            "VernacExtend",
            "e63b4319dbaf44092478031d03620ffd118b4cc2"
        ],
        [
            "intros a l IH [| b l1] H1l1 H2l1.",
            "VernacExtend",
            "9c366a1070cafd27d34832e3e6063647a1c6693b"
        ],
        [
            "case H2l1; auto.",
            "VernacExtend",
            "797b37adb3b4897d083bcca4f942ed9203f98f4d"
        ],
        [
            "generalize (eqK_dec _ Hp a 0%f); case eqK; intros Ha; simpl in Ha.",
            "VernacExtend",
            "483e73a4cb9fda317b6fb993bc49a1047d1547c6"
        ],
        [
            "rewrite (mprod_S (vn_eparams n)), Ha, (scalE0l (vn_eparams n)), addE0l; auto.",
            "VernacExtend",
            "ab4e52a8a8996a92ed4d6634add21733ec1411cc"
        ],
        [
            "intros HH [HH1 | HH1]; try (case H3lk; auto; fail).",
            "VernacExtend",
            "014462d6ef3652fa7df392ed34660dcf1873f077"
        ],
        [
            "intros HH2; injection HH2; clear HH2; intros HH2.",
            "VernacExtend",
            "f606643ee21a6e33c1782c2dddae7ed790e4a2f0"
        ],
        [
            "rewrite joinlS.",
            "VernacExtend",
            "ec6f99326808f9196c98c1c1ad79dfb80ef6d1cd"
        ],
        [
            "rewrite IH; auto with datatypes.",
            "VernacExtend",
            "fee0890770e1b7d670206d0f4029470effa55ffb"
        ],
        [
            "rewrite join0r; auto.",
            "VernacExtend",
            "9fe553befa87e2f790fa6f16c57cf3ba0f8c7af3"
        ],
        [
            "intros i1 Hi1; apply H1l1; auto with datatypes.",
            "VernacExtend",
            "ca3fb905753a114a835d039107f0f5e1e592d306"
        ],
        [
            "intros HH3; subst.",
            "VernacExtend",
            "b1ee0c593ce1d428da29bc329777bdf8e61b4584"
        ],
        [
            "destruct l; try discriminate; case HH1.",
            "VernacExtend",
            "d42d956add45f3996ae9752aa1df1d67d34433f1"
        ],
        [
            "intros HH3; subst.",
            "VernacExtend",
            "b1ee0c593ce1d428da29bc329777bdf8e61b4584"
        ],
        [
            "destruct l; try discriminate; case HH1.",
            "VernacExtend",
            "d42d956add45f3996ae9752aa1df1d67d34433f1"
        ],
        [
            "intros HH1.",
            "VernacExtend",
            "1075c5ffa3dc45f1bf9a0e72fd42babfa9c80c0b"
        ],
        [
            "assert (HxL: b = (-(a^-1)).* (l *X* l1)).",
            "VernacExtend",
            "65e6392124df66211bf46b5599e520ecde5ca08d"
        ],
        [
            "generalize HH1; rewrite mprod_S; auto; intros HH.",
            "VernacExtend",
            "00ab5b1b4dd99e49d5234b5ed7b2b046cec1b243"
        ],
        [
            "rewrite <- (addE0l _ (fn n) (l *X* l1)); rewrite <- (scal_addE0 _ (fn n) (a .* b)).",
            "VernacExtend",
            "79bff59b3027fc4f182404c756cf5e5e1ff3ba5e"
        ],
        [
            "rewrite (addE_com _ (fn n) (a.*b)); rewrite addE_assoc, HH, addE0r, <-!scal_multE, <-!opp_multKr, <-!opp_multKl, multK1r, multK_com, invKl, opp_oppK, scalE1; auto.",
            "VernacExtend",
            "1d7fffab6fe8f747a802a1b78a6a534077df82f2"
        ],
        [
            "generalize H1l1 IH HxL; case l; case l1; try (intros; discriminate); clear l l1 HxL HH1 H1l1 H2l1 IH.",
            "VernacExtend",
            "99af3af1cf6ad4a6fe46a04997f250641b1f03f1"
        ],
        [
            "intros H1l1 IH.",
            "VernacExtend",
            "7c434c69a42dd5e0e82dbde6a8765eac1141126f"
        ],
        [
            "unfold mprod; simpl; Vfold n; rewrite scalE0r; auto; intros HH2; rewrite HH2.",
            "VernacExtend",
            "4e0a391a387f0f500561b7409cd93e24902d171c"
        ],
        [
            "intros a1 l1 b1 l H2l1 IH HxL _ Hl.",
            "VernacExtend",
            "6c4913fc0afd0fa790ffbb9b6c9b13b0e7ed06de"
        ],
        [
            "apply (cbl_joinl0_mprod n (a1::l1)); auto with datatypes.",
            "VernacExtend",
            "46bf79915e19b9f67c7a5d4121f20eb9438682fb"
        ],
        [
            "intros i1; simpl; intros [[]|Hi]; apply H2l1; auto with datatypes.",
            "VernacExtend",
            "1ad0b8fec8e37a20ff30047d8dd82d35ccd01a13"
        ],
        [
            "rewrite HxL; apply cbl_scal.",
            "VernacExtend",
            "1ec547fdf16821f52e0567c4d84749ada512c116"
        ],
        [
            "apply mprod_cbl; auto.",
            "VernacExtend",
            "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
        ],
        [
            "assert (HxL: x = (-(k^-1)).* (lk *X* l)).",
            "VernacExtend",
            "8d8f7791e23a8f561059eda6a448bcc818bbde49"
        ],
        [
            "generalize H4lk; rewrite mprod_S; auto; intros HH.",
            "VernacExtend",
            "b675744bea5788b53281d7ff9355ef9fba75dcaa"
        ],
        [
            "rewrite <- (addE0l _ (fn n) (lk *X* l)), <- (scal_addE0 _ (fn n) (k .* x)).",
            "VernacExtend",
            "51abee2fee24e510b0562e1060b24c85e7c4721d"
        ],
        [
            "rewrite (addE_com _ (fn n) (k.*x)), addE_assoc, HH, addE0r, <-!scal_multE, <-!opp_multKr, <-!opp_multKl, multK1r, multK_com, invKl, opp_oppK, scalE1; auto.",
            "VernacExtend",
            "946c62e6c1df48c1013f1e8e6db607c39f9170c3"
        ],
        [
            "rewrite HxL; apply cbl_scal.",
            "VernacExtend",
            "1ec547fdf16821f52e0567c4d84749ada512c116"
        ],
        [
            "apply mprod_cbl; auto.",
            "VernacExtend",
            "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
        ],
        [
            "rewrite <-joinlS; auto.",
            "VernacExtend",
            "1f3fffa1ce1c49cff8aaaaeeb2ef01b0751fdf34"
        ],
        [
            "apply (cbl_joinl0_mprod n l x); auto.",
            "VernacExtend",
            "409a79d0c841b21a90c8d7f664aafd5bb02c6db9"
        ],
        [
            "intros HH; case Hdiff; rewrite HH; auto.",
            "VernacExtend",
            "92764e11386d617ff0533c40b514f034469f8506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom1_decomposable n x : hom n 1 x -> decomposable n (x::nil) x.",
            "VernacStartTheoremProof",
            "b420b7f6235242797c32a061737258ad9855906a"
        ],
        [
            "intros H; split; auto.",
            "VernacExtend",
            "6dda9c711e25312e26073cac0c920bb33e7a23ce"
        ],
        [
            "intros y; simpl; intros [[]|[]]; red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "f46719f4bf7c490122449605bee1cb23d84421b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomp_hom n (l: list (vect n)) M : decomposable n l M -> hom n (length l) M.",
            "VernacStartTheoremProof",
            "665cf663780c310ee7f4057283ff317d73a8408d"
        ],
        [
            "intros (H1, H2); subst.",
            "VernacExtend",
            "a74df965c900145eb05a467151f9e14f3b79216d"
        ],
        [
            "assert (HH: forall a, In a l -> hom n 1 a).",
            "VernacExtend",
            "79857543e60c8e0866cb57c52c55367a2268e683"
        ],
        [
            "intros a Ha; rewrite <- cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "518cac4b3365117434b13c38a4c8638c4c8dc7c8"
        ],
        [
            "generalize (H1 a Ha); auto.",
            "VernacExtend",
            "e574714c113543f8a89a0df45f4bdc644974485e"
        ],
        [
            "clear H1; induction l as [| a l1 IH].",
            "VernacExtend",
            "30d97b18fb4107c02a5a135aa14c8e096e440c3e"
        ],
        [
            "simpl; apply hom0K.",
            "VernacExtend",
            "105be71489e3a6076d4b3d177a965f6d82f3be93"
        ],
        [
            "case (list_case _ l1); intros H1.",
            "VernacExtend",
            "381d3f5ea5a881a59fbef06ea43ace4eef6826d8"
        ],
        [
            "subst; simpl; auto with datatypes.",
            "VernacExtend",
            "aecf2f1e41da010c4d32104440fb6b700f73845b"
        ],
        [
            "rewrite joinlS; auto.",
            "VernacExtend",
            "42867c5d4805f35d99dd977b40eccd4212783cd2"
        ],
        [
            "change (length (a::l1)) with (1 + length l1)%nat; auto with datatypes.",
            "VernacExtend",
            "f9e9c3fcb715621823368e4f4b68467293adcd64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint contra (n : nat) {struct n}: kn n -> vect n -> vect n := match n return (kn n -> vect n -> vect n) with | 0%nat => fun k a => 0 | S n1 => fun lf l1 => let (k, lf1) := lf in let (l2, l3) := l1 in ((- (1)).* (contra n1 lf1 l2), (k : K) .* l2 + contra n1 lf1 l3) end.",
            "VernacFixpoint",
            "20b4b267d98d2fb3eb69b68d3b8ec9df8643afac"
        ],
        [
            "Notation \"#< l , x ># \" := (contra _ l x) (format \"#< l , x >#\").",
            "VernacNotation",
            "c837d2a4355af8d027d49bf57b5e3743c0b467ab"
        ],
        [
            "Lemma contraE n l (M : vect n.+1) : #<l, M ># = ((- (1))%f.* #< snd l, fst M>#, (fst l : K) .* fst M + #<snd l, snd M>#).",
            "VernacStartTheoremProof",
            "cb7f921146263121e3c6fffdc1f1e129424cd142"
        ],
        [
            "destruct l; destruct M; auto.",
            "VernacExtend",
            "fd835e214fe147f00670eb852bcf6e2455cdaa8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra0r n lf : #<lf, 0># = (0: vect n).",
            "VernacStartTheoremProof",
            "71452d6485dea9b7d12a30b53b77f0cfe74f0153"
        ],
        [
            "induction n as [| n IH]; simpl; Grm0; Vfold n.",
            "VernacExtend",
            "2982db2cc64e4f162d492eaf2378ca5bfb19146a"
        ],
        [
            "destruct lf; rewrite IH; Grm0.",
            "VernacExtend",
            "a8e5931df60e6da26ffcc91828791f933428223e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite contra0r: GRm0.",
            "VernacExtend",
            "2f06e0dfa9be24116e3344a035c5bf8f420c8ed6"
        ],
        [
            "Lemma contra0l n (x:vect n) : #<0, x># = 0.",
            "VernacStartTheoremProof",
            "75fde68d090a73e74ea0c394fc0125e99c0d304d"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "Vfold n.",
            "VernacExtend",
            "1069bda287f933d6fc9c51bd34434bf13a87bc77"
        ],
        [
            "Vfold n; repeat rewrite IH; Grm0.",
            "VernacExtend",
            "1b386cf1ccb679db42a6eb63b5ff9ca3bb737bac"
        ],
        [
            "rewrite (scalE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contrak n i lf : #<lf, [i]># = 0 :> vect n.",
            "VernacStartTheoremProof",
            "82e588372bde7e83211f66fcaf832edac0cda9b5"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct lf; rewrite IH; Grm0.",
            "VernacExtend",
            "a8e5931df60e6da26ffcc91828791f933428223e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_e n i lf : i < n -> #<lf, 'e_i># = [projk _ i lf] :> vect n.",
            "VernacStartTheoremProof",
            "1cba50a5257a7671f3e5a1f6bf637bc7a1ecbe91"
        ],
        [
            "generalize i; clear i.",
            "VernacExtend",
            "208b471d15be521271abdaf4ee90e51a9a779dca"
        ],
        [
            "induction n as [| n IH]; intros i; simpl; auto; try Vfold n.",
            "VernacExtend",
            "533b0fb67224f69feb66d2a95858dcdad9cfaeb6"
        ],
        [
            "destruct lf; destruct i as [| i]; Grm0.",
            "VernacExtend",
            "27d82dc528bf8012228c2ea3bdbc4eb337bf83a9"
        ],
        [
            "rewrite contrak; Grm0; simpl; Vfold n; Grm0.",
            "VernacExtend",
            "fd507793c955875334652f931358a1c3d5e8031b"
        ],
        [
            "rewrite scalk, multK1r; auto.",
            "VernacExtend",
            "e27cb05d2bc16fbdb80b52d099a9a627debf2040"
        ],
        [
            "intros HH; assert (HH1: i < n); auto with arith.",
            "VernacExtend",
            "b23029acfb0ec969725cd42d467dd2ad2fea827d"
        ],
        [
            "rewrite IH; simpl; auto.",
            "VernacExtend",
            "be9d4bffc4ef35190c21a58a7a87a511703a888c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_scalr n k lf (x: vect n) : #< lf, k .* x ># = k .* #< lf , x >#.",
            "VernacStartTheoremProof",
            "32a734466cd445835d274f9331405881cff0e517"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros; rewrite multK0r; auto.",
            "VernacExtend",
            "0fa885e605cca649ff9ce947a69874746e6d8690"
        ],
        [
            "destruct lf; destruct x.",
            "VernacExtend",
            "c3c2976431d865cb0de6c37f9e796c441eb9152f"
        ],
        [
            "rewrite IH, IH, scal_addEr, <-! scal_multE; auto.",
            "VernacExtend",
            "e8f5e7daa678e6459775e603a21535367dcd6a8f"
        ],
        [
            "repeat rewrite (fun x => (multK_com p x k)); auto.",
            "VernacExtend",
            "55e23cff43cb6b0cb16793a902b2df36d9f0af7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_addr n lf (x y: vect n) : #< lf, x + y ># = #< lf, x ># + #< lf, y >#.",
            "VernacStartTheoremProof",
            "f9ef906ebb7287d49c396538433bfd34510b4875"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros; rewrite addK0r; auto.",
            "VernacExtend",
            "0faa2ba437df587ce5e2cb539065e10046acea3c"
        ],
        [
            "destruct lf; destruct x; destruct y; rewrite !IH, !scal_addEr; auto.",
            "VernacExtend",
            "47684c4064ef19acaffcb71ca07fb62c8fe60dff"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite <-! addE_assoc; try apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "dfa9a3906c3f6c518cc4c7965852d69d44e4b71a"
        ],
        [
            "rewrite !addE_assoc; try apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "df5de56915adc2b161fbd6f22520308df8b15414"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_scall n (k : K) (x : kn n) (M : vect n) : #< (scalE (Kn.vn_eparams p n) k x), M># = k .* #<x, M>#.",
            "VernacStartTheoremProof",
            "9f720f8799c2b7e4771b5779cd5da71a09b204c4"
        ],
        [
            "induction n as [|n IH]; simpl; Krm0.",
            "VernacExtend",
            "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
        ],
        [
            "destruct x as [k1 x1]; destruct M as [M1 M2]; Vfold n; Kfold n.",
            "VernacExtend",
            "002cbea1fadf095a54a01dd5c366a1e283ce3cf4"
        ],
        [
            "rewrite !IH, scal_addEr, <-!scal_multE, multK_com; auto.",
            "VernacExtend",
            "872c7d5d32c97bb51d131994e7bdd11f4ada694b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_addl n (x y : kn n) (M : vect n) : #< x + y, M ># = #< x, M ># + #<y, M >#.",
            "VernacStartTheoremProof",
            "0abc10feacc93c3073dab1cf8820c0a048a5c88e"
        ],
        [
            "induction n as [|n IH]; simpl; Krm0.",
            "VernacExtend",
            "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
        ],
        [
            "destruct x as [a x1]; destruct y as [b y1]; destruct M as [M1 M2].",
            "VernacExtend",
            "954c7aeb2f74b175a4313af4c9d95ca15e60b828"
        ],
        [
            "Vfold n; Kfold n.",
            "VernacExtend",
            "0e2bf0946e352587b58cddbb7b0a765f2e4496ca"
        ],
        [
            "rewrite !IH, scal_addEr, (scal_addEl (vn_eparams n)); auto.",
            "VernacExtend",
            "c82c8b9ed6638699191cd7c490562921cf99ec02"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite !addE_assoc; auto.",
            "VernacExtend",
            "ce214b315400588aac8118eb43bbb788a8f0634d"
        ],
        [
            "apply f_equal2 with (f := addE _); auto.",
            "VernacExtend",
            "1ee49b98fa16e7d66e16dd7826a091bd09cb360a"
        ],
        [
            "rewrite addE_swap; auto.",
            "VernacExtend",
            "dbc04023856644e05dc1fd9317a0b0452e054d15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_conj n lf b (x: vect n) : #< lf, x ^_ b ># = #< lf, x ># ^_ (negb b).",
            "VernacStartTheoremProof",
            "855349303e6663ba5929061f5a557989188cdc14"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros [|]; try rewrite oppK0; auto.",
            "VernacExtend",
            "a32288d2c7fb1115e46ca977185de50a60f5daa0"
        ],
        [
            "destruct lf; intros b; destruct x; rewrite IH, IH; Vfold n.",
            "VernacExtend",
            "6f9ff4b15554387e3a178ee581f0d8ab3d2e9e9b"
        ],
        [
            "rewrite conj_add, conj_scal, conj_scal; auto.",
            "VernacExtend",
            "07ca7e4a0df89b2b67bf0165a5369690113883fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_hom n lf k M : hom n k.+1 M -> hom n k #<lf , M>#.",
            "VernacStartTheoremProof",
            "0b1a06c0ed0db26d0a37854f748b6fbd71aa4447"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; intros [|k1]; simpl; auto.",
            "VernacExtend",
            "9e1400787e25f72ccb0849d58ee2f4176332f15a"
        ],
        [
            "rewrite eqKI; auto.",
            "VernacExtend",
            "ca078dadd9f4e418868b01a515b29125b20be296"
        ],
        [
            "intros H; destruct lf.",
            "VernacExtend",
            "f97d5d36442cf762f64dc6a7eec66c26a7e01c98"
        ],
        [
            "destruct M as [M1 M2]; try rewrite eq0I; rewrite ?homk0; auto.",
            "VernacExtend",
            "f30bedf677cc08f7ac268a79f3e2867232bcd8c7"
        ],
        [
            "assert (Hm1: hom n 0 M1); [generalize H; case hom; auto | idtac].",
            "VernacExtend",
            "7360e95a915d9a1eb9f8ee42b1bfb8a83247a189"
        ],
        [
            "assert (Hm2: hom n 1 M2); [generalize H; repeat (case hom; auto) | clear H].",
            "VernacExtend",
            "c358856b771ef6de985d1db1fa32ba329e8f5acb"
        ],
        [
            "rewrite (hom0E _ _ Hm1); Vfold n.",
            "VernacExtend",
            "4dc81bc085d9530dd1c0cfb60c04d10d123862b5"
        ],
        [
            "rewrite contrak, scalE0r, eq0I, add_hom; auto; apply scal_hom; apply hom0K; auto.",
            "VernacExtend",
            "1bebd30256f7c4663f9804c59583ee3273d0fe52"
        ],
        [
            "destruct lf; destruct M as [M1 M2]; intros H.",
            "VernacExtend",
            "d5397dbe31a51970232a2e271964437316d7815a"
        ],
        [
            "assert (Hm1: hom n k1.+1 M1); [generalize H; case hom; auto | idtac].",
            "VernacExtend",
            "f22a9ca6741f5aa12e5a475af950b9164c640155"
        ],
        [
            "assert (Hm2: hom n k1.+2 M2); [generalize H; repeat (case hom; auto) | clear H]; auto.",
            "VernacExtend",
            "3df7b6a79992f59dd2693c0f7d5c1f4bf390fc21"
        ],
        [
            "Vfold n; rewrite scal_hom, add_hom; auto.",
            "VernacExtend",
            "06168ae4a5bcbb6ad00a2bc55a971288c585a346"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve contra_hom.",
            "VernacHints",
            "43d75bc7566f28680c1d52dd7d586366e41dff8c"
        ],
        [
            "Lemma contra_hom0 n lf M : hom n 0 M -> #<lf , M># = 0.",
            "VernacStartTheoremProof",
            "29a8f6d0fd9ce4e71f2156ffb90af048caa2045c"
        ],
        [
            "intros H; rewrite (hom0E _ _ H); apply contrak.",
            "VernacExtend",
            "b6f56eb61e42c38bc7c706a1049c6bacd000908c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_id n lf (M: vect n) : #<lf, #< lf, M># ># = 0.",
            "VernacStartTheoremProof",
            "63c15c56585902151b638a824cc9cecfa4394d2f"
        ],
        [
            "induction n as [| n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "destruct lf; destruct M.",
            "VernacExtend",
            "f18c69d8faf73a7c08d171b82ffd8ff5db7afa2c"
        ],
        [
            "rewrite !contra_addr, !contra_scalr, !IH, !scalE0r, addE0r, <-scal_addEr, addE_com, scal_addE0, scalE0r; auto.",
            "VernacExtend",
            "3d1dedfad453f4099ad7c5e534fc9118966523eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_swap n lf1 lf2 (M: vect n) : #<lf1, #< lf2, M># ># = (-(1)).* #<lf2, #< lf1, M># >#.",
            "VernacStartTheoremProof",
            "974e1afe838c693024f573c70c0c3c5c97f6dac7"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "rewrite multK0r; auto.",
            "VernacExtend",
            "26ceb2e14741c0b552d3ebdce818a91972e3fbff"
        ],
        [
            "destruct lf1 as [k1 lf1]; destruct lf2 as [k2 lf2]; destruct M.",
            "VernacExtend",
            "4fd0b8c8815d2320733bbfe9227fb4c45c9fa775"
        ],
        [
            "rewrite !contra_scalr, !contra_addr, !(IH _ lf2), !contra_scalr, !scal_addEr, !scalE_opp, !opp_oppK, !scalE1, <-!scal_multE, <-!opp_multKl, !multK1l, addE_swap; auto.",
            "VernacExtend",
            "50ef7cb316fef4664f1a79ff595c4f00f46d4870"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint v2k (n : nat) : vect n -> kn n := match n return vect n -> kn n with | O => fun v : vect 0 => tt | S n1 => fun v => let (v1,v2) := v in ('C[v1], v2k n1 v2) end.",
            "VernacFixpoint",
            "dc9859e08834acec1d4d3479d62013f72e09d765"
        ],
        [
            "Lemma contra_const n lf M : hom n 1 M -> #<lf, M># = [(lf [.] v2k n M)%Kn].",
            "VernacStartTheoremProof",
            "d3e974d6a4ba32afb75372615b2fa2d6e1eb534f"
        ],
        [
            "induction n as [| n IH]; simpl; Krm0.",
            "VernacExtend",
            "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
        ],
        [
            "destruct lf; destruct M as [M1 M2]; intros HM12.",
            "VernacExtend",
            "f5e7597bd1cffc3fb684f79e8154b68f845428f7"
        ],
        [
            "assert (HM1: hom n 0 M1) by (generalize HM12; case hom; auto).",
            "VernacExtend",
            "3f017cafd979d0692d96fdfb1e52720355d24992"
        ],
        [
            "assert (HM2: hom n 1 M2) by (generalize HM12; rewrite HM1; case hom; auto).",
            "VernacExtend",
            "bfb245fa759e3fc9e9f38100a515ab6f34c85be8"
        ],
        [
            "rewrite (hom0E _ _ HM1); Vfold n.",
            "VernacExtend",
            "a017eebdc44a8aed1d914cbbc4b2159753450ca8"
        ],
        [
            "rewrite contrak, scalE0r, IH; auto.",
            "VernacExtend",
            "8d1c0a371a5b461d6a9316b83da04f64a2c4d713"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite <-addk, <-joink, joinkl, <-!hom0E; simpl; auto.",
            "VernacExtend",
            "d550628a565d8f94ba63b7fa8111eacb17b77466"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_join n lf k1 k2 M1 M2 : hom n k1 M1 -> hom n k2 M2 -> #<lf, M1 \u2228 M2># = #<lf, M1># \u2228 M2 + ((- (1))^k1).* M1 \u2228 #<lf, M2>#.",
            "VernacStartTheoremProof",
            "902ae716fc389bebcc710475d5a1be22d152ee83"
        ],
        [
            "generalize lf k1 k2; clear lf k1 k2.",
            "VernacExtend",
            "da9b3833d6854f8825727026fcab251dc4594dfc"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros lf [| k1] [| k2]; Grm0.",
            "VernacExtend",
            "641067c3c17d91853d57c5f6488f2b0f75629b2b"
        ],
        [
            "intros [k lf] [| k1] [| k2]; destruct M2 as [M3 M4]; destruct M1 as [M1 M2]; simpl expK; Grm0.",
            "VernacExtend",
            "9827286594cb6694feef63c95ece2de7fa5c1027"
        ],
        [
            "case eq0_spec; try (intros; discriminate); intros HH HM2; subst; Grm0.",
            "VernacExtend",
            "f6e4af5d9ff7489cb373e44055e42b6c53369fec"
        ],
        [
            "case eq0_spec; try (intros; discriminate); intros HH HM3; subst; Grm0.",
            "VernacExtend",
            "58099dfa876a5b29b0a6f903876b06186c34ab93"
        ],
        [
            "assert (Hk24 := join_hom _ _ _ _ _ HM2 HM3).",
            "VernacExtend",
            "68ebfcfa5b3f1c7e4afa3fe5b232788306e3fa28"
        ],
        [
            "rewrite (hom0E _ _ Hk24), (hom0E _ _ HM2), (hom0E _ _ HM3), !contrak; Grm0.",
            "VernacExtend",
            "f1ad8f052c411f359cd606ec3f59b2ddc9566bd9"
        ],
        [
            "case eq0_spec; try (intros; discriminate); intros HH HM2; subst; Grm0.",
            "VernacExtend",
            "f6e4af5d9ff7489cb373e44055e42b6c53369fec"
        ],
        [
            "rewrite (hom0E _ _ HM2).",
            "VernacExtend",
            "e6dd3d09e2251d8f841dccf261ad2da7f4f81370"
        ],
        [
            "repeat ((rewrite conjk || rewrite scalE1 || rewrite joinkl || rewrite contra_scalr || rewrite contrak); Grm0).",
            "VernacExtend",
            "414dcdcc40b369b59e5cd5aeb50a8bb7cf2bbb84"
        ],
        [
            "repeat ((rewrite scal_addEr || rewrite <- scal_multE); auto).",
            "VernacExtend",
            "5d80de27df23e3d8efacaeb86c7d14f98007ec1c"
        ],
        [
            "rewrite multK_com, (multK_com _ Hp k); auto.",
            "VernacExtend",
            "4be8a9f1c3ff1753d8a62006472be8e03768113a"
        ],
        [
            "intros HH.",
            "VernacExtend",
            "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
        ],
        [
            "case eq0_spec; try (intros; discriminate); intros HH1 HM3; subst; Grm0.",
            "VernacExtend",
            "9182091c0f0a8fbf0531b317f9c9e06c0f08f8eb"
        ],
        [
            "rewrite (hom0E _ _ HM3).",
            "VernacExtend",
            "a8e4e693fd6add579fecd08f087eafb76534aea4"
        ],
        [
            "repeat ((rewrite conjk || rewrite scalE1 || rewrite joinkl || rewrite joinkr ||rewrite contra_scalr || rewrite contrak); Grm0).",
            "VernacExtend",
            "2996c69da7ae84a3df590156042e794abaad6341"
        ],
        [
            "repeat ((rewrite scal_addEr || rewrite <- scal_multE); auto).",
            "VernacExtend",
            "5d80de27df23e3d8efacaeb86c7d14f98007ec1c"
        ],
        [
            "rewrite multK_com, (multK_com _ Hp k); auto.",
            "VernacExtend",
            "4be8a9f1c3ff1753d8a62006472be8e03768113a"
        ],
        [
            "intros HM1 HM2.",
            "VernacExtend",
            "66b7fd873819e60879d543f2260e797a2e21e98e"
        ],
        [
            "assert (F1: hom n k1 M1) by (generalize HM1; case hom; auto).",
            "VernacExtend",
            "4efaa99d04789a71fc5d4ba99d781e903500f8d3"
        ],
        [
            "assert (F2: hom n k1.+1 M2) by (generalize HM1; case hom; auto; intros; discriminate).",
            "VernacExtend",
            "0c32c5782f4424af38cdf57bc3592d18a5dde9cb"
        ],
        [
            "assert (F3: hom n k2 M3) by (generalize HM2; case hom; auto).",
            "VernacExtend",
            "417a5c7af67b440034d919cbb856ba501532d83c"
        ],
        [
            "assert (F4: hom n k2.+1 M4) by (generalize HM2; case hom; auto; intros; discriminate).",
            "VernacExtend",
            "909b3480ea1d8c67ed8bb1db90479b899eb43157"
        ],
        [
            "clear HM1 HM2.",
            "VernacExtend",
            "eaf74a2c26385caa6329b7d169f299a2be02cdc1"
        ],
        [
            "rewrite !contra_addr, (conjf_hom n k1.+1 M2), join_scall, conj_add; auto.",
            "VernacExtend",
            "93c4b37b4cca06faf983b78e5a8c8929c4d73e8b"
        ],
        [
            "repeat (rewrite conj_scal || rewrite contra_scalr || rewrite scal_addE_r); auto.",
            "VernacExtend",
            "ab2153fba8040bedd1e0abb3a3201a3edb5a6d66"
        ],
        [
            "rewrite (IH M1 M4 lf k1 k2.+1); auto; simpl expK.",
            "VernacExtend",
            "a0a5a67b4daf91c7110c1f7ca7a45c339743151d"
        ],
        [
            "rewrite (IH M2 M3 lf k1.+1 k2); auto; simpl expK.",
            "VernacExtend",
            "505adff82044a6b743683dc6333727f53d9c332b"
        ],
        [
            "rewrite (IH M2 M4 lf k1.+1 k2.+1); auto; simpl expK.",
            "VernacExtend",
            "f1df2425fca083e3ef1981874d7d99c7134014bc"
        ],
        [
            "repeat (rewrite scal_addEr || rewrite join_addr || rewrite join_addl || rewrite join_scall || rewrite join_scalr); auto.",
            "VernacExtend",
            "15f9fccb200e9f6b07480829d1d14c590c08593c"
        ],
        [
            "rewrite (conjf_hom n k1 M1); auto.",
            "VernacExtend",
            "0b9b97f2f74442c9ad499cf31d1c13b003b31618"
        ],
        [
            "rewrite (conjf_hom n k1 #<lf, M2 >#); try apply contra_hom; auto.",
            "VernacExtend",
            "9dc5ae5001cb649ff5717737aba1a5ad5fb41292"
        ],
        [
            "rewrite (conjf_hom n k1.+1 M2); auto; simpl expK; rewrite !join_scall, <-!scal_multE; Krm1; auto.",
            "VernacExtend",
            "b35a6a52a991d16840247a48a36cbf4ff80c5fec"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "do 8 (rewrite ?addE_assoc; auto; ((apply f_equal2 with (f := addE (vn_eparams n)); auto); [idtac]) || rewrite addE_com; auto); rewrite multK_com; auto.",
            "VernacExtend",
            "cbcca27c6423156116440b0d7c0422dcf24a7a49"
        ],
        [
            "rewrite addE_com, addE_assoc, <- scal_addEl, oppKr; Grm0.",
            "VernacExtend",
            "9be60400d8ed90e4f9c54a2487aa998d0708bda5"
        ],
        [
            "repeat (rewrite ?addE_assoc; auto; ((apply f_equal2 with (f := addE (vn_eparams n)); auto); [idtac]) || rewrite addE_com; auto); rewrite multK_com; auto.",
            "VernacExtend",
            "5159a49034a89bf893517ee348f10a6b4630f76d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_hom_com n k1 k2 x y : hom n k1 x -> hom n k2 y -> y \u2228 x = ((- (1)) ^(k1 * k2)).* (x \u2228 y).",
            "VernacStartTheoremProof",
            "a76810b490e83509d45ff83e836fecf24e72a312"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [|k1] [|k2] Hk1 Hk2; simpl expK.",
            "VernacExtend",
            "3dc9615f58b3f4208bffbc56b736ddbb643b1f60"
        ],
        [
            "rewrite multK1l, multK_com; auto.",
            "VernacExtend",
            "6e77cbb43c135bdaebfafa6bdcf48b6474c59d5d"
        ],
        [
            "generalize Hk2; case eqK_spec; auto; intros; subst; Krm0; discriminate.",
            "VernacExtend",
            "e41b4851ddfe219f3ba9309c7b26b6ba07905e83"
        ],
        [
            "generalize Hk1; case eqK_spec; auto; intros; subst; Krm0; discriminate.",
            "VernacExtend",
            "cef30dd64008770ad5653db8e303b5f2c4cf5105"
        ],
        [
            "generalize Hk1; case eqK_spec; auto; intros; subst; Krm0; discriminate.",
            "VernacExtend",
            "cef30dd64008770ad5653db8e303b5f2c4cf5105"
        ],
        [
            "intros [|k1] [|k2] Hk1 Hk2; simpl expK; destruct x as [x1 x2]; destruct y as [y1 y2]; try (generalize Hk1; case eq0_spec; intros; subst; Grm0; try discriminate); try (generalize Hk2; case eq0_spec; intros; subst; Grm0; try discriminate).",
            "VernacExtend",
            "b0c0d37e7af2b7372ff9d01acb7b92ac930aa75a"
        ],
        [
            "rewrite (hom0E n x2), (hom0E n y2); auto; simpl; Vfold n.",
            "VernacExtend",
            "f4b2fea0757db46d0071f558ccbabda28e42b84a"
        ],
        [
            "rewrite scalE1, !joink, multK_com; auto.",
            "VernacExtend",
            "874e411a64d235a1acb41214e4a3c19ae844613d"
        ],
        [
            "rewrite (hom0E n x2), conjk, !joinkl, !joinkr, !scalE1; auto.",
            "VernacExtend",
            "360529a9245598e2ff7b3ee9fdf705289676aa09"
        ],
        [
            "rewrite (hom0E n y2), <-!mult_n_O, conjk, !joinkl, !joinkr, !scalE1; auto.",
            "VernacExtend",
            "821034905e7d3d7fd628ada0c2e830a8f88a3e28"
        ],
        [
            "assert (Hh1: hom n k1 x1) by (generalize Hk1; case hom; auto).",
            "VernacExtend",
            "485ac8122dc9906bba16170c198f8ab1a094ce16"
        ],
        [
            "assert (Hh2: hom n k1.+1 x2) by (generalize Hk1; case hom; intros; auto; discriminate).",
            "VernacExtend",
            "ceed7bd6fb3fa05015f1b453e4db2a1504a2390b"
        ],
        [
            "assert (Hh3: hom n k2 y1) by (generalize Hk2; case hom; auto).",
            "VernacExtend",
            "3a1f6bc00e0111cf24faf90e3dd4eb0534cde837"
        ],
        [
            "assert (Hh4: hom n k2.+1 y2) by (generalize Hk2; case hom; intros; auto; discriminate).",
            "VernacExtend",
            "5025d2e102543ad35a8337598ccf78b9a9b81ecb"
        ],
        [
            "rewrite (conjf_hom _ k2.+1), join_scall, (conjf_hom _ k1.+1), join_scall; auto.",
            "VernacExtend",
            "9d2b04b58ca3ce2197541e5cf4ca1a477cb0da30"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "rewrite addE_com, scal_addEr; auto.",
            "VernacExtend",
            "503272dc88bc108b0a4e6d2ee0cbb713acd1a88a"
        ],
        [
            "apply f_equal2 with (f := add n).",
            "VernacExtend",
            "07bd95799a0a4d0bb13cccb2cd871e93e6a4fe28"
        ],
        [
            "rewrite (IH _ _ k1 k2.+1); auto.",
            "VernacExtend",
            "d295600a21990774885fc6869e18b804a85c9d72"
        ],
        [
            "simpl expK; rewrite !expK_add, !scal_multE; auto.",
            "VernacExtend",
            "d5a78d584151e3b82eba48c998fa6f43ff6afe40"
        ],
        [
            "rewrite (IH _ _ k1.+1 k2); auto.",
            "VernacExtend",
            "e8b1cc28b2ac9e3a1b024b9d0b01fde533008c7b"
        ],
        [
            "simpl expK; rewrite <-mult_n_Sm, !expK_add, <-!scal_multE; auto.",
            "VernacExtend",
            "44b6f99e2ce62c20be241ed52e9c7ddaa4bfb17e"
        ],
        [
            "apply f_equal2 with (f := scal n); auto.",
            "VernacExtend",
            "deb609984d2410cce51f5573a0705c8e2556a359"
        ],
        [
            "rewrite (multK_com _ Hp (- (1))%f), !multK_assoc; auto.",
            "VernacExtend",
            "11e9a8a5376c9778c8e5fce27a7fe6e888d751e2"
        ],
        [
            "rewrite <- (multK_assoc _ Hp (- (1))%f), multK_m1_m1, multK1l, expK2m1, multK1r; auto.",
            "VernacExtend",
            "0b4c443a70011c7290b0bec966b47b428adcce36"
        ],
        [
            "rewrite (IH _ _ k1.+1 k2.+1); auto.",
            "VernacExtend",
            "8d79e8693bd8df5591ec77ab3b5bdf90286bf3bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_hom_odd n k x : (1+1 <> (0: K))%f -> hom n k x -> odd k -> x \u2228 x = 0.",
            "VernacStartTheoremProof",
            "fa335cc60ae697a706440a7f6aa0f4afe3983cab"
        ],
        [
            "intros H2 Hx Hk.",
            "VernacExtend",
            "1d501682754ee0fe32babaf90172f34a5ae7615e"
        ],
        [
            "case (scalE_integral _ (fn n) (1 + 1)%f (x \u2228 x)); auto.",
            "VernacExtend",
            "78f951c0ad308f851ce86af8d5c2ff1f736c2bf4"
        ],
        [
            "2: intros; case H2; auto.",
            "VernacExtend",
            "954ebd5938d98f5945928131af2349e05a8458d4"
        ],
        [
            "rewrite scal_addEl, scalE1; auto.",
            "VernacExtend",
            "fe7bc8aceb566e9e10a841c2339fc2717ff4c2ca"
        ],
        [
            "pattern (x \u2228 x) at 2; rewrite (join_hom_com n k k x x); auto.",
            "VernacExtend",
            "21844656029c41bfd75d1b262f5961b7c05dc5c5"
        ],
        [
            "rewrite expKm1_odd, scal_addE0; auto.",
            "VernacExtend",
            "a8418c37a054e8a746445fd32b598f90643c31c4"
        ],
        [
            "apply odd_mult; auto.",
            "VernacExtend",
            "b51dd2ab58db02d57d64dd945b8a30b9282fbbbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_hom_id n k x : hom n k x -> odd k -> x \u2228 x = 0.",
            "VernacStartTheoremProof",
            "7f841d7775a3deac169b3b7deda6ac8c2d3bf592"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [|k] Hk; simpl expK.",
            "VernacExtend",
            "25e70d233fd16c997dc2dc7e17a082c79d74d3d3"
        ],
        [
            "intros HH; inversion HH.",
            "VernacExtend",
            "88492448374aad12c8ff410da5a3ab0c64d9e7c5"
        ],
        [
            "generalize Hk; case eqK_spec; intros; subst; Krm0; discriminate.",
            "VernacExtend",
            "d977fa3e9dff747676effc400fed44757a0e285f"
        ],
        [
            "intros [|k]; destruct x as [x y]; rewrite andbP; intros (Hk1,Hk2).",
            "VernacExtend",
            "72d32620cef26ba0e5317281d485c53dc3ec2e62"
        ],
        [
            "intros HH; inversion HH.",
            "VernacExtend",
            "88492448374aad12c8ff410da5a3ab0c64d9e7c5"
        ],
        [
            "intros Ho; rewrite (IH _ k.+1); auto.",
            "VernacExtend",
            "bf9ca5a1e68a54b503d26bcb3d88b7887c826562"
        ],
        [
            "rewrite conjf_hom with (k := S k); auto.",
            "VernacExtend",
            "8b977cede707145fd47345bd3c4ee18f2ba67a9c"
        ],
        [
            "rewrite expKm1_odd, join_scall, (join_hom_com n k k.+1 x y), expKm1_even, scalE1, scal_addE0; auto.",
            "VernacExtend",
            "f973276aab8232a1a39dff2f2b904a02b3af5caa"
        ],
        [
            "apply even_mult_l.",
            "VernacExtend",
            "90f0cb0b6080f6b86e575bda15b24aaea48c4d63"
        ],
        [
            "apply odd_plus_even_inv_r with 1%nat; auto; repeat constructor; auto.",
            "VernacExtend",
            "afb16844180ea9f875d606e7f168fca91e9678df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_vector_space_swap n x l : is_vector_space n l -> In x l -> exists l1, is_vector_space n (x::l1) /\\ joinl n l = joinl n (x::l1).",
            "VernacStartTheoremProof",
            "b794187683d5ab0c097d9bd890a56b482c50bc53"
        ],
        [
            "induction l as [|y l IH].",
            "VernacExtend",
            "a1e6293d4e8e758bbe22855abeb13b44b19d536a"
        ],
        [
            "intros _ [].",
            "VernacExtend",
            "7bcaff8becdca0897f7a6af7790d73839f66c309"
        ],
        [
            "simpl In; intros Hs [[] | Hxy].",
            "VernacExtend",
            "b13668cf0de0552af2e749f8dc228da805e1031f"
        ],
        [
            "exists l; auto.",
            "VernacExtend",
            "2eab71a4d324b79b2ef6a9e847d6eb06296bcbe0"
        ],
        [
            "assert (F1: is_vector_space n l).",
            "VernacExtend",
            "16487447ec7eb2dc95f53f5a089bc7c67f9f98d8"
        ],
        [
            "intros u Hu; apply Hs; auto with datatypes.",
            "VernacExtend",
            "d56858034e9030ccb425ae94912ab7afb681c5fa"
        ],
        [
            "case (IH F1 Hxy); intros l1 (H1l1,H2l1).",
            "VernacExtend",
            "9114428212b5e8015ddb4883e962311bdab36092"
        ],
        [
            "exists ((-(1)) .* y::l1); split.",
            "VernacExtend",
            "ba7fda82307081614767bc8618c1e5e5121d7389"
        ],
        [
            "intros u; simpl; intros [Hu|[Hu|Hu]]; subst.",
            "VernacExtend",
            "0a877568ce27e9617c4c560295b9058551e95a61"
        ],
        [
            "apply H1l1; auto with datatypes.",
            "VernacExtend",
            "0596440fe02bb71d06236c4ea3cdd85efe644fc3"
        ],
        [
            "apply VectorSpace.cbl_scal; apply Hs; auto with datatypes.",
            "VernacExtend",
            "8c52c48c3f6b618117a6a2f679e1988681dd54f3"
        ],
        [
            "apply H1l1; auto with datatypes.",
            "VernacExtend",
            "0596440fe02bb71d06236c4ea3cdd85efe644fc3"
        ],
        [
            "rewrite joinlS, H2l1.",
            "VernacExtend",
            "98ac970edc312c7941c6f4a925b0e547fe8d8a93"
        ],
        [
            "destruct l1 as [|z l1].",
            "VernacExtend",
            "e73ad5b024f1b387ab56aae7af5a1ae246eeddd3"
        ],
        [
            "simpl; Vfold n.",
            "VernacExtend",
            "b9f9449f47b4fc50318b4052e4f924187e72923e"
        ],
        [
            "rewrite join_hom_com with (k1 := 1%nat) (k2 := 1%nat).",
            "VernacExtend",
            "4dd2e30919df4cb5b47c66df1edb98945471d5d8"
        ],
        [
            "simpl expK; Krm1; rewrite join_scalr; auto.",
            "VernacExtend",
            "f03a355f91206616d09c3cc3f503720edced19af"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l1; auto with datatypes.",
            "VernacExtend",
            "2567593b4d8eb9991b68d51b8f0ebe5d02ff8776"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply Hs; auto with datatypes.",
            "VernacExtend",
            "d75fcdc5daafc4c651e13e0eddff6f41af75c805"
        ],
        [
            "rewrite joinlS, <-join_assoc.",
            "VernacExtend",
            "d2f8eb951ed20da3dc2fcdc26bc1ecbdedfe4fe9"
        ],
        [
            "rewrite join_hom_com with (k1 := 1%nat) (k2 := 1%nat) (x:= x).",
            "VernacExtend",
            "ab933343cec3d0bfad614d05b1d42c55016473c0"
        ],
        [
            "simpl expK; Krm1; rewrite <-join_scalr, join_assoc; auto.",
            "VernacExtend",
            "b1dac8f614ca4a2f5deb7979274a0fb7fb0330c8"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l1; auto with datatypes.",
            "VernacExtend",
            "2567593b4d8eb9991b68d51b8f0ebe5d02ff8776"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply Hs; auto with datatypes.",
            "VernacExtend",
            "d75fcdc5daafc4c651e13e0eddff6f41af75c805"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "destruct l as [|z l].",
            "VernacExtend",
            "c9fb76e09f3670322852b804ae18021ae097a99e"
        ],
        [
            "case Hxy.",
            "VernacExtend",
            "9a85cd30a1b14b8da004838e086558efef252659"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint factor n: (vect n) -> (vect n) -> vect n := match n return vect n -> vect n -> vect n with | O => fun x1 x2 => (x2 * x1^-1)%f | S n1 => fun x1 x2 => let (x11, x12) := x1 in let (x21, x22) := x2 in if x12 ?= 0 then ((0: vect n1), ('C[x11]^-1).* x21: vect n1) else let x32 := factor n1 x12 x22 in (factor n1 x12 (add n1 (('C[x11]) .* x32: vect n1) (scal n1 (-(1))%f x21: vect n1)) , x32) end.",
            "VernacFixpoint",
            "f8c0003239797576a7f6aad1490b30db28ce921e"
        ],
        [
            "Lemma factor0 n x : factor n x 0 = 0.",
            "VernacStartTheoremProof",
            "0d6e9a90072b532589dc8037e7041a19037fe685"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite multK0l; auto.",
            "VernacExtend",
            "d9fd994fb151459953bfa2baf32130a8d503b021"
        ],
        [
            "destruct x; case eq0_spec; intros Hx2; subst; Vfold n; Grm0.",
            "VernacExtend",
            "39c5b8cedb97bc2800cc761c49a157999bfaad68"
        ],
        [
            "rewrite IH; Grm0; rewrite IH; auto.",
            "VernacExtend",
            "8d043e82cf1a0e25b08e8c1c54b3dfb76eba6db9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_scal n k x M : factor n x (k .* M) = k .* factor n x M.",
            "VernacStartTheoremProof",
            "5a3af62e8c01847e7ad2922d4a4539ef5bd020f7"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "rewrite multK_assoc; auto.",
            "VernacExtend",
            "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
        ],
        [
            "destruct x as [x1 x2]; destruct M as [M1 M2].",
            "VernacExtend",
            "ec874222a813de70d48b1a77bf4d914ae0361c3a"
        ],
        [
            "case eq0_spec; intros Hx2; subst; Vfold n; Grm0.",
            "VernacExtend",
            "785aaa85a2aa56b1d8ea2b8dd2f2f6fb8b551bc1"
        ],
        [
            "rewrite <-!scal_multE, multK_com; auto.",
            "VernacExtend",
            "82fe62d1d495da09f67454e7d217e5f48d91121b"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
            "VernacExtend",
            "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
        ],
        [
            "apply sym_equal; rewrite <-IH.",
            "VernacExtend",
            "f55d2edd616121a476d73c2351a337656273b2f2"
        ],
        [
            "rewrite scal_addEr, !(scalE_swap _ (fn n) k); auto.",
            "VernacExtend",
            "7694be87c5a3360c683ab561054d2049ad9dbd84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_id n x : x <> 0 -> hom n 1 x -> factor n x x = 1.",
            "VernacStartTheoremProof",
            "120be534650db7c0e43d50de05ba6cf8f23de787"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros H; case eqK_spec; intros; auto; case H; auto; discriminate.",
            "VernacExtend",
            "bde7a41256c5d3114254c230994ddcb809c390e4"
        ],
        [
            "intros Hd; destruct x.",
            "VernacExtend",
            "d4c637b83e477c1ad2d693d526b307a6abd58fa6"
        ],
        [
            "rewrite !andbP; intros (Hx1, Hx2).",
            "VernacExtend",
            "ba6dc9950e0554495d843a02261516c7e1276696"
        ],
        [
            "rewrite (hom0E _ _ Hx1), !constk, !scalk, <-opp_multKl, multK1l; auto.",
            "VernacExtend",
            "c9d118383a7b0b67dd2151a6937ef8f5735af1a0"
        ],
        [
            "case eq0_spec; intros H1x2; subst.",
            "VernacExtend",
            "b8c315db895ae19e49c77b9ce71c127e03016457"
        ],
        [
            "rewrite invKr; auto; intros Hk1; case Hd.",
            "VernacExtend",
            "e16f214401d186c2adb9660e603d42c95576566c"
        ],
        [
            "rewrite (hom0E _ _ Hx1), Hk1; Grm0.",
            "VernacExtend",
            "5bd5fdc38a2016d5ed450cbae0c742a14abf1e33"
        ],
        [
            "rewrite IH, scalk, multK1r, addk, oppKr, factor0; auto.",
            "VernacExtend",
            "1f489ab34ef55b64d8b32a242e3d65113e902f45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_hom0E n x1 x2 : x1 <> 0 -> hom n 1 x1 -> hom n 0 x2 -> factor n x1 (x1 \u2228 x2) = x2.",
            "VernacStartTheoremProof",
            "7d996938925d60ca5ab53bfc64f1bcc067009cbc"
        ],
        [
            "intros Hx1 H1x1 Hx2.",
            "VernacExtend",
            "b31180da18ac82f9e9fafbb3fd0a21f221efbd90"
        ],
        [
            "rewrite (hom0E _ _ Hx2), joinkr, factor_scal, factor_id, scalk, multK1r; auto.",
            "VernacExtend",
            "21325198621829ab05315c48779049f5fb48ae3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_factor n x1 x2 : hom n 1 x1 -> x1 <> 0 -> x1 \u2228 x2 = 0 -> x2 = x1 \u2228 factor n x1 x2.",
            "VernacStartTheoremProof",
            "207052c2619dd457a2e4018f70d0785f39b2416d"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "case eqK_spec; auto; try (intros; discriminate).",
            "VernacExtend",
            "e242e2390977096108d43e24307f79e689793e20"
        ],
        [
            "intros H1 _ H2; case H2; auto.",
            "VernacExtend",
            "8f39b6251ebc88497fdc2a8fb8cc3f6c030cdb06"
        ],
        [
            "destruct x2 as [x3 x4]; destruct x1 as [x1 x2].",
            "VernacExtend",
            "53691d7e477bc08cab8a40bdf6c79a7051728cfd"
        ],
        [
            "rewrite !andbP; intros (Hu1, Hu2) H3.",
            "VernacExtend",
            "61bb81abf7b8ba145b49e2ee6d79d1cc44e7cd58"
        ],
        [
            "rewrite (hom0E _ _ Hu1), constk; auto.",
            "VernacExtend",
            "7cfe0182be43fc5b33f68b07db623cfa009dc96d"
        ],
        [
            "rewrite !joinkl, (conjf_hom _ _ _ Hu2); simpl expK; rewrite multK1r; auto.",
            "VernacExtend",
            "b76161083e3c9cff63e4e9cc4d765f2153eb5ebb"
        ],
        [
            "case eq0_spec; intros He2; subst.",
            "VernacExtend",
            "59f7ba962a9b8301c638cbacc2f0a3bf23d462c9"
        ],
        [
            "Grm0; intros HH; injection HH; clear HH; intros HH.",
            "VernacExtend",
            "3366ed681ec477f18e08bb6865f3b98a6139d61a"
        ],
        [
            "case (scalE_integral _ (fn n) _ _ HH); clear HH; intros HH; subst; auto.",
            "VernacExtend",
            "f212393369050369c1e0c0014f3dcc2d041a2b5b"
        ],
        [
            "case H3; rewrite (hom0E _ _ Hu1), HH; auto.",
            "VernacExtend",
            "8095151b83fd68220e88fbe42ee82d66d7d9bdd3"
        ],
        [
            "rewrite joinkl, <- scal_multE, invKl, scalE1; Grm0; auto.",
            "VernacExtend",
            "362b3ac6e5f24964576ef366138f71191e0fa456"
        ],
        [
            "intros HH; case H3; rewrite (hom0E _ _ Hu1), HH; auto.",
            "VernacExtend",
            "58ea48992ccc8ab5040977721d196bdff812ba06"
        ],
        [
            "intros HH; injection HH; Vfold n; intros Hr1 Hr2.",
            "VernacExtend",
            "38c5a30ea9df8ba928806288b09025bbd5c4a958"
        ],
        [
            "assert (H1: x2 \u2228 factor n x2 x4 = x4).",
            "VernacExtend",
            "aae4b61cc69daad41cef6d9f1a323d57131fb104"
        ],
        [
            "rewrite <-IH; auto.",
            "VernacExtend",
            "b90ad3b7421dda57555d665f7355503314a7e57a"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite joinkl, join_scall, <-IH, scal_addEr, <-addE_assoc, scal_addE0, addE0l, <-scal_multE, multK_m1_m1, scalE1; auto.",
            "VernacExtend",
            "e8cad0b9eaa74e34d0bab18b42d67af8a1c4006f"
        ],
        [
            "rewrite join_addr, !join_scalr, H1, <-join_scall; auto.",
            "VernacExtend",
            "7e1b9570995cd136680811e64fb2650874f01e22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factork n x k : x <> 0 -> hom n 1 x -> factor n x [k] = 0.",
            "VernacStartTheoremProof",
            "3eb4932188aa33e74da63ffdefd3f47b1d76574d"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros H1 H2; case H1; generalize H2.",
            "VernacExtend",
            "9e27681e6f70b42a4891392b4157e51b28dd1d30"
        ],
        [
            "case eqK_spec; auto; intros; discriminate.",
            "VernacExtend",
            "7b3395b0a6bb1c96dd79c1b95950f09ecbfa52f0"
        ],
        [
            "intros Hx; destruct x; rewrite andbP; intros (H1,H2); Vfold n.",
            "VernacExtend",
            "383977678c46f875eb61dd4a222a4d07308c2780"
        ],
        [
            "case eq0_spec; Grm0; intros H3.",
            "VernacExtend",
            "2045bddc82541735754b0afe0477fa1f6fb2eee9"
        ],
        [
            "rewrite IH; Grm0.",
            "VernacExtend",
            "406664666b730176f578b9631180a549c7427e13"
        ],
        [
            "rewrite factor0; auto.",
            "VernacExtend",
            "7418d92198b5fe1f3b75547f8a9ca185e47beccc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor0_hom0 n x1 x2 : x1 <> 0 -> hom n 1 x1 -> hom n 0 x2 -> factor n x1 x2 = 0.",
            "VernacStartTheoremProof",
            "4248d613ef46384ddf55295718f83a8ace892b24"
        ],
        [
            "intros H1 H2 H3; rewrite (hom0E _ _ H3); apply factork; auto.",
            "VernacExtend",
            "c7732cc1ec7a653f78f20a596f4251bc98bfcdb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_hom n k x1 x2 : x1 <> 0 -> x1 \u2228 x2 = 0 -> hom n 1 x1 -> hom n k.+1 x2 -> hom n k (factor n x1 x2).",
            "VernacStartTheoremProof",
            "de16cadc3cd1e3d9e82f177beccb6234753cc6bd"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; intros k; simpl; auto; try Vfold n.",
            "VernacExtend",
            "4e25aec9f056cf18d6416cc9bd2308f05aee065c"
        ],
        [
            "case eqK_spec; auto; try (intros; discriminate).",
            "VernacExtend",
            "e242e2390977096108d43e24307f79e689793e20"
        ],
        [
            "intros H1 H2; case H2; auto.",
            "VernacExtend",
            "64473c0bac90940aec179baa53933e91e736e033"
        ],
        [
            "intros H Heq; destruct x2 as [x3 x4]; destruct x1 as [x1 x2]; rewrite !andbP; intros (Hu1,Hu2) (Hu3, Hu4).",
            "VernacExtend",
            "efdea2aa759eb6a257948764f4b95d83ae994b93"
        ],
        [
            "case eq0_spec; intros Hx2; subst.",
            "VernacExtend",
            "69a4f10e79c1713573143c04861d83e956b4f5ef"
        ],
        [
            "destruct k as [| k]; rewrite ?eq0I, ?homk0, scal_hom; auto.",
            "VernacExtend",
            "c5d4f5fdbb9c1d71436625ea3f5054bb96d70798"
        ],
        [
            "injection Heq; Vfold n; rewrite (hom0E _ _ Hu1).",
            "VernacExtend",
            "ba32659edb334422d6f7dd826d5779667159cc41"
        ],
        [
            "rewrite conjf_hom with (1 := Hu2); simpl expK; rewrite multK1r, joinkl; auto.",
            "VernacExtend",
            "d1ffe3be8634f1f069b28a65524d6a292d994758"
        ],
        [
            "intros Heq1 Heq2.",
            "VernacExtend",
            "b34313fe2e9bd56c56ccba035fddfeb1aeaf38a7"
        ],
        [
            "rewrite constk; auto.",
            "VernacExtend",
            "cc9aa661e269f43bc01ffa65c648c994fd1edd61"
        ],
        [
            "simpl in x3.",
            "VernacExtend",
            "ca7fad0e73fcca3a2b8b894dee408b506c725408"
        ],
        [
            "assert (Heq3: x2 \u2228 ('C[x1] .* factor n x2 x4 + (- (1)).* (x3 : vect n)) = 0).",
            "VernacExtend",
            "8b0f21ed027fba0a581e40518fae4560e6565e20"
        ],
        [
            "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
            "VernacExtend",
            "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
        ],
        [
            "destruct k as [| k]; rewrite andbP; split; auto.",
            "VernacExtend",
            "dc7bfaa8ec3da87f46cce53cc777d6ebbcb9d4eb"
        ],
        [
            "rewrite factor0_hom0; try rewrite eq0I; auto.",
            "VernacExtend",
            "6fc972ecd1fdb75e037d6d74d0ee089892d36fea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_add n k x1 x2 x3 : x1 <> 0 -> hom n 1 x1 -> hom n k.+1 x2 -> hom n k.+1 x3 -> x1 \u2228 x2 = 0 -> x1 \u2228 x3 = 0 -> factor n x1 (x2 + x3) = factor n x1 x2 + factor n x1 x3.",
            "VernacStartTheoremProof",
            "7ad0bdb9359b670694e0fafbcc00305a4d34da57"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros k H; case eqK_spec; auto; intros H1 H2; case H; auto; discriminate.",
            "VernacExtend",
            "3d2f6c553fc30eabb2ca7779689a4bfac76c22b4"
        ],
        [
            "intros k; destruct x1 as [x11 x12]; destruct x2 as [y11 y12]; destruct x3 as [z11 z12]; rewrite !andbP; Vfold n.",
            "VernacExtend",
            "734a1caf8ae0d227be242eece20e69f6992f4d7d"
        ],
        [
            "fold vect in x11, x12, y11, y12, z11, z12.",
            "VernacExtend",
            "b7f64037a853a0fa335a3211e4a265883b98845e"
        ],
        [
            "intros H1 (H2,H3) (H4, H5) (H6, H7) HH1 HH2.",
            "VernacExtend",
            "c486aedb49c4e3f2b41981604ebb213f0a050764"
        ],
        [
            "injection HH1; injection HH2; Vfold n; intros Eq1 Eq2 Eq3 Eq4; clear HH1 HH2.",
            "VernacExtend",
            "b7991f3a7598fac61ce73854dc634384f7faaa95"
        ],
        [
            "rewrite (hom0E _ _ H2), !constk.",
            "VernacExtend",
            "f43a87babdc02ea247cc56d197290e642af1805b"
        ],
        [
            "case eq0_spec; intros Hex12; subst; Vfold n; Grm0.",
            "VernacExtend",
            "80a9b1850a88fa42022e46edc7203fc09972ee6a"
        ],
        [
            "rewrite scal_addEr; auto.",
            "VernacExtend",
            "ac3d8102aaac3f0446086b2a67b608562cc67b92"
        ],
        [
            "simpl in y12.",
            "VernacExtend",
            "87a778f01f0676207f5b1466cb0daa69ea48a0d7"
        ],
        [
            "assert (Hf: factor n x12 (y12 + z12) = factor n x12 y12 + factor n x12 z12).",
            "VernacExtend",
            "fe524df4598b5c86a3ebca96a35d29dadb792e9d"
        ],
        [
            "apply IH with (k := k); auto.",
            "VernacExtend",
            "d29e8ce35cb45fc94f05b084a3b269dbfaa20553"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "assert (Heq: forall kk (xx yy zz tt: vect n), (kk .* (xx + yy) + (-(1)).* (zz + tt) = (kk .* xx + (-(1)).* zz) + (kk .* yy + (-(1)).* tt))).",
            "VernacExtend",
            "7dc1fd7af1fb8345b10c0056140f0e306263be0d"
        ],
        [
            "intros kk xx yy zz tt.",
            "VernacExtend",
            "b332053490b4b97a147b0a8e598276bf89334c1b"
        ],
        [
            "rewrite !scal_addEr, !addE_assoc; auto.",
            "VernacExtend",
            "2e81b651bb978c6e168dac09d27104a0d2af07ac"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com, !addE_assoc; auto.",
            "VernacExtend",
            "2d3e1d0e9541e9c63ab0af6b580d4c553e0a19c8"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "rewrite Heq; clear Heq.",
            "VernacExtend",
            "2c0e3b5a66bcbbbdb3057a9bda33c6149b1157f7"
        ],
        [
            "destruct k as [| k].",
            "VernacExtend",
            "ad3893accd99580737737c9c65861a290ff93b49"
        ],
        [
            "assert (Hv1: x12 \u2228 ('C[x11] .* factor n x12 y12 + (- (1)).* y11) = 0).",
            "VernacExtend",
            "57548fd679d0671a5977ddc8d46dcaefedfc6506"
        ],
        [
            "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
            "VernacExtend",
            "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
        ],
        [
            "generalize Eq4; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
            "VernacExtend",
            "00611d85dd7fb9c2ba5b6c2587bead558e5b32c0"
        ],
        [
            "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
            "VernacExtend",
            "e917777175689910463540648f54b88ae7db432a"
        ],
        [
            "assert (Hv2: x12 \u2228 ('C[x11] .* factor n x12 z12 + (- (1)).* z11) = 0).",
            "VernacExtend",
            "230a61db329487daeac20abbdae6c8d36e818803"
        ],
        [
            "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
            "VernacExtend",
            "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
        ],
        [
            "generalize Eq2; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
            "VernacExtend",
            "52b04011915f06861d6115be5e279ec2acbda39c"
        ],
        [
            "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
            "VernacExtend",
            "e917777175689910463540648f54b88ae7db432a"
        ],
        [
            "rewrite !factor0_hom0; Grm0; apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
            "VernacExtend",
            "3455035ce7e972b4746e98930a0ecf0e671d5fca"
        ],
        [
            "apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
            "VernacExtend",
            "d6e9e66b32cabde2edf81a1fd781295c729469d6"
        ],
        [
            "apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
            "VernacExtend",
            "d6e9e66b32cabde2edf81a1fd781295c729469d6"
        ],
        [
            "apply IH with (k := k); auto; try apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
            "VernacExtend",
            "59fe5a76522d36d8c0034833e99f88f2fb664a01"
        ],
        [
            "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
            "VernacExtend",
            "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
        ],
        [
            "generalize Eq4; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
            "VernacExtend",
            "00611d85dd7fb9c2ba5b6c2587bead558e5b32c0"
        ],
        [
            "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
            "VernacExtend",
            "e917777175689910463540648f54b88ae7db432a"
        ],
        [
            "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
            "VernacExtend",
            "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
        ],
        [
            "generalize Eq2; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
            "VernacExtend",
            "52b04011915f06861d6115be5e279ec2acbda39c"
        ],
        [
            "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
            "VernacExtend",
            "e917777175689910463540648f54b88ae7db432a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fortho n : (vect n) -> (vect n) -> bool := match n return vect n -> vect n -> bool with | O => fun x1 x2 => false | S n1 => fun x1 x2 => let (x11, x12) := x1 in let (x21, x22) := x2 in if x12 ?= 0 then x21 ?= 0 else fortho n1 x12 x21 && fortho n1 x12 x22 end.",
            "VernacFixpoint",
            "8f19ec5dd0fd88726e2f0965434a92201d6b1709"
        ],
        [
            "Lemma fortho0 n : 0 < n -> fortho n 0 0.",
            "VernacStartTheoremProof",
            "0d068ab6fc4382599a0b5154cec92e641b92548c"
        ],
        [
            "intros H; destruct n; simpl.",
            "VernacExtend",
            "4a38724748d67ce5509632b577b9ad41e55d5dff"
        ],
        [
            "contradict H; auto with arith.",
            "VernacExtend",
            "b214f7778647ca17388e52789b102a05bada7ab4"
        ],
        [
            "rewrite !eq0I; auto.",
            "VernacExtend",
            "e463366052707642dbd332986a555e4c6f85b691"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_refl n x : fortho n x x -> x = 0.",
            "VernacStartTheoremProof",
            "dc8346cc07d16146d2b67b13089160f15206e53e"
        ],
        [
            "induction n as [|n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros H; discriminate.",
            "VernacExtend",
            "9744d3b951ad3daa7f0c30b4af0ca7cfd1f015c2"
        ],
        [
            "destruct x; case eq0_spec.",
            "VernacExtend",
            "235e2447963cc3a55f52f8258362f7d9f35b7574"
        ],
        [
            "case eq0_spec; intros; subst; auto; discriminate.",
            "VernacExtend",
            "26cf013082c5038c5b1e67c7647c013e58bf7d0a"
        ],
        [
            "intro Hx1; rewrite andbP; intros (Hx2x1, Hx1x2).",
            "VernacExtend",
            "fd7525c13f648bb13bab98951bb127bf4c414363"
        ],
        [
            "case Hx1; apply IH; auto.",
            "VernacExtend",
            "f10dcbabc667e99ca6dd3e211df24ff47c769cb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma forthok n k1 k2 (v: vect n) : v <> 0 -> hom n k1.+1 v -> fortho n v [k2].",
            "VernacStartTheoremProof",
            "56e989cb9a074767b0c8ae016c64b8414453c57f"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros _ _; case eqK_spec; auto; intros H1 H2; subst; auto; case H2; auto.",
            "VernacExtend",
            "712ba0ba58edae1148410ce899654c25b6b41f40"
        ],
        [
            "intros k k1; destruct v; rewrite andbP; intros HH.",
            "VernacExtend",
            "f255ca606109e74f82ffce67c588d4a5311f6397"
        ],
        [
            "case eq0_spec; intros HH2; subst; auto.",
            "VernacExtend",
            "d09b6d11a0a65b3d59ae2025d40a2978f6ce5794"
        ],
        [
            "rewrite eq0I; auto.",
            "VernacExtend",
            "a06a75bba6d56b673bd55816ed0e47683e4f695c"
        ],
        [
            "intros (H1, H2).",
            "VernacExtend",
            "cbe4fae06561c7d97a3cceb65a0c2d56dc027b9e"
        ],
        [
            "rewrite (IH _ k), (IH _ k 0%f); auto.",
            "VernacExtend",
            "06e903a2a0a41c3cecbde22b9ee16ecd76643d00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_scal n k v1 v2 : fortho n v1 v2 -> fortho n v1 (k .* v2).",
            "VernacStartTheoremProof",
            "a6e0b85a28239f2e478fef4d48e50091daa96c3f"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "destruct v1; destruct v2; case eq0_spec; auto.",
            "VernacExtend",
            "de2714e5eca703300c482cbf904c7be0c856cbbf"
        ],
        [
            "case eq0_spec; auto; intros; subst; try discriminate; Grm0.",
            "VernacExtend",
            "5fc261da280ea164600662812f8911e48b21e772"
        ],
        [
            "rewrite eq0I; auto.",
            "VernacExtend",
            "a06a75bba6d56b673bd55816ed0e47683e4f695c"
        ],
        [
            "rewrite andbP; intros Hy1 (Hr1, Hr2).",
            "VernacExtend",
            "b98268d8066c25ee4226975012a10f7e5a6c64d6"
        ],
        [
            "rewrite !IH; auto.",
            "VernacExtend",
            "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_add n v1 v2 v3 : fortho n v1 v2 -> fortho n v1 v3 -> fortho n v1 (v2 + v3).",
            "VernacStartTheoremProof",
            "54b1bc0301b4090e772b241f97da1c8c04c36b9a"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "destruct v1; destruct v2; destruct v3.",
            "VernacExtend",
            "b3b32e5be1aca102f5708f65d3f82d34c57c2ef7"
        ],
        [
            "case eq0_spec.",
            "VernacExtend",
            "a40b3faf1feddcb9db52be1b29b15ceb1d5467dd"
        ],
        [
            "do 2 (case eq0_spec; auto; try (intros; discriminate)); intros; subst; Grm0.",
            "VernacExtend",
            "9065ea23353e976d5bfcdb15338191a9edc8e2e5"
        ],
        [
            "rewrite eq0I; auto.",
            "VernacExtend",
            "a06a75bba6d56b673bd55816ed0e47683e4f695c"
        ],
        [
            "rewrite andbP, andbP; intros Hy1 (H1, H2) (H3, H4).",
            "VernacExtend",
            "5a42e24b680de75fad47de8c57f88bc1e7d8c465"
        ],
        [
            "rewrite !IH; auto.",
            "VernacExtend",
            "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_conj n b v1 v2 : fortho n v1 v2 -> fortho n v1 (v2 ^_ b).",
            "VernacStartTheoremProof",
            "d8a92a92a21a3eed2018c925d56d4ee1eb25077e"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros b; destruct v1; destruct v2.",
            "VernacExtend",
            "12e17daface7d44600d5d1cdee7010d82e142adf"
        ],
        [
            "case eq0_spec.",
            "VernacExtend",
            "a40b3faf1feddcb9db52be1b29b15ceb1d5467dd"
        ],
        [
            "case eq0_spec; auto; try (intros; discriminate); intros; subst; Grm0.",
            "VernacExtend",
            "ef92fac8f428a2c70f199588ec1910ea5e7b8199"
        ],
        [
            "rewrite eq0I; auto.",
            "VernacExtend",
            "a06a75bba6d56b673bd55816ed0e47683e4f695c"
        ],
        [
            "rewrite andbP, andbP; intros Hy1 (H1, H2).",
            "VernacExtend",
            "ce86d734c9af3ad6b8542a907211c5131a357662"
        ],
        [
            "rewrite !IH; auto.",
            "VernacExtend",
            "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_join n v1 v2 v3 : fortho n v1 v2 -> fortho n v1 v3 -> fortho n v1 (v2 \u2228 v3).",
            "VernacStartTheoremProof",
            "2fe3ff61e31b61f06986b02b7bc398fe8e118e3d"
        ],
        [
            "induction n as [| n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "destruct v1; destruct v2; destruct v3.",
            "VernacExtend",
            "b3b32e5be1aca102f5708f65d3f82d34c57c2ef7"
        ],
        [
            "case eq0_spec.",
            "VernacExtend",
            "a40b3faf1feddcb9db52be1b29b15ceb1d5467dd"
        ],
        [
            "do 2 (case eq0_spec; auto; try (intros; discriminate)); intros; subst; Grm0.",
            "VernacExtend",
            "9065ea23353e976d5bfcdb15338191a9edc8e2e5"
        ],
        [
            "rewrite eq0I; auto.",
            "VernacExtend",
            "a06a75bba6d56b673bd55816ed0e47683e4f695c"
        ],
        [
            "rewrite andbP, andbP; intros Hy1 (H1, H2) (H3, H4).",
            "VernacExtend",
            "5a42e24b680de75fad47de8c57f88bc1e7d8c465"
        ],
        [
            "rewrite fortho_add, !IH; auto.",
            "VernacExtend",
            "c18841585b7c703a7a0bdb5f8c4ac13109f2168d"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "rewrite fortho_conj; auto.",
            "VernacExtend",
            "ca97067b8ad618e9bd15a9275e9544811b4a6228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_joinl n k v l : v <> 0 -> hom n k.+1 v -> (forall v1, In v1 l -> fortho n v v1) -> fortho n v (joinl n l).",
            "VernacStartTheoremProof",
            "583835a1f0e58b13eba649cdd0b4a54e3be50ce9"
        ],
        [
            "intros Hv Hhv; induction l as [| a l IH]; simpl; try Vfold n; auto.",
            "VernacExtend",
            "74749fe2bfb5d501a2bb21282354407362921f3e"
        ],
        [
            "intros; apply (forthok n k 0%f); auto.",
            "VernacExtend",
            "420c0cc2373c5d9662cab5b607f76398c0889d33"
        ],
        [
            "intros; destruct l; auto.",
            "VernacExtend",
            "66d72bb26f028f33cc464c281dbbb94fb23a6b15"
        ],
        [
            "apply fortho_join; auto with datatypes.",
            "VernacExtend",
            "5db6038390bccbd9026d611706e4f8a7fa8080be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma factor_ortho n x1 x2 : x1 <> 0 -> hom n 1 x1 -> fortho n x1 x2 -> factor n x1 (x1 \u2228 x2) = x2.",
            "VernacStartTheoremProof",
            "3d64c9a49fa5052da782223563c32ac3d1b959ff"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros H1 H2; case H1; generalize H2; case eqK_spec; auto.",
            "VernacExtend",
            "2abf988fc3d6638cbe75783cbe87a445d30c31da"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "destruct x2 as [y1 y2]; destruct x1 as [x1 x2]; case eq0_spec.",
            "VernacExtend",
            "6cb08b08ff1941cb5bf8f490c535d424b61ff50d"
        ],
        [
            "rewrite andbP; case eq0_spec; intros Hx2 Hy1 HH (HH1,HH2) Ht; subst; Grm0; try discriminate.",
            "VernacExtend",
            "98caea3ba8ac56080b0940fc7830db1ad0751435"
        ],
        [
            "pattern x1 at 2; rewrite (hom0E _ _ HH1).",
            "VernacExtend",
            "2bc2742634d3594c4c0f3cc8e825cec47647508b"
        ],
        [
            "rewrite joinkl, <-scal_multE, invKr, scalE1; auto.",
            "VernacExtend",
            "0877f0abaaafc807fa53277eb7f9d94cd3482873"
        ],
        [
            "intros HH3; case HH; rewrite (hom0E _ _ HH1), HH3; auto.",
            "VernacExtend",
            "ac87bf94af62cd97f9edc0e7c2bbfe07b3641b67"
        ],
        [
            "rewrite andbP, andbP; intros Hy1 HH (HH1,HH2) (Ht1, Ht2); try discriminate.",
            "VernacExtend",
            "a7d75dab017ddb84e8a11cb09241fde92e3a4707"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "pattern x1 at 2; rewrite (hom0E _ _ HH1).",
            "VernacExtend",
            "2bc2742634d3594c4c0f3cc8e825cec47647508b"
        ],
        [
            "rewrite joinkl, scal_addEr, <-scal_multE, <-addE_assoc, <-scal_addEl, <-opp_multKl, multK1l, oppKr; Grm0.",
            "VernacExtend",
            "cbabe65f612b9c1880ef7ab012995f6a2f30e013"
        ],
        [
            "rewrite factor_scal, (conjf_hom _ _ _ HH2); simpl expK.",
            "VernacExtend",
            "9ee92c6eab1cf56be0368e5aa19bde3b9049fcdd"
        ],
        [
            "rewrite multK1r, join_scall, factor_scal, IH, <-scal_multE, multK_m1_m1, scalE1; auto.",
            "VernacExtend",
            "a89d5ad72890f9bf6111533fbfe30fc59e500c44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint fget n : (vect n) -> (vect n) -> K := match n return vect n -> vect n -> K with | O => fun x1 x2 => 0%f | S n1 => fun x1 x2 => let (x11, x12) := x1 in let (x21, x22) := x2 in if x12 ?= 0 then (('C[x11])^-1 * 'C[x21])%f else fget n1 x12 x22 end.",
            "VernacFixpoint",
            "5d7ca3ca34817d361269a8671794f24c43e84caf"
        ],
        [
            "Lemma fget_scal n k x1 x2 : fget n x1 (k .* x2) = (k * fget n x1 x2)%f.",
            "VernacStartTheoremProof",
            "d77863c1a453dd2f41c48a0c0a215fe813df7f3b"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n; Krm0.",
            "VernacExtend",
            "841270432cee486ac573d61e8082650d0e28295e"
        ],
        [
            "destruct x1; destruct x2; case eq0_spec; auto.",
            "VernacExtend",
            "9c44257f08ebe8134c6f9b0c420c4879232a3634"
        ],
        [
            "rewrite const_scal, <-!multK_assoc, (multK_com _ Hp k); auto.",
            "VernacExtend",
            "354a566305b60524aeca5ea46815426569b03db6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fortho_fget n x1 x2 : x1 <> 0 -> hom n 1 x1 -> hom n 1 x2 -> fortho n x1 (x2 + (-(1) * fget n x1 x2)%f .* x1).",
            "VernacStartTheoremProof",
            "93aa6b102b47d2b32eeac7fcbd451896a7d37c84"
        ],
        [
            "induction n as [| n IH]; simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "case eqK_spec; auto; try (intros; discriminate).",
            "VernacExtend",
            "e242e2390977096108d43e24307f79e689793e20"
        ],
        [
            "intros HH HH1; case HH1; auto.",
            "VernacExtend",
            "0725be1d458850c6f815678b597a1192fcd05a06"
        ],
        [
            "destruct x2 as [y1 y2]; destruct x1 as [x1 x2].",
            "VernacExtend",
            "7bec33613373b36df1aa90c0faaf0f0405268edd"
        ],
        [
            "intros HH; rewrite !andbP; intros (H1, H2) (H3, H4).",
            "VernacExtend",
            "3b0126a0f0704ba28a0f1bb755f0039dbd6d709f"
        ],
        [
            "pattern x1 at 2 4; rewrite (hom0E _ _ H1).",
            "VernacExtend",
            "82ff018f53c8f1b653991ba3e2ab3c11026092aa"
        ],
        [
            "pattern y1 at 1 3; rewrite (hom0E _ _ H3).",
            "VernacExtend",
            "3610fa5fb918f54fb284ff7effba0822eaa99bd2"
        ],
        [
            "case eq0_spec; intros H5; subst.",
            "VernacExtend",
            "79688c82589492d701bec972e14bf3a41ba8e35d"
        ],
        [
            "rewrite !scalk, addk, (multK_com _ Hp ('C[x1]^-1)%f), !multK_assoc, invKr, multK1r; Krm1.",
            "VernacExtend",
            "179b6990eba513fba0da64d45654c2d24b91ea6d"
        ],
        [
            "rewrite oppKr, eq0I; auto.",
            "VernacExtend",
            "472679539b5a364cbc28ccdbde1c240c6c936e95"
        ],
        [
            "intros HH1; case HH; rewrite (hom0E _ _ H1), HH1; auto.",
            "VernacExtend",
            "12373dbe21ad0497a8d221b7e037fc5d97542383"
        ],
        [
            "rewrite andbP; split.",
            "VernacExtend",
            "fcb333f5067fa5cc8b2c5a878cca072a3e03b466"
        ],
        [
            "apply fortho_add; try apply fortho_genk; auto.",
            "VernacExtend",
            "80d035279d5c07463cfc4b90e19557e68ee9e679"
        ],
        [
            "repeat apply fortho_scal; auto.",
            "VernacExtend",
            "79b4d702cf5e1d12a5728faeecdbfde226d5c212"
        ],
        [
            "apply forthok with 0%nat; auto.",
            "VernacExtend",
            "1f70ebd03d6d348ec09a4f0ac30c85a5b7fac3c2"
        ],
        [
            "repeat apply fortho_scal; auto.",
            "VernacExtend",
            "79b4d702cf5e1d12a5728faeecdbfde226d5c212"
        ],
        [
            "apply forthok with 0%nat; auto.",
            "VernacExtend",
            "1f70ebd03d6d348ec09a4f0ac30c85a5b7fac3c2"
        ],
        [
            "apply IH; auto.",
            "VernacExtend",
            "ab7c838ddd716a3b14059f64c365105253349c54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_addmult n (f: vect n -> vect n -> K) x l : hom n 1 x -> (forall i, In i l -> hom n 1 i) -> x \u2228 joinl n l = x \u2228 joinl n (map (fun y => (y + (f x y) .* x)) l).",
            "VernacStartTheoremProof",
            "5c73828bd1ce05466788b9107e84d1991e414719"
        ],
        [
            "intros Hk1 Hl; induction l as [| a l IH]; auto.",
            "VernacExtend",
            "8d51f2492d71523a7930357c4ae9d5bcf2755821"
        ],
        [
            "case (list_case _ l); intros Hll.",
            "VernacExtend",
            "c97b3fd20d54ebeb63cbff0a6e926b882c9a814e"
        ],
        [
            "subst; simpl; Vfold n.",
            "VernacExtend",
            "ebd42ba88cce268b70cc4ee363f470f7185a6447"
        ],
        [
            "rewrite join_addr, !join_scalr, join_hom1_id; Grm0.",
            "VernacExtend",
            "33cd98c594bfecb82db4bb932955ca8a3ee11117"
        ],
        [
            "simpl map; rewrite !joinlS; auto; Vfold n.",
            "VernacExtend",
            "adf565cc97bd8c045175172eb34db06e825ee841"
        ],
        [
            "rewrite <-!join_assoc, join_addr, !join_scalr, join_hom1_id; Grm0.",
            "VernacExtend",
            "14c603deab983ab47b874a6c3529bb2ab5a98835"
        ],
        [
            "rewrite (join_hom_com n 1 1 a x); auto with datatypes.",
            "VernacExtend",
            "fa909000ef9b82b37262f45251eb199afd64e881"
        ],
        [
            "rewrite !join_scall, !join_assoc, IH; auto with datatypes.",
            "VernacExtend",
            "e49c602a06a0432fbe39a2a60e0639d7a956983d"
        ],
        [
            "destruct l; auto; intros HH; discriminate.",
            "VernacExtend",
            "8f35d781c957f8d90844529d6c4b195941451059"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_hom n k l1 l2 : (forall i, In i l2 -> hom n k i) -> hom n k (l1 *X* l2).",
            "VernacStartTheoremProof",
            "acf6471598669875faf8afe665577e0c05c20c06"
        ],
        [
            "generalize k l2; clear k l2.",
            "VernacExtend",
            "47ce07ccc298ba17f7d27c8060ea0afad5735ba0"
        ],
        [
            "induction l1 as [| a l1 IH].",
            "VernacExtend",
            "951e2ee39885793c40e469f53833ac6a99958b97"
        ],
        [
            "intros; rewrite mprod0l; apply homk0.",
            "VernacExtend",
            "4b26bc19f418e39c28b9b6088a4c1d83775e0a0e"
        ],
        [
            "intros k [| b l2] H; auto.",
            "VernacExtend",
            "758786f9f810038cc613e85ec3f4acb501eb185a"
        ],
        [
            "rewrite mprod0r; apply homk0.",
            "VernacExtend",
            "c6c9f8426d88f8600a6d8c9fbd7648b4f51a4ed4"
        ],
        [
            "rewrite mprod_S; auto with datatypes.",
            "VernacExtend",
            "fe5af4673ed2caf39d6a1154a229475a75426cb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mprod_hom.",
            "VernacHints",
            "973cf98853001ebad9cd6dd0e4befe4f59e0f347"
        ],
        [
            "Definition is_decomposable n M := exists l, decomposable n l M.",
            "VernacDefinition",
            "1b6513bdefdc57b11c0990a3fc68ea27fa071cee"
        ],
        [
            "Lemma joinl_factor n x M : x <> 0 -> hom n 1 x -> is_decomposable n M -> x \u2228 M = 0 -> exists k, exists l, (forall v, In v l -> hom n 1 v) /\\ M = k .* joinl n (x::l).",
            "VernacStartTheoremProof",
            "1f081e10b876b6645383b00eccec65f5e1e25609"
        ],
        [
            "intros Hx Hhx (l, Hl) HxM.",
            "VernacExtend",
            "a46f880788fb450f3971fcc23261cd85445ef207"
        ],
        [
            "case (eqE_spec _ (fn n) M 0); intros HM.",
            "VernacExtend",
            "ef65cec28aee26fd8f01a04a21b688228ae34923"
        ],
        [
            "exists 0%f; exists (x::nil); split; Grm0.",
            "VernacExtend",
            "843855c1940565b4421ed22645a95302e208c145"
        ],
        [
            "simpl; intros v [Hv | []]; subst; auto.",
            "VernacExtend",
            "4ec3302301c185ca3b5c298c9114704cc20f7f37"
        ],
        [
            "assert (Hv: is_vector n x).",
            "VernacExtend",
            "6a6c7b64fe7aa80551d5583003d3ded45e252165"
        ],
        [
            "red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "048d09d46eadb61a93c4dc0b3684e613005ae8d7"
        ],
        [
            "rewrite (decomp_cbl _ _ _ _ Hv Hl) in HxM; auto.",
            "VernacExtend",
            "350e74ff0117809fbb987240a66ffe067655c0b9"
        ],
        [
            "case cbl_mprod with (2 := HxM); auto.",
            "VernacExtend",
            "3571b8f2c3e5270f555bb3cfe7a9cc724b3b8647"
        ],
        [
            "intros ll (H1ll, H2ll); subst.",
            "VernacExtend",
            "b18ce44befa7ad3aa96a1157996454f083f1a4a9"
        ],
        [
            "case Hl; intros Hu1 HU2; subst.",
            "VernacExtend",
            "6886fa6fe3d846212700da5de9b3a64e080b017e"
        ],
        [
            "assert (Hu4: forall x, In x l -> hom n 1 x).",
            "VernacExtend",
            "a393b5d0a8ee896d947a661aa7f2e92fdfb4eb24"
        ],
        [
            "intros x H1x; rewrite <-cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "b685414fbb04a7ff7231ed5fb2fd6fcd1caeae83"
        ],
        [
            "apply Hu1; auto.",
            "VernacExtend",
            "0fecc98425fa7bd0a83fd3d92509915eda36930d"
        ],
        [
            "generalize l H1ll Hx Hu4; elim ll; clear ll l Hx Hhx H1ll HxM Hl Hv Hu1 Hu4 HM.",
            "VernacExtend",
            "4bdcd0ebf1697c5980482e52a37a916302d66cb5"
        ],
        [
            "intros l Hl HH; case HH; auto.",
            "VernacExtend",
            "fae467c69484587c0dd6c3d2119c3b19fe9dc0a8"
        ],
        [
            "intros a ll IH [|b l] Hl H1 H2; try discriminate.",
            "VernacExtend",
            "95e6a9d48088ba066bef771f10fdc4221ea67679"
        ],
        [
            "case (eqK_spec _ Hp a 0%f); intros H4; subst.",
            "VernacExtend",
            "06d4603b55c0dc88e3e51ccedbda246836f1c561"
        ],
        [
            "rewrite mprod_S; Grm0.",
            "VernacExtend",
            "c156241d6f1aa48e8047a0b201a67d15be06d54d"
        ],
        [
            "case (IH l); auto with datatypes.",
            "VernacExtend",
            "632be0dbbf1317ac6680c0261b65cb54e430f9e8"
        ],
        [
            "intros HH; case H1; rewrite mprod_S, HH; Grm0.",
            "VernacExtend",
            "249834f938bf4142d975117fc89c55623c17f433"
        ],
        [
            "rewrite (scalE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
        ],
        [
            "intros k (l1, (H1l1, H2l1)).",
            "VernacExtend",
            "931a857c9af09c94e30252e2698f10437b0997a6"
        ],
        [
            "exists k%f; exists ((-(1)).* b::l1); split.",
            "VernacExtend",
            "31a5d2cca8b6138b263757c388d95885c7f0d118"
        ],
        [
            "simpl; intros v [Hv|Hv]; subst; auto.",
            "VernacExtend",
            "6bb909edf457bdb5600ebcd2607de671b6153e2c"
        ],
        [
            "Vfold n; apply scal_hom; auto with datatypes.",
            "VernacExtend",
            "932f071b13857d329e3ce2a97a48c1bcbe9572e5"
        ],
        [
            "rewrite joinl_swap, joinlS, joinlS, H2l1.",
            "VernacExtend",
            "e62da56f1d03426db0a269fa9e8bd693884eb780"
        ],
        [
            "rewrite join_scall, <-(scal_multE _ (fn n) (-(1))%f); auto.",
            "VernacExtend",
            "d9919e971057d24371f9a69095e6effc1d26d88c"
        ],
        [
            "rewrite multK_m1_m1, scalE1, join_scalr; auto.",
            "VernacExtend",
            "8754c19785fb1e9d57aad3a769a8e0f16f434823"
        ],
        [
            "rewrite (scalE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
        ],
        [
            "rewrite (addE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "ba8f5fcc49a0f07c12bc57a7ab4e7a29feb36288"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "intros HH; subst; destruct ll; try discriminate.",
            "VernacExtend",
            "7581eb6a4df97db1e29cdc4312c332d01e58dff0"
        ],
        [
            "case H1; rewrite mprod_S; Grm0.",
            "VernacExtend",
            "679c8192073f4fbde575232f33f9ed8822b4274f"
        ],
        [
            "rewrite (scalE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
        ],
        [
            "apply cbl_trans with l; auto.",
            "VernacExtend",
            "3a6702b458cd882b4325185a31467109c618d0a8"
        ],
        [
            "intros; rewrite cbl1_hom1_equiv; auto with datatypes.",
            "VernacExtend",
            "0bf93284ae99cea40f6f3589348235d4a9c9d47b"
        ],
        [
            "rewrite (scalE0l (vn_eparams n)); auto.",
            "VernacExtend",
            "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
        ],
        [
            "rewrite addE0l; auto.",
            "VernacExtend",
            "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
        ],
        [
            "apply mprod_cbl; auto.",
            "VernacExtend",
            "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
        ],
        [
            "apply cbl_scal.",
            "VernacExtend",
            "b9dab6b9299440e8a6c3b8e2e143e1c66ec4e87a"
        ],
        [
            "rewrite cbl1_hom1_equiv; auto with datatypes.",
            "VernacExtend",
            "c4782c355fa726ee89a65489c35e32abb213b42e"
        ],
        [
            "exists (a^-1)%f; exists l; split; auto with datatypes.",
            "VernacExtend",
            "df5a031b99b053583b20d121417a8556750eab34"
        ],
        [
            "case (list_case _ l); intros Hll.",
            "VernacExtend",
            "c97b3fd20d54ebeb63cbff0a6e926b882c9a814e"
        ],
        [
            "rewrite Hll; simpl; Vfold n; rewrite mprod_S, mprod0r; Grm0.",
            "VernacExtend",
            "eced86cd8263652366d8effc6843af5ac91c5c97"
        ],
        [
            "rewrite <-scal_multE, invKr, scalE1; auto.",
            "VernacExtend",
            "afbcd124bed3462273a267dc886ed1a4b797bbf0"
        ],
        [
            "rewrite mprod_S, !joinlS, join_addl, scal_addEr; auto.",
            "VernacExtend",
            "30ef9871d551de4cca4f22fc7dce86c497f0531f"
        ],
        [
            "rewrite join_scall, <-scal_multE, invKr, scalE1; auto.",
            "VernacExtend",
            "1b9522a33799daaf8ac72765cae541665b7078ac"
        ],
        [
            "replace (ll *X* l \u2228 joinl n l) with (0: vect n); Grm0.",
            "VernacExtend",
            "1103ef0ee1ef315df5a5720189e2e95dc789c9bf"
        ],
        [
            "injection Hl.",
            "VernacExtend",
            "bcd300f0699f38e78ac75b99f25f9fe5732dd6fe"
        ],
        [
            "generalize ll H2; elim l; clear l ll IH Hl H1 H2 Hll.",
            "VernacExtend",
            "10c708b4dd4e8a682eb470c7d8f189af9887553c"
        ],
        [
            "intros; rewrite mprod0r; Grm0.",
            "VernacExtend",
            "5642e31990a3e210c769d9e93e090a562a16198f"
        ],
        [
            "intros a1 l1 IH ll H1 H2.",
            "VernacExtend",
            "f1d12cb8843ddeae0ccad832a9d2c81e4cc35e48"
        ],
        [
            "destruct ll as [| b1 ll].",
            "VernacExtend",
            "cfc72cad453faad853e4ef9cab1f0cd25b358874"
        ],
        [
            "rewrite mprod0l; Grm0.",
            "VernacExtend",
            "78bf8d1be4add5e2946c2600e45e686fda51a38e"
        ],
        [
            "case (list_case _ l1); intros Hll1.",
            "VernacExtend",
            "3af51813c978e40e4c749406931c71e923863b35"
        ],
        [
            "rewrite Hll1; simpl; Vfold n; rewrite mprod_S, mprod0r; Grm0.",
            "VernacExtend",
            "9ab0d504739304eae89d8877fddccba215fc79ce"
        ],
        [
            "rewrite join_scall, join_hom1_id; Grm0; auto with datatypes.",
            "VernacExtend",
            "6f5e929e0bdf1cadfa5831bb0fe20fcb31f2699f"
        ],
        [
            "rewrite mprod_S, joinlS, join_addl; auto.",
            "VernacExtend",
            "8bda022d53f9f944e7c942b6a9c0976556452302"
        ],
        [
            "rewrite join_scall, <-join_assoc, join_hom1_id; Grm0; auto with datatypes.",
            "VernacExtend",
            "e5ba2765818c104b820a74d47f525d3279c0b10d"
        ],
        [
            "rewrite <- join_assoc.",
            "VernacExtend",
            "ccf531dab619f4ff4bbb589d099a6b6a50fc525c"
        ],
        [
            "rewrite (join_hom_com n 1 1 a1 (ll *X* l1)); auto with datatypes.",
            "VernacExtend",
            "59c3588d5220b4cfe450c85f348843802abc1604"
        ],
        [
            "rewrite join_scall, join_assoc, <- IH; Grm0; auto.",
            "VernacExtend",
            "c405a9d198a5cd44c4ca60e879fba01d245f4b9a"
        ],
        [
            "simpl; intros x [Hx|Hx]; subst; auto with datatypes.",
            "VernacExtend",
            "ef8847c7938e2722bf389c803f286b6ae2012b9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomposable_factor n k x M : x <> 0 -> hom n 1 x -> hom n k.+2 M -> is_decomposable n M -> x \u2228 M = 0 -> is_decomposable n (factor n x M).",
            "VernacStartTheoremProof",
            "c55406e9c27d4ebc19bb26c28072d19e207f0942"
        ],
        [
            "intros Hx Hhx HhM HM HxM.",
            "VernacExtend",
            "74b20368f085b688d6c8338e84032b5a3beaf4b0"
        ],
        [
            "case (joinl_factor n x M); auto.",
            "VernacExtend",
            "e8f61181de3964cb2269b5a478c78f95bd56e66a"
        ],
        [
            "intros k1 (l, (H1l, H2l)); subst; red.",
            "VernacExtend",
            "f4bb3838c4277e3e989e93b4e99c9b6a249eb04b"
        ],
        [
            "case (list_case _ l); intros Hl.",
            "VernacExtend",
            "e4ec71c0e7429e1d8ca85a703fdc585b97077fb5"
        ],
        [
            "subst; simpl joinl.",
            "VernacExtend",
            "a629a8812712e173d3364c82a9f6bc7bc72ec3b8"
        ],
        [
            "rewrite factor_scal, factor_id; auto.",
            "VernacExtend",
            "61adbd5b999a12411dd6f139520a30a80414b99e"
        ],
        [
            "case (homE n 1 k.+2 (k1 .* x)); try (intros; discriminate); auto.",
            "VernacExtend",
            "cc34b1d1399fac0b2bfca77233bd0f3182e019bc"
        ],
        [
            "intros HH1; case (scalE_integral _ (fn n) _ _ HH1); intros HH2; subst; Grm0.",
            "VernacExtend",
            "e4bd72bf1e0a7514e92f4be8aef1034b34cc6853"
        ],
        [
            "exists (x::x::nil).",
            "VernacExtend",
            "573adc66d21a59ef947e59333fcfa954f5d86c03"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl; intros x1 [H1| [H1 | H1]]; subst; red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "8d74794e9eb59ad608b6a8dec85a57f922ffa370"
        ],
        [
            "simpl joinl; rewrite join_hom1_id; auto.",
            "VernacExtend",
            "f1dd868c5377f3a119325499341557ce4347169a"
        ],
        [
            "case Hx; auto.",
            "VernacExtend",
            "77cb879aa4295ac85f27833660ac120655ac8d32"
        ],
        [
            "rewrite joinlS, factor_scal; auto.",
            "VernacExtend",
            "aa7b956de3a5ac661aa5e608faf69f47a69f10a8"
        ],
        [
            "rewrite (joinl_addmult n (fun x y => (-(1) * ((fget n x y)))%f)); auto.",
            "VernacExtend",
            "6e7d52f7e4a885f8805aaa530c9d4f1897fd06db"
        ],
        [
            "destruct l as [| a l].",
            "VernacExtend",
            "02c55f4298f2f8fae408fc375ff80e3a0fdba762"
        ],
        [
            "case Hl; auto.",
            "VernacExtend",
            "c732ab5c91b374e261a9f76ead20e226181ba696"
        ],
        [
            "exists (map (fun y : vn_eparams n => y + (- (1) * fget n x y)%f .* x) (k1 .* a::l)).",
            "VernacExtend",
            "72f8dcd3b17474f0f18be1e273906da4af079177"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "simpl map; intros x1; simpl In; Vfold n; intros [Hx1|Hx1]; auto with datatypes.",
            "VernacExtend",
            "7289c27b907178466d69941167a814d822374174"
        ],
        [
            "red; rewrite cbl1_hom1_equiv, <-Hx1, add_hom; auto with datatypes.",
            "VernacExtend",
            "e8bfab5fec9fd65ecedfb876a4ae2824e03a0877"
        ],
        [
            "rewrite in_map_iff in Hx1; case Hx1; intros x2 ([], H2x2).",
            "VernacExtend",
            "2e76ddd90b9f1e1fb7f8ff1b481f296ba71381b0"
        ],
        [
            "red; rewrite cbl1_hom1_equiv, add_hom; auto with datatypes.",
            "VernacExtend",
            "2825926a4dcd4507a6adcb797196d70ee3c5ddcc"
        ],
        [
            "simpl map; Vfold n.",
            "VernacExtend",
            "8284f99d321898972c78322e7fa74dc19c6ee956"
        ],
        [
            "rewrite factor_ortho; auto.",
            "VernacExtend",
            "490b1850213896d13441e296bbea900ae960811d"
        ],
        [
            "rewrite <-joinl_scal, scal_addEr, scal_multE, scalE_swap, <-!scal_multE, fget_scal, multK_assoc; auto.",
            "VernacExtend",
            "8285aa6531dc9a04476235440797fcc666a44c57"
        ],
        [
            "apply fortho_joinl with 0%nat; auto.",
            "VernacExtend",
            "88cbc483ce8c6be4378b8fc5e3d3fc8dcb161839"
        ],
        [
            "intros v2 Hv2; case in_inv with (1 := Hv2).",
            "VernacExtend",
            "471ff9c561c1b79a3fae83fb382a6e9e5855dd9a"
        ],
        [
            "intros Hv3; subst.",
            "VernacExtend",
            "fc49627d331eb5f5b920672b5d5721343532796e"
        ],
        [
            "apply fortho_fget; auto with datatypes.",
            "VernacExtend",
            "911472eecd758e7599bdcba72dcf78a512d5b1eb"
        ],
        [
            "rewrite in_map_iff; intros (v3, ([], H2v3)).",
            "VernacExtend",
            "2f0dd282d4d9e638c838bb4f742297468eaec970"
        ],
        [
            "apply fortho_fget; auto with datatypes.",
            "VernacExtend",
            "911472eecd758e7599bdcba72dcf78a512d5b1eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint one_factor (n: nat) k : vect n -> vect n := match n return vect n -> vect n with | O => fun a => a | S n1 => fun l => match k with | O => l | S k1 => let (l1,l2) := l in let r := one_factor n1 k1 l1 in (0:vect n1, if r ?= 0 then one_factor n1 k l2 else r) end end.",
            "VernacFixpoint",
            "dae35842fcfdc29e768d44b3ce14cea5f693ed37"
        ],
        [
            "Lemma one_factor0 n k : one_factor n k 0 = 0.",
            "VernacStartTheoremProof",
            "1efc01305242a7eab5ad8bd95fc2e508aecfa97d"
        ],
        [
            "generalize k; induction n as [| n IH]; simpl; auto; clear k.",
            "VernacExtend",
            "f339edd7a229f24b2882ac98d8851a7b43187810"
        ],
        [
            "intros k; case k; simpl; auto; intros n0; case eq0_spec; rewrite !IH; auto.",
            "VernacExtend",
            "bb6fe542c8b91acd785ef0490a6d54e56f807dea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma one_factor_hom n k1 k2 (x: vect n) : k2 < k1 -> hom n k1 x -> hom n (k1 - k2) (one_factor n k2 x).",
            "VernacStartTheoremProof",
            "8848ff2eb90eefc99403aa46a632cbd0747bc71f"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [|k1][|k2]; auto with arith.",
            "VernacExtend",
            "87df35f84c92144948a49fe10fd3e1059bd8ecc6"
        ],
        [
            "intros _ H; rewrite H; case minus; auto.",
            "VernacExtend",
            "6d036b9396e20e27bd95727fccda89d2221bcb78"
        ],
        [
            "intros [| k1] [|k2] Heq; destruct x; rewrite andbP; intros (Ho1,Ho2); auto.",
            "VernacExtend",
            "108e1ef1b3b44ab3211beb259dd8fd29a23f7d17"
        ],
        [
            "contradict Heq; auto with arith.",
            "VernacExtend",
            "42eef592971257a272bb5d20f6f076ee20519e7a"
        ],
        [
            "contradict Heq; auto with arith.",
            "VernacExtend",
            "42eef592971257a272bb5d20f6f076ee20519e7a"
        ],
        [
            "simpl; rewrite Ho1, Ho2; auto.",
            "VernacExtend",
            "1f8e0556ab1798d70a8c0645677606af4aa762f9"
        ],
        [
            "generalize (minus_match k2.+1 k1.+1); case_eq (k1.+1 - k2.+1)%nat.",
            "VernacExtend",
            "daeead425b7acae1429adaad64e0b22b430c1fd9"
        ],
        [
            "intros _ H1; contradict H1; auto with arith.",
            "VernacExtend",
            "f322ed28d412d200d6539e28ed3fb3bcf2e8cec2"
        ],
        [
            "intros n1 Hn1 _; rewrite <-Hn1.",
            "VernacExtend",
            "c65d7a26b8d499a733ee12c5fde61c87f7cf70bc"
        ],
        [
            "case eq0_spec; intros H1; try (case eq0_spec; intros H2).",
            "VernacExtend",
            "ef6ec960c5885067e7448d5dbd9dd5b4061930e8"
        ],
        [
            "rewrite homk0, IH; auto.",
            "VernacExtend",
            "d0983c2070297ec2412a42ab4194becd425bbb7f"
        ],
        [
            "rewrite homk0.",
            "VernacExtend",
            "34972b476a9545c686111c14683e73567122f2a4"
        ],
        [
            "simpl; rewrite IH; auto with arith.",
            "VernacExtend",
            "3f61c7c6558923a1b50aaa2c767d61d612e73eb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve one_factor_hom.",
            "VernacHints",
            "5a8590ed6bafe4ede9e76fd84420f9cc04b68cce"
        ],
        [
            "Lemma one_factor_zero n k1 k2 (x: vect n) : k2 < k1 -> hom n k1 x -> one_factor n k2 x = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "2d5aa702a9c7efe9abb4d423e98bc6e8228170f2"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [|k1][|k2] Hk1k2; destruct x; auto; try (contradict Hk1k2; auto with arith; fail).",
            "VernacExtend",
            "60150c41b2341e6741b36e19424fe4b28acdbd25"
        ],
        [
            "rewrite andbP; intros (Ho1,Ho2); auto.",
            "VernacExtend",
            "054f879bae319a27c7f02e83834919c8a8cb4259"
        ],
        [
            "assert (Hl : k2 < k1) by auto with arith.",
            "VernacExtend",
            "dec5b40a2b5b1dbebe48157bd2b978082253fed7"
        ],
        [
            "case eq0_spec; auto.",
            "VernacExtend",
            "8047ccd08900b8ae8a4ef42ac6f6246fbd393936"
        ],
        [
            "intro Hv.",
            "VernacExtend",
            "686837315f0b20c3c97111172149e8d026f4c60e"
        ],
        [
            "rewrite (IH _ _ _ Hl Ho1 Hv).",
            "VernacExtend",
            "f9564fde4cd3d526a0e141d797847b81f51f5c57"
        ],
        [
            "intros HH; injection HH; intros Hv0.",
            "VernacExtend",
            "ad5442e67ba6960ce4933bcfc7103c1bb053b311"
        ],
        [
            "rewrite (IH _ _ _ Hk1k2 Ho2 Hv0); auto.",
            "VernacExtend",
            "99b4aa0d110d791cfb3e9d50f6bebf604b8e813c"
        ],
        [
            "intros HH1 HH2; case HH1; injection HH2; auto.",
            "VernacExtend",
            "bec6a449510f5c21ad2f744dde29f7d900ebf7ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mcontra n (ll: list (kn n)) (x: vect n) := fold_left (fun x l => #<l,x>#) ll x.",
            "VernacDefinition",
            "af0c0c3339cca2d6603c1214a6c98158536c6bdb"
        ],
        [
            "Notation \"#<< l , x >>#\" := (mcontra _ l x).",
            "VernacNotation",
            "a4473ed041a693dc058ae57bc3d2450d16534d18"
        ],
        [
            "Lemma mcontra_nil n (x: vect n) : #<<nil, x>># = x.",
            "VernacStartTheoremProof",
            "0119870f75a36fb294a611da041a49e02f06016f"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_cons n (x: vect n) a l : #<<a::l, x>># = #<<l, #<a,x>#>>#.",
            "VernacStartTheoremProof",
            "a693415d403491a58974b481962a92b675cceb09"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_app n l1 l2 (M: vect n) : #<< l1 ++ l2, M>># = #<<l2, #<<l1, M>>#>>#.",
            "VernacStartTheoremProof",
            "acabecb711943a615cec4f69ebd0d3e1d68ca35a"
        ],
        [
            "generalize M; clear M.",
            "VernacExtend",
            "f7a0bf941831a5d73bc0603690f0c6751b3e51f6"
        ],
        [
            "induction l1 as [| l l1 IH]; simpl; intros; try rewrite IH; auto.",
            "VernacExtend",
            "61d27dcd22ec056de7177ed827c7f697ab9e1b5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra0 n lfs : #<< lfs, 0 >># = (0: vect n).",
            "VernacStartTheoremProof",
            "ca86b05705eb04941bada6eb71c72aad7cac3482"
        ],
        [
            "induction lfs as [| lf lfs IH]; simpl; auto.",
            "VernacExtend",
            "874a28db8d70dae9957d74f1f837ec72dd289491"
        ],
        [
            "Vfold n; rewrite contra0r, IH; auto.",
            "VernacExtend",
            "aa631ee1b3537ced27b0ed385a29433fc0c8ff49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite mcontra0: GRm0.",
            "VernacExtend",
            "1adafe1233dd0b67aea3933907a081fae6f34fe0"
        ],
        [
            "Lemma mcontra_id n a l (M: vect n) : #<< a::a::l, M>># = 0.",
            "VernacStartTheoremProof",
            "4e9277f9210c521fec110fd24803bbc08042a95f"
        ],
        [
            "simpl; rewrite contra_id, mcontra0; auto.",
            "VernacExtend",
            "4e1a6ff17511fc673400153f702f96a3e561dbd7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontrak n lfs i : lfs <> nil -> #<< lfs, [i] >># = (0: vect n).",
            "VernacStartTheoremProof",
            "65f843ca1c13f2f40108ee5f39561bb3aabd6ee8"
        ],
        [
            "induction lfs as [| lf lfs IH]; simpl; intros HH.",
            "VernacExtend",
            "a0aec3b9921567c652f9350906a442597ae5786f"
        ],
        [
            "case HH; auto.",
            "VernacExtend",
            "fe7485a0a653e9dbacbc30551c98aaa9312d020e"
        ],
        [
            "destruct lfs as [|lf1 lfs].",
            "VernacExtend",
            "421dc7dfbc5e3781da6a864f524e09a35f0d8677"
        ],
        [
            "rewrite mcontra_nil, contrak; auto.",
            "VernacExtend",
            "1f5de852a077c78183157bedda0459d4754ccfc7"
        ],
        [
            "rewrite contrak, mcontra0; auto.",
            "VernacExtend",
            "009160578e86d04074e418248ca178823d5e9a7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_scal n k lfs (x: vect n) : #<< lfs, k .* x >># = k .* #<< lfs , x >>#.",
            "VernacStartTheoremProof",
            "18c64808e66dfe31d5fb8da153632c0bd6918c16"
        ],
        [
            "generalize x; clear x.",
            "VernacExtend",
            "3a730666dcffe77922ab24fe4249a5512fcfd603"
        ],
        [
            "induction lfs as [| lf lfs IH]; simpl; Vfold n; auto.",
            "VernacExtend",
            "6562b58c980e2c9302f14e9353a110f6e5acdbff"
        ],
        [
            "intros; rewrite contra_scalr, IH; auto.",
            "VernacExtend",
            "8298dd74cdc59adc0068bce9e6eb06db571cbc8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_swap n a b l (M: vect n) : #<< a::b::l, M>># = (-(1)).* #<<b::a::l, M>>#.",
            "VernacStartTheoremProof",
            "3c24dbbcdc2f41243f26cc6cee312b2bff4e727a"
        ],
        [
            "simpl; Vfold n; rewrite contra_swap, mcontra_scal; auto.",
            "VernacExtend",
            "bd0b55eab86dfe5a41a80598f83cf09693bd4072"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_add n lfs (x y: vect n) : #<< lfs, x + y >># = #<< lfs, x >># + #<< lfs, y >>#.",
            "VernacStartTheoremProof",
            "aed6a9bdb842ed59c25df64266d31ac5d113bc63"
        ],
        [
            "generalize x y; clear x y.",
            "VernacExtend",
            "e9120fc9f411f1db72bd9d9765d44085b1e61ad2"
        ],
        [
            "induction lfs as [| lf lfs IH]; simpl; intros; Vfold n; auto.",
            "VernacExtend",
            "814a62120c11ac84abe095e0c79a4c40d9ab7f08"
        ],
        [
            "rewrite contra_addr, IH; auto.",
            "VernacExtend",
            "405b7c52bb93d091e64072f013e608eb77034be5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_conj n lfs b (x: vect n) : #<<lfs, x ^_ b >># = #<< lfs, x >># ^_ (iter negb (length lfs) b).",
            "VernacStartTheoremProof",
            "0590b68d206c5a39578bab82e9755ba1a5de5064"
        ],
        [
            "generalize b x; clear b x.",
            "VernacExtend",
            "571be90d0a9250838c6060daafc182bd789fc8e0"
        ],
        [
            "induction lfs as [| lf lfs IH]; simpl; Vfold n; intros b x; auto.",
            "VernacExtend",
            "6ec0ee829ec43faab644a919c6537735056211cd"
        ],
        [
            "rewrite contra_conj, IH.",
            "VernacExtend",
            "791204c51b5fa181faabb0355b7837067ba25492"
        ],
        [
            "apply f_equal2 with (f := conj n); auto.",
            "VernacExtend",
            "ff8fc0ba0863faa229e73927744d7bdcacf31ef1"
        ],
        [
            "clear IH; induction (length lfs) as [| m IH]; simpl; auto.",
            "VernacExtend",
            "155b292c6dd65b4c3aec35cdbf66109550741a2c"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_hom n k (x: vect n) l : hom n k x -> hom n (k - length l) #<<l, x>>#.",
            "VernacStartTheoremProof",
            "028aa9a503b423c4d61dc9564636e32589e29167"
        ],
        [
            "generalize k x; clear k x; induction l as [| a l IH]; intros k x Hx; simpl.",
            "VernacExtend",
            "f2b6e8a8a1ea8d45b7a1207705665e2ee40822d4"
        ],
        [
            "rewrite <- Minus.minus_n_O; auto.",
            "VernacExtend",
            "c4153b1fadf5a293ad43c9fc40cf7574ef99eece"
        ],
        [
            "destruct k as [| k]; simpl.",
            "VernacExtend",
            "b7afa9826f181fe6a346955baf43f315678e0671"
        ],
        [
            "rewrite (hom0E _ _ Hx), contra_hom0; Grm0.",
            "VernacExtend",
            "5ee720b483babe066fd89d2ef16dbd9a96c12db1"
        ],
        [
            "apply IH; auto.",
            "VernacExtend",
            "ab7c838ddd716a3b14059f64c365105253349c54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mcontra_hom.",
            "VernacHints",
            "b59bbc87cfefe495cdce070cbc212ec720512b8b"
        ],
        [
            "Lemma mcontra_hom0 n lfs M : lfs <> nil -> hom n 0 M -> #<<lfs , M>># = 0.",
            "VernacStartTheoremProof",
            "50da75d00806a327391e851d7eb0a06e84149eae"
        ],
        [
            "intros H H1; rewrite (hom0E _ _ H1); apply mcontrak; auto.",
            "VernacExtend",
            "b530673825750127729f40ccbd504466ebc3e5a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation liftk := (Kn.lift p).",
            "VernacSyntacticDefinition",
            "29d6b22746a93df875f3ad589cace7df1ce7bac6"
        ],
        [
            "Lemma lift_contra n lf1 x : #< liftk n lf1, lift n x ># = lift n #<lf1, x>#.",
            "VernacStartTheoremProof",
            "aa65d61cf860690dbda95abc78eed094f7264978"
        ],
        [
            "induction n as [| n IH]; simpl; Krm0; auto.",
            "VernacExtend",
            "bd025eaaaaefb3209e98cf89efcf177f0d803d61"
        ],
        [
            "destruct lf1; destruct x; Vfold n; Vrm0.",
            "VernacExtend",
            "4f60c9297be5edf48ae888ece313dc8bbf315f92"
        ],
        [
            "rewrite contra0r; Vrm0.",
            "VernacExtend",
            "e3e10dce0c36d4ae0a097cada71c534ffc6c7558"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_mcontra n lfs1 x : #<< map (liftk n) lfs1, lift n x >># = lift n #<<lfs1, x>>#.",
            "VernacStartTheoremProof",
            "fb094260ba1e821aae1add1aef8255a7ce242450"
        ],
        [
            "generalize x; clear x.",
            "VernacExtend",
            "3a730666dcffe77922ab24fe4249a5512fcfd603"
        ],
        [
            "induction lfs1 as [| lf lfs IH]; simpl; Vfold n; auto.",
            "VernacExtend",
            "dbf1d71dcae94c899365e8747527491f21a5d12d"
        ],
        [
            "intros x; simpl; Vfold n; Vrm0.",
            "VernacExtend",
            "218640f9a3486e4e37987cc2f4c98dd489eae203"
        ],
        [
            "rewrite contra0r; Vrm0.",
            "VernacExtend",
            "e3e10dce0c36d4ae0a097cada71c534ffc6c7558"
        ],
        [
            "apply (IH #<lf, x>#).",
            "VernacExtend",
            "b8ec7c4044e5b262f3e121736b32944fac9e9de1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mcontra_one_factor n k1 k2 (x: vect n) : k2 < k1 -> hom n k1 x -> exists lfs, length lfs = k2 /\\ #<<lfs , x>># = one_factor n k2 x.",
            "VernacStartTheoremProof",
            "fe7c968fb679bf763226be4f88d27580d236d328"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [| k1] k2 Hlt.",
            "VernacExtend",
            "5737502a93bfb7d59c32f3aa0a37aba0836c2490"
        ],
        [
            "contradict Hlt; auto with arith.",
            "VernacExtend",
            "1dfa734513aa66328d51922babf6ef152ada180f"
        ],
        [
            "case eqK_spec; auto; intros Hx; subst; try (intros; discriminate).",
            "VernacExtend",
            "4cc2a02603402babbd2a6a46a3f7d609c39a10d1"
        ],
        [
            "exists (iter (cons tt) k2 nil); split; clear Hlt.",
            "VernacExtend",
            "0b11d98c6f57097f8690c486ab9017b29b6c8c0d"
        ],
        [
            "induction k2 as [| k2 IH1]; simpl; auto.",
            "VernacExtend",
            "70e65154ec2f399799ac2f18b2e4600c8cef7923"
        ],
        [
            "rewrite mcontra0; auto.",
            "VernacExtend",
            "84a0a327852d56ea6f9550e79e6ac10db67ccebd"
        ],
        [
            "intros [| k1] k2 Hlt; destruct x.",
            "VernacExtend",
            "18f94bf546de5032376db4a597c08bf9f603d167"
        ],
        [
            "contradict Hlt; auto with arith.",
            "VernacExtend",
            "1dfa734513aa66328d51922babf6ef152ada180f"
        ],
        [
            "rewrite andbP; intros (Hx1, Hx2).",
            "VernacExtend",
            "590c0ec7507980da4f735be3b46bc51d734a1d91"
        ],
        [
            "destruct k2 as [| k2].",
            "VernacExtend",
            "f78b3f8cea2ddcf96d37431aad2fa72619f289f4"
        ],
        [
            "exists nil; auto.",
            "VernacExtend",
            "36de666f3ab1074837deacaf9a6d6f95221844b4"
        ],
        [
            "case eq0_spec; intros H1x2.",
            "VernacExtend",
            "f65e51321603863d359147158d290fee7afc3347"
        ],
        [
            "case (IH _ _ _ Hlt Hx2); intros lf1.",
            "VernacExtend",
            "b8504c4f7c1fc71d7f8923c7677c6f57ebb5fd78"
        ],
        [
            "intros (Hlf1, H1lf1).",
            "VernacExtend",
            "3b60e3ecc12cc0b743a320c9ec854527cca7f137"
        ],
        [
            "exists (map (liftk n) lf1); split; auto.",
            "VernacExtend",
            "28931bfe6226d9e21b82d3300bd9b435f479eb7d"
        ],
        [
            "rewrite map_length; auto.",
            "VernacExtend",
            "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
        ],
        [
            "rewrite one_factor_zero with (k1 := k1) (3 := H1x2); auto with arith.",
            "VernacExtend",
            "141ed8aaf2e407ce665dca52df4d8b648893da7e"
        ],
        [
            "generalize lift_mcontra; unfold lift; intros HH1; rewrite HH1, H1lf1; auto.",
            "VernacExtend",
            "05b82346dbe50e2af8470287cc051f6fccadae8e"
        ],
        [
            "case (IH _ _ _ (Lt.lt_S_n _ _ Hlt) Hx1).",
            "VernacExtend",
            "a6d705c8e57f79adeb45fc36d831072f333ddcd7"
        ],
        [
            "intros lfs1 (H1lfs1, H2lfs1).",
            "VernacExtend",
            "d033d55235783019d4a022865f2e79376f4e27e7"
        ],
        [
            "exists ((1%f, 0):: (map (liftk n) lfs1 : list (K * kn n))); simpl; Vfold n; split.",
            "VernacExtend",
            "65bcce0b00554e8d571b3ba1d240ac48be7ee4bd"
        ],
        [
            "rewrite map_length; auto.",
            "VernacExtend",
            "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
        ],
        [
            "rewrite !contra0l, scalE1; Vrm0.",
            "VernacExtend",
            "e57f924743fdbead4cabe60d2eac3a4847268aa2"
        ],
        [
            "rewrite <- H2lfs1.",
            "VernacExtend",
            "7135bd5f5c5589caa02b8a79d83f6c2e9162305c"
        ],
        [
            "apply (lift_mcontra n); auto.",
            "VernacExtend",
            "1efee7d87f1d7b4cb980c4cdd63aabe1d2e9f427"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive cbl n (l: list (vect n)): nat -> (vect n) -> Prop := | cbl_in: forall v, In v l -> cbl n l 0%nat v | cbl_add: forall k x y, cbl n l k x -> cbl n l k y -> cbl n l k (x + y) | cbl_scal: forall k k1 x, cbl n l k x -> cbl n l k (k1 .* x) | cbl_join: forall k v x, In v l -> cbl n l k x -> cbl n l k.+1 (v \u2228 x).",
            "VernacInductive",
            "55ae1943c6f92fae90165acceab6977e8030d0ca"
        ],
        [
            "Lemma cbl_cons n (a: vect n) l k x : cbl n l k x -> cbl n (a::l) k x.",
            "VernacStartTheoremProof",
            "8d602dac788c09fc5be4d27063657a4e6b057825"
        ],
        [
            "intros H; elim H; simpl; auto with arith; intros; constructor; auto with datatypes.",
            "VernacExtend",
            "f2e0600211b4e6792f3147ce2b5d91476d84a010"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma joinl_join n l (v: vect n) : (forall x, In x l -> hom n 1 x) -> In v l -> v \u2228 joinl n l = 0.",
            "VernacStartTheoremProof",
            "e5c174e5585a262e81a422ef0e5fd38f1ba11b8d"
        ],
        [
            "intros Hv Hivl; rewrite <-joinlS.",
            "VernacExtend",
            "4aa73fa391cb16422fcca60f4862e6319a0a0d4b"
        ],
        [
            "apply (cbl_joinl0_mprod n); auto.",
            "VernacExtend",
            "b36ca7b7ec110a51fa955ab5faaf024a0489fccb"
        ],
        [
            "intros i Hi; red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "c0f5667c47df6ff2e2017bc8216cffc969dab65d"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "intros Hl; subst; case Hivl.",
            "VernacExtend",
            "fa59fde556eac4b2aa6b6042957224261567db9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_joinl n (l: list (vect n)) : l <> nil -> (forall x, In x l -> hom n 1 x) -> cbl n l (pred (length l)) (joinl n l).",
            "VernacStartTheoremProof",
            "d547f61dfb88c3684875a75d58190ac00bb3024b"
        ],
        [
            "induction l as [| a l IH]; auto.",
            "VernacExtend",
            "ddd99fe4e776e11baffb017fc5fa15a601ac76ab"
        ],
        [
            "intros HH; case HH; auto.",
            "VernacExtend",
            "a97474b3a6d037a220684ae5bfeedc33f9346833"
        ],
        [
            "intros _ H1.",
            "VernacExtend",
            "35faaf5b0ec5eee36aab652e327c0f08a2c68463"
        ],
        [
            "destruct l as [| b l].",
            "VernacExtend",
            "50f3a9287e168771b80c1151b2c08830b99bb376"
        ],
        [
            "simpl pred; rewrite joinl1; constructor; auto with datatypes.",
            "VernacExtend",
            "56a242f3b8147b2448203b701147ce8112dbd509"
        ],
        [
            "rewrite joinlS.",
            "VernacExtend",
            "ec6f99326808f9196c98c1c1ad79dfb80ef6d1cd"
        ],
        [
            "change (pred(length (a::b :: l))) with (1 + (pred (length (b :: l))))%nat.",
            "VernacExtend",
            "b1292634931a3c0c3b127cb6a9085909987af057"
        ],
        [
            "constructor; auto with datatypes.",
            "VernacExtend",
            "e0e3bc33ebd13f0a395d8591fc2c15599b8c0499"
        ],
        [
            "apply cbl_cons; apply IH; auto with datatypes.",
            "VernacExtend",
            "0169bd9fffdbc2a96a7871d3541e41ce0d3e556e"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_joinl0 n (l: list (vect n)) k x : (forall x, In x l -> hom n 1 x) -> cbl n l k x -> x \u2228 joinl n l = 0.",
            "VernacStartTheoremProof",
            "b87f9440a43e5841e38afee3ffac082829c272dc"
        ],
        [
            "intros Hl HH; elim HH; clear x HH; auto.",
            "VernacExtend",
            "c98393d6aebea22efced426690e610868c3596cc"
        ],
        [
            "intros; apply joinl_join; auto.",
            "VernacExtend",
            "f46d536c2fefe19c1913745140142d15b71dc952"
        ],
        [
            "intros k1 x y Hx Hmx Hy Hmy.",
            "VernacExtend",
            "4d148f5b5590083d57bbdb96c6fa1db5a0991164"
        ],
        [
            "rewrite join_addl, Hmx, Hmy; Vrm0.",
            "VernacExtend",
            "f0158988080e7860159d5aa8171ba98dc6ae07ed"
        ],
        [
            "intros k1 k2 x Hx Hmx; rewrite join_scall, Hmx; Vrm0.",
            "VernacExtend",
            "689186a0bbb1e78af22fa10b17d33d078e0c971a"
        ],
        [
            "intros k1 v x Hl1 Hx Hmx.",
            "VernacExtend",
            "89a2a376417cd90dc0d8ee5886c4367af9807d15"
        ],
        [
            "rewrite join_assoc, Hmx; Grm0.",
            "VernacExtend",
            "492394dca4132659e4f787cb8c57d989f898c166"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_hom n (l: list (vect n)) k x : (forall x, In x l -> hom n 1 x) -> cbl n l k x -> hom n k.+1 x.",
            "VernacStartTheoremProof",
            "3cad37fb05804bb56eec3c028e5e3189eeaa8d60"
        ],
        [
            "intros Hl HH; elim HH; clear x HH; auto.",
            "VernacExtend",
            "c98393d6aebea22efced426690e610868c3596cc"
        ],
        [
            "intros k1 v x Hv Hvc Hmx; apply (join_hom n 1 k1.+1); auto.",
            "VernacExtend",
            "528f997151e7edeec8490d5f26e68d42aea2baa7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_contra n (l: list (vect n)) lf k x : (forall x, In x l -> hom n 1 x) -> cbl n l k.+1 x -> cbl n l k #<lf, x>#.",
            "VernacStartTheoremProof",
            "028eb4c277142e4f34c1194113c94a32b0b0b04d"
        ],
        [
            "intros Hl; generalize k x; clear k x.",
            "VernacExtend",
            "69175172bb34a74e829178b4b51ccf877fc09692"
        ],
        [
            "assert (H: forall (k k1 : nat) (x : vect n), cbl n l k x -> k = k1.+1 -> cbl n l k1 #<lf, x >#).",
            "VernacExtend",
            "0564a5e1881fb33db8fb680eb246df2e5ef6a378"
        ],
        [
            "intros k k1 x HH; generalize k1; elim HH; clear x HH k; auto.",
            "VernacExtend",
            "85bdd351fb6caf239157f2919f6352708faa9f2b"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros k x y Hx IHx Hy IHy k2 Hk2; subst.",
            "VernacExtend",
            "5afebd686bed6f7e6bcc72515c02affa3c000b7f"
        ],
        [
            "rewrite contra_addr; apply cbl_add; auto.",
            "VernacExtend",
            "576a25591b0a55c446bb72fa53016a8f77261879"
        ],
        [
            "intros k k2 x Hx IHx k3 Hk3; subst.",
            "VernacExtend",
            "06b2b0dd14d778e0c7a99c2d28b306629995fbdb"
        ],
        [
            "rewrite contra_scalr; apply cbl_scal; auto.",
            "VernacExtend",
            "1891e690cddf9d283288704c51862682aee720c7"
        ],
        [
            "intros k v x Hv Hx IHx k2 HH; injection HH; intros HH1; subst.",
            "VernacExtend",
            "39b7b0635a4f764e7474b8fab3368a38b6668474"
        ],
        [
            "assert (Hm1: hom n 1 v) by auto.",
            "VernacExtend",
            "9c1bd441fc3b3aa7e2127cda63e9dc22575b5063"
        ],
        [
            "assert (Hmx: hom n k2.+1 x) by (apply cbl_hom with l; auto).",
            "VernacExtend",
            "015727e577b2116d9c799e2bf4a30578a26e157e"
        ],
        [
            "rewrite (contra_join n lf 1 k2.+1); auto.",
            "VernacExtend",
            "cdb364d2e997693e3313ec9b662ff16077596a59"
        ],
        [
            "apply cbl_add; auto.",
            "VernacExtend",
            "9df6b6a5fe172acffe669b4679999f527312c89c"
        ],
        [
            "rewrite contra_const, joinkl; auto.",
            "VernacExtend",
            "6a6c56ccc4206c673773d72536bf96f5b5a6bde4"
        ],
        [
            "apply cbl_scal; auto.",
            "VernacExtend",
            "51daf280d91a2a62f959c15ac782759afba31c8e"
        ],
        [
            "rewrite join_scall; apply cbl_scal; auto.",
            "VernacExtend",
            "7a2a3daf7c319792f30ea6285e1eed46836f7317"
        ],
        [
            "destruct k2 as [| k2].",
            "VernacExtend",
            "f78b3f8cea2ddcf96d37431aad2fa72619f289f4"
        ],
        [
            "rewrite contra_const, joinkr; auto.",
            "VernacExtend",
            "5669d163f142e0bac20b13e8b0940f881556b40e"
        ],
        [
            "apply cbl_scal; auto.",
            "VernacExtend",
            "51daf280d91a2a62f959c15ac782759afba31c8e"
        ],
        [
            "apply cbl_in; auto.",
            "VernacExtend",
            "6e75a9addbb8a44cb5f7a3086f16bc7355249828"
        ],
        [
            "apply cbl_join; auto.",
            "VernacExtend",
            "ced8af0107909bb02995c83b60d859f507081e87"
        ],
        [
            "intros k x HH; apply H with k.+1; auto.",
            "VernacExtend",
            "c1ca07c34aa4a9fa204d0e295784085be7b12931"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_mcontra n (l: list (vect n)) lfs k x : length lfs <= k -> (forall x, In x l -> hom n 1 x) -> cbl n l k x -> cbl n l (k - length lfs) #<<lfs, x>>#.",
            "VernacStartTheoremProof",
            "a03f92fc27bfe3fc5c60acfeb5f655b107bef9c1"
        ],
        [
            "intros Hk HH; generalize k x Hk; clear k x Hk.",
            "VernacExtend",
            "8e0468b9255bcecd09fb975397cb14c8fb0a30ed"
        ],
        [
            "induction lfs as [| lf lfs IH]; simpl; intros [| k] x Hk; try (contradict Hk; auto with arith; fail); simpl; auto.",
            "VernacExtend",
            "4073fa1001efb57ad12339ea6c1746f4dc5c7cc3"
        ],
        [
            "intros H1; apply IH; auto with arith.",
            "VernacExtend",
            "7032638ec718128386955cad6934b7c67dc23880"
        ],
        [
            "destruct k as [| k]; apply cbl_contra; auto.",
            "VernacExtend",
            "6494e315da855aa6683bea0b6ea8b5c01ca9f5c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomp_one_factor_hom n (l: list (vect n)) M : l <> nil -> decomposable n l M -> hom n 1 (one_factor n (pred (length l)) M).",
            "VernacStartTheoremProof",
            "33c133c7fdf5ef3f6506917f52f4d9d2cadd2c93"
        ],
        [
            "intros Hd H.",
            "VernacExtend",
            "c0f2a1463c4ead65d0a6803e644bfd08a1381869"
        ],
        [
            "assert (Hhm:= decomp_hom n l M H).",
            "VernacExtend",
            "e8b07287b0614b51608e9c5ea909a50b3b4dd22f"
        ],
        [
            "case H; intros H1 H2; subst; clear H.",
            "VernacExtend",
            "6eb473af62248a5fc207e931f33b19396148ade9"
        ],
        [
            "assert (Hl: pred (length l) < length l).",
            "VernacExtend",
            "45f39cf2ed6989727f0bfe6fdcb7ea4317d19da5"
        ],
        [
            "destruct l; simpl; auto with arith; case Hd; auto.",
            "VernacExtend",
            "e9b6e5625f70174330a50372fca40e11b4388cf2"
        ],
        [
            "assert (Hh: forall x, In x l -> hom n 1 x).",
            "VernacExtend",
            "a24a8b658f5933cc7e8d2d20cfa5930b95c03978"
        ],
        [
            "intros a Ha; rewrite <- cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "518cac4b3365117434b13c38a4c8638c4c8dc7c8"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "case (mcontra_one_factor n (length l) (pred (length l)) (joinl n l)); auto.",
            "VernacExtend",
            "efaa5363e1c1c7e3f331a610846cf7ef64fe51b0"
        ],
        [
            "intros ll (H1ll,H2ll); rewrite <-H2ll.",
            "VernacExtend",
            "e2e6b46baf32b02f261cc52a0396bed3511652c1"
        ],
        [
            "replace 1%nat with (length l - length ll)%nat.",
            "VernacExtend",
            "b7f8ad5ad20af7b9612af16d6704c32310106b9b"
        ],
        [
            "apply mcontra_hom; auto.",
            "VernacExtend",
            "a692c1140fed2e38ca8d03b7597540e3bddf55e9"
        ],
        [
            "rewrite H1ll; destruct l; simpl length; auto with arith.",
            "VernacExtend",
            "65a9f6c6084372ecfc99b957ab0de465482b3cbf"
        ],
        [
            "intros; simpl length; simpl pred; rewrite <- Minus.minus_Sn_m, <-Minus.minus_n_n; auto.",
            "VernacExtend",
            "b624cb4c278d82617d23db91ca56921c1b733a5f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomp_one_factor0 n (l: list (vect n)) M : decomposable n l M -> one_factor n (pred (length l)) M = 0 -> M = 0.",
            "VernacStartTheoremProof",
            "052ec6c1183546c7676660ea4a75f67c7147bf13"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "case (list_case _ l); intros H; subst.",
            "VernacExtend",
            "da904442b84401b849f216cd91f2963415217517"
        ],
        [
            "case H1; simpl; auto.",
            "VernacExtend",
            "9312b079c2df269aa947353713ea4e6c687b6b27"
        ],
        [
            "apply one_factor_zero with (k1 := length l) (3 := H2); auto.",
            "VernacExtend",
            "23f8711eac26be15b2c16bcf8c42666e72c888e3"
        ],
        [
            "destruct l; simpl; auto with arith.",
            "VernacExtend",
            "6ea2d2a58a34887f0d2f09bd471546a695cc9e62"
        ],
        [
            "case H; auto.",
            "VernacExtend",
            "0b39ac03ea00c6d2293da9883a569db11f432ebd"
        ],
        [
            "apply decomp_hom; auto.",
            "VernacExtend",
            "c50c7e72fa8282f4ac83fa65d84fa72fcdab762d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomp_one_factor_join n (l: list (vect n)) M : decomposable n l M -> one_factor n (pred (length l)) M \u2228 M = 0.",
            "VernacStartTheoremProof",
            "9442a162ac4203a8f927c53dc2a789d4f09683ce"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "case (list_case _ l); intros Hl; subst.",
            "VernacExtend",
            "55d33b7d292fa449f1b5a67f91597e789f4c66e8"
        ],
        [
            "case H; simpl; auto; intros _ H1; rewrite H1; Grm0.",
            "VernacExtend",
            "802b55bd87403665068a87dcc5f51322eab1f61a"
        ],
        [
            "assert (Hhm:= decomp_hom n l M H).",
            "VernacExtend",
            "e8b07287b0614b51608e9c5ea909a50b3b4dd22f"
        ],
        [
            "case H; intros H1 H2; subst; clear H.",
            "VernacExtend",
            "6eb473af62248a5fc207e931f33b19396148ade9"
        ],
        [
            "assert (Hl1: pred (length l) < length l).",
            "VernacExtend",
            "73666846388a8797d3115e35c16b78acc829b2b5"
        ],
        [
            "destruct l; simpl; auto with arith; case Hl; auto.",
            "VernacExtend",
            "1f0c04fc2adb9422e1d784c5e0da52ad0a9076dc"
        ],
        [
            "assert (Hh: forall x, In x l -> hom n 1 x).",
            "VernacExtend",
            "a24a8b658f5933cc7e8d2d20cfa5930b95c03978"
        ],
        [
            "intros a Ha; rewrite <- cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "518cac4b3365117434b13c38a4c8638c4c8dc7c8"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "apply cbl_joinl0 with (k := 0%nat); auto.",
            "VernacExtend",
            "cd50561ad91a5bc87fcb7548ac3a817b5866cc0e"
        ],
        [
            "case (mcontra_one_factor n (length l) (pred (length l)) (joinl n l)); auto.",
            "VernacExtend",
            "efaa5363e1c1c7e3f331a610846cf7ef64fe51b0"
        ],
        [
            "intros ll (H1ll,H2ll); rewrite <-H2ll.",
            "VernacExtend",
            "e2e6b46baf32b02f261cc52a0396bed3511652c1"
        ],
        [
            "replace 0%nat with (pred (length l) - length ll)%nat.",
            "VernacExtend",
            "b992297ecb15d6387801b61dfdce23954273a5ff"
        ],
        [
            "apply cbl_mcontra; try rewrite H1ll; auto with arith.",
            "VernacExtend",
            "95278dc0904058849fe5b4b78d6cd7f66e88035e"
        ],
        [
            "apply cbl_joinl; auto.",
            "VernacExtend",
            "55592cc3b29462c67a029bc3315d45c6af775023"
        ],
        [
            "rewrite H1ll; auto with arith.",
            "VernacExtend",
            "b4b64f8003a1367db15fed20282fd6c78dbd2bc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint decomposek (n: nat) k (v: vect n) {struct k} : list (vect n) := match k with | O => nil | S O => v::nil | S k1 => let v1 := one_factor n k1 v in v1::decomposek n k1 (factor n v1 v) end.",
            "VernacFixpoint",
            "58d12e93dc3fbfb56f5ec6295ac929fb6647f59f"
        ],
        [
            "Lemma decomposekSS (n: nat) k (v: vect n) : decomposek n k.+2 v = one_factor n k.+1 v:: decomposek n k.+1 (factor n (one_factor n k.+1 v) v).",
            "VernacStartTheoremProof",
            "fb0081aae508794ce8effdb22d6be4c948e3f887"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomposek_cor n k v : v <> 0 -> is_decomposable n v -> hom n k v -> decomposable n (decomposek n k v) v.",
            "VernacStartTheoremProof",
            "b3577be9cf6fe2ab65794c605698765eeae84777"
        ],
        [
            "generalize v; clear v.",
            "VernacExtend",
            "7154d586cc61707b200d8edfe2963fe763d28b39"
        ],
        [
            "induction k as [|k IH].",
            "VernacExtend",
            "8c2071e9fa78c8277f33fc000b6b093be4aa5b1b"
        ],
        [
            "intros v Hv (l, Hl) H1.",
            "VernacExtend",
            "aebbc658c9f65a9e39c8c362b720d51a74e5b2f9"
        ],
        [
            "case (homE n 0 (length l) v); auto.",
            "VernacExtend",
            "d6cf87318f58ba792bd4040e031eee00caae6d99"
        ],
        [
            "apply decomp_hom; auto.",
            "VernacExtend",
            "c50c7e72fa8282f4ac83fa65d84fa72fcdab762d"
        ],
        [
            "destruct l; simpl; auto; intros; discriminate.",
            "VernacExtend",
            "dc2c5e212b3e68499d2a4c4660cb750e01993799"
        ],
        [
            "intros; subst; split; auto.",
            "VernacExtend",
            "ff1c9f47e394f49f06851952f6b47418268f991b"
        ],
        [
            "intros i [].",
            "VernacExtend",
            "3d0b999a532a119b22d82394fb8f8af21aa21dd6"
        ],
        [
            "intros v Hv H1 H2; destruct k as [| k].",
            "VernacExtend",
            "acf0f53eb4c2c0e0592e82e0f2235fcd07fcc5e1"
        ],
        [
            "repeat split; try (intros; discriminate).",
            "VernacExtend",
            "85b276f56baecf1e8aaebc0c53e4e0998ff5ba96"
        ],
        [
            "simpl; intros x [[]|[]].",
            "VernacExtend",
            "5e6acfdb3b25bf313795f555992e014327ad19da"
        ],
        [
            "red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "048d09d46eadb61a93c4dc0b3684e613005ae8d7"
        ],
        [
            "case H1; intros l Hl.",
            "VernacExtend",
            "aeb1e4f15440bb432f547d5523e92f2247c20720"
        ],
        [
            "assert (F1: one_factor n k.+1 v \u2228 v = 0).",
            "VernacExtend",
            "f74090c5f6af8067d124b9c16f261c963acab823"
        ],
        [
            "replace k.+1 with (pred (length l)).",
            "VernacExtend",
            "10f517eb785ca48acf7e0af19646d844e81ef809"
        ],
        [
            "apply decomp_one_factor_join; auto.",
            "VernacExtend",
            "c64ab4496de8e6ecebb48c072948c38d4ab7bd9d"
        ],
        [
            "case (homE n (length l) k.+2 v); auto.",
            "VernacExtend",
            "4e84ee288c7801da4970a401dd125f8fb7cd6eab"
        ],
        [
            "apply decomp_hom; auto.",
            "VernacExtend",
            "c50c7e72fa8282f4ac83fa65d84fa72fcdab762d"
        ],
        [
            "intros HH1; rewrite HH1; auto.",
            "VernacExtend",
            "be4b019997c801636f8baf2e8f3cefd59aa780e7"
        ],
        [
            "intros HH1; case Hv; auto.",
            "VernacExtend",
            "dd541250591a0b1bf48c7eafd30b50dfcd235a20"
        ],
        [
            "assert (F2: hom n 1 (one_factor n k.+1 v)).",
            "VernacExtend",
            "761e56d27811c2aba6b6ced1c8aa431b27cfe4ce"
        ],
        [
            "replace 1%nat with (k.+2 - k.+1)%nat.",
            "VernacExtend",
            "aa586fecdbffc5dea04fffcf6d8c76a7a383027a"
        ],
        [
            "apply one_factor_hom; auto.",
            "VernacExtend",
            "d155cd3ed817887ba0a92e65652d367cd9158259"
        ],
        [
            "rewrite <-Minus.minus_Sn_m, <-Minus.minus_n_n; auto with arith.",
            "VernacExtend",
            "52d258abefadaee4b82412931645125334dc1302"
        ],
        [
            "assert (F3: v = one_factor n k.+1 v \u2228 factor n (one_factor n k.+1 v) v).",
            "VernacExtend",
            "ddb4afdfa190fdc90c03288f1b335c8f4beec5f2"
        ],
        [
            "simpl; apply factor_factor; auto.",
            "VernacExtend",
            "11613e1a74053cb44fad547bfd2e0d895b32b7fb"
        ],
        [
            "intros HH; case Hv; apply (one_factor_zero n k.+2 k.+1); auto.",
            "VernacExtend",
            "6ccbd79fd75a9a8d2b5411146edf3a4448fc031a"
        ],
        [
            "case (IH (factor n (one_factor n k.+1 v) v)); auto.",
            "VernacExtend",
            "5cfed27cfa7a5f996daf4f2252f25dae267233b7"
        ],
        [
            "intros HH; case Hv; rewrite F3, HH; Grm0.",
            "VernacExtend",
            "776e5d7b68ae82660de03d42c6a33459494d1dcb"
        ],
        [
            "apply decomposable_factor with k; auto.",
            "VernacExtend",
            "1abf394bd229d7cf838f134b61dc6a3d62d9ca85"
        ],
        [
            "intros HH; case Hv; rewrite F3, HH; Grm0.",
            "VernacExtend",
            "776e5d7b68ae82660de03d42c6a33459494d1dcb"
        ],
        [
            "apply factor_hom; auto.",
            "VernacExtend",
            "69a3d15bfb9b2a70b1b082ed88e64822df3739da"
        ],
        [
            "intros HH; case Hv; rewrite F3, HH; Grm0.",
            "VernacExtend",
            "776e5d7b68ae82660de03d42c6a33459494d1dcb"
        ],
        [
            "intros Hr1 Hr2.",
            "VernacExtend",
            "45ff9a4fe309f815551e4de8e7d4525c44358314"
        ],
        [
            "repeat split; try (intros; discriminate).",
            "VernacExtend",
            "85b276f56baecf1e8aaebc0c53e4e0998ff5ba96"
        ],
        [
            "intros x Hx; case (in_inv Hx); intros H1x.",
            "VernacExtend",
            "a862165104f1db8c1e2137710abda8b7d96041c1"
        ],
        [
            "rewrite <-H1x.",
            "VernacExtend",
            "eeae4a70ad6f686091d165015cfb4f051d7072cb"
        ],
        [
            "red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "048d09d46eadb61a93c4dc0b3684e613005ae8d7"
        ],
        [
            "apply Hr1; auto.",
            "VernacExtend",
            "835858fb05a51ab7d13b00a3fe9fb8a9debb27d9"
        ],
        [
            "rewrite decomposekSS, joinlS, <-Hr2; auto.",
            "VernacExtend",
            "b0f1914c140830d0d54811237e80959d01153aff"
        ],
        [
            "destruct k; simpl; intros; discriminate.",
            "VernacExtend",
            "1c5bff5015cdb31aa6b5348dce4e3162ca2823f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition all_hom1 n l := fold_left (fun c x => c && hom n 1 x) l true.",
            "VernacDefinition",
            "767a9fd4a95e8d0aa6d6539f13523f43b5d639ac"
        ],
        [
            "Lemma all_hom1_cor n l : if all_hom1 n l then forall i, In i l -> hom n 1 i else exists i, In i l /\\ ~ hom n 1 i.",
            "VernacStartTheoremProof",
            "39792075953acc6bea05915ddb607bcd2047fdde"
        ],
        [
            "unfold all_hom1.",
            "VernacExtend",
            "a936f428c8226e1ebdc096f4cf36b3cffbd3cf38"
        ],
        [
            "assert (F1: forall b, if fold_left (fun c x => c && hom n 1 x) l b then b /\\ forall i : vect n, In i l -> hom n 1 i else ~b \\/ exists i, In i l /\\ ~ hom n 1 i).",
            "VernacExtend",
            "909f4ee159529182aa1e52fd81ca76d7445441f7"
        ],
        [
            "induction l as [| a l IH]; simpl.",
            "VernacExtend",
            "ad9248baa3562e8a34c1c9bc4a7a557478b8712d"
        ],
        [
            "intros []; auto.",
            "VernacExtend",
            "538859518958c62815d503605e1de1531db219d1"
        ],
        [
            "split; auto; intros i [].",
            "VernacExtend",
            "055af7d5c5323a211ece2449084f3d95862269ba"
        ],
        [
            "left; intros; discriminate.",
            "VernacExtend",
            "a1948b3e36862409284bc78095f7779402ae7b9e"
        ],
        [
            "intros b; generalize (IH (b && hom n 1 a)).",
            "VernacExtend",
            "875c8feec9760d50a1de08200a53b03f3539b164"
        ],
        [
            "match goal with |- context[fold_left ?X ?Y ?Z] => case (fold_left X Y Z); auto end; rewrite andbP.",
            "VernacExtend",
            "7ec16281011db5159dc53f17457bccc77d3ec960"
        ],
        [
            "intros ((H1,H2),H3); split; auto.",
            "VernacExtend",
            "4f96b64d65ed18d1d7dd90df429a78ad8bbc4c04"
        ],
        [
            "intros i [[]|Hi]; auto.",
            "VernacExtend",
            "57361e0e88e8b09382406afba40898a0f80cbd00"
        ],
        [
            "intros [H1 | H1].",
            "VernacExtend",
            "e39bf3bab67e37614d01e5b5569f2d4d21689dab"
        ],
        [
            "case_eq (hom n 1 a); intros Ha.",
            "VernacExtend",
            "13779f54c4e826c00a7ce765a4ef8cd0b6bdc434"
        ],
        [
            "left; intros Hb; case H1; auto.",
            "VernacExtend",
            "6af383b6d8b4e7e3d45a3b4cda6f3919a01690e8"
        ],
        [
            "right; exists a; split; auto; rewrite Ha.",
            "VernacExtend",
            "0d9336f8367744bd70c33a224dc6beae8a880d7a"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "case H1; intros i [H1i H2i]; right; exists i; split; auto.",
            "VernacExtend",
            "88f742eabac8e9a1846be21d65c936adabcde221"
        ],
        [
            "generalize (F1 true).",
            "VernacExtend",
            "b679490e4ef62e86b72944199c8dde42c8317715"
        ],
        [
            "match goal with |- context[fold_left ?X ?Y ?Z] => case (fold_left X Y Z); auto end.",
            "VernacExtend",
            "5ed0d5411f3e4a93a287356c2f473ce22346b7f8"
        ],
        [
            "intros []; auto.",
            "VernacExtend",
            "538859518958c62815d503605e1de1531db219d1"
        ],
        [
            "intros []; auto.",
            "VernacExtend",
            "538859518958c62815d503605e1de1531db219d1"
        ],
        [
            "contradict H; auto.",
            "VernacExtend",
            "037d4dd3b85775222270487870d4cbd60bd4b5db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition decompose n (v: vect n) : option (list (vect n)) := let d := first_deg n v in let l := decomposek n d v in if all_hom1 n l then if v ?= joinl n l then Some l else None else None.",
            "VernacDefinition",
            "f411e5511ab18b2ac9dd23ce1fd18c6a59f6dd03"
        ],
        [
            "Lemma decompose_cor n v : match decompose n v with | None => ~ is_decomposable n v | Some l => decomposable n l v end.",
            "VernacStartTheoremProof",
            "c4eff077cafcb433f270b7eb290ccb32aeff0ab0"
        ],
        [
            "unfold decompose.",
            "VernacExtend",
            "2db95cf2d92879209f3c332b6ab96b25ac4fda5f"
        ],
        [
            "match goal with |- context[all_hom1 ?X ?Y] => generalize (all_hom1_cor X Y); case (all_hom1 X Y); intros Hi end.",
            "VernacExtend",
            "93b8131b775947b9c91b53bedc55de0dbe16d9e4"
        ],
        [
            "case eqE_spec; auto.",
            "VernacExtend",
            "d61f998cbd7c675779995cbcf52f8e307eeb976d"
        ],
        [
            "intros HH.",
            "VernacExtend",
            "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
        ],
        [
            "case (eqE_spec _ (fn n) v 0); intros Hv.",
            "VernacExtend",
            "37044eb0db0c260d93776bda144b326cd2b98153"
        ],
        [
            "rewrite Hv, first_deg0; simpl; split; auto.",
            "VernacExtend",
            "a8f25f567cab6d8df9d920dfbc262c55ed99d180"
        ],
        [
            "intros i [].",
            "VernacExtend",
            "3d0b999a532a119b22d82394fb8f8af21aa21dd6"
        ],
        [
            "apply decomposek_cor; auto.",
            "VernacExtend",
            "fa1ad0871176e729aa5239203dd5a26f6fa07161"
        ],
        [
            "exists (decomposek n (first_deg n v) v).",
            "VernacExtend",
            "31f6618be7efcca27bc4ede0f5a2bfc58e0dae36"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros i H1i; red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "0887d0d97da7903cda0aa333cdc8e296887c0a16"
        ],
        [
            "assert (F1: hom n (length (decomposek n (first_deg n v) v)) v).",
            "VernacExtend",
            "cc2fb14cb7773c05196597f66d903da7c56c0343"
        ],
        [
            "rewrite HH at 3; apply (joinl_hom1 n); auto.",
            "VernacExtend",
            "0286332fdfb9ed09547cab43844c78afdcfe29b2"
        ],
        [
            "rewrite hom_first_deg with (k := length (decomposek n (first_deg n v) v)); auto.",
            "VernacExtend",
            "4da159c6b37510cd2d2129daf3ccbc20a1a9a8ca"
        ],
        [
            "intros H1 HH.",
            "VernacExtend",
            "f3f9abeb64f96ce0742a0874cd3ec860fefee8de"
        ],
        [
            "case HH; intros l Hl.",
            "VernacExtend",
            "dc3cda473c250f428c0e39998924092a3e30e8c6"
        ],
        [
            "assert (F1: v <> 0).",
            "VernacExtend",
            "2e0b69a7e284a8a155426826298bdae38c4f545a"
        ],
        [
            "intros H2; case H1.",
            "VernacExtend",
            "acefc933644f33cf01a1b9e5c1cb8f12aaba0e3c"
        ],
        [
            "rewrite H2 at 2; rewrite first_deg0; auto.",
            "VernacExtend",
            "b2cc6587742f4829cb85246383e0ec4f33a12415"
        ],
        [
            "assert (F2: hom n (length l) v).",
            "VernacExtend",
            "4f0b86367d8fe91ad7c24d378ff7602d0e316610"
        ],
        [
            "case Hl; intros H2 H3; rewrite H3.",
            "VernacExtend",
            "87043f7b1aa42264c3088d4dd388c68e44a0e10f"
        ],
        [
            "apply (joinl_hom1 n); auto.",
            "VernacExtend",
            "03d96ceb2c4566c3d2a1e98212ea5dcdafb1872f"
        ],
        [
            "intros; rewrite <-cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "da620ed35a72b0607d22af473d09707452d571fd"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "case (decomposek_cor n (length l) v); auto.",
            "VernacExtend",
            "c5d3e28581449e6eded11f9ba8099289c5d7a36b"
        ],
        [
            "intros; case H1; auto.",
            "VernacExtend",
            "a49f162b59bd639316484ecda38f9c175c794d6d"
        ],
        [
            "rewrite hom_first_deg with (k := length l); auto.",
            "VernacExtend",
            "5254f35374c215cf5532b3f5da80ac1a99c9a69e"
        ],
        [
            "intros H1; case H1; intros l Hl.",
            "VernacExtend",
            "7d86c89ea3437f1e75428a9596905fa1d1afe684"
        ],
        [
            "assert (F1: v <> 0).",
            "VernacExtend",
            "2e0b69a7e284a8a155426826298bdae38c4f545a"
        ],
        [
            "intros H2; case Hi; intros i.",
            "VernacExtend",
            "1f5ddba53d4ea3b1df53cf77d8c38834eb31e491"
        ],
        [
            "subst; rewrite first_deg0; intros [[] _].",
            "VernacExtend",
            "378370a2f236fbeeffdbd2f0eb59557d8f1bbdd1"
        ],
        [
            "assert (F2: hom n (length l) v).",
            "VernacExtend",
            "4f0b86367d8fe91ad7c24d378ff7602d0e316610"
        ],
        [
            "case Hl; intros H2 H3; rewrite H3.",
            "VernacExtend",
            "87043f7b1aa42264c3088d4dd388c68e44a0e10f"
        ],
        [
            "apply (joinl_hom1 n); auto.",
            "VernacExtend",
            "03d96ceb2c4566c3d2a1e98212ea5dcdafb1872f"
        ],
        [
            "intros; rewrite <-cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "da620ed35a72b0607d22af473d09707452d571fd"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "case (decomposek_cor n (length l) v); auto.",
            "VernacExtend",
            "c5d3e28581449e6eded11f9ba8099289c5d7a36b"
        ],
        [
            "intros H2.",
            "VernacExtend",
            "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
        ],
        [
            "case Hi; intros i [H1i []].",
            "VernacExtend",
            "625e2d8df654172450e1997af5adc151f4c0e060"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "4c03f60857967909d6bfb391b94e0deb1094f4d8"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "rewrite <-(hom_first_deg n (length l) v); auto.",
            "VernacExtend",
            "a09fd43b3a5dbc9e546ee36a29445fc0dbb50bf7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition grade n k x := hom n k x && if decompose n x then true else false.",
            "VernacDefinition",
            "bf325af156b5fdbee1647b3ac55920d29294d68a"
        ],
        [
            "Lemma gradeE n k x : grade n k x <-> hom n k x /\\ exists l, x = joinl n l /\\ (forall y, In y l -> hom n 1 y).",
            "VernacStartTheoremProof",
            "794b22497455e862bed14c9f7eb1a88cea70f705"
        ],
        [
            "unfold grade.",
            "VernacExtend",
            "bd3249237c63f46e1563ee2e2b2b6c03b74d0be6"
        ],
        [
            "generalize (decompose_cor n x); case decompose; rewrite andb_comm; simpl; auto.",
            "VernacExtend",
            "0256a561e0cc296be15e0b970723c9d46718676b"
        ],
        [
            "intros l (H1,H2); subst.",
            "VernacExtend",
            "13ed90ddfd44995a2d5efc87dd5ca187930a4d38"
        ],
        [
            "assert (H4: forall x : vect n, In x l -> hom n 1 x).",
            "VernacExtend",
            "3746f8929f04fcc1fec284bd6cf3ec3b083d2767"
        ],
        [
            "intros x H4; rewrite <-cbl1_hom1_equiv; apply H1; auto.",
            "VernacExtend",
            "cbfcb8abc90e843b41828bd2d0ec700bc342d512"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros H3; split; auto.",
            "VernacExtend",
            "826f757b3ef27046ec74deb2c65aaee652e82aa0"
        ],
        [
            "exists l; split; auto.",
            "VernacExtend",
            "27d0fc1f2b695a2b1390f3d8ee70e8452c1c5d07"
        ],
        [
            "intros (HH,_); auto.",
            "VernacExtend",
            "71ff34878f4f6afccaeabdf0dc662ab2af9238b2"
        ],
        [
            "intros HH; split.",
            "VernacExtend",
            "2af1f46c9c28e2751806bd6aad905fc2fef7f6c7"
        ],
        [
            "intros HH1; discriminate.",
            "VernacExtend",
            "65311935b0db7af24bd8a6743739cf6663c9c8c9"
        ],
        [
            "intros (H1, (l, (H1l,H2l))).",
            "VernacExtend",
            "bc408d772dd0b861da9b952451dcb048c89bcee1"
        ],
        [
            "case HH.",
            "VernacExtend",
            "10f8923150a39982e0546045f9f1c8ce57c69692"
        ],
        [
            "exists l; split; auto.",
            "VernacExtend",
            "27d0fc1f2b695a2b1390f3d8ee70e8452c1c5d07"
        ],
        [
            "intros u Hu; red; rewrite cbl1_hom1_equiv; auto.",
            "VernacExtend",
            "459a973abff71925b3f8d0dd6e6fcdd1284338f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade0 n k : grade n k 0.",
            "VernacStartTheoremProof",
            "cf9036fce96c0b909d2b9c313140dfd87b3bac6e"
        ],
        [
            "unfold grade; rewrite homk0.",
            "VernacExtend",
            "4addca4202ba026abf4d4e9810b6768edcf67692"
        ],
        [
            "generalize (decompose_cor n 0); case decompose; auto.",
            "VernacExtend",
            "c2d571007d1c1d8ae1aa26526de71fa21196196e"
        ],
        [
            "intros []; exists nil; split; auto.",
            "VernacExtend",
            "2c964408d5c4922770bde1de8b7d66fde416e883"
        ],
        [
            "intros x1 [].",
            "VernacExtend",
            "83e953f2a5e76b69f65a08576aba014fe153535f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade0E n x : grade n 0 x -> x = 0.",
            "VernacStartTheoremProof",
            "1ca25aaf3d9d63842123ef318d6704fc53dee419"
        ],
        [
            "rewrite gradeE.",
            "VernacExtend",
            "b75c3340ccf576e8bb833179f3c97627eeeaa961"
        ],
        [
            "intros (Hx, (l, (H1l, H2l))); subst.",
            "VernacExtend",
            "88de1bc53105ec85605e82cec2d72a6a7930d707"
        ],
        [
            "destruct l as [|y l]; auto.",
            "VernacExtend",
            "8565928d0a8618c8c0552872202a4f288b8ce7b5"
        ],
        [
            "case (homE n (length (y::l)) 0 (joinl n (y::l))); auto.",
            "VernacExtend",
            "b883117d08a8fe8b583ca8882bfc4214f426eee3"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade_hom n k x : grade n k x -> hom n k x.",
            "VernacStartTheoremProof",
            "44320b745c600118d494ff3408a109aa21ec549a"
        ],
        [
            "unfold grade; rewrite andbP; intros (H,_); auto.",
            "VernacExtend",
            "dd998a7abdf19c84bfdc8f4739f8c13481ffbd8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade1_hom n x : grade n 1 x = hom n 1 x.",
            "VernacStartTheoremProof",
            "1bf60cd162c83399a62546e5a2dbf4280666969a"
        ],
        [
            "unfold grade.",
            "VernacExtend",
            "bd3249237c63f46e1563ee2e2b2b6c03b74d0be6"
        ],
        [
            "case_eq (hom n 1 x); auto.",
            "VernacExtend",
            "37dbe2ac9e7dd4e530cef4b297ea72d1942e960e"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "generalize (decompose_cor n x); case decompose; auto.",
            "VernacExtend",
            "a06fb87bead2aa27c26e9b67f0b533a360978845"
        ],
        [
            "intros []; exists (x::nil); split; auto.",
            "VernacExtend",
            "03dfd8b31a9051ef73dcc81799b26fc9d8b96bc0"
        ],
        [
            "intros x1; simpl; intros [[]|[]].",
            "VernacExtend",
            "1677509b96f7b22f95d57bc5fb253c4e2da6480e"
        ],
        [
            "red; rewrite cbl1_hom1_equiv, H; auto.",
            "VernacExtend",
            "adf3d114a62daf44a060fd6e171f515cc5dd1c1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade_scal n k1 k2 x : grade n k1 x -> grade n k1 (k2 .* x).",
            "VernacStartTheoremProof",
            "7d7425e9b71568a0d90e1fb73b45db6968cec3af"
        ],
        [
            "rewrite !gradeE; intros (Hx, (l, (H1l, H2l))).",
            "VernacExtend",
            "b93a6b84a2d75436c40971e96d232259b21da1d2"
        ],
        [
            "destruct l as [| y l].",
            "VernacExtend",
            "a7829247f3daa12b4632d29d19e6512c55d7f820"
        ],
        [
            "rewrite H1l; simpl joinl; rewrite scalE0r, <-gradeE, grade0; auto.",
            "VernacExtend",
            "ba983b7789bd1d17e1dbb4baaaa7a6a6c68fc4b0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists (k2 .* y :: l); repeat split; auto.",
            "VernacExtend",
            "fe7a18237c792d34fac2c6727595eb8062b703a2"
        ],
        [
            "rewrite H1l; destruct l as [|z l]; auto.",
            "VernacExtend",
            "238f5d927460bf7d2584973951aa4eec91d0ad06"
        ],
        [
            "rewrite joinlS; try (intros HH; discriminate).",
            "VernacExtend",
            "f264631e6538b3c9188dd647161d054783d6a9d3"
        ],
        [
            "apply sym_equal; rewrite joinlS; try (intros HH; discriminate).",
            "VernacExtend",
            "87cf9d8abdeb3188e30204caec82243db7aafff1"
        ],
        [
            "rewrite join_scall; auto.",
            "VernacExtend",
            "76a57b8048633f86c466c85377da44f8ce84c4bc"
        ],
        [
            "simpl; intros z [[] | Hz]; auto with datatypes.",
            "VernacExtend",
            "e125831950e7ba9dd4856e5dc935638276e86926"
        ],
        [
            "apply scal_hom; auto with datatypes.",
            "VernacExtend",
            "19da174ce5f8a0ada2d85860f89f26df6b908164"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade_join n k1 k2 x y : grade n k1 x -> grade n k2 y -> grade n (k1 + k2) (x \u2228 y).",
            "VernacStartTheoremProof",
            "cf055ee7c4ceef88f66b3ff475a4651f326a068f"
        ],
        [
            "rewrite !gradeE.",
            "VernacExtend",
            "9d79d290cb9a41b0230ced13f27071e0e442260a"
        ],
        [
            "intros (Hx, (l1, (H1l1, H2l1))) (Hy, (l2, (H1l2, H2l2))).",
            "VernacExtend",
            "dbffc301c85111e420524c0734dd5481cb852e4d"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct l1 as [|x1 l1].",
            "VernacExtend",
            "626b6b721a93ac04462f10c5e68a4ba12c138af0"
        ],
        [
            "rewrite H1l1; simpl joinl; exists nil; split; Grm0.",
            "VernacExtend",
            "ad03a1dfce68e7cd3e5f6b634dc11e410a80feba"
        ],
        [
            "destruct l2 as [|x2 l2].",
            "VernacExtend",
            "cca72d89cdeed7e16edefd12cbb9c1e75a1a9c39"
        ],
        [
            "rewrite H1l2; simpl joinl; exists nil; split; Grm0.",
            "VernacExtend",
            "905c5aa51f490c91bba804c7082aa204c60711b5"
        ],
        [
            "exists ((x1::l1) ++ (x2::l2)); repeat split.",
            "VernacExtend",
            "eb4ed166a88e8ec18ea0a187a3065c26fc75a65c"
        ],
        [
            "rewrite H1l1, H1l2, joinl_app; auto; intros; discriminate.",
            "VernacExtend",
            "a38f4bd5d6ea9d0de359a8ec36e539736bd9e0d4"
        ],
        [
            "intros z Hz; case (in_app_or _ _ _ Hz); intros H1; auto.",
            "VernacExtend",
            "edaba9c2da2cef9a3aa5c445ad1e6cf1853c928f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint dual n : vect n -> vect n := match n return vect n -> vect n with | 0 => fun a => a | S n1 => fun v => let (x,y) := v in (dual n1 (y ^_'f), dual n1 x) end.",
            "VernacFixpoint",
            "1c7459e96e2a97dcc5c353e1e7bb4b46b5a93f8d"
        ],
        [
            "Notation \"'@ x \" := (dual _ x) (at level 9).",
            "VernacNotation",
            "6282a951dc74e787b52025f4f4f000a3e13183d1"
        ],
        [
            "Lemma dual0 n : '@0 = 0 :> vect n.",
            "VernacStartTheoremProof",
            "c504134f25f113d20aaea9dedc92e0b9d9ac6356"
        ],
        [
            "induction n as [| n IH]; simpl dual; auto.",
            "VernacExtend",
            "5007fcbc095d4d01a5ec642b3b573bfa05b6ed08"
        ],
        [
            "Vfold n; rewrite conj0,!IH; auto.",
            "VernacExtend",
            "f5033f9d8ee44fcd40233c33eff2657d5ea01271"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite dual0: GRm0.",
            "VernacExtend",
            "7b125d55b63c6d27f585cd50f76ab1c82c85bf01"
        ],
        [
            "Lemma dual0E n (x: vect n) : '@x = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "7d219e242466f551bd5d4ecc0cc11ac1a5cbedf3"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x as [x1 x2]; intros HH; injection HH; intros H1 H2.",
            "VernacExtend",
            "b8eec07632f5a93445a7e657d3f7b9dd3d505aa9"
        ],
        [
            "rewrite <-(conj_invo n false x2), (IH _ H1), (IH _ H2), conj0; auto.",
            "VernacExtend",
            "381bebc6f29f2cd30364262df17f42dd8be45191"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_hom n k v : hom n k v -> hom n (n - k) '@v.",
            "VernacStartTheoremProof",
            "8fd30a74e66413b624c1603e8aea197c98490797"
        ],
        [
            "case (Lt.le_or_lt k n).",
            "VernacExtend",
            "f736e04b031e8d08d007d17ab30d8923a769368c"
        ],
        [
            "2: intros Hi Hh; rewrite (hom_lt _ _ _ Hi Hh), dual0, homk0; auto.",
            "VernacExtend",
            "e8c8e6a12f182e020bbf7d73f2115d939d36413b"
        ],
        [
            "generalize k v; induction n as [| n IH]; simpl; auto; clear k v.",
            "VernacExtend",
            "8303bf1bd566700e0e02495f35a779ad5c50a8cd"
        ],
        [
            "intros [| k] (x,y) H; rewrite !andbP; intros (H1,H2).",
            "VernacExtend",
            "3856c4c60e12e227deeeee000ac8076c4e4e0851"
        ],
        [
            "split; try apply conj_hom.",
            "VernacExtend",
            "7bbd12c00f7457bcf54c98282b6489f08627692c"
        ],
        [
            "pattern n at 2; replace n with (n - 0)%nat; auto with arith.",
            "VernacExtend",
            "0cea2962ff70449f63dd6fab243e5bcbe8b8d00b"
        ],
        [
            "generalize H1; case eq0_spec; intros; [subst | discriminate].",
            "VernacExtend",
            "34967e9256faa4b905e1e37a8c09992efe629d01"
        ],
        [
            "rewrite dual0, homk0; auto.",
            "VernacExtend",
            "adc6993c8b0ff619b3342e80816ed01a95c12c1b"
        ],
        [
            "assert (H3: k <= n); auto with arith.",
            "VernacExtend",
            "835e8a348522ba596a14d5a0f646fc601bb58927"
        ],
        [
            "generalize (Minus.le_plus_minus _ _ H3).",
            "VernacExtend",
            "202b6e76278d1d95c1033cbd261c73ae8b7609e8"
        ],
        [
            "case (n - k)%nat.",
            "VernacExtend",
            "940140127287d3afde8a79c0288dff269b25ab61"
        ],
        [
            "rewrite Plus.plus_0_r; intros; subst.",
            "VernacExtend",
            "a0d803086b7c04e32bdd26478f7a939fcb0575b6"
        ],
        [
            "rewrite (hom_lt k k.+1 y), conj0, dual0, eq0I; auto with arith.",
            "VernacExtend",
            "6f6c73c45e8a0f746a8bc6d6a022f938ddb89dc3"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "replace 0%nat with (k - k)%nat; auto with arith.",
            "VernacExtend",
            "9b21f90c6c0cedd6572483beb885de2d6c97f627"
        ],
        [
            "intros n1 Hn1; split; try apply conj_hom.",
            "VernacExtend",
            "c0dd4c7647ddb521c770a058d839abd5b0f573b5"
        ],
        [
            "replace n1 with (n - S k)%nat; auto with arith.",
            "VernacExtend",
            "92248d4191dd5adba0c56f589b35864d1aef77e9"
        ],
        [
            "apply IH; auto with arith.",
            "VernacExtend",
            "b5201a12b405bfa799f8cf16c59b7f895e731d0a"
        ],
        [
            "rewrite Hn1, <-Plus.plus_Snm_nSm; auto with arith.",
            "VernacExtend",
            "e013da6bd3a50cf959018232bd7cb57677358041"
        ],
        [
            "rewrite Hn1, <-Plus.plus_Snm_nSm; auto with arith.",
            "VernacExtend",
            "e013da6bd3a50cf959018232bd7cb57677358041"
        ],
        [
            "replace n1.+1 with (n - k)%nat; auto with arith.",
            "VernacExtend",
            "a348db4863357b3dcb6393abaaf68ed0b88bfb46"
        ],
        [
            "rewrite Hn1, Minus.minus_plus; auto.",
            "VernacExtend",
            "1fc59242d963ef178ceef1867f13ce31c4eedab2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dual_hom.",
            "VernacHints",
            "c60267070d0926c4291242166e74e945f3439551"
        ],
        [
            "Lemma dual_scal n k (v: vect n) : '@(k .* v) = k .* '@v.",
            "VernacStartTheoremProof",
            "c6e03572e3b6e258e3cab9252f802267a1c95f13"
        ],
        [
            "induction n as [| n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "destruct v; rewrite !conj_scal,!IH; auto.",
            "VernacExtend",
            "1c8c01646318060e19f716a47ec8d098e03758af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_add n (v1 v2: vect n) : '@(v1 + v2) = '@v1 + '@v2.",
            "VernacStartTheoremProof",
            "3e83fda0c8d542d1d1cabfaef9bb8d5ac290c9e6"
        ],
        [
            "induction n as [| n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "231340d188253115ac2907908891f8cfb8b3cc3f"
        ],
        [
            "destruct v1; destruct v2; rewrite !conj_add, !IH; auto.",
            "VernacExtend",
            "f1252fdfd6071def1fb3c91f4bc66fad0644e1e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_invo n k (v: vect n): hom n k v -> '@('@v) = (-(1)) ^(k * n.+1) .* v.",
            "VernacStartTheoremProof",
            "a315c832a0bd5be2be77a6864a3e4010179551f1"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [| k]; auto; Krm1.",
            "VernacExtend",
            "a2cd8f320238b885bdd0d199411a3a5c6e43ce33"
        ],
        [
            "case eqK_spec; intros; subst; Vrm0; try discriminate.",
            "VernacExtend",
            "3faf346d8b25d475b5dfc2baf698dc37889b8dba"
        ],
        [
            "intros [|k]; destruct v.",
            "VernacExtend",
            "7275fdf4236cfba53a1d2eb23da5c15ddd5a06ac"
        ],
        [
            "rewrite andbP; case eq0_spec; intros H1 (H2,H3); subst; try discriminate.",
            "VernacExtend",
            "37f4dfc493d37480e105059070bd13bcf29dd535"
        ],
        [
            "rewrite !dual0, conj0; Vrm0.",
            "VernacExtend",
            "d147f08b8e58bf42688e03bef8af34fb28fac734"
        ],
        [
            "rewrite (conjf_hom _ _ _ H3), !dual_scal, (IH _ _ H3).",
            "VernacExtend",
            "b1451000eca83581a8ab432d1bf62222c93ef26c"
        ],
        [
            "simpl expK; rewrite !scalE1, dual0; auto.",
            "VernacExtend",
            "3cc0971c166a27bf5efa9bbb42318ef2f7c8f62d"
        ],
        [
            "rewrite andbP; intros (H1,H2).",
            "VernacExtend",
            "b1faa0bd46dcdfd68d8f51dce60638bb2a60e7ee"
        ],
        [
            "rewrite (conjf_hom _ _ _ H2), !dual_scal, (IH _ _ H2).",
            "VernacExtend",
            "b48ffac352811fd10d3fcd3a2552b15d46bc86b1"
        ],
        [
            "assert (H3:= dual_hom _ _ _ H1).",
            "VernacExtend",
            "b900b004ca971cf366eb284a26b872f189f4f962"
        ],
        [
            "rewrite (conjf_hom _ _ _ H3), dual_scal, (IH _ _ H1).",
            "VernacExtend",
            "d14bedc4c4ebea6822161df92d4ea7b5c14f8020"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "case (Lt.le_or_lt k n); intros Hkn.",
            "VernacExtend",
            "ce7dd0ecf0058c2c0ba06cfe8bcc1b36d4510bf7"
        ],
        [
            "2: rewrite hom_lt with (2:= H1); Grm0.",
            "VernacExtend",
            "18d612640ad34e21c04fef4a7018a3420ce24b2f"
        ],
        [
            "rewrite expKm1_sub, <-!scal_multE, <-!expK_add; auto.",
            "VernacExtend",
            "e2077e82e133073968aaeff9bed4537d35f3295c"
        ],
        [
            "replace ((k.+1 * n .+2)%nat) with (2 + (n + k + k * n.+1))%nat by ring.",
            "VernacExtend",
            "a9fe29c2245c1c8ad7403a90697f121240245569"
        ],
        [
            "simpl expK; Krm1.",
            "VernacExtend",
            "3db6545a15310ea464d0d273d74370cae841df14"
        ],
        [
            "rewrite <-!scal_multE, <-!expK_add; auto.",
            "VernacExtend",
            "811b11142be887c9cd7d3f7d6432b36cd0ad0c82"
        ],
        [
            "replace (k.+1 + k.+1 * n.+1)%nat with (k.+1 * n .+2)%nat by ring; auto.",
            "VernacExtend",
            "42612d9459ba19fe4535d1f43d21e79a82bafb71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_invoE n k (v: vect n) : hom n k v -> v = ((-(1)) ^(k * n.+1)) .* '@('@v).",
            "VernacStartTheoremProof",
            "19c9e8bd50a1da06465cbef24aa4802fb203356b"
        ],
        [
            "intros H; rewrite (dual_invo _ _ _ H), <-scal_multE, expK2m1, scalE1; auto.",
            "VernacExtend",
            "f57f9b146062319b6d5c87ff9200e94bee8a66d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_all n : '@E = 1 :> vect n.",
            "VernacStartTheoremProof",
            "063c27c4ee067d9cc913e65e5837bcb1ba30ca14"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite IH, conj0, dual0; auto.",
            "VernacExtend",
            "d1834fed695d043cfa0371eb5ee41d2a3475de89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual1 n : '@1 = E :> vect n.",
            "VernacStartTheoremProof",
            "0261ca275690005505b7a2fc3a1fea74aff40c4c"
        ],
        [
            "induction n as [|n IH]; simpl; Krm1.",
            "VernacExtend",
            "ec6de54d1f0b751e765ca379efc49adadce713ec"
        ],
        [
            "assert (F1: hom n 0 1) by apply hom0K.",
            "VernacExtend",
            "78e1ac1a148121abd7ced216f545dc0f1dbe5034"
        ],
        [
            "assert (F2: hom n n '@1).",
            "VernacExtend",
            "253e2005943f845672b3c3645f0d293ac220bac2"
        ],
        [
            "generalize (dual_hom _ _ _ F1); rewrite <-Minus.minus_n_O; auto.",
            "VernacExtend",
            "53dc5920b76c3166baf8a2657b4de6a9cfd97723"
        ],
        [
            "rewrite (conjf_hom _ _ _ F1), dual_scal, IH, scalE1, dual0; auto.",
            "VernacExtend",
            "f7cc4a9ab9d3272027e9132d7c787a3bc7563a29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homn_ex n v : hom n n v -> exists k, v = '@[k].",
            "VernacStartTheoremProof",
            "39966dd8749dc3102c8105e71e4fff58b414c598"
        ],
        [
            "rewrite <-cblk_homk_equiv.",
            "VernacExtend",
            "b79a8cbc3a60aa9ed50fdc0facbbe1302b21e84b"
        ],
        [
            "intros HH; elim HH; clear v HH.",
            "VernacExtend",
            "c83161491de54c09a0fa2d675cd54adc4d4fc12c"
        ],
        [
            "exists 0%f; rewrite dual0; auto.",
            "VernacExtend",
            "8f5391b51c057f1e813c2428d0d44baa22b3ef07"
        ],
        [
            "intros v Hv; exists 1%f.",
            "VernacExtend",
            "28307f184844dcda2fa8597a44e4387118d3c307"
        ],
        [
            "rewrite base_n in Hv; simpl in Hv; case Hv; auto; intros [].",
            "VernacExtend",
            "342327d39e3aaac4a1a42973ded3b599b8279c52"
        ],
        [
            "rewrite dual1; auto.",
            "VernacExtend",
            "ff03dd27b2199555b4cac05519b17172ead3d89c"
        ],
        [
            "intros x y _ [k1 Hk1] _ [k2 Hk2]; exists (k1 + k2)%f; subst.",
            "VernacExtend",
            "dd9fee544fe6eba74c8c702b07b4a835b9d7068e"
        ],
        [
            "rewrite <-dual_add, addk; auto.",
            "VernacExtend",
            "8cef82c31e74ba1e896f7a5d659feb48c8897b93"
        ],
        [
            "intros k1 x _ [k2 Hk2]; exists (k1 * k2)%f; subst.",
            "VernacExtend",
            "fb657fd0b6d4e69d24696bba1273f8d3c16c2ba5"
        ],
        [
            "rewrite <-dual_scal, scalk; auto.",
            "VernacExtend",
            "77daef83a2b22019131e788233d455eed240846d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_base n k v : In v (base n k) -> In '@v (base n (n - k)) \\/ In ((-(1)) .* '@v) (base n (n - k)).",
            "VernacStartTheoremProof",
            "d2179b3ea3ae0e1908e0307efc5846dd5a5bd4f4"
        ],
        [
            "case (Lt.le_or_lt k n).",
            "VernacExtend",
            "f736e04b031e8d08d007d17ab30d8923a769368c"
        ],
        [
            "2: intros H; rewrite base_lt_nil; auto; intros HH; inversion HH.",
            "VernacExtend",
            "216fbf34691d844bf25743805f331dc68c8834c0"
        ],
        [
            "generalize k; induction n as [| n IH]; simpl; auto; clear k; try Vfold n.",
            "VernacExtend",
            "15480bb1089aa68f926991f6f5c01d2840ffd224"
        ],
        [
            "intros [| k] H; auto with arith.",
            "VernacExtend",
            "45d006600052b0296948b2cb5847110caed4ae48"
        ],
        [
            "intros [| k] H; destruct v as [x y].",
            "VernacExtend",
            "ac161f4d009551dc86f40491484d67ee0ff03cfa"
        ],
        [
            "rewrite base0; simpl; Vfold n.",
            "VernacExtend",
            "f70b9bcc599647ed9da7b586a802ff5dea2278f2"
        ],
        [
            "intros [H1 | []]; injection H1; intros; subst.",
            "VernacExtend",
            "7059aeafeb6f8cb9bad6f29c50013419b12cab0a"
        ],
        [
            "rewrite dual0, en_def, conjk, dual1; Vrm0.",
            "VernacExtend",
            "5a4441026f9faa0a2e18dc5bed2d0c58070e67cc"
        ],
        [
            "left; apply in_or_app; left; rewrite base_n; simpl; auto with datatypes.",
            "VernacExtend",
            "329d2059b42e2559c278d497811c8db3e1f991a8"
        ],
        [
            "assert (H3: k <= n); auto with arith.",
            "VernacExtend",
            "835e8a348522ba596a14d5a0f646fc601bb58927"
        ],
        [
            "generalize (Minus.le_plus_minus _ _ H3).",
            "VernacExtend",
            "202b6e76278d1d95c1033cbd261c73ae8b7609e8"
        ],
        [
            "case (n - k)%nat.",
            "VernacExtend",
            "940140127287d3afde8a79c0288dff269b25ab61"
        ],
        [
            "rewrite Plus.plus_0_r; intros Hn H1; subst.",
            "VernacExtend",
            "bdf7d370ff41746db0a3fa77655ca524ab7b452a"
        ],
        [
            "rewrite base_n, base_lt_nil in H1; auto with arith.",
            "VernacExtend",
            "13fe506d452ca2496bd6fd7d4f8d434d2b49745c"
        ],
        [
            "simpl in H1; case H1; [intros H2 | intros []].",
            "VernacExtend",
            "27f61460208bed56f0f6f789fc03f2fc75efceec"
        ],
        [
            "injection H2; intros; subst.",
            "VernacExtend",
            "2e52dcfd0ac5017cb74a8e3f2eb3b83be331b111"
        ],
        [
            "rewrite conj0, dual0, dual_all.",
            "VernacExtend",
            "c4776c9450a18adffcf5433a43965e0da99f676a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "change (0:vect k, 1: vect k) with (lift k 1).",
            "VernacExtend",
            "cc2498ca105a8e3f6d7c62fc93113ab6fce1f4f3"
        ],
        [
            "apply in_map; rewrite base0, en_def; auto with datatypes.",
            "VernacExtend",
            "4d0d59b5a3082ba7c61570645c000882742876b9"
        ],
        [
            "intros k1 Hk1 H1.",
            "VernacExtend",
            "ff3cd5da663ae7b71ad2c9ba79acf8cd8c3604f8"
        ],
        [
            "assert (H4: k.+1 <= n); auto with arith.",
            "VernacExtend",
            "81a66b89e18a865a2d4fe5c0bdf9fa3247ba209d"
        ],
        [
            "rewrite Hk1, <-plus_n_Sm; auto with arith.",
            "VernacExtend",
            "4ac3367177f23ae4edc8c40ffd44dd333890e1cb"
        ],
        [
            "replace k1.+1 with (n - k)%nat.",
            "VernacExtend",
            "451db82ee6333f4ea30620385e8c7a53aee99b74"
        ],
        [
            "2: rewrite Hk1, Minus.minus_plus; auto.",
            "VernacExtend",
            "5f670269bb7f04909a2d25488b5aaf53ccf47aca"
        ],
        [
            "replace k1 with (n - k.+1)%nat.",
            "VernacExtend",
            "a4ad32fa815073406a5817f9db8957dbb137fe82"
        ],
        [
            "2: rewrite Hk1, <-Plus.plus_Snm_nSm, Minus.minus_plus; auto.",
            "VernacExtend",
            "9c3e1692c314acfa785df279f293d6c331c3baa9"
        ],
        [
            "case (in_app_or _ _ _ H1).",
            "VernacExtend",
            "d576e1c64100d3509f3068fb7e43c228ead5f38f"
        ],
        [
            "rewrite in_map_iff; intros [u (H1u,H2u)].",
            "VernacExtend",
            "6db6b5af1fe5734e1668de20efde63583f12dcd7"
        ],
        [
            "injection H1u; intros Hv1 HV1; subst x y; rewrite conj0, dual0.",
            "VernacExtend",
            "42fe4c1f70eec3b4f296bde7b0efd019f06c400f"
        ],
        [
            "Vfold n; Vrm0.",
            "VernacExtend",
            "b33e1d83ebfc5150c581f1dbe381b36bb495999d"
        ],
        [
            "case (IH _ _ H3 H2u); auto.",
            "VernacExtend",
            "ca21a4a48ca9cd795e5ac11c0dd7c43f5f219516"
        ],
        [
            "intros Hin.",
            "VernacExtend",
            "e3c305e994241b22fa4c93e346adf131f596c272"
        ],
        [
            "assert (Hh := base_hom _ _ _ (Minus.le_minus _ _) Hin).",
            "VernacExtend",
            "902e23c0c2774fcc5137ff36e11f5f0112be0f40"
        ],
        [
            "left; apply in_or_app; right; apply (in_map (lift n)); auto.",
            "VernacExtend",
            "70a53da4c168aaaf78de652320c4181c3ba7c31b"
        ],
        [
            "right; apply in_or_app; right; apply (in_map (lift n)); simpl; auto.",
            "VernacExtend",
            "0b5362c0953566df617a9c932300eda9d17e9a4f"
        ],
        [
            "rewrite in_map_iff; intros [u (H1u,H2u)].",
            "VernacExtend",
            "6db6b5af1fe5734e1668de20efde63583f12dcd7"
        ],
        [
            "injection H1u; intros Hv1 HV1; subst x y.",
            "VernacExtend",
            "8ca00483cdea7e9138e742e7337116a3ba7f0401"
        ],
        [
            "rewrite dual0.",
            "VernacExtend",
            "4790ef9a9ba5158dd6304e09567d308c3bfb9543"
        ],
        [
            "Vfold n; Vrm0.",
            "VernacExtend",
            "b33e1d83ebfc5150c581f1dbe381b36bb495999d"
        ],
        [
            "case (IH _ _ H4 H2u); auto; intros Hin; rewrite (conjf_hom n k.+1); try apply base_hom; auto; rewrite dual_scal; case (even_or_odd (k.+1)); intros H2; simpl stype.",
            "VernacExtend",
            "77f6649154100b8bfaea78fd53cc1c7243789072"
        ],
        [
            "rewrite expKm1_even with (2 := H2), scalE1; auto.",
            "VernacExtend",
            "b06887cd58c49b508375ef03669abe1c12f10dc8"
        ],
        [
            "left; apply in_or_app; left; apply (in_map (dlift n)); auto.",
            "VernacExtend",
            "b46c70ee47ac1a447628305678b72f3249d1b41b"
        ],
        [
            "rewrite expKm1_odd with (2:= H2); auto.",
            "VernacExtend",
            "e76c8ef1a6329774a5935e311ee5a385050b03d5"
        ],
        [
            "rewrite <-scal_multE, multK_m1_m1, scalE1; auto.",
            "VernacExtend",
            "1663abff25e655f99c99d514e0495b9592678bf0"
        ],
        [
            "right; apply in_or_app; left; apply (in_map (dlift n)); auto.",
            "VernacExtend",
            "5b306f4d8b435e1c1670015e20071d62d44299a2"
        ],
        [
            "rewrite expKm1_even with (2 := H2), scalE1; auto.",
            "VernacExtend",
            "b06887cd58c49b508375ef03669abe1c12f10dc8"
        ],
        [
            "right; apply in_or_app; left; apply (in_map (dlift n)); auto.",
            "VernacExtend",
            "5b306f4d8b435e1c1670015e20071d62d44299a2"
        ],
        [
            "rewrite expKm1_odd with (2 := H2); auto.",
            "VernacExtend",
            "e76c8ef1a6329774a5935e311ee5a385050b03d5"
        ],
        [
            "left; apply in_or_app; left; apply (in_map (dlift n)); auto.",
            "VernacExtend",
            "b46c70ee47ac1a447628305678b72f3249d1b41b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint dconj (n : nat) (b: bool) {struct n} : vect n -> vect n := match n return (vect n -> vect n) with | 0%nat => fun a => if b then (- a)%f else a | S n1 => fun l1 => let (l2, l3) := l1 in (dconj n1 b l2, dconj n1 (negb b) l3) end.",
            "VernacFixpoint",
            "94b950fcfe7d78545957579abd0b0631ee1a44d7"
        ],
        [
            "Notation \"x ^d_ b\" := (dconj _ b x) (at level 29, left associativity).",
            "VernacNotation",
            "670815c8bb94974b6d31362be2273082b4723d53"
        ],
        [
            "Notation \"x ^d_'t\" := (dconj _ true x) (at level 29, left associativity).",
            "VernacNotation",
            "f75bd5f633e059ed3b1adb7a79799014b9ae2221"
        ],
        [
            "Notation \"x ^d_'f\" := (dconj _ false x) (at level 29, left associativity).",
            "VernacNotation",
            "b2294250108ab352259876f366d877f353f5d0a6"
        ],
        [
            "Lemma dconj0 n b : 0 ^d_ b = 0 :> vect n.",
            "VernacStartTheoremProof",
            "2fa3ba8eddff099e22244e2def1a26bb5580c60e"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; Krm0.",
            "VernacExtend",
            "b60ca58859de5c8f5a9ca42518d3649bd8e06e72"
        ],
        [
            "intros []; rewrite !IH; auto.",
            "VernacExtend",
            "f9c3110bb1e89cebb49ccb0a53f6aabbf35e2127"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite dconj0: GRm0.",
            "VernacExtend",
            "d8e5d18e40860c14f34d746aebc9aab1970ea3b1"
        ],
        [
            "Lemma dconj_all n b : E ^d_ b = (if b then (-(1)) .* E else E) :> vect n.",
            "VernacStartTheoremProof",
            "f038670aa0f406bf7fc44ef469b38af86b7803a8"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros []; Krm1.",
            "VernacExtend",
            "f399ffff3a2c03d9704d990c257cf96f91657c33"
        ],
        [
            "intros []; rewrite !IH; Grm0.",
            "VernacExtend",
            "702a1aa58c0eed053006f92f15e9a307bb33c854"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_scal n b k (x: vect n) : (k .* x)^d_ b = k .* x ^d_ b.",
            "VernacStartTheoremProof",
            "541d29e982a760e88b95c686e2d852401f233869"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl;auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; auto; intros; rewrite opp_multKr; auto.",
            "VernacExtend",
            "c633efa354028507f57ac3a61e6e75730f2697a4"
        ],
        [
            "intros b; destruct x; Vfold n; rewrite !IH; auto.",
            "VernacExtend",
            "3035a10d9ff338f9279a629ae240bc1a44e76510"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_add n b (x y: vect n) : (x + y) ^d_ b = x ^d_ b + y ^d_ b.",
            "VernacStartTheoremProof",
            "fd932243c049ed5a0d6f41307212d8ee11caa85e"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros b; case b; auto; rewrite opp_addK; auto.",
            "VernacExtend",
            "1cc0a76dfb53788e042c4f07c670e451d21a69a1"
        ],
        [
            "intros b; destruct x; destruct y; simpl in IH; rewrite IH, IH; auto.",
            "VernacExtend",
            "9a4a05337f1ed3da2ffe2c6f9391709879024702"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_invo n b (v: vect n) : v ^d_ b ^d_ b = v.",
            "VernacStartTheoremProof",
            "e0cf67254062f2b59384d96fc4527282bd212801"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; auto; rewrite opp_oppK; auto.",
            "VernacExtend",
            "9e9ec5d34ac010b0ec8fbf7f96676d020090150a"
        ],
        [
            "intros b; destruct v; rewrite !IH; auto.",
            "VernacExtend",
            "79168efd7a2e59fdd220aa2ea0f5ff0ced42d947"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_neg n b (v: vect n) : v ^d_ (negb b) = (-(1)) .* (v ^d_ b).",
            "VernacStartTheoremProof",
            "2441f61c4a177ce1e39301254326584792d1480f"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH];simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; simpl; Krm1.",
            "VernacExtend",
            "06b00da05b707cbb126cec41a09c70dbd0ed8344"
        ],
        [
            "intros b; destruct v; Vfold n.",
            "VernacExtend",
            "cdeea14397c113997740f02dec2651dceda0e69c"
        ],
        [
            "rewrite negb_involutive, !IH, <-scal_multE; Krm1; rewrite scalE1; auto.",
            "VernacExtend",
            "18814a6e76b5559aaeb399c6faf4e66a17e01fca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconjt n (v: vect n) : v ^d_'t = (-(1)) .* (v ^d_'f).",
            "VernacStartTheoremProof",
            "75d6c72fadedeed25867dc23a5dd1da1f3314703"
        ],
        [
            "rewrite <-dconj_neg; auto.",
            "VernacExtend",
            "4fc95d6af245bf627aeb858cf3091449c54704c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconjf_hom n k (M: vect n) : hom n k M -> M ^d_'f = (- (1))^(n + k) .* M.",
            "VernacStartTheoremProof",
            "29e6a4ffcd9ed06c06c074011f2cf7756898692a"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH];simpl; auto; try Vfold n.",
            "VernacExtend",
            "7efaff752baab79f444e82b84f10b85f0d7d9670"
        ],
        [
            "intros [|k] H; simpl; Krm1.",
            "VernacExtend",
            "72b86465ff5179faf1cc8f0943d0adb3bca61159"
        ],
        [
            "generalize H; case eqK_spec; intros; subst; Grm0; discriminate.",
            "VernacExtend",
            "4b85b4b871e42e4e2899dea6956c82ff78dcf9ab"
        ],
        [
            "intros [| k]; destruct M; rewrite andbP; intros (HM1, HM2); rewrite dconjt; simpl; Vfold n; Krm1.",
            "VernacExtend",
            "58e6daf8a19044a12e066207cca0be93a36a42ad"
        ],
        [
            "generalize HM1; case eq0_spec; try (intros; discriminate); auto.",
            "VernacExtend",
            "f410750ffeb8f9c3b706bf61b3ffa9979e7b28a7"
        ],
        [
            "intros H1; rewrite H1, (IH _ _ HM2); simpl; Vfold n; Krm1.",
            "VernacExtend",
            "fcaf3fe8a4f7d6dc586c474d28b06fd817bec417"
        ],
        [
            "rewrite dconj0, Plus.plus_0_r, <-scal_multE; Krm1; Vrm0.",
            "VernacExtend",
            "db7fd877670cc883833bff80659ade71fd801291"
        ],
        [
            "rewrite IH with (1 := HM1),IH with (1 := HM2); auto.",
            "VernacExtend",
            "dc5b055d870560170b9d6abe86ef8265d417147a"
        ],
        [
            "rewrite <-scal_multE, <-plus_n_Sm; simpl expK; Krm1.",
            "VernacExtend",
            "9c89b12212ab0d9e9911b0e70cea491188c6d13c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconjt_hom n k (M: vect n) : hom n k M -> M ^d_'t = (- (1))^(n + k).+1 .* M.",
            "VernacStartTheoremProof",
            "b5cc72a2392c17461cd161418e8963c420efe2b5"
        ],
        [
            "intros H1; rewrite dconjt, (dconjf_hom _ _ _ H1).",
            "VernacExtend",
            "755ee61386809df0a2d929e041d69b40b2d6c246"
        ],
        [
            "rewrite <-scal_multE; auto.",
            "VernacExtend",
            "8dee18ce230227296c8b83b16b05c23a1d570a78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_swap n b1 b2 (x: vect n) : x ^d_ b2 ^d_ b1 = x ^d_ b1 ^d_ b2.",
            "VernacStartTheoremProof",
            "3d00370079c73169e7ac4f0206268533aeb59b4a"
        ],
        [
            "generalize b1 b2; clear b1 b2.",
            "VernacExtend",
            "88027411ae3ef28fcfa0650b614a7877f57c1cc9"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [] []; auto.",
            "VernacExtend",
            "a2d9d18d82086827bcc63ee7b6c5a82ab4889f2b"
        ],
        [
            "intros b1 b2; destruct x.",
            "VernacExtend",
            "7feb91fbe33b5231fc3f247923507b288061b386"
        ],
        [
            "rewrite (IH _ b2), (IH _ (negb b1)); auto.",
            "VernacExtend",
            "2e3f8e791b56b339eb6c2a4d17cf6431011699d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_conj_swap n b1 b2 (x: vect n) : (x ^_ b2) ^d_ b1 = x ^d_ b1 ^_ b2.",
            "VernacStartTheoremProof",
            "f00e3f3080f5ce2f33f956457efbd4db5925bb6b"
        ],
        [
            "generalize b1 b2; clear b1 b2.",
            "VernacExtend",
            "88027411ae3ef28fcfa0650b614a7877f57c1cc9"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros [] []; auto.",
            "VernacExtend",
            "a2d9d18d82086827bcc63ee7b6c5a82ab4889f2b"
        ],
        [
            "intros b1 b2; destruct x.",
            "VernacExtend",
            "7feb91fbe33b5231fc3f247923507b288061b386"
        ],
        [
            "rewrite (IH _ b1), (IH _ (negb b1)); auto.",
            "VernacExtend",
            "6e70185f7f9442fc5346e875d0a0969b0c7bd126"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_conj n b (x: vect n) : (x ^_ b) ^d_ b = (-(1))^n .* x.",
            "VernacStartTheoremProof",
            "03455f3bcfcf5e9670f98ecab446442d88e21339"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; Krm1.",
            "VernacExtend",
            "f399ffff3a2c03d9704d990c257cf96f91657c33"
        ],
        [
            "intros []; destruct x; simpl; Vfold n; rewrite conjt, dconjt, dconj_scal, !IH, <-!scal_multE; auto.",
            "VernacExtend",
            "28c343677a41eaf31993d66976ce62dc117aa5dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_hom n b k (x: vect n) : hom n k x -> hom n k (x ^d_ b).",
            "VernacStartTheoremProof",
            "8922b8b757b513d2a325000a3c73a9aec105a1ca"
        ],
        [
            "generalize b k; clear b k.",
            "VernacExtend",
            "4efa106ee9807e78293dcda639d7278b02fda912"
        ],
        [
            "induction n as [| n IH]; simpl.",
            "VernacExtend",
            "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
        ],
        [
            "intros [|] [|k]; auto.",
            "VernacExtend",
            "aadc30ced7744766ea503ec1c78edc98157515a2"
        ],
        [
            "case eqK_spec; auto; intros HH HH1; try discriminate.",
            "VernacExtend",
            "70261e64d6157d748f36571ca413cadf5ba6afe7"
        ],
        [
            "rewrite HH, oppK0, eqKI; auto.",
            "VernacExtend",
            "f255b7316e050842ad17712da6832c89ea37e8f3"
        ],
        [
            "intros b [|k]; destruct x; rewrite !andbP; intros (H1, H2); split; auto.",
            "VernacExtend",
            "4a74c0b0eb146a7169f7cde1775455aca5cf895e"
        ],
        [
            "generalize H1; case eq0_spec; intros Hx1 HH; try discriminate.",
            "VernacExtend",
            "65b65c297fb4d405d71336285a0ddf1cc47101e6"
        ],
        [
            "rewrite Hx1, dconj0, eq0I; auto.",
            "VernacExtend",
            "106bdab49442ec0dbf05ae203e8ff6a6269eae4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dconj_hom.",
            "VernacHints",
            "455466de99d2aef7899ec9cc89e79d28bdc4f8fa"
        ],
        [
            "Lemma dconjf_joinl n (x y: vect n) : (x \u2228 y) ^d_'f = x ^d_'f \u2228 y ^_'f.",
            "VernacStartTheoremProof",
            "d082791cca2e3fb88fa2e4f53d577ac6cad349ba"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "destruct x; destruct y; simpl; Vfold n.",
            "VernacExtend",
            "96b5f6c92db7f7142a28e3bdbdebddb453acecc6"
        ],
        [
            "rewrite !dconjt, IH.",
            "VernacExtend",
            "dcd837484a27f95decd7fa789b5ed5a062a9382e"
        ],
        [
            "rewrite dconj_add, !IH, !conjt, join_scall.",
            "VernacExtend",
            "aceb1c3291a13dbc0953f05603b8f5e06229fd85"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "apply f_equal2 with (f := addE (vn_eparams n)); auto.",
            "VernacExtend",
            "2671e9ffc991101e359db7b0b4188f1fb52621c4"
        ],
        [
            "rewrite conj_scal, !join_scall, !join_scalr, <-scal_multE; Krm1.",
            "VernacExtend",
            "cbad184ca41e18e968d87527697ae0dbb07df31d"
        ],
        [
            "rewrite dconj_conj_swap, scalE1; auto.",
            "VernacExtend",
            "eb0d0267ead12b7b5ae8a075974e329d53ffb151"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconjf_joinr n (x y: vect n) : (x \u2228 y) ^d_'f = x ^_'f \u2228 y ^d_'f.",
            "VernacStartTheoremProof",
            "b996b5ad5c761915fe30002036b0d5c9301f1b9a"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "simpl vect.",
            "VernacExtend",
            "e78019abba5ddf7a11569f02c9f3fff5ceb1a84b"
        ],
        [
            "destruct x; destruct y; simpl; Vfold n.",
            "VernacExtend",
            "96b5f6c92db7f7142a28e3bdbdebddb453acecc6"
        ],
        [
            "rewrite !dconjt, IH.",
            "VernacExtend",
            "dcd837484a27f95decd7fa789b5ed5a062a9382e"
        ],
        [
            "rewrite dconj_add, !IH, !conjt.",
            "VernacExtend",
            "c4b0065397daecb0307e015258c2b5716fb7a49c"
        ],
        [
            "rewrite !join_scall, !join_scalr, <-scal_multE; Krm1.",
            "VernacExtend",
            "7bedd8314866bdd26e05af771218d2ffab23ac9b"
        ],
        [
            "rewrite scalE1; auto.",
            "VernacExtend",
            "9a3c36c1cf219db115984967e7e814298c7116fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_dual n b (x: vect n): '@(x ^_ b) = '@x ^d_ b.",
            "VernacStartTheoremProof",
            "618a55ff1fa731c12bad42bc5743349a5a13dc76"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "simpl; intros b; destruct x; rewrite !IH.",
            "VernacExtend",
            "f6fe228620f584c4c9690d17ff845e38226b8631"
        ],
        [
            "rewrite dconj_swap; auto.",
            "VernacExtend",
            "b1b473720e6aa57296cec38b79244c9e7173b811"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_dual n b (x: vect n) : '@(x ^d_ b) = '@x ^_ b.",
            "VernacStartTheoremProof",
            "f6db05ecd1d2e0821fe596b92930db0a2033f983"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "simpl; intros []; destruct x; rewrite !IH, !conj_dual, IH, dconj_conj_swap; auto.",
            "VernacExtend",
            "c26a8dd01396bcfc0cc8f6694d8c4bca2196c4b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dualk n k : '@([k]) = k .* E :> vect n.",
            "VernacStartTheoremProof",
            "b2de9fd34968a1f0b64aa1312940104637941949"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "rewrite multK1r; auto.",
            "VernacExtend",
            "ddcd31ad3ffd2585cd03973ebad819543275235c"
        ],
        [
            "Vfold n.",
            "VernacExtend",
            "1069bda287f933d6fc9c51bd34434bf13a87bc77"
        ],
        [
            "rewrite dual0, scalE0r; auto.",
            "VernacExtend",
            "8a86cd1f80e7442e2e123be639f4e9d58c543a01"
        ],
        [
            "rewrite conj_dual, IH, dconj_scal, dconj_all; auto.",
            "VernacExtend",
            "b0209e8f591eca3a965a944014d9e9d2b21b3b96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dconst n (x: vect n) := 'C['@x].",
            "VernacDefinition",
            "16de0cb624405bcb46d81ed70b1c93eac1a57cd0"
        ],
        [
            "Notation \"'dC[ x ]\" := (dconst _ x).",
            "VernacNotation",
            "b8f72eb0663bf1228371864f68ec6c87a65d262d"
        ],
        [
            "Lemma dconjk n b k : [k] ^d_ b = (if b then [(-(1))^n.+1 * k] else [(-(1))^n * k]:vect n).",
            "VernacStartTheoremProof",
            "0246a990d4e0d56828c2715e3c0cec3e0583e0fe"
        ],
        [
            "case b; auto.",
            "VernacExtend",
            "175dbdf4bf0d5db0b31517a4878e3baa74cf0ba0"
        ],
        [
            "rewrite dconjt_hom with (k := 0%nat), Plus.plus_0_r, scalk; auto.",
            "VernacExtend",
            "bd53ba4d1a9eee5740017843ddbe8768ca9ab026"
        ],
        [
            "rewrite dconjf_hom with (k := 0%nat), Plus.plus_0_r, scalk; auto.",
            "VernacExtend",
            "0fbdb02044e4d14fd2b3b7534dc07ba20e7bffe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_const n b (x: vect n) : 'C[x ^d_ b] = (if b then ((-(1))^n.+1 * 'C[x])%f else ((-(1))^n * 'C[x])%f).",
            "VernacStartTheoremProof",
            "123f8e15d8695a662b963df124c41edc223bd726"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros []; Krm1.",
            "VernacExtend",
            "f399ffff3a2c03d9704d990c257cf96f91657c33"
        ],
        [
            "intros []; destruct x; simpl negb; rewrite IH; Krm1.",
            "VernacExtend",
            "7914478224159691dbd083ae48f8afe1b99fa89e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conj_dconst n b (x: vect n) : 'dC[x ^_ b] = (if b then ((-(1))^n.+1 * 'dC[x])%f else ((-(1))^n * 'dC[x])%f).",
            "VernacStartTheoremProof",
            "506bd74414799451119b735ddc035d22459efb5e"
        ],
        [
            "unfold dconst; rewrite conj_dual, dconj_const; auto.",
            "VernacExtend",
            "6b811ec992cb205edb339ea039efcea5971e37b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconj_dconst n b (x: vect n) : 'dC[x ^d_ b] = (if b then (- 'dC[x])%f else 'dC[x]).",
            "VernacStartTheoremProof",
            "0f16976885ad400cb75b3f0b84345d93f7589860"
        ],
        [
            "unfold dconst; rewrite dconj_dual, conj_const; auto.",
            "VernacExtend",
            "6b8d101a230dc7f1920e0c87edce1583669e15d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projn n (x : vect n) : proj n n x = 'dC[x] :: nil.",
            "VernacStartTheoremProof",
            "0faa97131fe34df192fae5f0d8a11f9f7a3d4203"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "destruct x; rewrite IH, proj_lt; auto.",
            "VernacExtend",
            "f6e4d1dc4ce3b27e274fa6f51b1d844701678aed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconst_all n : 'dC[(E: vect n)] = 1%f .",
            "VernacStartTheoremProof",
            "bc0d9c8c930a889c7bd6e41b52bc10ded94e434a"
        ],
        [
            "unfold dconst; rewrite dual_all, constk; auto.",
            "VernacExtend",
            "3f7a08cf3b43238fa7d8aee7887c651986ffc9a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconst0 n : 'dC[0:vect n] = 0%f.",
            "VernacStartTheoremProof",
            "4baa47b6fc825c36167030ac0bc5b81ad8895c8a"
        ],
        [
            "unfold dconst; rewrite dual0, const0; auto.",
            "VernacExtend",
            "9df3795885f0a9e02cae00442c3b1aae6e4eb146"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite dconst0: GRm0.",
            "VernacExtend",
            "091a37f4d234aed842dfb2254189f4eaae1d9534"
        ],
        [
            "Lemma dconst_scal n k (x: vect n) : 'dC[k .* x] = (k * 'dC[x])%f.",
            "VernacStartTheoremProof",
            "11d8bcb495eed139f93ccca9e24e562acdb12b56"
        ],
        [
            "unfold dconst; rewrite dual_scal, const_scal; auto.",
            "VernacExtend",
            "9203d57473034d1ef9b9915aa7b671d9e4ed8ec9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconst_add n (x1 x2 : vect n) : 'dC[x1 + x2] = ('dC[x1] + 'dC[x2])%f.",
            "VernacStartTheoremProof",
            "ec939d0f03de0d78ff09b641ba116bb2fe2b35fa"
        ],
        [
            "unfold dconst; rewrite dual_add, const_add; auto.",
            "VernacExtend",
            "d0b0bf258df9b6e63c4240175fde6bcec21d06b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconst_hom n k x : hom n k x -> n <> k -> 'dC[x] = 0%f.",
            "VernacStartTheoremProof",
            "21d932f66f0fe46d9c2f098b31253e2f69606dc4"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "case (Lt.le_or_lt n k); intros H3.",
            "VernacExtend",
            "66c60f7ef0be34365289276aab8eaf8bb8ee960d"
        ],
        [
            "case (Lt.le_lt_or_eq _ _ H3); intros H4; auto.",
            "VernacExtend",
            "716472e6d80a4da655d5cfd65beedd70470abfc3"
        ],
        [
            "rewrite hom_lt with (2 := H1), dconst0; auto.",
            "VernacExtend",
            "1f35927258335b203c1ce57aea97c8bf3b5cd5cd"
        ],
        [
            "case H2; auto.",
            "VernacExtend",
            "877506702eca45f9d52e339649864010a8b18e82"
        ],
        [
            "unfold dconst; apply const_hom with (k := (n - k)%nat).",
            "VernacExtend",
            "88839747b914fae0b6828a3a4d2e9b3741f1ce70"
        ],
        [
            "apply dual_hom; auto.",
            "VernacExtend",
            "0818c58e97efb145055a095848230be569118a19"
        ],
        [
            "apply Plus.plus_lt_reg_l with k.",
            "VernacExtend",
            "742b84a12e9ceb1497b55a94b62ca950ebd1faf0"
        ],
        [
            "rewrite Plus.plus_0_r, <-Minus.le_plus_minus; auto with arith.",
            "VernacExtend",
            "087692336a0430e8f2767610979cd947325b6fef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homn_all n x : hom n n x -> x = 'dC[x] .* E.",
            "VernacStartTheoremProof",
            "b2fac8b7b8e340bb809c1cb5816749030a1be46d"
        ],
        [
            "unfold dconst.",
            "VernacExtend",
            "5d808f7fde6689fd12c52df27736e75c3d455c2b"
        ],
        [
            "induction n as [|n IH]; simpl; try Vfold n; Krm1.",
            "VernacExtend",
            "95100957927516d23fa3c43337014599b7796b94"
        ],
        [
            "destruct x; rewrite andbP; intros (Hx1,Hx2).",
            "VernacExtend",
            "9e06274e32d02b1f63a5015dcce2824e7b87d3a4"
        ],
        [
            "rewrite <-(IH _ Hx1); Grm0.",
            "VernacExtend",
            "356fe645cdc405233e99120768c81f607ad5f8fe"
        ],
        [
            "rewrite hom_lt with (2 := Hx2); Grm0.",
            "VernacExtend",
            "98f30bce1f4fcc86835f70fabb09192d1e9e2fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const_dual n (x: vect n) : 'C['@x] = 'dC[x].",
            "VernacStartTheoremProof",
            "5533d27075ece95e2b14a613928c388b56c0738b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconst_dual n (x: vect n) : 'dC['@x] = 'C[x].",
            "VernacStartTheoremProof",
            "a7fe20bc90461c71f3fec0a567a84692d324e137"
        ],
        [
            "unfold dconst; induction n as [|n IH]; simpl; auto; Vfold n.",
            "VernacExtend",
            "586eb8a5a31897be77dac60f67c68ecd8155d768"
        ],
        [
            "destruct x; rewrite IH, conj_const; auto.",
            "VernacExtend",
            "7aedccef388ca1881477063a9e87f5d7d430de76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint meet (n : nat) : vect n -> vect n -> vect n := match n return (vect n -> vect n -> vect n) with | 0%nat => fun a b => (a * b)%f | S n1 => fun v1 v2 => let (x1, y1) := v1 in let (x2, y2) := v2 in (meet n1 x1 x2, meet n1 x1 y2 + meet n1 y1 (x2 ^d_'f)) end.",
            "VernacFixpoint",
            "7e4e2eba28af1b1080fd3d0cd5ccef257f2fc3cd"
        ],
        [
            "Notation \"x '\u2227' y\" := (meet _ x y) (at level 45, left associativity).",
            "VernacNotation",
            "c7e1a1a07da25422daaa8513fafffe1364f826d3"
        ],
        [
            "Lemma meet0l n (x: vect n) : 0 \u2227 x = 0.",
            "VernacStartTheoremProof",
            "bc21a56b56305ba06f27f0ba33fd6c59a8c29523"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; Krm0.",
            "VernacExtend",
            "833aac3f1d7a6d64b6c136c14b612277f63eee4a"
        ],
        [
            "destruct x; rewrite !IH; Vrm0.",
            "VernacExtend",
            "88f8117d0ebc0b0a6510bc5306bf302ab99c7ff5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite meet0l: GRm0.",
            "VernacExtend",
            "376ba7c387c14fcc97feb0d5a98df0f8814ee74d"
        ],
        [
            "Lemma meet0r n (x: vect n) : x \u2227 0 = 0.",
            "VernacStartTheoremProof",
            "2744f45be59cd9602aa8b70f76f23e422dd500b8"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; Krm0.",
            "VernacExtend",
            "833aac3f1d7a6d64b6c136c14b612277f63eee4a"
        ],
        [
            "destruct x; rewrite dconj0, !IH; Vrm0.",
            "VernacExtend",
            "5ba9a1c877e7e0118d2b06d315cd486310096a1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite meet0r: GRm0.",
            "VernacExtend",
            "9d5856705802b549361ecd0a5522d0bae7452881"
        ],
        [
            "Lemma meet1l n (x: vect n) : 1 \u2227 x = ['C['@x]].",
            "VernacStartTheoremProof",
            "964c2af954e284d8cd81ae6951e746e8146a82be"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; Krm1.",
            "VernacExtend",
            "95100957927516d23fa3c43337014599b7796b94"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "rewrite !meet0l, addE0l, IH,dconj_dual, conj_const; auto.",
            "VernacExtend",
            "0a1b00cf75fe14a17b7c11ad7d3f1cedf0f93184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet1r n (x: vect n) : x \u2227 1 = ['C['@x]].",
            "VernacStartTheoremProof",
            "f1fd59f18bc5bc66a3890f7f7210faed07bdb3d8"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n; Krm1.",
            "VernacExtend",
            "95100957927516d23fa3c43337014599b7796b94"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "rewrite !meet0r, dconj0, IH, meet0r, addE0r; auto.",
            "VernacExtend",
            "e2a6c642554a69f6e233d262c3756509135c0124"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_scall n k (x y : vect n) : k .* x \u2227 y = k .* (x \u2227 y).",
            "VernacStartTheoremProof",
            "75e60a3d9f27c6a1377e9e9a2d16f9c94be25f13"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n;auto.",
            "VernacExtend",
            "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
        ],
        [
            "rewrite multK_assoc; auto.",
            "VernacExtend",
            "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "rewrite scal_addEr, !IH; auto.",
            "VernacExtend",
            "90c854169a12a7d176eb47ce6d6b8f26e9776cca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_scalr n k (x y : vect n) : x \u2227 k .* y = k .* (x \u2227 y).",
            "VernacStartTheoremProof",
            "c846eb9b236515647aa91bb1132b87b75a81f1f0"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n;auto.",
            "VernacExtend",
            "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
        ],
        [
            "rewrite <-!multK_assoc, (multK_com _ Hp x); auto.",
            "VernacExtend",
            "d232e3d771fabc9b81de39169a01fcac4be6493f"
        ],
        [
            "destruct x; destruct y.",
            "VernacExtend",
            "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
        ],
        [
            "rewrite dconj_scal, scal_addEr, !IH; auto.",
            "VernacExtend",
            "e385f45642c53706b84b29e7299ea44d8e1ede25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet0 (v1 v2 : vect 0) : v1 \u2227 v2 = (v1 * v2)%f.",
            "VernacStartTheoremProof",
            "aa5da9381c8b9c311c9a785f42fe61bd6d436374"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meetS n (x1 x2 y1 y2 : vect n) : ((x1,y1): vect n.+1) \u2227 (x2,y2) = (x1 \u2227 x2, x1 \u2227 y2 + y1 \u2227 (x2 ^d_'f)).",
            "VernacStartTheoremProof",
            "eec2a9cdf2d96665515ab48b9eef624fc8f8d981"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_meet n (v1 v2 : vect n) : '@(v1 \u2227 v2) = '@v1 \u2228 '@v2.",
            "VernacStartTheoremProof",
            "52573e13e5078c7e25f581f519000d2b058fc0b9"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "destruct v1; destruct v2; rewrite meetS.",
            "VernacExtend",
            "74e289a1d8bf2374d55f2b437ea77c0225c8c755"
        ],
        [
            "simpl; Vfold n.",
            "VernacExtend",
            "b9f9449f47b4fc50318b4052e4f924187e72923e"
        ],
        [
            "rewrite IH, conj_add, dual_add.",
            "VernacExtend",
            "444e9ccd3c77ba64959f1431c68657b64cfdcb26"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite addE_com; auto; apply f_equal2 with (f := @addE (vn_eparams n)); auto.",
            "VernacExtend",
            "06453d1887481785317702a50216334a167454fb"
        ],
        [
            "rewrite !conj_dual, IH, dconj_dual, dconjf_joinl, conj_invo; auto.",
            "VernacExtend",
            "a56d88160a66620b0b1290e6fdc0a7a35a09af77"
        ],
        [
            "rewrite !conj_dual, IH, dconjf_joinr; auto.",
            "VernacExtend",
            "258e5e069d8343c50b7d5d9849844fef85df337e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjf_meetl n (x y : vect n) : (x \u2227 y) ^_'f = x ^_'f \u2227 y ^d_'f.",
            "VernacStartTheoremProof",
            "a2d31a49fe901ee80823c55ec88bf284549e79af"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "destruct x; destruct y; rewrite !meetS.",
            "VernacExtend",
            "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
        ],
        [
            "simpl dconj; simpl conj; Vfold n; rewrite !conjt, meetS, !IH, meet_scall.",
            "VernacExtend",
            "d3a59d55e8a5516865fb21e45f43da1e2699210c"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite conj_add, !IH.",
            "VernacExtend",
            "42ad4a732e4b60afd828f5209aa8f7a01b661650"
        ],
        [
            "apply f_equal2 with (f := addE (vn_eparams n)); auto.",
            "VernacExtend",
            "2671e9ffc991101e359db7b0b4188f1fb52621c4"
        ],
        [
            "rewrite dconjt, meet_scalr, meet_scall, <-scal_multE; Krm1.",
            "VernacExtend",
            "7b4ef71a3ff85cb8b719e0df2a87c8caa5718ea6"
        ],
        [
            "rewrite scalE1; auto.",
            "VernacExtend",
            "9a3c36c1cf219db115984967e7e814298c7116fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjf_meetr n (x y : vect n) : (x \u2227 y) ^_'f = x ^d_'f \u2227 y ^_'f.",
            "VernacStartTheoremProof",
            "dd92cfb338a57c2d35bb40bd67af521164847b23"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "destruct x; destruct y; rewrite !meetS.",
            "VernacExtend",
            "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
        ],
        [
            "simpl dconj; simpl conj; Vfold n; rewrite !conjt, meetS, !IH, meet_scalr.",
            "VernacExtend",
            "ae84cffc523406b37dd3cb1481371aeb6f77d173"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite conj_add, !IH; apply f_equal2 with (f := addE (vn_eparams n)); auto.",
            "VernacExtend",
            "7f12e918f6467864ad041ce44996753c8d4fde66"
        ],
        [
            "rewrite dconjt, dconj_scal, meet_scalr, meet_scall, <-scal_multE; Krm1.",
            "VernacExtend",
            "147a70da4c740305d728988735c492d9a17e173c"
        ],
        [
            "rewrite scalE1, dconj_conj_swap; auto.",
            "VernacExtend",
            "19ac07c0f7ee732b90a6ded6a6e24f1e5e0d04ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconjf_meet n (x y : vect n) : (x \u2227 y) ^d_'f = x ^d_'f \u2227 y ^d_'f.",
            "VernacStartTheoremProof",
            "42165d8e3894435ed3af65524cba07557d566200"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "destruct x; destruct y; rewrite !meetS.",
            "VernacExtend",
            "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
        ],
        [
            "simpl dconj; rewrite meetS, !IH, !dconj_invo; Vfold n.",
            "VernacExtend",
            "4f740f21e541898dfa0e34f241cf062362ffd9c5"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite !dconjt, dconj_add, meet_scall, meet_scalr, <-scal_addEr; auto.",
            "VernacExtend",
            "f99c208f51e31e54e47429c68fe33c1d93b98146"
        ],
        [
            "rewrite !IH, dconj_invo; auto.",
            "VernacExtend",
            "3ae656344c3f84677139bde383070d8dc5b4e476"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconjf_meetd n (x y : vect n) : (x \u2227 y) ^d_'f = x ^_'f \u2227 y ^_'f.",
            "VernacStartTheoremProof",
            "fc4da59606acdd58cc20d7e2d02d2ded96d44406"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "destruct x; destruct y; rewrite !meetS.",
            "VernacExtend",
            "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
        ],
        [
            "simpl conj; simpl dconj; rewrite meetS, !conjt, !dconjt; Vfold n.",
            "VernacExtend",
            "5bc0a37128bf198f525390e780154d2dd5142b33"
        ],
        [
            "rewrite IH, !meet_scall, !meet_scalr, <-!scal_multE, dconj_add; Krm1.",
            "VernacExtend",
            "586c16ffd69ab9a51b07d61b6c160b933a5f1237"
        ],
        [
            "rewrite scalE1; auto; apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "731ee4a94b24f7d0b8111fad58d4c5affc81d272"
        ],
        [
            "rewrite !IH, !dconj_scal, meet_scalr, dconj_conj_swap, scal_addEr; auto.",
            "VernacExtend",
            "bf523ff9912ea88b4d88145e7649741631c1e19e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dconst_meet n (x y: vect n) : 'dC[x \u2227 y] = ('dC[x] * 'dC[y])%f.",
            "VernacStartTheoremProof",
            "f4307821e574b0d4b523d8c18188d1280e08e436"
        ],
        [
            "unfold dconst; rewrite dual_meet, const_join.",
            "VernacExtend",
            "99281542f6bd97b5a51e3f17422928b786c177e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_join n (v1 v2: vect n) : '@(v1 \u2228 v2) = '@v1 \u2227 '@v2.",
            "VernacStartTheoremProof",
            "bbb6168b96b61dd8a39195435bcf0076096e38f9"
        ],
        [
            "induction n as [| n IH]; auto.",
            "VernacExtend",
            "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
        ],
        [
            "simpl; Vfold n.",
            "VernacExtend",
            "b9f9449f47b4fc50318b4052e4f924187e72923e"
        ],
        [
            "destruct v1; destruct v2.",
            "VernacExtend",
            "985f8d5af0336e82f1bc794ef25b2f46cee70efe"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); auto.",
            "VernacExtend",
            "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
        ],
        [
            "rewrite conjf_join, IH; auto.",
            "VernacExtend",
            "de8e73191c3cdebe0043b3a41d525386fd5917b3"
        ],
        [
            "rewrite dual_add, addE_com; auto; apply f_equal2 with (f := @addE (vn_eparams n)); auto.",
            "VernacExtend",
            "66610d8b0675f9b069d7768716dd48ed9e49a6b0"
        ],
        [
            "rewrite conj_dual, dconj_invo, IH; auto.",
            "VernacExtend",
            "c3d47d349591654fba6fb705ea7593d3404eb374"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_addl n (x y z : vect n) : (x + y) \u2227 z = x \u2227 z + y \u2227 z.",
            "VernacStartTheoremProof",
            "2eeaef91413f8f62631f1a93d457db66b4989f3f"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros; apply (add_multKl p); auto.",
            "VernacExtend",
            "16a3ee9c8d5ca34753da210a623965b3ff2ad31d"
        ],
        [
            "destruct x; destruct y; destruct z.",
            "VernacExtend",
            "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
            "VernacExtend",
            "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
        ],
        [
            "rewrite !addE_assoc; auto.",
            "VernacExtend",
            "ce214b315400588aac8118eb43bbb788a8f0634d"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite IH, addE_com, !addE_assoc; auto.",
            "VernacExtend",
            "78c88575968029f80232b3d262c4dd90bc74a7bb"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_addr n (x y z : vect n) : z \u2227 (x + y) = z \u2227 x + z \u2227 y.",
            "VernacStartTheoremProof",
            "74b2a867374bfe8acf484652a75e7be9f71a0837"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros; apply (add_multKr p); auto.",
            "VernacExtend",
            "bef705bbd270bdcf25983a12b6d3c79b4ca27ab7"
        ],
        [
            "destruct x; destruct y; destruct z.",
            "VernacExtend",
            "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
        ],
        [
            "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
            "VernacExtend",
            "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
        ],
        [
            "rewrite !addE_assoc; auto.",
            "VernacExtend",
            "ce214b315400588aac8118eb43bbb788a8f0634d"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite dconj_add, IH, addE_com,!addE_assoc; auto.",
            "VernacExtend",
            "6a11cf54988978a2fe476bba9ff2925079eeb7e9"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_assoc n (x y z : vect n) : x \u2227 y \u2227 z = x \u2227 (y \u2227 z).",
            "VernacStartTheoremProof",
            "3ed3e03ee433fcaa959321718402f4646b605017"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros; rewrite multK_assoc; auto.",
            "VernacExtend",
            "1c9477fd292a3395806bb87199240da5b8207c51"
        ],
        [
            "destruct x; destruct y; destruct z.",
            "VernacExtend",
            "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "rewrite meet_addr, meet_addl, !addE_assoc; auto.",
            "VernacExtend",
            "66eae82152dfdaa0f5e5233fc53e35e1b9fef152"
        ],
        [
            "repeat apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "ee3c55b5a98a56c0479089302cbf5110b4ac9b87"
        ],
        [
            "rewrite dconjf_meet, IH; auto.",
            "VernacExtend",
            "e681a6c33c636ecc828d143642be9ec40c4ed516"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_alll n (x: vect n) : all n \u2227 x = x.",
            "VernacStartTheoremProof",
            "3dd1d56d019a5771735fb1f67233e84f1f6a95b7"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros; rewrite multK1l; auto.",
            "VernacExtend",
            "7434bf7311bb09aefd9963ad7929b821da2ad921"
        ],
        [
            "destruct x; rewrite !IH, meet0l, addE0r; auto.",
            "VernacExtend",
            "4b078e0293d9bde1e00ac1952724647965b11aa9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_allr n (x: vect n) : x \u2227 all n = x.",
            "VernacStartTheoremProof",
            "5ce5cda70ec6d180191f93837280a021e82503dc"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "rewrite multK1r; auto.",
            "VernacExtend",
            "ddcd31ad3ffd2585cd03973ebad819543275235c"
        ],
        [
            "destruct x; rewrite !IH, meet0r, addE0l, dconj_all, IH; auto.",
            "VernacExtend",
            "99f21bd1282788d638a55ab406e23a910809e88d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_small n k1 k2 (x y : vect n) : hom n k1 x -> hom n k2 y -> k1 + k2 < n -> x \u2227 y = 0.",
            "VernacStartTheoremProof",
            "b4ccebff716df739616e1dcff2c90666bc25220c"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros k1 k2 _ _ HH; contradict HH; auto with arith.",
            "VernacExtend",
            "1327cae2cbad714706f64a574f509ead241c8164"
        ],
        [
            "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2].",
            "VernacExtend",
            "1106d8d09437cd934df24a190b491cedd15afd99"
        ],
        [
            "case eq0_spec; auto; intros HH Hx2; subst; try discriminate.",
            "VernacExtend",
            "9b7321425f01e71a3056f59fb5e0a62efb77c87a"
        ],
        [
            "case eq0_spec; auto; intros HH Hy; subst; try discriminate.",
            "VernacExtend",
            "e6df2e9e8e97735a1594382fb05de139b7ef8e4f"
        ],
        [
            "Grm0.",
            "VernacExtend",
            "127f0350e8bc133d6ca53aee0391eb5539ccf44c"
        ],
        [
            "case eq0_spec; auto; intros HH Hx2; subst; try discriminate.",
            "VernacExtend",
            "9b7321425f01e71a3056f59fb5e0a62efb77c87a"
        ],
        [
            "rewrite andbP; intros (Hy1,Hy2) H; rewrite (IH x2 _ 0%nat k2); Grm0.",
            "VernacExtend",
            "fdb97c3eba14c1df220ec7d23b4155cf947a02ae"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite andbP; intros (Hx1,Hx2).",
            "VernacExtend",
            "590c0ec7507980da4f735be3b46bc51d734a1d91"
        ],
        [
            "case eq0_spec; auto; intros HH Hy2 H; subst; try discriminate.",
            "VernacExtend",
            "b8c6517e5c2c0214919dad4038fb5e3bd561459d"
        ],
        [
            "rewrite (IH x1 y2 k1 0%nat); Grm0; auto with arith.",
            "VernacExtend",
            "e798086ee531fd5a5626badcdaed161e3521a132"
        ],
        [
            "rewrite !andbP; intros (Hx1,Hx2) (Hy1,H2) H.",
            "VernacExtend",
            "ab9bed1a7f341ae3808ad2f23bfa312ff6d05f4f"
        ],
        [
            "rewrite (IH _ _ k1 k2), (IH _ _ k1 k2.+1), (IH _ _ k1.+1 k2); Grm0; auto with arith.",
            "VernacExtend",
            "117147066c5066591e83a30c44181a91925558d7"
        ],
        [
            "rewrite <-plus_n_Sm in H; auto with arith.",
            "VernacExtend",
            "7c1ec7869775ac78b9f4f0ff0ef7e6ea234be348"
        ],
        [
            "apply Lt.lt_trans with (k1 + k2).+1; auto with arith.",
            "VernacExtend",
            "3222bbc27dc1bb1f68d4476c443f6d2ecb6ef827"
        ],
        [
            "rewrite <-plus_n_Sm in H; auto with arith.",
            "VernacExtend",
            "7c1ec7869775ac78b9f4f0ff0ef7e6ea234be348"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_hom n k1 k2 (x y : vect n) : hom n k1 x -> hom n k2 y -> hom n (k1 + k2 - n) (x \u2227 y).",
            "VernacStartTheoremProof",
            "76c8df48482f85bae7f26a7ce69e53615ed10527"
        ],
        [
            "intros Hx Hy.",
            "VernacExtend",
            "048d4ee6ed853437593cf0c1892455f6dd453a3e"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros Hk1.",
            "VernacExtend",
            "33fca4ddf4e1dee0c04e393a76aa03f98a67c2bf"
        ],
        [
            "2: rewrite hom_lt with (1 := Hk1)(2:= Hx); Grm0; apply homk0.",
            "VernacExtend",
            "51f96d0c4e22743be58a86cb26d6d23cd3dec699"
        ],
        [
            "case (Lt.le_or_lt k2 n); intros Hk2.",
            "VernacExtend",
            "54a412bb0c841bafff34f0fa2be8f79c4cf960b7"
        ],
        [
            "2: rewrite hom_lt with (1 := Hk2)(2:= Hy); Grm0; apply homk0.",
            "VernacExtend",
            "80c052af072d76ffa9651341f318f03e1f2aa351"
        ],
        [
            "case (Lt.le_or_lt n (k1 + k2)); intros Hk1k2.",
            "VernacExtend",
            "85294fbde2d8379ceb2f9363924c090d56743761"
        ],
        [
            "2: rewrite meet_small with (1 := Hx)(2:= Hy); Grm0.",
            "VernacExtend",
            "53759d3fdf14a451a826363692ae8a1be4469167"
        ],
        [
            "replace (k1 + k2 - n)%nat with (n - ((n - k1) + (n - k2)))%nat; auto.",
            "VernacExtend",
            "d3a3e1b2c69a2be9d6033af790f8875c6e722425"
        ],
        [
            "rewrite dual_invoE with (1 := Hx), dual_invoE with (1 := Hy).",
            "VernacExtend",
            "6d07ac42cdd583682fe23a6cb0a37e4ac40eb2af"
        ],
        [
            "rewrite meet_scall, meet_scalr, <-dual_join; auto 10.",
            "VernacExtend",
            "eb573fac14255fad17d5213ba716428267be3422"
        ],
        [
            "rewrite Minus.minus_plus_simpl_l_reverse with (p := (k1 + k2)%nat).",
            "VernacExtend",
            "b8ea2fca9b88fe408ba4652e4591a9e581383be6"
        ],
        [
            "rewrite (Plus.plus_comm k1), <-!Plus.plus_assoc, (Plus.plus_assoc k1).",
            "VernacExtend",
            "fd0b9ed2a9b9f74ee0963d19da3ed2d035780fa6"
        ],
        [
            "rewrite <-Minus.le_plus_minus, !Plus.plus_assoc; auto.",
            "VernacExtend",
            "bfe0ecc265830d36831499c110abd15f46bfb1e7"
        ],
        [
            "rewrite !(Plus.plus_comm k2), <-!Plus.plus_assoc, <-Minus.le_plus_minus; auto.",
            "VernacExtend",
            "dd7595a511d36386f93db22f4467b23b2afe85c7"
        ],
        [
            "rewrite Plus.plus_assoc, (Plus.plus_comm (k1 + k2)); auto.",
            "VernacExtend",
            "19d96a02026388d419d6739b8eefd029dc1556f5"
        ],
        [
            "rewrite <-Minus.minus_plus_simpl_l_reverse; auto.",
            "VernacExtend",
            "852872520826687cf738ea1218c6a56feb184fe2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve meet_hom.",
            "VernacHints",
            "77c2a9e25c34106c8e878d5ae07d2a2727692c4f"
        ],
        [
            "Lemma meetkl0 n k1 k2 x : hom n k1 x -> n <> k1 -> [k2] \u2227 x = 0.",
            "VernacStartTheoremProof",
            "58e3bf9c2b4d39b69343f4cf225187f6f998ef4e"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros H3.",
            "VernacExtend",
            "d861b637a63abd75d3118143052d5ee0cd7c8975"
        ],
        [
            "case (Lt.le_lt_or_eq _ _ H3); intros H4.",
            "VernacExtend",
            "71200c371d19072f86dba8bf99d4cc160d0ce1f6"
        ],
        [
            "apply meet_small with (k1 := 0%nat) (k2 := k1); auto; apply hom0K.",
            "VernacExtend",
            "1b37f45f0715190a3c85dcae6356f2df2a15a59d"
        ],
        [
            "case H2; auto.",
            "VernacExtend",
            "877506702eca45f9d52e339649864010a8b18e82"
        ],
        [
            "rewrite hom_lt with (2 := H1); auto; rewrite meet0r; auto.",
            "VernacExtend",
            "04b9c2eaea4c7c002a2ccc02c4e8ad6fab52e5cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meetkl n k x : hom n n x -> [k] \u2227 x = [k * 'dC[x]].",
            "VernacStartTheoremProof",
            "04f5266207e69f9f7427dfc7ab523327e69ccc83"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "pattern x at 1; rewrite (homn_all _ _ H); auto.",
            "VernacExtend",
            "f81b39ccdd5d8b1a83a51a1bbe23c3dd64602d35"
        ],
        [
            "rewrite meet_scalr, meet_allr, scalk, multK_com; auto.",
            "VernacExtend",
            "8a48323d2b8431fddbae6ba43dd5bd175e17483f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meetkr0 n k1 k2 x : hom n k1 x -> n <> k1 -> x \u2227 [k2] = 0.",
            "VernacStartTheoremProof",
            "f0a47966479caf8c5b654e26f2c0d47fa7be7be8"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros H3.",
            "VernacExtend",
            "d861b637a63abd75d3118143052d5ee0cd7c8975"
        ],
        [
            "case (Lt.le_lt_or_eq _ _ H3); intros H4.",
            "VernacExtend",
            "71200c371d19072f86dba8bf99d4cc160d0ce1f6"
        ],
        [
            "apply meet_small with (k1 := k1) (k2 := 0%nat); auto.",
            "VernacExtend",
            "527f4182f5c1c0514e4ad929e813f79356351b5f"
        ],
        [
            "rewrite Plus.plus_0_r; auto.",
            "VernacExtend",
            "357cc3734d67e52ec474d78339493e0cb1c8c350"
        ],
        [
            "case H2; auto.",
            "VernacExtend",
            "877506702eca45f9d52e339649864010a8b18e82"
        ],
        [
            "rewrite hom_lt with (2 := H1); auto; rewrite meet0l; auto.",
            "VernacExtend",
            "0a2d68c7cb1b66078233977b0b8527cdd2980b1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meetkr n k x : hom n n x -> x \u2227 [k] = ['dC[x] * k].",
            "VernacStartTheoremProof",
            "6a12e779067194bc0e7ef2effb4710c0d54f503f"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "pattern x at 1; rewrite (homn_all _ _ H); auto.",
            "VernacExtend",
            "f81b39ccdd5d8b1a83a51a1bbe23c3dd64602d35"
        ],
        [
            "rewrite meet_scall, meet_alll, scalk; auto.",
            "VernacExtend",
            "d6c7849b9588b90c8885abf0407d22997377d7a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_hom_com n k1 k2 (x y : vect n) : hom n k1 x -> hom n k2 y -> y \u2227 x = ((- (1))^((n + k1) * (n + k2))).* (x \u2227 y).",
            "VernacStartTheoremProof",
            "28844d6f51a78ba578e605236cd64e353c62d430"
        ],
        [
            "intros Hx Hy.",
            "VernacExtend",
            "048d4ee6ed853437593cf0c1892455f6dd453a3e"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros Hk1.",
            "VernacExtend",
            "33fca4ddf4e1dee0c04e393a76aa03f98a67c2bf"
        ],
        [
            "2: rewrite hom_lt with (2 := Hx), meet0l, meet0r; Grm0.",
            "VernacExtend",
            "15a1c64915419af0899571e1e49f505b9cbe6626"
        ],
        [
            "case (Lt.le_or_lt k2 n); intros Hk2.",
            "VernacExtend",
            "54a412bb0c841bafff34f0fa2be8f79c4cf960b7"
        ],
        [
            "2: rewrite hom_lt with (2 := Hy), meet0r, meet0l; Grm0.",
            "VernacExtend",
            "c439d8aaa41c09718378ae108792aa282854f380"
        ],
        [
            "assert (Hdx := dual_hom _ _ _ Hx).",
            "VernacExtend",
            "c6f69eab2a26c6b796481f7c66d7eed0b6690e14"
        ],
        [
            "assert (Hdy := dual_hom _ _ _ Hy).",
            "VernacExtend",
            "757bdea1b5536225df70d5181fb60bee7571eed1"
        ],
        [
            "assert (Hxy := meet_hom _ _ _ _ _ Hx Hy).",
            "VernacExtend",
            "c10a9ee9789e637ef46b87147242d738dfe8b1a5"
        ],
        [
            "assert (Hyx := meet_hom _ _ _ _ _ Hy Hx).",
            "VernacExtend",
            "5283f5711305a519f7a7ec9dd4314185afa15385"
        ],
        [
            "rewrite (dual_invoE _ _ _ Hyx), dual_meet, (join_hom_com _ _ _ _ _ Hdx Hdy), dual_scal, <-dual_meet, (dual_invo _ _ _ Hxy).",
            "VernacExtend",
            "3864c90f3dd5af4d40fb78ad516a0014fb139d29"
        ],
        [
            "rewrite <-!scal_multE, <-!expK_add, (Plus.plus_comm k2); auto.",
            "VernacExtend",
            "bf488bb60edd8ee4de02173f57011fccb88e1f97"
        ],
        [
            "replace ((k1 + k2 - n) * n.+1 + (n - k1) * (n - k2) + (k1 + k2 - n) * n.+1)%nat with (2 * ((k1 + k2 - n) * n.+1) + (n - k1) * (n - k2))%nat by ring.",
            "VernacExtend",
            "d68a44a7561384835dbd09e07737498c94c44f86"
        ],
        [
            "replace ((n + k1) * (n + k2)) with (2 * (2 * k1 *k2 + k1 * (n - k2) + k2 * (n - k1)) + (n - k1) * (n - k2))%nat.",
            "VernacExtend",
            "0bfd371e2dd28faf1ff1ead8a9e821e458c312c8"
        ],
        [
            "rewrite !expKm1_2E; auto.",
            "VernacExtend",
            "98707be5a2d6009dabdd675914748d88db717e33"
        ],
        [
            "pattern n at 5; rewrite (Minus.le_plus_minus _ _ Hk1).",
            "VernacExtend",
            "3584264aef9baca85f22e657db72718e5fc532f8"
        ],
        [
            "pattern n at 6; rewrite (Minus.le_plus_minus _ _ Hk2); ring.",
            "VernacExtend",
            "4bc6eb89d306ee35ccc4f18756a434b082b00d0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_hom_id n k x : hom n k x -> odd (n - k) -> x \u2227 x = 0.",
            "VernacStartTheoremProof",
            "1647e50752fc0d3a60c79791ab50ba68cb56df0f"
        ],
        [
            "intros Hx Ho.",
            "VernacExtend",
            "285c70e65ecc7f93b88153a201261674ec0cb41a"
        ],
        [
            "assert (Hdx := dual_hom _ _ _ Hx).",
            "VernacExtend",
            "c6f69eab2a26c6b796481f7c66d7eed0b6690e14"
        ],
        [
            "assert (Hxx := meet_hom _ _ _ _ _ Hx Hx).",
            "VernacExtend",
            "3c40bc0017fc09a70b1dc4681003fca1231d3009"
        ],
        [
            "rewrite (dual_invoE _ _ _ Hxx), dual_meet.",
            "VernacExtend",
            "28e770f074c2b1f1c191e3e2a9b68a5df80183d1"
        ],
        [
            "rewrite (join_hom_id _ _ _ Hdx), dual0; Vrm0.",
            "VernacExtend",
            "07649ffee2a633cb452a7f899da481421998a806"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dual_join_compl n k v : In v (base n k) -> (v \u2228 '@v = all n) \\/ v \u2228 '@v = (-(1)) .* all n.",
            "VernacStartTheoremProof",
            "7626967a572e4365226edf03c5773d95c0b42304"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [|n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [|k]; simpl.",
            "VernacExtend",
            "5440dd5e6955102043623f92220524c65f311e4e"
        ],
        [
            "intros [[]|[]]; rewrite multK1r; auto.",
            "VernacExtend",
            "d15a3813a10558490b02e76254998a6daec88a21"
        ],
        [
            "intros [].",
            "VernacExtend",
            "59f2b3a8927be334e806cdfe123cfb0fe48aa347"
        ],
        [
            "intros [|k]; destruct v as [x y]; simpl dual.",
            "VernacExtend",
            "9691dca5acfee00bd98ebcd49a27cfff4681fb5b"
        ],
        [
            "rewrite in_map_iff; intros [z (H1z,H2z)].",
            "VernacExtend",
            "828a26616525c1c2e5897ebbffb4b50763b51f60"
        ],
        [
            "injection H1z; intros; subst; rewrite dual0; Grm0.",
            "VernacExtend",
            "e3af52874962e0f59699a37012564538ffdf5cbf"
        ],
        [
            "rewrite (conjf_hom n 0), scalE1; simpl; Vfold n; Grm0.",
            "VernacExtend",
            "f485962fe24738f95778a6381c0919c5feb52358"
        ],
        [
            "case (IH y 0%nat); auto; intros Hu; rewrite Hu; auto.",
            "VernacExtend",
            "8cdfcd4ee3d4cb7077588ccab240de1835c1d268"
        ],
        [
            "rewrite <-cblk_homk_equiv; constructor; auto.",
            "VernacExtend",
            "a018da7c091482c77630c45db272cdc621c552cf"
        ],
        [
            "intros H1; case (in_app_or _ _ _ H1); rewrite in_map_iff; intros [z (H1z,H2z)].",
            "VernacExtend",
            "d57638c9156929433bc593a1a6f4ab2ad0f68b0a"
        ],
        [
            "injection H1z; intros; subst.",
            "VernacExtend",
            "5ad01e119927e8325990e123ead8e6698e5799bb"
        ],
        [
            "rewrite conj0, dual0; Grm0.",
            "VernacExtend",
            "135f4b7bdc088ff0c207b202d837e11c37764b92"
        ],
        [
            "case (IH x k); auto; intros Hx; rewrite Hx; auto.",
            "VernacExtend",
            "d9590a3e81adff70d380e4afcc2a5a69322e18e6"
        ],
        [
            "injection H1z; intros; subst; rewrite dual0; Grm0.",
            "VernacExtend",
            "e3af52874962e0f59699a37012564538ffdf5cbf"
        ],
        [
            "rewrite conjf_hom with (k := S k).",
            "VernacExtend",
            "20c4e38815942905bf3597e845ed9162acf6bb59"
        ],
        [
            "case (even_or_odd k.+1); intros He.",
            "VernacExtend",
            "b6283a2bdda86c88da6c23b673e40445da5e275a"
        ],
        [
            "rewrite expKm1_even, scalE1; auto.",
            "VernacExtend",
            "492f88e4b52ac2974fe146bff744fa7a71109de7"
        ],
        [
            "case (IH y k.+1); auto.",
            "VernacExtend",
            "3f102f7bbefc163a58eb43eae6352955a6a2bc48"
        ],
        [
            "intros Hy; rewrite Hy; auto.",
            "VernacExtend",
            "442da6b554f3b4d9c5a7e04e1b46fd0772bdf651"
        ],
        [
            "intros H; rewrite H; auto.",
            "VernacExtend",
            "2fe06e89fcbef6bdc71989f6d8a2180ee2ee021b"
        ],
        [
            "rewrite expKm1_odd, join_scall; auto.",
            "VernacExtend",
            "df35d6b17d9af91f0e270e9e4f9e09a3f47d8308"
        ],
        [
            "rewrite dual_scal, join_scalr, <-scal_multE; Krm1; rewrite scalE1; auto.",
            "VernacExtend",
            "cb3aaa93a3495867c27b988c64a514c5ccb70e92"
        ],
        [
            "case (IH y k.+1); auto; intros Hy; rewrite Hy; auto.",
            "VernacExtend",
            "eba37ac84bbe3b7217da8f121e937cf23d5d0f17"
        ],
        [
            "rewrite <-cblk_homk_equiv; constructor; auto.",
            "VernacExtend",
            "a018da7c091482c77630c45db272cdc621c552cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join01E n x y : hom n 1 x -> hom n 1 y -> x \u2228 y = 0 -> exists k, x = k .* y \\/ y = k .* x.",
            "VernacStartTheoremProof",
            "1a316723f9c00237b1e5713f077cbe86f086df16"
        ],
        [
            "intros H1 H2 H3.",
            "VernacExtend",
            "fd3cb4671c7327eb202c6d7e666fadc2620058aa"
        ],
        [
            "case (eqE_spec _ (fn n) y 0); intros Hy; subst.",
            "VernacExtend",
            "f30f6d3abf9ffd87bb20bac5a31666a541e3587c"
        ],
        [
            "exists 0%f; Grm0.",
            "VernacExtend",
            "ccd12ea556609dcf2a1d29b24bd57d5ebf40ac08"
        ],
        [
            "rewrite <-cbl1_hom1_equiv in H1.",
            "VernacExtend",
            "da9dbfbd937a8ed8d33729c5d73101e53fc011b3"
        ],
        [
            "rewrite (decomp_cbl n y (y::nil) x H1 (hom1_decomposable _ _ H2) Hy) in H3.",
            "VernacExtend",
            "7e58628088196a1e6524894d8945ca80f74a3aa4"
        ],
        [
            "case cbl1 with (2 := H3); auto.",
            "VernacExtend",
            "bf1964b8ee2b95e83ad58624efd23f0e91df3a77"
        ],
        [
            "intros k Hk; exists k; auto.",
            "VernacExtend",
            "9642d50ce088e043cfef7568ee931d856e486491"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homn_1 n k1 k2 x y : hom n k1 x -> hom n k2 y -> n = (k1 + k2)%nat -> x \u2227 y = 'dC[x \u2228 y] .* 1.",
            "VernacStartTheoremProof",
            "7a11e1b9e126bb3fe286eb0cfd6b30c79590cd16"
        ],
        [
            "unfold dconst; generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "bcbcfe76711a3a3bd59bc5afbda1ac1daf9cb929"
        ],
        [
            "induction n as [|n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [|k1] [|k2]; Krm1.",
            "VernacExtend",
            "c700089c3a24fb4004a5cc338ee6166383680513"
        ],
        [
            "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2].",
            "VernacExtend",
            "1106d8d09437cd934df24a190b491cedd15afd99"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "case eq0_spec; intros HH Hx2; subst; try discriminate.",
            "VernacExtend",
            "2a68c22558840583e5d5f9452763221127728ed8"
        ],
        [
            "rewrite !meet0l; Grm0.",
            "VernacExtend",
            "39a7d082723c9a6136edc36d994aabbc93c5e439"
        ],
        [
            "rewrite andbP; intros (Hy1,Hy2) HH; injection HH; intros HH1; subst.",
            "VernacExtend",
            "d239ee76a0520df294c05362c8552c750cdee132"
        ],
        [
            "rewrite dconjf_hom with (1 := Hy1), conjf_hom with (1 := Hx2).",
            "VernacExtend",
            "fdc2704c0552eca498b95a7ccaa2f6dee95b04a1"
        ],
        [
            "rewrite expK_add, expK2m1; simpl expK; auto.",
            "VernacExtend",
            "3ae1742ddf1163e2a7584baf72e7b78f6bd385ae"
        ],
        [
            "rewrite !scalE1, (IH _ _ 0%nat k2); auto.",
            "VernacExtend",
            "79a2742418969e635dd5ecfb824f6c3f40fc2038"
        ],
        [
            "rewrite andbP; intros (Hx1,Hx2).",
            "VernacExtend",
            "590c0ec7507980da4f735be3b46bc51d734a1d91"
        ],
        [
            "case eq0_spec; intros HH Hy2; subst; try discriminate.",
            "VernacExtend",
            "a0ebefa39d174d1d728f647c14e511e5589f2b37"
        ],
        [
            "intros HH; injection HH; intros HH1; subst.",
            "VernacExtend",
            "042509d4dea1a6856e9c564ea0ef6e56af464cd0"
        ],
        [
            "rewrite dconj0, !meet0r, IH with (1 := Hx1) (2 := Hy2); Grm0.",
            "VernacExtend",
            "680ea6fc306730bbdfc5ac51c6920456c9696ba2"
        ],
        [
            "rewrite !andbP; intros (Hx1,Hx2)( Hy1,Hy2) Hn; Grm0.",
            "VernacExtend",
            "56a0bf085a7b0a4849f477b8d7fd9b8d08559fce"
        ],
        [
            "injection Hn; rewrite <-plus_n_Sm; clear Hn; intros Hn; subst.",
            "VernacExtend",
            "c024917c27ffb02afcb5dfff1be8573e0cfe9ea2"
        ],
        [
            "rewrite meet_small with (1:= Hx1) (2 := Hy1); auto with arith.",
            "VernacExtend",
            "5421cc5cc34036ffb8e8da7256e72e4fd0094aa6"
        ],
        [
            "rewrite (IH _ _ k1 k2.+1), (IH _ _ k1.+1 k2), dual_add, const_add, scal_addEl; auto.",
            "VernacExtend",
            "316be6a94b2b612b97cf6c39a9d12e413d786028"
        ],
        [
            "rewrite dconjf_hom with (1 := Hy1), conjf_hom with (1 := Hx2).",
            "VernacExtend",
            "fdc2704c0552eca498b95a7ccaa2f6dee95b04a1"
        ],
        [
            "replace ((k1 + k2).+1 + k2)%nat with (2 * k2 + k1.+1)%nat by ring.",
            "VernacExtend",
            "1c5d993df664af75df4ca30f2c81e15a47d5950e"
        ],
        [
            "rewrite expKm1_2E, join_scall, join_scalr; auto.",
            "VernacExtend",
            "f388f602d7bf1fdf3da99ad175bec643013bb5fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join2_meetE n k1 k2 (x y : vect n) : hom n k1 x -> hom n k2 y -> n <= k1 + k2 -> x \u2228 y = (x \u2227 y) \u2228 E.",
            "VernacStartTheoremProof",
            "c45b64bccf94e7be4d3f206652320642b4103b62"
        ],
        [
            "intros Hx Hy Hn.",
            "VernacExtend",
            "bbd81a48db7e3ec71527253aee9d9c14a837015a"
        ],
        [
            "case (Lt.le_lt_or_eq _ _ Hn); clear Hn; intros Hn.",
            "VernacExtend",
            "d81f9ec4bb0495613f881b6ed7ec78d0bfc4e2d4"
        ],
        [
            "rewrite (hom_lt n (k1 + k2) (x \u2228 y)); auto.",
            "VernacExtend",
            "3afbfb720fd176ea09ffede44c5d541cbfdbae4c"
        ],
        [
            "rewrite join_allhr with (k := (k1 + k2 - n)%nat); auto.",
            "VernacExtend",
            "cd524b5468a92f6aefd9e0c74d3790f18b44a9e6"
        ],
        [
            "apply Plus.plus_lt_reg_l with n.",
            "VernacExtend",
            "b027ef7e90c22fd0eafa8b980975dd72c51d695c"
        ],
        [
            "rewrite Plus.plus_0_r, <-Minus.le_plus_minus; auto with arith.",
            "VernacExtend",
            "087692336a0430e8f2767610979cd947325b6fef"
        ],
        [
            "rewrite homn_1 with (3 := Hn), join_scall, join1l, <-homn_all; subst; auto.",
            "VernacExtend",
            "610e892cbdda7fa43025c0e4df30d71d7ee2a8b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_meet_swap n k1 k2 k3 (x y z : vect n) : hom n k1 x -> hom n k2 y -> hom n k3 z -> (k1 + k2 + k3 = n)%nat -> x \u2227 (y \u2228 z) = (x \u2228 y) \u2227 z.",
            "VernacStartTheoremProof",
            "cbc136263e2a72463cbb622cc1669b7cb24da51e"
        ],
        [
            "intros Hx Hy Hz Hn.",
            "VernacExtend",
            "a4ba90aa766b49de828e85790c4dc034abc26eb8"
        ],
        [
            "rewrite homn_1 with (k1 := k1) (k2 := (k2 + k3)%nat); auto.",
            "VernacExtend",
            "1aa66ddb8f875b8f3a3e80c2dbcc6a3b44ed7006"
        ],
        [
            "rewrite homn_1 with (k1 := (k1 + k2)%nat) (k2 := k3); auto.",
            "VernacExtend",
            "1dc4e0683b37a7118ed5222b6531e64fe4d3dcb6"
        ],
        [
            "rewrite join_assoc; auto.",
            "VernacExtend",
            "f2fea3c39c10d7c5718821237dec550104b8713b"
        ],
        [
            "rewrite Plus.plus_assoc; auto.",
            "VernacExtend",
            "ab73e6ae41c6113030d37d28a8a8d310a8c75e9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join3_meetE n k1 k2 (x y z : vect n) : hom n n x -> hom n k1 y -> hom n k2 z -> n <= k1 + k2 -> x \u2227 (y \u2228 z) = (x \u2227 y \u2227 z) \u2228 E.",
            "VernacStartTheoremProof",
            "9e32351d9f11159246be82c1e880ed67250e946c"
        ],
        [
            "intros Hx Hy Hz Hn.",
            "VernacExtend",
            "a4ba90aa766b49de828e85790c4dc034abc26eb8"
        ],
        [
            "rewrite homn_all with (1 := Hx), !meet_scall, !meet_alll; auto.",
            "VernacExtend",
            "4396514a67b0a962a157219747dc5390f7a9370b"
        ],
        [
            "rewrite join_scall, join2_meetE with (k1 := k1) (k2 := k2); auto.",
            "VernacExtend",
            "b7e514af4fdcefd77f67d151a9642222bc924e55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma splitlr n k1 k2 x y z : hom n k1 x -> hom n 1 y -> hom n k2 z -> (x \u2228 y) \u2227 z = (-(1))^(n + (k1 + k2).+1) .* (x \u2227 (y \u2228 z)) + (x \u2227 z) \u2228 y.",
            "VernacStartTheoremProof",
            "d6a0917aa651a2b7ebb1942541771086cdcaa7f3"
        ],
        [
            "generalize k1 k2; clear k1 k2.",
            "VernacExtend",
            "698f074f80699999303d1a5549a930667add5b86"
        ],
        [
            "induction n as [| n IH]; simpl; try Vfold n.",
            "VernacExtend",
            "886b259976b37da79c05969176c83e99ce97bb57"
        ],
        [
            "intros [|k1] [|k2]; case eqK_spec; intros; subst; Krm0; try discriminate.",
            "VernacExtend",
            "1e5df6efa3b4a4283d20b0cdef694d868588da5c"
        ],
        [
            "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2]; destruct z as [z1 z2].",
            "VernacExtend",
            "bd0603b11edecfbef1475bb5b434bed8af4fccdf"
        ],
        [
            "case eq0_spec; intros tmp Hx2; subst; try discriminate.",
            "VernacExtend",
            "548041aa3b78e070f0dd9a46061ce06f3b3f2ae2"
        ],
        [
            "rewrite andbP; intros (Hy1, Hy2).",
            "VernacExtend",
            "51e8887d6de46b53a27097ffeba2a4b169d408a8"
        ],
        [
            "case eq0_spec; intros tmp Hz2; subst; try discriminate.",
            "VernacExtend",
            "25e0782fb66f86a17ee99a7d087bb5551a1cdfff"
        ],
        [
            "Grm0.",
            "VernacExtend",
            "127f0350e8bc133d6ca53aee0391eb5539ccf44c"
        ],
        [
            "rewrite (hom0E _ _ Hx2), (hom0E _ _ Hy1), (hom0E _ _ Hz2), conjk; auto.",
            "VernacExtend",
            "f64e6e0bef58f317be0a477619a7fb0d3081fd61"
        ],
        [
            "rewrite dconjf_joinl, conjk, dconjk, !joinkr.",
            "VernacExtend",
            "60b6d436fd224774f4e641162f7b01361dbda374"
        ],
        [
            "case (Peano_dec.dec_eq_nat n 0); intros Hn; subst; auto.",
            "VernacExtend",
            "c24f40bd7fa40dabfc64c615dee32fd7183a81d0"
        ],
        [
            "simpl; Krm1; rewrite !multK_assoc, multK_com, !multK_assoc; auto.",
            "VernacExtend",
            "107515d462b888f45f3356ca4408ef890704a2bb"
        ],
        [
            "rewrite !meet_small with (k1 := 0%nat) (k2 := 0%nat); Grm0; try apply scal_hom; try apply hom0K; try (destruct n; auto with arith; fail).",
            "VernacExtend",
            "2d4e4029df16f146edd9acbee3c991b78b918766"
        ],
        [
            "case eq0_spec; intros tmp Hx2; subst; try discriminate.",
            "VernacExtend",
            "548041aa3b78e070f0dd9a46061ce06f3b3f2ae2"
        ],
        [
            "rewrite !andbP; intros (Hy1, Hy2) (Hz1, Hz2).",
            "VernacExtend",
            "bc347462c68cc70ba96b424d086c2cdc888757e8"
        ],
        [
            "rewrite (IH x2 y2 (z1^d_'f) 0%nat k2); auto.",
            "VernacExtend",
            "9fa46940c6815a481b7e2516da06331e3ba19e74"
        ],
        [
            "rewrite (hom0E _ _ Hx2), (hom0E _ _ Hy1), conjk; auto.",
            "VernacExtend",
            "573c0eac91b088302285534946a8403ae22860f2"
        ],
        [
            "Grm0.",
            "VernacExtend",
            "127f0350e8bc133d6ca53aee0391eb5539ccf44c"
        ],
        [
            "rewrite !joink, joinkr.",
            "VernacExtend",
            "2aa8f0043547180fe3ab11357f97c20821a9a5f9"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "rewrite conjf_meetl, dconj_invo, conjk, <-meet_scall, scalk, multK_com; auto.",
            "VernacExtend",
            "60f8e305c919ab2b02206061f65d5c99d5c274c3"
        ],
        [
            "rewrite <-addE_assoc; auto.",
            "VernacExtend",
            "5ebbb9fa6f41e91692302eb40aeb1925934fdaba"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "simpl minus.",
            "VernacExtend",
            "11a89d7124a246240a56b6051428b4d104562673"
        ],
        [
            "rewrite dconj_add, meet_addr, scal_addEr; auto.",
            "VernacExtend",
            "16ee96f4d481c028186f4348e75e66826886efc2"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite dconjf_joinr, conjk, joinkl, meet_scalr, <-meet_scall, scalk; auto.",
            "VernacExtend",
            "581dbca9a558a54c2fb6aedfb12da1eb84830bf5"
        ],
        [
            "rewrite multK_com, dconjf_hom with (1 := Hz2), meet_scalr, <-scal_multE; auto.",
            "VernacExtend",
            "6c55c9bcb9063f64c9d421e916b7255338c2ed42"
        ],
        [
            "rewrite multK_assoc, <-expK_add; auto.",
            "VernacExtend",
            "185bbbb18ae8934d12f01b2e7b512bc048c5c891"
        ],
        [
            "replace (n + (0 + k2.+1).+1 + (n + k2.+1))%nat with (2 * (n + k2.+1) + 1)%nat by ring.",
            "VernacExtend",
            "58c0293db2306792eeb90094f5e94074cd44ec79"
        ],
        [
            "rewrite expKm1_2E; simpl expK; Krm1; rewrite scalE1; auto.",
            "VernacExtend",
            "7688d62460cbc492308ca5a2de5c3f917db37ca4"
        ],
        [
            "rewrite dconjf_joinr, conj_invo; auto.",
            "VernacExtend",
            "3b0eebd488350a1791dccc7eea0387ebab1e7c1d"
        ],
        [
            "rewrite <-!plus_n_Sm; simpl expK; Krm1.",
            "VernacExtend",
            "c4310d36697c5f8d0979148983c7989b935a4d0a"
        ],
        [
            "case eq0_spec; intros tmp; subst; try (intros; discriminate).",
            "VernacExtend",
            "f90a43699a2d2911e289cd8159272b778d919215"
        ],
        [
            "rewrite andbP, andbP; intros (Hx1, Hx2) (Hy1, Hy2) Hz2.",
            "VernacExtend",
            "c871db65720be915cbf3fb161c89e993056900c3"
        ],
        [
            "rewrite dconj0, !meet0r; Grm0.",
            "VernacExtend",
            "226f423001c7fab80a82be57f3bfef0859ead524"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "rewrite (hom0E _ _ Hy1), (hom0E _ _ Hz2), !joinkr; auto.",
            "VernacExtend",
            "1341517aef890f18566065043a1517cf48dd7769"
        ],
        [
            "rewrite scalk, multK_com, <-scalk, meet_scalr; auto.",
            "VernacExtend",
            "752d27100a22afca3e3b6a1c5b4fe125f4d818fa"
        ],
        [
            "rewrite <-meet_scalr, scalk, multK_com with (x := 'C[z2]); auto.",
            "VernacExtend",
            "0fc181480d66da59996a70c41a43c40abad34c54"
        ],
        [
            "rewrite conjf_meetr, conjk, <-meet_scalr with (k := 'C[y1]), scalk; auto.",
            "VernacExtend",
            "401eeeb09733571b8c4edcf9d73c2803fa57e9de"
        ],
        [
            "rewrite dconjf_hom with (1 := Hx1), meet_scall, <-scal_addEl; auto.",
            "VernacExtend",
            "9835c133405fd23c1af9803dfedeb3ed1b81c7fc"
        ],
        [
            "replace (n + (k1.+1 + 0).+1)%nat with ((n + k1).+2)%nat by ring.",
            "VernacExtend",
            "7d920e5b348bf448aa3e41c153c4dcdca2653e8d"
        ],
        [
            "simpl expK; Krm1; rewrite oppKl; Grm0.",
            "VernacExtend",
            "dab11b0fe613d7e26a1d0cb75d47aaa384802be6"
        ],
        [
            "rewrite meet_addl, IH with (1 := Hx1) (3 := Hz2); auto.",
            "VernacExtend",
            "d4d9c885cf8bb8bc64b091cd3251aab8cf330aa4"
        ],
        [
            "rewrite addE_com, <-!addE_assoc; auto.",
            "VernacExtend",
            "20cfb053e282770ce93c5a198f057f14266377a9"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite addE_com, scal_addEr; auto.",
            "VernacExtend",
            "503272dc88bc108b0a4e6d2ee0cbb713acd1a88a"
        ],
        [
            "rewrite (hom0E _ _ Hy1), (hom0E _ _ Hz2), !joinkr; auto.",
            "VernacExtend",
            "1341517aef890f18566065043a1517cf48dd7769"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "replace (n + (k1.+1 + 0).+1)%nat with ((n + (k1 + 0).+1).+1)%nat by ring.",
            "VernacExtend",
            "161cbef6958cac5286b72595ab03ca84596bb12a"
        ],
        [
            "simpl expK; Krm1.",
            "VernacExtend",
            "3db6545a15310ea464d0d273d74370cae841df14"
        ],
        [
            "rewrite conjf_hom with (1 := Hx2), !meet_scall, dconj_scal, dconjk, <-!meet_scalr, !scalk.",
            "VernacExtend",
            "3c62d639553003b1e8db3f272b793c1bb9175fde"
        ],
        [
            "rewrite multK_com with (x := 'C[y1]), multK_com with (x := 'C[z2]), <-!multK_assoc; auto.",
            "VernacExtend",
            "89182a49c5f66aafb31af03076bda3edb062be5e"
        ],
        [
            "rewrite multK_assoc, multK_com with (x := 'C[z2]), <- multK_assoc; auto.",
            "VernacExtend",
            "2427f26755aeb92983dc8663a3143ed7440ec06e"
        ],
        [
            "Krm1; rewrite !opp_multKl, <-expKS, <-expK_add; auto.",
            "VernacExtend",
            "fd35efa3a655619957570022591e324ccc87f974"
        ],
        [
            "replace ((n + (k1.+1 + 0).+1).+1 + n)%nat with (2 * (n.+1) + k1.+1)%nat by ring.",
            "VernacExtend",
            "ea2585344748fa7ac6ed77e8a22183fbb0f49861"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "rewrite !andbP; intros (Hx1,Hx2) (Hy1,Hy2) (Hz1,Hz2).",
            "VernacExtend",
            "70c2d61572bb47be60d6b4c20eff461867999494"
        ],
        [
            "apply f_equal2 with (f := @pair _ _).",
            "VernacExtend",
            "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
        ],
        [
            "rewrite meet_addl.",
            "VernacExtend",
            "a84132556971d9f0aa4441933b771192093e34fb"
        ],
        [
            "rewrite IH with (1 := Hx1) (3 := Hz1); auto.",
            "VernacExtend",
            "dcfd3714402f9c82b075da3e4457b3cd8082acf9"
        ],
        [
            "rewrite meet_addr, scal_addEr, !addE_assoc; auto.",
            "VernacExtend",
            "ee12093802c7ec0e533f8c84410721639d0e4195"
        ],
        [
            "apply sym_equal; rewrite addE_com; auto.",
            "VernacExtend",
            "5728524d00911f87670ef306aeab7369b7c46f38"
        ],
        [
            "rewrite !addE_assoc; auto; apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "581ca21fa25fa47f00040d8a7526532110c6f8d6"
        ],
        [
            "rewrite conjf_hom with (1 := Hy2), join_scall, meet_scalr; auto.",
            "VernacExtend",
            "fe156afd98f7a029769bebfa3e5f1b568ef6de21"
        ],
        [
            "rewrite <-scal_multE; simpl expK; Krm1.",
            "VernacExtend",
            "467ed6c6feca23ea9c78b69d9dccecb9298e0db8"
        ],
        [
            "replace (n + (k1 + k2.+1) .+2)%nat with (2 * 1 + (n + (k1 + k2).+1))%nat by ring.",
            "VernacExtend",
            "48a0299dc54758e0ee5fb8833047efe692ed1afb"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite conj_add, join_addl.",
            "VernacExtend",
            "8531805a984f4ffda22519e4ae03e58b5adbd0fa"
        ],
        [
            "rewrite !conjf_meetl, dconj_invo.",
            "VernacExtend",
            "4428253d4faa537fe81caab76515f2ccda00eb9e"
        ],
        [
            "rewrite (hom0E _ _ Hy1), !joinkr, !joinkl.",
            "VernacExtend",
            "d19a5f1fe120a39295e4c19e750e50744acdcf57"
        ],
        [
            "rewrite meet_scalr, meet_scall.",
            "VernacExtend",
            "3fa7c5b580659d7f0171b332483241dde6bdfe3c"
        ],
        [
            "rewrite conjf_hom with (1 := Hx1).",
            "VernacExtend",
            "17e9d17330b479b725141ec9a93f84fa559b8045"
        ],
        [
            "rewrite dconjf_hom with (1 := Hz2).",
            "VernacExtend",
            "1eaedc4a894f7db84074c7f30859b33fbd64c009"
        ],
        [
            "rewrite addE_com, <-addE_assoc, meet_scalr, meet_scall, <-!scal_multE, <-scal_addEl; auto.",
            "VernacExtend",
            "b082547243430b4ba325b749fa53aefca48d583d"
        ],
        [
            "rewrite multK_com, !multK_assoc, <-add_multKr, <-expK_add; auto.",
            "VernacExtend",
            "4e185d652e6852939bfec33c9b84173bab2ec887"
        ],
        [
            "replace (n + (k1.+1 + k2.+1).+1)%nat with (2 * 1 + (n + k2.+1 + k1))%nat by ring.",
            "VernacExtend",
            "3a59ae8347df4234a0e2ee99364e1209e12f223b"
        ],
        [
            "Krm1; rewrite expKm1_2E, oppKl; Grm0.",
            "VernacExtend",
            "b3abb00a09cd8f2bba81f80dab62720a86b9390e"
        ],
        [
            "rewrite meet_addl.",
            "VernacExtend",
            "a84132556971d9f0aa4441933b771192093e34fb"
        ],
        [
            "rewrite IH with (1 := Hx1) (3 := Hz2); auto.",
            "VernacExtend",
            "9a3358171987b4e649a4f8dda0a98e01722b2f3b"
        ],
        [
            "rewrite !scal_addEr, !addE_assoc; auto.",
            "VernacExtend",
            "2e81b651bb978c6e168dac09d27104a0d2af07ac"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "replace (n + (k1.+1 + k2.+1).+1)%nat with (n + (k1 + k2.+1).+1).+1 by ring.",
            "VernacExtend",
            "c8d9067195ed574d8502a432c910e523b2d5539d"
        ],
        [
            "simpl expK; Krm1.",
            "VernacExtend",
            "3db6545a15310ea464d0d273d74370cae841df14"
        ],
        [
            "apply sym_equal; rewrite addE_com, join_addl, !addE_assoc; auto.",
            "VernacExtend",
            "68808020c7d39d7bfd7084de6f22938dc2e3540d"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite IH with (1 := Hx2) (3 := dconj_hom _ _ _ _ Hz1); auto.",
            "VernacExtend",
            "3871f71442753020712172cfc8c925253893a8e5"
        ],
        [
            "apply sym_equal; rewrite <-addE_assoc, addE_com; auto.",
            "VernacExtend",
            "42d089b3a2fd8ed3a2115bc6f57653c0d3e09448"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite dconj_add, meet_addr, scal_addEr; auto.",
            "VernacExtend",
            "16ee96f4d481c028186f4348e75e66826886efc2"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite (hom0E _ _ Hy1).",
            "VernacExtend",
            "f42f27186a16a5eacf51406411aa0e3ed4baa753"
        ],
        [
            "rewrite joinkl,joinkr,dconj_scal, meet_scalr.",
            "VernacExtend",
            "885165ccb87cb53ada51e9e28324d968e954c017"
        ],
        [
            "rewrite conjf_hom with (1 := Hx2).",
            "VernacExtend",
            "5da6c2a1586d736f7d75be4559e5d7a9f823e44e"
        ],
        [
            "rewrite dconjf_hom with (1 := Hz2).",
            "VernacExtend",
            "1eaedc4a894f7db84074c7f30859b33fbd64c009"
        ],
        [
            "rewrite !meet_scall, !meet_scalr, <-!scal_multE; auto.",
            "VernacExtend",
            "47e5469658025c8fca880f21ca37043ba2a70886"
        ],
        [
            "rewrite !multK_assoc, !multK_com with (x := 'C[y1]), <-!multK_assoc; auto.",
            "VernacExtend",
            "c76adde2b06d804166fef2a8cc536c9f90658dd1"
        ],
        [
            "Krm1; rewrite !opp_multKl, <-expKS, <-expK_add; auto.",
            "VernacExtend",
            "fd35efa3a655619957570022591e324ccc87f974"
        ],
        [
            "replace ((n + (k1.+1 + k2.+1).+1).+1 + (n + k2.+1))% nat with (2 * (n.+1 + k2.+1) + k1.+1)%nat by ring.",
            "VernacExtend",
            "fb7586acf49aec6c8e51cae09fc5406da4351960"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "apply f_equal2 with (f := scal n); auto.",
            "VernacExtend",
            "deb609984d2410cce51f5573a0705c8e2556a359"
        ],
        [
            "replace (n + (k1.+1 + k2.+1).+1)%nat with (n + (k1.+1 + k2).+1).+1 by ring.",
            "VernacExtend",
            "219e6e1a37d15fb6c6db16c92b17617df8aafca3"
        ],
        [
            "simpl expK; Krm1.",
            "VernacExtend",
            "3db6545a15310ea464d0d273d74370cae841df14"
        ],
        [
            "rewrite dconjf_joinr, conj_invo; auto.",
            "VernacExtend",
            "3b0eebd488350a1791dccc7eea0387ebab1e7c1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma splitll n k1 k2 x y z : hom n k1 x -> hom n 1 y -> hom n k2 z -> (y \u2228 x) \u2227 z = (-(1))^(n + k2.+1) .* ((x \u2227 (y \u2228 z)) - y \u2228 (x \u2227 z)).",
            "VernacStartTheoremProof",
            "fbf57dfa420fd0f7fb91925fa1673559bd73c287"
        ],
        [
            "intros Hx Hy Hz.",
            "VernacExtend",
            "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros Hk1.",
            "VernacExtend",
            "33fca4ddf4e1dee0c04e393a76aa03f98a67c2bf"
        ],
        [
            "2: rewrite hom_lt with (2 := Hx), sub_add, !meet0l; Grm0; rewrite meet0l; auto.",
            "VernacExtend",
            "7b634817517687568a7afcdfb1a97ce104c02c1f"
        ],
        [
            "case (Lt.le_or_lt k2 n); intros Hk2.",
            "VernacExtend",
            "54a412bb0c841bafff34f0fa2be8f79c4cf960b7"
        ],
        [
            "2: rewrite hom_lt with (2 := Hz), sub_add, !meet0r; Grm0; rewrite meet0r; Grm0.",
            "VernacExtend",
            "e081e3f5256ca6c04b656c6e9bfbc2206351ee28"
        ],
        [
            "rewrite join_hom_com with (2 := Hy) (1 := Hx), meet_scall, splitlr with (k1 := k1) (k2 := k2); auto.",
            "VernacExtend",
            "7cf464b306e58b902b66c3d46333ed02b28ee5b7"
        ],
        [
            "rewrite sub_add, !scal_addEr, <-scal_multE, <-expK_add; auto.",
            "VernacExtend",
            "e635944191a6cd66440293878fb783aafaea6325"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "replace (k1 * 1 + (n + (k1 + k2).+1))%nat with (2 * k1 + (n + k2.+1))%nat by ring.",
            "VernacExtend",
            "2c9432409328439689ff974728812288ec5e3155"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "case (Lt.le_or_lt n (k1 + k2)%nat); intros Hm1.",
            "VernacExtend",
            "3b66dd0b376da2fa5864d11c885c5e7351f59a3c"
        ],
        [
            "2: rewrite meet_small with (k1 := k1) (k2 := k2); Grm0.",
            "VernacExtend",
            "09ca6ceb2f9aa19e2485136429aa45b195baf713"
        ],
        [
            "assert (Hxz := meet_hom _ _ _ _ _ Hx Hz).",
            "VernacExtend",
            "de7e3a9cd72f3a3448442e5a1ca4865e1e264b1c"
        ],
        [
            "rewrite join_hom_com with (1 := Hxz) (2 := Hy), !Mult.mult_1_r; auto.",
            "VernacExtend",
            "ed9d91bc4da74fa5fc78873bab07200f21d828e4"
        ],
        [
            "rewrite <-!scal_multE, expKm1_sub; auto.",
            "VernacExtend",
            "f136df99c3114cd7c7e068944f804e00941e14e5"
        ],
        [
            "Krm1; rewrite opp_multKl, <-expKS, <- expK_add; auto.",
            "VernacExtend",
            "19fd0d68be62b1c375c169a76048868d5cf66fa8"
        ],
        [
            "replace ((n + k2.+1).+1 +(k1 + k2 + n))%nat with (2 * (n + k2.+1) + k1)%nat by ring.",
            "VernacExtend",
            "f7a4680c3fc59cc86e6f83b26d5aefd53e36375b"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma splitrr n k1 k2 x y z : hom n k1 x -> hom n 1 y -> hom n k2 z -> z \u2227 (x \u2228 y) = (-(1))^(n + k2.+1) .* ((z \u2228 y) \u2227 x - (z \u2227 x) \u2228 y).",
            "VernacStartTheoremProof",
            "c8eb3f8d4d255d7fe390b54a004bf52bd401e566"
        ],
        [
            "intros Hx Hy Hz.",
            "VernacExtend",
            "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
        ],
        [
            "rewrite meet_hom_com with (k2 := k2) (k1 := (k1 + 1)%nat); auto.",
            "VernacExtend",
            "93b54afab6ef9c60f58cb26928f4a41d76564e84"
        ],
        [
            "rewrite splitlr with (k1 := k1) (k2 := k2); auto.",
            "VernacExtend",
            "e327182ed14ba9c60e2c346f2ea960788a1b234a"
        ],
        [
            "rewrite sub_add, !scal_addEr, <-!scal_multE; auto.",
            "VernacExtend",
            "8a69255f5fcde36b3cef72b5bc67c19becb46b8b"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite join_hom_com with (1 := Hz) (2 := Hy), !Mult.mult_1_r, meet_scalr, <-scal_multE, <-expK_add; auto.",
            "VernacExtend",
            "51f76016e68c2d17e8dc89039c742571f2480084"
        ],
        [
            "rewrite meet_hom_com with (k1 := k1) (k2 := (k2 + 1)%nat) (x := x); auto.",
            "VernacExtend",
            "9ed4123b1cc910604e7f0c385367c2242f052509"
        ],
        [
            "rewrite <-scal_multE, <-!expK_add; auto.",
            "VernacExtend",
            "526c414853a4a8a37e879d6fcebe12d895c7528a"
        ],
        [
            "replace ((n + (k1 + 1)) * (n + k2) + (n + (k1 + k2).+1) + k2)%nat with (2* k2 + (n + k2.+1 + (n + k1) * (n + (k2 + 1))))%nat by ring.",
            "VernacExtend",
            "20c746665d84be96201ab4b60638a5084fe167dd"
        ],
        [
            "rewrite !expKm1_2E; auto.",
            "VernacExtend",
            "98707be5a2d6009dabdd675914748d88db717e33"
        ],
        [
            "rewrite meet_hom_com with (k1 := k1) (k2 := k2) (x := x); auto.",
            "VernacExtend",
            "e7c6b98033e23cd9d8543036d0f0d41011a2bf50"
        ],
        [
            "Krm1; rewrite <-expKS, join_scall, <- scal_multE, <-expK_add; auto.",
            "VernacExtend",
            "92f03770adfa8b247d84894d6228d6dff8d0e8dc"
        ],
        [
            "replace ((n + k2.+1).+1 + (n + k1) * (n + k2))%nat with (2 * 1 + ((n + (k1 + 1)) * (n + k2)))%nat by ring.",
            "VernacExtend",
            "7f5901256764372a50fd755cb4825eeab38c4880"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma splitrl n k1 k2 x y z : hom n k1 x -> hom n 1 y -> hom n k2 z -> z \u2227 (y \u2228 x) = (-(1))^(n + (k1 + k2).+1) .* (z \u2228 y) \u2227 x + y \u2228 (z \u2227 x).",
            "VernacStartTheoremProof",
            "4e06f54767902dbb0466fc57362f46985d5850dd"
        ],
        [
            "intros Hx Hy Hz.",
            "VernacExtend",
            "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
        ],
        [
            "rewrite meet_hom_com with (k2 := k2) (k1 := (1 + k1)%nat); auto.",
            "VernacExtend",
            "4bcb21196b06130846bfb604086595a86833c5cd"
        ],
        [
            "rewrite splitll with (k1 := k1) (k2 := k2); auto.",
            "VernacExtend",
            "dc4e08f1d8fcbd63cddf7edf0c126fa451df2f4a"
        ],
        [
            "rewrite sub_add, !scal_addEr, <-!scal_multE; auto.",
            "VernacExtend",
            "8a69255f5fcde36b3cef72b5bc67c19becb46b8b"
        ],
        [
            "apply f_equal2 with (f := add n); auto.",
            "VernacExtend",
            "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
        ],
        [
            "rewrite join_hom_com with (1 := Hz) (2 := Hy), !Mult.mult_1_r, meet_scalr, <-scal_multE, <-expK_add; auto.",
            "VernacExtend",
            "51f76016e68c2d17e8dc89039c742571f2480084"
        ],
        [
            "rewrite meet_hom_com with (k1 := k1) (k2 := (k2 + 1)%nat) (x := x); auto.",
            "VernacExtend",
            "9ed4123b1cc910604e7f0c385367c2242f052509"
        ],
        [
            "rewrite meet_scalr, <-scal_multE, <-!expK_add; auto.",
            "VernacExtend",
            "670d5006f7bb9610439735ac50d2c7ad12ba46a0"
        ],
        [
            "replace ((n + (1 + k1)) * (n + k2) + (n + k2.+1) + k2)%nat with (2 * k2 + (n * n + n * k1 + n * k2 + 2 * n + k1 * k2 + k2 + 1))%nat by ring.",
            "VernacExtend",
            "6abb4b56b5209415da876a5e1fafaba17d76148f"
        ],
        [
            "replace ((n + k1) * (n + (k2 + 1)) + (n + (k1 + k2).+1))%nat with (2 * k1 + (n * n + n * k1 + n * k2 + 2 * n + k1 * k2 + k2 + 1))%nat by ring.",
            "VernacExtend",
            "6f5c8d7d9f8e6c6e31e60cf3c0cd212028ab240f"
        ],
        [
            "rewrite !expKm1_2E; auto.",
            "VernacExtend",
            "98707be5a2d6009dabdd675914748d88db717e33"
        ],
        [
            "rewrite meet_hom_com with (k1 := k1) (k2 := k2) (x := x); auto.",
            "VernacExtend",
            "e7c6b98033e23cd9d8543036d0f0d41011a2bf50"
        ],
        [
            "Krm1; rewrite opp_multKl, <-expKS, join_scalr, <-!expK_add; auto.",
            "VernacExtend",
            "21ba6ca1df0f68bba74b6b467e84c3f318c4f7df"
        ],
        [
            "replace (((n + (1 + k1)) * (n + k2)).+1 + (n + k2.+1))%nat with (2 * (n + k2 + 1) + (n + k1) * (n + k2))%nat by ring.",
            "VernacExtend",
            "14c1456c576e8c4fba84e6fba01c6e5b89cedc3f"
        ],
        [
            "rewrite !expKm1_2E; auto.",
            "VernacExtend",
            "98707be5a2d6009dabdd675914748d88db717e33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter n k1 k2 x y z : hom n 1 x -> hom n k1 y -> hom n k2 z -> x \u2228 y = 0 -> x \u2228 z = 0 -> x \u2228 (y \u2227 z) = 0.",
            "VernacStartTheoremProof",
            "facd4544c2f5c9aab2c6ab72821493ebf937d8a9"
        ],
        [
            "intros Hx Hy Hz Hxy Hxz.",
            "VernacExtend",
            "387c4df87e137a36ee19de39ba6273ef295bfc2f"
        ],
        [
            "generalize (splitll n k1 k2 y x z Hy Hx Hz).",
            "VernacExtend",
            "3b0acb8df6d5ab69f940364410665f99a67ddc78"
        ],
        [
            "rewrite Hxy, Hxz; Grm0.",
            "VernacExtend",
            "3e94857138877f09269b255e3c7f3480c62c1122"
        ],
        [
            "rewrite <-scal_multE; Krm1; rewrite <-expKS; auto.",
            "VernacExtend",
            "c773a6bca4c98740461614ee4d0203bee88bf585"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "case (scalE_integral _ (fn n) _ _ (sym_equal H)); auto.",
            "VernacExtend",
            "25f6147f2d9c4af4b1a8f856d8e3d99dcdfb12b0"
        ],
        [
            "intros HH; contradict HH; apply expKm1_n0; auto.",
            "VernacExtend",
            "60d8c43e04508b527cc194803bb3fb7467ee2532"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_meet_distrl n k1 k2 x y z : hom n k1 x -> hom n 1 y -> hom n k2 z -> y \u2228 (x \u2227 z) = (-(1))^(n + k2) .* ((y \u2228 x) \u2227 z) + x \u2227 (y \u2228 z).",
            "VernacStartTheoremProof",
            "3e473398c5859e36e0a3ba37299b520ace6a686c"
        ],
        [
            "intros Hx Hy Hz.",
            "VernacExtend",
            "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
        ],
        [
            "rewrite (splitll n k1 k2 x y z), sub_add, !scal_addEr; auto.",
            "VernacExtend",
            "a17eee1627a16674c0e3af152e83fdbca4bb8451"
        ],
        [
            "rewrite <-!scal_multE, <-expK_add; Krm1; rewrite <-expKS; auto.",
            "VernacExtend",
            "a54579b967e8f857b081482a13fd521a12877a80"
        ],
        [
            "replace (n + k2 + (n + k2.+1))%nat with (2 * (n + k2) + 1)%nat by ring.",
            "VernacExtend",
            "8ca4b34f9517b66d9d520f1526cae9a06aa46b72"
        ],
        [
            "rewrite expKm1_2E, !expKS, expKm1_2E, expKS; simpl expK; Krm1.",
            "VernacExtend",
            "1cf06a2c0e6e8708bb28cc5ebe309837c6209841"
        ],
        [
            "rewrite addE_com, <-addE_assoc, scalE1, scal_addE0; Grm0.",
            "VernacExtend",
            "81f06eb6d0234957e10979171673037b593ec618"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma meet_join_distrl n k1 k2 x y z : hom n k1 x -> hom n 1 y -> hom n k2 z -> '@y \u2227 (x \u2228 z) = (-(1))^k2 .* (('@y \u2227 x) \u2228 z) + x \u2228 ('@y \u2227 z).",
            "VernacStartTheoremProof",
            "0a6d31122d2f8fd7c5c6412c8aa04782bd19d9c0"
        ],
        [
            "intros Hx Hy Hz.",
            "VernacExtend",
            "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
        ],
        [
            "case (Lt.le_or_lt n 0); intros Hn.",
            "VernacExtend",
            "df121471ffa6be6c9b24faf55ce4f3f20b7b0b96"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "rewrite hom_lt with (2 := Hy); Grm0.",
            "VernacExtend",
            "630065ff6b9fc2636b05525d3bcf069cc0c12f61"
        ],
        [
            "contradict Hn; auto with arith.",
            "VernacExtend",
            "9a47da204dd85d90fc96c2d3d29b3c051cf9cf87"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros Hk1.",
            "VernacExtend",
            "33fca4ddf4e1dee0c04e393a76aa03f98a67c2bf"
        ],
        [
            "2: rewrite hom_lt with (2 := Hx); Grm0.",
            "VernacExtend",
            "7d1d2a758f26ea465c847594db9520177c02efc7"
        ],
        [
            "case (Lt.le_or_lt k2 n); intros Hk2.",
            "VernacExtend",
            "54a412bb0c841bafff34f0fa2be8f79c4cf960b7"
        ],
        [
            "2: rewrite hom_lt with (2 := Hz); Grm0.",
            "VernacExtend",
            "64a24c23b043ecd21357013923b9bbb8aa10797e"
        ],
        [
            "pattern x at 1; rewrite dual_invoE with (1 := Hx).",
            "VernacExtend",
            "5b1419bc90d73696405cabb0b9f09cfbc6506fe4"
        ],
        [
            "pattern z at 1; rewrite dual_invoE with (1 := Hz).",
            "VernacExtend",
            "7b80dfc8f1fefef9687b80c02f073c8bafe75b88"
        ],
        [
            "rewrite !join_scalr, !join_scall, !meet_scalr.",
            "VernacExtend",
            "0ed1ba05c083cb483dce20324604df6891598572"
        ],
        [
            "rewrite <-dual_meet, <-dual_join; auto.",
            "VernacExtend",
            "5a4e642ce7fdea8a4fe643469719cad6e546c614"
        ],
        [
            "rewrite (join_meet_distrl n (n - k1) (n- k2) '@x y '@z); auto.",
            "VernacExtend",
            "a7cb73697fcfe256974b64ef03e33c0752170482"
        ],
        [
            "rewrite dual_add, dual_scal, !dual_meet, !dual_join.",
            "VernacExtend",
            "e8be049138cd55d78bb77beae585e8ac750d55e2"
        ],
        [
            "rewrite <-scal_multE, scal_addEr, <-scal_multE, multK_com, <-multK_assoc, !scal_multE; auto.",
            "VernacExtend",
            "3bff86059ed7241aea27e46b70b6f39ca65510e8"
        ],
        [
            "rewrite <-join_scall, <-meet_scalr, <-dual_invoE; auto.",
            "VernacExtend",
            "bd860484fed90053694b765b12948d57d87f119d"
        ],
        [
            "rewrite <-join_scalr, <-dual_invoE; auto.",
            "VernacExtend",
            "fb3edfcd51894075a329af88744c36dd835efe13"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "rewrite <-join_scall, <-dual_invoE; auto.",
            "VernacExtend",
            "434cce2de38c2e0766d68029db6f3b16db89b0b7"
        ],
        [
            "rewrite <-join_scalr, <-meet_scalr, <-dual_invoE; auto.",
            "VernacExtend",
            "c2402928256b31d40f621ed8b410f2ef749881c5"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "rewrite expK_add, expKm1_sub, <-expK_add; auto.",
            "VernacExtend",
            "886dd81b04627667474fc9c22ea0c5fc06e3787c"
        ],
        [
            "replace (n + (n + k2))%nat with (2 * n + k2)%nat by ring.",
            "VernacExtend",
            "36a79e60e070a3d0fbe71e3b64639d1599f1b653"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade_dual n k x : k < n -> grade n k x -> grade n (n - k) '@x.",
            "VernacStartTheoremProof",
            "bd3c7812b986d3d65f4e1ef8902dca07ad3e339f"
        ],
        [
            "assert (dual_aux: forall n x l, hom n 1 x -> is_vector_space n l -> (forall y, In y l -> '@x \u2227 y = 0) -> '@x \u2227 joinl n l = 0).",
            "VernacExtend",
            "956157d56165b5b6bf7e240383cd9720e6d8fc8b"
        ],
        [
            "intros n1 x1 l Hx; induction l as [|y l IH]; simpl; Vfold n; Grm0.",
            "VernacExtend",
            "db400924cded81384ff30e71be07b1faa86ef192"
        ],
        [
            "intros Hv Hr; destruct l as [|b l1]; auto.",
            "VernacExtend",
            "9f6d56f8fdfeaad900f5806f0a3461d9c7f73d45"
        ],
        [
            "rewrite meet_join_distrl with (k1 := 1%nat) (k2 := length (b:: l1)); auto.",
            "VernacExtend",
            "ec27a6d7b75025d70ba0102e48d534f1bb97e9a0"
        ],
        [
            "rewrite Hr, IH; Grm0.",
            "VernacExtend",
            "3fadbdcc875e0029cb06dd9dcdb77f1c69ba089d"
        ],
        [
            "intros u Hu; apply Hv; auto with datatypes.",
            "VernacExtend",
            "a00e9b1c463a46dbce945da938f4f6cc68264cd0"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply Hv; auto with datatypes.",
            "VernacExtend",
            "427dbb978167a365c90010cf8ed71f867161ae89"
        ],
        [
            "apply joinl_hom1; intros u Hu.",
            "VernacExtend",
            "5755cae68f266f6b433ce4aec1073b601da7d0b2"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply Hv; auto with datatypes.",
            "VernacExtend",
            "427dbb978167a365c90010cf8ed71f867161ae89"
        ],
        [
            "assert (dual_aux_rec: forall n x l, hom n 1 x -> is_vector_space n l -> '@x \u2227 joinl n l = 0 \\/ (exists y, In y l /\\ '@x \u2227 y <> 0)).",
            "VernacExtend",
            "a33930f847812c7485044978e8c9dc2a3d6be2bb"
        ],
        [
            "intros n1 x1 l H1 H2.",
            "VernacExtend",
            "661147f5297daa1cf9634916bb15895ad905abdd"
        ],
        [
            "case (list_dec _ (fun y => '@x1 \u2227 y = 0) l); auto.",
            "VernacExtend",
            "2221015594447b716a39d45b561dadc3e70ec805"
        ],
        [
            "intros y; case (eqE_spec _ (fn n1) ('@x1 \u2227 y) 0); auto.",
            "VernacExtend",
            "61f3fecac4b846817c0977e3579b59749d5a49a1"
        ],
        [
            "generalize x; clear x.",
            "VernacExtend",
            "3a730666dcffe77922ab24fe4249a5512fcfd603"
        ],
        [
            "induction k as [|k IH]; auto.",
            "VernacExtend",
            "b2165c81f40fe18ddff35ac248bd180dc2d168e5"
        ],
        [
            "intros x Hn Hx; rewrite (grade0E _ _ Hx); Grm0.",
            "VernacExtend",
            "80c344a7b555c4f95eefa15cff087eeb48512e8b"
        ],
        [
            "apply grade0.",
            "VernacExtend",
            "828424250bc1e6cd8316e668a42fd91bf68a3019"
        ],
        [
            "intros x Hn; rewrite !gradeE; intros (Hx, ([|a l], (H1l,H2l))); subst; try discriminate; split; auto.",
            "VernacExtend",
            "fc5ab578ddf8d0a381c658615e481e537cce9e79"
        ],
        [
            "exists nil; split; Grm0.",
            "VernacExtend",
            "e326089d834412980ab47e6ce871aea79af6d538"
        ],
        [
            "assert (Hn1: 0 < n) by (destruct n; auto with arith; contradict Hn; auto with arith).",
            "VernacExtend",
            "458fe89341f4ed98773ec560b0fb5bc70a0f52ad"
        ],
        [
            "assert (Ha: hom n 1 a); auto with datatypes.",
            "VernacExtend",
            "37cff7213917046131fdd9705ce85f8b3e1ce2f1"
        ],
        [
            "case (eqE_spec _ (fn n) (joinl n (a :: l)) 0); intros Hal.",
            "VernacExtend",
            "fe07bcc6167c8aa68d8e1687ef2f9420034fe523"
        ],
        [
            "rewrite Hal; exists nil; split; Grm0; intros y [].",
            "VernacExtend",
            "e610a02b1978b1a66561ea996e7e6b661eeaa8e2"
        ],
        [
            "case (homE _ _ (length (a::l)) _ Hx).",
            "VernacExtend",
            "b062bcb6b44f75464391cc5198bb4716eb20b6dc"
        ],
        [
            "apply joinl_hom1; auto.",
            "VernacExtend",
            "d31c3b7d0307e0520e4afb9f80dffc40222441c1"
        ],
        [
            "2: intros HH; rewrite HH; exists nil; Grm0.",
            "VernacExtend",
            "cb0aeb569025fa29aacd3db771582d80fc505e26"
        ],
        [
            "2: split; auto; intros y [].",
            "VernacExtend",
            "c81d4e27afcaa96e124eddd71b2b658ebf86cffb"
        ],
        [
            "intros HH; injection HH; clear HH; intros Hk.",
            "VernacExtend",
            "df45e1e2598739b8f5e3a618cacfd38b0e71b72a"
        ],
        [
            "assert (F1: exists l1, is_vector_space n l1 /\\ '@(joinl n (a::l)) = '@a \u2227 joinl n l1).",
            "VernacExtend",
            "bebda2ba6580689d0ec3ebb6225b7f7c9afd66c9"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "exists (base n 1).",
            "VernacExtend",
            "288999012cd8d2f11eaf373267c10b80f22b61ba"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros u Hu; constructor; auto.",
            "VernacExtend",
            "82b6b636e584ddbc5c8f9e55691aa9f97f616edf"
        ],
        [
            "rewrite joinl_all, meet_allr; auto with arith.",
            "VernacExtend",
            "7996e840070acedaed8ac8e696a8e5aa963beab5"
        ],
        [
            "assert (F1: grade n k (joinl n (v::l))).",
            "VernacExtend",
            "5bce40e038742a47f6c318d67de23f6ac6c42fb4"
        ],
        [
            "rewrite gradeE; split.",
            "VernacExtend",
            "9ca8e61a22c2260ba8fc5f0be7277feb7e6e9b31"
        ],
        [
            "rewrite Hk; apply joinl_hom1; auto with datatypes.",
            "VernacExtend",
            "9eb5a570c005cc0b391fa3c9f3458dbbca5adb3f"
        ],
        [
            "exists (v::l); split; auto with datatypes.",
            "VernacExtend",
            "db6a9d2047747abdcf189f67183c72fb8ddee43b"
        ],
        [
            "assert (F2: k < n); auto with arith.",
            "VernacExtend",
            "793aafb18b06e77358bb14d50b96323ec7fc3ec4"
        ],
        [
            "generalize (IH _ F2 F1); rewrite gradeE; intros (_,(l1,(H1l1,H2l1))).",
            "VernacExtend",
            "d681e00ecbca4e6452cd5bd564f0963efb28073d"
        ],
        [
            "exists l1; split.",
            "VernacExtend",
            "2c88ef939377a23e2628fc327914ed3c1e503daa"
        ],
        [
            "intros u Hu; red; rewrite cbl1_hom1_equiv; auto with datatypes.",
            "VernacExtend",
            "b98b7afc4e27cda5be73af278a1a5214f3b0a4e1"
        ],
        [
            "rewrite joinlS, dual_join, H1l1; auto.",
            "VernacExtend",
            "47f710c75fbd57fe3785de2d11b52f00294bdddb"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "case F1; intros l1 (H1l1,H2l1).",
            "VernacExtend",
            "0ace6add4817dd94435db1894341fa2959f19ad5"
        ],
        [
            "rewrite H2l1.",
            "VernacExtend",
            "c593af786fd0e45d5446904fd663776f489f72e0"
        ],
        [
            "case (dual_aux_rec n a l1); auto with datatypes.",
            "VernacExtend",
            "c355672be74ec6890fc0d0c20b2a35fec2aa2b3e"
        ],
        [
            "intros HH; rewrite HH.",
            "VernacExtend",
            "4ec2b476eecc33407a6b0c10ed2d2154b1264365"
        ],
        [
            "exists nil; split; auto; intros y [].",
            "VernacExtend",
            "030f8b05112e5d68196ad89f95a4437354824223"
        ],
        [
            "intros (b, (H1b,H2b)).",
            "VernacExtend",
            "ac128ecaf24055f7762e7a6bbc9a2c4c5eeae7ab"
        ],
        [
            "assert (Hb: hom n 1 b) by (rewrite <-cbl1_hom1_equiv; apply H1l1; auto with datatypes).",
            "VernacExtend",
            "f29ac39fc5c31d099c41508f564f009f65c82404"
        ],
        [
            "case (is_vector_space_swap n b l1); auto.",
            "VernacExtend",
            "bf8e2d0a1179749cae2342cb4614b34eec6836b6"
        ],
        [
            "intros l2 (H1l2,H2l2); rewrite H2l2.",
            "VernacExtend",
            "5103ce890d14ed7516145ddb4f1d46fd6170e6e4"
        ],
        [
            "destruct l2 as [|c l2].",
            "VernacExtend",
            "db56009e0c4c37a543f84bf8fb2a8cdc96570d12"
        ],
        [
            "assert (F2: hom n 0 '@(joinl n (a :: l))).",
            "VernacExtend",
            "ac3e09f7a25e826e5589ff0ce27ff61b957f60e9"
        ],
        [
            "rewrite H2l1, H2l2; simpl.",
            "VernacExtend",
            "812e5410e927078601a8fbac18d775ae0070d87a"
        ],
        [
            "replace 0%nat with ((n - 1) + 1 - n)%nat; auto.",
            "VernacExtend",
            "d6f8236157beb165c052d2dce72d48af77be1ecd"
        ],
        [
            "rewrite Plus.plus_comm, <-Minus.le_plus_minus, <-Minus.minus_n_n; auto.",
            "VernacExtend",
            "79798b29e593c08f59bb91b5996cc3d4cc023200"
        ],
        [
            "case (homE n n k.+1 (joinl n (a :: l))); auto.",
            "VernacExtend",
            "e3ac2656ffb07e83c75bb2b17e873bf1a33dd8bf"
        ],
        [
            "rewrite dual_invoE with (1 := Hx).",
            "VernacExtend",
            "a83b1cc3d19ab768301c52f0c577e58d6c3619d7"
        ],
        [
            "pattern n at 2; replace n with (n - 0)%nat; auto.",
            "VernacExtend",
            "5635983c77273698297b990d32f008987dc1bc12"
        ],
        [
            "rewrite <-Minus.minus_n_O; auto.",
            "VernacExtend",
            "c4153b1fadf5a293ad43c9fc40cf7574ef99eece"
        ],
        [
            "intros; subst n; contradict Hn; auto with arith.",
            "VernacExtend",
            "27cfe901d04eeeff69d35ec71dba03d304c8dd65"
        ],
        [
            "intros H1a; case Hal; auto.",
            "VernacExtend",
            "35fd19ca2abeb0a773e1228628180bdfb78c90b7"
        ],
        [
            "assert (Hc: hom n 1 c) by (rewrite <-cbl1_hom1_equiv; apply H1l2; auto with datatypes).",
            "VernacExtend",
            "b934cc1d2f411d85977387eaeef881866ab023fc"
        ],
        [
            "pose (f := fun x => 'C['@a \u2227 x]).",
            "VernacExtend",
            "4f10fd94e73f239015f0690bec8f9ee2be9d5b07"
        ],
        [
            "exists (((- (1)) ^ length (c :: l2) * f b) .* (c + (-(1) * f c * (f b)^-1) .* b) :: map (fun x => x + (-(1) * f x * (f b)^-1) .* b) l2).",
            "VernacExtend",
            "1bdea59436ac12c0d05edbcc8ef4ece7c2367e94"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (F2: forall y, hom n 1 y -> '@a \u2227 y = ['C['@a \u2227 y]]).",
            "VernacExtend",
            "5e2ab91ed404ad85c3e52e4fc8b946fee300aa94"
        ],
        [
            "intros y Hy; apply hom0E.",
            "VernacExtend",
            "9de1227a7b1f791580398f0a427bb54f672dba8b"
        ],
        [
            "replace 0%nat with ((n - 1) + 1 - n)%nat; auto.",
            "VernacExtend",
            "d6f8236157beb165c052d2dce72d48af77be1ecd"
        ],
        [
            "rewrite Plus.plus_comm, <-Minus.le_plus_minus, <-Minus.minus_n_n; auto.",
            "VernacExtend",
            "79798b29e593c08f59bb91b5996cc3d4cc023200"
        ],
        [
            "replace (joinl n (b :: c :: l2)) with (joinl n (b::(c + (-(1) * f c * f b ^-1) .* b):: map (fun x : vect n => x + (-(1) * f x * f b ^-1) .* b) l2)).",
            "VernacExtend",
            "f9526ad1a7aca1969a1a0938bfefd1e2f1ce9bd0"
        ],
        [
            "rewrite joinlS; auto.",
            "VernacExtend",
            "42867c5d4805f35d99dd977b40eccd4212783cd2"
        ],
        [
            "2: intros HH; discriminate.",
            "VernacExtend",
            "934a14520a19ead27aa5ae8d39622bacb308ec3f"
        ],
        [
            "rewrite (meet_join_distrl n 1 (length (c::l2))); auto.",
            "VernacExtend",
            "2c4e1e40f2944ca4d5b5f15e6a0a5fc3eebb238f"
        ],
        [
            "rewrite addE_com, dual_aux; Grm0.",
            "VernacExtend",
            "cb44732eb9f21ad0e3033c5575367cac5c2a071a"
        ],
        [
            "rewrite (F2 b); auto.",
            "VernacExtend",
            "9421f425228ffa227e77f4e67eaefa0507cf988a"
        ],
        [
            "rewrite joinkl, !joinl_scal, !scal_multE; auto.",
            "VernacExtend",
            "9c952a7123dfe10477ab25c831d24b906b3649a9"
        ],
        [
            "intros y Hy; case in_inv with (1 := Hy).",
            "VernacExtend",
            "a860d3f2e449ab8202689294e36ccc9df792f27e"
        ],
        [
            "intros; subst; auto.",
            "VernacExtend",
            "500ed40eb5eeba21c29aef2459358e703dfa2a8d"
        ],
        [
            "red; apply VectorSpace.cbl_add.",
            "VernacExtend",
            "f55cb38934929ad7281fe9064a658cd180218cb6"
        ],
        [
            "apply H1l2; auto with datatypes.",
            "VernacExtend",
            "aac71c8ddd074784df5669074247b61e4f9bf9ad"
        ],
        [
            "apply VectorSpace.cbl_scal; apply H1l2; auto with datatypes.",
            "VernacExtend",
            "090e04ed1389009ecdbcb0556a68ba6f4ca59057"
        ],
        [
            "rewrite in_map_iff; intros (u, (H1u,H2u)); subst.",
            "VernacExtend",
            "a630875166a1867c50cfbbc1ccd4750f4f288937"
        ],
        [
            "red; apply VectorSpace.cbl_add.",
            "VernacExtend",
            "f55cb38934929ad7281fe9064a658cd180218cb6"
        ],
        [
            "apply H1l2; auto with datatypes.",
            "VernacExtend",
            "aac71c8ddd074784df5669074247b61e4f9bf9ad"
        ],
        [
            "apply VectorSpace.cbl_scal.",
            "VernacExtend",
            "3d8428c48bc8e2b3592b6ec7fc81b42b30c63e68"
        ],
        [
            "apply H1l2; auto with datatypes.",
            "VernacExtend",
            "aac71c8ddd074784df5669074247b61e4f9bf9ad"
        ],
        [
            "intros y Hy; case in_inv with (1 := Hy).",
            "VernacExtend",
            "a860d3f2e449ab8202689294e36ccc9df792f27e"
        ],
        [
            "intros HH; subst.",
            "VernacExtend",
            "39061ea353eac00bff1eefa27bc260aa3497f245"
        ],
        [
            "rewrite meet_addr, !meet_scalr.",
            "VernacExtend",
            "a2274278d1909436d04ed4a26dd61e6f70431450"
        ],
        [
            "rewrite (F2 c), (F2 b); auto.",
            "VernacExtend",
            "a24c7d6fa28bb19fa437b82196af8139e3b7c465"
        ],
        [
            "unfold f; rewrite !scalk, addk, !multK_assoc; auto.",
            "VernacExtend",
            "688d606cf0335729e9770496d83cf32dccbb6d2e"
        ],
        [
            "rewrite invKr, multK1r; Krm1.",
            "VernacExtend",
            "018cb1f090d5e17778142e10d85ce59f7c101fda"
        ],
        [
            "rewrite oppKr; auto.",
            "VernacExtend",
            "1c0346bcba6c3365f55eeb23716a07c59551a95b"
        ],
        [
            "intros HH; case H2b; rewrite F2, HH; auto.",
            "VernacExtend",
            "ee35758f1d7e0f21ac03b6b9a45effb608376184"
        ],
        [
            "rewrite in_map_iff; intros (u, (H1u,H2u)); subst.",
            "VernacExtend",
            "a630875166a1867c50cfbbc1ccd4750f4f288937"
        ],
        [
            "rewrite meet_addr, !meet_scalr.",
            "VernacExtend",
            "a2274278d1909436d04ed4a26dd61e6f70431450"
        ],
        [
            "rewrite (F2 u), (F2 b); auto.",
            "VernacExtend",
            "8d887fc2f9eab2ea03b95fdcd7737c4f4de1149e"
        ],
        [
            "unfold f; rewrite !scalk, addk, !multK_assoc; auto.",
            "VernacExtend",
            "688d606cf0335729e9770496d83cf32dccbb6d2e"
        ],
        [
            "rewrite invKr, multK1r; Krm1.",
            "VernacExtend",
            "018cb1f090d5e17778142e10d85ce59f7c101fda"
        ],
        [
            "rewrite oppKr; auto.",
            "VernacExtend",
            "1c0346bcba6c3365f55eeb23716a07c59551a95b"
        ],
        [
            "intros HH; case H2b; rewrite F2, HH; auto.",
            "VernacExtend",
            "ee35758f1d7e0f21ac03b6b9a45effb608376184"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l2; auto with datatypes.",
            "VernacExtend",
            "1dd47df3bf840e6955d1db88434aaaf1f053c64d"
        ],
        [
            "replace (length (c::l2)) with (length (c + (-(1) * f c * f b ^-1) .* b :: map (fun x : vect n => x + (-(1) * f x * f b ^-1) .* b) l2)).",
            "VernacExtend",
            "504891fd4766033ea261cff92e2436f4cfb3ebb7"
        ],
        [
            "apply joinl_hom1.",
            "VernacExtend",
            "703ce41f8f6ad29cad2e3e7c70da8f4e237ec527"
        ],
        [
            "intros y Hy; case in_inv with (1 := Hy).",
            "VernacExtend",
            "a860d3f2e449ab8202689294e36ccc9df792f27e"
        ],
        [
            "intros HH; subst; auto.",
            "VernacExtend",
            "d371501de4cec7e602d6ff4b0786a458a71e3359"
        ],
        [
            "rewrite in_map_iff; intros (u, (H1u,H2u)); subst.",
            "VernacExtend",
            "a630875166a1867c50cfbbc1ccd4750f4f288937"
        ],
        [
            "apply add_hom; auto.",
            "VernacExtend",
            "3d45531952395e6aa26f0ec246fbde386b0c49f8"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l2; auto with datatypes.",
            "VernacExtend",
            "1dd47df3bf840e6955d1db88434aaaf1f053c64d"
        ],
        [
            "simpl; rewrite map_length; auto.",
            "VernacExtend",
            "5b48953aa1d2bf895bb5f8a89f19f93f91d049c8"
        ],
        [
            "rewrite joinlS.",
            "VernacExtend",
            "ec6f99326808f9196c98c1c1ad79dfb80ef6d1cd"
        ],
        [
            "apply sym_equal; rewrite joinlS.",
            "VernacExtend",
            "231f1ff53b1646519a1513e46fa9e662b9004073"
        ],
        [
            "change (c + (-(1) * f c * f b ^-1) .* b :: map (fun x : vect n => x + (-(1) * f x * f b ^-1) .* b) l2) with (map (fun x : vect n => x + (-(1) * f x * f b ^-1) .* b) (c::l2)).",
            "VernacExtend",
            "51a2d1361a7e7278aa398dc45cb561317c28f9f7"
        ],
        [
            "apply joinl_addmult with (f:= fun b x: vect n => (-(1) * f x * f b ^-1)%f); auto.",
            "VernacExtend",
            "54c8fef9d6c6b0a4fd57c49ca29bab287395d703"
        ],
        [
            "simpl; intros i [[]|Hi]; auto.",
            "VernacExtend",
            "e046cb5b5a7a1ae2f71299f56fd6c196262330c7"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l2; auto with datatypes.",
            "VernacExtend",
            "1dd47df3bf840e6955d1db88434aaaf1f053c64d"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "intros HH; discriminate.",
            "VernacExtend",
            "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
        ],
        [
            "intros y Hy; case in_inv with (1 := Hy).",
            "VernacExtend",
            "a860d3f2e449ab8202689294e36ccc9df792f27e"
        ],
        [
            "intros; subst; auto.",
            "VernacExtend",
            "500ed40eb5eeba21c29aef2459358e703dfa2a8d"
        ],
        [
            "rewrite in_map_iff; intros (u, (H1u,H2u)); subst.",
            "VernacExtend",
            "a630875166a1867c50cfbbc1ccd4750f4f288937"
        ],
        [
            "apply add_hom.",
            "VernacExtend",
            "e0542582207d450cf6aaf0e4322a42de01c7e6a9"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l2; auto with datatypes.",
            "VernacExtend",
            "1dd47df3bf840e6955d1db88434aaaf1f053c64d"
        ],
        [
            "apply scal_hom.",
            "VernacExtend",
            "3712b21d668316f21553e8471f7f1019427d2b80"
        ],
        [
            "rewrite <-cbl1_hom1_equiv; apply H1l2; auto with datatypes.",
            "VernacExtend",
            "1dd47df3bf840e6955d1db88434aaaf1f053c64d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma grade_meet n k1 k2 x y : n < k1 + k2 -> grade n k1 x -> grade n k2 y -> grade n (k1 + k2 - n) (x \u2227 y).",
            "VernacStartTheoremProof",
            "4fa1435ceda816e0f24bca6eefa61177e7505d06"
        ],
        [
            "intros Hk1Hk2 Hx Hy.",
            "VernacExtend",
            "f309b5402e5c4ae8d3c6e433cc58c7647e9ab25a"
        ],
        [
            "assert (Hmx: hom n k1 x) by (apply grade_hom; auto).",
            "VernacExtend",
            "47bce091dcac29b81e75ceebd9ebdb60a4390e8c"
        ],
        [
            "assert (Hmy: hom n k2 y) by (apply grade_hom; auto).",
            "VernacExtend",
            "de4862a2bb3e701eebaf765c38850600f645ef16"
        ],
        [
            "case (Lt.le_or_lt k1 n); intros Hk1.",
            "VernacExtend",
            "33fca4ddf4e1dee0c04e393a76aa03f98a67c2bf"
        ],
        [
            "2: rewrite hom_lt with (1 := Hk1)(2:= Hmx); Grm0; apply grade0.",
            "VernacExtend",
            "5c733db71a017f85249b73bd7aa701aec8907298"
        ],
        [
            "case (Lt.le_lt_or_eq _ _ Hk1); intros H1k1; subst.",
            "VernacExtend",
            "76b3f0dc7f43150e1a8055f8b716e48f56d0e851"
        ],
        [
            "2: rewrite homn_all with (1 := Hmx), meet_scall, meet_alll.",
            "VernacExtend",
            "507671c62f1b3041d36fc736765f6305be824b83"
        ],
        [
            "2: apply grade_scal; rewrite Minus.minus_plus; auto with arith.",
            "VernacExtend",
            "f273512c9fc258d2b2d54af63e0a2fb9a15fead4"
        ],
        [
            "case (Lt.le_or_lt k2 n); intros Hk2.",
            "VernacExtend",
            "54a412bb0c841bafff34f0fa2be8f79c4cf960b7"
        ],
        [
            "2: rewrite hom_lt with (1 := Hk2)(2:= Hmy); Grm0; apply grade0.",
            "VernacExtend",
            "310cd40e84535d5bdb06131faf8c3a1d5711afc0"
        ],
        [
            "case (Lt.le_lt_or_eq _ _ Hk2); intros H1k2; subst.",
            "VernacExtend",
            "2f1302dfd512bde2443f6f019012af418f3b69ce"
        ],
        [
            "2: rewrite homn_all with (1 := Hmy), meet_scalr, meet_allr.",
            "VernacExtend",
            "aa26348a66c5c72a3a2597738f8cc56b73c13330"
        ],
        [
            "2: apply grade_scal; rewrite Plus.plus_comm, Minus.minus_plus; auto with arith.",
            "VernacExtend",
            "3f0ee28afa9768efe1456b24c431bd2392379b9e"
        ],
        [
            "replace (k1 + k2 - n)%nat with (n - ((n - k1) + (n - k2)))%nat; auto.",
            "VernacExtend",
            "d3a3e1b2c69a2be9d6033af790f8875c6e722425"
        ],
        [
            "assert (F1: hom n (k1 + k2 - n) (x \u2227 y)) by (rewrite gradeE in Hx, Hy; case Hx; case Hy; auto).",
            "VernacExtend",
            "0480aff079ba31de7cc91b4abb09149c45b68970"
        ],
        [
            "rewrite dual_invoE with (1 := F1).",
            "VernacExtend",
            "82b1e2db8c02c2c306a2ce70f807c9964b3c6b06"
        ],
        [
            "apply grade_scal.",
            "VernacExtend",
            "b6ca49ccb1030811f67fce5eb75601adb474f585"
        ],
        [
            "rewrite dual_meet.",
            "VernacExtend",
            "deb2d4299ea2a323a22259edc5a2a6f76476e61e"
        ],
        [
            "apply grade_dual; auto.",
            "VernacExtend",
            "1169645462bd93d39f4b7e77475b69653c6dddc9"
        ],
        [
            "apply Plus.plus_lt_reg_l with k1.",
            "VernacExtend",
            "96a29c8141da91f02452c26e91528185ed697403"
        ],
        [
            "rewrite Plus.plus_assoc, <-Minus.le_plus_minus, Plus.plus_comm; auto.",
            "VernacExtend",
            "5a3f1f6192c35162a5f21ce7ff68b9871be4d40f"
        ],
        [
            "apply Plus.plus_lt_compat_r.",
            "VernacExtend",
            "da0083c2f1a889df2e853f354daef74594fa7e95"
        ],
        [
            "apply Plus.plus_lt_reg_l with k2.",
            "VernacExtend",
            "377e784ae95eddf82abbddec240e8adb13f290e1"
        ],
        [
            "rewrite <-Minus.le_plus_minus, Plus.plus_comm; auto.",
            "VernacExtend",
            "c00b8a871b93fb7f3614bc38a849c7dddd1606a3"
        ],
        [
            "apply grade_join; auto; apply grade_dual; auto.",
            "VernacExtend",
            "3e9e18f589e95c0d9ba0ef1a60835ac15212a3ed"
        ],
        [
            "rewrite Minus.minus_plus_simpl_l_reverse with (p := (k1 + k2)%nat).",
            "VernacExtend",
            "b8ea2fca9b88fe408ba4652e4591a9e581383be6"
        ],
        [
            "rewrite (Plus.plus_comm k1), <-!Plus.plus_assoc, (Plus.plus_assoc k1).",
            "VernacExtend",
            "fd0b9ed2a9b9f74ee0963d19da3ed2d035780fa6"
        ],
        [
            "rewrite <-Minus.le_plus_minus, !Plus.plus_assoc; auto.",
            "VernacExtend",
            "bfe0ecc265830d36831499c110abd15f46bfb1e7"
        ],
        [
            "rewrite !(Plus.plus_comm k2), <-!Plus.plus_assoc, <-Minus.le_plus_minus; auto.",
            "VernacExtend",
            "dd7595a511d36386f93db22f4467b23b2afe85c7"
        ],
        [
            "rewrite Plus.plus_assoc, (Plus.plus_comm (k1 + k2)); auto.",
            "VernacExtend",
            "19d96a02026388d419d6739b8eefd029dc1556f5"
        ],
        [
            "rewrite <-Minus.minus_plus_simpl_l_reverse; auto.",
            "VernacExtend",
            "852872520826687cf738ea1218c6a56feb184fe2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Kn := kn p.",
            "VernacDefinition",
            "948e5ac2ee07438b7e536a4b1da66b58cc78d45a"
        ],
        [
            "Fixpoint k2g (n: nat) {struct n} : kn n -> vect n := match n return kn n -> vect n with O => fun k => 0%f | S n1 => fun v => let (k, v1) := v in ([k], k2g n1 v1) end.",
            "VernacFixpoint",
            "d90374e29ec668b15f1e32ad7a85fbd5ab4d7f92"
        ],
        [
            "Notation \"'v_ x\" := (k2g _ x) (at level 9).",
            "VernacNotation",
            "342714966bca80d37cac80066fd1e11640d35459"
        ],
        [
            "Notation \"'kn n\" := (vn_eparams p (pred n)) (at level 10).",
            "VernacNotation",
            "8c6672ce76dbc58c4b639052879f59d454b1e551"
        ],
        [
            "Lemma k2g0 n : 'v_0 = 0 :> vect n.",
            "VernacStartTheoremProof",
            "341713f8d746d1b18c2cab6d55465ea0e3b497e2"
        ],
        [
            "induction n as [|n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "simpl in IH; rewrite IH; auto.",
            "VernacExtend",
            "e1815ece4e1854e7221a579ebb1f24ffc3908dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma k2g_add n x y : 'v_(x + y) = 'v_x + 'v_y :> vect n.",
            "VernacStartTheoremProof",
            "018a9b319a087767d17981e5e4cf704ae6e73aee"
        ],
        [
            "induction n as [|n IH]; simpl; Krm0.",
            "VernacExtend",
            "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
        ],
        [
            "destruct x as [k1 x]; destruct y as [k2 y]; simpl.",
            "VernacExtend",
            "95997afc2bae35bcf78d0be33c836f4ef2883625"
        ],
        [
            "generalize (IH x y); simpl; intros HH; rewrite HH.",
            "VernacExtend",
            "9d78cfb24db49deeab486467a03feba133f6da87"
        ],
        [
            "rewrite <-addk; Vfold n; Grm0.",
            "VernacExtend",
            "a295fd63e7be1819f66d82c33f8d1f39c679a1d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma k2g_scal n k x : 'v_(k .* x) = (k: K) .* 'v_x :> vect n.",
            "VernacStartTheoremProof",
            "b3173502e8f73e2f89807501a3fb04127b0b5f74"
        ],
        [
            "induction n as [|n IH]; simpl; Krm0.",
            "VernacExtend",
            "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
        ],
        [
            "destruct x as [k1 x].",
            "VernacExtend",
            "cdb7a6f2bafca2b1cb0e1bbce0b22e90deea45e7"
        ],
        [
            "generalize (IH k x); simpl; intros HH; rewrite HH.",
            "VernacExtend",
            "c264d3bf0d2fbf28cae4fb3c768d0042b1c57683"
        ],
        [
            "rewrite <-scalk; Vfold n; Grm0.",
            "VernacExtend",
            "84446ec2c8e0b63fa4a8a7a785d542d834c093f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma k2g_unit n i : i < n -> 'v_('e_i)%Kn = 'e_i :> vect n.",
            "VernacStartTheoremProof",
            "2f881bf3db83f7bd061313d8b756ee269a39eea0"
        ],
        [
            "generalize i; clear i.",
            "VernacExtend",
            "208b471d15be521271abdaf4ee90e51a9a779dca"
        ],
        [
            "induction n as [|n IH]; Krm0.",
            "VernacExtend",
            "51ba0b01fbd5a260247a6c42ec2692b4590dc0ed"
        ],
        [
            "intros i Hi; auto; contradict Hi; auto with arith.",
            "VernacExtend",
            "cdb67c23669a73519b70b3dce9f952c46e43998a"
        ],
        [
            "intros [|i] Hi; simpl; rewrite ?k2g0; rewrite ?IH; auto with arith.",
            "VernacExtend",
            "1adf44b1d010b0b6d135e1e6707b2e1f2e06a600"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma k2g_hom n x : hom n 1 ('v_x).",
            "VernacStartTheoremProof",
            "04cbf48f2b3858cbdd75163ac2daec4a8fa20ef5"
        ],
        [
            "induction n as [|n IH]; Krm0.",
            "VernacExtend",
            "51ba0b01fbd5a260247a6c42ec2692b4590dc0ed"
        ],
        [
            "simpl; rewrite eqKI; auto.",
            "VernacExtend",
            "49a4c5e57a1b17448a6ff016ab34dc896e3fa5dc"
        ],
        [
            "destruct x as [k x]; simpl.",
            "VernacExtend",
            "c33ae05126dbdf39b85be635ed5b93ac89735c81"
        ],
        [
            "rewrite hom0K; apply (IH x).",
            "VernacExtend",
            "7e8f017b20bcae871189cec37ec854e89aec3309"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hom1E n x : hom n 1 x -> exists y, x = 'v_y.",
            "VernacStartTheoremProof",
            "d952ec3e54ab49980608426ef8b647b4f277e2b6"
        ],
        [
            "induction n as [|n IH]; simpl; Krm0.",
            "VernacExtend",
            "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
        ],
        [
            "case eqK_spec; auto; intros; subst; try discriminate.",
            "VernacExtend",
            "96df88e2be347e1084f5508ea25a790afb16e19c"
        ],
        [
            "exists tt; auto.",
            "VernacExtend",
            "653362250016498b8c75f29d155a0285bdad3aff"
        ],
        [
            "destruct x as [x1 x2].",
            "VernacExtend",
            "e78a3fd9abb831281a0bee6766d24ebb789f6bc1"
        ],
        [
            "rewrite andbP; intros (Hx1, Hx2).",
            "VernacExtend",
            "590c0ec7507980da4f735be3b46bc51d734a1d91"
        ],
        [
            "case (IH _ Hx2); intros y Hy.",
            "VernacExtend",
            "0e742f48cdd579c38ae00767dd4a69eaf71123ff"
        ],
        [
            "exists ('C[x1], y).",
            "VernacExtend",
            "69270fc402a4bbefc10ed8bda0b5c11f2999998f"
        ],
        [
            "rewrite <-(hom0E _ _ Hx1), <-Hy; auto.",
            "VernacExtend",
            "e69acb73b7178156256a8298ce8863d6d9db2ac2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma k2glift n x : 'v_(Kn.lift p n x) = ('v_x)^'l.",
            "VernacStartTheoremProof",
            "e589443ade61c79fedb390acd4f334bb668597ab"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pscal_join n x y : 'v_x \u2228 '@('v_y) = ((x [.] y)%Kn:K) .* E :> vect n.",
            "VernacStartTheoremProof",
            "6afb1bed2b4854cdb67786b0fecaf6761bc9e060"
        ],
        [
            "induction n as [|n IH]; simpl; Krm0; Krm1.",
            "VernacExtend",
            "c8dfb7fbffaf5f350c80a9649d64109a369aafe5"
        ],
        [
            "destruct x as [k x]; destruct y as [h y]; Vfold n.",
            "VernacExtend",
            "5bcc3c72f16c28b55f69345b3e7760de42f5fe51"
        ],
        [
            "Vrm0.",
            "VernacExtend",
            "1a4db5f32ec02ee3a48ac3403c64886dde58598f"
        ],
        [
            "rewrite !dualk, !joinkl; simpl expK; Grm0; Krm1.",
            "VernacExtend",
            "350d11ac4125aa73d356f3bdd229d18f1c35e508"
        ],
        [
            "rewrite !(conjf_hom _ _ _ (k2g_hom _ _)); simpl expK; Grm0; Krm1.",
            "VernacExtend",
            "f1e0f7fbb411054fcfdc22ea9948e3bec07caac9"
        ],
        [
            "rewrite dual_scal, !join_scall, !join_scalr, IH.",
            "VernacExtend",
            "9c69cb3fc4ea509600e9e91e7b05ba790c2bef92"
        ],
        [
            "rewrite <- scal_multE, (scal_addEl (vn_eparams n)); auto.",
            "VernacExtend",
            "5f3514278394b212cc79abcb686f1cc4eb9c68e8"
        ],
        [
            "rewrite <-!scal_multE; Krm1.",
            "VernacExtend",
            "15a51c38d3f79bf62384829156b3ad4653371f10"
        ],
        [
            "rewrite (join_allhr _ _ _ (k2g_hom _ _)); Vrm0.",
            "VernacExtend",
            "e598d621eb29338bc779310f4f42911aee9e7a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pscal_meet n x y : 'v_x \u2227 '@('v_y) = ((x [.] y)%Kn:K) .* 1 :> vect n.",
            "VernacStartTheoremProof",
            "b28ed13ae94ef6bc1e4a412c853a2d303ddcbd9b"
        ],
        [
            "destruct n as [|n].",
            "VernacExtend",
            "e9a6c38314370079277fe54649bef28abc1a6c0c"
        ],
        [
            "simpl; Krm0.",
            "VernacExtend",
            "552e56ea875b09bd7bedc9f4fbd206ad00815d4d"
        ],
        [
            "rewrite Kn.pscal_com, <-dual_all, <-dual_scal, <-pscal_join, dual_join; auto.",
            "VernacExtend",
            "26b32db5a7d091c097214e98daadef987086c3b8"
        ],
        [
            "rewrite dual_invo with (k := 1%nat).",
            "VernacExtend",
            "9f44646fcd754069723e9246ba3d5621f320adf1"
        ],
        [
            "2: apply k2g_hom.",
            "VernacExtend",
            "6757a111d5e05690ca5f0980bc00768efd4b74ab"
        ],
        [
            "rewrite meet_hom_com with (k2 := 1%nat) (k1 := (n.+1 - 1)%nat).",
            "VernacExtend",
            "e3a35fb7b9064c637b609b2f644868e322741ef6"
        ],
        [
            "2: apply dual_hom; apply k2g_hom.",
            "VernacExtend",
            "535a90fd8b97204a44c5bfb6aac481bbc2532a84"
        ],
        [
            "2: apply k2g_hom.",
            "VernacExtend",
            "6757a111d5e05690ca5f0980bc00768efd4b74ab"
        ],
        [
            "rewrite meet_scalr.",
            "VernacExtend",
            "08456ff23be16458a5d89702793dc23aa94cad0c"
        ],
        [
            "replace ((n.+1 + (n.+1 - 1)) * (n.+1 + 1))%nat with (2 * ((n.+1 -1) * n.+2) + (1 * n .+2))%nat.",
            "VernacExtend",
            "098a1fa64245af07ab23b093f1d9740a7818d4d8"
        ],
        [
            "rewrite expKm1_2E; auto.",
            "VernacExtend",
            "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
        ],
        [
            "simpl minus; rewrite <-Minus.minus_n_O.",
            "VernacExtend",
            "e96b8a2143378aefa0f547b3bf5f9bacf74d5214"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition V0 := genk (dim p) 0.",
            "VernacDefinition",
            "a3a37bc25e9c598524e22f4625ee311d17a196ff"
        ],
        [
            "Definition V1 := genk (dim p) 1.",
            "VernacDefinition",
            "c45efe8b4a155131926b70622af6d00ecd0c1084"
        ],
        [
            "Definition Vect := vect p.",
            "VernacDefinition",
            "76f031a64c5d2338a2c5416fe37e8d51d05e86a0"
        ],
        [
            "Definition Veq: Vect -> Vect -> bool := eq p.",
            "VernacDefinition",
            "9f0a7cc332c752776ac2e054a9a917b74337fbd3"
        ],
        [
            "Definition Vadd: Vect -> Vect -> Vect := add p.",
            "VernacDefinition",
            "08acfdcf130983d6764da19cc4bc7deae19cec3d"
        ],
        [
            "Definition Vscal: K -> Vect -> Vect := scal (dim p).",
            "VernacDefinition",
            "1e0aec9b5ec1a12b45e0712a09b9f5a438651cf0"
        ],
        [
            "Definition Vgen := gen p.",
            "VernacDefinition",
            "11193bde0586251d1e4b0d72a75fae92ef688103"
        ],
        [
            "Definition Vgenk := genk p.",
            "VernacDefinition",
            "c4361aa2a5ce6b1bc07f34d93e7b5497cb0fd0b6"
        ],
        [
            "Definition Vconj: bool -> Vect -> Vect := conj (dim p).",
            "VernacDefinition",
            "fb73174a291f62519f8b085cb7a817693caf9aad"
        ],
        [
            "Definition Vjoin: Vect -> Vect -> Vect := join (dim p).",
            "VernacDefinition",
            "6f26d1bf8988e26d958e08bbf9c1351c228198b9"
        ],
        [
            "Definition Vmeet: Vect -> Vect -> Vect := meet (dim p).",
            "VernacDefinition",
            "a7989e4f0005305e619354778f2395ed006644da"
        ],
        [
            "Definition Vcontra: Kn -> Vect -> Vect := contra (dim p).",
            "VernacDefinition",
            "02895c87ef0d407a62b8b58bfba310d51a0ab8a5"
        ],
        [
            "Definition Vdual: Vect -> Vect := dual (dim p).",
            "VernacDefinition",
            "d704bde7420e93939b314b64d1d75c67cee0a40b"
        ],
        [
            "Definition Vdecompose: Vect -> option (list Vect) := decompose (dim p).",
            "VernacDefinition",
            "7c9bf1d76858df3e3664c9683c2e7ed40af62f2f"
        ],
        [
            "Definition K2G: Kn -> Vect := k2g p.",
            "VernacDefinition",
            "4721f49864874e4e133308d129f4a03d8373c951"
        ],
        [
            "Definition v_eparams := Build_eparams Vect K V0 Veq Vadd Vscal.",
            "VernacDefinition",
            "fd0dc0e1f77691f1e9b05cd0a4d43ad586964ca5"
        ],
        [
            "Definition f: vparamsProp (Kn.v_eparams p) := (Kn.fn p Hp p).",
            "VernacDefinition",
            "10f35dc3eb6f52f7a63bee702510e36e9bef26fa"
        ],
        [
            "End Vect.",
            "VernacEndSegment",
            "3bbb84864cebd498265f1df88e787c34b7fc5655"
        ],
        [
            "Delimit Scope Gn_scope with Gn.",
            "VernacDelimiters",
            "244de4cbe59923c07f7cc38d1a7fd516aae74578"
        ],
        [
            "Notation \" 'e_ p\" := (gen _ _ p) : Gn_scope.",
            "VernacNotation",
            "712b61d7a88d83ed271438b2b0c101d76df61f09"
        ],
        [
            "Notation \" [ k ] \" := (genk _ _ k) (at level 9) : Gn_scope.",
            "VernacNotation",
            "6bac913d6dfe53a8b7d233116062bc8509c30b12"
        ],
        [
            "Require Import QArith.",
            "VernacRequire",
            "7ecdd22bf23e2b094e459afc29d3249890e827fd"
        ],
        [
            "Open Scope Q_scope.",
            "VernacOpenCloseScope",
            "4c58f8ce180e6a49a4cec92f1732987d3249bb54"
        ],
        [
            "Definition Qparams (n:nat) := Build_params n (Build_fparams Q 0%Q 1%Q Qeq_bool Qopp Qplus Qmult Qinv) .",
            "VernacDefinition",
            "89ab58c3fd1ee5909c0d957a1764b895e6bc0bcb"
        ],
        [
            "Module Ex2D.",
            "VernacDefineModule",
            "c626a7a61b76e5cdc88df61c9256421e3d42fe5e"
        ],
        [
            "Local Definition p := Qparams 2.",
            "VernacDefinition",
            "4c7f9bfada9f8b7cd3915df55eea0bfabc4985ab"
        ],
        [
            "Notation \"[[ X: x , Y: y , X**Y: xy ]]\" := ((xy,x),(y,0)).",
            "VernacNotation",
            "af46e325fc0e6208de585b0367b0a0d97b23724d"
        ],
        [
            "Definition X := (Vgen p 0).",
            "VernacDefinition",
            "e669ab28b2a66063e033543afefd11f1aac573bf"
        ],
        [
            "Eval compute in X.",
            "VernacCheckMayEval",
            "981d1af3d4511a83a87f91b87ca2bfd2204ff43e"
        ],
        [
            "Definition Y := (Vgen p 1).",
            "VernacDefinition",
            "c3d6f3455964dc571ab997de85abf5feb3acf0ba"
        ],
        [
            "Eval compute in Y.",
            "VernacCheckMayEval",
            "987d2d74c8ccca4e755b6af478bd01885ed70bcb"
        ],
        [
            "Notation \"x '\u2228' y\" := (Vjoin p x y) (at level 40, left associativity).",
            "VernacNotation",
            "a159bf5bedf676ccaa7fc6ed49c84873df452fd1"
        ],
        [
            "Notation \"x + y\" := (Vadd p x y).",
            "VernacNotation",
            "2391faa9249598f7e1436470c844ab824c5daf2d"
        ],
        [
            "Notation \"k .* x\" := (Vscal p k x).",
            "VernacNotation",
            "8204de03bf961ecfe861ced0de729b2c6f8ad1f7"
        ],
        [
            "Notation \"x '\u2227' y\" := (Vmeet p x y) (at level 40, left associativity).",
            "VernacNotation",
            "af0bb3c19c94e613036f3d3aa9b6df9e2d54d351"
        ],
        [
            "Notation \"'@ x\" := (Vdual p x) (at level 100).",
            "VernacNotation",
            "cd5f6110f825404b7da48ec954e11c41d0683a3e"
        ],
        [
            "Eval vm_compute in (X \u2228 Y) \u2227 (X \u2228 Y).",
            "VernacCheckMayEval",
            "077d44d50cbc2a6af2f19691fe224a647e415705"
        ],
        [
            "Eval vm_compute in '@(X + Y).",
            "VernacCheckMayEval",
            "4d3d9ef4a2ef336b70240eb67fd6b0583fc93a13"
        ],
        [
            "Eval vm_compute in (X + Y) \u2228 '@(X + Y).",
            "VernacCheckMayEval",
            "4c60055e7bffb131d0281c7ec9da72c1d098dc36"
        ],
        [
            "End Ex2D.",
            "VernacEndSegment",
            "3379d4b2ab85912ce969ada05238c9363ed3255b"
        ],
        [
            "Module Ex3D.",
            "VernacDefineModule",
            "2561afe6dbc80d1d772703673a1c1179332d190a"
        ],
        [
            "Local Definition p := Qparams 3.",
            "VernacDefinition",
            "41849f32aed7fd95efaee6d7834dc72947966ebc"
        ],
        [
            "Notation \"[[ X: x , Y: y , Z: z , X**Y: xy , Y**Z: yz , X**Z: xz , X**Y**Z: xyz ]]\" := ((((xyz,xy),(xz,x)), ((yz,y),(z,0)))).",
            "VernacNotation",
            "f9a2a802a95671ba7f2817486682cc41b34668a5"
        ],
        [
            "Definition X := (Vgen p 0).",
            "VernacDefinition",
            "e669ab28b2a66063e033543afefd11f1aac573bf"
        ],
        [
            "Eval compute in X.",
            "VernacCheckMayEval",
            "981d1af3d4511a83a87f91b87ca2bfd2204ff43e"
        ],
        [
            "Definition Y := (Vgen p 1).",
            "VernacDefinition",
            "c3d6f3455964dc571ab997de85abf5feb3acf0ba"
        ],
        [
            "Eval compute in Y.",
            "VernacCheckMayEval",
            "987d2d74c8ccca4e755b6af478bd01885ed70bcb"
        ],
        [
            "Definition Z := (Vgen p 2).",
            "VernacDefinition",
            "4d3d7e448def4775f785c01d9265a2410fc7addf"
        ],
        [
            "Eval compute in Z.",
            "VernacCheckMayEval",
            "ee6cfd98072087255617c9656ce46f3d4a3ac610"
        ],
        [
            "Notation \"x '\u2228' y\" := (Vjoin p x y) (at level 40, left associativity).",
            "VernacNotation",
            "a159bf5bedf676ccaa7fc6ed49c84873df452fd1"
        ],
        [
            "Notation \"x + y\" := (Vadd p x y).",
            "VernacNotation",
            "2391faa9249598f7e1436470c844ab824c5daf2d"
        ],
        [
            "Notation \"k .* x\" := (Vscal p k x).",
            "VernacNotation",
            "8204de03bf961ecfe861ced0de729b2c6f8ad1f7"
        ],
        [
            "Notation \"x '\u2227' y\" := (Vmeet p x y) (at level 40, left associativity).",
            "VernacNotation",
            "af0bb3c19c94e613036f3d3aa9b6df9e2d54d351"
        ],
        [
            "Notation \"'@ x\" := (Vdual p x) (at level 100).",
            "VernacNotation",
            "cd5f6110f825404b7da48ec954e11c41d0683a3e"
        ],
        [
            "Eval vm_compute in '@(Vgen p 3).",
            "VernacCheckMayEval",
            "66e2075107a7b13e572632eaf2204002192ab555"
        ],
        [
            "Eval vm_compute in (X \u2228 Z) \u2227 (Y \u2228 Z).",
            "VernacCheckMayEval",
            "a4a3f628e8a1faed87f3ee664cfa06433d9c139d"
        ],
        [
            "Eval vm_compute in '@((X\u2228Y)\u2227 ( Z)).",
            "VernacCheckMayEval",
            "057c8af0f8b3c86cfefa2fd61fe3d3d97804a040"
        ],
        [
            "Eval vm_compute in (X + Y) \u2228 '@(X + Y).",
            "VernacCheckMayEval",
            "4c60055e7bffb131d0281c7ec9da72c1d098dc36"
        ],
        [
            "Eval vm_compute in Vdecompose p ((X \u2228 Y) \u2227 (Y \u2228 Z)).",
            "VernacCheckMayEval",
            "010102e11451cab1ca5c2caa9fd62f9874f418ea"
        ],
        [
            "Eval vm_compute in Vdecompose p ((X + Y) \u2228 (X + Z)).",
            "VernacCheckMayEval",
            "9b169a48fa4ab3d155068ccd4a30c7b6b16c8b28"
        ],
        [
            "Eval vm_compute in Vdecompose p ((X + Y + Z) \u2228 (X + Z) \u2228 (X + Y)).",
            "VernacCheckMayEval",
            "94a7d9070437d3f69bcc75ac55d20bd260e02213"
        ],
        [
            "Eval vm_compute in Vdecompose p ((X + Y) \u2228 (Y + Z)).",
            "VernacCheckMayEval",
            "68f24844c6d3be68156513b25a26db2ef355f828"
        ],
        [
            "Eval vm_compute in (X + Y) \u2228 (X + Z) + (-1#1)%Q .* (((-1#1)%Q .* Y + Z) \u2228 ((-1#1)%Q .* (X + Y))).",
            "VernacCheckMayEval",
            "3622460b50803e60357760d59bbff0f05acbd0ac"
        ],
        [
            "Eval vm_compute in ((-1#1)%Q .* Y + Z) \u2228 (X + Y) \u2228 (X + Z).",
            "VernacCheckMayEval",
            "e27c56300651136f67f26dea07a61274b8d93035"
        ],
        [
            "Eval vm_compute in (X \u2228 Y \u2228 Z) \u2228 (X \u2228 Y \u2228 Z).",
            "VernacCheckMayEval",
            "90f5188853777e56381eefa7df6b298710e06ca4"
        ],
        [
            "Eval vm_compute in (X + Y + Z) \u2228 (X + Y + Z).",
            "VernacCheckMayEval",
            "0d20be8a628c96694ddef9803733fc25df0dfc21"
        ],
        [
            "Eval vm_compute in Z \u2228 Y \u2228 X.",
            "VernacCheckMayEval",
            "75fbe828ea4b4ac920529b114ec05679b2464250"
        ],
        [
            "Eval vm_compute in X \u2228 Z.",
            "VernacCheckMayEval",
            "ac30d3eb589bbaaf1e35b7fbf718ae383ce07b7c"
        ],
        [
            "Eval vm_compute in Z \u2228 X.",
            "VernacCheckMayEval",
            "bd53878cf0df02f708319a0b82a67719130418c3"
        ],
        [
            "Eval vm_compute in X \u2228 Y \u2228 Z.",
            "VernacCheckMayEval",
            "9f77f1a21db88544cd9ec65536d97f68e8acebda"
        ],
        [
            "Eval vm_compute in Z \u2228 X \u2228 Y.",
            "VernacCheckMayEval",
            "16e9c9a0669ad0008de4376752e76415a98283b8"
        ],
        [
            "Eval vm_compute in Y \u2228 X \u2228 Z.",
            "VernacCheckMayEval",
            "f09eb3991dc57e7feca7dd8502fee4d0ef05150f"
        ],
        [
            "Eval vm_compute in Y \u2228 X.",
            "VernacCheckMayEval",
            "95363a9336ae2d671d008576af284aeef6f59380"
        ],
        [
            "End Ex3D.",
            "VernacEndSegment",
            "9278dcd7d28d8d79f6850440703f17a960711663"
        ],
        [
            "Module Ex4D.",
            "VernacDefineModule",
            "bae8b823af4b2e03083103b61d08285bbe435216"
        ],
        [
            "Local Definition p := Qparams 4.",
            "VernacDefinition",
            "6dad08db954ffff717587006e1437c3c940f2cc3"
        ],
        [
            "Notation \" '[[' 'X:' x ',' 'Y:' y ',' 'Z:' z , 'T:' t ',' 'X**Y:' xy ',' 'X**Z:' xz ',' 'X**T:' xt ',' 'Y**Z:' yz ',' 'Y**T:' yt ',' 'Z**T:' zt ',' 'X**Y**Z:' xyz ',' 'X**Y**T:' xyt ',' 'X**Z**T:' xzt ',' 'Y**Z**T:' yzt ',' 'X**Y**Z**T:' xyzt ',' 'K:' vv ']]'\" := ((((xyzt, xyz), (xyt, xy)), ((xzt, xz), (xt, x))) , (((yzt, yz), (yt, y)), ((zt,z), (t, vv)))).",
            "VernacNotation",
            "7f4e1c977a7f72234de6d69f7983f89a2332aa84"
        ],
        [
            "Definition X := (Vgen p 0).",
            "VernacDefinition",
            "e669ab28b2a66063e033543afefd11f1aac573bf"
        ],
        [
            "Eval compute in X.",
            "VernacCheckMayEval",
            "981d1af3d4511a83a87f91b87ca2bfd2204ff43e"
        ],
        [
            "Definition Y := (Vgen p 1).",
            "VernacDefinition",
            "c3d6f3455964dc571ab997de85abf5feb3acf0ba"
        ],
        [
            "Eval compute in Y.",
            "VernacCheckMayEval",
            "987d2d74c8ccca4e755b6af478bd01885ed70bcb"
        ],
        [
            "Definition Z := (Vgen p 2).",
            "VernacDefinition",
            "4d3d7e448def4775f785c01d9265a2410fc7addf"
        ],
        [
            "Eval compute in Z.",
            "VernacCheckMayEval",
            "ee6cfd98072087255617c9656ce46f3d4a3ac610"
        ],
        [
            "Definition T := (Vgen p 3).",
            "VernacDefinition",
            "47d8758661a03d6d77d6aa51df5307a47a970ad7"
        ],
        [
            "Eval compute in T.",
            "VernacCheckMayEval",
            "8e533fef4dc8382e1df8cb8b95a661a96b6ef05b"
        ],
        [
            "Notation \"x '\u2228' y\" := (Vjoin p x y) (at level 40, left associativity).",
            "VernacNotation",
            "a159bf5bedf676ccaa7fc6ed49c84873df452fd1"
        ],
        [
            "Notation \"x + y\" := (Vadd p x y).",
            "VernacNotation",
            "2391faa9249598f7e1436470c844ab824c5daf2d"
        ],
        [
            "Notation \"k .* x\" := (Vscal p k x).",
            "VernacNotation",
            "8204de03bf961ecfe861ced0de729b2c6f8ad1f7"
        ],
        [
            "Notation \"x '\u2227' y\" := (Vmeet p x y) (at level 40, left associativity).",
            "VernacNotation",
            "af0bb3c19c94e613036f3d3aa9b6df9e2d54d351"
        ],
        [
            "Notation \"'@ x\" := (Vdual p x) (at level 100).",
            "VernacNotation",
            "cd5f6110f825404b7da48ec954e11c41d0683a3e"
        ],
        [
            "Notation \"#< l , x ># \" := (Vcontra p l x).",
            "VernacNotation",
            "c5672a011d8529b37fccb564152c7342bfa6b3ce"
        ],
        [
            "Eval vm_compute in '@X.",
            "VernacCheckMayEval",
            "589cc253f6c4fcb806b87a19fd3a75fee1432d39"
        ],
        [
            "Eval vm_compute in (X + Y) \u2228 '@(X + Y).",
            "VernacCheckMayEval",
            "4c60055e7bffb131d0281c7ec9da72c1d098dc36"
        ],
        [
            "Definition X' := (1, (0, (0, (0, tt)))).",
            "VernacDefinition",
            "68a6137a0f7591fbd56de20bf670c278b84f0171"
        ],
        [
            "Definition Y' := (0, (1, (0, (0, tt)))).",
            "VernacDefinition",
            "4b818b0ed3224cd09431eb87248badba8c4b1e9a"
        ],
        [
            "Definition Z' := (0, (0, (1, (0, tt)))).",
            "VernacDefinition",
            "cf521270c59d6cd73667f83481567d27463e953a"
        ],
        [
            "Definition T' := (0, (0, (0, (1, tt)))).",
            "VernacDefinition",
            "12adf4ef6df0847e1060c089cc51442dd0450c11"
        ],
        [
            "Definition U := (X + Y) \u2228 Z.",
            "VernacDefinition",
            "6b86955c9baba2339e4a91c20607aa4e8b68e12c"
        ],
        [
            "Eval vm_compute in U.",
            "VernacCheckMayEval",
            "f2b094347440c163408aec67a32ed9452a012009"
        ],
        [
            "Definition fxy := #<Y', #< X', U ># >#.",
            "VernacDefinition",
            "25677cee0b96c2f7851c3062199ba51450cc8443"
        ],
        [
            "Definition fxz := #<Z', #< X', U ># >#.",
            "VernacDefinition",
            "7b07ee22d472f77e1372ee8cf489e58d4c462244"
        ],
        [
            "Definition fxt := #<T', #< X', U ># >#.",
            "VernacDefinition",
            "dd7d54b37560f6a19c0f5498d604c0d8806fe9b7"
        ],
        [
            "Definition fyz := #<Z', #< Y', U ># >#.",
            "VernacDefinition",
            "65323070e098f5a9a075f6a7b70c0d14eae3c14b"
        ],
        [
            "Definition fyt := #<T', #< Y', U ># >#.",
            "VernacDefinition",
            "4599208b71054c3bbe0edc7355d38b566eb86bb1"
        ],
        [
            "Definition fzt := #<T', #< Z', U ># >#.",
            "VernacDefinition",
            "6813e336477a219f9dee5cd9698dc5fbcec41197"
        ],
        [
            "Eval vm_compute in fxy.",
            "VernacCheckMayEval",
            "fabe3b97b41544b40b0fb177cbd0f658e2bd8e08"
        ],
        [
            "Eval vm_compute in #< Y', X>#.",
            "VernacCheckMayEval",
            "530c9bd7dc1659605ff9fd12a8cecc62b1dfbac3"
        ],
        [
            "Eval vm_compute in (X \u2228 Y \u2228 Z) \u2228 (X \u2228 Y \u2228 Z).",
            "VernacCheckMayEval",
            "90f5188853777e56381eefa7df6b298710e06ca4"
        ],
        [
            "Eval vm_compute in (X + Y + Z) \u2228 (X + Y + Z).",
            "VernacCheckMayEval",
            "0d20be8a628c96694ddef9803733fc25df0dfc21"
        ],
        [
            "Eval vm_compute in Z \u2228 Y \u2228 X.",
            "VernacCheckMayEval",
            "75fbe828ea4b4ac920529b114ec05679b2464250"
        ],
        [
            "Eval vm_compute in X \u2228 Z.",
            "VernacCheckMayEval",
            "ac30d3eb589bbaaf1e35b7fbf718ae383ce07b7c"
        ],
        [
            "Eval vm_compute in Z \u2228 X.",
            "VernacCheckMayEval",
            "bd53878cf0df02f708319a0b82a67719130418c3"
        ],
        [
            "Eval vm_compute in X \u2228 Y \u2228 Z.",
            "VernacCheckMayEval",
            "9f77f1a21db88544cd9ec65536d97f68e8acebda"
        ],
        [
            "Eval vm_compute in Z \u2228 X \u2228 Y.",
            "VernacCheckMayEval",
            "16e9c9a0669ad0008de4376752e76415a98283b8"
        ],
        [
            "Eval vm_compute in Y \u2228 X \u2228 Z.",
            "VernacCheckMayEval",
            "f09eb3991dc57e7feca7dd8502fee4d0ef05150f"
        ],
        [
            "Eval vm_compute in Y \u2228 X.",
            "VernacCheckMayEval",
            "95363a9336ae2d671d008576af284aeef6f59380"
        ],
        [
            "Eval vm_compute in X \u2228 T.",
            "VernacCheckMayEval",
            "d8e16cf9a3cb84b2d6001db3a22d5cab2ee8faf5"
        ],
        [
            "Eval vm_compute in T \u2228 X.",
            "VernacCheckMayEval",
            "e612008005e222d74c868ed6961b2c2f1cb8c8b9"
        ],
        [
            "Eval vm_compute in Vconj p false (Z \u2228 T) \u2228 (X \u2228 Y).",
            "VernacCheckMayEval",
            "c1bf933a3ffa51a5b9cf844db5bf6bcecd4e95c0"
        ],
        [
            "Eval vm_compute in (X \u2228 Y \u2228 Z \u2228 T) \u2228 (X \u2228 Y \u2228 Z \u2228 T).",
            "VernacCheckMayEval",
            "c1f4d8034c2baebed5bafc3a169e704f398d6d03"
        ],
        [
            "End Ex4D.",
            "VernacEndSegment",
            "d0bc66f923a9d4d2c62393ab64752e6af7be5ec4"
        ],
        [
            "Module Ex5D.",
            "VernacDefineModule",
            "70a4506a04bc011fb929ab442a3cd134d49f7322"
        ],
        [
            "Local Definition p := Qparams 5.",
            "VernacDefinition",
            "8d90f46d203a930b3484dc84961ad1592a166d93"
        ],
        [
            "Notation \" [[ X: x , Y: y , Z: z , T: t , U: u , X**Y: xy , X**Z: xz , X**T: xt , X**U: xu , Y**Z: yz , Y**T: yt , Y**U: yu , Z**T: zt , Z**U: zu , T**U: tu , X**Y**Z: xyz , X**Y**T: xyt , X**Y**U: xyu , X**Z**T: xzt , X**Z**U: xzu , X**T**U: xtu , Y**Z**T: yzt , Y**Z**U: yzu , Y**T**U: ytu , Z**T**U: ztu , X**Y**Z**T: xyzt , X**Y**Z**U: xyzu , X**Y**T**U: xytu , X**Z**T**U: xztu , Y**Z**T**U: yztu , X**Y**Z**T**U: xyztu , 'K:' vv ]]\" := ( ((((xyztu, xyzt), (xyzu, xyz)), ((xytu, xyt), (xyu, xy))) , (((xztu, xzt), (xzu, xz)), ((xtu,xt), (xu, x)))), ((((yztu, yzt), (yzu, yz)), ((ytu, yt), (yu, y))) , (((ztu, zt), (zu, z)), ((tu,t), (u, vv))))).",
            "VernacNotation",
            "4c2311ea4e2c253d407affac772a75c8a4dcf347"
        ],
        [
            "Definition X := (Vgen p 0).",
            "VernacDefinition",
            "e669ab28b2a66063e033543afefd11f1aac573bf"
        ],
        [
            "Eval compute in X.",
            "VernacCheckMayEval",
            "981d1af3d4511a83a87f91b87ca2bfd2204ff43e"
        ],
        [
            "Definition Y := (Vgen p 1).",
            "VernacDefinition",
            "c3d6f3455964dc571ab997de85abf5feb3acf0ba"
        ],
        [
            "Eval compute in Y.",
            "VernacCheckMayEval",
            "987d2d74c8ccca4e755b6af478bd01885ed70bcb"
        ],
        [
            "Definition Z := (Vgen p 2).",
            "VernacDefinition",
            "4d3d7e448def4775f785c01d9265a2410fc7addf"
        ],
        [
            "Eval compute in Z.",
            "VernacCheckMayEval",
            "ee6cfd98072087255617c9656ce46f3d4a3ac610"
        ],
        [
            "Definition T := (Vgen p 3).",
            "VernacDefinition",
            "47d8758661a03d6d77d6aa51df5307a47a970ad7"
        ],
        [
            "Eval compute in T.",
            "VernacCheckMayEval",
            "8e533fef4dc8382e1df8cb8b95a661a96b6ef05b"
        ],
        [
            "Definition U := (Vgen p 4).",
            "VernacDefinition",
            "106beacd7460a54120db6edd2d909f88398c26c6"
        ],
        [
            "Eval compute in U.",
            "VernacCheckMayEval",
            "cf26d558dc488ee08f983003e079313c88b1474e"
        ],
        [
            "Notation \"x '\u2228' y\" := (Vjoin p x y) (at level 40, left associativity).",
            "VernacNotation",
            "a159bf5bedf676ccaa7fc6ed49c84873df452fd1"
        ],
        [
            "Notation \"x + y\" := (Vadd p x y).",
            "VernacNotation",
            "2391faa9249598f7e1436470c844ab824c5daf2d"
        ],
        [
            "Notation \"k .* x\" := (Vscal p k x).",
            "VernacNotation",
            "8204de03bf961ecfe861ced0de729b2c6f8ad1f7"
        ],
        [
            "Notation \"x '\u2227' y\" := (Vmeet p x y) (at level 40, left associativity).",
            "VernacNotation",
            "af0bb3c19c94e613036f3d3aa9b6df9e2d54d351"
        ],
        [
            "Notation \"'@ x\" := (Vdual p x) (at level 100).",
            "VernacNotation",
            "cd5f6110f825404b7da48ec954e11c41d0683a3e"
        ],
        [
            "Eval vm_compute in Vconj p false (T \u2228 U) \u2228 (X \u2228 Y \u2228 Z).",
            "VernacCheckMayEval",
            "7e727f9c9be4a07542011cd52db7e0194c5bacf9"
        ],
        [
            "Eval vm_compute in Vconj p false (X \u2228 Y \u2228 Z \u2228 T \u2228 U).",
            "VernacCheckMayEval",
            "c78cf06d51926af26ee4c732115a20ad22799778"
        ],
        [
            "End Ex5D.",
            "VernacEndSegment",
            "afb7fe6164f00d43a5eac05c3972033f1783f7d6"
        ],
        [
            "Module Ex6D.",
            "VernacDefineModule",
            "f766ca5ab5b62a8364223d2e4e92d2f6930fbf13"
        ],
        [
            "Local Definition p := Qparams 6.",
            "VernacDefinition",
            "2b7a50bef2447cf14d10dc20d34314445994e6c8"
        ],
        [
            "Definition X := (Vgen p 0).",
            "VernacDefinition",
            "e669ab28b2a66063e033543afefd11f1aac573bf"
        ],
        [
            "Eval compute in X.",
            "VernacCheckMayEval",
            "981d1af3d4511a83a87f91b87ca2bfd2204ff43e"
        ],
        [
            "Definition Y := (Vgen p 1).",
            "VernacDefinition",
            "c3d6f3455964dc571ab997de85abf5feb3acf0ba"
        ],
        [
            "Eval compute in Y.",
            "VernacCheckMayEval",
            "987d2d74c8ccca4e755b6af478bd01885ed70bcb"
        ],
        [
            "Definition Z := (Vgen p 2).",
            "VernacDefinition",
            "4d3d7e448def4775f785c01d9265a2410fc7addf"
        ],
        [
            "Eval compute in Z.",
            "VernacCheckMayEval",
            "ee6cfd98072087255617c9656ce46f3d4a3ac610"
        ],
        [
            "Definition T := (Vgen p 3).",
            "VernacDefinition",
            "47d8758661a03d6d77d6aa51df5307a47a970ad7"
        ],
        [
            "Eval compute in T.",
            "VernacCheckMayEval",
            "8e533fef4dc8382e1df8cb8b95a661a96b6ef05b"
        ],
        [
            "Definition U := (Vgen p 4).",
            "VernacDefinition",
            "106beacd7460a54120db6edd2d909f88398c26c6"
        ],
        [
            "Eval compute in U.",
            "VernacCheckMayEval",
            "cf26d558dc488ee08f983003e079313c88b1474e"
        ],
        [
            "Definition K := (Vgen p 5).",
            "VernacDefinition",
            "551d5f3731391cf96a7fed71f0d778681758d352"
        ],
        [
            "Eval compute in K.",
            "VernacCheckMayEval",
            "2b0b84837fe6e57cf579007fd8b610d38a82252c"
        ],
        [
            "Notation \"x '\u2228' y\" := (Vjoin p x y) (at level 40, left associativity).",
            "VernacNotation",
            "a159bf5bedf676ccaa7fc6ed49c84873df452fd1"
        ],
        [
            "Notation \"x + y\" := (Vadd p x y).",
            "VernacNotation",
            "2391faa9249598f7e1436470c844ab824c5daf2d"
        ],
        [
            "Notation \"k .* x\" := (Vscal p k x).",
            "VernacNotation",
            "8204de03bf961ecfe861ced0de729b2c6f8ad1f7"
        ],
        [
            "Notation \"x '\u2227' y\" := (Vmeet p x y) (at level 40, left associativity).",
            "VernacNotation",
            "af0bb3c19c94e613036f3d3aa9b6df9e2d54d351"
        ],
        [
            "Notation \"'@ x\" := (Vdual p x) (at level 100).",
            "VernacNotation",
            "cd5f6110f825404b7da48ec954e11c41d0683a3e"
        ],
        [
            "Eval vm_compute in ((X \u2228 (Y \u2228 Z \u2228 T)) + (U \u2228 K)) \u2228 ((X \u2228 (Y \u2228 Z \u2228 T)) + (U \u2228 K)).",
            "VernacCheckMayEval",
            "e0030d1e89021d01c703c77bf524ca3ffc67fd8b"
        ],
        [
            "Eval vm_compute in Vconj p false (T \u2228 U) \u2228 (X \u2228 Y \u2228 Z).",
            "VernacCheckMayEval",
            "7e727f9c9be4a07542011cd52db7e0194c5bacf9"
        ],
        [
            "Eval vm_compute in Vconj p false (X \u2228 Y \u2228 Z \u2228 T \u2228 U).",
            "VernacCheckMayEval",
            "c78cf06d51926af26ee4c732115a20ad22799778"
        ],
        [
            "Eval vm_compute in ((X \u2228 T) + (Y \u2228 Z)) \u2228 ((X \u2228 T) + (Y \u2228 Z)).",
            "VernacCheckMayEval",
            "fc08ccacce8e0d6ec04b5891a79aa3346c60b1a7"
        ],
        [
            "End Ex6D.",
            "VernacEndSegment",
            "ba959ad77fdc0210e60ff77e13692dd281513d74"
        ]
    ],
    "proofs": [
        {
            "name": "fn",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "apply Build_vparamsProp; auto.",
                        "VernacExtend",
                        "47d6b1735c536f02dfa0f4fcbb52568aef13298a"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x y; apply eqK_dec; auto.",
                        "VernacExtend",
                        "fc10c8b252785c68baa7adb7bf31d0927b1016e7"
                    ]
                },
                {
                    "command": [
                        "intros (l3,l5) (l4, l6); simpl in IH; generalize (IH l3 l4); case eq.",
                        "VernacExtend",
                        "381fa9cc1639709e713657fd1fa2dc768227556e"
                    ]
                },
                {
                    "command": [
                        "generalize (IH l5 l6); case eq; intros HH1 HH2; subst; auto.",
                        "VernacExtend",
                        "29b3fa748b5017dc7597b8f35f7c5aa4ba6efe79"
                    ]
                },
                {
                    "command": [
                        "intros HH3; case HH1; injection HH3; auto.",
                        "VernacExtend",
                        "c37bd97886f19790e4fad393c7efc4da535e2c57"
                    ]
                },
                {
                    "command": [
                        "intros HH1 HH2; case HH1; injection HH2; auto.",
                        "VernacExtend",
                        "bec6a449510f5c21ad2f744dde29f7d900ebf7ef"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x y z; rewrite (addK_assoc _ Hp); auto.",
                        "VernacExtend",
                        "82bfe03c64ed85c84c3f57edcc8bcc5d52f1fb85"
                    ]
                },
                {
                    "command": [
                        "intros (l3,l5) (l4, l6) (l7, l8); simpl in IH; rewrite !IH; auto.",
                        "VernacExtend",
                        "9f08561aff6e61ca5e6554966dd5a42c4f03b2f9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x y; rewrite (addK_com _ Hp); auto.",
                        "VernacExtend",
                        "7988a5c9a41ce1d1b3e8cf72ef862773a66beec7"
                    ]
                },
                {
                    "command": [
                        "intros (l3,l5) (l4, l6); simpl in IH; rewrite (IH l3), (IH l5); auto.",
                        "VernacExtend",
                        "f4fc75d8baf00ad89cbd593d6686fb2e51f3133e"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x; rewrite (addK0l _ Hp); auto.",
                        "VernacExtend",
                        "ca2a43f99664e6d4dc3f406d7f70e520cea5ef63"
                    ]
                },
                {
                    "command": [
                        "intros (l1,l2); simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "0021f42ab35f32252e330ae90d66ca5d2c4e1688"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x; rewrite (multK0l _ Hp); auto.",
                        "VernacExtend",
                        "ed7bd33e6cd7cb84f76bdd0f11500eb2e7ff3192"
                    ]
                },
                {
                    "command": [
                        "intros (l1, l2); simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "0021f42ab35f32252e330ae90d66ca5d2c4e1688"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x; rewrite (multK1l _ Hp); auto.",
                        "VernacExtend",
                        "896e1eec573f11e7627d4c0aa0ba9fe7c40a59ed"
                    ]
                },
                {
                    "command": [
                        "intros (l1, l2); simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "0021f42ab35f32252e330ae90d66ca5d2c4e1688"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros k x y; rewrite (add_multKl _ Hp); auto.",
                        "VernacExtend",
                        "96ec9df36468aa9d328294d6ea76c4d40ac77a79"
                    ]
                },
                {
                    "command": [
                        "intros k1 k2 (l1, l2); simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "7eb47e671986760bb477c4ccaf4ad83ab0edea59"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros k x y; rewrite (add_multKr _ Hp); auto.",
                        "VernacExtend",
                        "4e6f05fd11aff4ed767386312199f1256e4e938f"
                    ]
                },
                {
                    "command": [
                        "intros k (l1, l3) (l2, l4); simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "26c0776635bfe594fb4fa55f1cc37589286347c3"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros x y z; rewrite (multK_assoc _ Hp); auto.",
                        "VernacExtend",
                        "39c350563c85b06f269543198b6858785b8479e3"
                    ]
                },
                {
                    "command": [
                        "intros k1 k2 (l1, l2); simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "7eb47e671986760bb477c4ccaf4ad83ab0edea59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite <-opp_multKl, multK1l; auto.",
                        "VernacExtend",
                        "41c355f31dd54eb97312b1e1e7e604a9d1a31b7e"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2; rewrite !IH; auto.",
                        "VernacExtend",
                        "e370219ead64d614776f2bee0aaf89e324f64f87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub0l",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "rewrite sub_add; Grm0.",
                        "VernacExtend",
                        "ebeb08b5429c6ddd14871ec7a10b76a78f7653c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub0r",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "rewrite sub_add; Grm0.",
                        "VernacExtend",
                        "ebeb08b5429c6ddd14871ec7a10b76a78f7653c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injk",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros HH; injection HH; auto.",
                        "VernacExtend",
                        "dbda8725995ae8d22bd699d451bdde89f4128fd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oppk",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite <- opp_multKl, multK1l; auto.",
                        "VernacExtend",
                        "41c355f31dd54eb97312b1e1e7e604a9d1a31b7e"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE0r, IH; auto.",
                        "VernacExtend",
                        "8dc69d98265d53f3a5c626b023c63c4da46932c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "genkE",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; Krm1; try Vfold n.",
                        "VernacExtend",
                        "7d10351aa914988c7814e46083186f766ad4023b"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, scalE0r; auto.",
                        "VernacExtend",
                        "5c38ecbaa948c13bc1f443f82a6e403969d41b91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deck0",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "generalize (eqK_dec _ Hp x 0%f).",
                        "VernacExtend",
                        "417d98a08d95d737aa59bca29dcd2b311864011c"
                    ]
                },
                {
                    "command": [
                        "case eqK; auto.",
                        "VernacExtend",
                        "0fb3d00d8c1372f144461e06fa2edad33449b45d"
                    ]
                },
                {
                    "command": [
                        "destruct x as (x1, x2).",
                        "VernacExtend",
                        "c35cecb7dbd0c68be9bc57c43b6348d79730e966"
                    ]
                },
                {
                    "command": [
                        "case (IH x1); auto; intros H1; subst.",
                        "VernacExtend",
                        "20c9723fea0dadafb8a91cc96c2a3222ba5ab059"
                    ]
                },
                {
                    "command": [
                        "case (IH x2); auto; intros H1; subst; auto.",
                        "VernacExtend",
                        "3cf5878425818d7e5687633ea3a9ef39d1fe3280"
                    ]
                },
                {
                    "command": [
                        "right; intro HH; case H1; injection HH; auto.",
                        "VernacExtend",
                        "b03bfb7900c31a10f9b3a910bc87a374365e9c7c"
                    ]
                },
                {
                    "command": [
                        "right; intro HH; case H1; injection HH; auto.",
                        "VernacExtend",
                        "b03bfb7900c31a10f9b3a910bc87a374365e9c7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_e",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "generalize p1 p2; clear p1 p2.",
                        "VernacExtend",
                        "b3c68aa09651c772af09bc49df253819b8b149d8"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "intros p1 p2 HH; contradict HH; auto with arith.",
                        "VernacExtend",
                        "c45a6ce68c3fa71855e1a37d0642d59a18d7f913"
                    ]
                },
                {
                    "command": [
                        "intros [|p1]; intros [|p2]; simpl; auto; try (intros _ _ HH; injection HH; intros _ HH1; case (one_diff_zero _ Hp); apply (injk n); auto).",
                        "VernacExtend",
                        "25bf6f80b4b498c91788796d685949f7136973e3"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2 HH; injection HH; intros HH1.",
                        "VernacExtend",
                        "0716ec55571cfca95d44836fee141e6a1bc95649"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH p1 p2); auto with arith.",
                        "VernacExtend",
                        "6cd2b2a7e32932f451de76e0aeebc3b166905610"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const0",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constk",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_scal",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; auto.",
                        "VernacExtend",
                        "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite IH; auto.",
                        "VernacExtend",
                        "cfc6663f1c7be2df3fba3b4e0cba871283f81c80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_add",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; auto.",
                        "VernacExtend",
                        "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
                    ]
                },
                {
                    "command": [
                        "destruct x1; destruct x2; rewrite IH; auto.",
                        "VernacExtend",
                        "1b1b9fd9fcbb2e080de6f44019392a9d10429ba7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq0_dec",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "apply eqK_dec; auto.",
                        "VernacExtend",
                        "e617ba3f942da49f8312e076282d114c7f7679e6"
                    ]
                },
                {
                    "command": [
                        "destruct x as [l1 l2]; generalize (IH l1); case eq0.",
                        "VernacExtend",
                        "4afc54af1f34d918004343da6be636c4528e6aa4"
                    ]
                },
                {
                    "command": [
                        "generalize (IH l2); case eq0; intros HH1 HH2; subst; auto.",
                        "VernacExtend",
                        "e5443bca292c033d97783cee9b7c0d288c635b1d"
                    ]
                },
                {
                    "command": [
                        "intros HH3; case HH1; injection HH3; auto.",
                        "VernacExtend",
                        "c37bd97886f19790e4fad393c7efc4da535e2c57"
                    ]
                },
                {
                    "command": [
                        "intros HH1 HH2; case HH1; injection HH2; auto.",
                        "VernacExtend",
                        "bec6a449510f5c21ad2f744dde29f7d900ebf7ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq0_spec",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "generalize (eq0_dec n x); case eq0; intros; constructor; auto.",
                        "VernacExtend",
                        "5d200d91cd55b1334afff02468efc54a8aa97b85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq0I",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto.",
                        "VernacExtend",
                        "94ee2ec7970fc2e17663d54a51cfe9eee8c5f65b"
                    ]
                },
                {
                    "command": [
                        "simpl in IH; rewrite IH; auto.",
                        "VernacExtend",
                        "e1815ece4e1854e7221a579ebb1f24ffc3908dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "en_def",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addk",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; Vrm0.",
                        "VernacExtend",
                        "0e76d327773cb00d1b1dfbe77004411c5ec93593"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scal_integral",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros; apply (multK_integral _ Hp k); auto.",
                        "VernacExtend",
                        "c86689fe6257d93a84e1a7795769733ef9e6b142"
                    ]
                },
                {
                    "command": [
                        "destruct x; intros HH; injection HH; intros HH1 HH2.",
                        "VernacExtend",
                        "e9ba356128879d42ec0ad37265893e5083bf3734"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ HH1); case (IH _ _ HH2); auto.",
                        "VernacExtend",
                        "b25d32fad6c61c78e24e90679098ccc2c445255d"
                    ]
                },
                {
                    "command": [
                        "intros; right; apply f_equal2 with (f := @pair (vect n) (vect n)); auto.",
                        "VernacExtend",
                        "76e562f12de7037f0adc265b23886506da2634ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalk",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "generalize IH; Vfold n; clear IH; intros IH.",
                        "VernacExtend",
                        "3073da5141bfcf633dbcec314a99f40a2a1a0aed"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE0r, IH; auto.",
                        "VernacExtend",
                        "8dc69d98265d53f3a5c626b023c63c4da46932c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homk0",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [|k]; auto; rewrite eqKI; auto.",
                        "VernacExtend",
                        "b6011181808cef110d9b6b418e04456e3d4bec72"
                    ]
                },
                {
                    "command": [
                        "intros [|k]; auto.",
                        "VernacExtend",
                        "dd9aa8cc98c579167047f915196ade2b4fbb6886"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; simpl; auto.",
                        "VernacExtend",
                        "8a00ea89e20ce8b770879d34f90d4171de0be067"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto.",
                        "VernacExtend",
                        "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom0K",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto.",
                        "VernacExtend",
                        "8047ccd08900b8ae8a4ef42ac6f6246fbd393936"
                    ]
                },
                {
                    "command": [
                        "intros HH; case HH; auto.",
                        "VernacExtend",
                        "a97474b3a6d037a220684ae5bfeedc33f9346833"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_hom",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; intros [|k]; simpl; auto.",
                        "VernacExtend",
                        "e3ffd9d113a71e413e62090260dec32013f0f44e"
                    ]
                },
                {
                    "command": [
                        "intros _ H; contradict H; auto with arith.",
                        "VernacExtend",
                        "32390d151bd97529490862dbb2dcb1d97af3cc90"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros; discriminate.",
                        "VernacExtend",
                        "7b3395b0a6bb1c96dd79c1b95950f09ecbfa52f0"
                    ]
                },
                {
                    "command": [
                        "intros _ H; contradict H; auto with arith.",
                        "VernacExtend",
                        "32390d151bd97529490862dbb2dcb1d97af3cc90"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite andbP; intros (H1,H2) _.",
                        "VernacExtend",
                        "eb50a7e67081baa1327e057256f400455028f78f"
                    ]
                },
                {
                    "command": [
                        "apply (IH _ k.+1); auto with arith.",
                        "VernacExtend",
                        "37b32227697a327d6946d8dd9af13d168a48e2d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom0E",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x; case eq0_spec; try (intros; discriminate).",
                        "VernacExtend",
                        "e2900ca37a48325201096d254c286c218613a924"
                    ]
                },
                {
                    "command": [
                        "intros H H2; rewrite H, <-IH; auto.",
                        "VernacExtend",
                        "2f1a533c133731a05a1bc3e61391bb163f833fce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom1e",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "generalize i; clear i.",
                        "VernacExtend",
                        "208b471d15be521271abdaf4ee90e51a9a779dca"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros k HH; contradict HH; auto with arith.",
                        "VernacExtend",
                        "c20d59009a02e389fe024409d4267ecee5629308"
                    ]
                },
                {
                    "command": [
                        "intros [|k]; simpl; rewrite hom0K; intros HH.",
                        "VernacExtend",
                        "0a7daf4563845b3c81e9a3737c9e0b410c97132f"
                    ]
                },
                {
                    "command": [
                        "apply homk0.",
                        "VernacExtend",
                        "497b8c244c32adb3f2fde3d4c6b33c8565655a80"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto with arith.",
                        "VernacExtend",
                        "b5201a12b405bfa799f8cf16c59b7f895e731d0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homE",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "assert (aux: forall n k1 k2, hom n k1.+1 [k2] -> k2 = 0%f).",
                        "VernacExtend",
                        "a4b07d9ecdd273f612d4318682389a456bd5cbd4"
                    ]
                },
                {
                    "command": [
                        "intros n1; elim n1; simpl; auto; clear n1.",
                        "VernacExtend",
                        "644fd2f0bb4b453d0efbd94e407d9f063d942095"
                    ]
                },
                {
                    "command": [
                        "intros _ k4; case eqK_spec; auto; intros; discriminate.",
                        "VernacExtend",
                        "32a69cd1d9d72b3f26165569cabe57eb5cc30182"
                    ]
                },
                {
                    "command": [
                        "intros n1 IH k3 k4.",
                        "VernacExtend",
                        "7d9a9c6cf34a14904e34fc040251b57e73fcc252"
                    ]
                },
                {
                    "command": [
                        "rewrite homk0; intros HH; apply (IH _ _ HH).",
                        "VernacExtend",
                        "591f21ffcec189f970798503f1c48ad9258c0c9e"
                    ]
                },
                {
                    "command": [
                        "generalize k1 k2 x; clear k1 k2 x.",
                        "VernacExtend",
                        "efdb82fed48a1cb7005e85b9e8dcc1a31536adce"
                    ]
                },
                {
                    "command": [
                        "elim n; simpl; auto; clear n.",
                        "VernacExtend",
                        "f56d79fa790257818a6ccebaaa6d291ecb3c5520"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; auto; try (intros x; case eqK_spec; auto; intros; discriminate).",
                        "VernacExtend",
                        "f66c2903b07a44b27062a41a45c90cd7a8f913ef"
                    ]
                },
                {
                    "command": [
                        "intros n IH [|k1] [|k2] (x1, x2); auto.",
                        "VernacExtend",
                        "1f3640d87695865c5e92196cd32b3a0582a33227"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate).",
                        "VernacExtend",
                        "b2e2482cd85ea7af5b7e0c3adecc9660d813518f"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros H (_,H1) (_,H2).",
                        "VernacExtend",
                        "dfe3c42bbb7e424e9ba9666af6ff7ebb1a1da310"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ _ H1 H2); intros; subst; auto.",
                        "VernacExtend",
                        "a30aaea6d08bfd3737c7162e806bfa7b42f04930"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate).",
                        "VernacExtend",
                        "b2e2482cd85ea7af5b7e0c3adecc9660d813518f"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros H (_,H1) (_,H2).",
                        "VernacExtend",
                        "dfe3c42bbb7e424e9ba9666af6ff7ebb1a1da310"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ _ H1 H2); intros; subst; auto.",
                        "VernacExtend",
                        "a30aaea6d08bfd3737c7162e806bfa7b42f04930"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (H1,H2) (H3,H4).",
                        "VernacExtend",
                        "dcec71b7239743ae41890b8f144ee893474415d0"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ _ H1 H3); intros; subst; auto.",
                        "VernacExtend",
                        "d24cbbec74d809f3830f7a42f05188920a4c3d2f"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ _ H2 H4); intros; subst; auto.",
                        "VernacExtend",
                        "92aae91680915f7b0e7315b6c47257baaaa9e622"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_lt",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; intros [|k]; simpl; auto; try (intros HH; contradict HH; auto with arith; fail).",
                        "VernacExtend",
                        "e3cb1ba55c11a331f1a22e7e06c61e6e362b1c92"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros; discriminate.",
                        "VernacExtend",
                        "7b3395b0a6bb1c96dd79c1b95950f09ecbfa52f0"
                    ]
                },
                {
                    "command": [
                        "destruct v as [x y]; intros H1; rewrite andbP; intros (H2, H3).",
                        "VernacExtend",
                        "20590f8d9a06c6a2d275b4f81b735dae7afbe89d"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH x k), (IH y k.+1); auto with arith.",
                        "VernacExtend",
                        "af57129391526b56d8f0d405654fbfb20bfc4408"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_hom",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try (Vfold n).",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros k; case k; auto.",
                        "VernacExtend",
                        "d3b2159c2aa8a1793895c3265cc35e1bde38442d"
                    ]
                },
                {
                    "command": [
                        "intros _; case eqK_spec; auto; intros Hx HH; try discriminate HH.",
                        "VernacExtend",
                        "3cc09eb337f9b5a5bf8fcdee5d311b5f723eba49"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros Hy HH1; try discriminate HH1.",
                        "VernacExtend",
                        "6088d338328616cf5b2a00b033dba431abcd624a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; rewrite Hy; rewrite addK0l; auto.",
                        "VernacExtend",
                        "12f158f66988e64c56600bc2a8b2db3c25634611"
                    ]
                },
                {
                    "command": [
                        "rewrite eqKI; auto.",
                        "VernacExtend",
                        "ca078dadd9f4e418868b01a515b29125b20be296"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; destruct x; destruct y; rewrite !andbP; intros (H1, H2) (H3, H4); split; auto.",
                        "VernacExtend",
                        "c4f1f9af2c91ac76712afeaa3644b50f76a12f32"
                    ]
                },
                {
                    "command": [
                        "generalize H1 H3; do 2 (case eq0_spec; try (intros; discriminate)); intros; subst; rewrite addE0l; auto.",
                        "VernacExtend",
                        "d6ad0c9ecb7b18cc48f3d070aae562278a7d281b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scal_hom",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "generalize k1; clear k1.",
                        "VernacExtend",
                        "2a0652b5f4391e2c1036aa2fbafaa5daec1dcd36"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try (Vfold n).",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros k1; case k1; auto.",
                        "VernacExtend",
                        "63414045842cd721283b208936df82dc3ae66f9a"
                    ]
                },
                {
                    "command": [
                        "intros _; case eqK_spec; auto; intros Hx HH; try discriminate.",
                        "VernacExtend",
                        "a09c4e74977e2bd3d4e78f9be253d57303c88f22"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx; rewrite multK0r, eqKI; auto.",
                        "VernacExtend",
                        "4f98f72f62c8609575443ce47bdcb4d3d66988c6"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; destruct x; rewrite !andbP; intros (H1, H2); split; auto.",
                        "VernacExtend",
                        "d40ad65136ebfa274c219154fb2bb0f35871c2ee"
                    ]
                },
                {
                    "command": [
                        "generalize H1; case eq0_spec; try (intros; discriminate); intros; subst; rewrite scalE0r, eq0I; auto.",
                        "VernacExtend",
                        "85f6a04e89ade948bb61c08082275df66a5e1171"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_hom0",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "generalize m; clear m; induction n as [|n IH]; intros [|m]; simpl; auto; rewrite !IH; auto.",
                        "VernacExtend",
                        "427b3d1e0fc3dfc11412d75598a3471e4276f156"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_homk0",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto; rewrite !IH; auto.",
                        "VernacExtend",
                        "5115f0ddaf20441fac76d63b2ee5657a42e1df96"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_homkS",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto; rewrite !IH, ?get_hom0; auto.",
                        "VernacExtend",
                        "4e2fa2a674734497db4dbdad4b5f1a418d3d9a57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_hom_ei",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "generalize m i; clear m i; induction n as [|n IH].",
                        "VernacExtend",
                        "ee9d453728c2d6659dba190da8428feb7510261d"
                    ]
                },
                {
                    "command": [
                        "intros m i HH; contradict HH; auto with arith.",
                        "VernacExtend",
                        "37072531f28cc749bd772320c34c8f8ada70e857"
                    ]
                },
                {
                    "command": [
                        "intros [|[|m]] [|i] H; simpl; rewrite ?get_hom0; auto.",
                        "VernacExtend",
                        "0d4b40ca3df79d726f45556761b6230f5820f13b"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto with arith.",
                        "VernacExtend",
                        "bf8d1ec9c3e811f8f5ef611f01fbad87c0c64ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite get_homk0; auto.",
                        "VernacExtend",
                        "0a72cb6cb4e8ee2db82a18b67565c299cce1d7f6"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "d9f4c2ca985ff89bd8cafa953bfb15a4a7231405"
                    ]
                },
                {
                    "command": [
                        "rewrite get_homkS; auto.",
                        "VernacExtend",
                        "309562ee6c9e1a2bc9966e1bf6b147ca8eb5f25e"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "d9f4c2ca985ff89bd8cafa953bfb15a4a7231405"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_hom_scal",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "generalize m x; clear m x; induction n as [|n IH]; intros [|m]; simpl; Krm0; intros [x y]; Vfold n; rewrite ?IH; Vrm0.",
                        "VernacExtend",
                        "8a8da0e2219343be75a9cb0f19500d35bc35307b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_hom_add",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "generalize m x y; clear m x y; induction n as [|n IH]; intros [|m]; simpl; Krm0; intros [x1 x2] [y1 y2]; Vfold n; rewrite ?IH; Vrm0.",
                        "VernacExtend",
                        "05d3c48eb2db07b954fe3b304eaa3e0eee7ab2fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_hom_up",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "generalize m; clear m; induction n as [| n IH]; intros m Hnm.",
                        "VernacExtend",
                        "2d1dff615b15c55676a713e3f91a288239929a27"
                    ]
                },
                {
                    "command": [
                        "destruct m; simpl; auto; contradict Hnm; auto with arith.",
                        "VernacExtend",
                        "9b3209db171247fd82174e4b96b5b754a8b1e71d"
                    ]
                },
                {
                    "command": [
                        "destruct m as [|m]; simpl; auto.",
                        "VernacExtend",
                        "8a976b3fbf4108dd15bef6afe96106a2e862fb3e"
                    ]
                },
                {
                    "command": [
                        "contradict Hnm; auto with arith.",
                        "VernacExtend",
                        "9c648518fa1f7441d61a26c9bc0f90e8280a8306"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x1 x2]; rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "b5809bee6fb8340ec5c6b90abf115479009e0dbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumEl",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "induction m as [|m IH]; simpl; Vfold n.",
                        "VernacExtend",
                        "d9e909bb68b0d6035475dce170e280bbe061dca6"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_swap with (x1 := f 0%nat); auto.",
                        "VernacExtend",
                        "8015d8bfc013287deffd6eef0a4119effce8335b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-IH; simpl; auto.",
                        "VernacExtend",
                        "c0292c5dab2bf19cfdbf693388c9401a08a00ee0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumEr",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_ext",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "induction m as [|m IH]; simpl; auto.",
                        "VernacExtend",
                        "28ecc4b29f115dd963c73a6889411ae30beb9424"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_hom_sum",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x y]; simpl.",
                        "VernacExtend",
                        "d22277c5d9d7a38a0e9aa29cbc12c640ee49245b"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_ext.",
                        "VernacExtend",
                        "ddd88600e73af1fa8f299f9d380995aa91952534"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(IH y).",
                        "VernacExtend",
                        "3e195a30fcaa221f450eebd12babe69c8cbd6a89"
                    ]
                },
                {
                    "command": [
                        "change (get_hom n n x) with ((fun m : nat => match m with | 0 => [0] | m1.+1 => get_hom n m1 x end) n.+1).",
                        "VernacExtend",
                        "0caecce33aade8cfd4d66108ecf141dacd21d436"
                    ]
                },
                {
                    "command": [
                        "Vfold n; rewrite <-sumEr, sumEl; Vrm0.",
                        "VernacExtend",
                        "bbcca683de451b7d79ac7e903f3e33a73a351b95"
                    ]
                },
                {
                    "command": [
                        "rewrite <-IH, get_hom_up; Vrm0.",
                        "VernacExtend",
                        "455f6598495b1429ae68712da3a9c25c2df8aa45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_get_hom",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "generalize m; induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "9763030cf44d4ee29d1a332a4e2faeeff28f9947"
                    ]
                },
                {
                    "command": [
                        "intros []; auto.",
                        "VernacExtend",
                        "538859518958c62815d503605e1de1531db219d1"
                    ]
                },
                {
                    "command": [
                        "rewrite eqKI; auto.",
                        "VernacExtend",
                        "ca078dadd9f4e418868b01a515b29125b20be296"
                    ]
                },
                {
                    "command": [
                        "intros [|m1]; destruct x as [x1 x2].",
                        "VernacExtend",
                        "be09623272295bdf0089cfc304ae86929f407ced"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I, IH; auto.",
                        "VernacExtend",
                        "12122ca7baac7b189fee469b6c6d77b2a552ca4f"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto.",
                        "VernacExtend",
                        "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_deg0",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; auto.",
                        "VernacExtend",
                        "a06a75bba6d56b673bd55816ed0e47683e4f695c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_deg0i",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct v.",
                        "VernacExtend",
                        "6f1469bc2ceb2b76ca58f6ada86b5fc3c1e42ed3"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros H1 H2; simpl; auto.",
                        "VernacExtend",
                        "4ce9ca9252c11b1463d0d01fb0748914f67784b5"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_first_deg",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; intros [|k]; simpl; auto.",
                        "VernacExtend",
                        "e3ffd9d113a71e413e62090260dec32013f0f44e"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; try (intros; discriminate).",
                        "VernacExtend",
                        "e242e2390977096108d43e24307f79e689793e20"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; case H2; auto.",
                        "VernacExtend",
                        "64473c0bac90940aec179baa53933e91e736e033"
                    ]
                },
                {
                    "command": [
                        "destruct x; case eq0_spec; intros Hx Hy; subst; try (discriminate).",
                        "VernacExtend",
                        "bf72b0c4b27e25d611ee2d0b13abd9ae6b56ee8e"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (_, H1); apply IH; auto.",
                        "VernacExtend",
                        "1b3320dddb96d59cd8e2fde12e257b33d6373b79"
                    ]
                },
                {
                    "command": [
                        "intros H2; case Hy; subst; auto.",
                        "VernacExtend",
                        "b6e86e1f220ed84ac0b82d7c328db060af9cdc03"
                    ]
                },
                {
                    "command": [
                        "try (rewrite andbP; intros (H1,_); discriminate).",
                        "VernacExtend",
                        "dc86577b1b3f4cabcaaea810817e8fa09aa73aef"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite andbP; case eq0_spec; intros Hx Hy (H1,H2).",
                        "VernacExtend",
                        "9620d602526ab0a6d6bade676c479efa3e535f7d"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto; intros H3; case Hy; subst; auto.",
                        "VernacExtend",
                        "c16418fb8d87c0cd7f506e1fd3bf08301acad61b"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ k); auto.",
                        "VernacExtend",
                        "822bc2e8af4693d58f67f6c3b831975eed2492ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_lift",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_k",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_add",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "unfold lift; simpl; Vfold n; rewrite addE0l; auto.",
                        "VernacExtend",
                        "3cffe14b7d9d29d99bd64e82d545ef38fb1fd95d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_scal",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "unfold lift; simpl; Vfold n; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "a52e7f4fc29fd0e5e2e43132a75197d365bd67ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_mprod",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "generalize vs; clear vs.",
                        "VernacExtend",
                        "26131db3d7a72c66a2fbfcd4a3908f965c6f1f22"
                    ]
                },
                {
                    "command": [
                        "induction ks as [| k ks IH].",
                        "VernacExtend",
                        "0abf936de74fc97faf8966751f6af2ea12a7fc7f"
                    ]
                },
                {
                    "command": [
                        "intros vs; rewrite !mprod0l; auto.",
                        "VernacExtend",
                        "2d699b6314e7f211f667442536f8b7ed4cb74d27"
                    ]
                },
                {
                    "command": [
                        "intros [| v vs]; simpl; try rewrite mprod0r; auto.",
                        "VernacExtend",
                        "b2b0928516665e31e343db2e4d2a6aa42ddd04ef"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams n.+1)); auto.",
                        "VernacExtend",
                        "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; auto.",
                        "VernacExtend",
                        "b18aeba88ce23deabc660914af9148947616b7fa"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, lift_add, lift_scal; auto.",
                        "VernacExtend",
                        "f94c2202f8f18c428692f7ac58c415c5c17ea014"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_cbl",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; clear x H; auto.",
                        "VernacExtend",
                        "03271805f7524b51b8c85c80504126f51e71e336"
                    ]
                },
                {
                    "command": [
                        "apply cbl0.",
                        "VernacExtend",
                        "a30a6dc0e0b9363a44a8082e597a09cb39921056"
                    ]
                },
                {
                    "command": [
                        "intros v Hv; apply cbl_in; apply in_map; auto.",
                        "VernacExtend",
                        "aed8f1692d3fc364d56214c9e5e705f062323fd8"
                    ]
                },
                {
                    "command": [
                        "intros x y H1x H2x H1y H2y.",
                        "VernacExtend",
                        "1c9596c6206815a5cb596222d7e40976f460a568"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_add; apply cbl_add; auto.",
                        "VernacExtend",
                        "ae8dc33d0749ad36af1bbb3b766175e8bbdd6b92"
                    ]
                },
                {
                    "command": [
                        "intros k x H1x H2x.",
                        "VernacExtend",
                        "f0d354ba760f995a46f323f98781adc5cd5be1a1"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_scal; apply cbl_scal; auto.",
                        "VernacExtend",
                        "4fb909daf2f4df461da16351c8083abf21026d33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_inj",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "destruct n as [| n]; simpl; intros HH; injection HH; auto.",
                        "VernacExtend",
                        "a8abc516f77d5218b1335ebbf0fe94d9112aced6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dlift_add",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "unfold dlift; simpl; Vfold n; rewrite addE0l; auto.",
                        "VernacExtend",
                        "f1e2c8090e54ca9654e60e5010306724b02c8911"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dlift_scal",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "unfold dlift; simpl; Vfold n; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "2e4a553a0352da074d6f7686302b53ef60448e0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dlift_mprod",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "generalize vs; clear vs.",
                        "VernacExtend",
                        "26131db3d7a72c66a2fbfcd4a3908f965c6f1f22"
                    ]
                },
                {
                    "command": [
                        "induction ks as [| k ks IH].",
                        "VernacExtend",
                        "0abf936de74fc97faf8966751f6af2ea12a7fc7f"
                    ]
                },
                {
                    "command": [
                        "intros vs; rewrite !mprod0l; auto.",
                        "VernacExtend",
                        "2d699b6314e7f211f667442536f8b7ed4cb74d27"
                    ]
                },
                {
                    "command": [
                        "intros [| v vs]; simpl; try rewrite mprod0r; auto.",
                        "VernacExtend",
                        "b2b0928516665e31e343db2e4d2a6aa42ddd04ef"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams n.+1)); auto.",
                        "VernacExtend",
                        "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; auto.",
                        "VernacExtend",
                        "b18aeba88ce23deabc660914af9148947616b7fa"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, dlift_add, dlift_scal; auto.",
                        "VernacExtend",
                        "06f3e9937edfa0e1d576eddc0caf50cd79f72c4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj0",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite IH; auto.",
                        "VernacExtend",
                        "cfc6663f1c7be2df3fba3b4e0cba871283f81c80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_hom0_eq",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y.",
                        "VernacExtend",
                        "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
                    ]
                },
                {
                    "command": [
                        "do 2 (case eq0_spec; try (intros; discriminate)).",
                        "VernacExtend",
                        "b9cb438d0bdc0f41fa906899baf3d6e64b57e927"
                    ]
                },
                {
                    "command": [
                        "intros; subst; apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "8ef8ee3c06a4412630c4d186c42f2588128bc330"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_lt",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "generalize m; clear m.",
                        "VernacExtend",
                        "c69856faa0bcd071a0574edf0780395f33a826ba"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [] H; auto; contradict H; auto with arith.",
                        "VernacExtend",
                        "a6be544b1d86fb2d1c2e351c10d99a82b138465c"
                    ]
                },
                {
                    "command": [
                        "intros [| m] H; destruct x; rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "5ef44413bc926b45772181e220e077cc49aad69b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_homn_eq",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; rewrite !andbP; intros (H1,H2) (H3,H4).",
                        "VernacExtend",
                        "dd4b3b6f7a7c4cc02ec662b59cb32727d22fa334"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_lt with (2:= H2); auto with arith.",
                        "VernacExtend",
                        "efa622160d8b80ef71454d984f9e2fb70dd57ed5"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_lt with (2:= H4); auto with arith.",
                        "VernacExtend",
                        "3fefa0d05a97cd6119e4ac1e0f7fe4026705d9bf"
                    ]
                },
                {
                    "command": [
                        "rewrite !(proj_lt n n.+1), <-!app_nil_end; auto with arith.",
                        "VernacExtend",
                        "9e7d4e7c2790500766d28146e1283b94cc80588f"
                    ]
                },
                {
                    "command": [
                        "intros H; rewrite (IH _ _ H1 H3); auto.",
                        "VernacExtend",
                        "303ff197b9b4de03117c655ed1b49462a3c917d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_hom",
            "line_nb": 415,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, homk0; auto.",
                        "VernacExtend",
                        "92cda27737f8b669280e160dd2c29bbd8de22c9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_base_length",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; auto.",
                        "VernacExtend",
                        "dd9aa8cc98c579167047f915196ade2b4fbb6886"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; destruct x; rewrite ?map_length; auto.",
                        "VernacExtend",
                        "1befb0e969cbd25d334f43fa1f0c1ed82a60ffce"
                    ]
                },
                {
                    "command": [
                        "rewrite !app_length, !map_length, !IH; auto.",
                        "VernacExtend",
                        "233a534561c45e5a8f4113521177fb359a46f863"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base0",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; rewrite ?IH; auto.",
                        "VernacExtend",
                        "c8544f3a40522be5887b289abb603fdaab768f8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_lt_nil",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "generalize n; clear n.",
                        "VernacExtend",
                        "a8c7333e313c64ce34e20216bbcbe6f6e05e8e7c"
                    ]
                },
                {
                    "command": [
                        "induction m as [| m IH]; intros [| n]; simpl; auto; try (intros HH; contradict HH; auto with arith; fail).",
                        "VernacExtend",
                        "9e565100f40db71ca7495b2a2745aee48ee9be85"
                    ]
                },
                {
                    "command": [
                        "intros Hm; rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "48beb3d52757ba86121e1de082e6b7ff6467efef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_n",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, base_lt_nil; auto.",
                        "VernacExtend",
                        "76e2921f94dd7a03e9c4a701ec0294a09d048e87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_length",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl base; intros [| k]; auto.",
                        "VernacExtend",
                        "f539366ad1e8084ad8be272082d21d46ec995181"
                    ]
                },
                {
                    "command": [
                        "rewrite base0; auto.",
                        "VernacExtend",
                        "7866375ca954e75474870512fd53803ba947e1bd"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length, !map_length, !IH, bin_def, Plus.plus_comm; auto.",
                        "VernacExtend",
                        "4b03ab0a23bef41439d7a3eec656ca3c72b71969"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_lift",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; intros [| k]; simpl; auto with datatypes.",
                        "VernacExtend",
                        "a315903d49980e8664337eb63eabd2e78106c509"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_hom",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; intros [| k]; auto.",
                        "VernacExtend",
                        "e2b4e180877c9be66e4f96bfdfc75df0fd7370c4"
                    ]
                },
                {
                    "command": [
                        "intros HH; contradict HH; auto with arith.",
                        "VernacExtend",
                        "287c60339f0c8deff5ebf7c6e4f6af547967c4e8"
                    ]
                },
                {
                    "command": [
                        "destruct v as [v1 v2].",
                        "VernacExtend",
                        "e410adef3db89cef6929243ea83a94f3d213387e"
                    ]
                },
                {
                    "command": [
                        "rewrite base0, en_def; simpl.",
                        "VernacExtend",
                        "ea00402dea12f465894122b39fa44a389a7a16aa"
                    ]
                },
                {
                    "command": [
                        "intros _ [H1|[]]; injection H1; intros; subst.",
                        "VernacExtend",
                        "7628c92c9d91af07681021db0c80cba7c8e5a5ef"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I, hom0K; auto.",
                        "VernacExtend",
                        "9a15b4fb5471f7a022241b8ae07bf84acaa02db4"
                    ]
                },
                {
                    "command": [
                        "intros HH; case (Lt.le_lt_or_eq k n); auto with arith; intros H1 H2; subst.",
                        "VernacExtend",
                        "31f67c1776fe0cd7211729a35013f9f153cfe896"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ H2); rewrite in_map_iff; intros (v1, ([],Hv1)); simpl.",
                        "VernacExtend",
                        "4d719acf4e2568026a1a355f13d213d6da2bfdb4"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, homk0; auto with arith.",
                        "VernacExtend",
                        "21e26ab157c544d3cf4c9ad4a20b2324bccf21e3"
                    ]
                },
                {
                    "command": [
                        "rewrite homk0, IH; auto with arith.",
                        "VernacExtend",
                        "694f04005ddd94f07b214667d03fb8e89e6d0ada"
                    ]
                },
                {
                    "command": [
                        "rewrite base_n, base_lt_nil in H2; auto.",
                        "VernacExtend",
                        "5860473bf7fed7d53c5e7657bcf661857c245ed2"
                    ]
                },
                {
                    "command": [
                        "simpl in H2; case H2; intros []; simpl.",
                        "VernacExtend",
                        "174c0852411f637b7b418dacac4b00bcba97d26e"
                    ]
                },
                {
                    "command": [
                        "rewrite all_hom, homk0; auto.",
                        "VernacExtend",
                        "dcb099186d38495136f02fafb69ed2daeeb104c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proj_homk",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros [| k] Hx.",
                        "VernacExtend",
                        "2221b99af7664ff344258aebbb72083534fcc6a5"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams 0)); auto.",
                        "VernacExtend",
                        "ce7ad0280aa94af3970bbcc96844a35e1d72b6f2"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0l, addE0r; auto.",
                        "VernacExtend",
                        "0ca5e779d571c0bf28a7a2a3e91e4fda10dcf728"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite multK1r; auto.",
                        "VernacExtend",
                        "a3546296f43711fd9f82bbea5e4d903f3d6f6653"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0r.",
                        "VernacExtend",
                        "f60f4c923701f1b8cb6846ccf70ee78683c42b50"
                    ]
                },
                {
                    "command": [
                        "generalize Hx; case eqK_spec; auto.",
                        "VernacExtend",
                        "157e02c066694fdd32705f84fd707c71ecfb2a4f"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros [|k ]; destruct x.",
                        "VernacExtend",
                        "97bc4639898f55dd8f83f2822e6d9b93be059149"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros Hx Hx1; try discriminate; subst.",
                        "VernacExtend",
                        "24638d0f35b22f84aa54872097c2c8e80fc3a87a"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_mprod, IH; auto.",
                        "VernacExtend",
                        "921de209fec6cffa577077e8fab1afad9ea948ba"
                    ]
                },
                {
                    "command": [
                        "intros HH.",
                        "VernacExtend",
                        "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_app (vn_eparams n.+1)); auto.",
                        "VernacExtend",
                        "7ac536e9dfdbce82901635a018337f6e24ab4703"
                    ]
                },
                {
                    "command": [
                        "rewrite !lift_mprod, !dlift_mprod, !IH; auto.",
                        "VernacExtend",
                        "a447c58935cab60762bd859636b1cdeaa46e4d63"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite addE0l, addE0r; auto.",
                        "VernacExtend",
                        "9271af485e94525c2984579618cd689465134f8c"
                    ]
                },
                {
                    "command": [
                        "generalize HH; case hom; auto; intros; discriminate.",
                        "VernacExtend",
                        "c0d0206fbe1bef41c97c8e1af6e3bacb66c1d811"
                    ]
                },
                {
                    "command": [
                        "generalize HH; case hom; auto; intros; discriminate.",
                        "VernacExtend",
                        "c0d0206fbe1bef41c97c8e1af6e3bacb66c1d811"
                    ]
                },
                {
                    "command": [
                        "rewrite map_length, proj_base_length; auto.",
                        "VernacExtend",
                        "bb99c149eebc39ec9871cf292f7dfd54109d92a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_free",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [|k] [|x [|]]; simpl; try (intros; discriminate); auto.",
                        "VernacExtend",
                        "2584f22e9edfa35f08b43c8052c53e7edacc8879"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams 0)); auto.",
                        "VernacExtend",
                        "ce7ad0280aa94af3970bbcc96844a35e1d72b6f2"
                    ]
                },
                {
                    "command": [
                        "rewrite !mprod0r, !addE0r; simpl; auto.",
                        "VernacExtend",
                        "f2beb391d785af465b459495c5287f56c4835fb4"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1r; auto; intros _ HH k [HH1 | []]; subst; auto.",
                        "VernacExtend",
                        "628401f0aa766bbd5d638834439a678fd23bf9cc"
                    ]
                },
                {
                    "command": [
                        "intros _ _ k1 HH; case HH.",
                        "VernacExtend",
                        "6539446ea95d8d5868cd8318c1be303ecc098534"
                    ]
                },
                {
                    "command": [
                        "intros [| k].",
                        "VernacExtend",
                        "17ed4cb94ccbe888b3457daf9accd95143560509"
                    ]
                },
                {
                    "command": [
                        "rewrite base0; intros [| x []]; try (intros; discriminate); simpl.",
                        "VernacExtend",
                        "5f6da70ee0f1a8190a6b8d9a4b3887914fdb9063"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams n.+1)); auto.",
                        "VernacExtend",
                        "2e7f22cc3e5821967e4dd0a313bbbea815bc2cdf"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0r; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "a7b6d5d80790d9e1973e14b7713e60843144182d"
                    ]
                },
                {
                    "command": [
                        "rewrite en_def, scalE0r, addE0l, addE0r, scalk, multK1r; auto.",
                        "VernacExtend",
                        "6d331df808fa2b72db8fe654fb121054ef3ca232"
                    ]
                },
                {
                    "command": [
                        "intros HH; injection HH; intros HH1 k [HK | []]; subst.",
                        "VernacExtend",
                        "0987a6e7e44f6d517436436dc1d9ae0ffcee23c2"
                    ]
                },
                {
                    "command": [
                        "apply injk with (1 := HH1); auto.",
                        "VernacExtend",
                        "492a0b36f047030549d19d1110c08b3e13c5e77e"
                    ]
                },
                {
                    "command": [
                        "intros l; rewrite app_length, !map_length.",
                        "VernacExtend",
                        "43c432d03faeb875b3425511cc19f7fc309e8331"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2 k1 Hk1.",
                        "VernacExtend",
                        "db8e527b0166a3609b5482d726ee586e2ffff339"
                    ]
                },
                {
                    "command": [
                        "case (list_split _ _ _ _ H1); intros l1 (l2, (Hl1, (Hl2, Hl3))); subst.",
                        "VernacExtend",
                        "f8340037c55d819f2509d1a5b7f4da95e5004847"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_app, lift_mprod, dlift_mprod in H2; try rewrite map_length; auto.",
                        "VernacExtend",
                        "286d7497af44c004abf85b4a667edc50d30a7f3b"
                    ]
                },
                {
                    "command": [
                        "injection H2; Vfold n; rewrite addE0r, addE0l; auto; intros He1 He2.",
                        "VernacExtend",
                        "20766e1bcd6e828bd3924de34d5fba98c49071ea"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ Hk1); intros H3.",
                        "VernacExtend",
                        "d234f0a82271cffeb84896b308e1e7b9fc8cad6c"
                    ]
                },
                {
                    "command": [
                        "apply (IH k l1); auto.",
                        "VernacExtend",
                        "dbbc59b93b4c4cd4c6c133353be958d7065f6e6c"
                    ]
                },
                {
                    "command": [
                        "apply (IH k.+1 l2); auto.",
                        "VernacExtend",
                        "473d58598002d1cf3a1863eee6fd220d00afe5d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "e_in_base1",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "generalize i; clear i.",
                        "VernacExtend",
                        "208b471d15be521271abdaf4ee90e51a9a779dca"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH].",
                        "VernacExtend",
                        "bec3d336f40e4640fd88fbd8808c6c8e8800159f"
                    ]
                },
                {
                    "command": [
                        "intros p1 Hp1; absurd (p1 < 0); auto with arith.",
                        "VernacExtend",
                        "00d12c7b1dac2610e684b6a6833ec8a7af32e8b5"
                    ]
                },
                {
                    "command": [
                        "intros [| p1] Hp1; simpl; Vfold n; auto.",
                        "VernacExtend",
                        "88d4e190dba54393ec690b666654288640772f45"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app; left; auto.",
                        "VernacExtend",
                        "fa822ce1f0a29c1ea205febda6266e0c22e87652"
                    ]
                },
                {
                    "command": [
                        "change (1: vect n, 0: vect n) with (dlift n (1)).",
                        "VernacExtend",
                        "5e06e6f4bd735e2afde362340f37900eb8505ab4"
                    ]
                },
                {
                    "command": [
                        "rewrite base0, en_def; simpl; auto.",
                        "VernacExtend",
                        "183b2a163b8d37058e4f23ec981f3f0778799289"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app; right; auto.",
                        "VernacExtend",
                        "3dddf2e09d3f97080e782630269f5dd3d75a172b"
                    ]
                },
                {
                    "command": [
                        "change (0: vect n, 'e_p1: vect n) with ('e_p1^'l:vect n.+1).",
                        "VernacExtend",
                        "53804294e037fc1191d50a35ac5b3ee20d077ce0"
                    ]
                },
                {
                    "command": [
                        "refine (in_map _ _ _ _); auto with arith.",
                        "VernacExtend",
                        "51155b03b1dbd88b15ccac061570c4c773127476"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "e_in_base1_ex",
            "line_nb": 524,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; intros HH.",
                        "VernacExtend",
                        "36fa14711c9f153f2eae76c652e445265b1cdf63"
                    ]
                },
                {
                    "command": [
                        "inversion HH.",
                        "VernacExtend",
                        "2dd4148222bdef6d8f727509143734ec930d8f35"
                    ]
                },
                {
                    "command": [
                        "destruct v as [vv1 vv2].",
                        "VernacExtend",
                        "bd74636205df89b654310ade64bc3623f217ab60"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ HH); rewrite in_map_iff; intros (v, (Hv1, Hv2)); injection Hv1; intros H1 H2; subst; auto.",
                        "VernacExtend",
                        "0663d0d606485fa16abded86916f4e74962e67e4"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; split; auto with arith.",
                        "VernacExtend",
                        "4e63bbbda321aa632339f6e7453572a22fa6ac48"
                    ]
                },
                {
                    "command": [
                        "rewrite base0, en_def in Hv2.",
                        "VernacExtend",
                        "89a96cc42a05b542840177c8e9df928ae5ef5b67"
                    ]
                },
                {
                    "command": [
                        "simpl in Hv2; case Hv2; intros HH1; subst; auto.",
                        "VernacExtend",
                        "cdc544315145f3da2cada58a0df8ff85c00c54d5"
                    ]
                },
                {
                    "command": [
                        "case HH1.",
                        "VernacExtend",
                        "258202da6e637d48883584e842bca3ab4c9e972d"
                    ]
                },
                {
                    "command": [
                        "case (IH _ Hv2); auto; intros p1 (H1p1, H2p1).",
                        "VernacExtend",
                        "a01a27bbfd320082a95b9571051733eeccbbd136"
                    ]
                },
                {
                    "command": [
                        "exists p1.+1; split; subst; auto with arith.",
                        "VernacExtend",
                        "4db9f439175bcc7637c7c5de54c8b45ad2ee16db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base1_length",
            "line_nb": 536,
            "steps": [
                {
                    "command": [
                        "rewrite base_length, bin_1; auto.",
                        "VernacExtend",
                        "73f95519394b24eb2355b2ca808bb20883301ca6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base1_S",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "simpl; unfold dlift; simpl; rewrite base0, en_def; simpl; auto.",
                        "VernacExtend",
                        "67b0318f986f6dc8ce6bced9ecd8609b6840aaed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_nil",
            "line_nb": 542,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; intros [| k] H; simpl; auto; try (contradict H; auto with arith; fail).",
                        "VernacExtend",
                        "b1b88809baf015bb640f9c8f911b801a901aca01"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto with arith.",
                        "VernacExtend",
                        "d9f4c2ca985ff89bd8cafa953bfb15a4a7231405"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl1_hom1_equiv",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "split; intros Hx; elim Hx.",
                        "VernacExtend",
                        "51e18a70b8e1590adbef78f9ef547d442b7bf91a"
                    ]
                },
                {
                    "command": [
                        "rewrite homk0; auto.",
                        "VernacExtend",
                        "7edbed20cb3421cfdbb0d7207d84a612555b2f0a"
                    ]
                },
                {
                    "command": [
                        "intros v Hv.",
                        "VernacExtend",
                        "7085e3055ce1f1fa4943d89c8ab383f3d7b2f17b"
                    ]
                },
                {
                    "command": [
                        "case (e_in_base1_ex _ _ Hv); intros i (Hi, Hei); subst.",
                        "VernacExtend",
                        "840053db4b6a7bee7547647807f128697dff0ca5"
                    ]
                },
                {
                    "command": [
                        "apply hom1e; auto.",
                        "VernacExtend",
                        "0517ffeef53c1082711fea6ecfc55ad2f83185c8"
                    ]
                },
                {
                    "command": [
                        "intros y1 y2 _ Hy1 _ Hy2; apply add_hom; auto.",
                        "VernacExtend",
                        "8529c6bb028875b5f3f34da7c6c50598009465d0"
                    ]
                },
                {
                    "command": [
                        "intros k y _ Hy; apply scal_hom; auto.",
                        "VernacExtend",
                        "58d190b099aa67602ce791df47f1e16003b4121a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (proj_homk _ _ _ Hx).",
                        "VernacExtend",
                        "419601c3cf367d401cae2647ad58d190bfd70a40"
                    ]
                },
                {
                    "command": [
                        "apply mprod_cbl; auto.",
                        "VernacExtend",
                        "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cblk_homk_equiv",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; split; intros H; auto.",
                        "VernacExtend",
                        "efd6454f0e434640cd044a1f6d7f1d4b9cce57f6"
                    ]
                },
                {
                    "command": [
                        "replace x with (x .* 1: vect 0).",
                        "VernacExtend",
                        "3be43bd2914717e91f0a24af60bf586efd4a1d2c"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal.",
                        "VernacExtend",
                        "b9dab6b9299440e8a6c3b8e2e143e1c66ec4e87a"
                    ]
                },
                {
                    "command": [
                        "constructor; auto with datatypes.",
                        "VernacExtend",
                        "e0e3bc33ebd13f0a395d8591fc2c15599b8c0499"
                    ]
                },
                {
                    "command": [
                        "rewrite scalk, multK1r; auto.",
                        "VernacExtend",
                        "e27cb05d2bc16fbdb80b52d099a9a627debf2040"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite eqKI; auto.",
                        "VernacExtend",
                        "ca078dadd9f4e418868b01a515b29125b20be296"
                    ]
                },
                {
                    "command": [
                        "intros v [].",
                        "VernacExtend",
                        "9186533daeb1e4ccd468f2e1d3aa89a285d8edea"
                    ]
                },
                {
                    "command": [
                        "intros x1 y1 _; do 2 (case eqK_spec; auto; intros HH; subst; try (intros; discriminate)).",
                        "VernacExtend",
                        "3f4740eca2999292de96f39800931fdffe207a14"
                    ]
                },
                {
                    "command": [
                        "Vrm0; rewrite eqKI; auto.",
                        "VernacExtend",
                        "c39435304eff3827997bf6fc540e0e25b79e8809"
                    ]
                },
                {
                    "command": [
                        "intros k1 x1 _; case eqK_spec; auto; intros HH HH1; subst; Vrm0; try discriminate; rewrite eqKI; auto.",
                        "VernacExtend",
                        "5d8ac0cae91cd19fcd9f205a6560c1a134e40834"
                    ]
                },
                {
                    "command": [
                        "generalize H; case eqK_spec; auto; intros; subst; try discriminate.",
                        "VernacExtend",
                        "143437c6a34f86dce416c03a68067d5eaecd367d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; destruct x as [x y]; split; intros HH.",
                        "VernacExtend",
                        "f6b4578224386b8c4e6f4bc3a80fa7cafa420624"
                    ]
                },
                {
                    "command": [
                        "case (cbl_map_inv _ _ (lift n) id id) with (5 := HH); auto.",
                        "VernacExtend",
                        "e0f0d34574c116ff4ebb93fd9fb7d33ed112c8f3"
                    ]
                },
                {
                    "command": [
                        "intros; apply (lift_add n).",
                        "VernacExtend",
                        "22c8f88184629dab3a9831631b3d87442048d9e8"
                    ]
                },
                {
                    "command": [
                        "intros; apply (lift_scal n).",
                        "VernacExtend",
                        "48b6d32f32425411024e32b263a4ebfd04357ebc"
                    ]
                },
                {
                    "command": [
                        "intros x1 (H1x1, H2x1); injection H2x1; intros; subst.",
                        "VernacExtend",
                        "4445d68cf850efaa6a337a9082861ad944d87807"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; simpl; rewrite <- IH; auto.",
                        "VernacExtend",
                        "62611c6dbf9981cc5e39a24fa2d39380a0dba523"
                    ]
                },
                {
                    "command": [
                        "generalize HH; case eq0_spec; try (intros; discriminate).",
                        "VernacExtend",
                        "4697fdfdb989be4670dc6419875cc23696eba5ba"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; subst.",
                        "VernacExtend",
                        "40571e8f28ed3282e281bf864e96a99915f52641"
                    ]
                },
                {
                    "command": [
                        "apply cbl_map with (f := lift n) (g:= id); auto.",
                        "VernacExtend",
                        "7e3bf5766907fcdd9058c9f3a02a91dcec7527b6"
                    ]
                },
                {
                    "command": [
                        "intros; apply (lift_add n).",
                        "VernacExtend",
                        "22c8f88184629dab3a9831631b3d87442048d9e8"
                    ]
                },
                {
                    "command": [
                        "intros; apply (lift_scal n).",
                        "VernacExtend",
                        "48b6d32f32425411024e32b263a4ebfd04357ebc"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; rewrite <-!IH.",
                        "VernacExtend",
                        "77b9592d649a0043e9fb1aaab9c8a8e622639d62"
                    ]
                },
                {
                    "command": [
                        "generalize HH; clear HH.",
                        "VernacExtend",
                        "4dcdcfa2e1145dc5b5eed037acf2c3afc813b5d4"
                    ]
                },
                {
                    "command": [
                        "generalize (base n k) (base n k.+1); intros l1 l2.",
                        "VernacExtend",
                        "f758035187c19dc2d2a3852cea131af440663242"
                    ]
                },
                {
                    "command": [
                        "assert (He: exists l3, l3 = (map (dlift n) l1 ++ map (lift n) l2)%list).",
                        "VernacExtend",
                        "a89b0e9a3b53c7024cd24b2e9aeb4fb048d5fd1f"
                    ]
                },
                {
                    "command": [
                        "exists (map (dlift n) l1 ++ map (lift n) l2)%list; auto.",
                        "VernacExtend",
                        "793c046aa58fc0d41b686b55a22c560a362334b5"
                    ]
                },
                {
                    "command": [
                        "intros HH.",
                        "VernacExtend",
                        "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
                    ]
                },
                {
                    "command": [
                        "change (cbl (vn_eparams n) l1 (fst (x, y)) /\\ cbl (vn_eparams n) l2 (snd (x, y))).",
                        "VernacExtend",
                        "209994e437b8ee96b563210bc1f093c4229073ea"
                    ]
                },
                {
                    "command": [
                        "case He; intros l3 Hl3; simpl in Hl3; rewrite <-Hl3 in HH; generalize Hl3.",
                        "VernacExtend",
                        "32003d504b7f6f1a33e7a51ba7340283b5911142"
                    ]
                },
                {
                    "command": [
                        "elim HH; clear HH Hl3.",
                        "VernacExtend",
                        "ee867ad6d7d27c6e4c6e3bdc63c92c81b2315981"
                    ]
                },
                {
                    "command": [
                        "intros; split; constructor.",
                        "VernacExtend",
                        "4cf63282befab5561acee041896c1f3617f0e1f0"
                    ]
                },
                {
                    "command": [
                        "simpl; intros (x1, y1) H1 H2; subst.",
                        "VernacExtend",
                        "f533160522173222599cc93762e68d78bcd6652f"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ H1); rewrite in_map_iff; intros (v, (H1v, H2v)); injection H1v; intros; subst; split; constructor; auto.",
                        "VernacExtend",
                        "2ba2aed4ff468d912c3b0784b553f25a5eee91d9"
                    ]
                },
                {
                    "command": [
                        "simpl; intros (x1,x2) (y1, y2) Hx1 H1 H2 H3 H4; Vfold n.",
                        "VernacExtend",
                        "e424986cde2b3063093ccc614ce37d30fb3302a0"
                    ]
                },
                {
                    "command": [
                        "split; auto; simpl fst; simpl snd; apply cbl_add; auto.",
                        "VernacExtend",
                        "7664e14189cf6585192d43435a682ce75d3cb1e6"
                    ]
                },
                {
                    "command": [
                        "case H1; auto.",
                        "VernacExtend",
                        "e17d7763e318012934dd49304a7a1025b1fa8bd4"
                    ]
                },
                {
                    "command": [
                        "case H3; auto.",
                        "VernacExtend",
                        "9cb9bbe341f7f1cb8a595ff7b0fa94c496f79f20"
                    ]
                },
                {
                    "command": [
                        "case H1; auto.",
                        "VernacExtend",
                        "e17d7763e318012934dd49304a7a1025b1fa8bd4"
                    ]
                },
                {
                    "command": [
                        "case H3; auto.",
                        "VernacExtend",
                        "9cb9bbe341f7f1cb8a595ff7b0fa94c496f79f20"
                    ]
                },
                {
                    "command": [
                        "simpl; intros k1 (x1, x2) Hx1 H1 H2.",
                        "VernacExtend",
                        "28617211b96f3ebd37ceffe4383cb306eecf2e7c"
                    ]
                },
                {
                    "command": [
                        "split; auto; simpl fst; simpl snd; apply cbl_scal; auto.",
                        "VernacExtend",
                        "61ef6ae499fe3cee632ff7dd73caad82b67bb110"
                    ]
                },
                {
                    "command": [
                        "case H1; auto.",
                        "VernacExtend",
                        "e17d7763e318012934dd49304a7a1025b1fa8bd4"
                    ]
                },
                {
                    "command": [
                        "case H1; auto.",
                        "VernacExtend",
                        "e17d7763e318012934dd49304a7a1025b1fa8bd4"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP in HH; case HH; intros HH1 HH2.",
                        "VernacExtend",
                        "51353f7457a7edd727ecd2b12ca5691b421834e3"
                    ]
                },
                {
                    "command": [
                        "replace (x,y) with (dlift n x + lift n y).",
                        "VernacExtend",
                        "31fa830339f39560bc0d0c1160ea1013d7aa6e23"
                    ]
                },
                {
                    "command": [
                        "apply cbl_add.",
                        "VernacExtend",
                        "0442bdf7cd3553e4cc8e92367ac5905076fa78aa"
                    ]
                },
                {
                    "command": [
                        "apply cbl_incl with (l1 := map (dlift n) (base n k)); auto with datatypes.",
                        "VernacExtend",
                        "086e7755b61ae955490dca4f663ec0035e08e8c0"
                    ]
                },
                {
                    "command": [
                        "apply cbl_map with (f := dlift n) (g:= id); auto.",
                        "VernacExtend",
                        "c2e745280a1b7dffb0fbf09e8d3e93dd2be6dbce"
                    ]
                },
                {
                    "command": [
                        "intros; apply (dlift_add n).",
                        "VernacExtend",
                        "e412a3760cfa576d1ba1a71d68ddf83646b609ce"
                    ]
                },
                {
                    "command": [
                        "intros; apply (dlift_scal n).",
                        "VernacExtend",
                        "02f396d7cc78479f57d5c50dce865e142b1a3318"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "apply cbl_incl with (l1 := map (lift n) (base n k.+1)); auto with datatypes.",
                        "VernacExtend",
                        "e047e64225dd690a36a0223752be2ea8d87d5582"
                    ]
                },
                {
                    "command": [
                        "apply cbl_map with (f := lift n) (g:= id); auto.",
                        "VernacExtend",
                        "7e3bf5766907fcdd9058c9f3a02a91dcec7527b6"
                    ]
                },
                {
                    "command": [
                        "intros; apply (lift_add n).",
                        "VernacExtend",
                        "22c8f88184629dab3a9831631b3d87442048d9e8"
                    ]
                },
                {
                    "command": [
                        "intros; apply (lift_scal n).",
                        "VernacExtend",
                        "48b6d32f32425411024e32b263a4ebfd04357ebc"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; Vrm0; auto.",
                        "VernacExtend",
                        "4952ecab600c1b1817f2895f391e2590485fd41d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_base1_split",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; clear x H.",
                        "VernacExtend",
                        "a1c2ff183583e9b4c29c213ded6aa6f0355f8615"
                    ]
                },
                {
                    "command": [
                        "exists (0%f); exists (0: vect n); split; auto; apply cbl0.",
                        "VernacExtend",
                        "ee443f27fc28dc8d935c6244e8ab63d1e82a608b"
                    ]
                },
                {
                    "command": [
                        "intros v; rewrite base1_S; simpl In.",
                        "VernacExtend",
                        "556a7a4def08fbdc0e7c4c05d82f37e4bf89fd49"
                    ]
                },
                {
                    "command": [
                        "intros [H1 | H1].",
                        "VernacExtend",
                        "e39bf3bab67e37614d01e5b5569f2d4d21689dab"
                    ]
                },
                {
                    "command": [
                        "exists (1%f: K); exists (0: vect n); split; auto; apply cbl0.",
                        "VernacExtend",
                        "ab3266b6e497f6be8a5a33196571614e0f499907"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in H1; case H1; intros y [H1y H2y].",
                        "VernacExtend",
                        "abfd028b8660ba9a83460e940a216c91ec0058e4"
                    ]
                },
                {
                    "command": [
                        "exists (0%f); exists y; split; auto.",
                        "VernacExtend",
                        "1d968bb7e4be8a91f0a1a9e3c3257b17dbff603f"
                    ]
                },
                {
                    "command": [
                        "apply cbl_in; auto.",
                        "VernacExtend",
                        "6e75a9addbb8a44cb5f7a3086f16bc7355249828"
                    ]
                },
                {
                    "command": [
                        "intros x y _ (k1,(y1, (H1y1, H2y1))) _ (k2,(y2, (H1y2, H2y2))); subst x y.",
                        "VernacExtend",
                        "8d23167b575e40bff75f0e50d09631a805395e3b"
                    ]
                },
                {
                    "command": [
                        "exists (k1 + k2)%f; exists (y1 + y2); split; auto.",
                        "VernacExtend",
                        "5897e7690462f0750da686b33ea279dac75ba30e"
                    ]
                },
                {
                    "command": [
                        "apply cbl_add; auto.",
                        "VernacExtend",
                        "9df6b6a5fe172acffe669b4679999f527312c89c"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite addk; auto.",
                        "VernacExtend",
                        "f2304fdd9bfbd15f1069988fa9b208f3d5effb3c"
                    ]
                },
                {
                    "command": [
                        "intros k x _ (k1, (y, (H1y, H2y))); subst x.",
                        "VernacExtend",
                        "5aa891c95f1350e00392f994b930b604890b6cc5"
                    ]
                },
                {
                    "command": [
                        "exists (k*k1)%f; exists ((k: K) .* y); split; auto.",
                        "VernacExtend",
                        "cebe7f220d928171df97f6fade0638e385277c7b"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal; auto.",
                        "VernacExtend",
                        "51daf280d91a2a62f959c15ac782759afba31c8e"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite scalk; auto.",
                        "VernacExtend",
                        "6441a31f7ef0442613ac582fa5300f595d3e59eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_base1_list_split",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "induction l as [| a l1 IH]; auto.",
                        "VernacExtend",
                        "5840821dfcd86444ebe034dd57daed295289613a"
                    ]
                },
                {
                    "command": [
                        "intros; exists (@nil (K * vect n)); exists (@nil (vect n)); repeat split.",
                        "VernacExtend",
                        "9085ebcd8f9436aabe20080859d769b3ddfbbae8"
                    ]
                },
                {
                    "command": [
                        "intros i HH; inversion HH.",
                        "VernacExtend",
                        "de8b8daa43eb1c07fcb6f2396863e2942dd0d245"
                    ]
                },
                {
                    "command": [
                        "intros i HH; inversion HH.",
                        "VernacExtend",
                        "de8b8daa43eb1c07fcb6f2396863e2942dd0d245"
                    ]
                },
                {
                    "command": [
                        "intros i HH; inversion HH.",
                        "VernacExtend",
                        "de8b8daa43eb1c07fcb6f2396863e2942dd0d245"
                    ]
                },
                {
                    "command": [
                        "simpl map; apply perm_id.",
                        "VernacExtend",
                        "310419d2a339c08dc82ec383af1bfe7629c9ddae"
                    ]
                },
                {
                    "command": [
                        "intros Hi.",
                        "VernacExtend",
                        "1760e50437fee0aca9b028404143ef4a8c472680"
                    ]
                },
                {
                    "command": [
                        "case IH; auto with datatypes.",
                        "VernacExtend",
                        "3c25644a203ece9f69ec07e69ea66fedb5480b39"
                    ]
                },
                {
                    "command": [
                        "intros lk (ly, (H1ly, (H2ly, (H3ly, H4ly)))).",
                        "VernacExtend",
                        "8674196211b83d29a78bfcee17eb1c4bd2f690bf"
                    ]
                },
                {
                    "command": [
                        "case (cbl_base1_split n a); auto with datatypes.",
                        "VernacExtend",
                        "27ade18ed0d03effc056515367d7cd01c28b7b14"
                    ]
                },
                {
                    "command": [
                        "intros k (y, (H1y, H2y)); subst a.",
                        "VernacExtend",
                        "39ba9ef944b779c5d57b285fd636419e3987fa0c"
                    ]
                },
                {
                    "command": [
                        "generalize (eqK_dec _ Hp k 0%f); case eqK; intros Hk; try subst k.",
                        "VernacExtend",
                        "a6daee0646c54408e59766a4aaae9f49146e2650"
                    ]
                },
                {
                    "command": [
                        "exists lk; exists (y::ly); repeat split; auto with datatypes.",
                        "VernacExtend",
                        "4ce0d362b7a5679db1048aeac19f10d2313361c9"
                    ]
                },
                {
                    "command": [
                        "simpl; intros i1 [Hi1 | Hi1]; try subst i1; auto.",
                        "VernacExtend",
                        "6dcabb72d267295893b1d50d7acd374bb7a45f17"
                    ]
                },
                {
                    "command": [
                        "apply perm_trans with (2 := perm_cons_app _ y^'l (map (fun x => ([fst x], snd x)) lk) (map (lift n) ly)).",
                        "VernacExtend",
                        "7132e6a8d30354abe9392064d82f7090c521c758"
                    ]
                },
                {
                    "command": [
                        "simpl; apply perm_skip; auto.",
                        "VernacExtend",
                        "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
                    ]
                },
                {
                    "command": [
                        "exists ((k,y)::lk); exists ly; repeat split; auto with datatypes.",
                        "VernacExtend",
                        "641e23f6358939067b0d3c8e13afdd8a6fc22e72"
                    ]
                },
                {
                    "command": [
                        "simpl; intros i1 [Hi1 | Hi1]; try subst i1; auto.",
                        "VernacExtend",
                        "6dcabb72d267295893b1d50d7acd374bb7a45f17"
                    ]
                },
                {
                    "command": [
                        "simpl; intros i1 [Hi1 | Hi1]; try subst i1; auto.",
                        "VernacExtend",
                        "6dcabb72d267295893b1d50d7acd374bb7a45f17"
                    ]
                },
                {
                    "command": [
                        "simpl; apply perm_skip; auto.",
                        "VernacExtend",
                        "d0648c4e112d1c96f0e33d0a1afd9ec74a2ec4c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom_induct",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 H3 H4 v.",
                        "VernacExtend",
                        "ccac594215ee53cd82b251a079ddd64312c08c07"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cblk_homk_equiv; intros HH; elim HH; auto.",
                        "VernacExtend",
                        "d54b9a98c481a898b579c5caef24a7bca085c4e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_add",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros []; auto; rewrite opp_addK; auto.",
                        "VernacExtend",
                        "d0840b6b30797e0d0e366a35897c8daf13a13857"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; intros b; Vfold n.",
                        "VernacExtend",
                        "9d2005e9f9d62ea97984496a85764a579def01ea"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, IH; auto.",
                        "VernacExtend",
                        "db585773d6aa3023d238ac9be82e41e198ea9a00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_invo",
            "line_nb": 678,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros []; auto; rewrite opp_oppK; auto.",
                        "VernacExtend",
                        "9e9ec5d34ac010b0ec8fbf7f96676d020090150a"
                    ]
                },
                {
                    "command": [
                        "intros vv; destruct x; rewrite !IH; auto.",
                        "VernacExtend",
                        "83ff6ae1284249c775244692e3ea9c92ec22d0e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj0",
            "line_nb": 684,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros []; auto; rewrite oppK0; auto.",
                        "VernacExtend",
                        "5b2557ebff0423ef12e5250be4d9dcf84c16173a"
                    ]
                },
                {
                    "command": [
                        "intros b; rewrite IH; rewrite IH; auto.",
                        "VernacExtend",
                        "0fec3ea18563eda493951b1d0b526726cf7fa9ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjk",
            "line_nb": 691,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; auto.",
                        "VernacExtend",
                        "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
                    ]
                },
                {
                    "command": [
                        "destruct b; auto; rewrite IH, conj0; auto.",
                        "VernacExtend",
                        "e82329b3d6649ccc208baacfcea3247487c0b016"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_neg",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH];simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct b; simpl; Krm1.",
                        "VernacExtend",
                        "8a5eacfb7e4a2a4d2ca5a88d71a780edbc1a7a56"
                    ]
                },
                {
                    "command": [
                        "destruct v; Vfold n.",
                        "VernacExtend",
                        "664453bcd0e70623c9d29f0e9ca3d69b7abc70b9"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_involutive, !IH, <-scal_multE; Krm1; rewrite scalE1; auto.",
                        "VernacExtend",
                        "18814a6e76b5559aaeb399c6faf4e66a17e01fca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjt",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "apply (conj_neg n false).",
                        "VernacExtend",
                        "148d1e50e430d313da0c75995cdfb1e96ca73849"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_e",
            "line_nb": 704,
            "steps": [
                {
                    "command": [
                        "generalize i; clear i.",
                        "VernacExtend",
                        "208b471d15be521271abdaf4ee90e51a9a779dca"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try (Vfold n).",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros i H; absurd (i < 0); auto with arith.",
                        "VernacExtend",
                        "8c1b057a1aff91ea817a7d6cdc2911b84fff562e"
                    ]
                },
                {
                    "command": [
                        "intros [| i] H.",
                        "VernacExtend",
                        "a0dd3ff1c21b6a3e0c89dd81a80bdebfa76578bd"
                    ]
                },
                {
                    "command": [
                        "rewrite conj0, scalE0r, conjk; case b; auto.",
                        "VernacExtend",
                        "25ec0ea9723a4afcd3c4f44b525d27e1bcf69284"
                    ]
                },
                {
                    "command": [
                        "rewrite scalk, multK1r; auto.",
                        "VernacExtend",
                        "e27cb05d2bc16fbdb80b52d099a9a627debf2040"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto with arith.",
                        "VernacExtend",
                        "bf8d1ec9c3e811f8f5ef611f01fbad87c0c64ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite conj0, scalE0r; case b; auto.",
                        "VernacExtend",
                        "1ede9e2dadc0fe6d792e611bfbd1e0cde9506042"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_scal",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros []; auto; rewrite opp_multKr; auto.",
                        "VernacExtend",
                        "094de29aa7befa088906d1cac35c65213056e9c6"
                    ]
                },
                {
                    "command": [
                        "intros []; destruct x; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "399fd3c91ce9f165db118314a1787dd1a3df3ff6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_hom",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "generalize b k; clear b k.",
                        "VernacExtend",
                        "4efa106ee9807e78293dcda639d7278b02fda912"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros [|] [|k]; auto.",
                        "VernacExtend",
                        "aadc30ced7744766ea503ec1c78edc98157515a2"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros HH HH1; try discriminate.",
                        "VernacExtend",
                        "70261e64d6157d748f36571ca413cadf5ba6afe7"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, oppK0, eqKI; auto.",
                        "VernacExtend",
                        "f255b7316e050842ad17712da6832c89ea37e8f3"
                    ]
                },
                {
                    "command": [
                        "intros b [|k]; destruct x; rewrite !andbP; intros (H1, H2); split; auto.",
                        "VernacExtend",
                        "4a74c0b0eb146a7169f7cde1775455aca5cf895e"
                    ]
                },
                {
                    "command": [
                        "generalize H1; case eq0_spec; intros Hx1 HH; try discriminate.",
                        "VernacExtend",
                        "65b65c297fb4d405d71336285a0ddf1cc47101e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx1, conj0, eq0I; auto.",
                        "VernacExtend",
                        "b3e9d3327fe994bc7109f11fe56a69c7016d1458"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjf_hom",
            "line_nb": 731,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH];simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros [|k] H; simpl; Krm1.",
                        "VernacExtend",
                        "72b86465ff5179faf1cc8f0943d0adb3bca61159"
                    ]
                },
                {
                    "command": [
                        "generalize H; case eqK_spec; try (intros; discriminate); auto.",
                        "VernacExtend",
                        "4439e44003a964484d89514f488a142e3a87f635"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; Krm0.",
                        "VernacExtend",
                        "40630e130cf05244dd99f99adafaa53d7acb8eb4"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; destruct M; rewrite andbP; intros (HM1, HM2); rewrite conjt; simpl; Vfold n; Krm1.",
                        "VernacExtend",
                        "69dd6dc4a4f35878456991bb98332017d002f786"
                    ]
                },
                {
                    "command": [
                        "generalize HM1; case eq0_spec; try (intros; discriminate); auto.",
                        "VernacExtend",
                        "f410750ffeb8f9c3b706bf61b3ffa9979e7b28a7"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1, (IH _ _ HM2); simpl; Vfold n; Krm1.",
                        "VernacExtend",
                        "fcaf3fe8a4f7d6dc586c474d28b06fd817bec417"
                    ]
                },
                {
                    "command": [
                        "rewrite conj0; Vrm0.",
                        "VernacExtend",
                        "2057e36f92e9ff8d9de1b41d0fa7ca488d5e471d"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ HM1), (IH _ _ HM2).",
                        "VernacExtend",
                        "c7d845fdbacc94c3d2ba29a7e34f88f97c288bb0"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite <-!scal_multE; Krm1.",
                        "VernacExtend",
                        "a3c37245b3e28909b713575fbbfca336d6f19e8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjt_hom",
            "line_nb": 744,
            "steps": [
                {
                    "command": [
                        "intros HH; rewrite conjt, (conjf_hom n k); auto.",
                        "VernacExtend",
                        "b0774f69b05f6ea79ecd6185030be241de6a83a8"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite scal_multE; auto.",
                        "VernacExtend",
                        "3fc360d1e33e755635eaf7fb952a57780aa4039e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_const",
            "line_nb": 748,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; destruct x; rewrite IH; auto.",
                        "VernacExtend",
                        "b3145a5dd61551b971f707483d54389c8eb68dec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_swap",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "case b1; case b2; rewrite ?conjt, ?conj_scal, !conj_invo; auto.",
                        "VernacExtend",
                        "de14a206c38313833cca3649b9eb26b96ebddd0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_all",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrec]; simpl; auto.",
                        "VernacExtend",
                        "132f18b12c61b68ca0ad97d52d5f1a018cfd9350"
                    ]
                },
                {
                    "command": [
                        "intros b; Krm1.",
                        "VernacExtend",
                        "524c332f8a560953803f21f7d562ec649b235b9f"
                    ]
                },
                {
                    "command": [
                        "intros b; repeat rewrite Hrec; case b; simpl; auto; rewrite conj0; Vfold n; Vrm0.",
                        "VernacExtend",
                        "e4dfac3950cd6fc093c6ccbb5e6dc984f4ba81dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <-opp_multK1l; Krm1.",
                        "VernacExtend",
                        "2b95cf3589d56bbb19fae12cc0c7bbda0243804d"
                    ]
                },
                {
                    "command": [
                        "rewrite <-opp_multK1l; auto.",
                        "VernacExtend",
                        "7d8594a972782cd327179f5cfa742a0ad0d1dce4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_scall",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc; auto.",
                        "VernacExtend",
                        "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; rewrite scal_addEr, conj_scal, !IH; auto.",
                        "VernacExtend",
                        "1a73117f1dd9b42e075e07eaba9f624a4d0ed21e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join0",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join0l",
            "line_nb": 774,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite multK0l; auto.",
                        "VernacExtend",
                        "d9fd994fb151459953bfa2baf32130a8d503b021"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite IH, conj0, IH; Vrm0.",
                        "VernacExtend",
                        "08282addd5ee814f17825ef754eb4850efd116f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join0r",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite multK0r; auto.",
                        "VernacExtend",
                        "26ceb2e14741c0b552d3ebdce818a91972e3fbff"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite !IH; Vrm0.",
                        "VernacExtend",
                        "88f8117d0ebc0b0a6510bc5306bf302ab99c7ff5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinkl",
            "line_nb": 786,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite IH, conjk, join0l, addE0l, IH; auto.",
                        "VernacExtend",
                        "3a2ff8e10273bdcf00a8031a4a10c2bfd82e6b3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinkr",
            "line_nb": 790,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com; auto.",
                        "VernacExtend",
                        "101cba15515a9d835b9963a8591487a473d1eb94"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite !IH, join0r, addE0r; auto.",
                        "VernacExtend",
                        "26a09fad954aaf12bca50f9c5ba582a0299cbb88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join1l",
            "line_nb": 795,
            "steps": [
                {
                    "command": [
                        "rewrite joinkl, scalE1; auto.",
                        "VernacExtend",
                        "97b34e638e8710de8c4d1d0a25f7a1d82ad11b3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join1r",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "intros; rewrite joinkr, scalE1; auto.",
                        "VernacExtend",
                        "21f2bc0bb5f2c14add067ac85fd0aa421abcd9ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_alll",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite multK_com; auto.",
                        "VernacExtend",
                        "fa6d9a06ebff52e4b6db767975910908886771ff"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite conj0, !join0l, addE0r, IH; auto.",
                        "VernacExtend",
                        "64e4627b5d652977dc0b8501fe7e7691aaf8633a"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "d09b8061bdfc2ca827baa7883fccaa98030b1371"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_allr",
            "line_nb": 807,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite !join0r, addE0l, IH; auto.",
                        "VernacExtend",
                        "61ebd856b3e4bb9f70fe7cdfa9f8ff16fd7c2e71"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n; rewrite scalE0r, conj_const; auto.",
                        "VernacExtend",
                        "02a231ef4b4fda6f5e9a2c946c55747960079106"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_allhr",
            "line_nb": 812,
            "steps": [
                {
                    "command": [
                        "intros Hh Hl; rewrite join_allr, (const_hom n k), scalE0l; auto.",
                        "VernacExtend",
                        "5a44ecc51dec5677b11d21a513d8d6ca01351aae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_allhl",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "intros Hh Hl; rewrite join_alll, (const_hom n k), scalE0l; auto.",
                        "VernacExtend",
                        "37433f840d2cb7189a2da66c97754cc6b824ed56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_scalr",
            "line_nb": 818,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite (multK_com _ Hp x), (multK_com _ Hp x), multK_assoc; auto.",
                        "VernacExtend",
                        "53ba13306ac748c74bfc88ec1007eb4105addfdc"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4afd4b00a15d150c043e397c57c0ba1d7dd72f11"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, IH, <- scal_addEr; auto.",
                        "VernacExtend",
                        "0e1a40b661002189db9d729d1d759ed895ba02c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joink",
            "line_nb": 824,
            "steps": [
                {
                    "command": [
                        "rewrite joinkl, <- scalk; auto.",
                        "VernacExtend",
                        "6f5daa2ce82183d2e774ce60cb0b15b5bf5a0638"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_e0",
            "line_nb": 827,
            "steps": [
                {
                    "command": [
                        "destruct M; simpl; Vfold n.",
                        "VernacExtend",
                        "57d14b4d637b3e6ab4278e3510e7a19749028849"
                    ]
                },
                {
                    "command": [
                        "rewrite conj0, !join0l, joinkl, scalE1; Vrm0.",
                        "VernacExtend",
                        "ec9b03e6135b8e6bcacbd57e1e3bf91c9828406b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_ei",
            "line_nb": 831,
            "steps": [
                {
                    "command": [
                        "intros HH; destruct M; simpl; Vfold n.",
                        "VernacExtend",
                        "e4338fce2c00bffcc5767e3c857f3a5b0d416884"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, conj_e, join_scall; Vrm0.",
                        "VernacExtend",
                        "d86fd871c8b6fef9d5aaeef600328293f2952b5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_es",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "generalize i j; clear i j.",
                        "VernacExtend",
                        "7230cc281ef8db497ddc79e16ce29d12f2650ff7"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros i j H; absurd (i < 0); auto with arith.",
                        "VernacExtend",
                        "4d4e481330c04402d0fea9a4245fd00bef1826d5"
                    ]
                },
                {
                    "command": [
                        "intros [|i] [|j].",
                        "VernacExtend",
                        "5c49da5d1d2d1a4419569702364ce9d926c0308f"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, conj0, join0l, addE0r, addE0r; auto.",
                        "VernacExtend",
                        "e3e491a74c8e251be6631c156fd15fb58a11e043"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, join1r, join1l, join0l, addE0l, addE0r, join0r, addE0r, conj_e; simpl; auto with arith.",
                        "VernacExtend",
                        "1330731369d4e6557ae9f20682675924bd010341"
                    ]
                },
                {
                    "command": [
                        "Vfold n; pattern (gen n j) at 1; replace (gen n j) with (1.* (gen n j)) by (rewrite scalE1; auto).",
                        "VernacExtend",
                        "e277ea0bb3538190429b253a46e00ea0e7f66413"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scal_addEl, oppKr, scalE0l; auto.",
                        "VernacExtend",
                        "6144431eee905af2eaa124d266a1990bd17b9f33"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, join1r, join1l, join0l, addE0l, addE0r, join0r, addE0r, conj_e; simpl; auto with arith.",
                        "VernacExtend",
                        "1330731369d4e6557ae9f20682675924bd010341"
                    ]
                },
                {
                    "command": [
                        "Vfold n; pattern (gen n i) at 2; replace (gen n i) with (1.* (gen n i)) by (rewrite scalE1; auto).",
                        "VernacExtend",
                        "d25572fb83b9ab7132c102b73f46480e82a9e8dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scal_addEl, oppKl, scalE0l; auto.",
                        "VernacExtend",
                        "ab5da88185fda9886ed24ac7cda51a687a73f29f"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, IH; try rewrite join0l; try rewrite join0r; try rewrite addE0l; try rewrite addE0l; auto with arith.",
                        "VernacExtend",
                        "47c2b77632a568802469be5196b22979047f7571"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_e",
            "line_nb": 852,
            "steps": [
                {
                    "command": [
                        "generalize i; clear i.",
                        "VernacExtend",
                        "208b471d15be521271abdaf4ee90e51a9a779dca"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros i Hi; absurd (i < 0); auto with arith.",
                        "VernacExtend",
                        "b41886e95cab13fe29ed981f0183b92b5c1af50d"
                    ]
                },
                {
                    "command": [
                        "intros [|i] Hi.",
                        "VernacExtend",
                        "164d9a97294d4c551d461a218f7fa5277592ebfe"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, addE0l, conj0, join0l; auto.",
                        "VernacExtend",
                        "a12261efc1e5580aa9faced0a132f65639ead526"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, join0l, join0r, addE0l; auto with arith.",
                        "VernacExtend",
                        "286d3fb27b2bc20fde6920b0ba428215d4c4cc73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_addl",
            "line_nb": 860,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "apply (add_multKl p); auto.",
                        "VernacExtend",
                        "d8df24b9d8fa982ffaa697acabefe391209fd837"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; destruct z.",
                        "VernacExtend",
                        "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
                        "VernacExtend",
                        "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_add, !addE_assoc; auto.",
                        "VernacExtend",
                        "2af3526902486da5dd77578a3c66c73b16aae781"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, addE_com, !addE_assoc; auto.",
                        "VernacExtend",
                        "78c88575968029f80232b3d262c4dd90bc74a7bb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_addr",
            "line_nb": 871,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros; apply (add_multKr p); auto.",
                        "VernacExtend",
                        "bef705bbd270bdcf25983a12b6d3c79b4ca27ab7"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; destruct z.",
                        "VernacExtend",
                        "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
                        "VernacExtend",
                        "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
                    ]
                },
                {
                    "command": [
                        "rewrite !addE_assoc; auto.",
                        "VernacExtend",
                        "ce214b315400588aac8118eb43bbb788a8f0634d"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, addE_com,!addE_assoc; auto.",
                        "VernacExtend",
                        "78c88575968029f80232b3d262c4dd90bc74a7bb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjf_join",
            "line_nb": 882,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto; simpl; Vfold n.",
                        "VernacExtend",
                        "234c1213ae30fd3e7ce8be608aca8d8c90ab9bc1"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y.",
                        "VernacExtend",
                        "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_add, IH, !conjt, !IH, conj_invo, !join_scall, !join_scalr; auto.",
                        "VernacExtend",
                        "b39e34fb4ae980f6fe0f28b9e70dde2a38bbbedc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_join_com",
            "line_nb": 899,
            "steps": [
                {
                    "command": [
                        "intros H x y Hx; elim Hx; clear x Hx.",
                        "VernacExtend",
                        "b03e0da6294a175cebc9b1e1b708680b54932433"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite join0l; rewrite join0r; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "67558ec1547594adc6c242c80d89e79bf96cf5e5"
                    ]
                },
                {
                    "command": [
                        "intros vx Hvx Hy; elim Hy; clear y Hy; auto.",
                        "VernacExtend",
                        "462d1e99e64efe77e96594370f459f0d3c9b265b"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, scalE0r; auto.",
                        "VernacExtend",
                        "ede9ef0f0518cf685fffa71a356fb7941e825490"
                    ]
                },
                {
                    "command": [
                        "intros x y Hx Hx1 Hy Hy1; rewrite join_addl, Hx1, Hy1, <- scal_addEr, join_addr; auto.",
                        "VernacExtend",
                        "ffbc431264b2b68d781d64c3ab7b62ea21c6ad11"
                    ]
                },
                {
                    "command": [
                        "intros k x Hx Hx1.",
                        "VernacExtend",
                        "2b09d44292c93c18f26a186272d2103f24f3c202"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, Hx1, <- scal_multE, join_scalr, <- scal_multE, multK_com; auto.",
                        "VernacExtend",
                        "a85369ba3c102dbe0a72f9190e6b8376c8ba9c56"
                    ]
                },
                {
                    "command": [
                        "intros x y1 Hx Hxrec Hy1 Hy1rec Hy.",
                        "VernacExtend",
                        "727ea32fe8ce99626e3c2ac4e1b592e039061faf"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, Hxrec, Hy1rec; auto.",
                        "VernacExtend",
                        "cbf61df63bd1f625e8a7c34f1e3b1aa789bfb6dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scal_addEr, join_addl; auto.",
                        "VernacExtend",
                        "40bbd6508ab5b7e882abf43e52278dba60ec2718"
                    ]
                },
                {
                    "command": [
                        "intros k x Hx Hxrec Hy.",
                        "VernacExtend",
                        "7dd1a1c3bccbe06058ae9a4ede49ed8df3de682f"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scalr, Hxrec, <- scal_multE, join_scall, <- scal_multE, multK_com; auto.",
                        "VernacExtend",
                        "bbaff2b2066301673114bdd6e33ca59d9406e82f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_base_join_com",
            "line_nb": 913,
            "steps": [
                {
                    "command": [
                        "apply (cbl_join_com n).",
                        "VernacExtend",
                        "dc55e383ab31365912fce787c687b7eebbad018e"
                    ]
                },
                {
                    "command": [
                        "intros x1 y1 Hx Hy.",
                        "VernacExtend",
                        "2c801f18e913e53c4d66a3e03a79f739311092a7"
                    ]
                },
                {
                    "command": [
                        "case (e_in_base1_ex _ _ Hx); intros i (Hi, Hi1).",
                        "VernacExtend",
                        "644d706484d2b3335b36bb4e9b1d084150800d00"
                    ]
                },
                {
                    "command": [
                        "case (e_in_base1_ex _ _ Hy); intros j (Hj, Hj1).",
                        "VernacExtend",
                        "3832755871785d313d9e5b77dc07e00751240b96"
                    ]
                },
                {
                    "command": [
                        "rewrite Hi1; rewrite Hj1.",
                        "VernacExtend",
                        "2e40ab40a228242b04cf5b6bb7a9c662b5562ed6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (addE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "84e425537ed68ccfc9348fef669063318831d6d4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (join_es n j i), addE_assoc, scal_addE0, addE0r; auto.",
                        "VernacExtend",
                        "4fa7d5b6f59e4de2b3dfc42a843670318cf8f53b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_join_id",
            "line_nb": 922,
            "steps": [
                {
                    "command": [
                        "intros H H1 x Hx; elim Hx; clear x Hx; auto.",
                        "VernacExtend",
                        "db903afd24ddb412f349b0d5709e94d0fb53a08f"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite join0l; auto.",
                        "VernacExtend",
                        "b8d3dfdddab7f12b4f32262dc77cb50fb578fdea"
                    ]
                },
                {
                    "command": [
                        "intros x y Hx Hxrec Hy Hyrec.",
                        "VernacExtend",
                        "6de7ec2686bf3f3274fcbd3d4df56c04e7ed34e2"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, join_addl, join_addl, Hxrec, Hyrec, addE0l, addE0r; auto.",
                        "VernacExtend",
                        "672d0f92c6ec823c1b250ea3013728ff3ca5df8d"
                    ]
                },
                {
                    "command": [
                        "rewrite (cbl_join_com _ _ H x), addE_com, scal_addE0; auto.",
                        "VernacExtend",
                        "84a46bd0e22c38039ae161fae43d32be69268b29"
                    ]
                },
                {
                    "command": [
                        "intros k x Hx IH; rewrite join_scall, join_scalr, IH, scalE0r, scalE0r; auto.",
                        "VernacExtend",
                        "bf10f3f2fb1f0693916db13ce5de6434a0c825bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_base_join_id",
            "line_nb": 930,
            "steps": [
                {
                    "command": [
                        "intros Hx; apply (cbl_join_id n (base n 1)); auto; clear x Hx.",
                        "VernacExtend",
                        "343c8e455220a226b8b194e91b4e2c87a4659613"
                    ]
                },
                {
                    "command": [
                        "intros x y Hx Hy.",
                        "VernacExtend",
                        "7566bd3dac9a8437bd137c0d7aaa934e9b1723a2"
                    ]
                },
                {
                    "command": [
                        "case (e_in_base1_ex _ _ Hx); intros i (Hi, Hi1).",
                        "VernacExtend",
                        "644d706484d2b3335b36bb4e9b1d084150800d00"
                    ]
                },
                {
                    "command": [
                        "case (e_in_base1_ex _ _ Hy); intros j (Hj, Hj1).",
                        "VernacExtend",
                        "3832755871785d313d9e5b77dc07e00751240b96"
                    ]
                },
                {
                    "command": [
                        "rewrite Hi1; rewrite Hj1.",
                        "VernacExtend",
                        "2e40ab40a228242b04cf5b6bb7a9c662b5562ed6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (addE0l (vn_eparams n)), <- (join_es n j i), addE_assoc, scal_addE0, addE0r; auto.",
                        "VernacExtend",
                        "84bc4c4ad5536fe14dccd5bb80d0072117dec5ec"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "case (e_in_base1_ex _ _ Hx); intros i (Hi, Hi1).",
                        "VernacExtend",
                        "644d706484d2b3335b36bb4e9b1d084150800d00"
                    ]
                },
                {
                    "command": [
                        "rewrite Hi1, join_e; auto.",
                        "VernacExtend",
                        "a97bbe990e36d14e7aefda311727e27f8a7319ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_hom1_id",
            "line_nb": 941,
            "steps": [
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv.",
                        "VernacExtend",
                        "2ba6aab797ea092e1704a86e4cd16f4147d09661"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl_base_join_id; auto.",
                        "VernacExtend",
                        "1737d0edd32ec4c0f3f7dfca2b963f3985c6170d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_join",
            "line_nb": 945,
            "steps": [
                {
                    "command": [
                        "unfold lift; simpl; try Vfold n.",
                        "VernacExtend",
                        "849ebe511939fb78e3cfe57904f5e17896b57209"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, addE0l, join0r; auto.",
                        "VernacExtend",
                        "dd6fe0f5505c26d91e5bbb01a84948adf012bd47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_hom",
            "line_nb": 949,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; simpl; auto.",
                        "VernacExtend",
                        "8d6e5065d98eacfb2cad6a5c9453db513c173ed3"
                    ]
                },
                {
                    "command": [
                        "intros _; case eqK_spec; auto; intros HH HH1; try discriminate.",
                        "VernacExtend",
                        "3f25c1ddbda11b9d35b3722cb48c601b298bec1b"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, multK0r, eqKI; auto.",
                        "VernacExtend",
                        "146b9750e0c522ec943b9af77a6d0c4f349edea7"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros HH HH1 _; try discriminate.",
                        "VernacExtend",
                        "a54243a2c832010d72e5d2111dca5c66042c4253"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, multK0l, eqKI; auto.",
                        "VernacExtend",
                        "8cc21617b65ae20afcfd60f8e8d1fa1ad4a39b85"
                    ]
                },
                {
                    "command": [
                        "intros _; case eqK_spec; auto; intros HH HH1; try discriminate.",
                        "VernacExtend",
                        "3f25c1ddbda11b9d35b3722cb48c601b298bec1b"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, multK0r, eqKI; auto.",
                        "VernacExtend",
                        "146b9750e0c522ec943b9af77a6d0c4f349edea7"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "7c0c4bc4855d39118f98f5c1e55c5fb141e560ed"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; case eq0_spec; try (intros; discriminate); intros HH1 HH2; subst.",
                        "VernacExtend",
                        "701956c7ff16218a4f331b4baef8f9e644751206"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, addE0l, eq0I; auto; intros HH1 HH2.",
                        "VernacExtend",
                        "a9dd68ee534e5ff0c2174931c8aa8993b5d063d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ HH1), (hom0E _ _ HH2), joink, hom0K; auto.",
                        "VernacExtend",
                        "33b99b4f3a31540fce3133655055f75a6b40df87"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate); intros HH1 HH2 HH3; subst.",
                        "VernacExtend",
                        "03b4e9dbf024e7c7df2bcf0f1ecf6bb2f94be760"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, addE0l; auto.",
                        "VernacExtend",
                        "9092ad0851e303379e5260dbf7b78e64e245a4ff"
                    ]
                },
                {
                    "command": [
                        "generalize (IH x2 y1 0%nat k2.+1 HH2).",
                        "VernacExtend",
                        "230824b094b1d9c6a43b90afd660acb328f23c94"
                    ]
                },
                {
                    "command": [
                        "intros HH4.",
                        "VernacExtend",
                        "7a9bc088eebb1bedbc4ce1401f64e329a0bc5b92"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ 0%nat k2); auto.",
                        "VernacExtend",
                        "f73209197dc45e0d7cdf6ca74953b3bb72dba152"
                    ]
                },
                {
                    "command": [
                        "apply (IH _ _ 0%nat k2.+1); auto.",
                        "VernacExtend",
                        "59a0dde42b68b76ff8a7976cc2aa6a0c92f5febe"
                    ]
                },
                {
                    "command": [
                        "generalize HH3; case hom; auto; intros; discriminate.",
                        "VernacExtend",
                        "4eed288d2bddf0dc21b14b24dfcbb478db902130"
                    ]
                },
                {
                    "command": [
                        "generalize HH3; case hom; auto.",
                        "VernacExtend",
                        "72d522f2c77c32df2eb6436e27c743268cdf8d00"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate); intros HH1 HH2 HH3; subst.",
                        "VernacExtend",
                        "03b4e9dbf024e7c7df2bcf0f1ecf6bb2f94be760"
                    ]
                },
                {
                    "command": [
                        "rewrite join0r, addE0r, <- plus_n_O; auto.",
                        "VernacExtend",
                        "009c99ee015de727e10360468f04f08affca38af"
                    ]
                },
                {
                    "command": [
                        "pattern k1 at 1; rewrite (plus_n_O k1).",
                        "VernacExtend",
                        "60bf6992046887623480ce3ef3480c0f4cf9465f"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_n_O k1.+1).",
                        "VernacExtend",
                        "aac1f41360220862645428db36393e653b729cd9"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto.",
                        "VernacExtend",
                        "ab7c838ddd716a3b14059f64c365105253349c54"
                    ]
                },
                {
                    "command": [
                        "generalize HH2; case hom; auto; intros; discriminate.",
                        "VernacExtend",
                        "68190841072a6abc548cbdc4b3cbef09adbf4a87"
                    ]
                },
                {
                    "command": [
                        "generalize HH2; case hom; auto; intros; discriminate.",
                        "VernacExtend",
                        "68190841072a6abc548cbdc4b3cbef09adbf4a87"
                    ]
                },
                {
                    "command": [
                        "intros HH1 HH2.",
                        "VernacExtend",
                        "73da631e2c763e0cfe29b2b1efe09ef1b4873d80"
                    ]
                },
                {
                    "command": [
                        "assert (Hx1: hom n k1 x1).",
                        "VernacExtend",
                        "7f35ff018fc097841a609cd9dfbbd7ef2ce648e9"
                    ]
                },
                {
                    "command": [
                        "generalize HH1; case hom; auto.",
                        "VernacExtend",
                        "32b73952960eb29d93be4f762c29746a14160f8e"
                    ]
                },
                {
                    "command": [
                        "assert (Hx2: hom n k1.+1 x2).",
                        "VernacExtend",
                        "6c5b8b47bc3de60cdf9405a27978da691aad4cb8"
                    ]
                },
                {
                    "command": [
                        "generalize HH1; rewrite Hx1; auto.",
                        "VernacExtend",
                        "f375d75890efde357ce4f5e0c05cfd6f85305511"
                    ]
                },
                {
                    "command": [
                        "assert (Hy1: hom n k2 y1).",
                        "VernacExtend",
                        "6a342c773c6002363c0558e9510ff01a6df40e74"
                    ]
                },
                {
                    "command": [
                        "generalize HH2; case hom; auto.",
                        "VernacExtend",
                        "a3b04198395d8e2aacaa8c089ec05628a5591674"
                    ]
                },
                {
                    "command": [
                        "assert (Hy2: hom n k2.+1 y2).",
                        "VernacExtend",
                        "e27d79b4a565d3e487d2bc0e02c4e2b4a0cd58a6"
                    ]
                },
                {
                    "command": [
                        "generalize HH2; rewrite Hy1; auto.",
                        "VernacExtend",
                        "fe1855f8edcd8e59633531e65d71c73ae899982d"
                    ]
                },
                {
                    "command": [
                        "rewrite add_hom; auto.",
                        "VernacExtend",
                        "aec76efedf2adfbd6baa817954a8188e4fad087e"
                    ]
                },
                {
                    "command": [
                        "apply (IH _ _ k1.+1 k2.+1); auto.",
                        "VernacExtend",
                        "3d4ac702ff31ccdfbe1badfc517b00c54e269dcf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Plus.plus_Snm_nSm.",
                        "VernacExtend",
                        "81f2adf51f45cca9ce405dc47c99d5046741f60c"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto.",
                        "VernacExtend",
                        "ab7c838ddd716a3b14059f64c365105253349c54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_big",
            "line_nb": 994,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hlt; apply hom_lt with (k1 + k2)%nat; auto.",
                        "VernacExtend",
                        "bec2cd2ba6d00737bd8b7ff3132c5347faea6653"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_join",
            "line_nb": 997,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto; simpl; try Vfold n.",
                        "VernacExtend",
                        "c3709a7fa359654a333f9e914a0cd7ecdad13148"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; simpl; auto.",
                        "VernacExtend",
                        "614cfef5ea21474c7ae778ecba30d154f3fcc9a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_decomp",
            "line_nb": 1001,
            "steps": [
                {
                    "command": [
                        "simpl; Vfold n; rewrite conj0, !join0l, !addE0r, addE0l, join1l; auto.",
                        "VernacExtend",
                        "ee84d042a36bbf27a0ba869f16bee1be4873fb88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "base_in",
            "line_nb": 1004,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros k [].",
                        "VernacExtend",
                        "c55ace338c9e9989d901e06380d6257266708513"
                    ]
                },
                {
                    "command": [
                        "intros [| k] HH; destruct x as [x1 x2].",
                        "VernacExtend",
                        "a993805243758e29ce705af1ee7d5e8008871f00"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ HH); rewrite in_map_iff; intros (x, (H1x, H2x)); injection H1x; intros; subst.",
                        "VernacExtend",
                        "3bf26d39df69b937d150cf0ecc272b65f15fc50d"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; exists (lift n x1); simpl; split; Vfold n.",
                        "VernacExtend",
                        "d1a581579dc14b95f03ce616934c6146552d81a6"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, join1l, addE0r; auto .",
                        "VernacExtend",
                        "47d152d20a6e2682c49874c056b776fdc1c0e59b"
                    ]
                },
                {
                    "command": [
                        "apply in_map; auto.",
                        "VernacExtend",
                        "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
                    ]
                },
                {
                    "command": [
                        "case (IH x2 0%nat); auto; intros i (y, (H1y, H2y)).",
                        "VernacExtend",
                        "1215f6bf56cb884d0fa25036e4e9283b71366c61"
                    ]
                },
                {
                    "command": [
                        "exists (1 + i)%nat; exists (lift n y); simpl; split; Vfold n.",
                        "VernacExtend",
                        "ee1bce6d5d5751c976d4369a387cb18427f0fb25"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, addE0r, H1y; auto .",
                        "VernacExtend",
                        "411aa01b3826d0ae4f2949b46a49b8264393b77f"
                    ]
                },
                {
                    "command": [
                        "apply in_map; auto.",
                        "VernacExtend",
                        "2059af05b402fab7c36eaeb726ab8ef5abc28e20"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ HH); rewrite in_map_iff; intros (x, (H1x, H2x)); injection H1x; intros; subst.",
                        "VernacExtend",
                        "3bf26d39df69b937d150cf0ecc272b65f15fc50d"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; exists (lift n x1); simpl; split; Vfold n.",
                        "VernacExtend",
                        "d1a581579dc14b95f03ce616934c6146552d81a6"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, join1l, addE0r; auto .",
                        "VernacExtend",
                        "47d152d20a6e2682c49874c056b776fdc1c0e59b"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app; right; apply in_map; auto.",
                        "VernacExtend",
                        "ec3da475b92b9bd267d2592c154df5f3b6b8cbb8"
                    ]
                },
                {
                    "command": [
                        "case (IH x2 k.+1%nat); auto; intros i (y, (H1y, H2y)).",
                        "VernacExtend",
                        "994cada2c8c2775a84f61088049249b33dd08509"
                    ]
                },
                {
                    "command": [
                        "exists (1 + i)%nat; exists (lift n y); simpl; split; Vfold n.",
                        "VernacExtend",
                        "ee1bce6d5d5751c976d4369a387cb18427f0fb25"
                    ]
                },
                {
                    "command": [
                        "rewrite join0l, join0r, addE0r, H1y; auto .",
                        "VernacExtend",
                        "411aa01b3826d0ae4f2949b46a49b8264393b77f"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app; right; apply in_map; auto.",
                        "VernacExtend",
                        "ec3da475b92b9bd267d2592c154df5f3b6b8cbb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods_nil",
            "line_nb": 1027,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods_cons",
            "line_nb": 1030,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods1",
            "line_nb": 1033,
            "steps": [
                {
                    "command": [
                        "induction vs as [| v vs IH]; simpl; auto with datatypes.",
                        "VernacExtend",
                        "c01553739a4704dcb13608dd712457a3d9084b8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods_id",
            "line_nb": 1036,
            "steps": [
                {
                    "command": [
                        "induction vs as [| v vs IH]; intros x; simpl In; auto.",
                        "VernacExtend",
                        "d88c28f2f788f3805999d149de17dfd02dbb66f2"
                    ]
                },
                {
                    "command": [
                        "intros [H1 | H1]; auto with datatypes.",
                        "VernacExtend",
                        "d8e5442b32bb2934ef07a1684eddb160cff35053"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app; left; rewrite <- H1.",
                        "VernacExtend",
                        "1ba5b76cb6760dec3e2429d647426560835972f8"
                    ]
                },
                {
                    "command": [
                        "pattern v at 1; rewrite <- (join1r n v); apply in_map.",
                        "VernacExtend",
                        "b508be72bf21a61b81e9fd1a212619059bf8b219"
                    ]
                },
                {
                    "command": [
                        "apply all_prods1.",
                        "VernacExtend",
                        "80b4461720e1d0af421726f2b23d962a89553c85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods_length",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "induction vs as [| v vs IH]; simpl all_prods; auto.",
                        "VernacExtend",
                        "71df22ff50a7fd83f70219d737169cd456b9bc38"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length; rewrite map_length; rewrite IH.",
                        "VernacExtend",
                        "585f6a3a647837d45f870488149e1e1dc42e5945"
                    ]
                },
                {
                    "command": [
                        "simpl length; rewrite expS; simpl; auto with arith.",
                        "VernacExtend",
                        "d3f15ad407822e4cdb1e9d30d3fed4c229866ca5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods_lift",
            "line_nb": 1048,
            "steps": [
                {
                    "command": [
                        "induction vs as [| v vs IH].",
                        "VernacExtend",
                        "3bb558582565db25eb750548bde8443fbd0ba694"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "simpl map; rewrite (all_prods_cons n.+1).",
                        "VernacExtend",
                        "2951aa4ecd9eb33b1429caea332bf7c640ff338d"
                    ]
                },
                {
                    "command": [
                        "change (vect n * vect n)%type with (vect n.+1).",
                        "VernacExtend",
                        "f60a7b990ddeea10400d072bacc26aa80712420c"
                    ]
                },
                {
                    "command": [
                        "rewrite map_app; rewrite IH.",
                        "VernacExtend",
                        "aecbad5a3d54aabb059006151be6ed8c8a485ebd"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @app (vect n.+1)); auto.",
                        "VernacExtend",
                        "1f0d62f26c9669172cd0bf21646eb88a761c0d4c"
                    ]
                },
                {
                    "command": [
                        "elim all_prods; auto.",
                        "VernacExtend",
                        "5fc91a8cade9d86f63b45e2e5cc248d8711f5f0e"
                    ]
                },
                {
                    "command": [
                        "intros a l IH1.",
                        "VernacExtend",
                        "1efbc0c8e77f24cec81fa0a7b2bfefb36c07ea52"
                    ]
                },
                {
                    "command": [
                        "assert (map_cons: forall (A B: Type) (f: A -> B) a l, map f (a:: l) = f a :: map f l); auto.",
                        "VernacExtend",
                        "d3563c10ebfebc1b9f6230f1302ef8d8f441c9b4"
                    ]
                },
                {
                    "command": [
                        "rewrite !map_cons, IH1, lift_join; auto.",
                        "VernacExtend",
                        "c26ffbb0ca3ab3c57b319c0aca83e86c7799eac1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_prods_hom",
            "line_nb": 1060,
            "steps": [
                {
                    "command": [
                        "induction vs as [| v vs IH]; simpl.",
                        "VernacExtend",
                        "dbea37c1950c0c40977921e59c7611df5b19d4ad"
                    ]
                },
                {
                    "command": [
                        "intros _ i [[]|[]]; exists 0%nat; apply hom0K.",
                        "VernacExtend",
                        "ce654bf8a06cdffb8ef3648e88752912594f4d21"
                    ]
                },
                {
                    "command": [
                        "intros H i Hi; case (in_app_or _ _ _ Hi); clear Hi; intros Hi.",
                        "VernacExtend",
                        "08dd87c8cc6e1def7a72fc2b096c5e000f781e25"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in Hi; case Hi; intros v1 (H1v,H2v); subst.",
                        "VernacExtend",
                        "69475a64bb6f60643f30e0cb9465f494ab7e5a32"
                    ]
                },
                {
                    "command": [
                        "assert (H1: forall i, In i vs -> exists k : nat, hom n k i); auto with datatypes.",
                        "VernacExtend",
                        "e8bd2fea623c4113f5dc99486ce20f5cbf110c5f"
                    ]
                },
                {
                    "command": [
                        "case (H v); auto; intros k1 Hk1.",
                        "VernacExtend",
                        "307102da410b6b1a2bb9ca14cba16d5ce71ef401"
                    ]
                },
                {
                    "command": [
                        "case (IH H1 v1); auto; intros k2 Hk2.",
                        "VernacExtend",
                        "4ec970b82770b3f3589dc74e1a3b46539fe32fd1"
                    ]
                },
                {
                    "command": [
                        "exists (k1 + k2)%nat; auto.",
                        "VernacExtend",
                        "7a2319ee4cfa4f641a44f9b82f41622338ebe62e"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto.",
                        "VernacExtend",
                        "ab7c838ddd716a3b14059f64c365105253349c54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "v2l_length",
            "line_nb": 1072,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct v; rewrite app_length; rewrite IH; rewrite IH.",
                        "VernacExtend",
                        "7142f353c8142884a5cdcdb12b1f1de5acc96e05"
                    ]
                },
                {
                    "command": [
                        "case n; auto.",
                        "VernacExtend",
                        "9e0de88c8c640757fc906751ce11b2a80762e3de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_all_prods",
            "line_nb": 1102,
            "steps": [
                {
                    "command": [
                        "rewrite <- (mprod_2l n v); apply mprod_cbl; auto.",
                        "VernacExtend",
                        "e42f9e7fcc81c70c684d8b504e1c0c4e71d8214b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vect_induct",
            "line_nb": 1141,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 H3 H4 H5 v.",
                        "VernacExtend",
                        "f119dc5cdc1026cdc5302b36b3d978123255f290"
                    ]
                },
                {
                    "command": [
                        "generalize (cbl_all_prods n v); intros HH; elim HH; auto; clear v HH.",
                        "VernacExtend",
                        "11d8b6a0e984cb7a81850ec5beafe2a85573367a"
                    ]
                },
                {
                    "command": [
                        "generalize (H5 0%f (1)); Vrm0.",
                        "VernacExtend",
                        "ac4d24c8b5cd1cf99798a53f4b1183bd5139225c"
                    ]
                },
                {
                    "command": [
                        "generalize (incl_refl (base n 1)).",
                        "VernacExtend",
                        "f22cb77896de80b31bd175d7a7ae7f6a93bf9359"
                    ]
                },
                {
                    "command": [
                        "generalize (base n 1) at 1 3.",
                        "VernacExtend",
                        "f7783cceeaae60a1c3b7633b97302ab9e78ab37a"
                    ]
                },
                {
                    "command": [
                        "intros l; induction l as [| a l IH]; simpl.",
                        "VernacExtend",
                        "f9fb8d746309aefe1d28fe032c345c274f94832b"
                    ]
                },
                {
                    "command": [
                        "intros _ v [H6|[]]; subst; auto.",
                        "VernacExtend",
                        "8fb5169a7b6ba3e7db55fd208aeeab495d3508c1"
                    ]
                },
                {
                    "command": [
                        "intros Hu1 v Ha.",
                        "VernacExtend",
                        "ef22fada80f0e3ce43c472b7408b46c6e9775b04"
                    ]
                },
                {
                    "command": [
                        "assert (Ht: incl l (base n 1)) by (intros u; auto with datatypes).",
                        "VernacExtend",
                        "918af55f5cd9d26ff8e40663a0f2a779eefdf223"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ Ha); intros Hb; auto with datatypes.",
                        "VernacExtend",
                        "e0f502b6a2dd0405374fa11479476db0da7fd4b4"
                    ]
                },
                {
                    "command": [
                        "generalize IH Hb; elim (all_prods n l); simpl; auto.",
                        "VernacExtend",
                        "c60e718653b55f1f668385941b9174db0810aac5"
                    ]
                },
                {
                    "command": [
                        "intros a1 l1 IH1 H1i [H2i|H2i]; subst; auto with datatypes.",
                        "VernacExtend",
                        "c487777dfe4e11aa191bb5dc89ebeb458fe28b97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vect_hom_induct",
            "line_nb": 1155,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 v.",
                        "VernacExtend",
                        "9a6b64163a82ab07a97fad4a99756c1a1d1cca59"
                    ]
                },
                {
                    "command": [
                        "rewrite <-mprod_2l.",
                        "VernacExtend",
                        "3b85bd203ba9a00fefd1817b51f94a18a957d2ab"
                    ]
                },
                {
                    "command": [
                        "assert (F1: forall i, In i (all_prods n (base n 1)) -> exists k, hom n k i).",
                        "VernacExtend",
                        "f9b73d4196d6a87d843d93a53a1fee8de80736e7"
                    ]
                },
                {
                    "command": [
                        "apply all_prods_hom; intros i Hi; exists 1%nat.",
                        "VernacExtend",
                        "393c6542bbf1fd95ab40cb5064b74bb1a04f638f"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv; constructor; auto.",
                        "VernacExtend",
                        "02ce3c95e20894bb8c39a962488f1d1e7f4f511a"
                    ]
                },
                {
                    "command": [
                        "generalize (v2l n v); induction (all_prods n (base n 1)) as [|a2 l2 IH]; simpl; auto.",
                        "VernacExtend",
                        "fb15b7bba9ef60d265862a023e196a650d95b2d1"
                    ]
                },
                {
                    "command": [
                        "intros l; rewrite mprod0r; apply (H1 0%nat); apply homk0.",
                        "VernacExtend",
                        "1abcddeb1b1732c1c3d38bb16c872e52fac2cd78"
                    ]
                },
                {
                    "command": [
                        "intros [|a1 l1].",
                        "VernacExtend",
                        "04b5bd1e5a2eb65547168ad19953a5b9a1727767"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0l; apply (H1 0%nat); apply homk0.",
                        "VernacExtend",
                        "cf18981029a5d2f45b93a650bcb2ae6bc4cb9083"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; auto; apply H2; auto with datatypes.",
                        "VernacExtend",
                        "9ad8ab946bd243256dbd8a1ddcbbf9df1cb22b17"
                    ]
                },
                {
                    "command": [
                        "case (F1 a2); auto with datatypes; intros k Hk.",
                        "VernacExtend",
                        "0c94a12ecf45ea9eaaca3ece627956885b8249fd"
                    ]
                },
                {
                    "command": [
                        "apply (H1 k); auto.",
                        "VernacExtend",
                        "540d3334dc2038186493a5cbfca6bfeaf554c249"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl0",
            "line_nb": 1170,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl1",
            "line_nb": 1174,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinlS",
            "line_nb": 1177,
            "steps": [
                {
                    "command": [
                        "destruct l; auto; intros []; auto.",
                        "VernacExtend",
                        "911a736101567766c4215068ebfce74f120d159c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_scal",
            "line_nb": 1180,
            "steps": [
                {
                    "command": [
                        "case (list_case _ l); intros Hl.",
                        "VernacExtend",
                        "e4ec71c0e7429e1d8ca85a703fdc585b97077fb5"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl; simpl; Vfold n; auto.",
                        "VernacExtend",
                        "eacf5e7bb5ad9f89f10da1c37feb00c9e868352c"
                    ]
                },
                {
                    "command": [
                        "rewrite !joinlS, join_scall; auto.",
                        "VernacExtend",
                        "503b16235a0f390b3bc0b2cf690484d144b3545b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_app",
            "line_nb": 1185,
            "steps": [
                {
                    "command": [
                        "induction l1 as [| a1 l1 IH].",
                        "VernacExtend",
                        "850a01ccd2cab8ea3b6e49eab48b5ae72b4fc3c9"
                    ]
                },
                {
                    "command": [
                        "intros H; case H; auto.",
                        "VernacExtend",
                        "0b36977cda16a9ec120d6463bb6c43bcda418cba"
                    ]
                },
                {
                    "command": [
                        "intros _ Hl2.",
                        "VernacExtend",
                        "5ac59d5be65a6e8fabf129c98dc3610dc99355ec"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l1); intros; subst; simpl app; rewrite joinlS; auto.",
                        "VernacExtend",
                        "d30a40008dbec19f30bdbe79374d5dc9252f7677"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS, IH, join_assoc; auto.",
                        "VernacExtend",
                        "87e95f4a4c19a70fc6b145941f309d363862e805"
                    ]
                },
                {
                    "command": [
                        "destruct l1; auto; try (intros; discriminate).",
                        "VernacExtend",
                        "02cf8770f59df2003673f7a17982289aae76702c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_base1_perm",
            "line_nb": 1193,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; simpl; auto; clear l1 l2 H; try Vfold n.",
                        "VernacExtend",
                        "1baa5edf7d7e56a801f8e3913e0e3eb1185be446"
                    ]
                },
                {
                    "command": [
                        "intros a b [|c l] IH; right.",
                        "VernacExtend",
                        "21f8b488879570c535221213f4f56a116cebec40"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl_base_join_com; auto.",
                        "VernacExtend",
                        "c5bda4fac1ad37a19110607e46b26162d27f2b24"
                    ]
                },
                {
                    "command": [
                        "rewrite <-join_assoc, <-(join_assoc _ b), (cbl_base_join_com _ b), !join_assoc, !join_scall; auto with datatypes.",
                        "VernacExtend",
                        "13ffaddfb20cbb4305015d5508a4ff1c519fa7ff"
                    ]
                },
                {
                    "command": [
                        "rewrite join_assoc; auto.",
                        "VernacExtend",
                        "f2fea3c39c10d7c5718821237dec550104b8713b"
                    ]
                },
                {
                    "command": [
                        "intros a [|a1 l1] [|b1 l2] Hl; auto.",
                        "VernacExtend",
                        "6cfc37442e94dadb71c3a3c6b6cd952de43d9a7b"
                    ]
                },
                {
                    "command": [
                        "assert (HH:= perm_length _ _ _ Hl); discriminate.",
                        "VernacExtend",
                        "adf8e9ac3ecdf3c83d941ad9ad046a4f808204fc"
                    ]
                },
                {
                    "command": [
                        "assert (HH:= perm_length _ _ _ Hl); discriminate.",
                        "VernacExtend",
                        "adf8e9ac3ecdf3c83d941ad9ad046a4f808204fc"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; case H1; auto; intros H3; rewrite H3; auto.",
                        "VernacExtend",
                        "91443154a662238742d2c951069f0890bf455ce6"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scalr; auto.",
                        "VernacExtend",
                        "5f533372aad5a84c54a8d5eb9aa71bcb7906631b"
                    ]
                },
                {
                    "command": [
                        "intros l1 l2 l3 Hp1 HH1 Hp2 HH2 H1.",
                        "VernacExtend",
                        "f46a363bfe4b178db1f24a9936e82ac52d1d288d"
                    ]
                },
                {
                    "command": [
                        "assert (H2: forall x, In x l2 -> cbl _ (base n 1) x).",
                        "VernacExtend",
                        "20ed2f28b71133a08f286c9aed698e6f56d20277"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; apply H1; auto.",
                        "VernacExtend",
                        "42e1c1358646fa852825ba522606afbc3422f4cf"
                    ]
                },
                {
                    "command": [
                        "apply perm_in with (1 := perm_sym _ _ _ Hp1); auto.",
                        "VernacExtend",
                        "5b34289b053ddc85afdc629380cc932d2b6e57df"
                    ]
                },
                {
                    "command": [
                        "case HH1; auto; intros HH3; rewrite HH3; auto.",
                        "VernacExtend",
                        "0b38033ac94d5ad2208d4f1b2f902fa231c2a423"
                    ]
                },
                {
                    "command": [
                        "case HH2; auto; intros HH4; rewrite HH4; auto.",
                        "VernacExtend",
                        "13397154dab450d3f4ed5e47efb6adb338240c08"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scal_multE, multK_m1_m1, scalE1; auto.",
                        "VernacExtend",
                        "1663abff25e655f99c99d514e0495b9592678bf0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl0_base1_perm",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 H3; case (joinl_base1_perm n l1 l2); auto.",
                        "VernacExtend",
                        "650d7e708daa3944daec2f60b9ea5eedbb3709e2"
                    ]
                },
                {
                    "command": [
                        "intros HH; rewrite <-HH; auto.",
                        "VernacExtend",
                        "019ae334b4809bb4160fa91bb450dde30db3b7ee"
                    ]
                },
                {
                    "command": [
                        "intros HH.",
                        "VernacExtend",
                        "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (scalE0r _ (fn n) (-(1))%f), <- H3, HH, <- scal_multE, multK_m1_m1, scalE1; auto.",
                        "VernacExtend",
                        "d57c17f37da3b06aaff1fe83e8361d2b35f1bdea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_joinl",
            "line_nb": 1219,
            "steps": [
                {
                    "command": [
                        "elim l; auto.",
                        "VernacExtend",
                        "b86d930eda332ac2d96a39239320b0e797a08a19"
                    ]
                },
                {
                    "command": [
                        "intros a l1 IH; case (list_case _ l1); intros H1; subst; auto.",
                        "VernacExtend",
                        "0160fc838c2e43e29c05eeb79b4b1cb6007c8285"
                    ]
                },
                {
                    "command": [
                        "simpl map; rewrite ?joinl0, ?joinl1, ?joinlS; auto.",
                        "VernacExtend",
                        "a2fac15a674628c34f2b43cbb7b7838d86fef88f"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_join, IH; auto.",
                        "VernacExtend",
                        "be8a414e6dda9dbb45ba703e8ff7a5805af4226b"
                    ]
                },
                {
                    "command": [
                        "destruct l1; simpl; try (intros; discriminate); case H1; auto.",
                        "VernacExtend",
                        "61e181ed5a0ef46d1aa0cb54f38e8142c986c5d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_hom1",
            "line_nb": 1226,
            "steps": [
                {
                    "command": [
                        "elim l; auto.",
                        "VernacExtend",
                        "b86d930eda332ac2d96a39239320b0e797a08a19"
                    ]
                },
                {
                    "command": [
                        "intros; simpl; apply homk0.",
                        "VernacExtend",
                        "df42e61322dbe556e9691a2d79a6bb1b79294f35"
                    ]
                },
                {
                    "command": [
                        "intros a l1 IH H1.",
                        "VernacExtend",
                        "5c07751ce9de068f7d1bb017d8f52f90aebcc80f"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l1); intros Hl1.",
                        "VernacExtend",
                        "f6715e078dee549d2f56085daa4ca6d0ae24c1ee"
                    ]
                },
                {
                    "command": [
                        "subst; simpl; auto with datatypes.",
                        "VernacExtend",
                        "aecf2f1e41da010c4d32104440fb6b700f73845b"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS; auto.",
                        "VernacExtend",
                        "42867c5d4805f35d99dd977b40eccd4212783cd2"
                    ]
                },
                {
                    "command": [
                        "change (length (a::l1)) with (1 + length l1)%nat.",
                        "VernacExtend",
                        "f173fc524fbb566f5fa0fe7746710944cfaf8557"
                    ]
                },
                {
                    "command": [
                        "apply join_hom; auto with datatypes.",
                        "VernacExtend",
                        "223af429649057f20c4fcb21d392d742b82439cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_swap",
            "line_nb": 1237,
            "steps": [
                {
                    "command": [
                        "intros Ha Hb.",
                        "VernacExtend",
                        "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l); intros Hl.",
                        "VernacExtend",
                        "e4ec71c0e7429e1d8ca85a703fdc585b97077fb5"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl; simpl; Vfold n.",
                        "VernacExtend",
                        "32031f84ae51298420a62b8ba516b97033e32b60"
                    ]
                },
                {
                    "command": [
                        "apply cbl_base_join_com; auto.",
                        "VernacExtend",
                        "e94977092021ae747766f1cbe266bfceeb00cadc"
                    ]
                },
                {
                    "command": [
                        "rewrite !joinlS, <-join_assoc, (cbl_base_join_com n b), !join_scall, !join_assoc; try (intros; discriminate); auto.",
                        "VernacExtend",
                        "774648c284a8e6395a5c422c1e5cd6430affffa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_top",
            "line_nb": 1244,
            "steps": [
                {
                    "command": [
                        "induction l1 as [| b l1 IH]; intros Hl2; auto.",
                        "VernacExtend",
                        "93eb19157bcdf9eec5476527135d7efe1462a34e"
                    ]
                },
                {
                    "command": [
                        "simpl app; simpl expK; rewrite scalE1; auto.",
                        "VernacExtend",
                        "f957c7376991b7a34e71602a3b73ef8e74c52759"
                    ]
                },
                {
                    "command": [
                        "simpl app; simpl expK; rewrite joinlS, IH, join_scalr, <-joinlS, multK_com, scal_multE, joinl_swap; auto with datatypes.",
                        "VernacExtend",
                        "034c55aecc58fa2aaa98a091bafd11f95ad5af9b"
                    ]
                },
                {
                    "command": [
                        "simpl In; intros i [[]|Hi]; auto with datatypes.",
                        "VernacExtend",
                        "6fef0d93c92d30c935b439012d0df968f87a77f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_all",
            "line_nb": 1250,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros H; contradict H; auto with arith.",
                        "VernacExtend",
                        "839e6c9594cc0311561540582a7e49d9dec9c507"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|n].",
                        "VernacExtend",
                        "e9a6c38314370079277fe54649bef28abc1a6c0c"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "rewrite joinl_app, <-lift_joinl, IH; auto with arith.",
                        "VernacExtend",
                        "ff0b5d0e89a72559617fe2b12bc6d1e1fca31100"
                    ]
                },
                {
                    "command": [
                        "rewrite base0; simpl; Vfold n; Grm0.",
                        "VernacExtend",
                        "3523d30a006cc47b0327dcfa132815d5f8e5ac5f"
                    ]
                },
                {
                    "command": [
                        "rewrite en_def, conjk, joinkl, scalE1; auto.",
                        "VernacExtend",
                        "b28eca227206dc38d87701ff379e2af054a582c8"
                    ]
                },
                {
                    "command": [
                        "rewrite base0; intros; discriminate.",
                        "VernacExtend",
                        "afd4f850021dee080afe9cc03904fd8f6755df7c"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite base0; intros; discriminate.",
                        "VernacExtend",
                        "26b564d6ae77463ee46a7cf89c1e8d123f404b55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomp_cbl",
            "line_nb": 1445,
            "steps": [
                {
                    "command": [
                        "intros Hx [Hn HM] Hdiff; subst; split; intros H1.",
                        "VernacExtend",
                        "3ff6e2a3b6667bb5ee80eec52227e5819bde58b0"
                    ]
                },
                {
                    "command": [
                        "assert (Hd: l <> nil) by (intros HH; case Hdiff; subst; auto).",
                        "VernacExtend",
                        "7720b8f46b2e6b5075340770882dba2eced55ffb"
                    ]
                },
                {
                    "command": [
                        "case (joinl0_mprod n (x::l)); auto with datatypes.",
                        "VernacExtend",
                        "57429d14560197771654a1d946f743be726cb806"
                    ]
                },
                {
                    "command": [
                        "simpl; intros x1 [Hx1 | Hx1]; subst; auto with datatypes.",
                        "VernacExtend",
                        "d9f0a61569f9e3b6320819dde1d6ba171a7c0972"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS; auto; intros HH1; case Hdiff; rewrite HH1; auto.",
                        "VernacExtend",
                        "00c2cbb2a0ae31487563715e640a66e8ab7c9306"
                    ]
                },
                {
                    "command": [
                        "intros [| k lk] (i, (H1lk, (H2lk, (H3lk, H4lk)))); try discriminate.",
                        "VernacExtend",
                        "d89b1553e554e96684f07ba7b8c0e12f4f18dc30"
                    ]
                },
                {
                    "command": [
                        "generalize (eqK_dec _ Hp k 0%f); case eqK; intros Hk; subst; auto.",
                        "VernacExtend",
                        "150bd10200093fa9bd6aaff8c1368814e4326c08"
                    ]
                },
                {
                    "command": [
                        "generalize H4lk.",
                        "VernacExtend",
                        "8d4873c0addacf7fb5bce3fb020f963619ab6b6c"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams n)); auto.",
                        "VernacExtend",
                        "ec5bdfd381b92a746963571db2df1b199df435a0"
                    ]
                },
                {
                    "command": [
                        "rewrite (scalE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0l; auto; intros HH.",
                        "VernacExtend",
                        "8b1919a184e4eb4d99e7931d536d41b73b8cc409"
                    ]
                },
                {
                    "command": [
                        "simpl in H2lk; case H2lk; clear H2lk; intros H2lk; subst.",
                        "VernacExtend",
                        "955aa2cfd84c2dc2adcf2f56232d3ce6f15ae89e"
                    ]
                },
                {
                    "command": [
                        "case H3lk; auto.",
                        "VernacExtend",
                        "2a42f53b10fafe3a8436e4ffd0cd130d812ad5a6"
                    ]
                },
                {
                    "command": [
                        "case Hdiff; injection H1lk.",
                        "VernacExtend",
                        "a59c24f10b39b9fcd92d24ccc7b967f746767fc2"
                    ]
                },
                {
                    "command": [
                        "generalize l Hn Hd HH H2lk; clear l H4lk H1lk Hdiff H1 Hd Hn HH H2lk.",
                        "VernacExtend",
                        "004ac1f57b023025f718ff00e35a6474b9aa8602"
                    ]
                },
                {
                    "command": [
                        "elim lk; simpl; auto.",
                        "VernacExtend",
                        "25aa52b5f5e0bb66aa99e5f6505c2ac0e1fdbfff"
                    ]
                },
                {
                    "command": [
                        "intros l; case l; intros; try discriminate; auto.",
                        "VernacExtend",
                        "e63b4319dbaf44092478031d03620ffd118b4cc2"
                    ]
                },
                {
                    "command": [
                        "intros a l IH [| b l1] H1l1 H2l1.",
                        "VernacExtend",
                        "9c366a1070cafd27d34832e3e6063647a1c6693b"
                    ]
                },
                {
                    "command": [
                        "case H2l1; auto.",
                        "VernacExtend",
                        "797b37adb3b4897d083bcca4f942ed9203f98f4d"
                    ]
                },
                {
                    "command": [
                        "generalize (eqK_dec _ Hp a 0%f); case eqK; intros Ha; simpl in Ha.",
                        "VernacExtend",
                        "483e73a4cb9fda317b6fb993bc49a1047d1547c6"
                    ]
                },
                {
                    "command": [
                        "rewrite (mprod_S (vn_eparams n)), Ha, (scalE0l (vn_eparams n)), addE0l; auto.",
                        "VernacExtend",
                        "ab4e52a8a8996a92ed4d6634add21733ec1411cc"
                    ]
                },
                {
                    "command": [
                        "intros HH [HH1 | HH1]; try (case H3lk; auto; fail).",
                        "VernacExtend",
                        "014462d6ef3652fa7df392ed34660dcf1873f077"
                    ]
                },
                {
                    "command": [
                        "intros HH2; injection HH2; clear HH2; intros HH2.",
                        "VernacExtend",
                        "f606643ee21a6e33c1782c2dddae7ed790e4a2f0"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS.",
                        "VernacExtend",
                        "ec6f99326808f9196c98c1c1ad79dfb80ef6d1cd"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto with datatypes.",
                        "VernacExtend",
                        "fee0890770e1b7d670206d0f4029470effa55ffb"
                    ]
                },
                {
                    "command": [
                        "rewrite join0r; auto.",
                        "VernacExtend",
                        "9fe553befa87e2f790fa6f16c57cf3ba0f8c7af3"
                    ]
                },
                {
                    "command": [
                        "intros i1 Hi1; apply H1l1; auto with datatypes.",
                        "VernacExtend",
                        "ca3fb905753a114a835d039107f0f5e1e592d306"
                    ]
                },
                {
                    "command": [
                        "intros HH3; subst.",
                        "VernacExtend",
                        "b1ee0c593ce1d428da29bc329777bdf8e61b4584"
                    ]
                },
                {
                    "command": [
                        "destruct l; try discriminate; case HH1.",
                        "VernacExtend",
                        "d42d956add45f3996ae9752aa1df1d67d34433f1"
                    ]
                },
                {
                    "command": [
                        "intros HH3; subst.",
                        "VernacExtend",
                        "b1ee0c593ce1d428da29bc329777bdf8e61b4584"
                    ]
                },
                {
                    "command": [
                        "destruct l; try discriminate; case HH1.",
                        "VernacExtend",
                        "d42d956add45f3996ae9752aa1df1d67d34433f1"
                    ]
                },
                {
                    "command": [
                        "intros HH1.",
                        "VernacExtend",
                        "1075c5ffa3dc45f1bf9a0e72fd42babfa9c80c0b"
                    ]
                },
                {
                    "command": [
                        "assert (HxL: b = (-(a^-1)).* (l *X* l1)).",
                        "VernacExtend",
                        "65e6392124df66211bf46b5599e520ecde5ca08d"
                    ]
                },
                {
                    "command": [
                        "generalize HH1; rewrite mprod_S; auto; intros HH.",
                        "VernacExtend",
                        "00ab5b1b4dd99e49d5234b5ed7b2b046cec1b243"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (addE0l _ (fn n) (l *X* l1)); rewrite <- (scal_addE0 _ (fn n) (a .* b)).",
                        "VernacExtend",
                        "79bff59b3027fc4f182404c756cf5e5e1ff3ba5e"
                    ]
                },
                {
                    "command": [
                        "rewrite (addE_com _ (fn n) (a.*b)); rewrite addE_assoc, HH, addE0r, <-!scal_multE, <-!opp_multKr, <-!opp_multKl, multK1r, multK_com, invKl, opp_oppK, scalE1; auto.",
                        "VernacExtend",
                        "1d7fffab6fe8f747a802a1b78a6a534077df82f2"
                    ]
                },
                {
                    "command": [
                        "generalize H1l1 IH HxL; case l; case l1; try (intros; discriminate); clear l l1 HxL HH1 H1l1 H2l1 IH.",
                        "VernacExtend",
                        "99af3af1cf6ad4a6fe46a04997f250641b1f03f1"
                    ]
                },
                {
                    "command": [
                        "intros H1l1 IH.",
                        "VernacExtend",
                        "7c434c69a42dd5e0e82dbde6a8765eac1141126f"
                    ]
                },
                {
                    "command": [
                        "unfold mprod; simpl; Vfold n; rewrite scalE0r; auto; intros HH2; rewrite HH2.",
                        "VernacExtend",
                        "4e0a391a387f0f500561b7409cd93e24902d171c"
                    ]
                },
                {
                    "command": [
                        "intros a1 l1 b1 l H2l1 IH HxL _ Hl.",
                        "VernacExtend",
                        "6c4913fc0afd0fa790ffbb9b6c9b13b0e7ed06de"
                    ]
                },
                {
                    "command": [
                        "apply (cbl_joinl0_mprod n (a1::l1)); auto with datatypes.",
                        "VernacExtend",
                        "46bf79915e19b9f67c7a5d4121f20eb9438682fb"
                    ]
                },
                {
                    "command": [
                        "intros i1; simpl; intros [[]|Hi]; apply H2l1; auto with datatypes.",
                        "VernacExtend",
                        "1ad0b8fec8e37a20ff30047d8dd82d35ccd01a13"
                    ]
                },
                {
                    "command": [
                        "rewrite HxL; apply cbl_scal.",
                        "VernacExtend",
                        "1ec547fdf16821f52e0567c4d84749ada512c116"
                    ]
                },
                {
                    "command": [
                        "apply mprod_cbl; auto.",
                        "VernacExtend",
                        "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
                    ]
                },
                {
                    "command": [
                        "assert (HxL: x = (-(k^-1)).* (lk *X* l)).",
                        "VernacExtend",
                        "8d8f7791e23a8f561059eda6a448bcc818bbde49"
                    ]
                },
                {
                    "command": [
                        "generalize H4lk; rewrite mprod_S; auto; intros HH.",
                        "VernacExtend",
                        "b675744bea5788b53281d7ff9355ef9fba75dcaa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (addE0l _ (fn n) (lk *X* l)), <- (scal_addE0 _ (fn n) (k .* x)).",
                        "VernacExtend",
                        "51abee2fee24e510b0562e1060b24c85e7c4721d"
                    ]
                },
                {
                    "command": [
                        "rewrite (addE_com _ (fn n) (k.*x)), addE_assoc, HH, addE0r, <-!scal_multE, <-!opp_multKr, <-!opp_multKl, multK1r, multK_com, invKl, opp_oppK, scalE1; auto.",
                        "VernacExtend",
                        "946c62e6c1df48c1013f1e8e6db607c39f9170c3"
                    ]
                },
                {
                    "command": [
                        "rewrite HxL; apply cbl_scal.",
                        "VernacExtend",
                        "1ec547fdf16821f52e0567c4d84749ada512c116"
                    ]
                },
                {
                    "command": [
                        "apply mprod_cbl; auto.",
                        "VernacExtend",
                        "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
                    ]
                },
                {
                    "command": [
                        "rewrite <-joinlS; auto.",
                        "VernacExtend",
                        "1f3fffa1ce1c49cff8aaaaeeb2ef01b0751fdf34"
                    ]
                },
                {
                    "command": [
                        "apply (cbl_joinl0_mprod n l x); auto.",
                        "VernacExtend",
                        "409a79d0c841b21a90c8d7f664aafd5bb02c6db9"
                    ]
                },
                {
                    "command": [
                        "intros HH; case Hdiff; rewrite HH; auto.",
                        "VernacExtend",
                        "92764e11386d617ff0533c40b514f034469f8506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom1_decomposable",
            "line_nb": 1500,
            "steps": [
                {
                    "command": [
                        "intros H; split; auto.",
                        "VernacExtend",
                        "6dda9c711e25312e26073cac0c920bb33e7a23ce"
                    ]
                },
                {
                    "command": [
                        "intros y; simpl; intros [[]|[]]; red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "f46719f4bf7c490122449605bee1cb23d84421b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomp_hom",
            "line_nb": 1504,
            "steps": [
                {
                    "command": [
                        "intros (H1, H2); subst.",
                        "VernacExtend",
                        "a74df965c900145eb05a467151f9e14f3b79216d"
                    ]
                },
                {
                    "command": [
                        "assert (HH: forall a, In a l -> hom n 1 a).",
                        "VernacExtend",
                        "79857543e60c8e0866cb57c52c55367a2268e683"
                    ]
                },
                {
                    "command": [
                        "intros a Ha; rewrite <- cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "518cac4b3365117434b13c38a4c8638c4c8dc7c8"
                    ]
                },
                {
                    "command": [
                        "generalize (H1 a Ha); auto.",
                        "VernacExtend",
                        "e574714c113543f8a89a0df45f4bdc644974485e"
                    ]
                },
                {
                    "command": [
                        "clear H1; induction l as [| a l1 IH].",
                        "VernacExtend",
                        "30d97b18fb4107c02a5a135aa14c8e096e440c3e"
                    ]
                },
                {
                    "command": [
                        "simpl; apply hom0K.",
                        "VernacExtend",
                        "105be71489e3a6076d4b3d177a965f6d82f3be93"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l1); intros H1.",
                        "VernacExtend",
                        "381d3f5ea5a881a59fbef06ea43ace4eef6826d8"
                    ]
                },
                {
                    "command": [
                        "subst; simpl; auto with datatypes.",
                        "VernacExtend",
                        "aecf2f1e41da010c4d32104440fb6b700f73845b"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS; auto.",
                        "VernacExtend",
                        "42867c5d4805f35d99dd977b40eccd4212783cd2"
                    ]
                },
                {
                    "command": [
                        "change (length (a::l1)) with (1 + length l1)%nat; auto with datatypes.",
                        "VernacExtend",
                        "f9e9c3fcb715621823368e4f4b68467293adcd64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraE",
            "line_nb": 1518,
            "steps": [
                {
                    "command": [
                        "destruct l; destruct M; auto.",
                        "VernacExtend",
                        "fd835e214fe147f00670eb852bcf6e2455cdaa8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra0r",
            "line_nb": 1521,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; Grm0; Vfold n.",
                        "VernacExtend",
                        "2982db2cc64e4f162d492eaf2378ca5bfb19146a"
                    ]
                },
                {
                    "command": [
                        "destruct lf; rewrite IH; Grm0.",
                        "VernacExtend",
                        "a8e5931df60e6da26ffcc91828791f933428223e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra0l",
            "line_nb": 1526,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "Vfold n.",
                        "VernacExtend",
                        "1069bda287f933d6fc9c51bd34434bf13a87bc77"
                    ]
                },
                {
                    "command": [
                        "Vfold n; repeat rewrite IH; Grm0.",
                        "VernacExtend",
                        "1b386cf1ccb679db42a6eb63b5ff9ca3bb737bac"
                    ]
                },
                {
                    "command": [
                        "rewrite (scalE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contrak",
            "line_nb": 1533,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct lf; rewrite IH; Grm0.",
                        "VernacExtend",
                        "a8e5931df60e6da26ffcc91828791f933428223e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_e",
            "line_nb": 1537,
            "steps": [
                {
                    "command": [
                        "generalize i; clear i.",
                        "VernacExtend",
                        "208b471d15be521271abdaf4ee90e51a9a779dca"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; intros i; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "533b0fb67224f69feb66d2a95858dcdad9cfaeb6"
                    ]
                },
                {
                    "command": [
                        "destruct lf; destruct i as [| i]; Grm0.",
                        "VernacExtend",
                        "27d82dc528bf8012228c2ea3bdbc4eb337bf83a9"
                    ]
                },
                {
                    "command": [
                        "rewrite contrak; Grm0; simpl; Vfold n; Grm0.",
                        "VernacExtend",
                        "fd507793c955875334652f931358a1c3d5e8031b"
                    ]
                },
                {
                    "command": [
                        "rewrite scalk, multK1r; auto.",
                        "VernacExtend",
                        "e27cb05d2bc16fbdb80b52d099a9a627debf2040"
                    ]
                },
                {
                    "command": [
                        "intros HH; assert (HH1: i < n); auto with arith.",
                        "VernacExtend",
                        "b23029acfb0ec969725cd42d467dd2ad2fea827d"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; simpl; auto.",
                        "VernacExtend",
                        "be9d4bffc4ef35190c21a58a7a87a511703a888c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_scalr",
            "line_nb": 1546,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite multK0r; auto.",
                        "VernacExtend",
                        "0fa885e605cca649ff9ce947a69874746e6d8690"
                    ]
                },
                {
                    "command": [
                        "destruct lf; destruct x.",
                        "VernacExtend",
                        "c3c2976431d865cb0de6c37f9e796c441eb9152f"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, IH, scal_addEr, <-! scal_multE; auto.",
                        "VernacExtend",
                        "e8f5e7daa678e6459775e603a21535367dcd6a8f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x => (multK_com p x k)); auto.",
                        "VernacExtend",
                        "55e23cff43cb6b0cb16793a902b2df36d9f0af7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_addr",
            "line_nb": 1553,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite addK0r; auto.",
                        "VernacExtend",
                        "0faa2ba437df587ce5e2cb539065e10046acea3c"
                    ]
                },
                {
                    "command": [
                        "destruct lf; destruct x; destruct y; rewrite !IH, !scal_addEr; auto.",
                        "VernacExtend",
                        "47684c4064ef19acaffcb71ca07fb62c8fe60dff"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite <-! addE_assoc; try apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "dfa9a3906c3f6c518cc4c7965852d69d44e4b71a"
                    ]
                },
                {
                    "command": [
                        "rewrite !addE_assoc; try apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "df5de56915adc2b161fbd6f22520308df8b15414"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_scall",
            "line_nb": 1562,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm0.",
                        "VernacExtend",
                        "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
                    ]
                },
                {
                    "command": [
                        "destruct x as [k1 x1]; destruct M as [M1 M2]; Vfold n; Kfold n.",
                        "VernacExtend",
                        "002cbea1fadf095a54a01dd5c366a1e283ce3cf4"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH, scal_addEr, <-!scal_multE, multK_com; auto.",
                        "VernacExtend",
                        "872c7d5d32c97bb51d131994e7bdd11f4ada694b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_addl",
            "line_nb": 1567,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm0.",
                        "VernacExtend",
                        "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
                    ]
                },
                {
                    "command": [
                        "destruct x as [a x1]; destruct y as [b y1]; destruct M as [M1 M2].",
                        "VernacExtend",
                        "954c7aeb2f74b175a4313af4c9d95ca15e60b828"
                    ]
                },
                {
                    "command": [
                        "Vfold n; Kfold n.",
                        "VernacExtend",
                        "0e2bf0946e352587b58cddbb7b0a765f2e4496ca"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH, scal_addEr, (scal_addEl (vn_eparams n)); auto.",
                        "VernacExtend",
                        "c82c8b9ed6638699191cd7c490562921cf99ec02"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !addE_assoc; auto.",
                        "VernacExtend",
                        "ce214b315400588aac8118eb43bbb788a8f0634d"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := addE _); auto.",
                        "VernacExtend",
                        "1ee49b98fa16e7d66e16dd7826a091bd09cb360a"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_swap; auto.",
                        "VernacExtend",
                        "dbc04023856644e05dc1fd9317a0b0452e054d15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_conj",
            "line_nb": 1577,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros [|]; try rewrite oppK0; auto.",
                        "VernacExtend",
                        "a32288d2c7fb1115e46ca977185de50a60f5daa0"
                    ]
                },
                {
                    "command": [
                        "destruct lf; intros b; destruct x; rewrite IH, IH; Vfold n.",
                        "VernacExtend",
                        "6f9ff4b15554387e3a178ee581f0d8ab3d2e9e9b"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_add, conj_scal, conj_scal; auto.",
                        "VernacExtend",
                        "07ca7e4a0df89b2b67bf0165a5369690113883fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_hom",
            "line_nb": 1584,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; intros [|k1]; simpl; auto.",
                        "VernacExtend",
                        "9e1400787e25f72ccb0849d58ee2f4176332f15a"
                    ]
                },
                {
                    "command": [
                        "rewrite eqKI; auto.",
                        "VernacExtend",
                        "ca078dadd9f4e418868b01a515b29125b20be296"
                    ]
                },
                {
                    "command": [
                        "intros H; destruct lf.",
                        "VernacExtend",
                        "f97d5d36442cf762f64dc6a7eec66c26a7e01c98"
                    ]
                },
                {
                    "command": [
                        "destruct M as [M1 M2]; try rewrite eq0I; rewrite ?homk0; auto.",
                        "VernacExtend",
                        "f30bedf677cc08f7ac268a79f3e2867232bcd8c7"
                    ]
                },
                {
                    "command": [
                        "assert (Hm1: hom n 0 M1); [generalize H; case hom; auto | idtac].",
                        "VernacExtend",
                        "7360e95a915d9a1eb9f8ee42b1bfb8a83247a189"
                    ]
                },
                {
                    "command": [
                        "assert (Hm2: hom n 1 M2); [generalize H; repeat (case hom; auto) | clear H].",
                        "VernacExtend",
                        "c358856b771ef6de985d1db1fa32ba329e8f5acb"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hm1); Vfold n.",
                        "VernacExtend",
                        "4dc81bc085d9530dd1c0cfb60c04d10d123862b5"
                    ]
                },
                {
                    "command": [
                        "rewrite contrak, scalE0r, eq0I, add_hom; auto; apply scal_hom; apply hom0K; auto.",
                        "VernacExtend",
                        "1bebd30256f7c4663f9804c59583ee3273d0fe52"
                    ]
                },
                {
                    "command": [
                        "destruct lf; destruct M as [M1 M2]; intros H.",
                        "VernacExtend",
                        "d5397dbe31a51970232a2e271964437316d7815a"
                    ]
                },
                {
                    "command": [
                        "assert (Hm1: hom n k1.+1 M1); [generalize H; case hom; auto | idtac].",
                        "VernacExtend",
                        "f22a9ca6741f5aa12e5a475af950b9164c640155"
                    ]
                },
                {
                    "command": [
                        "assert (Hm2: hom n k1.+2 M2); [generalize H; repeat (case hom; auto) | clear H]; auto.",
                        "VernacExtend",
                        "3df7b6a79992f59dd2693c0f7d5c1f4bf390fc21"
                    ]
                },
                {
                    "command": [
                        "Vfold n; rewrite scal_hom, add_hom; auto.",
                        "VernacExtend",
                        "06168ae4a5bcbb6ad00a2bc55a971288c585a346"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_hom0",
            "line_nb": 1600,
            "steps": [
                {
                    "command": [
                        "intros H; rewrite (hom0E _ _ H); apply contrak.",
                        "VernacExtend",
                        "b6f56eb61e42c38bc7c706a1049c6bacd000908c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_id",
            "line_nb": 1603,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "destruct lf; destruct M.",
                        "VernacExtend",
                        "f18c69d8faf73a7c08d171b82ffd8ff5db7afa2c"
                    ]
                },
                {
                    "command": [
                        "rewrite !contra_addr, !contra_scalr, !IH, !scalE0r, addE0r, <-scal_addEr, addE_com, scal_addE0, scalE0r; auto.",
                        "VernacExtend",
                        "3d1dedfad453f4099ad7c5e534fc9118966523eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_swap",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "rewrite multK0r; auto.",
                        "VernacExtend",
                        "26ceb2e14741c0b552d3ebdce818a91972e3fbff"
                    ]
                },
                {
                    "command": [
                        "destruct lf1 as [k1 lf1]; destruct lf2 as [k2 lf2]; destruct M.",
                        "VernacExtend",
                        "4fd0b8c8815d2320733bbfe9227fb4c45c9fa775"
                    ]
                },
                {
                    "command": [
                        "rewrite !contra_scalr, !contra_addr, !(IH _ lf2), !contra_scalr, !scal_addEr, !scalE_opp, !opp_oppK, !scalE1, <-!scal_multE, <-!opp_multKl, !multK1l, addE_swap; auto.",
                        "VernacExtend",
                        "50ef7cb316fef4664f1a79ff595c4f00f46d4870"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_const",
            "line_nb": 1615,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; Krm0.",
                        "VernacExtend",
                        "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
                    ]
                },
                {
                    "command": [
                        "destruct lf; destruct M as [M1 M2]; intros HM12.",
                        "VernacExtend",
                        "f5e7597bd1cffc3fb684f79e8154b68f845428f7"
                    ]
                },
                {
                    "command": [
                        "assert (HM1: hom n 0 M1) by (generalize HM12; case hom; auto).",
                        "VernacExtend",
                        "3f017cafd979d0692d96fdfb1e52720355d24992"
                    ]
                },
                {
                    "command": [
                        "assert (HM2: hom n 1 M2) by (generalize HM12; rewrite HM1; case hom; auto).",
                        "VernacExtend",
                        "bfb245fa759e3fc9e9f38100a515ab6f34c85be8"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ HM1); Vfold n.",
                        "VernacExtend",
                        "a017eebdc44a8aed1d914cbbc4b2159753450ca8"
                    ]
                },
                {
                    "command": [
                        "rewrite contrak, scalE0r, IH; auto.",
                        "VernacExtend",
                        "8d1c0a371a5b461d6a9316b83da04f64a2c4d713"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite <-addk, <-joink, joinkl, <-!hom0E; simpl; auto.",
                        "VernacExtend",
                        "d550628a565d8f94ba63b7fa8111eacb17b77466"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_join",
            "line_nb": 1625,
            "steps": [
                {
                    "command": [
                        "generalize lf k1 k2; clear lf k1 k2.",
                        "VernacExtend",
                        "da9b3833d6854f8825727026fcab251dc4594dfc"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros lf [| k1] [| k2]; Grm0.",
                        "VernacExtend",
                        "641067c3c17d91853d57c5f6488f2b0f75629b2b"
                    ]
                },
                {
                    "command": [
                        "intros [k lf] [| k1] [| k2]; destruct M2 as [M3 M4]; destruct M1 as [M1 M2]; simpl expK; Grm0.",
                        "VernacExtend",
                        "9827286594cb6694feef63c95ece2de7fa5c1027"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate); intros HH HM2; subst; Grm0.",
                        "VernacExtend",
                        "f6e4af5d9ff7489cb373e44055e42b6c53369fec"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate); intros HH HM3; subst; Grm0.",
                        "VernacExtend",
                        "58099dfa876a5b29b0a6f903876b06186c34ab93"
                    ]
                },
                {
                    "command": [
                        "assert (Hk24 := join_hom _ _ _ _ _ HM2 HM3).",
                        "VernacExtend",
                        "68ebfcfa5b3f1c7e4afa3fe5b232788306e3fa28"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hk24), (hom0E _ _ HM2), (hom0E _ _ HM3), !contrak; Grm0.",
                        "VernacExtend",
                        "f1ad8f052c411f359cd606ec3f59b2ddc9566bd9"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate); intros HH HM2; subst; Grm0.",
                        "VernacExtend",
                        "f6e4af5d9ff7489cb373e44055e42b6c53369fec"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ HM2).",
                        "VernacExtend",
                        "e6dd3d09e2251d8f841dccf261ad2da7f4f81370"
                    ]
                },
                {
                    "command": [
                        "repeat ((rewrite conjk || rewrite scalE1 || rewrite joinkl || rewrite contra_scalr || rewrite contrak); Grm0).",
                        "VernacExtend",
                        "414dcdcc40b369b59e5cd5aeb50a8bb7cf2bbb84"
                    ]
                },
                {
                    "command": [
                        "repeat ((rewrite scal_addEr || rewrite <- scal_multE); auto).",
                        "VernacExtend",
                        "5d80de27df23e3d8efacaeb86c7d14f98007ec1c"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com, (multK_com _ Hp k); auto.",
                        "VernacExtend",
                        "4be8a9f1c3ff1753d8a62006472be8e03768113a"
                    ]
                },
                {
                    "command": [
                        "intros HH.",
                        "VernacExtend",
                        "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; try (intros; discriminate); intros HH1 HM3; subst; Grm0.",
                        "VernacExtend",
                        "9182091c0f0a8fbf0531b317f9c9e06c0f08f8eb"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ HM3).",
                        "VernacExtend",
                        "a8e4e693fd6add579fecd08f087eafb76534aea4"
                    ]
                },
                {
                    "command": [
                        "repeat ((rewrite conjk || rewrite scalE1 || rewrite joinkl || rewrite joinkr ||rewrite contra_scalr || rewrite contrak); Grm0).",
                        "VernacExtend",
                        "2996c69da7ae84a3df590156042e794abaad6341"
                    ]
                },
                {
                    "command": [
                        "repeat ((rewrite scal_addEr || rewrite <- scal_multE); auto).",
                        "VernacExtend",
                        "5d80de27df23e3d8efacaeb86c7d14f98007ec1c"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com, (multK_com _ Hp k); auto.",
                        "VernacExtend",
                        "4be8a9f1c3ff1753d8a62006472be8e03768113a"
                    ]
                },
                {
                    "command": [
                        "intros HM1 HM2.",
                        "VernacExtend",
                        "66b7fd873819e60879d543f2260e797a2e21e98e"
                    ]
                },
                {
                    "command": [
                        "assert (F1: hom n k1 M1) by (generalize HM1; case hom; auto).",
                        "VernacExtend",
                        "4efaa99d04789a71fc5d4ba99d781e903500f8d3"
                    ]
                },
                {
                    "command": [
                        "assert (F2: hom n k1.+1 M2) by (generalize HM1; case hom; auto; intros; discriminate).",
                        "VernacExtend",
                        "0c32c5782f4424af38cdf57bc3592d18a5dde9cb"
                    ]
                },
                {
                    "command": [
                        "assert (F3: hom n k2 M3) by (generalize HM2; case hom; auto).",
                        "VernacExtend",
                        "417a5c7af67b440034d919cbb856ba501532d83c"
                    ]
                },
                {
                    "command": [
                        "assert (F4: hom n k2.+1 M4) by (generalize HM2; case hom; auto; intros; discriminate).",
                        "VernacExtend",
                        "909b3480ea1d8c67ed8bb1db90479b899eb43157"
                    ]
                },
                {
                    "command": [
                        "clear HM1 HM2.",
                        "VernacExtend",
                        "eaf74a2c26385caa6329b7d169f299a2be02cdc1"
                    ]
                },
                {
                    "command": [
                        "rewrite !contra_addr, (conjf_hom n k1.+1 M2), join_scall, conj_add; auto.",
                        "VernacExtend",
                        "93c4b37b4cca06faf983b78e5a8c8929c4d73e8b"
                    ]
                },
                {
                    "command": [
                        "repeat (rewrite conj_scal || rewrite contra_scalr || rewrite scal_addE_r); auto.",
                        "VernacExtend",
                        "ab2153fba8040bedd1e0abb3a3201a3edb5a6d66"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH M1 M4 lf k1 k2.+1); auto; simpl expK.",
                        "VernacExtend",
                        "a0a5a67b4daf91c7110c1f7ca7a45c339743151d"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH M2 M3 lf k1.+1 k2); auto; simpl expK.",
                        "VernacExtend",
                        "505adff82044a6b743683dc6333727f53d9c332b"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH M2 M4 lf k1.+1 k2.+1); auto; simpl expK.",
                        "VernacExtend",
                        "f1df2425fca083e3ef1981874d7d99c7134014bc"
                    ]
                },
                {
                    "command": [
                        "repeat (rewrite scal_addEr || rewrite join_addr || rewrite join_addl || rewrite join_scall || rewrite join_scalr); auto.",
                        "VernacExtend",
                        "15f9fccb200e9f6b07480829d1d14c590c08593c"
                    ]
                },
                {
                    "command": [
                        "rewrite (conjf_hom n k1 M1); auto.",
                        "VernacExtend",
                        "0b9b97f2f74442c9ad499cf31d1c13b003b31618"
                    ]
                },
                {
                    "command": [
                        "rewrite (conjf_hom n k1 #<lf, M2 >#); try apply contra_hom; auto.",
                        "VernacExtend",
                        "9dc5ae5001cb649ff5717737aba1a5ad5fb41292"
                    ]
                },
                {
                    "command": [
                        "rewrite (conjf_hom n k1.+1 M2); auto; simpl expK; rewrite !join_scall, <-!scal_multE; Krm1; auto.",
                        "VernacExtend",
                        "b35a6a52a991d16840247a48a36cbf4ff80c5fec"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _).",
                        "VernacExtend",
                        "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal.",
                        "VernacExtend",
                        "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
                    ]
                },
                {
                    "command": [
                        "do 8 (rewrite ?addE_assoc; auto; ((apply f_equal2 with (f := addE (vn_eparams n)); auto); [idtac]) || rewrite addE_com; auto); rewrite multK_com; auto.",
                        "VernacExtend",
                        "cbcca27c6423156116440b0d7c0422dcf24a7a49"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, addE_assoc, <- scal_addEl, oppKr; Grm0.",
                        "VernacExtend",
                        "9be60400d8ed90e4f9c54a2487aa998d0708bda5"
                    ]
                },
                {
                    "command": [
                        "repeat (rewrite ?addE_assoc; auto; ((apply f_equal2 with (f := addE (vn_eparams n)); auto); [idtac]) || rewrite addE_com; auto); rewrite multK_com; auto.",
                        "VernacExtend",
                        "5159a49034a89bf893517ee348f10a6b4630f76d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_hom_com",
            "line_nb": 1666,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2] Hk1 Hk2; simpl expK.",
                        "VernacExtend",
                        "3dc9615f58b3f4208bffbc56b736ddbb643b1f60"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1l, multK_com; auto.",
                        "VernacExtend",
                        "6e77cbb43c135bdaebfafa6bdcf48b6474c59d5d"
                    ]
                },
                {
                    "command": [
                        "generalize Hk2; case eqK_spec; auto; intros; subst; Krm0; discriminate.",
                        "VernacExtend",
                        "e41b4851ddfe219f3ba9309c7b26b6ba07905e83"
                    ]
                },
                {
                    "command": [
                        "generalize Hk1; case eqK_spec; auto; intros; subst; Krm0; discriminate.",
                        "VernacExtend",
                        "cef30dd64008770ad5653db8e303b5f2c4cf5105"
                    ]
                },
                {
                    "command": [
                        "generalize Hk1; case eqK_spec; auto; intros; subst; Krm0; discriminate.",
                        "VernacExtend",
                        "cef30dd64008770ad5653db8e303b5f2c4cf5105"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2] Hk1 Hk2; simpl expK; destruct x as [x1 x2]; destruct y as [y1 y2]; try (generalize Hk1; case eq0_spec; intros; subst; Grm0; try discriminate); try (generalize Hk2; case eq0_spec; intros; subst; Grm0; try discriminate).",
                        "VernacExtend",
                        "b0c0d37e7af2b7372ff9d01acb7b92ac930aa75a"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E n x2), (hom0E n y2); auto; simpl; Vfold n.",
                        "VernacExtend",
                        "f4b2fea0757db46d0071f558ccbabda28e42b84a"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE1, !joink, multK_com; auto.",
                        "VernacExtend",
                        "874e411a64d235a1acb41214e4a3c19ae844613d"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E n x2), conjk, !joinkl, !joinkr, !scalE1; auto.",
                        "VernacExtend",
                        "360529a9245598e2ff7b3ee9fdf705289676aa09"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E n y2), <-!mult_n_O, conjk, !joinkl, !joinkr, !scalE1; auto.",
                        "VernacExtend",
                        "821034905e7d3d7fd628ada0c2e830a8f88a3e28"
                    ]
                },
                {
                    "command": [
                        "assert (Hh1: hom n k1 x1) by (generalize Hk1; case hom; auto).",
                        "VernacExtend",
                        "485ac8122dc9906bba16170c198f8ab1a094ce16"
                    ]
                },
                {
                    "command": [
                        "assert (Hh2: hom n k1.+1 x2) by (generalize Hk1; case hom; intros; auto; discriminate).",
                        "VernacExtend",
                        "ceed7bd6fb3fa05015f1b453e4db2a1504a2390b"
                    ]
                },
                {
                    "command": [
                        "assert (Hh3: hom n k2 y1) by (generalize Hk2; case hom; auto).",
                        "VernacExtend",
                        "3a1f6bc00e0111cf24faf90e3dd4eb0534cde837"
                    ]
                },
                {
                    "command": [
                        "assert (Hh4: hom n k2.+1 y2) by (generalize Hk2; case hom; intros; auto; discriminate).",
                        "VernacExtend",
                        "5025d2e102543ad35a8337598ccf78b9a9b81ecb"
                    ]
                },
                {
                    "command": [
                        "rewrite (conjf_hom _ k2.+1), join_scall, (conjf_hom _ k1.+1), join_scall; auto.",
                        "VernacExtend",
                        "9d2b04b58ca3ce2197541e5cf4ca1a477cb0da30"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _).",
                        "VernacExtend",
                        "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, scal_addEr; auto.",
                        "VernacExtend",
                        "503272dc88bc108b0a4e6d2ee0cbb713acd1a88a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n).",
                        "VernacExtend",
                        "07bd95799a0a4d0bb13cccb2cd871e93e6a4fe28"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ k1 k2.+1); auto.",
                        "VernacExtend",
                        "d295600a21990774885fc6869e18b804a85c9d72"
                    ]
                },
                {
                    "command": [
                        "simpl expK; rewrite !expK_add, !scal_multE; auto.",
                        "VernacExtend",
                        "d5a78d584151e3b82eba48c998fa6f43ff6afe40"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ k1.+1 k2); auto.",
                        "VernacExtend",
                        "e8b1cc28b2ac9e3a1b024b9d0b01fde533008c7b"
                    ]
                },
                {
                    "command": [
                        "simpl expK; rewrite <-mult_n_Sm, !expK_add, <-!scal_multE; auto.",
                        "VernacExtend",
                        "44b6f99e2ce62c20be241ed52e9c7ddaa4bfb17e"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := scal n); auto.",
                        "VernacExtend",
                        "deb609984d2410cce51f5573a0705c8e2556a359"
                    ]
                },
                {
                    "command": [
                        "rewrite (multK_com _ Hp (- (1))%f), !multK_assoc; auto.",
                        "VernacExtend",
                        "11e9a8a5376c9778c8e5fce27a7fe6e888d751e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (multK_assoc _ Hp (- (1))%f), multK_m1_m1, multK1l, expK2m1, multK1r; auto.",
                        "VernacExtend",
                        "0b4c443a70011c7290b0bec966b47b428adcce36"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ k1.+1 k2.+1); auto.",
                        "VernacExtend",
                        "8d79e8693bd8df5591ec77ab3b5bdf90286bf3bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_hom_id",
            "line_nb": 1705,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros [|k] Hk; simpl expK.",
                        "VernacExtend",
                        "25e70d233fd16c997dc2dc7e17a082c79d74d3d3"
                    ]
                },
                {
                    "command": [
                        "intros HH; inversion HH.",
                        "VernacExtend",
                        "88492448374aad12c8ff410da5a3ab0c64d9e7c5"
                    ]
                },
                {
                    "command": [
                        "generalize Hk; case eqK_spec; intros; subst; Krm0; discriminate.",
                        "VernacExtend",
                        "d977fa3e9dff747676effc400fed44757a0e285f"
                    ]
                },
                {
                    "command": [
                        "intros [|k]; destruct x as [x y]; rewrite andbP; intros (Hk1,Hk2).",
                        "VernacExtend",
                        "72d32620cef26ba0e5317281d485c53dc3ec2e62"
                    ]
                },
                {
                    "command": [
                        "intros HH; inversion HH.",
                        "VernacExtend",
                        "88492448374aad12c8ff410da5a3ab0c64d9e7c5"
                    ]
                },
                {
                    "command": [
                        "intros Ho; rewrite (IH _ k.+1); auto.",
                        "VernacExtend",
                        "bf9ca5a1e68a54b503d26bcb3d88b7887c826562"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (k := S k); auto.",
                        "VernacExtend",
                        "8b977cede707145fd47345bd3c4ee18f2ba67a9c"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_odd, join_scall, (join_hom_com n k k.+1 x y), expKm1_even, scalE1, scal_addE0; auto.",
                        "VernacExtend",
                        "f973276aab8232a1a39dff2f2b904a02b3af5caa"
                    ]
                },
                {
                    "command": [
                        "apply even_mult_l.",
                        "VernacExtend",
                        "90f0cb0b6080f6b86e575bda15b24aaea48c4d63"
                    ]
                },
                {
                    "command": [
                        "apply odd_plus_even_inv_r with 1%nat; auto; repeat constructor; auto.",
                        "VernacExtend",
                        "afb16844180ea9f875d606e7f168fca91e9678df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_vector_space_swap",
            "line_nb": 1719,
            "steps": [
                {
                    "command": [
                        "induction l as [|y l IH].",
                        "VernacExtend",
                        "a1e6293d4e8e758bbe22855abeb13b44b19d536a"
                    ]
                },
                {
                    "command": [
                        "intros _ [].",
                        "VernacExtend",
                        "7bcaff8becdca0897f7a6af7790d73839f66c309"
                    ]
                },
                {
                    "command": [
                        "simpl In; intros Hs [[] | Hxy].",
                        "VernacExtend",
                        "b13668cf0de0552af2e749f8dc228da805e1031f"
                    ]
                },
                {
                    "command": [
                        "exists l; auto.",
                        "VernacExtend",
                        "2eab71a4d324b79b2ef6a9e847d6eb06296bcbe0"
                    ]
                },
                {
                    "command": [
                        "assert (F1: is_vector_space n l).",
                        "VernacExtend",
                        "16487447ec7eb2dc95f53f5a089bc7c67f9f98d8"
                    ]
                },
                {
                    "command": [
                        "intros u Hu; apply Hs; auto with datatypes.",
                        "VernacExtend",
                        "d56858034e9030ccb425ae94912ab7afb681c5fa"
                    ]
                },
                {
                    "command": [
                        "case (IH F1 Hxy); intros l1 (H1l1,H2l1).",
                        "VernacExtend",
                        "9114428212b5e8015ddb4883e962311bdab36092"
                    ]
                },
                {
                    "command": [
                        "exists ((-(1)) .* y::l1); split.",
                        "VernacExtend",
                        "ba7fda82307081614767bc8618c1e5e5121d7389"
                    ]
                },
                {
                    "command": [
                        "intros u; simpl; intros [Hu|[Hu|Hu]]; subst.",
                        "VernacExtend",
                        "0a877568ce27e9617c4c560295b9058551e95a61"
                    ]
                },
                {
                    "command": [
                        "apply H1l1; auto with datatypes.",
                        "VernacExtend",
                        "0596440fe02bb71d06236c4ea3cdd85efe644fc3"
                    ]
                },
                {
                    "command": [
                        "apply VectorSpace.cbl_scal; apply Hs; auto with datatypes.",
                        "VernacExtend",
                        "8c52c48c3f6b618117a6a2f679e1988681dd54f3"
                    ]
                },
                {
                    "command": [
                        "apply H1l1; auto with datatypes.",
                        "VernacExtend",
                        "0596440fe02bb71d06236c4ea3cdd85efe644fc3"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS, H2l1.",
                        "VernacExtend",
                        "98ac970edc312c7941c6f4a925b0e547fe8d8a93"
                    ]
                },
                {
                    "command": [
                        "destruct l1 as [|z l1].",
                        "VernacExtend",
                        "e73ad5b024f1b387ab56aae7af5a1ae246eeddd3"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n.",
                        "VernacExtend",
                        "b9f9449f47b4fc50318b4052e4f924187e72923e"
                    ]
                },
                {
                    "command": [
                        "rewrite join_hom_com with (k1 := 1%nat) (k2 := 1%nat).",
                        "VernacExtend",
                        "4dd2e30919df4cb5b47c66df1edb98945471d5d8"
                    ]
                },
                {
                    "command": [
                        "simpl expK; Krm1; rewrite join_scalr; auto.",
                        "VernacExtend",
                        "f03a355f91206616d09c3cc3f503720edced19af"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv; apply H1l1; auto with datatypes.",
                        "VernacExtend",
                        "2567593b4d8eb9991b68d51b8f0ebe5d02ff8776"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv; apply Hs; auto with datatypes.",
                        "VernacExtend",
                        "d75fcdc5daafc4c651e13e0eddff6f41af75c805"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS, <-join_assoc.",
                        "VernacExtend",
                        "d2f8eb951ed20da3dc2fcdc26bc1ecbdedfe4fe9"
                    ]
                },
                {
                    "command": [
                        "rewrite join_hom_com with (k1 := 1%nat) (k2 := 1%nat) (x:= x).",
                        "VernacExtend",
                        "ab933343cec3d0bfad614d05b1d42c55016473c0"
                    ]
                },
                {
                    "command": [
                        "simpl expK; Krm1; rewrite <-join_scalr, join_assoc; auto.",
                        "VernacExtend",
                        "b1dac8f614ca4a2f5deb7979274a0fb7fb0330c8"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv; apply H1l1; auto with datatypes.",
                        "VernacExtend",
                        "2567593b4d8eb9991b68d51b8f0ebe5d02ff8776"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv; apply Hs; auto with datatypes.",
                        "VernacExtend",
                        "d75fcdc5daafc4c651e13e0eddff6f41af75c805"
                    ]
                },
                {
                    "command": [
                        "intros HH; discriminate.",
                        "VernacExtend",
                        "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
                    ]
                },
                {
                    "command": [
                        "destruct l as [|z l].",
                        "VernacExtend",
                        "c9fb76e09f3670322852b804ae18021ae097a99e"
                    ]
                },
                {
                    "command": [
                        "case Hxy.",
                        "VernacExtend",
                        "9a85cd30a1b14b8da004838e086558efef252659"
                    ]
                },
                {
                    "command": [
                        "intros HH; discriminate.",
                        "VernacExtend",
                        "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor0",
            "line_nb": 1750,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite multK0l; auto.",
                        "VernacExtend",
                        "d9fd994fb151459953bfa2baf32130a8d503b021"
                    ]
                },
                {
                    "command": [
                        "destruct x; case eq0_spec; intros Hx2; subst; Vfold n; Grm0.",
                        "VernacExtend",
                        "39c5b8cedb97bc2800cc761c49a157999bfaad68"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; Grm0; rewrite IH; auto.",
                        "VernacExtend",
                        "8d043e82cf1a0e25b08e8c1c54b3dfb76eba6db9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_scal",
            "line_nb": 1756,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc; auto.",
                        "VernacExtend",
                        "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x1 x2]; destruct M as [M1 M2].",
                        "VernacExtend",
                        "ec874222a813de70d48b1a77bf4d914ae0361c3a"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros Hx2; subst; Vfold n; Grm0.",
                        "VernacExtend",
                        "785aaa85a2aa56b1d8ea2b8dd2f2f6fb8b551bc1"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!scal_multE, multK_com; auto.",
                        "VernacExtend",
                        "82fe62d1d495da09f67454e7d217e5f48d91121b"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
                        "VernacExtend",
                        "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite <-IH.",
                        "VernacExtend",
                        "f55d2edd616121a476d73c2351a337656273b2f2"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_addEr, !(scalE_swap _ (fn n) k); auto.",
                        "VernacExtend",
                        "7694be87c5a3360c683ab561054d2049ad9dbd84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_id",
            "line_nb": 1766,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros H; case eqK_spec; intros; auto; case H; auto; discriminate.",
                        "VernacExtend",
                        "bde7a41256c5d3114254c230994ddcb809c390e4"
                    ]
                },
                {
                    "command": [
                        "intros Hd; destruct x.",
                        "VernacExtend",
                        "d4c637b83e477c1ad2d693d526b307a6abd58fa6"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (Hx1, Hx2).",
                        "VernacExtend",
                        "ba6dc9950e0554495d843a02261516c7e1276696"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hx1), !constk, !scalk, <-opp_multKl, multK1l; auto.",
                        "VernacExtend",
                        "c9d118383a7b0b67dd2151a6937ef8f5735af1a0"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros H1x2; subst.",
                        "VernacExtend",
                        "b8c315db895ae19e49c77b9ce71c127e03016457"
                    ]
                },
                {
                    "command": [
                        "rewrite invKr; auto; intros Hk1; case Hd.",
                        "VernacExtend",
                        "e16f214401d186c2adb9660e603d42c95576566c"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hx1), Hk1; Grm0.",
                        "VernacExtend",
                        "5bd5fdc38a2016d5ed450cbae0c742a14abf1e33"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, scalk, multK1r, addk, oppKr, factor0; auto.",
                        "VernacExtend",
                        "1f489ab34ef55b64d8b32a242e3d65113e902f45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_hom0E",
            "line_nb": 1777,
            "steps": [
                {
                    "command": [
                        "intros Hx1 H1x1 Hx2.",
                        "VernacExtend",
                        "b31180da18ac82f9e9fafbb3fd0a21f221efbd90"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hx2), joinkr, factor_scal, factor_id, scalk, multK1r; auto.",
                        "VernacExtend",
                        "21325198621829ab05315c48779049f5fb48ae3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_factor",
            "line_nb": 1781,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; try (intros; discriminate).",
                        "VernacExtend",
                        "e242e2390977096108d43e24307f79e689793e20"
                    ]
                },
                {
                    "command": [
                        "intros H1 _ H2; case H2; auto.",
                        "VernacExtend",
                        "8f39b6251ebc88497fdc2a8fb8cc3f6c030cdb06"
                    ]
                },
                {
                    "command": [
                        "destruct x2 as [x3 x4]; destruct x1 as [x1 x2].",
                        "VernacExtend",
                        "53691d7e477bc08cab8a40bdf6c79a7051728cfd"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (Hu1, Hu2) H3.",
                        "VernacExtend",
                        "61bb81abf7b8ba145b49e2ee6d79d1cc44e7cd58"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hu1), constk; auto.",
                        "VernacExtend",
                        "7cfe0182be43fc5b33f68b07db623cfa009dc96d"
                    ]
                },
                {
                    "command": [
                        "rewrite !joinkl, (conjf_hom _ _ _ Hu2); simpl expK; rewrite multK1r; auto.",
                        "VernacExtend",
                        "b76161083e3c9cff63e4e9cc4d765f2153eb5ebb"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros He2; subst.",
                        "VernacExtend",
                        "59f7ba962a9b8301c638cbacc2f0a3bf23d462c9"
                    ]
                },
                {
                    "command": [
                        "Grm0; intros HH; injection HH; clear HH; intros HH.",
                        "VernacExtend",
                        "3366ed681ec477f18e08bb6865f3b98a6139d61a"
                    ]
                },
                {
                    "command": [
                        "case (scalE_integral _ (fn n) _ _ HH); clear HH; intros HH; subst; auto.",
                        "VernacExtend",
                        "f212393369050369c1e0c0014f3dcc2d041a2b5b"
                    ]
                },
                {
                    "command": [
                        "case H3; rewrite (hom0E _ _ Hu1), HH; auto.",
                        "VernacExtend",
                        "8095151b83fd68220e88fbe42ee82d66d7d9bdd3"
                    ]
                },
                {
                    "command": [
                        "rewrite joinkl, <- scal_multE, invKl, scalE1; Grm0; auto.",
                        "VernacExtend",
                        "362b3ac6e5f24964576ef366138f71191e0fa456"
                    ]
                },
                {
                    "command": [
                        "intros HH; case H3; rewrite (hom0E _ _ Hu1), HH; auto.",
                        "VernacExtend",
                        "58ea48992ccc8ab5040977721d196bdff812ba06"
                    ]
                },
                {
                    "command": [
                        "intros HH; injection HH; Vfold n; intros Hr1 Hr2.",
                        "VernacExtend",
                        "38c5a30ea9df8ba928806288b09025bbd5c4a958"
                    ]
                },
                {
                    "command": [
                        "assert (H1: x2 \u2228 factor n x2 x4 = x4).",
                        "VernacExtend",
                        "aae4b61cc69daad41cef6d9f1a323d57131fb104"
                    ]
                },
                {
                    "command": [
                        "rewrite <-IH; auto.",
                        "VernacExtend",
                        "b90ad3b7421dda57555d665f7355503314a7e57a"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite joinkl, join_scall, <-IH, scal_addEr, <-addE_assoc, scal_addE0, addE0l, <-scal_multE, multK_m1_m1, scalE1; auto.",
                        "VernacExtend",
                        "e8cad0b9eaa74e34d0bab18b42d67af8a1c4006f"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, H1, <-join_scall; auto.",
                        "VernacExtend",
                        "7e1b9570995cd136680811e64fb2650874f01e22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factork",
            "line_nb": 1802,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; case H1; generalize H2.",
                        "VernacExtend",
                        "9e27681e6f70b42a4891392b4157e51b28dd1d30"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros; discriminate.",
                        "VernacExtend",
                        "7b3395b0a6bb1c96dd79c1b95950f09ecbfa52f0"
                    ]
                },
                {
                    "command": [
                        "intros Hx; destruct x; rewrite andbP; intros (H1,H2); Vfold n.",
                        "VernacExtend",
                        "383977678c46f875eb61dd4a222a4d07308c2780"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; Grm0; intros H3.",
                        "VernacExtend",
                        "2045bddc82541735754b0afe0477fa1f6fb2eee9"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; Grm0.",
                        "VernacExtend",
                        "406664666b730176f578b9631180a549c7427e13"
                    ]
                },
                {
                    "command": [
                        "rewrite factor0; auto.",
                        "VernacExtend",
                        "7418d92198b5fe1f3b75547f8a9ca185e47beccc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor0_hom0",
            "line_nb": 1811,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 H3; rewrite (hom0E _ _ H3); apply factork; auto.",
                        "VernacExtend",
                        "c7732cc1ec7a653f78f20a596f4251bc98bfcdb3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_hom",
            "line_nb": 1814,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; intros k; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "4e25aec9f056cf18d6416cc9bd2308f05aee065c"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; try (intros; discriminate).",
                        "VernacExtend",
                        "e242e2390977096108d43e24307f79e689793e20"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; case H2; auto.",
                        "VernacExtend",
                        "64473c0bac90940aec179baa53933e91e736e033"
                    ]
                },
                {
                    "command": [
                        "intros H Heq; destruct x2 as [x3 x4]; destruct x1 as [x1 x2]; rewrite !andbP; intros (Hu1,Hu2) (Hu3, Hu4).",
                        "VernacExtend",
                        "efdea2aa759eb6a257948764f4b95d83ae994b93"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros Hx2; subst.",
                        "VernacExtend",
                        "69a4f10e79c1713573143c04861d83e956b4f5ef"
                    ]
                },
                {
                    "command": [
                        "destruct k as [| k]; rewrite ?eq0I, ?homk0, scal_hom; auto.",
                        "VernacExtend",
                        "c5d4f5fdbb9c1d71436625ea3f5054bb96d70798"
                    ]
                },
                {
                    "command": [
                        "injection Heq; Vfold n; rewrite (hom0E _ _ Hu1).",
                        "VernacExtend",
                        "ba32659edb334422d6f7dd826d5779667159cc41"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := Hu2); simpl expK; rewrite multK1r, joinkl; auto.",
                        "VernacExtend",
                        "d1ffe3be8634f1f069b28a65524d6a292d994758"
                    ]
                },
                {
                    "command": [
                        "intros Heq1 Heq2.",
                        "VernacExtend",
                        "b34313fe2e9bd56c56ccba035fddfeb1aeaf38a7"
                    ]
                },
                {
                    "command": [
                        "rewrite constk; auto.",
                        "VernacExtend",
                        "cc9aa661e269f43bc01ffa65c648c994fd1edd61"
                    ]
                },
                {
                    "command": [
                        "simpl in x3.",
                        "VernacExtend",
                        "ca7fad0e73fcca3a2b8b894dee408b506c725408"
                    ]
                },
                {
                    "command": [
                        "assert (Heq3: x2 \u2228 ('C[x1] .* factor n x2 x4 + (- (1)).* (x3 : vect n)) = 0).",
                        "VernacExtend",
                        "8b0f21ed027fba0a581e40518fae4560e6565e20"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
                        "VernacExtend",
                        "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
                    ]
                },
                {
                    "command": [
                        "destruct k as [| k]; rewrite andbP; split; auto.",
                        "VernacExtend",
                        "dc7bfaa8ec3da87f46cce53cc777d6ebbcb9d4eb"
                    ]
                },
                {
                    "command": [
                        "rewrite factor0_hom0; try rewrite eq0I; auto.",
                        "VernacExtend",
                        "6fc972ecd1fdb75e037d6d74d0ee089892d36fea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_add",
            "line_nb": 1832,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros k H; case eqK_spec; auto; intros H1 H2; case H; auto; discriminate.",
                        "VernacExtend",
                        "3d2f6c553fc30eabb2ca7779689a4bfac76c22b4"
                    ]
                },
                {
                    "command": [
                        "intros k; destruct x1 as [x11 x12]; destruct x2 as [y11 y12]; destruct x3 as [z11 z12]; rewrite !andbP; Vfold n.",
                        "VernacExtend",
                        "734a1caf8ae0d227be242eece20e69f6992f4d7d"
                    ]
                },
                {
                    "command": [
                        "fold vect in x11, x12, y11, y12, z11, z12.",
                        "VernacExtend",
                        "b7f64037a853a0fa335a3211e4a265883b98845e"
                    ]
                },
                {
                    "command": [
                        "intros H1 (H2,H3) (H4, H5) (H6, H7) HH1 HH2.",
                        "VernacExtend",
                        "c486aedb49c4e3f2b41981604ebb213f0a050764"
                    ]
                },
                {
                    "command": [
                        "injection HH1; injection HH2; Vfold n; intros Eq1 Eq2 Eq3 Eq4; clear HH1 HH2.",
                        "VernacExtend",
                        "b7991f3a7598fac61ce73854dc634384f7faaa95"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ H2), !constk.",
                        "VernacExtend",
                        "f43a87babdc02ea247cc56d197290e642af1805b"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros Hex12; subst; Vfold n; Grm0.",
                        "VernacExtend",
                        "80a9b1850a88fa42022e46edc7203fc09972ee6a"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_addEr; auto.",
                        "VernacExtend",
                        "ac3d8102aaac3f0446086b2a67b608562cc67b92"
                    ]
                },
                {
                    "command": [
                        "simpl in y12.",
                        "VernacExtend",
                        "87a778f01f0676207f5b1466cb0daa69ea48a0d7"
                    ]
                },
                {
                    "command": [
                        "assert (Hf: factor n x12 (y12 + z12) = factor n x12 y12 + factor n x12 z12).",
                        "VernacExtend",
                        "fe524df4598b5c86a3ebca96a35d29dadb792e9d"
                    ]
                },
                {
                    "command": [
                        "apply IH with (k := k); auto.",
                        "VernacExtend",
                        "d29e8ce35cb45fc94f05b084a3b269dbfaa20553"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "assert (Heq: forall kk (xx yy zz tt: vect n), (kk .* (xx + yy) + (-(1)).* (zz + tt) = (kk .* xx + (-(1)).* zz) + (kk .* yy + (-(1)).* tt))).",
                        "VernacExtend",
                        "7dc1fd7af1fb8345b10c0056140f0e306263be0d"
                    ]
                },
                {
                    "command": [
                        "intros kk xx yy zz tt.",
                        "VernacExtend",
                        "b332053490b4b97a147b0a8e598276bf89334c1b"
                    ]
                },
                {
                    "command": [
                        "rewrite !scal_addEr, !addE_assoc; auto.",
                        "VernacExtend",
                        "2e81b651bb978c6e168dac09d27104a0d2af07ac"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, !addE_assoc; auto.",
                        "VernacExtend",
                        "2d3e1d0e9541e9c63ab0af6b580d4c553e0a19c8"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq; clear Heq.",
                        "VernacExtend",
                        "2c0e3b5a66bcbbbdb3057a9bda33c6149b1157f7"
                    ]
                },
                {
                    "command": [
                        "destruct k as [| k].",
                        "VernacExtend",
                        "ad3893accd99580737737c9c65861a290ff93b49"
                    ]
                },
                {
                    "command": [
                        "assert (Hv1: x12 \u2228 ('C[x11] .* factor n x12 y12 + (- (1)).* y11) = 0).",
                        "VernacExtend",
                        "57548fd679d0671a5977ddc8d46dcaefedfc6506"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
                        "VernacExtend",
                        "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
                    ]
                },
                {
                    "command": [
                        "generalize Eq4; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
                        "VernacExtend",
                        "00611d85dd7fb9c2ba5b6c2587bead558e5b32c0"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
                        "VernacExtend",
                        "e917777175689910463540648f54b88ae7db432a"
                    ]
                },
                {
                    "command": [
                        "assert (Hv2: x12 \u2228 ('C[x11] .* factor n x12 z12 + (- (1)).* z11) = 0).",
                        "VernacExtend",
                        "230a61db329487daeac20abbdae6c8d36e818803"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
                        "VernacExtend",
                        "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
                    ]
                },
                {
                    "command": [
                        "generalize Eq2; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
                        "VernacExtend",
                        "52b04011915f06861d6115be5e279ec2acbda39c"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
                        "VernacExtend",
                        "e917777175689910463540648f54b88ae7db432a"
                    ]
                },
                {
                    "command": [
                        "rewrite !factor0_hom0; Grm0; apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
                        "VernacExtend",
                        "3455035ce7e972b4746e98930a0ecf0e671d5fca"
                    ]
                },
                {
                    "command": [
                        "apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
                        "VernacExtend",
                        "d6e9e66b32cabde2edf81a1fd781295c729469d6"
                    ]
                },
                {
                    "command": [
                        "apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
                        "VernacExtend",
                        "d6e9e66b32cabde2edf81a1fd781295c729469d6"
                    ]
                },
                {
                    "command": [
                        "apply IH with (k := k); auto; try apply add_hom; try apply scal_hom; try apply factor_hom; auto.",
                        "VernacExtend",
                        "59fe5a76522d36d8c0034833e99f88f2fb664a01"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
                        "VernacExtend",
                        "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
                    ]
                },
                {
                    "command": [
                        "generalize Eq4; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
                        "VernacExtend",
                        "00611d85dd7fb9c2ba5b6c2587bead558e5b32c0"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
                        "VernacExtend",
                        "e917777175689910463540648f54b88ae7db432a"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, <-factor_factor, <-join_scall; auto.",
                        "VernacExtend",
                        "f752682c9ac7e37d0605094400e5fb0d7fa26ee9"
                    ]
                },
                {
                    "command": [
                        "generalize Eq2; pattern x11 at 1; rewrite (hom0E _ _ H2), joinkl.",
                        "VernacExtend",
                        "52b04011915f06861d6115be5e279ec2acbda39c"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := H3); simpl expK; rewrite multK1r; auto.",
                        "VernacExtend",
                        "e917777175689910463540648f54b88ae7db432a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho0",
            "line_nb": 1877,
            "steps": [
                {
                    "command": [
                        "intros H; destruct n; simpl.",
                        "VernacExtend",
                        "4a38724748d67ce5509632b577b9ad41e55d5dff"
                    ]
                },
                {
                    "command": [
                        "contradict H; auto with arith.",
                        "VernacExtend",
                        "b214f7778647ca17388e52789b102a05bada7ab4"
                    ]
                },
                {
                    "command": [
                        "rewrite !eq0I; auto.",
                        "VernacExtend",
                        "e463366052707642dbd332986a555e4c6f85b691"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_refl",
            "line_nb": 1882,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros H; discriminate.",
                        "VernacExtend",
                        "9744d3b951ad3daa7f0c30b4af0ca7cfd1f015c2"
                    ]
                },
                {
                    "command": [
                        "destruct x; case eq0_spec.",
                        "VernacExtend",
                        "235e2447963cc3a55f52f8258362f7d9f35b7574"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros; subst; auto; discriminate.",
                        "VernacExtend",
                        "26cf013082c5038c5b1e67c7647c013e58bf7d0a"
                    ]
                },
                {
                    "command": [
                        "intro Hx1; rewrite andbP; intros (Hx2x1, Hx1x2).",
                        "VernacExtend",
                        "fd7525c13f648bb13bab98951bb127bf4c414363"
                    ]
                },
                {
                    "command": [
                        "case Hx1; apply IH; auto.",
                        "VernacExtend",
                        "f10dcbabc667e99ca6dd3e211df24ff47c769cb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "forthok",
            "line_nb": 1890,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros _ _; case eqK_spec; auto; intros H1 H2; subst; auto; case H2; auto.",
                        "VernacExtend",
                        "712ba0ba58edae1148410ce899654c25b6b41f40"
                    ]
                },
                {
                    "command": [
                        "intros k k1; destruct v; rewrite andbP; intros HH.",
                        "VernacExtend",
                        "f255ca606109e74f82ffce67c588d4a5311f6397"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros HH2; subst; auto.",
                        "VernacExtend",
                        "d09b6d11a0a65b3d59ae2025d40a2978f6ce5794"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; auto.",
                        "VernacExtend",
                        "a06a75bba6d56b673bd55816ed0e47683e4f695c"
                    ]
                },
                {
                    "command": [
                        "intros (H1, H2).",
                        "VernacExtend",
                        "cbe4fae06561c7d97a3cceb65a0c2d56dc027b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ k), (IH _ k 0%f); auto.",
                        "VernacExtend",
                        "06e903a2a0a41c3cecbde22b9ee16ecd76643d00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_scal",
            "line_nb": 1900,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2; case eq0_spec; auto.",
                        "VernacExtend",
                        "de2714e5eca703300c482cbf904c7be0c856cbbf"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto; intros; subst; try discriminate; Grm0.",
                        "VernacExtend",
                        "5fc261da280ea164600662812f8911e48b21e772"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; auto.",
                        "VernacExtend",
                        "a06a75bba6d56b673bd55816ed0e47683e4f695c"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros Hy1 (Hr1, Hr2).",
                        "VernacExtend",
                        "b98268d8066c25ee4226975012a10f7e5a6c64d6"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto.",
                        "VernacExtend",
                        "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_add",
            "line_nb": 1908,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2; destruct v3.",
                        "VernacExtend",
                        "b3b32e5be1aca102f5708f65d3f82d34c57c2ef7"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec.",
                        "VernacExtend",
                        "a40b3faf1feddcb9db52be1b29b15ceb1d5467dd"
                    ]
                },
                {
                    "command": [
                        "do 2 (case eq0_spec; auto; try (intros; discriminate)); intros; subst; Grm0.",
                        "VernacExtend",
                        "9065ea23353e976d5bfcdb15338191a9edc8e2e5"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; auto.",
                        "VernacExtend",
                        "a06a75bba6d56b673bd55816ed0e47683e4f695c"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP, andbP; intros Hy1 (H1, H2) (H3, H4).",
                        "VernacExtend",
                        "5a42e24b680de75fad47de8c57f88bc1e7d8c465"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto.",
                        "VernacExtend",
                        "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_conj",
            "line_nb": 1917,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros b; destruct v1; destruct v2.",
                        "VernacExtend",
                        "12e17daface7d44600d5d1cdee7010d82e142adf"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec.",
                        "VernacExtend",
                        "a40b3faf1feddcb9db52be1b29b15ceb1d5467dd"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto; try (intros; discriminate); intros; subst; Grm0.",
                        "VernacExtend",
                        "ef92fac8f428a2c70f199588ec1910ea5e7b8199"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; auto.",
                        "VernacExtend",
                        "a06a75bba6d56b673bd55816ed0e47683e4f695c"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP, andbP; intros Hy1 (H1, H2).",
                        "VernacExtend",
                        "ce86d734c9af3ad6b8542a907211c5131a357662"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH; auto.",
                        "VernacExtend",
                        "c2bab40f3ef067d7e5c0dbfe519265901ae6014b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_join",
            "line_nb": 1927,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2; destruct v3.",
                        "VernacExtend",
                        "b3b32e5be1aca102f5708f65d3f82d34c57c2ef7"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec.",
                        "VernacExtend",
                        "a40b3faf1feddcb9db52be1b29b15ceb1d5467dd"
                    ]
                },
                {
                    "command": [
                        "do 2 (case eq0_spec; auto; try (intros; discriminate)); intros; subst; Grm0.",
                        "VernacExtend",
                        "9065ea23353e976d5bfcdb15338191a9edc8e2e5"
                    ]
                },
                {
                    "command": [
                        "rewrite eq0I; auto.",
                        "VernacExtend",
                        "a06a75bba6d56b673bd55816ed0e47683e4f695c"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP, andbP; intros Hy1 (H1, H2) (H3, H4).",
                        "VernacExtend",
                        "5a42e24b680de75fad47de8c57f88bc1e7d8c465"
                    ]
                },
                {
                    "command": [
                        "rewrite fortho_add, !IH; auto.",
                        "VernacExtend",
                        "c18841585b7c703a7a0bdb5f8c4ac13109f2168d"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "rewrite fortho_conj; auto.",
                        "VernacExtend",
                        "ca97067b8ad618e9bd15a9275e9544811b4a6228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_joinl",
            "line_nb": 1938,
            "steps": [
                {
                    "command": [
                        "intros Hv Hhv; induction l as [| a l IH]; simpl; try Vfold n; auto.",
                        "VernacExtend",
                        "74749fe2bfb5d501a2bb21282354407362921f3e"
                    ]
                },
                {
                    "command": [
                        "intros; apply (forthok n k 0%f); auto.",
                        "VernacExtend",
                        "420c0cc2373c5d9662cab5b607f76398c0889d33"
                    ]
                },
                {
                    "command": [
                        "intros; destruct l; auto.",
                        "VernacExtend",
                        "66d72bb26f028f33cc464c281dbbb94fb23a6b15"
                    ]
                },
                {
                    "command": [
                        "apply fortho_join; auto with datatypes.",
                        "VernacExtend",
                        "5db6038390bccbd9026d611706e4f8a7fa8080be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "factor_ortho",
            "line_nb": 1944,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; case H1; generalize H2; case eqK_spec; auto.",
                        "VernacExtend",
                        "2abf988fc3d6638cbe75783cbe87a445d30c31da"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "destruct x2 as [y1 y2]; destruct x1 as [x1 x2]; case eq0_spec.",
                        "VernacExtend",
                        "6cb08b08ff1941cb5bf8f490c535d424b61ff50d"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; case eq0_spec; intros Hx2 Hy1 HH (HH1,HH2) Ht; subst; Grm0; try discriminate.",
                        "VernacExtend",
                        "98caea3ba8ac56080b0940fc7830db1ad0751435"
                    ]
                },
                {
                    "command": [
                        "pattern x1 at 2; rewrite (hom0E _ _ HH1).",
                        "VernacExtend",
                        "2bc2742634d3594c4c0f3cc8e825cec47647508b"
                    ]
                },
                {
                    "command": [
                        "rewrite joinkl, <-scal_multE, invKr, scalE1; auto.",
                        "VernacExtend",
                        "0877f0abaaafc807fa53277eb7f9d94cd3482873"
                    ]
                },
                {
                    "command": [
                        "intros HH3; case HH; rewrite (hom0E _ _ HH1), HH3; auto.",
                        "VernacExtend",
                        "ac87bf94af62cd97f9edc0e7c2bbfe07b3641b67"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP, andbP; intros Hy1 HH (HH1,HH2) (Ht1, Ht2); try discriminate.",
                        "VernacExtend",
                        "a7d75dab017ddb84e8a11cb09241fde92e3a4707"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "pattern x1 at 2; rewrite (hom0E _ _ HH1).",
                        "VernacExtend",
                        "2bc2742634d3594c4c0f3cc8e825cec47647508b"
                    ]
                },
                {
                    "command": [
                        "rewrite joinkl, scal_addEr, <-scal_multE, <-addE_assoc, <-scal_addEl, <-opp_multKl, multK1l, oppKr; Grm0.",
                        "VernacExtend",
                        "cbabe65f612b9c1880ef7ab012995f6a2f30e013"
                    ]
                },
                {
                    "command": [
                        "rewrite factor_scal, (conjf_hom _ _ _ HH2); simpl expK.",
                        "VernacExtend",
                        "9ee92c6eab1cf56be0368e5aa19bde3b9049fcdd"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1r, join_scall, factor_scal, IH, <-scal_multE, multK_m1_m1, scalE1; auto.",
                        "VernacExtend",
                        "a89d5ad72890f9bf6111533fbfe30fc59e500c44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fget_scal",
            "line_nb": 1961,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n; Krm0.",
                        "VernacExtend",
                        "841270432cee486ac573d61e8082650d0e28295e"
                    ]
                },
                {
                    "command": [
                        "destruct x1; destruct x2; case eq0_spec; auto.",
                        "VernacExtend",
                        "9c44257f08ebe8134c6f9b0c420c4879232a3634"
                    ]
                },
                {
                    "command": [
                        "rewrite const_scal, <-!multK_assoc, (multK_com _ Hp k); auto.",
                        "VernacExtend",
                        "354a566305b60524aeca5ea46815426569b03db6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fortho_fget",
            "line_nb": 1966,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; try (intros; discriminate).",
                        "VernacExtend",
                        "e242e2390977096108d43e24307f79e689793e20"
                    ]
                },
                {
                    "command": [
                        "intros HH HH1; case HH1; auto.",
                        "VernacExtend",
                        "0725be1d458850c6f815678b597a1192fcd05a06"
                    ]
                },
                {
                    "command": [
                        "destruct x2 as [y1 y2]; destruct x1 as [x1 x2].",
                        "VernacExtend",
                        "7bec33613373b36df1aa90c0faaf0f0405268edd"
                    ]
                },
                {
                    "command": [
                        "intros HH; rewrite !andbP; intros (H1, H2) (H3, H4).",
                        "VernacExtend",
                        "3b0126a0f0704ba28a0f1bb755f0039dbd6d709f"
                    ]
                },
                {
                    "command": [
                        "pattern x1 at 2 4; rewrite (hom0E _ _ H1).",
                        "VernacExtend",
                        "82ff018f53c8f1b653991ba3e2ab3c11026092aa"
                    ]
                },
                {
                    "command": [
                        "pattern y1 at 1 3; rewrite (hom0E _ _ H3).",
                        "VernacExtend",
                        "3610fa5fb918f54fb284ff7effba0822eaa99bd2"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros H5; subst.",
                        "VernacExtend",
                        "79688c82589492d701bec972e14bf3a41ba8e35d"
                    ]
                },
                {
                    "command": [
                        "rewrite !scalk, addk, (multK_com _ Hp ('C[x1]^-1)%f), !multK_assoc, invKr, multK1r; Krm1.",
                        "VernacExtend",
                        "179b6990eba513fba0da64d45654c2d24b91ea6d"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKr, eq0I; auto.",
                        "VernacExtend",
                        "472679539b5a364cbc28ccdbde1c240c6c936e95"
                    ]
                },
                {
                    "command": [
                        "intros HH1; case HH; rewrite (hom0E _ _ H1), HH1; auto.",
                        "VernacExtend",
                        "12373dbe21ad0497a8d221b7e037fc5d97542383"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; split.",
                        "VernacExtend",
                        "fcb333f5067fa5cc8b2c5a878cca072a3e03b466"
                    ]
                },
                {
                    "command": [
                        "apply fortho_add; try apply fortho_genk; auto.",
                        "VernacExtend",
                        "80d035279d5c07463cfc4b90e19557e68ee9e679"
                    ]
                },
                {
                    "command": [
                        "repeat apply fortho_scal; auto.",
                        "VernacExtend",
                        "79b4d702cf5e1d12a5728faeecdbfde226d5c212"
                    ]
                },
                {
                    "command": [
                        "apply forthok with 0%nat; auto.",
                        "VernacExtend",
                        "1f70ebd03d6d348ec09a4f0ac30c85a5b7fac3c2"
                    ]
                },
                {
                    "command": [
                        "repeat apply fortho_scal; auto.",
                        "VernacExtend",
                        "79b4d702cf5e1d12a5728faeecdbfde226d5c212"
                    ]
                },
                {
                    "command": [
                        "apply forthok with 0%nat; auto.",
                        "VernacExtend",
                        "1f70ebd03d6d348ec09a4f0ac30c85a5b7fac3c2"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto.",
                        "VernacExtend",
                        "ab7c838ddd716a3b14059f64c365105253349c54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_addmult",
            "line_nb": 1986,
            "steps": [
                {
                    "command": [
                        "intros Hk1 Hl; induction l as [| a l IH]; auto.",
                        "VernacExtend",
                        "8d51f2492d71523a7930357c4ae9d5bcf2755821"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l); intros Hll.",
                        "VernacExtend",
                        "c97b3fd20d54ebeb63cbff0a6e926b882c9a814e"
                    ]
                },
                {
                    "command": [
                        "subst; simpl; Vfold n.",
                        "VernacExtend",
                        "ebd42ba88cce268b70cc4ee363f470f7185a6447"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addr, !join_scalr, join_hom1_id; Grm0.",
                        "VernacExtend",
                        "33cd98c594bfecb82db4bb932955ca8a3ee11117"
                    ]
                },
                {
                    "command": [
                        "simpl map; rewrite !joinlS; auto; Vfold n.",
                        "VernacExtend",
                        "adf565cc97bd8c045175172eb34db06e825ee841"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!join_assoc, join_addr, !join_scalr, join_hom1_id; Grm0.",
                        "VernacExtend",
                        "14c603deab983ab47b874a6c3529bb2ab5a98835"
                    ]
                },
                {
                    "command": [
                        "rewrite (join_hom_com n 1 1 a x); auto with datatypes.",
                        "VernacExtend",
                        "fa909000ef9b82b37262f45251eb199afd64e881"
                    ]
                },
                {
                    "command": [
                        "rewrite !join_scall, !join_assoc, IH; auto with datatypes.",
                        "VernacExtend",
                        "e49c602a06a0432fbe39a2a60e0639d7a956983d"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto; intros HH; discriminate.",
                        "VernacExtend",
                        "8f35d781c957f8d90844529d6c4b195941451059"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_hom",
            "line_nb": 1997,
            "steps": [
                {
                    "command": [
                        "generalize k l2; clear k l2.",
                        "VernacExtend",
                        "47ce07ccc298ba17f7d27c8060ea0afad5735ba0"
                    ]
                },
                {
                    "command": [
                        "induction l1 as [| a l1 IH].",
                        "VernacExtend",
                        "951e2ee39885793c40e469f53833ac6a99958b97"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite mprod0l; apply homk0.",
                        "VernacExtend",
                        "4b26bc19f418e39c28b9b6088a4c1d83775e0a0e"
                    ]
                },
                {
                    "command": [
                        "intros k [| b l2] H; auto.",
                        "VernacExtend",
                        "758786f9f810038cc613e85ec3f4acb501eb185a"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0r; apply homk0.",
                        "VernacExtend",
                        "c6c9f8426d88f8600a6d8c9fbd7648b4f51a4ed4"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; auto with datatypes.",
                        "VernacExtend",
                        "fe5af4673ed2caf39d6a1154a229475a75426cb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_factor",
            "line_nb": 2007,
            "steps": [
                {
                    "command": [
                        "intros Hx Hhx (l, Hl) HxM.",
                        "VernacExtend",
                        "a46f880788fb450f3971fcc23261cd85445ef207"
                    ]
                },
                {
                    "command": [
                        "case (eqE_spec _ (fn n) M 0); intros HM.",
                        "VernacExtend",
                        "ef65cec28aee26fd8f01a04a21b688228ae34923"
                    ]
                },
                {
                    "command": [
                        "exists 0%f; exists (x::nil); split; Grm0.",
                        "VernacExtend",
                        "843855c1940565b4421ed22645a95302e208c145"
                    ]
                },
                {
                    "command": [
                        "simpl; intros v [Hv | []]; subst; auto.",
                        "VernacExtend",
                        "4ec3302301c185ca3b5c298c9114704cc20f7f37"
                    ]
                },
                {
                    "command": [
                        "assert (Hv: is_vector n x).",
                        "VernacExtend",
                        "6a6c7b64fe7aa80551d5583003d3ded45e252165"
                    ]
                },
                {
                    "command": [
                        "red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "048d09d46eadb61a93c4dc0b3684e613005ae8d7"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_cbl _ _ _ _ Hv Hl) in HxM; auto.",
                        "VernacExtend",
                        "350e74ff0117809fbb987240a66ffe067655c0b9"
                    ]
                },
                {
                    "command": [
                        "case cbl_mprod with (2 := HxM); auto.",
                        "VernacExtend",
                        "3571b8f2c3e5270f555bb3cfe7a9cc724b3b8647"
                    ]
                },
                {
                    "command": [
                        "intros ll (H1ll, H2ll); subst.",
                        "VernacExtend",
                        "b18ce44befa7ad3aa96a1157996454f083f1a4a9"
                    ]
                },
                {
                    "command": [
                        "case Hl; intros Hu1 HU2; subst.",
                        "VernacExtend",
                        "6886fa6fe3d846212700da5de9b3a64e080b017e"
                    ]
                },
                {
                    "command": [
                        "assert (Hu4: forall x, In x l -> hom n 1 x).",
                        "VernacExtend",
                        "a393b5d0a8ee896d947a661aa7f2e92fdfb4eb24"
                    ]
                },
                {
                    "command": [
                        "intros x H1x; rewrite <-cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "b685414fbb04a7ff7231ed5fb2fd6fcd1caeae83"
                    ]
                },
                {
                    "command": [
                        "apply Hu1; auto.",
                        "VernacExtend",
                        "0fecc98425fa7bd0a83fd3d92509915eda36930d"
                    ]
                },
                {
                    "command": [
                        "generalize l H1ll Hx Hu4; elim ll; clear ll l Hx Hhx H1ll HxM Hl Hv Hu1 Hu4 HM.",
                        "VernacExtend",
                        "4bdcd0ebf1697c5980482e52a37a916302d66cb5"
                    ]
                },
                {
                    "command": [
                        "intros l Hl HH; case HH; auto.",
                        "VernacExtend",
                        "fae467c69484587c0dd6c3d2119c3b19fe9dc0a8"
                    ]
                },
                {
                    "command": [
                        "intros a ll IH [|b l] Hl H1 H2; try discriminate.",
                        "VernacExtend",
                        "95e6a9d48088ba066bef771f10fdc4221ea67679"
                    ]
                },
                {
                    "command": [
                        "case (eqK_spec _ Hp a 0%f); intros H4; subst.",
                        "VernacExtend",
                        "06d4603b55c0dc88e3e51ccedbda246836f1c561"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; Grm0.",
                        "VernacExtend",
                        "c156241d6f1aa48e8047a0b201a67d15be06d54d"
                    ]
                },
                {
                    "command": [
                        "case (IH l); auto with datatypes.",
                        "VernacExtend",
                        "632be0dbbf1317ac6680c0261b65cb54e430f9e8"
                    ]
                },
                {
                    "command": [
                        "intros HH; case H1; rewrite mprod_S, HH; Grm0.",
                        "VernacExtend",
                        "249834f938bf4142d975117fc89c55623c17f433"
                    ]
                },
                {
                    "command": [
                        "rewrite (scalE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
                    ]
                },
                {
                    "command": [
                        "intros k (l1, (H1l1, H2l1)).",
                        "VernacExtend",
                        "931a857c9af09c94e30252e2698f10437b0997a6"
                    ]
                },
                {
                    "command": [
                        "exists k%f; exists ((-(1)).* b::l1); split.",
                        "VernacExtend",
                        "31a5d2cca8b6138b263757c388d95885c7f0d118"
                    ]
                },
                {
                    "command": [
                        "simpl; intros v [Hv|Hv]; subst; auto.",
                        "VernacExtend",
                        "6bb909edf457bdb5600ebcd2607de671b6153e2c"
                    ]
                },
                {
                    "command": [
                        "Vfold n; apply scal_hom; auto with datatypes.",
                        "VernacExtend",
                        "932f071b13857d329e3ce2a97a48c1bcbe9572e5"
                    ]
                },
                {
                    "command": [
                        "rewrite joinl_swap, joinlS, joinlS, H2l1.",
                        "VernacExtend",
                        "e62da56f1d03426db0a269fa9e8bd693884eb780"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, <-(scal_multE _ (fn n) (-(1))%f); auto.",
                        "VernacExtend",
                        "d9919e971057d24371f9a69095e6effc1d26d88c"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_m1_m1, scalE1, join_scalr; auto.",
                        "VernacExtend",
                        "8754c19785fb1e9d57aad3a769a8e0f16f434823"
                    ]
                },
                {
                    "command": [
                        "rewrite (scalE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (addE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "ba8f5fcc49a0f07c12bc57a7ab4e7a29feb36288"
                    ]
                },
                {
                    "command": [
                        "intros HH; discriminate.",
                        "VernacExtend",
                        "019b7bb062ac53f073aa541f566a6e53dbbec3d8"
                    ]
                },
                {
                    "command": [
                        "intros HH; subst; destruct ll; try discriminate.",
                        "VernacExtend",
                        "7581eb6a4df97db1e29cdc4312c332d01e58dff0"
                    ]
                },
                {
                    "command": [
                        "case H1; rewrite mprod_S; Grm0.",
                        "VernacExtend",
                        "679c8192073f4fbde575232f33f9ed8822b4274f"
                    ]
                },
                {
                    "command": [
                        "rewrite (scalE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
                    ]
                },
                {
                    "command": [
                        "apply cbl_trans with l; auto.",
                        "VernacExtend",
                        "3a6702b458cd882b4325185a31467109c618d0a8"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite cbl1_hom1_equiv; auto with datatypes.",
                        "VernacExtend",
                        "0bf93284ae99cea40f6f3589348235d4a9c9d47b"
                    ]
                },
                {
                    "command": [
                        "rewrite (scalE0l (vn_eparams n)); auto.",
                        "VernacExtend",
                        "88864d997747ee4fb9fab9d45a2f932f9d4734f1"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0l; auto.",
                        "VernacExtend",
                        "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
                    ]
                },
                {
                    "command": [
                        "apply mprod_cbl; auto.",
                        "VernacExtend",
                        "d42283c4e4e45a25ebe80c9a695dc9fec2bbe1c3"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal.",
                        "VernacExtend",
                        "b9dab6b9299440e8a6c3b8e2e143e1c66ec4e87a"
                    ]
                },
                {
                    "command": [
                        "rewrite cbl1_hom1_equiv; auto with datatypes.",
                        "VernacExtend",
                        "c4782c355fa726ee89a65489c35e32abb213b42e"
                    ]
                },
                {
                    "command": [
                        "exists (a^-1)%f; exists l; split; auto with datatypes.",
                        "VernacExtend",
                        "df5a031b99b053583b20d121417a8556750eab34"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l); intros Hll.",
                        "VernacExtend",
                        "c97b3fd20d54ebeb63cbff0a6e926b882c9a814e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hll; simpl; Vfold n; rewrite mprod_S, mprod0r; Grm0.",
                        "VernacExtend",
                        "eced86cd8263652366d8effc6843af5ac91c5c97"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_multE, invKr, scalE1; auto.",
                        "VernacExtend",
                        "afbcd124bed3462273a267dc886ed1a4b797bbf0"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S, !joinlS, join_addl, scal_addEr; auto.",
                        "VernacExtend",
                        "30ef9871d551de4cca4f22fc7dce86c497f0531f"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, <-scal_multE, invKr, scalE1; auto.",
                        "VernacExtend",
                        "1b9522a33799daaf8ac72765cae541665b7078ac"
                    ]
                },
                {
                    "command": [
                        "replace (ll *X* l \u2228 joinl n l) with (0: vect n); Grm0.",
                        "VernacExtend",
                        "1103ef0ee1ef315df5a5720189e2e95dc789c9bf"
                    ]
                },
                {
                    "command": [
                        "injection Hl.",
                        "VernacExtend",
                        "bcd300f0699f38e78ac75b99f25f9fe5732dd6fe"
                    ]
                },
                {
                    "command": [
                        "generalize ll H2; elim l; clear l ll IH Hl H1 H2 Hll.",
                        "VernacExtend",
                        "10c708b4dd4e8a682eb470c7d8f189af9887553c"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite mprod0r; Grm0.",
                        "VernacExtend",
                        "5642e31990a3e210c769d9e93e090a562a16198f"
                    ]
                },
                {
                    "command": [
                        "intros a1 l1 IH ll H1 H2.",
                        "VernacExtend",
                        "f1d12cb8843ddeae0ccad832a9d2c81e4cc35e48"
                    ]
                },
                {
                    "command": [
                        "destruct ll as [| b1 ll].",
                        "VernacExtend",
                        "cfc72cad453faad853e4ef9cab1f0cd25b358874"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0l; Grm0.",
                        "VernacExtend",
                        "78bf8d1be4add5e2946c2600e45e686fda51a38e"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l1); intros Hll1.",
                        "VernacExtend",
                        "3af51813c978e40e4c749406931c71e923863b35"
                    ]
                },
                {
                    "command": [
                        "rewrite Hll1; simpl; Vfold n; rewrite mprod_S, mprod0r; Grm0.",
                        "VernacExtend",
                        "9ab0d504739304eae89d8877fddccba215fc79ce"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, join_hom1_id; Grm0; auto with datatypes.",
                        "VernacExtend",
                        "6f5e929e0bdf1cadfa5831bb0fe20fcb31f2699f"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S, joinlS, join_addl; auto.",
                        "VernacExtend",
                        "8bda022d53f9f944e7c942b6a9c0976556452302"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, <-join_assoc, join_hom1_id; Grm0; auto with datatypes.",
                        "VernacExtend",
                        "e5ba2765818c104b820a74d47f525d3279c0b10d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- join_assoc.",
                        "VernacExtend",
                        "ccf531dab619f4ff4bbb589d099a6b6a50fc525c"
                    ]
                },
                {
                    "command": [
                        "rewrite (join_hom_com n 1 1 a1 (ll *X* l1)); auto with datatypes.",
                        "VernacExtend",
                        "59c3588d5220b4cfe450c85f348843802abc1604"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, join_assoc, <- IH; Grm0; auto.",
                        "VernacExtend",
                        "c405a9d198a5cd44c4ca60e879fba01d245f4b9a"
                    ]
                },
                {
                    "command": [
                        "simpl; intros x [Hx|Hx]; subst; auto with datatypes.",
                        "VernacExtend",
                        "ef8847c7938e2722bf389c803f286b6ae2012b9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomposable_factor",
            "line_nb": 2072,
            "steps": [
                {
                    "command": [
                        "intros Hx Hhx HhM HM HxM.",
                        "VernacExtend",
                        "74b20368f085b688d6c8338e84032b5a3beaf4b0"
                    ]
                },
                {
                    "command": [
                        "case (joinl_factor n x M); auto.",
                        "VernacExtend",
                        "e8f61181de3964cb2269b5a478c78f95bd56e66a"
                    ]
                },
                {
                    "command": [
                        "intros k1 (l, (H1l, H2l)); subst; red.",
                        "VernacExtend",
                        "f4bb3838c4277e3e989e93b4e99c9b6a249eb04b"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l); intros Hl.",
                        "VernacExtend",
                        "e4ec71c0e7429e1d8ca85a703fdc585b97077fb5"
                    ]
                },
                {
                    "command": [
                        "subst; simpl joinl.",
                        "VernacExtend",
                        "a629a8812712e173d3364c82a9f6bc7bc72ec3b8"
                    ]
                },
                {
                    "command": [
                        "rewrite factor_scal, factor_id; auto.",
                        "VernacExtend",
                        "61adbd5b999a12411dd6f139520a30a80414b99e"
                    ]
                },
                {
                    "command": [
                        "case (homE n 1 k.+2 (k1 .* x)); try (intros; discriminate); auto.",
                        "VernacExtend",
                        "cc34b1d1399fac0b2bfca77233bd0f3182e019bc"
                    ]
                },
                {
                    "command": [
                        "intros HH1; case (scalE_integral _ (fn n) _ _ HH1); intros HH2; subst; Grm0.",
                        "VernacExtend",
                        "e4bd72bf1e0a7514e92f4be8aef1034b34cc6853"
                    ]
                },
                {
                    "command": [
                        "exists (x::x::nil).",
                        "VernacExtend",
                        "573adc66d21a59ef947e59333fcfa954f5d86c03"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "simpl; intros x1 [H1| [H1 | H1]]; subst; red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "8d74794e9eb59ad608b6a8dec85a57f922ffa370"
                    ]
                },
                {
                    "command": [
                        "simpl joinl; rewrite join_hom1_id; auto.",
                        "VernacExtend",
                        "f1dd868c5377f3a119325499341557ce4347169a"
                    ]
                },
                {
                    "command": [
                        "case Hx; auto.",
                        "VernacExtend",
                        "77cb879aa4295ac85f27833660ac120655ac8d32"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS, factor_scal; auto.",
                        "VernacExtend",
                        "aa7b956de3a5ac661aa5e608faf69f47a69f10a8"
                    ]
                },
                {
                    "command": [
                        "rewrite (joinl_addmult n (fun x y => (-(1) * ((fget n x y)))%f)); auto.",
                        "VernacExtend",
                        "6e7d52f7e4a885f8805aaa530c9d4f1897fd06db"
                    ]
                },
                {
                    "command": [
                        "destruct l as [| a l].",
                        "VernacExtend",
                        "02c55f4298f2f8fae408fc375ff80e3a0fdba762"
                    ]
                },
                {
                    "command": [
                        "case Hl; auto.",
                        "VernacExtend",
                        "c732ab5c91b374e261a9f76ead20e226181ba696"
                    ]
                },
                {
                    "command": [
                        "exists (map (fun y : vn_eparams n => y + (- (1) * fget n x y)%f .* x) (k1 .* a::l)).",
                        "VernacExtend",
                        "72f8dcd3b17474f0f18be1e273906da4af079177"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "simpl map; intros x1; simpl In; Vfold n; intros [Hx1|Hx1]; auto with datatypes.",
                        "VernacExtend",
                        "7289c27b907178466d69941167a814d822374174"
                    ]
                },
                {
                    "command": [
                        "red; rewrite cbl1_hom1_equiv, <-Hx1, add_hom; auto with datatypes.",
                        "VernacExtend",
                        "e8bfab5fec9fd65ecedfb876a4ae2824e03a0877"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in Hx1; case Hx1; intros x2 ([], H2x2).",
                        "VernacExtend",
                        "2e76ddd90b9f1e1fb7f8ff1b481f296ba71381b0"
                    ]
                },
                {
                    "command": [
                        "red; rewrite cbl1_hom1_equiv, add_hom; auto with datatypes.",
                        "VernacExtend",
                        "2825926a4dcd4507a6adcb797196d70ee3c5ddcc"
                    ]
                },
                {
                    "command": [
                        "simpl map; Vfold n.",
                        "VernacExtend",
                        "8284f99d321898972c78322e7fa74dc19c6ee956"
                    ]
                },
                {
                    "command": [
                        "rewrite factor_ortho; auto.",
                        "VernacExtend",
                        "490b1850213896d13441e296bbea900ae960811d"
                    ]
                },
                {
                    "command": [
                        "rewrite <-joinl_scal, scal_addEr, scal_multE, scalE_swap, <-!scal_multE, fget_scal, multK_assoc; auto.",
                        "VernacExtend",
                        "8285aa6531dc9a04476235440797fcc666a44c57"
                    ]
                },
                {
                    "command": [
                        "apply fortho_joinl with 0%nat; auto.",
                        "VernacExtend",
                        "88cbc483ce8c6be4378b8fc5e3d3fc8dcb161839"
                    ]
                },
                {
                    "command": [
                        "intros v2 Hv2; case in_inv with (1 := Hv2).",
                        "VernacExtend",
                        "471ff9c561c1b79a3fae83fb382a6e9e5855dd9a"
                    ]
                },
                {
                    "command": [
                        "intros Hv3; subst.",
                        "VernacExtend",
                        "fc49627d331eb5f5b920672b5d5721343532796e"
                    ]
                },
                {
                    "command": [
                        "apply fortho_fget; auto with datatypes.",
                        "VernacExtend",
                        "911472eecd758e7599bdcba72dcf78a512d5b1eb"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff; intros (v3, ([], H2v3)).",
                        "VernacExtend",
                        "2f0dd282d4d9e638c838bb4f742297468eaec970"
                    ]
                },
                {
                    "command": [
                        "apply fortho_fget; auto with datatypes.",
                        "VernacExtend",
                        "911472eecd758e7599bdcba72dcf78a512d5b1eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_factor0",
            "line_nb": 2107,
            "steps": [
                {
                    "command": [
                        "generalize k; induction n as [| n IH]; simpl; auto; clear k.",
                        "VernacExtend",
                        "f339edd7a229f24b2882ac98d8851a7b43187810"
                    ]
                },
                {
                    "command": [
                        "intros k; case k; simpl; auto; intros n0; case eq0_spec; rewrite !IH; auto.",
                        "VernacExtend",
                        "bb6fe542c8b91acd785ef0490a6d54e56f807dea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_factor_hom",
            "line_nb": 2111,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [|k1][|k2]; auto with arith.",
                        "VernacExtend",
                        "87df35f84c92144948a49fe10fd3e1059bd8ecc6"
                    ]
                },
                {
                    "command": [
                        "intros _ H; rewrite H; case minus; auto.",
                        "VernacExtend",
                        "6d036b9396e20e27bd95727fccda89d2221bcb78"
                    ]
                },
                {
                    "command": [
                        "intros [| k1] [|k2] Heq; destruct x; rewrite andbP; intros (Ho1,Ho2); auto.",
                        "VernacExtend",
                        "108e1ef1b3b44ab3211beb259dd8fd29a23f7d17"
                    ]
                },
                {
                    "command": [
                        "contradict Heq; auto with arith.",
                        "VernacExtend",
                        "42eef592971257a272bb5d20f6f076ee20519e7a"
                    ]
                },
                {
                    "command": [
                        "contradict Heq; auto with arith.",
                        "VernacExtend",
                        "42eef592971257a272bb5d20f6f076ee20519e7a"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Ho1, Ho2; auto.",
                        "VernacExtend",
                        "1f8e0556ab1798d70a8c0645677606af4aa762f9"
                    ]
                },
                {
                    "command": [
                        "generalize (minus_match k2.+1 k1.+1); case_eq (k1.+1 - k2.+1)%nat.",
                        "VernacExtend",
                        "daeead425b7acae1429adaad64e0b22b430c1fd9"
                    ]
                },
                {
                    "command": [
                        "intros _ H1; contradict H1; auto with arith.",
                        "VernacExtend",
                        "f322ed28d412d200d6539e28ed3fb3bcf2e8cec2"
                    ]
                },
                {
                    "command": [
                        "intros n1 Hn1 _; rewrite <-Hn1.",
                        "VernacExtend",
                        "c65d7a26b8d499a733ee12c5fde61c87f7cf70bc"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros H1; try (case eq0_spec; intros H2).",
                        "VernacExtend",
                        "ef6ec960c5885067e7448d5dbd9dd5b4061930e8"
                    ]
                },
                {
                    "command": [
                        "rewrite homk0, IH; auto.",
                        "VernacExtend",
                        "d0983c2070297ec2412a42ab4194becd425bbb7f"
                    ]
                },
                {
                    "command": [
                        "rewrite homk0.",
                        "VernacExtend",
                        "34972b476a9545c686111c14683e73567122f2a4"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite IH; auto with arith.",
                        "VernacExtend",
                        "3f61c7c6558923a1b50aaa2c767d61d612e73eb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_factor_zero",
            "line_nb": 2129,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [|k1][|k2] Hk1k2; destruct x; auto; try (contradict Hk1k2; auto with arith; fail).",
                        "VernacExtend",
                        "60150c41b2341e6741b36e19424fe4b28acdbd25"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Ho1,Ho2); auto.",
                        "VernacExtend",
                        "054f879bae319a27c7f02e83834919c8a8cb4259"
                    ]
                },
                {
                    "command": [
                        "assert (Hl : k2 < k1) by auto with arith.",
                        "VernacExtend",
                        "dec5b40a2b5b1dbebe48157bd2b978082253fed7"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto.",
                        "VernacExtend",
                        "8047ccd08900b8ae8a4ef42ac6f6246fbd393936"
                    ]
                },
                {
                    "command": [
                        "intro Hv.",
                        "VernacExtend",
                        "686837315f0b20c3c97111172149e8d026f4c60e"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ _ Hl Ho1 Hv).",
                        "VernacExtend",
                        "f9564fde4cd3d526a0e141d797847b81f51f5c57"
                    ]
                },
                {
                    "command": [
                        "intros HH; injection HH; intros Hv0.",
                        "VernacExtend",
                        "ad5442e67ba6960ce4933bcfc7103c1bb053b311"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ _ Hk1k2 Ho2 Hv0); auto.",
                        "VernacExtend",
                        "99b4aa0d110d791cfb3e9d50f6bebf604b8e813c"
                    ]
                },
                {
                    "command": [
                        "intros HH1 HH2; case HH1; injection HH2; auto.",
                        "VernacExtend",
                        "bec6a449510f5c21ad2f744dde29f7d900ebf7ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_nil",
            "line_nb": 2144,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_cons",
            "line_nb": 2147,
            "steps": [
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_app",
            "line_nb": 2150,
            "steps": [
                {
                    "command": [
                        "generalize M; clear M.",
                        "VernacExtend",
                        "f7a0bf941831a5d73bc0603690f0c6751b3e51f6"
                    ]
                },
                {
                    "command": [
                        "induction l1 as [| l l1 IH]; simpl; intros; try rewrite IH; auto.",
                        "VernacExtend",
                        "61d27dcd22ec056de7177ed827c7f697ab9e1b5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra0",
            "line_nb": 2154,
            "steps": [
                {
                    "command": [
                        "induction lfs as [| lf lfs IH]; simpl; auto.",
                        "VernacExtend",
                        "874a28db8d70dae9957d74f1f837ec72dd289491"
                    ]
                },
                {
                    "command": [
                        "Vfold n; rewrite contra0r, IH; auto.",
                        "VernacExtend",
                        "aa631ee1b3537ced27b0ed385a29433fc0c8ff49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_id",
            "line_nb": 2159,
            "steps": [
                {
                    "command": [
                        "simpl; rewrite contra_id, mcontra0; auto.",
                        "VernacExtend",
                        "4e1a6ff17511fc673400153f702f96a3e561dbd7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontrak",
            "line_nb": 2162,
            "steps": [
                {
                    "command": [
                        "induction lfs as [| lf lfs IH]; simpl; intros HH.",
                        "VernacExtend",
                        "a0aec3b9921567c652f9350906a442597ae5786f"
                    ]
                },
                {
                    "command": [
                        "case HH; auto.",
                        "VernacExtend",
                        "fe7485a0a653e9dbacbc30551c98aaa9312d020e"
                    ]
                },
                {
                    "command": [
                        "destruct lfs as [|lf1 lfs].",
                        "VernacExtend",
                        "421dc7dfbc5e3781da6a864f524e09a35f0d8677"
                    ]
                },
                {
                    "command": [
                        "rewrite mcontra_nil, contrak; auto.",
                        "VernacExtend",
                        "1f5de852a077c78183157bedda0459d4754ccfc7"
                    ]
                },
                {
                    "command": [
                        "rewrite contrak, mcontra0; auto.",
                        "VernacExtend",
                        "009160578e86d04074e418248ca178823d5e9a7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_scal",
            "line_nb": 2169,
            "steps": [
                {
                    "command": [
                        "generalize x; clear x.",
                        "VernacExtend",
                        "3a730666dcffe77922ab24fe4249a5512fcfd603"
                    ]
                },
                {
                    "command": [
                        "induction lfs as [| lf lfs IH]; simpl; Vfold n; auto.",
                        "VernacExtend",
                        "6562b58c980e2c9302f14e9353a110f6e5acdbff"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite contra_scalr, IH; auto.",
                        "VernacExtend",
                        "8298dd74cdc59adc0068bce9e6eb06db571cbc8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_swap",
            "line_nb": 2174,
            "steps": [
                {
                    "command": [
                        "simpl; Vfold n; rewrite contra_swap, mcontra_scal; auto.",
                        "VernacExtend",
                        "bd0b55eab86dfe5a41a80598f83cf09693bd4072"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_add",
            "line_nb": 2177,
            "steps": [
                {
                    "command": [
                        "generalize x y; clear x y.",
                        "VernacExtend",
                        "e9120fc9f411f1db72bd9d9765d44085b1e61ad2"
                    ]
                },
                {
                    "command": [
                        "induction lfs as [| lf lfs IH]; simpl; intros; Vfold n; auto.",
                        "VernacExtend",
                        "814a62120c11ac84abe095e0c79a4c40d9ab7f08"
                    ]
                },
                {
                    "command": [
                        "rewrite contra_addr, IH; auto.",
                        "VernacExtend",
                        "405b7c52bb93d091e64072f013e608eb77034be5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_conj",
            "line_nb": 2182,
            "steps": [
                {
                    "command": [
                        "generalize b x; clear b x.",
                        "VernacExtend",
                        "571be90d0a9250838c6060daafc182bd789fc8e0"
                    ]
                },
                {
                    "command": [
                        "induction lfs as [| lf lfs IH]; simpl; Vfold n; intros b x; auto.",
                        "VernacExtend",
                        "6ec0ee829ec43faab644a919c6537735056211cd"
                    ]
                },
                {
                    "command": [
                        "rewrite contra_conj, IH.",
                        "VernacExtend",
                        "791204c51b5fa181faabb0355b7837067ba25492"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := conj n); auto.",
                        "VernacExtend",
                        "ff8fc0ba0863faa229e73927744d7bdcacf31ef1"
                    ]
                },
                {
                    "command": [
                        "clear IH; induction (length lfs) as [| m IH]; simpl; auto.",
                        "VernacExtend",
                        "155b292c6dd65b4c3aec35cdbf66109550741a2c"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_hom",
            "line_nb": 2190,
            "steps": [
                {
                    "command": [
                        "generalize k x; clear k x; induction l as [| a l IH]; intros k x Hx; simpl.",
                        "VernacExtend",
                        "f2b6e8a8a1ea8d45b7a1207705665e2ee40822d4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Minus.minus_n_O; auto.",
                        "VernacExtend",
                        "c4153b1fadf5a293ad43c9fc40cf7574ef99eece"
                    ]
                },
                {
                    "command": [
                        "destruct k as [| k]; simpl.",
                        "VernacExtend",
                        "b7afa9826f181fe6a346955baf43f315678e0671"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hx), contra_hom0; Grm0.",
                        "VernacExtend",
                        "5ee720b483babe066fd89d2ef16dbd9a96c12db1"
                    ]
                },
                {
                    "command": [
                        "apply IH; auto.",
                        "VernacExtend",
                        "ab7c838ddd716a3b14059f64c365105253349c54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_hom0",
            "line_nb": 2198,
            "steps": [
                {
                    "command": [
                        "intros H H1; rewrite (hom0E _ _ H1); apply mcontrak; auto.",
                        "VernacExtend",
                        "b530673825750127729f40ccbd504466ebc3e5a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_contra",
            "line_nb": 2202,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; Krm0; auto.",
                        "VernacExtend",
                        "bd025eaaaaefb3209e98cf89efcf177f0d803d61"
                    ]
                },
                {
                    "command": [
                        "destruct lf1; destruct x; Vfold n; Vrm0.",
                        "VernacExtend",
                        "4f60c9297be5edf48ae888ece313dc8bbf315f92"
                    ]
                },
                {
                    "command": [
                        "rewrite contra0r; Vrm0.",
                        "VernacExtend",
                        "e3e10dce0c36d4ae0a097cada71c534ffc6c7558"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_mcontra",
            "line_nb": 2207,
            "steps": [
                {
                    "command": [
                        "generalize x; clear x.",
                        "VernacExtend",
                        "3a730666dcffe77922ab24fe4249a5512fcfd603"
                    ]
                },
                {
                    "command": [
                        "induction lfs1 as [| lf lfs IH]; simpl; Vfold n; auto.",
                        "VernacExtend",
                        "dbf1d71dcae94c899365e8747527491f21a5d12d"
                    ]
                },
                {
                    "command": [
                        "intros x; simpl; Vfold n; Vrm0.",
                        "VernacExtend",
                        "218640f9a3486e4e37987cc2f4c98dd489eae203"
                    ]
                },
                {
                    "command": [
                        "rewrite contra0r; Vrm0.",
                        "VernacExtend",
                        "e3e10dce0c36d4ae0a097cada71c534ffc6c7558"
                    ]
                },
                {
                    "command": [
                        "apply (IH #<lf, x>#).",
                        "VernacExtend",
                        "b8ec7c4044e5b262f3e121736b32944fac9e9de1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mcontra_one_factor",
            "line_nb": 2214,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [| k1] k2 Hlt.",
                        "VernacExtend",
                        "5737502a93bfb7d59c32f3aa0a37aba0836c2490"
                    ]
                },
                {
                    "command": [
                        "contradict Hlt; auto with arith.",
                        "VernacExtend",
                        "1dfa734513aa66328d51922babf6ef152ada180f"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros Hx; subst; try (intros; discriminate).",
                        "VernacExtend",
                        "4cc2a02603402babbd2a6a46a3f7d609c39a10d1"
                    ]
                },
                {
                    "command": [
                        "exists (iter (cons tt) k2 nil); split; clear Hlt.",
                        "VernacExtend",
                        "0b11d98c6f57097f8690c486ab9017b29b6c8c0d"
                    ]
                },
                {
                    "command": [
                        "induction k2 as [| k2 IH1]; simpl; auto.",
                        "VernacExtend",
                        "70e65154ec2f399799ac2f18b2e4600c8cef7923"
                    ]
                },
                {
                    "command": [
                        "rewrite mcontra0; auto.",
                        "VernacExtend",
                        "84a0a327852d56ea6f9550e79e6ac10db67ccebd"
                    ]
                },
                {
                    "command": [
                        "intros [| k1] k2 Hlt; destruct x.",
                        "VernacExtend",
                        "18f94bf546de5032376db4a597c08bf9f603d167"
                    ]
                },
                {
                    "command": [
                        "contradict Hlt; auto with arith.",
                        "VernacExtend",
                        "1dfa734513aa66328d51922babf6ef152ada180f"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hx1, Hx2).",
                        "VernacExtend",
                        "590c0ec7507980da4f735be3b46bc51d734a1d91"
                    ]
                },
                {
                    "command": [
                        "destruct k2 as [| k2].",
                        "VernacExtend",
                        "f78b3f8cea2ddcf96d37431aad2fa72619f289f4"
                    ]
                },
                {
                    "command": [
                        "exists nil; auto.",
                        "VernacExtend",
                        "36de666f3ab1074837deacaf9a6d6f95221844b4"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros H1x2.",
                        "VernacExtend",
                        "f65e51321603863d359147158d290fee7afc3347"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ _ Hlt Hx2); intros lf1.",
                        "VernacExtend",
                        "b8504c4f7c1fc71d7f8923c7677c6f57ebb5fd78"
                    ]
                },
                {
                    "command": [
                        "intros (Hlf1, H1lf1).",
                        "VernacExtend",
                        "3b60e3ecc12cc0b743a320c9ec854527cca7f137"
                    ]
                },
                {
                    "command": [
                        "exists (map (liftk n) lf1); split; auto.",
                        "VernacExtend",
                        "28931bfe6226d9e21b82d3300bd9b435f479eb7d"
                    ]
                },
                {
                    "command": [
                        "rewrite map_length; auto.",
                        "VernacExtend",
                        "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
                    ]
                },
                {
                    "command": [
                        "rewrite one_factor_zero with (k1 := k1) (3 := H1x2); auto with arith.",
                        "VernacExtend",
                        "141ed8aaf2e407ce665dca52df4d8b648893da7e"
                    ]
                },
                {
                    "command": [
                        "generalize lift_mcontra; unfold lift; intros HH1; rewrite HH1, H1lf1; auto.",
                        "VernacExtend",
                        "05b82346dbe50e2af8470287cc051f6fccadae8e"
                    ]
                },
                {
                    "command": [
                        "case (IH _ _ _ (Lt.lt_S_n _ _ Hlt) Hx1).",
                        "VernacExtend",
                        "a6d705c8e57f79adeb45fc36d831072f333ddcd7"
                    ]
                },
                {
                    "command": [
                        "intros lfs1 (H1lfs1, H2lfs1).",
                        "VernacExtend",
                        "d033d55235783019d4a022865f2e79376f4e27e7"
                    ]
                },
                {
                    "command": [
                        "exists ((1%f, 0):: (map (liftk n) lfs1 : list (K * kn n))); simpl; Vfold n; split.",
                        "VernacExtend",
                        "65bcce0b00554e8d571b3ba1d240ac48be7ee4bd"
                    ]
                },
                {
                    "command": [
                        "rewrite map_length; auto.",
                        "VernacExtend",
                        "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !contra0l, scalE1; Vrm0.",
                        "VernacExtend",
                        "e57f924743fdbead4cabe60d2eac3a4847268aa2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2lfs1.",
                        "VernacExtend",
                        "7135bd5f5c5589caa02b8a79d83f6c2e9162305c"
                    ]
                },
                {
                    "command": [
                        "apply (lift_mcontra n); auto.",
                        "VernacExtend",
                        "1efee7d87f1d7b4cb980c4cdd63aabe1d2e9f427"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_cons",
            "line_nb": 2244,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; simpl; auto with arith; intros; constructor; auto with datatypes.",
                        "VernacExtend",
                        "f2e0600211b4e6792f3147ce2b5d91476d84a010"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "joinl_join",
            "line_nb": 2247,
            "steps": [
                {
                    "command": [
                        "intros Hv Hivl; rewrite <-joinlS.",
                        "VernacExtend",
                        "4aa73fa391cb16422fcca60f4862e6319a0a0d4b"
                    ]
                },
                {
                    "command": [
                        "apply (cbl_joinl0_mprod n); auto.",
                        "VernacExtend",
                        "b36ca7b7ec110a51fa955ab5faaf024a0489fccb"
                    ]
                },
                {
                    "command": [
                        "intros i Hi; red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "c0f5667c47df6ff2e2017bc8216cffc969dab65d"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "intros Hl; subst; case Hivl.",
                        "VernacExtend",
                        "fa59fde556eac4b2aa6b6042957224261567db9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_joinl",
            "line_nb": 2254,
            "steps": [
                {
                    "command": [
                        "induction l as [| a l IH]; auto.",
                        "VernacExtend",
                        "ddd99fe4e776e11baffb017fc5fa15a601ac76ab"
                    ]
                },
                {
                    "command": [
                        "intros HH; case HH; auto.",
                        "VernacExtend",
                        "a97474b3a6d037a220684ae5bfeedc33f9346833"
                    ]
                },
                {
                    "command": [
                        "intros _ H1.",
                        "VernacExtend",
                        "35faaf5b0ec5eee36aab652e327c0f08a2c68463"
                    ]
                },
                {
                    "command": [
                        "destruct l as [| b l].",
                        "VernacExtend",
                        "50f3a9287e168771b80c1151b2c08830b99bb376"
                    ]
                },
                {
                    "command": [
                        "simpl pred; rewrite joinl1; constructor; auto with datatypes.",
                        "VernacExtend",
                        "56a242f3b8147b2448203b701147ce8112dbd509"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS.",
                        "VernacExtend",
                        "ec6f99326808f9196c98c1c1ad79dfb80ef6d1cd"
                    ]
                },
                {
                    "command": [
                        "change (pred(length (a::b :: l))) with (1 + (pred (length (b :: l))))%nat.",
                        "VernacExtend",
                        "b1292634931a3c0c3b127cb6a9085909987af057"
                    ]
                },
                {
                    "command": [
                        "constructor; auto with datatypes.",
                        "VernacExtend",
                        "e0e3bc33ebd13f0a395d8591fc2c15599b8c0499"
                    ]
                },
                {
                    "command": [
                        "apply cbl_cons; apply IH; auto with datatypes.",
                        "VernacExtend",
                        "0169bd9fffdbc2a96a7871d3541e41ce0d3e556e"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_joinl0",
            "line_nb": 2266,
            "steps": [
                {
                    "command": [
                        "intros Hl HH; elim HH; clear x HH; auto.",
                        "VernacExtend",
                        "c98393d6aebea22efced426690e610868c3596cc"
                    ]
                },
                {
                    "command": [
                        "intros; apply joinl_join; auto.",
                        "VernacExtend",
                        "f46d536c2fefe19c1913745140142d15b71dc952"
                    ]
                },
                {
                    "command": [
                        "intros k1 x y Hx Hmx Hy Hmy.",
                        "VernacExtend",
                        "4d148f5b5590083d57bbdb96c6fa1db5a0991164"
                    ]
                },
                {
                    "command": [
                        "rewrite join_addl, Hmx, Hmy; Vrm0.",
                        "VernacExtend",
                        "f0158988080e7860159d5aa8171ba98dc6ae07ed"
                    ]
                },
                {
                    "command": [
                        "intros k1 k2 x Hx Hmx; rewrite join_scall, Hmx; Vrm0.",
                        "VernacExtend",
                        "689186a0bbb1e78af22fa10b17d33d078e0c971a"
                    ]
                },
                {
                    "command": [
                        "intros k1 v x Hl1 Hx Hmx.",
                        "VernacExtend",
                        "89a2a376417cd90dc0d8ee5886c4367af9807d15"
                    ]
                },
                {
                    "command": [
                        "rewrite join_assoc, Hmx; Grm0.",
                        "VernacExtend",
                        "492394dca4132659e4f787cb8c57d989f898c166"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_hom",
            "line_nb": 2275,
            "steps": [
                {
                    "command": [
                        "intros Hl HH; elim HH; clear x HH; auto.",
                        "VernacExtend",
                        "c98393d6aebea22efced426690e610868c3596cc"
                    ]
                },
                {
                    "command": [
                        "intros k1 v x Hv Hvc Hmx; apply (join_hom n 1 k1.+1); auto.",
                        "VernacExtend",
                        "528f997151e7edeec8490d5f26e68d42aea2baa7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_contra",
            "line_nb": 2279,
            "steps": [
                {
                    "command": [
                        "intros Hl; generalize k x; clear k x.",
                        "VernacExtend",
                        "69175172bb34a74e829178b4b51ccf877fc09692"
                    ]
                },
                {
                    "command": [
                        "assert (H: forall (k k1 : nat) (x : vect n), cbl n l k x -> k = k1.+1 -> cbl n l k1 #<lf, x >#).",
                        "VernacExtend",
                        "0564a5e1881fb33db8fb680eb246df2e5ef6a378"
                    ]
                },
                {
                    "command": [
                        "intros k k1 x HH; generalize k1; elim HH; clear x HH k; auto.",
                        "VernacExtend",
                        "85bdd351fb6caf239157f2919f6352708faa9f2b"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros k x y Hx IHx Hy IHy k2 Hk2; subst.",
                        "VernacExtend",
                        "5afebd686bed6f7e6bcc72515c02affa3c000b7f"
                    ]
                },
                {
                    "command": [
                        "rewrite contra_addr; apply cbl_add; auto.",
                        "VernacExtend",
                        "576a25591b0a55c446bb72fa53016a8f77261879"
                    ]
                },
                {
                    "command": [
                        "intros k k2 x Hx IHx k3 Hk3; subst.",
                        "VernacExtend",
                        "06b2b0dd14d778e0c7a99c2d28b306629995fbdb"
                    ]
                },
                {
                    "command": [
                        "rewrite contra_scalr; apply cbl_scal; auto.",
                        "VernacExtend",
                        "1891e690cddf9d283288704c51862682aee720c7"
                    ]
                },
                {
                    "command": [
                        "intros k v x Hv Hx IHx k2 HH; injection HH; intros HH1; subst.",
                        "VernacExtend",
                        "39b7b0635a4f764e7474b8fab3368a38b6668474"
                    ]
                },
                {
                    "command": [
                        "assert (Hm1: hom n 1 v) by auto.",
                        "VernacExtend",
                        "9c1bd441fc3b3aa7e2127cda63e9dc22575b5063"
                    ]
                },
                {
                    "command": [
                        "assert (Hmx: hom n k2.+1 x) by (apply cbl_hom with l; auto).",
                        "VernacExtend",
                        "015727e577b2116d9c799e2bf4a30578a26e157e"
                    ]
                },
                {
                    "command": [
                        "rewrite (contra_join n lf 1 k2.+1); auto.",
                        "VernacExtend",
                        "cdb364d2e997693e3313ec9b662ff16077596a59"
                    ]
                },
                {
                    "command": [
                        "apply cbl_add; auto.",
                        "VernacExtend",
                        "9df6b6a5fe172acffe669b4679999f527312c89c"
                    ]
                },
                {
                    "command": [
                        "rewrite contra_const, joinkl; auto.",
                        "VernacExtend",
                        "6a6c56ccc4206c673773d72536bf96f5b5a6bde4"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal; auto.",
                        "VernacExtend",
                        "51daf280d91a2a62f959c15ac782759afba31c8e"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall; apply cbl_scal; auto.",
                        "VernacExtend",
                        "7a2a3daf7c319792f30ea6285e1eed46836f7317"
                    ]
                },
                {
                    "command": [
                        "destruct k2 as [| k2].",
                        "VernacExtend",
                        "f78b3f8cea2ddcf96d37431aad2fa72619f289f4"
                    ]
                },
                {
                    "command": [
                        "rewrite contra_const, joinkr; auto.",
                        "VernacExtend",
                        "5669d163f142e0bac20b13e8b0940f881556b40e"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal; auto.",
                        "VernacExtend",
                        "51daf280d91a2a62f959c15ac782759afba31c8e"
                    ]
                },
                {
                    "command": [
                        "apply cbl_in; auto.",
                        "VernacExtend",
                        "6e75a9addbb8a44cb5f7a3086f16bc7355249828"
                    ]
                },
                {
                    "command": [
                        "apply cbl_join; auto.",
                        "VernacExtend",
                        "ced8af0107909bb02995c83b60d859f507081e87"
                    ]
                },
                {
                    "command": [
                        "intros k x HH; apply H with k.+1; auto.",
                        "VernacExtend",
                        "c1ca07c34aa4a9fa204d0e295784085be7b12931"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_mcontra",
            "line_nb": 2303,
            "steps": [
                {
                    "command": [
                        "intros Hk HH; generalize k x Hk; clear k x Hk.",
                        "VernacExtend",
                        "8e0468b9255bcecd09fb975397cb14c8fb0a30ed"
                    ]
                },
                {
                    "command": [
                        "induction lfs as [| lf lfs IH]; simpl; intros [| k] x Hk; try (contradict Hk; auto with arith; fail); simpl; auto.",
                        "VernacExtend",
                        "4073fa1001efb57ad12339ea6c1746f4dc5c7cc3"
                    ]
                },
                {
                    "command": [
                        "intros H1; apply IH; auto with arith.",
                        "VernacExtend",
                        "7032638ec718128386955cad6934b7c67dc23880"
                    ]
                },
                {
                    "command": [
                        "destruct k as [| k]; apply cbl_contra; auto.",
                        "VernacExtend",
                        "6494e315da855aa6683bea0b6ea8b5c01ca9f5c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomp_one_factor_hom",
            "line_nb": 2309,
            "steps": [
                {
                    "command": [
                        "intros Hd H.",
                        "VernacExtend",
                        "c0f2a1463c4ead65d0a6803e644bfd08a1381869"
                    ]
                },
                {
                    "command": [
                        "assert (Hhm:= decomp_hom n l M H).",
                        "VernacExtend",
                        "e8b07287b0614b51608e9c5ea909a50b3b4dd22f"
                    ]
                },
                {
                    "command": [
                        "case H; intros H1 H2; subst; clear H.",
                        "VernacExtend",
                        "6eb473af62248a5fc207e931f33b19396148ade9"
                    ]
                },
                {
                    "command": [
                        "assert (Hl: pred (length l) < length l).",
                        "VernacExtend",
                        "45f39cf2ed6989727f0bfe6fdcb7ea4317d19da5"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl; auto with arith; case Hd; auto.",
                        "VernacExtend",
                        "e9b6e5625f70174330a50372fca40e11b4388cf2"
                    ]
                },
                {
                    "command": [
                        "assert (Hh: forall x, In x l -> hom n 1 x).",
                        "VernacExtend",
                        "a24a8b658f5933cc7e8d2d20cfa5930b95c03978"
                    ]
                },
                {
                    "command": [
                        "intros a Ha; rewrite <- cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "518cac4b3365117434b13c38a4c8638c4c8dc7c8"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "case (mcontra_one_factor n (length l) (pred (length l)) (joinl n l)); auto.",
                        "VernacExtend",
                        "efaa5363e1c1c7e3f331a610846cf7ef64fe51b0"
                    ]
                },
                {
                    "command": [
                        "intros ll (H1ll,H2ll); rewrite <-H2ll.",
                        "VernacExtend",
                        "e2e6b46baf32b02f261cc52a0396bed3511652c1"
                    ]
                },
                {
                    "command": [
                        "replace 1%nat with (length l - length ll)%nat.",
                        "VernacExtend",
                        "b7f8ad5ad20af7b9612af16d6704c32310106b9b"
                    ]
                },
                {
                    "command": [
                        "apply mcontra_hom; auto.",
                        "VernacExtend",
                        "a692c1140fed2e38ca8d03b7597540e3bddf55e9"
                    ]
                },
                {
                    "command": [
                        "rewrite H1ll; destruct l; simpl length; auto with arith.",
                        "VernacExtend",
                        "65a9f6c6084372ecfc99b957ab0de465482b3cbf"
                    ]
                },
                {
                    "command": [
                        "intros; simpl length; simpl pred; rewrite <- Minus.minus_Sn_m, <-Minus.minus_n_n; auto.",
                        "VernacExtend",
                        "b624cb4c278d82617d23db91ca56921c1b733a5f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomp_one_factor0",
            "line_nb": 2325,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l); intros H; subst.",
                        "VernacExtend",
                        "da904442b84401b849f216cd91f2963415217517"
                    ]
                },
                {
                    "command": [
                        "case H1; simpl; auto.",
                        "VernacExtend",
                        "9312b079c2df269aa947353713ea4e6c687b6b27"
                    ]
                },
                {
                    "command": [
                        "apply one_factor_zero with (k1 := length l) (3 := H2); auto.",
                        "VernacExtend",
                        "23f8711eac26be15b2c16bcf8c42666e72c888e3"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl; auto with arith.",
                        "VernacExtend",
                        "6ea2d2a58a34887f0d2f09bd471546a695cc9e62"
                    ]
                },
                {
                    "command": [
                        "case H; auto.",
                        "VernacExtend",
                        "0b39ac03ea00c6d2293da9883a569db11f432ebd"
                    ]
                },
                {
                    "command": [
                        "apply decomp_hom; auto.",
                        "VernacExtend",
                        "c50c7e72fa8282f4ac83fa65d84fa72fcdab762d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomp_one_factor_join",
            "line_nb": 2334,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "case (list_case _ l); intros Hl; subst.",
                        "VernacExtend",
                        "55d33b7d292fa449f1b5a67f91597e789f4c66e8"
                    ]
                },
                {
                    "command": [
                        "case H; simpl; auto; intros _ H1; rewrite H1; Grm0.",
                        "VernacExtend",
                        "802b55bd87403665068a87dcc5f51322eab1f61a"
                    ]
                },
                {
                    "command": [
                        "assert (Hhm:= decomp_hom n l M H).",
                        "VernacExtend",
                        "e8b07287b0614b51608e9c5ea909a50b3b4dd22f"
                    ]
                },
                {
                    "command": [
                        "case H; intros H1 H2; subst; clear H.",
                        "VernacExtend",
                        "6eb473af62248a5fc207e931f33b19396148ade9"
                    ]
                },
                {
                    "command": [
                        "assert (Hl1: pred (length l) < length l).",
                        "VernacExtend",
                        "73666846388a8797d3115e35c16b78acc829b2b5"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl; auto with arith; case Hl; auto.",
                        "VernacExtend",
                        "1f0c04fc2adb9422e1d784c5e0da52ad0a9076dc"
                    ]
                },
                {
                    "command": [
                        "assert (Hh: forall x, In x l -> hom n 1 x).",
                        "VernacExtend",
                        "a24a8b658f5933cc7e8d2d20cfa5930b95c03978"
                    ]
                },
                {
                    "command": [
                        "intros a Ha; rewrite <- cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "518cac4b3365117434b13c38a4c8638c4c8dc7c8"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "apply cbl_joinl0 with (k := 0%nat); auto.",
                        "VernacExtend",
                        "cd50561ad91a5bc87fcb7548ac3a817b5866cc0e"
                    ]
                },
                {
                    "command": [
                        "case (mcontra_one_factor n (length l) (pred (length l)) (joinl n l)); auto.",
                        "VernacExtend",
                        "efaa5363e1c1c7e3f331a610846cf7ef64fe51b0"
                    ]
                },
                {
                    "command": [
                        "intros ll (H1ll,H2ll); rewrite <-H2ll.",
                        "VernacExtend",
                        "e2e6b46baf32b02f261cc52a0396bed3511652c1"
                    ]
                },
                {
                    "command": [
                        "replace 0%nat with (pred (length l) - length ll)%nat.",
                        "VernacExtend",
                        "b992297ecb15d6387801b61dfdce23954273a5ff"
                    ]
                },
                {
                    "command": [
                        "apply cbl_mcontra; try rewrite H1ll; auto with arith.",
                        "VernacExtend",
                        "95278dc0904058849fe5b4b78d6cd7f66e88035e"
                    ]
                },
                {
                    "command": [
                        "apply cbl_joinl; auto.",
                        "VernacExtend",
                        "55592cc3b29462c67a029bc3315d45c6af775023"
                    ]
                },
                {
                    "command": [
                        "rewrite H1ll; auto with arith.",
                        "VernacExtend",
                        "b4b64f8003a1367db15fed20282fd6c78dbd2bc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomposekSS",
            "line_nb": 2354,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomposek_cor",
            "line_nb": 2357,
            "steps": [
                {
                    "command": [
                        "generalize v; clear v.",
                        "VernacExtend",
                        "7154d586cc61707b200d8edfe2963fe763d28b39"
                    ]
                },
                {
                    "command": [
                        "induction k as [|k IH].",
                        "VernacExtend",
                        "8c2071e9fa78c8277f33fc000b6b093be4aa5b1b"
                    ]
                },
                {
                    "command": [
                        "intros v Hv (l, Hl) H1.",
                        "VernacExtend",
                        "aebbc658c9f65a9e39c8c362b720d51a74e5b2f9"
                    ]
                },
                {
                    "command": [
                        "case (homE n 0 (length l) v); auto.",
                        "VernacExtend",
                        "d6cf87318f58ba792bd4040e031eee00caae6d99"
                    ]
                },
                {
                    "command": [
                        "apply decomp_hom; auto.",
                        "VernacExtend",
                        "c50c7e72fa8282f4ac83fa65d84fa72fcdab762d"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl; auto; intros; discriminate.",
                        "VernacExtend",
                        "dc2c5e212b3e68499d2a4c4660cb750e01993799"
                    ]
                },
                {
                    "command": [
                        "intros; subst; split; auto.",
                        "VernacExtend",
                        "ff1c9f47e394f49f06851952f6b47418268f991b"
                    ]
                },
                {
                    "command": [
                        "intros i [].",
                        "VernacExtend",
                        "3d0b999a532a119b22d82394fb8f8af21aa21dd6"
                    ]
                },
                {
                    "command": [
                        "intros v Hv H1 H2; destruct k as [| k].",
                        "VernacExtend",
                        "acf0f53eb4c2c0e0592e82e0f2235fcd07fcc5e1"
                    ]
                },
                {
                    "command": [
                        "repeat split; try (intros; discriminate).",
                        "VernacExtend",
                        "85b276f56baecf1e8aaebc0c53e4e0998ff5ba96"
                    ]
                },
                {
                    "command": [
                        "simpl; intros x [[]|[]].",
                        "VernacExtend",
                        "5e6acfdb3b25bf313795f555992e014327ad19da"
                    ]
                },
                {
                    "command": [
                        "red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "048d09d46eadb61a93c4dc0b3684e613005ae8d7"
                    ]
                },
                {
                    "command": [
                        "case H1; intros l Hl.",
                        "VernacExtend",
                        "aeb1e4f15440bb432f547d5523e92f2247c20720"
                    ]
                },
                {
                    "command": [
                        "assert (F1: one_factor n k.+1 v \u2228 v = 0).",
                        "VernacExtend",
                        "f74090c5f6af8067d124b9c16f261c963acab823"
                    ]
                },
                {
                    "command": [
                        "replace k.+1 with (pred (length l)).",
                        "VernacExtend",
                        "10f517eb785ca48acf7e0af19646d844e81ef809"
                    ]
                },
                {
                    "command": [
                        "apply decomp_one_factor_join; auto.",
                        "VernacExtend",
                        "c64ab4496de8e6ecebb48c072948c38d4ab7bd9d"
                    ]
                },
                {
                    "command": [
                        "case (homE n (length l) k.+2 v); auto.",
                        "VernacExtend",
                        "4e84ee288c7801da4970a401dd125f8fb7cd6eab"
                    ]
                },
                {
                    "command": [
                        "apply decomp_hom; auto.",
                        "VernacExtend",
                        "c50c7e72fa8282f4ac83fa65d84fa72fcdab762d"
                    ]
                },
                {
                    "command": [
                        "intros HH1; rewrite HH1; auto.",
                        "VernacExtend",
                        "be4b019997c801636f8baf2e8f3cefd59aa780e7"
                    ]
                },
                {
                    "command": [
                        "intros HH1; case Hv; auto.",
                        "VernacExtend",
                        "dd541250591a0b1bf48c7eafd30b50dfcd235a20"
                    ]
                },
                {
                    "command": [
                        "assert (F2: hom n 1 (one_factor n k.+1 v)).",
                        "VernacExtend",
                        "761e56d27811c2aba6b6ced1c8aa431b27cfe4ce"
                    ]
                },
                {
                    "command": [
                        "replace 1%nat with (k.+2 - k.+1)%nat.",
                        "VernacExtend",
                        "aa586fecdbffc5dea04fffcf6d8c76a7a383027a"
                    ]
                },
                {
                    "command": [
                        "apply one_factor_hom; auto.",
                        "VernacExtend",
                        "d155cd3ed817887ba0a92e65652d367cd9158259"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Minus.minus_Sn_m, <-Minus.minus_n_n; auto with arith.",
                        "VernacExtend",
                        "52d258abefadaee4b82412931645125334dc1302"
                    ]
                },
                {
                    "command": [
                        "assert (F3: v = one_factor n k.+1 v \u2228 factor n (one_factor n k.+1 v) v).",
                        "VernacExtend",
                        "ddb4afdfa190fdc90c03288f1b335c8f4beec5f2"
                    ]
                },
                {
                    "command": [
                        "simpl; apply factor_factor; auto.",
                        "VernacExtend",
                        "11613e1a74053cb44fad547bfd2e0d895b32b7fb"
                    ]
                },
                {
                    "command": [
                        "intros HH; case Hv; apply (one_factor_zero n k.+2 k.+1); auto.",
                        "VernacExtend",
                        "6ccbd79fd75a9a8d2b5411146edf3a4448fc031a"
                    ]
                },
                {
                    "command": [
                        "case (IH (factor n (one_factor n k.+1 v) v)); auto.",
                        "VernacExtend",
                        "5cfed27cfa7a5f996daf4f2252f25dae267233b7"
                    ]
                },
                {
                    "command": [
                        "intros HH; case Hv; rewrite F3, HH; Grm0.",
                        "VernacExtend",
                        "776e5d7b68ae82660de03d42c6a33459494d1dcb"
                    ]
                },
                {
                    "command": [
                        "apply decomposable_factor with k; auto.",
                        "VernacExtend",
                        "1abf394bd229d7cf838f134b61dc6a3d62d9ca85"
                    ]
                },
                {
                    "command": [
                        "intros HH; case Hv; rewrite F3, HH; Grm0.",
                        "VernacExtend",
                        "776e5d7b68ae82660de03d42c6a33459494d1dcb"
                    ]
                },
                {
                    "command": [
                        "apply factor_hom; auto.",
                        "VernacExtend",
                        "69a3d15bfb9b2a70b1b082ed88e64822df3739da"
                    ]
                },
                {
                    "command": [
                        "intros HH; case Hv; rewrite F3, HH; Grm0.",
                        "VernacExtend",
                        "776e5d7b68ae82660de03d42c6a33459494d1dcb"
                    ]
                },
                {
                    "command": [
                        "intros Hr1 Hr2.",
                        "VernacExtend",
                        "45ff9a4fe309f815551e4de8e7d4525c44358314"
                    ]
                },
                {
                    "command": [
                        "repeat split; try (intros; discriminate).",
                        "VernacExtend",
                        "85b276f56baecf1e8aaebc0c53e4e0998ff5ba96"
                    ]
                },
                {
                    "command": [
                        "intros x Hx; case (in_inv Hx); intros H1x.",
                        "VernacExtend",
                        "a862165104f1db8c1e2137710abda8b7d96041c1"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H1x.",
                        "VernacExtend",
                        "eeae4a70ad6f686091d165015cfb4f051d7072cb"
                    ]
                },
                {
                    "command": [
                        "red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "048d09d46eadb61a93c4dc0b3684e613005ae8d7"
                    ]
                },
                {
                    "command": [
                        "apply Hr1; auto.",
                        "VernacExtend",
                        "835858fb05a51ab7d13b00a3fe9fb8a9debb27d9"
                    ]
                },
                {
                    "command": [
                        "rewrite decomposekSS, joinlS, <-Hr2; auto.",
                        "VernacExtend",
                        "b0f1914c140830d0d54811237e80959d01153aff"
                    ]
                },
                {
                    "command": [
                        "destruct k; simpl; intros; discriminate.",
                        "VernacExtend",
                        "1c5bff5015cdb31aa6b5348dce4e3162ca2823f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_hom1_cor",
            "line_nb": 2401,
            "steps": [
                {
                    "command": [
                        "unfold all_hom1.",
                        "VernacExtend",
                        "a936f428c8226e1ebdc096f4cf36b3cffbd3cf38"
                    ]
                },
                {
                    "command": [
                        "assert (F1: forall b, if fold_left (fun c x => c && hom n 1 x) l b then b /\\ forall i : vect n, In i l -> hom n 1 i else ~b \\/ exists i, In i l /\\ ~ hom n 1 i).",
                        "VernacExtend",
                        "909f4ee159529182aa1e52fd81ca76d7445441f7"
                    ]
                },
                {
                    "command": [
                        "induction l as [| a l IH]; simpl.",
                        "VernacExtend",
                        "ad9248baa3562e8a34c1c9bc4a7a557478b8712d"
                    ]
                },
                {
                    "command": [
                        "intros []; auto.",
                        "VernacExtend",
                        "538859518958c62815d503605e1de1531db219d1"
                    ]
                },
                {
                    "command": [
                        "split; auto; intros i [].",
                        "VernacExtend",
                        "055af7d5c5323a211ece2449084f3d95862269ba"
                    ]
                },
                {
                    "command": [
                        "left; intros; discriminate.",
                        "VernacExtend",
                        "a1948b3e36862409284bc78095f7779402ae7b9e"
                    ]
                },
                {
                    "command": [
                        "intros b; generalize (IH (b && hom n 1 a)).",
                        "VernacExtend",
                        "875c8feec9760d50a1de08200a53b03f3539b164"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context[fold_left ?X ?Y ?Z] => case (fold_left X Y Z); auto end; rewrite andbP.",
                        "VernacExtend",
                        "7ec16281011db5159dc53f17457bccc77d3ec960"
                    ]
                },
                {
                    "command": [
                        "intros ((H1,H2),H3); split; auto.",
                        "VernacExtend",
                        "4f96b64d65ed18d1d7dd90df429a78ad8bbc4c04"
                    ]
                },
                {
                    "command": [
                        "intros i [[]|Hi]; auto.",
                        "VernacExtend",
                        "57361e0e88e8b09382406afba40898a0f80cbd00"
                    ]
                },
                {
                    "command": [
                        "intros [H1 | H1].",
                        "VernacExtend",
                        "e39bf3bab67e37614d01e5b5569f2d4d21689dab"
                    ]
                },
                {
                    "command": [
                        "case_eq (hom n 1 a); intros Ha.",
                        "VernacExtend",
                        "13779f54c4e826c00a7ce765a4ef8cd0b6bdc434"
                    ]
                },
                {
                    "command": [
                        "left; intros Hb; case H1; auto.",
                        "VernacExtend",
                        "6af383b6d8b4e7e3d45a3b4cda6f3919a01690e8"
                    ]
                },
                {
                    "command": [
                        "right; exists a; split; auto; rewrite Ha.",
                        "VernacExtend",
                        "0d9336f8367744bd70c33a224dc6beae8a880d7a"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "case H1; intros i [H1i H2i]; right; exists i; split; auto.",
                        "VernacExtend",
                        "88f742eabac8e9a1846be21d65c936adabcde221"
                    ]
                },
                {
                    "command": [
                        "generalize (F1 true).",
                        "VernacExtend",
                        "b679490e4ef62e86b72944199c8dde42c8317715"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context[fold_left ?X ?Y ?Z] => case (fold_left X Y Z); auto end.",
                        "VernacExtend",
                        "5ed0d5411f3e4a93a287356c2f473ce22346b7f8"
                    ]
                },
                {
                    "command": [
                        "intros []; auto.",
                        "VernacExtend",
                        "538859518958c62815d503605e1de1531db219d1"
                    ]
                },
                {
                    "command": [
                        "intros []; auto.",
                        "VernacExtend",
                        "538859518958c62815d503605e1de1531db219d1"
                    ]
                },
                {
                    "command": [
                        "contradict H; auto.",
                        "VernacExtend",
                        "037d4dd3b85775222270487870d4cbd60bd4b5db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decompose_cor",
            "line_nb": 2425,
            "steps": [
                {
                    "command": [
                        "unfold decompose.",
                        "VernacExtend",
                        "2db95cf2d92879209f3c332b6ab96b25ac4fda5f"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context[all_hom1 ?X ?Y] => generalize (all_hom1_cor X Y); case (all_hom1 X Y); intros Hi end.",
                        "VernacExtend",
                        "93b8131b775947b9c91b53bedc55de0dbe16d9e4"
                    ]
                },
                {
                    "command": [
                        "case eqE_spec; auto.",
                        "VernacExtend",
                        "d61f998cbd7c675779995cbcf52f8e307eeb976d"
                    ]
                },
                {
                    "command": [
                        "intros HH.",
                        "VernacExtend",
                        "daa602a370c4d11204fd21ce1a41f0d6a3bc1507"
                    ]
                },
                {
                    "command": [
                        "case (eqE_spec _ (fn n) v 0); intros Hv.",
                        "VernacExtend",
                        "37044eb0db0c260d93776bda144b326cd2b98153"
                    ]
                },
                {
                    "command": [
                        "rewrite Hv, first_deg0; simpl; split; auto.",
                        "VernacExtend",
                        "a8f25f567cab6d8df9d920dfbc262c55ed99d180"
                    ]
                },
                {
                    "command": [
                        "intros i [].",
                        "VernacExtend",
                        "3d0b999a532a119b22d82394fb8f8af21aa21dd6"
                    ]
                },
                {
                    "command": [
                        "apply decomposek_cor; auto.",
                        "VernacExtend",
                        "fa1ad0871176e729aa5239203dd5a26f6fa07161"
                    ]
                },
                {
                    "command": [
                        "exists (decomposek n (first_deg n v) v).",
                        "VernacExtend",
                        "31f6618be7efcca27bc4ede0f5a2bfc58e0dae36"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros i H1i; red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "0887d0d97da7903cda0aa333cdc8e296887c0a16"
                    ]
                },
                {
                    "command": [
                        "assert (F1: hom n (length (decomposek n (first_deg n v) v)) v).",
                        "VernacExtend",
                        "cc2fb14cb7773c05196597f66d903da7c56c0343"
                    ]
                },
                {
                    "command": [
                        "rewrite HH at 3; apply (joinl_hom1 n); auto.",
                        "VernacExtend",
                        "0286332fdfb9ed09547cab43844c78afdcfe29b2"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_first_deg with (k := length (decomposek n (first_deg n v) v)); auto.",
                        "VernacExtend",
                        "4da159c6b37510cd2d2129daf3ccbc20a1a9a8ca"
                    ]
                },
                {
                    "command": [
                        "intros H1 HH.",
                        "VernacExtend",
                        "f3f9abeb64f96ce0742a0874cd3ec860fefee8de"
                    ]
                },
                {
                    "command": [
                        "case HH; intros l Hl.",
                        "VernacExtend",
                        "dc3cda473c250f428c0e39998924092a3e30e8c6"
                    ]
                },
                {
                    "command": [
                        "assert (F1: v <> 0).",
                        "VernacExtend",
                        "2e0b69a7e284a8a155426826298bdae38c4f545a"
                    ]
                },
                {
                    "command": [
                        "intros H2; case H1.",
                        "VernacExtend",
                        "acefc933644f33cf01a1b9e5c1cb8f12aaba0e3c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 at 2; rewrite first_deg0; auto.",
                        "VernacExtend",
                        "b2cc6587742f4829cb85246383e0ec4f33a12415"
                    ]
                },
                {
                    "command": [
                        "assert (F2: hom n (length l) v).",
                        "VernacExtend",
                        "4f0b86367d8fe91ad7c24d378ff7602d0e316610"
                    ]
                },
                {
                    "command": [
                        "case Hl; intros H2 H3; rewrite H3.",
                        "VernacExtend",
                        "87043f7b1aa42264c3088d4dd388c68e44a0e10f"
                    ]
                },
                {
                    "command": [
                        "apply (joinl_hom1 n); auto.",
                        "VernacExtend",
                        "03d96ceb2c4566c3d2a1e98212ea5dcdafb1872f"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite <-cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "da620ed35a72b0607d22af473d09707452d571fd"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "case (decomposek_cor n (length l) v); auto.",
                        "VernacExtend",
                        "c5d3e28581449e6eded11f9ba8099289c5d7a36b"
                    ]
                },
                {
                    "command": [
                        "intros; case H1; auto.",
                        "VernacExtend",
                        "a49f162b59bd639316484ecda38f9c175c794d6d"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_first_deg with (k := length l); auto.",
                        "VernacExtend",
                        "5254f35374c215cf5532b3f5da80ac1a99c9a69e"
                    ]
                },
                {
                    "command": [
                        "intros H1; case H1; intros l Hl.",
                        "VernacExtend",
                        "7d86c89ea3437f1e75428a9596905fa1d1afe684"
                    ]
                },
                {
                    "command": [
                        "assert (F1: v <> 0).",
                        "VernacExtend",
                        "2e0b69a7e284a8a155426826298bdae38c4f545a"
                    ]
                },
                {
                    "command": [
                        "intros H2; case Hi; intros i.",
                        "VernacExtend",
                        "1f5ddba53d4ea3b1df53cf77d8c38834eb31e491"
                    ]
                },
                {
                    "command": [
                        "subst; rewrite first_deg0; intros [[] _].",
                        "VernacExtend",
                        "378370a2f236fbeeffdbd2f0eb59557d8f1bbdd1"
                    ]
                },
                {
                    "command": [
                        "assert (F2: hom n (length l) v).",
                        "VernacExtend",
                        "4f0b86367d8fe91ad7c24d378ff7602d0e316610"
                    ]
                },
                {
                    "command": [
                        "case Hl; intros H2 H3; rewrite H3.",
                        "VernacExtend",
                        "87043f7b1aa42264c3088d4dd388c68e44a0e10f"
                    ]
                },
                {
                    "command": [
                        "apply (joinl_hom1 n); auto.",
                        "VernacExtend",
                        "03d96ceb2c4566c3d2a1e98212ea5dcdafb1872f"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite <-cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "da620ed35a72b0607d22af473d09707452d571fd"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "case (decomposek_cor n (length l) v); auto.",
                        "VernacExtend",
                        "c5d3e28581449e6eded11f9ba8099289c5d7a36b"
                    ]
                },
                {
                    "command": [
                        "intros H2.",
                        "VernacExtend",
                        "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
                    ]
                },
                {
                    "command": [
                        "case Hi; intros i [H1i []].",
                        "VernacExtend",
                        "625e2d8df654172450e1997af5adc151f4c0e060"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "4c03f60857967909d6bfb391b94e0deb1094f4d8"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(hom_first_deg n (length l) v); auto.",
                        "VernacExtend",
                        "a09fd43b3a5dbc9e546ee36a29445fc0dbb50bf7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gradeE",
            "line_nb": 2470,
            "steps": [
                {
                    "command": [
                        "unfold grade.",
                        "VernacExtend",
                        "bd3249237c63f46e1563ee2e2b2b6c03b74d0be6"
                    ]
                },
                {
                    "command": [
                        "generalize (decompose_cor n x); case decompose; rewrite andb_comm; simpl; auto.",
                        "VernacExtend",
                        "0256a561e0cc296be15e0b970723c9d46718676b"
                    ]
                },
                {
                    "command": [
                        "intros l (H1,H2); subst.",
                        "VernacExtend",
                        "13ed90ddfd44995a2d5efc87dd5ca187930a4d38"
                    ]
                },
                {
                    "command": [
                        "assert (H4: forall x : vect n, In x l -> hom n 1 x).",
                        "VernacExtend",
                        "3746f8929f04fcc1fec284bd6cf3ec3b083d2767"
                    ]
                },
                {
                    "command": [
                        "intros x H4; rewrite <-cbl1_hom1_equiv; apply H1; auto.",
                        "VernacExtend",
                        "cbfcb8abc90e843b41828bd2d0ec700bc342d512"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros H3; split; auto.",
                        "VernacExtend",
                        "826f757b3ef27046ec74deb2c65aaee652e82aa0"
                    ]
                },
                {
                    "command": [
                        "exists l; split; auto.",
                        "VernacExtend",
                        "27d0fc1f2b695a2b1390f3d8ee70e8452c1c5d07"
                    ]
                },
                {
                    "command": [
                        "intros (HH,_); auto.",
                        "VernacExtend",
                        "71ff34878f4f6afccaeabdf0dc662ab2af9238b2"
                    ]
                },
                {
                    "command": [
                        "intros HH; split.",
                        "VernacExtend",
                        "2af1f46c9c28e2751806bd6aad905fc2fef7f6c7"
                    ]
                },
                {
                    "command": [
                        "intros HH1; discriminate.",
                        "VernacExtend",
                        "65311935b0db7af24bd8a6743739cf6663c9c8c9"
                    ]
                },
                {
                    "command": [
                        "intros (H1, (l, (H1l,H2l))).",
                        "VernacExtend",
                        "bc408d772dd0b861da9b952451dcb048c89bcee1"
                    ]
                },
                {
                    "command": [
                        "case HH.",
                        "VernacExtend",
                        "10f8923150a39982e0546045f9f1c8ce57c69692"
                    ]
                },
                {
                    "command": [
                        "exists l; split; auto.",
                        "VernacExtend",
                        "27d0fc1f2b695a2b1390f3d8ee70e8452c1c5d07"
                    ]
                },
                {
                    "command": [
                        "intros u Hu; red; rewrite cbl1_hom1_equiv; auto.",
                        "VernacExtend",
                        "459a973abff71925b3f8d0dd6e6fcdd1284338f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grade0",
            "line_nb": 2487,
            "steps": [
                {
                    "command": [
                        "unfold grade; rewrite homk0.",
                        "VernacExtend",
                        "4addca4202ba026abf4d4e9810b6768edcf67692"
                    ]
                },
                {
                    "command": [
                        "generalize (decompose_cor n 0); case decompose; auto.",
                        "VernacExtend",
                        "c2d571007d1c1d8ae1aa26526de71fa21196196e"
                    ]
                },
                {
                    "command": [
                        "intros []; exists nil; split; auto.",
                        "VernacExtend",
                        "2c964408d5c4922770bde1de8b7d66fde416e883"
                    ]
                },
                {
                    "command": [
                        "intros x1 [].",
                        "VernacExtend",
                        "83e953f2a5e76b69f65a08576aba014fe153535f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grade0E",
            "line_nb": 2493,
            "steps": [
                {
                    "command": [
                        "rewrite gradeE.",
                        "VernacExtend",
                        "b75c3340ccf576e8bb833179f3c97627eeeaa961"
                    ]
                },
                {
                    "command": [
                        "intros (Hx, (l, (H1l, H2l))); subst.",
                        "VernacExtend",
                        "88de1bc53105ec85605e82cec2d72a6a7930d707"
                    ]
                },
                {
                    "command": [
                        "destruct l as [|y l]; auto.",
                        "VernacExtend",
                        "8565928d0a8618c8c0552872202a4f288b8ce7b5"
                    ]
                },
                {
                    "command": [
                        "case (homE n (length (y::l)) 0 (joinl n (y::l))); auto.",
                        "VernacExtend",
                        "b883117d08a8fe8b583ca8882bfc4214f426eee3"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grade_hom",
            "line_nb": 2500,
            "steps": [
                {
                    "command": [
                        "unfold grade; rewrite andbP; intros (H,_); auto.",
                        "VernacExtend",
                        "dd998a7abdf19c84bfdc8f4739f8c13481ffbd8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grade1_hom",
            "line_nb": 2503,
            "steps": [
                {
                    "command": [
                        "unfold grade.",
                        "VernacExtend",
                        "bd3249237c63f46e1563ee2e2b2b6c03b74d0be6"
                    ]
                },
                {
                    "command": [
                        "case_eq (hom n 1 x); auto.",
                        "VernacExtend",
                        "37dbe2ac9e7dd4e530cef4b297ea72d1942e960e"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "generalize (decompose_cor n x); case decompose; auto.",
                        "VernacExtend",
                        "a06fb87bead2aa27c26e9b67f0b533a360978845"
                    ]
                },
                {
                    "command": [
                        "intros []; exists (x::nil); split; auto.",
                        "VernacExtend",
                        "03dfd8b31a9051ef73dcc81799b26fc9d8b96bc0"
                    ]
                },
                {
                    "command": [
                        "intros x1; simpl; intros [[]|[]].",
                        "VernacExtend",
                        "1677509b96f7b22f95d57bc5fb253c4e2da6480e"
                    ]
                },
                {
                    "command": [
                        "red; rewrite cbl1_hom1_equiv, H; auto.",
                        "VernacExtend",
                        "adf3d114a62daf44a060fd6e171f515cc5dd1c1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grade_scal",
            "line_nb": 2512,
            "steps": [
                {
                    "command": [
                        "rewrite !gradeE; intros (Hx, (l, (H1l, H2l))).",
                        "VernacExtend",
                        "b93a6b84a2d75436c40971e96d232259b21da1d2"
                    ]
                },
                {
                    "command": [
                        "destruct l as [| y l].",
                        "VernacExtend",
                        "a7829247f3daa12b4632d29d19e6512c55d7f820"
                    ]
                },
                {
                    "command": [
                        "rewrite H1l; simpl joinl; rewrite scalE0r, <-gradeE, grade0; auto.",
                        "VernacExtend",
                        "ba983b7789bd1d17e1dbb4baaaa7a6a6c68fc4b0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists (k2 .* y :: l); repeat split; auto.",
                        "VernacExtend",
                        "fe7a18237c792d34fac2c6727595eb8062b703a2"
                    ]
                },
                {
                    "command": [
                        "rewrite H1l; destruct l as [|z l]; auto.",
                        "VernacExtend",
                        "238f5d927460bf7d2584973951aa4eec91d0ad06"
                    ]
                },
                {
                    "command": [
                        "rewrite joinlS; try (intros HH; discriminate).",
                        "VernacExtend",
                        "f264631e6538b3c9188dd647161d054783d6a9d3"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite joinlS; try (intros HH; discriminate).",
                        "VernacExtend",
                        "87cf9d8abdeb3188e30204caec82243db7aafff1"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall; auto.",
                        "VernacExtend",
                        "76a57b8048633f86c466c85377da44f8ce84c4bc"
                    ]
                },
                {
                    "command": [
                        "simpl; intros z [[] | Hz]; auto with datatypes.",
                        "VernacExtend",
                        "e125831950e7ba9dd4856e5dc935638276e86926"
                    ]
                },
                {
                    "command": [
                        "apply scal_hom; auto with datatypes.",
                        "VernacExtend",
                        "19da174ce5f8a0ada2d85860f89f26df6b908164"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "grade_join",
            "line_nb": 2525,
            "steps": [
                {
                    "command": [
                        "rewrite !gradeE.",
                        "VernacExtend",
                        "9d79d290cb9a41b0230ced13f27071e0e442260a"
                    ]
                },
                {
                    "command": [
                        "intros (Hx, (l1, (H1l1, H2l1))) (Hy, (l2, (H1l2, H2l2))).",
                        "VernacExtend",
                        "dbffc301c85111e420524c0734dd5481cb852e4d"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "destruct l1 as [|x1 l1].",
                        "VernacExtend",
                        "626b6b721a93ac04462f10c5e68a4ba12c138af0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1l1; simpl joinl; exists nil; split; Grm0.",
                        "VernacExtend",
                        "ad03a1dfce68e7cd3e5f6b634dc11e410a80feba"
                    ]
                },
                {
                    "command": [
                        "destruct l2 as [|x2 l2].",
                        "VernacExtend",
                        "cca72d89cdeed7e16edefd12cbb9c1e75a1a9c39"
                    ]
                },
                {
                    "command": [
                        "rewrite H1l2; simpl joinl; exists nil; split; Grm0.",
                        "VernacExtend",
                        "905c5aa51f490c91bba804c7082aa204c60711b5"
                    ]
                },
                {
                    "command": [
                        "exists ((x1::l1) ++ (x2::l2)); repeat split.",
                        "VernacExtend",
                        "eb4ed166a88e8ec18ea0a187a3065c26fc75a65c"
                    ]
                },
                {
                    "command": [
                        "rewrite H1l1, H1l2, joinl_app; auto; intros; discriminate.",
                        "VernacExtend",
                        "a38f4bd5d6ea9d0de359a8ec36e539736bd9e0d4"
                    ]
                },
                {
                    "command": [
                        "intros z Hz; case (in_app_or _ _ _ Hz); intros H1; auto.",
                        "VernacExtend",
                        "edaba9c2da2cef9a3aa5c445ad1e6cf1853c928f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual0",
            "line_nb": 2539,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl dual; auto.",
                        "VernacExtend",
                        "5007fcbc095d4d01a5ec642b3b573bfa05b6ed08"
                    ]
                },
                {
                    "command": [
                        "Vfold n; rewrite conj0,!IH; auto.",
                        "VernacExtend",
                        "f5033f9d8ee44fcd40233c33eff2657d5ea01271"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual0E",
            "line_nb": 2544,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x1 x2]; intros HH; injection HH; intros H1 H2.",
                        "VernacExtend",
                        "b8eec07632f5a93445a7e657d3f7b9dd3d505aa9"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(conj_invo n false x2), (IH _ H1), (IH _ H2), conj0; auto.",
                        "VernacExtend",
                        "381bebc6f29f2cd30364262df17f42dd8be45191"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_scal",
            "line_nb": 2574,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "destruct v; rewrite !conj_scal,!IH; auto.",
                        "VernacExtend",
                        "1c8c01646318060e19f716a47ec8d098e03758af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_add",
            "line_nb": 2578,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "231340d188253115ac2907908891f8cfb8b3cc3f"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2; rewrite !conj_add, !IH; auto.",
                        "VernacExtend",
                        "f1252fdfd6071def1fb3c91f4bc66fad0644e1e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_invoE",
            "line_nb": 2605,
            "steps": [
                {
                    "command": [
                        "intros H; rewrite (dual_invo _ _ _ H), <-scal_multE, expK2m1, scalE1; auto.",
                        "VernacExtend",
                        "f57f9b146062319b6d5c87ff9200e94bee8a66d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_all",
            "line_nb": 2608,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, conj0, dual0; auto.",
                        "VernacExtend",
                        "d1834fed695d043cfa0371eb5ee41d2a3475de89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual1",
            "line_nb": 2612,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm1.",
                        "VernacExtend",
                        "ec6de54d1f0b751e765ca379efc49adadce713ec"
                    ]
                },
                {
                    "command": [
                        "assert (F1: hom n 0 1) by apply hom0K.",
                        "VernacExtend",
                        "78e1ac1a148121abd7ced216f545dc0f1dbe5034"
                    ]
                },
                {
                    "command": [
                        "assert (F2: hom n n '@1).",
                        "VernacExtend",
                        "253e2005943f845672b3c3645f0d293ac220bac2"
                    ]
                },
                {
                    "command": [
                        "generalize (dual_hom _ _ _ F1); rewrite <-Minus.minus_n_O; auto.",
                        "VernacExtend",
                        "53dc5920b76c3166baf8a2657b4de6a9cfd97723"
                    ]
                },
                {
                    "command": [
                        "rewrite (conjf_hom _ _ _ F1), dual_scal, IH, scalE1, dual0; auto.",
                        "VernacExtend",
                        "f7cc4a9ab9d3272027e9132d7c787a3bc7563a29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homn_ex",
            "line_nb": 2619,
            "steps": [
                {
                    "command": [
                        "rewrite <-cblk_homk_equiv.",
                        "VernacExtend",
                        "b79a8cbc3a60aa9ed50fdc0facbbe1302b21e84b"
                    ]
                },
                {
                    "command": [
                        "intros HH; elim HH; clear v HH.",
                        "VernacExtend",
                        "c83161491de54c09a0fa2d675cd54adc4d4fc12c"
                    ]
                },
                {
                    "command": [
                        "exists 0%f; rewrite dual0; auto.",
                        "VernacExtend",
                        "8f5391b51c057f1e813c2428d0d44baa22b3ef07"
                    ]
                },
                {
                    "command": [
                        "intros v Hv; exists 1%f.",
                        "VernacExtend",
                        "28307f184844dcda2fa8597a44e4387118d3c307"
                    ]
                },
                {
                    "command": [
                        "rewrite base_n in Hv; simpl in Hv; case Hv; auto; intros [].",
                        "VernacExtend",
                        "342327d39e3aaac4a1a42973ded3b599b8279c52"
                    ]
                },
                {
                    "command": [
                        "rewrite dual1; auto.",
                        "VernacExtend",
                        "ff03dd27b2199555b4cac05519b17172ead3d89c"
                    ]
                },
                {
                    "command": [
                        "intros x y _ [k1 Hk1] _ [k2 Hk2]; exists (k1 + k2)%f; subst.",
                        "VernacExtend",
                        "dd9fee544fe6eba74c8c702b07b4a835b9d7068e"
                    ]
                },
                {
                    "command": [
                        "rewrite <-dual_add, addk; auto.",
                        "VernacExtend",
                        "8cef82c31e74ba1e896f7a5d659feb48c8897b93"
                    ]
                },
                {
                    "command": [
                        "intros k1 x _ [k2 Hk2]; exists (k1 * k2)%f; subst.",
                        "VernacExtend",
                        "fb657fd0b6d4e69d24696bba1273f8d3c16c2ba5"
                    ]
                },
                {
                    "command": [
                        "rewrite <-dual_scal, scalk; auto.",
                        "VernacExtend",
                        "77daef83a2b22019131e788233d455eed240846d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj0",
            "line_nb": 2687,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; Krm0.",
                        "VernacExtend",
                        "b60ca58859de5c8f5a9ca42518d3649bd8e06e72"
                    ]
                },
                {
                    "command": [
                        "intros []; rewrite !IH; auto.",
                        "VernacExtend",
                        "f9c3110bb1e89cebb49ccb0a53f6aabbf35e2127"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_all",
            "line_nb": 2694,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros []; Krm1.",
                        "VernacExtend",
                        "f399ffff3a2c03d9704d990c257cf96f91657c33"
                    ]
                },
                {
                    "command": [
                        "intros []; rewrite !IH; Grm0.",
                        "VernacExtend",
                        "702a1aa58c0eed053006f92f15e9a307bb33c854"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_scal",
            "line_nb": 2700,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl;auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; auto; intros; rewrite opp_multKr; auto.",
                        "VernacExtend",
                        "c633efa354028507f57ac3a61e6e75730f2697a4"
                    ]
                },
                {
                    "command": [
                        "intros b; destruct x; Vfold n; rewrite !IH; auto.",
                        "VernacExtend",
                        "3035a10d9ff338f9279a629ae240bc1a44e76510"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_add",
            "line_nb": 2706,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros b; case b; auto; rewrite opp_addK; auto.",
                        "VernacExtend",
                        "1cc0a76dfb53788e042c4f07c670e451d21a69a1"
                    ]
                },
                {
                    "command": [
                        "intros b; destruct x; destruct y; simpl in IH; rewrite IH, IH; auto.",
                        "VernacExtend",
                        "9a4a05337f1ed3da2ffe2c6f9391709879024702"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_invo",
            "line_nb": 2712,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; auto; rewrite opp_oppK; auto.",
                        "VernacExtend",
                        "9e9ec5d34ac010b0ec8fbf7f96676d020090150a"
                    ]
                },
                {
                    "command": [
                        "intros b; destruct v; rewrite !IH; auto.",
                        "VernacExtend",
                        "79168efd7a2e59fdd220aa2ea0f5ff0ced42d947"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_neg",
            "line_nb": 2718,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH];simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; simpl; Krm1.",
                        "VernacExtend",
                        "06b00da05b707cbb126cec41a09c70dbd0ed8344"
                    ]
                },
                {
                    "command": [
                        "intros b; destruct v; Vfold n.",
                        "VernacExtend",
                        "cdeea14397c113997740f02dec2651dceda0e69c"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_involutive, !IH, <-scal_multE; Krm1; rewrite scalE1; auto.",
                        "VernacExtend",
                        "18814a6e76b5559aaeb399c6faf4e66a17e01fca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjt",
            "line_nb": 2725,
            "steps": [
                {
                    "command": [
                        "rewrite <-dconj_neg; auto.",
                        "VernacExtend",
                        "4fc95d6af245bf627aeb858cf3091449c54704c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjf_hom",
            "line_nb": 2728,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH];simpl; auto; try Vfold n.",
                        "VernacExtend",
                        "7efaff752baab79f444e82b84f10b85f0d7d9670"
                    ]
                },
                {
                    "command": [
                        "intros [|k] H; simpl; Krm1.",
                        "VernacExtend",
                        "72b86465ff5179faf1cc8f0943d0adb3bca61159"
                    ]
                },
                {
                    "command": [
                        "generalize H; case eqK_spec; intros; subst; Grm0; discriminate.",
                        "VernacExtend",
                        "4b85b4b871e42e4e2899dea6956c82ff78dcf9ab"
                    ]
                },
                {
                    "command": [
                        "intros [| k]; destruct M; rewrite andbP; intros (HM1, HM2); rewrite dconjt; simpl; Vfold n; Krm1.",
                        "VernacExtend",
                        "58e6daf8a19044a12e066207cca0be93a36a42ad"
                    ]
                },
                {
                    "command": [
                        "generalize HM1; case eq0_spec; try (intros; discriminate); auto.",
                        "VernacExtend",
                        "f410750ffeb8f9c3b706bf61b3ffa9979e7b28a7"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1, (IH _ _ HM2); simpl; Vfold n; Krm1.",
                        "VernacExtend",
                        "fcaf3fe8a4f7d6dc586c474d28b06fd817bec417"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj0, Plus.plus_0_r, <-scal_multE; Krm1; Vrm0.",
                        "VernacExtend",
                        "db7fd877670cc883833bff80659ade71fd801291"
                    ]
                },
                {
                    "command": [
                        "rewrite IH with (1 := HM1),IH with (1 := HM2); auto.",
                        "VernacExtend",
                        "dc5b055d870560170b9d6abe86ef8265d417147a"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_multE, <-plus_n_Sm; simpl expK; Krm1.",
                        "VernacExtend",
                        "9c89b12212ab0d9e9911b0e70cea491188c6d13c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjt_hom",
            "line_nb": 2740,
            "steps": [
                {
                    "command": [
                        "intros H1; rewrite dconjt, (dconjf_hom _ _ _ H1).",
                        "VernacExtend",
                        "755ee61386809df0a2d929e041d69b40b2d6c246"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_multE; auto.",
                        "VernacExtend",
                        "8dee18ce230227296c8b83b16b05c23a1d570a78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_swap",
            "line_nb": 2744,
            "steps": [
                {
                    "command": [
                        "generalize b1 b2; clear b1 b2.",
                        "VernacExtend",
                        "88027411ae3ef28fcfa0650b614a7877f57c1cc9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [] []; auto.",
                        "VernacExtend",
                        "a2d9d18d82086827bcc63ee7b6c5a82ab4889f2b"
                    ]
                },
                {
                    "command": [
                        "intros b1 b2; destruct x.",
                        "VernacExtend",
                        "7feb91fbe33b5231fc3f247923507b288061b386"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ b2), (IH _ (negb b1)); auto.",
                        "VernacExtend",
                        "2e3f8e791b56b339eb6c2a4d17cf6431011699d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_conj_swap",
            "line_nb": 2751,
            "steps": [
                {
                    "command": [
                        "generalize b1 b2; clear b1 b2.",
                        "VernacExtend",
                        "88027411ae3ef28fcfa0650b614a7877f57c1cc9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros [] []; auto.",
                        "VernacExtend",
                        "a2d9d18d82086827bcc63ee7b6c5a82ab4889f2b"
                    ]
                },
                {
                    "command": [
                        "intros b1 b2; destruct x.",
                        "VernacExtend",
                        "7feb91fbe33b5231fc3f247923507b288061b386"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ b1), (IH _ (negb b1)); auto.",
                        "VernacExtend",
                        "6e70185f7f9442fc5346e875d0a0969b0c7bd126"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_conj",
            "line_nb": 2758,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; Krm1.",
                        "VernacExtend",
                        "f399ffff3a2c03d9704d990c257cf96f91657c33"
                    ]
                },
                {
                    "command": [
                        "intros []; destruct x; simpl; Vfold n; rewrite conjt, dconjt, dconj_scal, !IH, <-!scal_multE; auto.",
                        "VernacExtend",
                        "28c343677a41eaf31993d66976ce62dc117aa5dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_hom",
            "line_nb": 2764,
            "steps": [
                {
                    "command": [
                        "generalize b k; clear b k.",
                        "VernacExtend",
                        "4efa106ee9807e78293dcda639d7278b02fda912"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl.",
                        "VernacExtend",
                        "8c23fa5b7ce9e699ad3e5498e8951bec062870aa"
                    ]
                },
                {
                    "command": [
                        "intros [|] [|k]; auto.",
                        "VernacExtend",
                        "aadc30ced7744766ea503ec1c78edc98157515a2"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros HH HH1; try discriminate.",
                        "VernacExtend",
                        "70261e64d6157d748f36571ca413cadf5ba6afe7"
                    ]
                },
                {
                    "command": [
                        "rewrite HH, oppK0, eqKI; auto.",
                        "VernacExtend",
                        "f255b7316e050842ad17712da6832c89ea37e8f3"
                    ]
                },
                {
                    "command": [
                        "intros b [|k]; destruct x; rewrite !andbP; intros (H1, H2); split; auto.",
                        "VernacExtend",
                        "4a74c0b0eb146a7169f7cde1775455aca5cf895e"
                    ]
                },
                {
                    "command": [
                        "generalize H1; case eq0_spec; intros Hx1 HH; try discriminate.",
                        "VernacExtend",
                        "65b65c297fb4d405d71336285a0ddf1cc47101e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hx1, dconj0, eq0I; auto.",
                        "VernacExtend",
                        "106bdab49442ec0dbf05ae203e8ff6a6269eae4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjf_joinl",
            "line_nb": 2775,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; simpl; Vfold n.",
                        "VernacExtend",
                        "96b5f6c92db7f7142a28e3bdbdebddb453acecc6"
                    ]
                },
                {
                    "command": [
                        "rewrite !dconjt, IH.",
                        "VernacExtend",
                        "dcd837484a27f95decd7fa789b5ed5a062a9382e"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_add, !IH, !conjt, join_scall.",
                        "VernacExtend",
                        "aceb1c3291a13dbc0953f05603b8f5e06229fd85"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := addE (vn_eparams n)); auto.",
                        "VernacExtend",
                        "2671e9ffc991101e359db7b0b4188f1fb52621c4"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_scal, !join_scall, !join_scalr, <-scal_multE; Krm1.",
                        "VernacExtend",
                        "cbad184ca41e18e968d87527697ae0dbb07df31d"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_conj_swap, scalE1; auto.",
                        "VernacExtend",
                        "eb0d0267ead12b7b5ae8a075974e329d53ffb151"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjf_joinr",
            "line_nb": 2785,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "simpl vect.",
                        "VernacExtend",
                        "e78019abba5ddf7a11569f02c9f3fff5ceb1a84b"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; simpl; Vfold n.",
                        "VernacExtend",
                        "96b5f6c92db7f7142a28e3bdbdebddb453acecc6"
                    ]
                },
                {
                    "command": [
                        "rewrite !dconjt, IH.",
                        "VernacExtend",
                        "dcd837484a27f95decd7fa789b5ed5a062a9382e"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_add, !IH, !conjt.",
                        "VernacExtend",
                        "c4b0065397daecb0307e015258c2b5716fb7a49c"
                    ]
                },
                {
                    "command": [
                        "rewrite !join_scall, !join_scalr, <-scal_multE; Krm1.",
                        "VernacExtend",
                        "7bedd8314866bdd26e05af771218d2ffab23ac9b"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE1; auto.",
                        "VernacExtend",
                        "9a3c36c1cf219db115984967e7e814298c7116fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_dual",
            "line_nb": 2794,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "simpl; intros b; destruct x; rewrite !IH.",
                        "VernacExtend",
                        "f6fe228620f584c4c9690d17ff845e38226b8631"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_swap; auto.",
                        "VernacExtend",
                        "b1b473720e6aa57296cec38b79244c9e7173b811"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_dual",
            "line_nb": 2800,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "simpl; intros []; destruct x; rewrite !IH, !conj_dual, IH, dconj_conj_swap; auto.",
                        "VernacExtend",
                        "c26a8dd01396bcfc0cc8f6694d8c4bca2196c4b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dualk",
            "line_nb": 2805,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1r; auto.",
                        "VernacExtend",
                        "ddcd31ad3ffd2585cd03973ebad819543275235c"
                    ]
                },
                {
                    "command": [
                        "Vfold n.",
                        "VernacExtend",
                        "1069bda287f933d6fc9c51bd34434bf13a87bc77"
                    ]
                },
                {
                    "command": [
                        "rewrite dual0, scalE0r; auto.",
                        "VernacExtend",
                        "8a86cd1f80e7442e2e123be639f4e9d58c543a01"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_dual, IH, dconj_scal, dconj_all; auto.",
                        "VernacExtend",
                        "b0209e8f591eca3a965a944014d9e9d2b21b3b96"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjk",
            "line_nb": 2814,
            "steps": [
                {
                    "command": [
                        "case b; auto.",
                        "VernacExtend",
                        "175dbdf4bf0d5db0b31517a4878e3baa74cf0ba0"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjt_hom with (k := 0%nat), Plus.plus_0_r, scalk; auto.",
                        "VernacExtend",
                        "bd53ba4d1a9eee5740017843ddbe8768ca9ab026"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_hom with (k := 0%nat), Plus.plus_0_r, scalk; auto.",
                        "VernacExtend",
                        "0fbdb02044e4d14fd2b3b7534dc07ba20e7bffe9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_const",
            "line_nb": 2819,
            "steps": [
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros []; Krm1.",
                        "VernacExtend",
                        "f399ffff3a2c03d9704d990c257cf96f91657c33"
                    ]
                },
                {
                    "command": [
                        "intros []; destruct x; simpl negb; rewrite IH; Krm1.",
                        "VernacExtend",
                        "7914478224159691dbd083ae48f8afe1b99fa89e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conj_dconst",
            "line_nb": 2825,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite conj_dual, dconj_const; auto.",
                        "VernacExtend",
                        "6b811ec992cb205edb339ea039efcea5971e37b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconj_dconst",
            "line_nb": 2828,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite dconj_dual, conj_const; auto.",
                        "VernacExtend",
                        "6b8d101a230dc7f1920e0c87edce1583669e15d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projn",
            "line_nb": 2831,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite IH, proj_lt; auto.",
                        "VernacExtend",
                        "f6e4d1dc4ce3b27e274fa6f51b1d844701678aed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst_all",
            "line_nb": 2835,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite dual_all, constk; auto.",
                        "VernacExtend",
                        "3f7a08cf3b43238fa7d8aee7887c651986ffc9a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst0",
            "line_nb": 2838,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite dual0, const0; auto.",
                        "VernacExtend",
                        "9df3795885f0a9e02cae00442c3b1aae6e4eb146"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst_scal",
            "line_nb": 2842,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite dual_scal, const_scal; auto.",
                        "VernacExtend",
                        "9203d57473034d1ef9b9915aa7b671d9e4ed8ec9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst_add",
            "line_nb": 2845,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite dual_add, const_add; auto.",
                        "VernacExtend",
                        "d0b0bf258df9b6e63c4240175fde6bcec21d06b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst_hom",
            "line_nb": 2848,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_or_lt n k); intros H3.",
                        "VernacExtend",
                        "66c60f7ef0be34365289276aab8eaf8bb8ee960d"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_lt_or_eq _ _ H3); intros H4; auto.",
                        "VernacExtend",
                        "716472e6d80a4da655d5cfd65beedd70470abfc3"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_lt with (2 := H1), dconst0; auto.",
                        "VernacExtend",
                        "1f35927258335b203c1ce57aea97c8bf3b5cd5cd"
                    ]
                },
                {
                    "command": [
                        "case H2; auto.",
                        "VernacExtend",
                        "877506702eca45f9d52e339649864010a8b18e82"
                    ]
                },
                {
                    "command": [
                        "unfold dconst; apply const_hom with (k := (n - k)%nat).",
                        "VernacExtend",
                        "88839747b914fae0b6828a3a4d2e9b3741f1ce70"
                    ]
                },
                {
                    "command": [
                        "apply dual_hom; auto.",
                        "VernacExtend",
                        "0818c58e97efb145055a095848230be569118a19"
                    ]
                },
                {
                    "command": [
                        "apply Plus.plus_lt_reg_l with k.",
                        "VernacExtend",
                        "742b84a12e9ceb1497b55a94b62ca950ebd1faf0"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_0_r, <-Minus.le_plus_minus; auto with arith.",
                        "VernacExtend",
                        "087692336a0430e8f2767610979cd947325b6fef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homn_all",
            "line_nb": 2859,
            "steps": [
                {
                    "command": [
                        "unfold dconst.",
                        "VernacExtend",
                        "5d808f7fde6689fd12c52df27736e75c3d455c2b"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; try Vfold n; Krm1.",
                        "VernacExtend",
                        "95100957927516d23fa3c43337014599b7796b94"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite andbP; intros (Hx1,Hx2).",
                        "VernacExtend",
                        "9e06274e32d02b1f63a5015dcce2824e7b87d3a4"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(IH _ Hx1); Grm0.",
                        "VernacExtend",
                        "356fe645cdc405233e99120768c81f607ad5f8fe"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_lt with (2 := Hx2); Grm0.",
                        "VernacExtend",
                        "98f30bce1f4fcc86835f70fabb09192d1e9e2fb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const_dual",
            "line_nb": 2866,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst_dual",
            "line_nb": 2869,
            "steps": [
                {
                    "command": [
                        "unfold dconst; induction n as [|n IH]; simpl; auto; Vfold n.",
                        "VernacExtend",
                        "586eb8a5a31897be77dac60f67c68ecd8155d768"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite IH, conj_const; auto.",
                        "VernacExtend",
                        "7aedccef388ca1881477063a9e87f5d7d430de76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet0l",
            "line_nb": 2875,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; Krm0.",
                        "VernacExtend",
                        "833aac3f1d7a6d64b6c136c14b612277f63eee4a"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite !IH; Vrm0.",
                        "VernacExtend",
                        "88f8117d0ebc0b0a6510bc5306bf302ab99c7ff5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet0r",
            "line_nb": 2880,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; Krm0.",
                        "VernacExtend",
                        "833aac3f1d7a6d64b6c136c14b612277f63eee4a"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite dconj0, !IH; Vrm0.",
                        "VernacExtend",
                        "5ba9a1c877e7e0118d2b06d315cd486310096a1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet1l",
            "line_nb": 2885,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; Krm1.",
                        "VernacExtend",
                        "95100957927516d23fa3c43337014599b7796b94"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "rewrite !meet0l, addE0l, IH,dconj_dual, conj_const; auto.",
                        "VernacExtend",
                        "0a1b00cf75fe14a17b7c11ad7d3f1cedf0f93184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet1r",
            "line_nb": 2890,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n; Krm1.",
                        "VernacExtend",
                        "95100957927516d23fa3c43337014599b7796b94"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "rewrite !meet0r, dconj0, IH, meet0r, addE0r; auto.",
                        "VernacExtend",
                        "e2a6c642554a69f6e233d262c3756509135c0124"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_scall",
            "line_nb": 2895,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n;auto.",
                        "VernacExtend",
                        "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc; auto.",
                        "VernacExtend",
                        "1e01c3798fbff41d31371f5829c46e5bdb5edfe0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y.",
                        "VernacExtend",
                        "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_addEr, !IH; auto.",
                        "VernacExtend",
                        "90c854169a12a7d176eb47ce6d6b8f26e9776cca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_scalr",
            "line_nb": 2901,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n;auto.",
                        "VernacExtend",
                        "9eab12762bcfeb3c9b74fb8c0462f32f4eade833"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!multK_assoc, (multK_com _ Hp x); auto.",
                        "VernacExtend",
                        "d232e3d771fabc9b81de39169a01fcac4be6493f"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y.",
                        "VernacExtend",
                        "66b6bbed80f19a7ddf75313e3d1e4cc780d5f91f"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_scal, scal_addEr, !IH; auto.",
                        "VernacExtend",
                        "e385f45642c53706b84b29e7299ea44d8e1ede25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet0",
            "line_nb": 2907,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meetS",
            "line_nb": 2910,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_meet",
            "line_nb": 2913,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2; rewrite meetS.",
                        "VernacExtend",
                        "74e289a1d8bf2374d55f2b437ea77c0225c8c755"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n.",
                        "VernacExtend",
                        "b9f9449f47b4fc50318b4052e4f924187e72923e"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, conj_add, dual_add.",
                        "VernacExtend",
                        "444e9ccd3c77ba64959f1431c68657b64cfdcb26"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto; apply f_equal2 with (f := @addE (vn_eparams n)); auto.",
                        "VernacExtend",
                        "06453d1887481785317702a50216334a167454fb"
                    ]
                },
                {
                    "command": [
                        "rewrite !conj_dual, IH, dconj_dual, dconjf_joinl, conj_invo; auto.",
                        "VernacExtend",
                        "a56d88160a66620b0b1290e6fdc0a7a35a09af77"
                    ]
                },
                {
                    "command": [
                        "rewrite !conj_dual, IH, dconjf_joinr; auto.",
                        "VernacExtend",
                        "258e5e069d8343c50b7d5d9849844fef85df337e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjf_meetl",
            "line_nb": 2923,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; rewrite !meetS.",
                        "VernacExtend",
                        "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
                    ]
                },
                {
                    "command": [
                        "simpl dconj; simpl conj; Vfold n; rewrite !conjt, meetS, !IH, meet_scall.",
                        "VernacExtend",
                        "d3a59d55e8a5516865fb21e45f43da1e2699210c"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_add, !IH.",
                        "VernacExtend",
                        "42ad4a732e4b60afd828f5209aa8f7a01b661650"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := addE (vn_eparams n)); auto.",
                        "VernacExtend",
                        "2671e9ffc991101e359db7b0b4188f1fb52621c4"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjt, meet_scalr, meet_scall, <-scal_multE; Krm1.",
                        "VernacExtend",
                        "7b4ef71a3ff85cb8b719e0df2a87c8caa5718ea6"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE1; auto.",
                        "VernacExtend",
                        "9a3c36c1cf219db115984967e7e814298c7116fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjf_meetr",
            "line_nb": 2933,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; rewrite !meetS.",
                        "VernacExtend",
                        "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
                    ]
                },
                {
                    "command": [
                        "simpl dconj; simpl conj; Vfold n; rewrite !conjt, meetS, !IH, meet_scalr.",
                        "VernacExtend",
                        "ae84cffc523406b37dd3cb1481371aeb6f77d173"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_add, !IH; apply f_equal2 with (f := addE (vn_eparams n)); auto.",
                        "VernacExtend",
                        "7f12e918f6467864ad041ce44996753c8d4fde66"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjt, dconj_scal, meet_scalr, meet_scall, <-scal_multE; Krm1.",
                        "VernacExtend",
                        "147a70da4c740305d728988735c492d9a17e173c"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE1, dconj_conj_swap; auto.",
                        "VernacExtend",
                        "19ac07c0f7ee732b90a6ded6a6e24f1e5e0d04ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjf_meet",
            "line_nb": 2942,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; rewrite !meetS.",
                        "VernacExtend",
                        "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
                    ]
                },
                {
                    "command": [
                        "simpl dconj; rewrite meetS, !IH, !dconj_invo; Vfold n.",
                        "VernacExtend",
                        "4f740f21e541898dfa0e34f241cf062362ffd9c5"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !dconjt, dconj_add, meet_scall, meet_scalr, <-scal_addEr; auto.",
                        "VernacExtend",
                        "f99c208f51e31e54e47429c68fe33c1d93b98146"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH, dconj_invo; auto.",
                        "VernacExtend",
                        "3ae656344c3f84677139bde383070d8dc5b4e476"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconjf_meetd",
            "line_nb": 2950,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; rewrite !meetS.",
                        "VernacExtend",
                        "15e5ac7c04788f89d03043cb9ba83ca77b9eeb03"
                    ]
                },
                {
                    "command": [
                        "simpl conj; simpl dconj; rewrite meetS, !conjt, !dconjt; Vfold n.",
                        "VernacExtend",
                        "5bc0a37128bf198f525390e780154d2dd5142b33"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, !meet_scall, !meet_scalr, <-!scal_multE, dconj_add; Krm1.",
                        "VernacExtend",
                        "586c16ffd69ab9a51b07d61b6c160b933a5f1237"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE1; auto; apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "731ee4a94b24f7d0b8111fad58d4c5affc81d272"
                    ]
                },
                {
                    "command": [
                        "rewrite !IH, !dconj_scal, meet_scalr, dconj_conj_swap, scal_addEr; auto.",
                        "VernacExtend",
                        "bf523ff9912ea88b4d88145e7649741631c1e19e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dconst_meet",
            "line_nb": 2958,
            "steps": [
                {
                    "command": [
                        "unfold dconst; rewrite dual_meet, const_join.",
                        "VernacExtend",
                        "99281542f6bd97b5a51e3f17422928b786c177e4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_join",
            "line_nb": 2962,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; auto.",
                        "VernacExtend",
                        "9b0835b59be3d455a2682ba08cf079288cbaf4e0"
                    ]
                },
                {
                    "command": [
                        "simpl; Vfold n.",
                        "VernacExtend",
                        "b9f9449f47b4fc50318b4052e4f924187e72923e"
                    ]
                },
                {
                    "command": [
                        "destruct v1; destruct v2.",
                        "VernacExtend",
                        "985f8d5af0336e82f1bc794ef25b2f46cee70efe"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); auto.",
                        "VernacExtend",
                        "4a2ad24c81ed168078bdbaa6298fbc8d7d7d0eb6"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_join, IH; auto.",
                        "VernacExtend",
                        "de8e73191c3cdebe0043b3a41d525386fd5917b3"
                    ]
                },
                {
                    "command": [
                        "rewrite dual_add, addE_com; auto; apply f_equal2 with (f := @addE (vn_eparams n)); auto.",
                        "VernacExtend",
                        "66610d8b0675f9b069d7768716dd48ed9e49a6b0"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_dual, dconj_invo, IH; auto.",
                        "VernacExtend",
                        "c3d47d349591654fba6fb705ea7593d3404eb374"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_addl",
            "line_nb": 2971,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros; apply (add_multKl p); auto.",
                        "VernacExtend",
                        "16a3ee9c8d5ca34753da210a623965b3ff2ad31d"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; destruct z.",
                        "VernacExtend",
                        "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
                        "VernacExtend",
                        "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
                    ]
                },
                {
                    "command": [
                        "rewrite !addE_assoc; auto.",
                        "VernacExtend",
                        "ce214b315400588aac8118eb43bbb788a8f0634d"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, addE_com, !addE_assoc; auto.",
                        "VernacExtend",
                        "78c88575968029f80232b3d262c4dd90bc74a7bb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_addr",
            "line_nb": 2982,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros; apply (add_multKr p); auto.",
                        "VernacExtend",
                        "bef705bbd270bdcf25983a12b6d3c79b4ca27ab7"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; destruct z.",
                        "VernacExtend",
                        "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _); rewrite IH; auto.",
                        "VernacExtend",
                        "6707bf8a0d592a7b1e7a1865244f09bccc6467e3"
                    ]
                },
                {
                    "command": [
                        "rewrite !addE_assoc; auto.",
                        "VernacExtend",
                        "ce214b315400588aac8118eb43bbb788a8f0634d"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_add, IH, addE_com,!addE_assoc; auto.",
                        "VernacExtend",
                        "6a11cf54988978a2fe476bba9ff2925079eeb7e9"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_assoc",
            "line_nb": 2993,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite multK_assoc; auto.",
                        "VernacExtend",
                        "1c9477fd292a3395806bb87199240da5b8207c51"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; destruct z.",
                        "VernacExtend",
                        "7efe0b53954a08107bc20c48d2a99f39d419a4b0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _).",
                        "VernacExtend",
                        "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_addr, meet_addl, !addE_assoc; auto.",
                        "VernacExtend",
                        "66eae82152dfdaa0f5e5233fc53e35e1b9fef152"
                    ]
                },
                {
                    "command": [
                        "repeat apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "ee3c55b5a98a56c0479089302cbf5110b4ac9b87"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_meet, IH; auto.",
                        "VernacExtend",
                        "e681a6c33c636ecc828d143642be9ec40c4ed516"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_alll",
            "line_nb": 3003,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite multK1l; auto.",
                        "VernacExtend",
                        "7434bf7311bb09aefd9963ad7929b821da2ad921"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite !IH, meet0l, addE0r; auto.",
                        "VernacExtend",
                        "4b078e0293d9bde1e00ac1952724647965b11aa9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_allr",
            "line_nb": 3008,
            "steps": [
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "rewrite multK1r; auto.",
                        "VernacExtend",
                        "ddcd31ad3ffd2585cd03973ebad819543275235c"
                    ]
                },
                {
                    "command": [
                        "destruct x; rewrite !IH, meet0r, addE0l, dconj_all, IH; auto.",
                        "VernacExtend",
                        "99f21bd1282788d638a55ab406e23a910809e88d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_small",
            "line_nb": 3013,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros k1 k2 _ _ HH; contradict HH; auto with arith.",
                        "VernacExtend",
                        "1327cae2cbad714706f64a574f509ead241c8164"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2].",
                        "VernacExtend",
                        "1106d8d09437cd934df24a190b491cedd15afd99"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto; intros HH Hx2; subst; try discriminate.",
                        "VernacExtend",
                        "9b7321425f01e71a3056f59fb5e0a62efb77c87a"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto; intros HH Hy; subst; try discriminate.",
                        "VernacExtend",
                        "e6df2e9e8e97735a1594382fb05de139b7ef8e4f"
                    ]
                },
                {
                    "command": [
                        "Grm0.",
                        "VernacExtend",
                        "127f0350e8bc133d6ca53aee0391eb5539ccf44c"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto; intros HH Hx2; subst; try discriminate.",
                        "VernacExtend",
                        "9b7321425f01e71a3056f59fb5e0a62efb77c87a"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hy1,Hy2) H; rewrite (IH x2 _ 0%nat k2); Grm0.",
                        "VernacExtend",
                        "fdb97c3eba14c1df220ec7d23b4155cf947a02ae"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hx1,Hx2).",
                        "VernacExtend",
                        "590c0ec7507980da4f735be3b46bc51d734a1d91"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; auto; intros HH Hy2 H; subst; try discriminate.",
                        "VernacExtend",
                        "b8c6517e5c2c0214919dad4038fb5e3bd561459d"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH x1 y2 k1 0%nat); Grm0; auto with arith.",
                        "VernacExtend",
                        "e798086ee531fd5a5626badcdaed161e3521a132"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (Hx1,Hx2) (Hy1,H2) H.",
                        "VernacExtend",
                        "ab9bed1a7f341ae3808ad2f23bfa312ff6d05f4f"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ k1 k2), (IH _ _ k1 k2.+1), (IH _ _ k1.+1 k2); Grm0; auto with arith.",
                        "VernacExtend",
                        "117147066c5066591e83a30c44181a91925558d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <-plus_n_Sm in H; auto with arith.",
                        "VernacExtend",
                        "7c1ec7869775ac78b9f4f0ff0ef7e6ea234be348"
                    ]
                },
                {
                    "command": [
                        "apply Lt.lt_trans with (k1 + k2).+1; auto with arith.",
                        "VernacExtend",
                        "3222bbc27dc1bb1f68d4476c443f6d2ecb6ef827"
                    ]
                },
                {
                    "command": [
                        "rewrite <-plus_n_Sm in H; auto with arith.",
                        "VernacExtend",
                        "7c1ec7869775ac78b9f4f0ff0ef7e6ea234be348"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meetkl0",
            "line_nb": 3052,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_or_lt k1 n); intros H3.",
                        "VernacExtend",
                        "d861b637a63abd75d3118143052d5ee0cd7c8975"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_lt_or_eq _ _ H3); intros H4.",
                        "VernacExtend",
                        "71200c371d19072f86dba8bf99d4cc160d0ce1f6"
                    ]
                },
                {
                    "command": [
                        "apply meet_small with (k1 := 0%nat) (k2 := k1); auto; apply hom0K.",
                        "VernacExtend",
                        "1b37f45f0715190a3c85dcae6356f2df2a15a59d"
                    ]
                },
                {
                    "command": [
                        "case H2; auto.",
                        "VernacExtend",
                        "877506702eca45f9d52e339649864010a8b18e82"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_lt with (2 := H1); auto; rewrite meet0r; auto.",
                        "VernacExtend",
                        "04b9c2eaea4c7c002a2ccc02c4e8ad6fab52e5cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meetkl",
            "line_nb": 3060,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite (homn_all _ _ H); auto.",
                        "VernacExtend",
                        "f81b39ccdd5d8b1a83a51a1bbe23c3dd64602d35"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_scalr, meet_allr, scalk, multK_com; auto.",
                        "VernacExtend",
                        "8a48323d2b8431fddbae6ba43dd5bd175e17483f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meetkr0",
            "line_nb": 3065,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_or_lt k1 n); intros H3.",
                        "VernacExtend",
                        "d861b637a63abd75d3118143052d5ee0cd7c8975"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_lt_or_eq _ _ H3); intros H4.",
                        "VernacExtend",
                        "71200c371d19072f86dba8bf99d4cc160d0ce1f6"
                    ]
                },
                {
                    "command": [
                        "apply meet_small with (k1 := k1) (k2 := 0%nat); auto.",
                        "VernacExtend",
                        "527f4182f5c1c0514e4ad929e813f79356351b5f"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_0_r; auto.",
                        "VernacExtend",
                        "357cc3734d67e52ec474d78339493e0cb1c8c350"
                    ]
                },
                {
                    "command": [
                        "case H2; auto.",
                        "VernacExtend",
                        "877506702eca45f9d52e339649864010a8b18e82"
                    ]
                },
                {
                    "command": [
                        "rewrite hom_lt with (2 := H1); auto; rewrite meet0l; auto.",
                        "VernacExtend",
                        "0a2d68c7cb1b66078233977b0b8527cdd2980b1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meetkr",
            "line_nb": 3074,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite (homn_all _ _ H); auto.",
                        "VernacExtend",
                        "f81b39ccdd5d8b1a83a51a1bbe23c3dd64602d35"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_scall, meet_alll, scalk; auto.",
                        "VernacExtend",
                        "d6c7849b9588b90c8885abf0407d22997377d7a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "meet_hom_id",
            "line_nb": 3097,
            "steps": [
                {
                    "command": [
                        "intros Hx Ho.",
                        "VernacExtend",
                        "285c70e65ecc7f93b88153a201261674ec0cb41a"
                    ]
                },
                {
                    "command": [
                        "assert (Hdx := dual_hom _ _ _ Hx).",
                        "VernacExtend",
                        "c6f69eab2a26c6b796481f7c66d7eed0b6690e14"
                    ]
                },
                {
                    "command": [
                        "assert (Hxx := meet_hom _ _ _ _ _ Hx Hx).",
                        "VernacExtend",
                        "3c40bc0017fc09a70b1dc4681003fca1231d3009"
                    ]
                },
                {
                    "command": [
                        "rewrite (dual_invoE _ _ _ Hxx), dual_meet.",
                        "VernacExtend",
                        "28e770f074c2b1f1c191e3e2a9b68a5df80183d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (join_hom_id _ _ _ Hdx), dual0; Vrm0.",
                        "VernacExtend",
                        "07649ffee2a633cb452a7f899da481421998a806"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dual_join_compl",
            "line_nb": 3104,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros [|k]; simpl.",
                        "VernacExtend",
                        "5440dd5e6955102043623f92220524c65f311e4e"
                    ]
                },
                {
                    "command": [
                        "intros [[]|[]]; rewrite multK1r; auto.",
                        "VernacExtend",
                        "d15a3813a10558490b02e76254998a6daec88a21"
                    ]
                },
                {
                    "command": [
                        "intros [].",
                        "VernacExtend",
                        "59f2b3a8927be334e806cdfe123cfb0fe48aa347"
                    ]
                },
                {
                    "command": [
                        "intros [|k]; destruct v as [x y]; simpl dual.",
                        "VernacExtend",
                        "9691dca5acfee00bd98ebcd49a27cfff4681fb5b"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff; intros [z (H1z,H2z)].",
                        "VernacExtend",
                        "828a26616525c1c2e5897ebbffb4b50763b51f60"
                    ]
                },
                {
                    "command": [
                        "injection H1z; intros; subst; rewrite dual0; Grm0.",
                        "VernacExtend",
                        "e3af52874962e0f59699a37012564538ffdf5cbf"
                    ]
                },
                {
                    "command": [
                        "rewrite (conjf_hom n 0), scalE1; simpl; Vfold n; Grm0.",
                        "VernacExtend",
                        "f485962fe24738f95778a6381c0919c5feb52358"
                    ]
                },
                {
                    "command": [
                        "case (IH y 0%nat); auto; intros Hu; rewrite Hu; auto.",
                        "VernacExtend",
                        "8cdfcd4ee3d4cb7077588ccab240de1835c1d268"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cblk_homk_equiv; constructor; auto.",
                        "VernacExtend",
                        "a018da7c091482c77630c45db272cdc621c552cf"
                    ]
                },
                {
                    "command": [
                        "intros H1; case (in_app_or _ _ _ H1); rewrite in_map_iff; intros [z (H1z,H2z)].",
                        "VernacExtend",
                        "d57638c9156929433bc593a1a6f4ab2ad0f68b0a"
                    ]
                },
                {
                    "command": [
                        "injection H1z; intros; subst.",
                        "VernacExtend",
                        "5ad01e119927e8325990e123ead8e6698e5799bb"
                    ]
                },
                {
                    "command": [
                        "rewrite conj0, dual0; Grm0.",
                        "VernacExtend",
                        "135f4b7bdc088ff0c207b202d837e11c37764b92"
                    ]
                },
                {
                    "command": [
                        "case (IH x k); auto; intros Hx; rewrite Hx; auto.",
                        "VernacExtend",
                        "d9590a3e81adff70d380e4afcc2a5a69322e18e6"
                    ]
                },
                {
                    "command": [
                        "injection H1z; intros; subst; rewrite dual0; Grm0.",
                        "VernacExtend",
                        "e3af52874962e0f59699a37012564538ffdf5cbf"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (k := S k).",
                        "VernacExtend",
                        "20c4e38815942905bf3597e845ed9162acf6bb59"
                    ]
                },
                {
                    "command": [
                        "case (even_or_odd k.+1); intros He.",
                        "VernacExtend",
                        "b6283a2bdda86c88da6c23b673e40445da5e275a"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_even, scalE1; auto.",
                        "VernacExtend",
                        "492f88e4b52ac2974fe146bff744fa7a71109de7"
                    ]
                },
                {
                    "command": [
                        "case (IH y k.+1); auto.",
                        "VernacExtend",
                        "3f102f7bbefc163a58eb43eae6352955a6a2bc48"
                    ]
                },
                {
                    "command": [
                        "intros Hy; rewrite Hy; auto.",
                        "VernacExtend",
                        "442da6b554f3b4d9c5a7e04e1b46fd0772bdf651"
                    ]
                },
                {
                    "command": [
                        "intros H; rewrite H; auto.",
                        "VernacExtend",
                        "2fe06e89fcbef6bdc71989f6d8a2180ee2ee021b"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_odd, join_scall; auto.",
                        "VernacExtend",
                        "df35d6b17d9af91f0e270e9e4f9e09a3f47d8308"
                    ]
                },
                {
                    "command": [
                        "rewrite dual_scal, join_scalr, <-scal_multE; Krm1; rewrite scalE1; auto.",
                        "VernacExtend",
                        "cb3aaa93a3495867c27b988c64a514c5ccb70e92"
                    ]
                },
                {
                    "command": [
                        "case (IH y k.+1); auto; intros Hy; rewrite Hy; auto.",
                        "VernacExtend",
                        "eba37ac84bbe3b7217da8f121e937cf23d5d0f17"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cblk_homk_equiv; constructor; auto.",
                        "VernacExtend",
                        "a018da7c091482c77630c45db272cdc621c552cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join01E",
            "line_nb": 3132,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 H3.",
                        "VernacExtend",
                        "fd3cb4671c7327eb202c6d7e666fadc2620058aa"
                    ]
                },
                {
                    "command": [
                        "case (eqE_spec _ (fn n) y 0); intros Hy; subst.",
                        "VernacExtend",
                        "f30f6d3abf9ffd87bb20bac5a31666a541e3587c"
                    ]
                },
                {
                    "command": [
                        "exists 0%f; Grm0.",
                        "VernacExtend",
                        "ccd12ea556609dcf2a1d29b24bd57d5ebf40ac08"
                    ]
                },
                {
                    "command": [
                        "rewrite <-cbl1_hom1_equiv in H1.",
                        "VernacExtend",
                        "da9dbfbd937a8ed8d33729c5d73101e53fc011b3"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_cbl n y (y::nil) x H1 (hom1_decomposable _ _ H2) Hy) in H3.",
                        "VernacExtend",
                        "7e58628088196a1e6524894d8945ca80f74a3aa4"
                    ]
                },
                {
                    "command": [
                        "case cbl1 with (2 := H3); auto.",
                        "VernacExtend",
                        "bf1964b8ee2b95e83ad58624efd23f0e91df3a77"
                    ]
                },
                {
                    "command": [
                        "intros k Hk; exists k; auto.",
                        "VernacExtend",
                        "9642d50ce088e043cfef7568ee931d856e486491"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homn_1",
            "line_nb": 3141,
            "steps": [
                {
                    "command": [
                        "unfold dconst; generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "bcbcfe76711a3a3bd59bc5afbda1ac1daf9cb929"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; Krm1.",
                        "VernacExtend",
                        "c700089c3a24fb4004a5cc338ee6166383680513"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2].",
                        "VernacExtend",
                        "1106d8d09437cd934df24a190b491cedd15afd99"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros HH Hx2; subst; try discriminate.",
                        "VernacExtend",
                        "2a68c22558840583e5d5f9452763221127728ed8"
                    ]
                },
                {
                    "command": [
                        "rewrite !meet0l; Grm0.",
                        "VernacExtend",
                        "39a7d082723c9a6136edc36d994aabbc93c5e439"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hy1,Hy2) HH; injection HH; intros HH1; subst.",
                        "VernacExtend",
                        "d239ee76a0520df294c05362c8552c750cdee132"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_hom with (1 := Hy1), conjf_hom with (1 := Hx2).",
                        "VernacExtend",
                        "fdc2704c0552eca498b95a7ccaa2f6dee95b04a1"
                    ]
                },
                {
                    "command": [
                        "rewrite expK_add, expK2m1; simpl expK; auto.",
                        "VernacExtend",
                        "3ae1742ddf1163e2a7584baf72e7b78f6bd385ae"
                    ]
                },
                {
                    "command": [
                        "rewrite !scalE1, (IH _ _ 0%nat k2); auto.",
                        "VernacExtend",
                        "79a2742418969e635dd5ecfb824f6c3f40fc2038"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hx1,Hx2).",
                        "VernacExtend",
                        "590c0ec7507980da4f735be3b46bc51d734a1d91"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros HH Hy2; subst; try discriminate.",
                        "VernacExtend",
                        "a0ebefa39d174d1d728f647c14e511e5589f2b37"
                    ]
                },
                {
                    "command": [
                        "intros HH; injection HH; intros HH1; subst.",
                        "VernacExtend",
                        "042509d4dea1a6856e9c564ea0ef6e56af464cd0"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj0, !meet0r, IH with (1 := Hx1) (2 := Hy2); Grm0.",
                        "VernacExtend",
                        "680ea6fc306730bbdfc5ac51c6920456c9696ba2"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (Hx1,Hx2)( Hy1,Hy2) Hn; Grm0.",
                        "VernacExtend",
                        "56a0bf085a7b0a4849f477b8d7fd9b8d08559fce"
                    ]
                },
                {
                    "command": [
                        "injection Hn; rewrite <-plus_n_Sm; clear Hn; intros Hn; subst.",
                        "VernacExtend",
                        "c024917c27ffb02afcb5dfff1be8573e0cfe9ea2"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_small with (1:= Hx1) (2 := Hy1); auto with arith.",
                        "VernacExtend",
                        "5421cc5cc34036ffb8e8da7256e72e4fd0094aa6"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH _ _ k1 k2.+1), (IH _ _ k1.+1 k2), dual_add, const_add, scal_addEl; auto.",
                        "VernacExtend",
                        "316be6a94b2b612b97cf6c39a9d12e413d786028"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_hom with (1 := Hy1), conjf_hom with (1 := Hx2).",
                        "VernacExtend",
                        "fdc2704c0552eca498b95a7ccaa2f6dee95b04a1"
                    ]
                },
                {
                    "command": [
                        "replace ((k1 + k2).+1 + k2)%nat with (2 * k2 + k1.+1)%nat by ring.",
                        "VernacExtend",
                        "1c5d993df664af75df4ca30f2c81e15a47d5950e"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E, join_scall, join_scalr; auto.",
                        "VernacExtend",
                        "f388f602d7bf1fdf3da99ad175bec643013bb5fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join2_meetE",
            "line_nb": 3165,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hn.",
                        "VernacExtend",
                        "bbd81a48db7e3ec71527253aee9d9c14a837015a"
                    ]
                },
                {
                    "command": [
                        "case (Lt.le_lt_or_eq _ _ Hn); clear Hn; intros Hn.",
                        "VernacExtend",
                        "d81f9ec4bb0495613f881b6ed7ec78d0bfc4e2d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom_lt n (k1 + k2) (x \u2228 y)); auto.",
                        "VernacExtend",
                        "3afbfb720fd176ea09ffede44c5d541cbfdbae4c"
                    ]
                },
                {
                    "command": [
                        "rewrite join_allhr with (k := (k1 + k2 - n)%nat); auto.",
                        "VernacExtend",
                        "cd524b5468a92f6aefd9e0c74d3790f18b44a9e6"
                    ]
                },
                {
                    "command": [
                        "apply Plus.plus_lt_reg_l with n.",
                        "VernacExtend",
                        "b027ef7e90c22fd0eafa8b980975dd72c51d695c"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_0_r, <-Minus.le_plus_minus; auto with arith.",
                        "VernacExtend",
                        "087692336a0430e8f2767610979cd947325b6fef"
                    ]
                },
                {
                    "command": [
                        "rewrite homn_1 with (3 := Hn), join_scall, join1l, <-homn_all; subst; auto.",
                        "VernacExtend",
                        "610e892cbdda7fa43025c0e4df30d71d7ee2a8b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_meet_swap",
            "line_nb": 3174,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hz Hn.",
                        "VernacExtend",
                        "a4ba90aa766b49de828e85790c4dc034abc26eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite homn_1 with (k1 := k1) (k2 := (k2 + k3)%nat); auto.",
                        "VernacExtend",
                        "1aa66ddb8f875b8f3a3e80c2dbcc6a3b44ed7006"
                    ]
                },
                {
                    "command": [
                        "rewrite homn_1 with (k1 := (k1 + k2)%nat) (k2 := k3); auto.",
                        "VernacExtend",
                        "1dc4e0683b37a7118ed5222b6531e64fe4d3dcb6"
                    ]
                },
                {
                    "command": [
                        "rewrite join_assoc; auto.",
                        "VernacExtend",
                        "f2fea3c39c10d7c5718821237dec550104b8713b"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_assoc; auto.",
                        "VernacExtend",
                        "ab73e6ae41c6113030d37d28a8a8d310a8c75e9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join3_meetE",
            "line_nb": 3181,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hz Hn.",
                        "VernacExtend",
                        "a4ba90aa766b49de828e85790c4dc034abc26eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite homn_all with (1 := Hx), !meet_scall, !meet_alll; auto.",
                        "VernacExtend",
                        "4396514a67b0a962a157219747dc5390f7a9370b"
                    ]
                },
                {
                    "command": [
                        "rewrite join_scall, join2_meetE with (k1 := k1) (k2 := k2); auto.",
                        "VernacExtend",
                        "b7e514af4fdcefd77f67d151a9642222bc924e55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "splitlr",
            "line_nb": 3186,
            "steps": [
                {
                    "command": [
                        "generalize k1 k2; clear k1 k2.",
                        "VernacExtend",
                        "698f074f80699999303d1a5549a930667add5b86"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; try Vfold n.",
                        "VernacExtend",
                        "886b259976b37da79c05969176c83e99ce97bb57"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; case eqK_spec; intros; subst; Krm0; try discriminate.",
                        "VernacExtend",
                        "1e5df6efa3b4a4283d20b0cdef694d868588da5c"
                    ]
                },
                {
                    "command": [
                        "intros [|k1] [|k2]; destruct x as [x1 x2]; destruct y as [y1 y2]; destruct z as [z1 z2].",
                        "VernacExtend",
                        "bd0603b11edecfbef1475bb5b434bed8af4fccdf"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros tmp Hx2; subst; try discriminate.",
                        "VernacExtend",
                        "548041aa3b78e070f0dd9a46061ce06f3b3f2ae2"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hy1, Hy2).",
                        "VernacExtend",
                        "51e8887d6de46b53a27097ffeba2a4b169d408a8"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros tmp Hz2; subst; try discriminate.",
                        "VernacExtend",
                        "25e0782fb66f86a17ee99a7d087bb5551a1cdfff"
                    ]
                },
                {
                    "command": [
                        "Grm0.",
                        "VernacExtend",
                        "127f0350e8bc133d6ca53aee0391eb5539ccf44c"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hx2), (hom0E _ _ Hy1), (hom0E _ _ Hz2), conjk; auto.",
                        "VernacExtend",
                        "f64e6e0bef58f317be0a477619a7fb0d3081fd61"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_joinl, conjk, dconjk, !joinkr.",
                        "VernacExtend",
                        "60b6d436fd224774f4e641162f7b01361dbda374"
                    ]
                },
                {
                    "command": [
                        "case (Peano_dec.dec_eq_nat n 0); intros Hn; subst; auto.",
                        "VernacExtend",
                        "c24f40bd7fa40dabfc64c615dee32fd7183a81d0"
                    ]
                },
                {
                    "command": [
                        "simpl; Krm1; rewrite !multK_assoc, multK_com, !multK_assoc; auto.",
                        "VernacExtend",
                        "107515d462b888f45f3356ca4408ef890704a2bb"
                    ]
                },
                {
                    "command": [
                        "rewrite !meet_small with (k1 := 0%nat) (k2 := 0%nat); Grm0; try apply scal_hom; try apply hom0K; try (destruct n; auto with arith; fail).",
                        "VernacExtend",
                        "2d4e4029df16f146edd9acbee3c991b78b918766"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros tmp Hx2; subst; try discriminate.",
                        "VernacExtend",
                        "548041aa3b78e070f0dd9a46061ce06f3b3f2ae2"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (Hy1, Hy2) (Hz1, Hz2).",
                        "VernacExtend",
                        "bc347462c68cc70ba96b424d086c2cdc888757e8"
                    ]
                },
                {
                    "command": [
                        "rewrite (IH x2 y2 (z1^d_'f) 0%nat k2); auto.",
                        "VernacExtend",
                        "9fa46940c6815a481b7e2516da06331e3ba19e74"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hx2), (hom0E _ _ Hy1), conjk; auto.",
                        "VernacExtend",
                        "573c0eac91b088302285534946a8403ae22860f2"
                    ]
                },
                {
                    "command": [
                        "Grm0.",
                        "VernacExtend",
                        "127f0350e8bc133d6ca53aee0391eb5539ccf44c"
                    ]
                },
                {
                    "command": [
                        "rewrite !joink, joinkr.",
                        "VernacExtend",
                        "2aa8f0043547180fe3ab11357f97c20821a9a5f9"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _).",
                        "VernacExtend",
                        "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_meetl, dconj_invo, conjk, <-meet_scall, scalk, multK_com; auto.",
                        "VernacExtend",
                        "60f8e305c919ab2b02206061f65d5c99d5c274c3"
                    ]
                },
                {
                    "command": [
                        "rewrite <-addE_assoc; auto.",
                        "VernacExtend",
                        "5ebbb9fa6f41e91692302eb40aeb1925934fdaba"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "simpl minus.",
                        "VernacExtend",
                        "11a89d7124a246240a56b6051428b4d104562673"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_add, meet_addr, scal_addEr; auto.",
                        "VernacExtend",
                        "16ee96f4d481c028186f4348e75e66826886efc2"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_joinr, conjk, joinkl, meet_scalr, <-meet_scall, scalk; auto.",
                        "VernacExtend",
                        "581dbca9a558a54c2fb6aedfb12da1eb84830bf5"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com, dconjf_hom with (1 := Hz2), meet_scalr, <-scal_multE; auto.",
                        "VernacExtend",
                        "6c55c9bcb9063f64c9d421e916b7255338c2ed42"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc, <-expK_add; auto.",
                        "VernacExtend",
                        "185bbbb18ae8934d12f01b2e7b512bc048c5c891"
                    ]
                },
                {
                    "command": [
                        "replace (n + (0 + k2.+1).+1 + (n + k2.+1))%nat with (2 * (n + k2.+1) + 1)%nat by ring.",
                        "VernacExtend",
                        "58c0293db2306792eeb90094f5e94074cd44ec79"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E; simpl expK; Krm1; rewrite scalE1; auto.",
                        "VernacExtend",
                        "7688d62460cbc492308ca5a2de5c3f917db37ca4"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_joinr, conj_invo; auto.",
                        "VernacExtend",
                        "3b0eebd488350a1791dccc7eea0387ebab1e7c1d"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!plus_n_Sm; simpl expK; Krm1.",
                        "VernacExtend",
                        "c4310d36697c5f8d0979148983c7989b935a4d0a"
                    ]
                },
                {
                    "command": [
                        "case eq0_spec; intros tmp; subst; try (intros; discriminate).",
                        "VernacExtend",
                        "f90a43699a2d2911e289cd8159272b778d919215"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP, andbP; intros (Hx1, Hx2) (Hy1, Hy2) Hz2.",
                        "VernacExtend",
                        "c871db65720be915cbf3fb161c89e993056900c3"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj0, !meet0r; Grm0.",
                        "VernacExtend",
                        "226f423001c7fab80a82be57f3bfef0859ead524"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _).",
                        "VernacExtend",
                        "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hy1), (hom0E _ _ Hz2), !joinkr; auto.",
                        "VernacExtend",
                        "1341517aef890f18566065043a1517cf48dd7769"
                    ]
                },
                {
                    "command": [
                        "rewrite scalk, multK_com, <-scalk, meet_scalr; auto.",
                        "VernacExtend",
                        "752d27100a22afca3e3b6a1c5b4fe125f4d818fa"
                    ]
                },
                {
                    "command": [
                        "rewrite <-meet_scalr, scalk, multK_com with (x := 'C[z2]); auto.",
                        "VernacExtend",
                        "0fc181480d66da59996a70c41a43c40abad34c54"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_meetr, conjk, <-meet_scalr with (k := 'C[y1]), scalk; auto.",
                        "VernacExtend",
                        "401eeeb09733571b8c4edcf9d73c2803fa57e9de"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_hom with (1 := Hx1), meet_scall, <-scal_addEl; auto.",
                        "VernacExtend",
                        "9835c133405fd23c1af9803dfedeb3ed1b81c7fc"
                    ]
                },
                {
                    "command": [
                        "replace (n + (k1.+1 + 0).+1)%nat with ((n + k1).+2)%nat by ring.",
                        "VernacExtend",
                        "7d920e5b348bf448aa3e41c153c4dcdca2653e8d"
                    ]
                },
                {
                    "command": [
                        "simpl expK; Krm1; rewrite oppKl; Grm0.",
                        "VernacExtend",
                        "dab11b0fe613d7e26a1d0cb75d47aaa384802be6"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_addl, IH with (1 := Hx1) (3 := Hz2); auto.",
                        "VernacExtend",
                        "d4d9c885cf8bb8bc64b091cd3251aab8cf330aa4"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, <-!addE_assoc; auto.",
                        "VernacExtend",
                        "20cfb053e282770ce93c5a198f057f14266377a9"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, scal_addEr; auto.",
                        "VernacExtend",
                        "503272dc88bc108b0a4e6d2ee0cbb713acd1a88a"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hy1), (hom0E _ _ Hz2), !joinkr; auto.",
                        "VernacExtend",
                        "1341517aef890f18566065043a1517cf48dd7769"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "replace (n + (k1.+1 + 0).+1)%nat with ((n + (k1 + 0).+1).+1)%nat by ring.",
                        "VernacExtend",
                        "161cbef6958cac5286b72595ab03ca84596bb12a"
                    ]
                },
                {
                    "command": [
                        "simpl expK; Krm1.",
                        "VernacExtend",
                        "3db6545a15310ea464d0d273d74370cae841df14"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := Hx2), !meet_scall, dconj_scal, dconjk, <-!meet_scalr, !scalk.",
                        "VernacExtend",
                        "3c62d639553003b1e8db3f272b793c1bb9175fde"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com with (x := 'C[y1]), multK_com with (x := 'C[z2]), <-!multK_assoc; auto.",
                        "VernacExtend",
                        "89182a49c5f66aafb31af03076bda3edb062be5e"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_assoc, multK_com with (x := 'C[z2]), <- multK_assoc; auto.",
                        "VernacExtend",
                        "2427f26755aeb92983dc8663a3143ed7440ec06e"
                    ]
                },
                {
                    "command": [
                        "Krm1; rewrite !opp_multKl, <-expKS, <-expK_add; auto.",
                        "VernacExtend",
                        "fd35efa3a655619957570022591e324ccc87f974"
                    ]
                },
                {
                    "command": [
                        "replace ((n + (k1.+1 + 0).+1).+1 + n)%nat with (2 * (n.+1) + k1.+1)%nat by ring.",
                        "VernacExtend",
                        "ea2585344748fa7ac6ed77e8a22183fbb0f49861"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E; auto.",
                        "VernacExtend",
                        "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
                    ]
                },
                {
                    "command": [
                        "rewrite !andbP; intros (Hx1,Hx2) (Hy1,Hy2) (Hz1,Hz2).",
                        "VernacExtend",
                        "70c2d61572bb47be60d6b4c20eff461867999494"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := @pair _ _).",
                        "VernacExtend",
                        "b32224961ffec1e3e6fe8b61eabe839eaf7827b1"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_addl.",
                        "VernacExtend",
                        "a84132556971d9f0aa4441933b771192093e34fb"
                    ]
                },
                {
                    "command": [
                        "rewrite IH with (1 := Hx1) (3 := Hz1); auto.",
                        "VernacExtend",
                        "dcfd3714402f9c82b075da3e4457b3cd8082acf9"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_addr, scal_addEr, !addE_assoc; auto.",
                        "VernacExtend",
                        "ee12093802c7ec0e533f8c84410721639d0e4195"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite addE_com; auto.",
                        "VernacExtend",
                        "5728524d00911f87670ef306aeab7369b7c46f38"
                    ]
                },
                {
                    "command": [
                        "rewrite !addE_assoc; auto; apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "581ca21fa25fa47f00040d8a7526532110c6f8d6"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := Hy2), join_scall, meet_scalr; auto.",
                        "VernacExtend",
                        "fe156afd98f7a029769bebfa3e5f1b568ef6de21"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_multE; simpl expK; Krm1.",
                        "VernacExtend",
                        "467ed6c6feca23ea9c78b69d9dccecb9298e0db8"
                    ]
                },
                {
                    "command": [
                        "replace (n + (k1 + k2.+1) .+2)%nat with (2 * 1 + (n + (k1 + k2).+1))%nat by ring.",
                        "VernacExtend",
                        "48a0299dc54758e0ee5fb8833047efe692ed1afb"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E; auto.",
                        "VernacExtend",
                        "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite conj_add, join_addl.",
                        "VernacExtend",
                        "8531805a984f4ffda22519e4ae03e58b5adbd0fa"
                    ]
                },
                {
                    "command": [
                        "rewrite !conjf_meetl, dconj_invo.",
                        "VernacExtend",
                        "4428253d4faa537fe81caab76515f2ccda00eb9e"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hy1), !joinkr, !joinkl.",
                        "VernacExtend",
                        "d19a5f1fe120a39295e4c19e750e50744acdcf57"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_scalr, meet_scall.",
                        "VernacExtend",
                        "3fa7c5b580659d7f0171b332483241dde6bdfe3c"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := Hx1).",
                        "VernacExtend",
                        "17e9d17330b479b725141ec9a93f84fa559b8045"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_hom with (1 := Hz2).",
                        "VernacExtend",
                        "1eaedc4a894f7db84074c7f30859b33fbd64c009"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, <-addE_assoc, meet_scalr, meet_scall, <-!scal_multE, <-scal_addEl; auto.",
                        "VernacExtend",
                        "b082547243430b4ba325b749fa53aefca48d583d"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com, !multK_assoc, <-add_multKr, <-expK_add; auto.",
                        "VernacExtend",
                        "4e185d652e6852939bfec33c9b84173bab2ec887"
                    ]
                },
                {
                    "command": [
                        "replace (n + (k1.+1 + k2.+1).+1)%nat with (2 * 1 + (n + k2.+1 + k1))%nat by ring.",
                        "VernacExtend",
                        "3a59ae8347df4234a0e2ee99364e1209e12f223b"
                    ]
                },
                {
                    "command": [
                        "Krm1; rewrite expKm1_2E, oppKl; Grm0.",
                        "VernacExtend",
                        "b3abb00a09cd8f2bba81f80dab62720a86b9390e"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_addl.",
                        "VernacExtend",
                        "a84132556971d9f0aa4441933b771192093e34fb"
                    ]
                },
                {
                    "command": [
                        "rewrite IH with (1 := Hx1) (3 := Hz2); auto.",
                        "VernacExtend",
                        "9a3358171987b4e649a4f8dda0a98e01722b2f3b"
                    ]
                },
                {
                    "command": [
                        "rewrite !scal_addEr, !addE_assoc; auto.",
                        "VernacExtend",
                        "2e81b651bb978c6e168dac09d27104a0d2af07ac"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "replace (n + (k1.+1 + k2.+1).+1)%nat with (n + (k1 + k2.+1).+1).+1 by ring.",
                        "VernacExtend",
                        "c8d9067195ed574d8502a432c910e523b2d5539d"
                    ]
                },
                {
                    "command": [
                        "simpl expK; Krm1.",
                        "VernacExtend",
                        "3db6545a15310ea464d0d273d74370cae841df14"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite addE_com, join_addl, !addE_assoc; auto.",
                        "VernacExtend",
                        "68808020c7d39d7bfd7084de6f22938dc2e3540d"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite IH with (1 := Hx2) (3 := dconj_hom _ _ _ _ Hz1); auto.",
                        "VernacExtend",
                        "3871f71442753020712172cfc8c925253893a8e5"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite <-addE_assoc, addE_com; auto.",
                        "VernacExtend",
                        "42d089b3a2fd8ed3a2115bc6f57653c0d3e09448"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite dconj_add, meet_addr, scal_addEr; auto.",
                        "VernacExtend",
                        "16ee96f4d481c028186f4348e75e66826886efc2"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite (hom0E _ _ Hy1).",
                        "VernacExtend",
                        "f42f27186a16a5eacf51406411aa0e3ed4baa753"
                    ]
                },
                {
                    "command": [
                        "rewrite joinkl,joinkr,dconj_scal, meet_scalr.",
                        "VernacExtend",
                        "885165ccb87cb53ada51e9e28324d968e954c017"
                    ]
                },
                {
                    "command": [
                        "rewrite conjf_hom with (1 := Hx2).",
                        "VernacExtend",
                        "5da6c2a1586d736f7d75be4559e5d7a9f823e44e"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_hom with (1 := Hz2).",
                        "VernacExtend",
                        "1eaedc4a894f7db84074c7f30859b33fbd64c009"
                    ]
                },
                {
                    "command": [
                        "rewrite !meet_scall, !meet_scalr, <-!scal_multE; auto.",
                        "VernacExtend",
                        "47e5469658025c8fca880f21ca37043ba2a70886"
                    ]
                },
                {
                    "command": [
                        "rewrite !multK_assoc, !multK_com with (x := 'C[y1]), <-!multK_assoc; auto.",
                        "VernacExtend",
                        "c76adde2b06d804166fef2a8cc536c9f90658dd1"
                    ]
                },
                {
                    "command": [
                        "Krm1; rewrite !opp_multKl, <-expKS, <-expK_add; auto.",
                        "VernacExtend",
                        "fd35efa3a655619957570022591e324ccc87f974"
                    ]
                },
                {
                    "command": [
                        "replace ((n + (k1.+1 + k2.+1).+1).+1 + (n + k2.+1))% nat with (2 * (n.+1 + k2.+1) + k1.+1)%nat by ring.",
                        "VernacExtend",
                        "fb7586acf49aec6c8e51cae09fc5406da4351960"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E; auto.",
                        "VernacExtend",
                        "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := scal n); auto.",
                        "VernacExtend",
                        "deb609984d2410cce51f5573a0705c8e2556a359"
                    ]
                },
                {
                    "command": [
                        "replace (n + (k1.+1 + k2.+1).+1)%nat with (n + (k1.+1 + k2).+1).+1 by ring.",
                        "VernacExtend",
                        "219e6e1a37d15fb6c6db16c92b17617df8aafca3"
                    ]
                },
                {
                    "command": [
                        "simpl expK; Krm1.",
                        "VernacExtend",
                        "3db6545a15310ea464d0d273d74370cae841df14"
                    ]
                },
                {
                    "command": [
                        "rewrite dconjf_joinr, conj_invo; auto.",
                        "VernacExtend",
                        "3b0eebd488350a1791dccc7eea0387ebab1e7c1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "splitrr",
            "line_nb": 3314,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hz.",
                        "VernacExtend",
                        "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_hom_com with (k2 := k2) (k1 := (k1 + 1)%nat); auto.",
                        "VernacExtend",
                        "93b54afab6ef9c60f58cb26928f4a41d76564e84"
                    ]
                },
                {
                    "command": [
                        "rewrite splitlr with (k1 := k1) (k2 := k2); auto.",
                        "VernacExtend",
                        "e327182ed14ba9c60e2c346f2ea960788a1b234a"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add, !scal_addEr, <-!scal_multE; auto.",
                        "VernacExtend",
                        "8a69255f5fcde36b3cef72b5bc67c19becb46b8b"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite join_hom_com with (1 := Hz) (2 := Hy), !Mult.mult_1_r, meet_scalr, <-scal_multE, <-expK_add; auto.",
                        "VernacExtend",
                        "51f76016e68c2d17e8dc89039c742571f2480084"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_hom_com with (k1 := k1) (k2 := (k2 + 1)%nat) (x := x); auto.",
                        "VernacExtend",
                        "9ed4123b1cc910604e7f0c385367c2242f052509"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_multE, <-!expK_add; auto.",
                        "VernacExtend",
                        "526c414853a4a8a37e879d6fcebe12d895c7528a"
                    ]
                },
                {
                    "command": [
                        "replace ((n + (k1 + 1)) * (n + k2) + (n + (k1 + k2).+1) + k2)%nat with (2* k2 + (n + k2.+1 + (n + k1) * (n + (k2 + 1))))%nat by ring.",
                        "VernacExtend",
                        "20c746665d84be96201ab4b60638a5084fe167dd"
                    ]
                },
                {
                    "command": [
                        "rewrite !expKm1_2E; auto.",
                        "VernacExtend",
                        "98707be5a2d6009dabdd675914748d88db717e33"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_hom_com with (k1 := k1) (k2 := k2) (x := x); auto.",
                        "VernacExtend",
                        "e7c6b98033e23cd9d8543036d0f0d41011a2bf50"
                    ]
                },
                {
                    "command": [
                        "Krm1; rewrite <-expKS, join_scall, <- scal_multE, <-expK_add; auto.",
                        "VernacExtend",
                        "92f03770adfa8b247d84894d6228d6dff8d0e8dc"
                    ]
                },
                {
                    "command": [
                        "replace ((n + k2.+1).+1 + (n + k1) * (n + k2))%nat with (2 * 1 + ((n + (k1 + 1)) * (n + k2)))%nat by ring.",
                        "VernacExtend",
                        "7f5901256764372a50fd755cb4825eeab38c4880"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E; auto.",
                        "VernacExtend",
                        "b8fbdb719e2b39296fa0feecb08949ea35de75ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "splitrl",
            "line_nb": 3330,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hz.",
                        "VernacExtend",
                        "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_hom_com with (k2 := k2) (k1 := (1 + k1)%nat); auto.",
                        "VernacExtend",
                        "4bcb21196b06130846bfb604086595a86833c5cd"
                    ]
                },
                {
                    "command": [
                        "rewrite splitll with (k1 := k1) (k2 := k2); auto.",
                        "VernacExtend",
                        "dc4e08f1d8fcbd63cddf7edf0c126fa451df2f4a"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add, !scal_addEr, <-!scal_multE; auto.",
                        "VernacExtend",
                        "8a69255f5fcde36b3cef72b5bc67c19becb46b8b"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := add n); auto.",
                        "VernacExtend",
                        "3252b1486bad5ef5c6833ec0ca1faf9aa6ac658c"
                    ]
                },
                {
                    "command": [
                        "rewrite join_hom_com with (1 := Hz) (2 := Hy), !Mult.mult_1_r, meet_scalr, <-scal_multE, <-expK_add; auto.",
                        "VernacExtend",
                        "51f76016e68c2d17e8dc89039c742571f2480084"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_hom_com with (k1 := k1) (k2 := (k2 + 1)%nat) (x := x); auto.",
                        "VernacExtend",
                        "9ed4123b1cc910604e7f0c385367c2242f052509"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_scalr, <-scal_multE, <-!expK_add; auto.",
                        "VernacExtend",
                        "670d5006f7bb9610439735ac50d2c7ad12ba46a0"
                    ]
                },
                {
                    "command": [
                        "replace ((n + (1 + k1)) * (n + k2) + (n + k2.+1) + k2)%nat with (2 * k2 + (n * n + n * k1 + n * k2 + 2 * n + k1 * k2 + k2 + 1))%nat by ring.",
                        "VernacExtend",
                        "6abb4b56b5209415da876a5e1fafaba17d76148f"
                    ]
                },
                {
                    "command": [
                        "replace ((n + k1) * (n + (k2 + 1)) + (n + (k1 + k2).+1))%nat with (2 * k1 + (n * n + n * k1 + n * k2 + 2 * n + k1 * k2 + k2 + 1))%nat by ring.",
                        "VernacExtend",
                        "6f5c8d7d9f8e6c6e31e60cf3c0cd212028ab240f"
                    ]
                },
                {
                    "command": [
                        "rewrite !expKm1_2E; auto.",
                        "VernacExtend",
                        "98707be5a2d6009dabdd675914748d88db717e33"
                    ]
                },
                {
                    "command": [
                        "rewrite meet_hom_com with (k1 := k1) (k2 := k2) (x := x); auto.",
                        "VernacExtend",
                        "e7c6b98033e23cd9d8543036d0f0d41011a2bf50"
                    ]
                },
                {
                    "command": [
                        "Krm1; rewrite opp_multKl, <-expKS, join_scalr, <-!expK_add; auto.",
                        "VernacExtend",
                        "21ba6ca1df0f68bba74b6b467e84c3f318c4f7df"
                    ]
                },
                {
                    "command": [
                        "replace (((n + (1 + k1)) * (n + k2)).+1 + (n + k2.+1))%nat with (2 * (n + k2 + 1) + (n + k1) * (n + k2))%nat by ring.",
                        "VernacExtend",
                        "14c1456c576e8c4fba84e6fba01c6e5b89cedc3f"
                    ]
                },
                {
                    "command": [
                        "rewrite !expKm1_2E; auto.",
                        "VernacExtend",
                        "98707be5a2d6009dabdd675914748d88db717e33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter",
            "line_nb": 3347,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hz Hxy Hxz.",
                        "VernacExtend",
                        "387c4df87e137a36ee19de39ba6273ef295bfc2f"
                    ]
                },
                {
                    "command": [
                        "generalize (splitll n k1 k2 y x z Hy Hx Hz).",
                        "VernacExtend",
                        "3b0acb8df6d5ab69f940364410665f99a67ddc78"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxy, Hxz; Grm0.",
                        "VernacExtend",
                        "3e94857138877f09269b255e3c7f3480c62c1122"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_multE; Krm1; rewrite <-expKS; auto.",
                        "VernacExtend",
                        "c773a6bca4c98740461614ee4d0203bee88bf585"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "case (scalE_integral _ (fn n) _ _ (sym_equal H)); auto.",
                        "VernacExtend",
                        "25f6147f2d9c4af4b1a8f856d8e3d99dcdfb12b0"
                    ]
                },
                {
                    "command": [
                        "intros HH; contradict HH; apply expKm1_n0; auto.",
                        "VernacExtend",
                        "60d8c43e04508b527cc194803bb3fb7467ee2532"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_meet_distrl",
            "line_nb": 3356,
            "steps": [
                {
                    "command": [
                        "intros Hx Hy Hz.",
                        "VernacExtend",
                        "405bc9f02f7e5f831e6a4fbfad5f324f1eebdb85"
                    ]
                },
                {
                    "command": [
                        "rewrite (splitll n k1 k2 x y z), sub_add, !scal_addEr; auto.",
                        "VernacExtend",
                        "a17eee1627a16674c0e3af152e83fdbca4bb8451"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!scal_multE, <-expK_add; Krm1; rewrite <-expKS; auto.",
                        "VernacExtend",
                        "a54579b967e8f857b081482a13fd521a12877a80"
                    ]
                },
                {
                    "command": [
                        "replace (n + k2 + (n + k2.+1))%nat with (2 * (n + k2) + 1)%nat by ring.",
                        "VernacExtend",
                        "8ca4b34f9517b66d9d520f1526cae9a06aa46b72"
                    ]
                },
                {
                    "command": [
                        "rewrite expKm1_2E, !expKS, expKm1_2E, expKS; simpl expK; Krm1.",
                        "VernacExtend",
                        "1cf06a2c0e6e8708bb28cc5ebe309837c6209841"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, <-addE_assoc, scalE1, scal_addE0; Grm0.",
                        "VernacExtend",
                        "81f06eb6d0234957e10979171673037b593ec618"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "k2g0",
            "line_nb": 3558,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "simpl in IH; rewrite IH; auto.",
                        "VernacExtend",
                        "e1815ece4e1854e7221a579ebb1f24ffc3908dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "k2g_add",
            "line_nb": 3562,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm0.",
                        "VernacExtend",
                        "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
                    ]
                },
                {
                    "command": [
                        "destruct x as [k1 x]; destruct y as [k2 y]; simpl.",
                        "VernacExtend",
                        "95997afc2bae35bcf78d0be33c836f4ef2883625"
                    ]
                },
                {
                    "command": [
                        "generalize (IH x y); simpl; intros HH; rewrite HH.",
                        "VernacExtend",
                        "9d78cfb24db49deeab486467a03feba133f6da87"
                    ]
                },
                {
                    "command": [
                        "rewrite <-addk; Vfold n; Grm0.",
                        "VernacExtend",
                        "a295fd63e7be1819f66d82c33f8d1f39c679a1d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "k2g_scal",
            "line_nb": 3568,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm0.",
                        "VernacExtend",
                        "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
                    ]
                },
                {
                    "command": [
                        "destruct x as [k1 x].",
                        "VernacExtend",
                        "cdb7a6f2bafca2b1cb0e1bbce0b22e90deea45e7"
                    ]
                },
                {
                    "command": [
                        "generalize (IH k x); simpl; intros HH; rewrite HH.",
                        "VernacExtend",
                        "c264d3bf0d2fbf28cae4fb3c768d0042b1c57683"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scalk; Vfold n; Grm0.",
                        "VernacExtend",
                        "84446ec2c8e0b63fa4a8a7a785d542d834c093f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "k2g_unit",
            "line_nb": 3574,
            "steps": [
                {
                    "command": [
                        "generalize i; clear i.",
                        "VernacExtend",
                        "208b471d15be521271abdaf4ee90e51a9a779dca"
                    ]
                },
                {
                    "command": [
                        "induction n as [|n IH]; Krm0.",
                        "VernacExtend",
                        "51ba0b01fbd5a260247a6c42ec2692b4590dc0ed"
                    ]
                },
                {
                    "command": [
                        "intros i Hi; auto; contradict Hi; auto with arith.",
                        "VernacExtend",
                        "cdb67c23669a73519b70b3dce9f952c46e43998a"
                    ]
                },
                {
                    "command": [
                        "intros [|i] Hi; simpl; rewrite ?k2g0; rewrite ?IH; auto with arith.",
                        "VernacExtend",
                        "1adf44b1d010b0b6d135e1e6707b2e1f2e06a600"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "k2g_hom",
            "line_nb": 3580,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; Krm0.",
                        "VernacExtend",
                        "51ba0b01fbd5a260247a6c42ec2692b4590dc0ed"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite eqKI; auto.",
                        "VernacExtend",
                        "49a4c5e57a1b17448a6ff016ab34dc896e3fa5dc"
                    ]
                },
                {
                    "command": [
                        "destruct x as [k x]; simpl.",
                        "VernacExtend",
                        "c33ae05126dbdf39b85be635ed5b93ac89735c81"
                    ]
                },
                {
                    "command": [
                        "rewrite hom0K; apply (IH x).",
                        "VernacExtend",
                        "7e8f017b20bcae871189cec37ec854e89aec3309"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hom1E",
            "line_nb": 3586,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm0.",
                        "VernacExtend",
                        "a14494b389fe056b145ddeb2c9261a8ed359e5b6"
                    ]
                },
                {
                    "command": [
                        "case eqK_spec; auto; intros; subst; try discriminate.",
                        "VernacExtend",
                        "96df88e2be347e1084f5508ea25a790afb16e19c"
                    ]
                },
                {
                    "command": [
                        "exists tt; auto.",
                        "VernacExtend",
                        "653362250016498b8c75f29d155a0285bdad3aff"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x1 x2].",
                        "VernacExtend",
                        "e78a3fd9abb831281a0bee6766d24ebb789f6bc1"
                    ]
                },
                {
                    "command": [
                        "rewrite andbP; intros (Hx1, Hx2).",
                        "VernacExtend",
                        "590c0ec7507980da4f735be3b46bc51d734a1d91"
                    ]
                },
                {
                    "command": [
                        "case (IH _ Hx2); intros y Hy.",
                        "VernacExtend",
                        "0e742f48cdd579c38ae00767dd4a69eaf71123ff"
                    ]
                },
                {
                    "command": [
                        "exists ('C[x1], y).",
                        "VernacExtend",
                        "69270fc402a4bbefc10ed8bda0b5c11f2999998f"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(hom0E _ _ Hx1), <-Hy; auto.",
                        "VernacExtend",
                        "e69acb73b7178156256a8298ce8863d6d9db2ac2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "k2glift",
            "line_nb": 3596,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pscal_join",
            "line_nb": 3599,
            "steps": [
                {
                    "command": [
                        "induction n as [|n IH]; simpl; Krm0; Krm1.",
                        "VernacExtend",
                        "c8dfb7fbffaf5f350c80a9649d64109a369aafe5"
                    ]
                },
                {
                    "command": [
                        "destruct x as [k x]; destruct y as [h y]; Vfold n.",
                        "VernacExtend",
                        "5bcc3c72f16c28b55f69345b3e7760de42f5fe51"
                    ]
                },
                {
                    "command": [
                        "Vrm0.",
                        "VernacExtend",
                        "1a4db5f32ec02ee3a48ac3403c64886dde58598f"
                    ]
                },
                {
                    "command": [
                        "rewrite !dualk, !joinkl; simpl expK; Grm0; Krm1.",
                        "VernacExtend",
                        "350d11ac4125aa73d356f3bdd229d18f1c35e508"
                    ]
                },
                {
                    "command": [
                        "rewrite !(conjf_hom _ _ _ (k2g_hom _ _)); simpl expK; Grm0; Krm1.",
                        "VernacExtend",
                        "f1e0f7fbb411054fcfdc22ea9948e3bec07caac9"
                    ]
                },
                {
                    "command": [
                        "rewrite dual_scal, !join_scall, !join_scalr, IH.",
                        "VernacExtend",
                        "9c69cb3fc4ea509600e9e91e7b05ba790c2bef92"
                    ]
                },
                {
                    "command": [
                        "rewrite <- scal_multE, (scal_addEl (vn_eparams n)); auto.",
                        "VernacExtend",
                        "5f3514278394b212cc79abcb686f1cc4eb9c68e8"
                    ]
                },
                {
                    "command": [
                        "rewrite <-!scal_multE; Krm1.",
                        "VernacExtend",
                        "15a51c38d3f79bf62384829156b3ad4653371f10"
                    ]
                },
                {
                    "command": [
                        "rewrite (join_allhr _ _ _ (k2g_hom _ _)); Vrm0.",
                        "VernacExtend",
                        "e598d621eb29338bc779310f4f42911aee9e7a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}