{
    "filename": "VectorSpace.v",
    "coq_project": "GeometricAlgebra",
    "vernac_cmds": [
        [
            "Require Import Setoid Field Min List Aux.",
            "VernacRequire",
            "cb72aacd36e0ac924d7a600b3fc2f3e9985a22ba"
        ],
        [
            "Structure eparams: Type := { E:> Set; stype:> fparams; E0: E; eqE: E -> E -> bool; addE : E -> E -> E; scalE : (K stype) -> E -> E }.",
            "VernacInductive",
            "0c96f4e275a292fbc74be23e3f814a0dc8101a32"
        ],
        [
            "Delimit Scope vector_scope with v.",
            "VernacDelimiters",
            "09a87c9fbdeeee5778ef37153b26fa2d90f50249"
        ],
        [
            "Notation \"x ?= y\" := (eqE _ x y) (at level 70): vector_scope.",
            "VernacNotation",
            "9b5cd65f26413da401e8f6d7e37e350e6e435eea"
        ],
        [
            "Notation \"0\" := (E0 _): vector_scope.",
            "VernacNotation",
            "ecd4100390c54b2b0f2f105396a245c8327bb8c4"
        ],
        [
            "Notation \"x + y\" := (addE _ x y): vector_scope.",
            "VernacNotation",
            "f7773269863a111a30b80352ed79cb9aa32d552c"
        ],
        [
            "Notation \"x .* y\" := (scalE _ x%f y) (at level 31, no associativity): vector_scope.",
            "VernacNotation",
            "99e2508bdca80b713bbf86492d9523c3b917b294"
        ],
        [
            "Arguments scalE _ _%field_scope _%vector_scope.",
            "VernacArguments",
            "d2fbaad54700c023eebf4a78a84c11feb0d2e390"
        ],
        [
            "Section VectorSpace.",
            "VernacBeginSection",
            "f2026b9d84ade27cb992f91bf4ce911797e1deea"
        ],
        [
            "Variable p : eparams.",
            "VernacAssumption",
            "d3d1b6463e6580251c2f6d678e8defdee1c3b21d"
        ],
        [
            "Open Scope vector_scope.",
            "VernacOpenCloseScope",
            "354c4804e43716fe91c23b355f418525d1f104ed"
        ],
        [
            "Implicit Type v x y z: p.",
            "VernacReserve",
            "bed2b5d55f1858cb454ff8bac276404a95b6d076"
        ],
        [
            "Implicit Type k: stype p.",
            "VernacReserve",
            "68a4b8ac8d1a4abc892d4ff7ca2208f70558078e"
        ],
        [
            "Definition mprod ks vs := fold2 (fun k v r => k .* v + r) ks vs 0.",
            "VernacDefinition",
            "7b810037d78c94cf833b67eb1cdc15972535a9b9"
        ],
        [
            "Notation \" x *X* y \" := (mprod x y) (at level 40, no associativity): vector_scope.",
            "VernacNotation",
            "804c3e752581aaaa348526064ca6ae7f9fe4d23a"
        ],
        [
            "Definition free vs := forall ks, length ks = length vs -> ks *X* vs = 0 -> (forall k, In k ks -> k = 0%f).",
            "VernacDefinition",
            "7d3b7295ad98291499bed1c68a87cc38962f5401"
        ],
        [
            "Inductive cbl (l: list (E p)): (E p) -> Prop := cbl0: cbl l 0 | cbl_in: forall v, In v l -> cbl l v | cbl_add: forall x y, cbl l x -> cbl l y -> cbl l (x + y) | cbl_scal: forall k x, cbl l x -> cbl l (k .* x).",
            "VernacInductive",
            "388a94f033de84ae326eefb1b21264af6053f4ba"
        ],
        [
            "Lemma cbl_trans l1 l2 x: (forall i, In i l2 -> cbl l1 i) -> cbl l2 x -> cbl l1 x.",
            "VernacStartTheoremProof",
            "0900a53f34affedcb946a1ad826d22cdf9b13182"
        ],
        [
            "intros H1 H2; elim H2; auto.",
            "VernacExtend",
            "d885867e4042922da2bc459c312dfccac059dccf"
        ],
        [
            "apply cbl0.",
            "VernacExtend",
            "a30a6dc0e0b9363a44a8082e597a09cb39921056"
        ],
        [
            "intros; apply cbl_add; auto.",
            "VernacExtend",
            "161fbfb57f10da1ac08ab8b3f4cc36c7899fa5b5"
        ],
        [
            "intros; apply cbl_scal; auto.",
            "VernacExtend",
            "c5fcf615e98d5a0d923c3da949b649cb55865ed9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_base vs := free vs /\\ forall e, cbl vs e.",
            "VernacDefinition",
            "5c58c9d076b6327e3b85e3b7f2b5f1496d4db48b"
        ],
        [
            "Structure vparamsProp: Type := { sProp : fparamsProp p; eqE_dec: forall x y, if x ?= y then x = y else x <> y; addE_assoc: forall x y z, (x + y) + z = x + (y + z); addE_com: forall x y, x + y = y + x; addE0l: forall x, 0 + x = x; scalE0l: forall x, 0 .* x = 0; scalE1: forall x, 1 .* x = x; scal_addEl: forall k1 k2 x, (k1 + k2) .* x = (k1.* x) + (k2 .* x); scal_addEr: forall k x y, k .* (x + y) = k .* x + k .* y; scal_multE: forall k1 k2 x, (k1 * k2) .* x = k1.* (k2 .* x) }.",
            "VernacInductive",
            "d4609d5f078a556a46726d8599d74282afdd8131"
        ],
        [
            "Variable Hp: vparamsProp.",
            "VernacAssumption",
            "fa80299f2ae26749e21e4766211b2d4ecc41a89b"
        ],
        [
            "Lemma eqE_refl x: (x ?= x) = true.",
            "VernacStartTheoremProof",
            "a3488daab5ab7004f85f3e292d3632ff8e1c8c8b"
        ],
        [
            "generalize (eqE_dec Hp x x); case eqE; auto.",
            "VernacExtend",
            "d9ed31a8fe7951acdc3d627e27d743d14fe92f97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addE0r: forall x, x + 0 = x.",
            "VernacStartTheoremProof",
            "7068c8ddabf43ccb5b37e272cb6ce38f52030462"
        ],
        [
            "intros x; rewrite addE_com; auto; rewrite addE0l; auto.",
            "VernacExtend",
            "3f770fa58d96184852723457576ab84aaf1a1df2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let sfP := sProp Hp.",
            "VernacDefinition",
            "8f26457b6aab06385c7465ce9aa37d33331bd69c"
        ],
        [
            "Lemma addE_cancell x y z : z + x = z + y -> x = y.",
            "VernacStartTheoremProof",
            "bda0f641124dfb5923948bbfbbe711fc95b3d70e"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite <-addE0l; auto.",
            "VernacExtend",
            "b2ed8974b1c5040476cf8c17fc5e853065e9fbf3"
        ],
        [
            "rewrite <-(fun xx => scalE0l xx z); auto.",
            "VernacExtend",
            "b8726db872c8bad460266f3236f9e012389d3900"
        ],
        [
            "rewrite <-(oppKl _ sfP 1%f); auto.",
            "VernacExtend",
            "08df613e670498b35e0813e4624a04294d0d87c3"
        ],
        [
            "rewrite scal_addEl; auto.",
            "VernacExtend",
            "c87b5425e460458fe084bc53acef712a90641d1f"
        ],
        [
            "rewrite scalE1; auto.",
            "VernacExtend",
            "9a3c36c1cf219db115984967e7e814298c7116fa"
        ],
        [
            "rewrite addE_assoc; auto.",
            "VernacExtend",
            "842a73c55c038ab5ce4a594963522b28d30ef85a"
        ],
        [
            "rewrite <-H; rewrite <-addE_assoc; auto.",
            "VernacExtend",
            "cc00bd20f1166035bee4189197c3e67e04789a8b"
        ],
        [
            "pattern z at 2; rewrite <-(fun xx => scalE1 xx z); auto.",
            "VernacExtend",
            "7b09dfade7ef01ed9c0f144b9c11d96688713e4f"
        ],
        [
            "rewrite <-scal_addEl; auto.",
            "VernacExtend",
            "e0631696f56eb8af0d97e2629b0b44f398244911"
        ],
        [
            "rewrite oppKl; auto.",
            "VernacExtend",
            "8c015511924da5cb3c52f9109b6c6b18311f6a7a"
        ],
        [
            "rewrite scalE0l; auto.",
            "VernacExtend",
            "a43f27d3100d1a65d41627b871d153f52c80670f"
        ],
        [
            "rewrite addE0l; auto.",
            "VernacExtend",
            "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addE_cancelr x y z : x + z = y + z -> x = y.",
            "VernacStartTheoremProof",
            "22dee952cac90aa03c2fc372452c98d0b37c25d4"
        ],
        [
            "intros H; apply addE_cancell with z.",
            "VernacExtend",
            "64b54a2d4e778b7501c8d617e2f322b9634c6bc2"
        ],
        [
            "repeat rewrite (fun xx => addE_com xx z); auto.",
            "VernacExtend",
            "3ee663119084af4a798b93474d66b58cfc992694"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalE0r k : k .* 0 = 0.",
            "VernacStartTheoremProof",
            "6758fb6f56efab56761889878c7b975ec68e742e"
        ],
        [
            "apply addE_cancell with (k .* 0).",
            "VernacExtend",
            "87389f5ef12c223c92adcf608bea64b18f2dd3e3"
        ],
        [
            "rewrite addE0r.",
            "VernacExtend",
            "2cfd1df432b45079856971c7051e6075ae6f97ff"
        ],
        [
            "rewrite <-scal_addEr; auto.",
            "VernacExtend",
            "b49cfcb76fabe539b8b541822d11be9b70b72b61"
        ],
        [
            "rewrite addE0l; auto.",
            "VernacExtend",
            "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scal_addE0 x : x + (- (1)) .* x = 0.",
            "VernacStartTheoremProof",
            "a7f6621913958b47e5f89b9cda9218f932be1b48"
        ],
        [
            "generalize (scal_addEl Hp (1)%f (- (1))%f x).",
            "VernacExtend",
            "5d170078ce4ec6624d140c5538b8135e0a85f6a9"
        ],
        [
            "rewrite oppKr; auto; rewrite scalE1, scalE0l; auto.",
            "VernacExtend",
            "d65378d9e2280386eeac957f6c424be26154bc72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addE_eq_opp x y : x + (-(1)) .* y = 0 -> x = y.",
            "VernacStartTheoremProof",
            "f7135581f5b136d0b6e7d651ae58bf17ee48f099"
        ],
        [
            "intros H; apply addE_cancell with ((-(1)) .* y).",
            "VernacExtend",
            "0132ec0700c801c795e885cbe82eacc6feff2a3b"
        ],
        [
            "rewrite addE_com, H, addE_com, scal_addE0; auto.",
            "VernacExtend",
            "cf7161ef2e45b4036045a58726b52f20bff105a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_S k ks v vs : (k :: ks) *X* (v :: vs) = k .* v + ks *X* vs.",
            "VernacStartTheoremProof",
            "09cd703eb3ae4c1e2879dc074d0e73875a96079a"
        ],
        [
            "assert (Hf: forall ks vs v, fold2 (fun k v r => k .* v + r) ks vs v = v + ks *X* vs).",
            "VernacExtend",
            "84f07cdd6393595893a5ee58b636168fd92841a4"
        ],
        [
            "intros ks1; induction ks1 as [| k1 ks1 IH]; simpl.",
            "VernacExtend",
            "d54b60cfb43c86556c05b92a61cf78107cd4a598"
        ],
        [
            "intros vs1 v1; unfold mprod; simpl; rewrite addE0r; auto.",
            "VernacExtend",
            "f3bb2a942d1fdee4b2a7a08c36ac7affe7d40498"
        ],
        [
            "intros [| v' vs1] v1; unfold mprod; simpl.",
            "VernacExtend",
            "2f90fd9bcc42bd4a6ca68c3843bb6af90627b985"
        ],
        [
            "rewrite addE0r; auto.",
            "VernacExtend",
            "d764407ca9dc09a8081420e7deade8786691c4d4"
        ],
        [
            "rewrite IH; rewrite IH; rewrite addE0r; rewrite (fun xx => addE_com xx v1); auto; repeat rewrite addE_assoc; auto; rewrite (fun xx => addE_com xx v1); auto.",
            "VernacExtend",
            "c287b9766f81e1332699a10dbdf0be7e6e1a3b63"
        ],
        [
            "unfold mprod; simpl.",
            "VernacExtend",
            "c6a3ec1f07d3a3f3e84dbde60bd9336866bc6ebd"
        ],
        [
            "rewrite Hf; rewrite Hf; rewrite addE0r; rewrite addE0l; auto.",
            "VernacExtend",
            "63056de641979a351aad98bc48e27581cd97ce2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod0l vs : nil *X* vs = 0.",
            "VernacStartTheoremProof",
            "90e88fec95efadb1d5cdc1bc98f6e9af8cb4f3f0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod0r ks : ks *X* nil = 0.",
            "VernacStartTheoremProof",
            "56b9dc77657393d8c6ab362ea5126bf0bc33e670"
        ],
        [
            "destruct ks as [| k ks]; auto.",
            "VernacExtend",
            "d26221812d3dc9f22bff0626c65869a6612c095d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod0 vs1 vs2 : map (fun _ : E p => 0%f) vs1 *X* vs2 = 0.",
            "VernacStartTheoremProof",
            "4b01db480201670a5a2d352821b640405b1f1f9b"
        ],
        [
            "generalize vs2; clear vs2.",
            "VernacExtend",
            "2e49d56d4bed05c593a55d7c2b2d1c0562e56c83"
        ],
        [
            "induction vs1 as [| a vs1]; intros [| b vs2]; simpl map; try rewrite mprod0r; auto.",
            "VernacExtend",
            "741640eb7a347c7fe3f84c45ae32ea1a0eceba92"
        ],
        [
            "rewrite mprod_S; rewrite scalE0l; auto; rewrite addE0l; auto.",
            "VernacExtend",
            "2fcab22b213a9e81aaeddde3958b226cd30bc8d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_app ks1 ks2 vs1 vs2 : length ks1 = length vs1 -> (ks1 ++ ks2) *X* (vs1 ++ vs2) = ks1 *X* vs1 + ks2 *X* vs2.",
            "VernacStartTheoremProof",
            "d79e66ac994186f05813fe833ce353b3233d928e"
        ],
        [
            "generalize ks2 vs1 vs2; clear ks2 vs1 vs2.",
            "VernacExtend",
            "8497b3c59c16430434406cb720946804151b43e6"
        ],
        [
            "induction ks1 as [| k ks1 IH]; intros ks2 [| v vs1] vs2 H; try discriminate H.",
            "VernacExtend",
            "e72e80cc7c98e201f40bae76ab5f01d47a218624"
        ],
        [
            "simpl mprod; unfold mprod; simpl; rewrite addE0l; auto.",
            "VernacExtend",
            "de197816dae8acbfb097cbf76acab976b31afa44"
        ],
        [
            "simpl app; rewrite mprod_S; rewrite mprod_S; rewrite IH; auto; rewrite addE_assoc; auto.",
            "VernacExtend",
            "c786b148452ccb07fc454d5adf736d224d809866"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqE_spec x y : eq_Spec x y (x ?= y).",
            "VernacStartTheoremProof",
            "c426db6a54eb58a48c53ef668f3af94ad13a3dd0"
        ],
        [
            "generalize (eqE_dec Hp x y); case eqE; constructor; auto.",
            "VernacExtend",
            "8915c5e363fc3f6cad99cdf550278c21145c3b5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_nil : free nil.",
            "VernacStartTheoremProof",
            "6119a81872805acd99a920984d7d27fd42b56e7a"
        ],
        [
            "intros [| k ks]; auto.",
            "VernacExtend",
            "e1a693e80ac9c4614b837f256c868625e3ef4fca"
        ],
        [
            "intros H1 H2 l Hk; case Hk.",
            "VernacExtend",
            "c675eb92e965a1c7f0758512751aee308f44a0b1"
        ],
        [
            "intros HH; discriminate HH.",
            "VernacExtend",
            "d679be8a3d03c7d754d446ef787a80627b8daa6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_cons v vs : free (v::vs) -> free vs.",
            "VernacStartTheoremProof",
            "e03fd3df78023c6612a8f7be2b568366b1e1fcae"
        ],
        [
            "intros Hvs ks Hlks Hpks k Hk.",
            "VernacExtend",
            "3740dba28a201e2c85f8306ce10abd7ed3f629fd"
        ],
        [
            "apply (Hvs (0%f::ks)); simpl; auto.",
            "VernacExtend",
            "930485cba83dd022127446beb2baf1a7b186dc58"
        ],
        [
            "rewrite mprod_S; rewrite Hpks; rewrite scalE0l; auto; rewrite addE0l; auto.",
            "VernacExtend",
            "bdc425d9015cf8ccffd13a7b2a77b41498c321d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_perm vs1 vs2 : perm vs1 vs2 -> free vs2 -> free vs1.",
            "VernacStartTheoremProof",
            "3ef9ca8c9eefec0fa915b5061a92b72c69eb3633"
        ],
        [
            "intros HH Hvs1.",
            "VernacExtend",
            "2f789972f6b54a155b8e116d816f8b2b02ec4e94"
        ],
        [
            "assert (Hf: forall (k1: list _), length k1 = length vs1 -> exists (k2:list _), perm k1 k2 /\\ k1 *X* vs1 = k2 *X* vs2).",
            "VernacExtend",
            "798acfd9e76bc7f587b4cd78425bea0bc7cbdae2"
        ],
        [
            "elim HH; clear vs1 vs2 HH Hvs1; auto.",
            "VernacExtend",
            "0e72a4abf02aec2e7e7134433d3369ced3921ac6"
        ],
        [
            "intros l k1 Hk1; exists k1; split; auto.",
            "VernacExtend",
            "6403c5e29633c96bd702a4ddb323b58fbc97e177"
        ],
        [
            "apply perm_id.",
            "VernacExtend",
            "c3e43a644e6d64c155cfec87e93bfff22abcd108"
        ],
        [
            "intros a b vs1 [|k1 [| k2 ks1]] Hl; try discriminate Hl.",
            "VernacExtend",
            "83d78fbb2fd6f0e76ea0027b706330d37e7d73f2"
        ],
        [
            "exists (k2::k1::ks1); split; auto.",
            "VernacExtend",
            "2e5751be59c77dc9bfcbb6be7909f7576f5f186b"
        ],
        [
            "apply Aux.perm_swap.",
            "VernacExtend",
            "6a9fdadd225bae6d0e664116c3d9f898a6892d40"
        ],
        [
            "repeat rewrite mprod_S; repeat rewrite <-addE_assoc; auto.",
            "VernacExtend",
            "29edfc8eff2407ce324c72735ae223ad2e1889d3"
        ],
        [
            "rewrite (addE_com Hp (k1 .* a)); auto.",
            "VernacExtend",
            "474b4b1ecb47751b847cbeb837097561628dcf13"
        ],
        [
            "intros a vs1 vs2 Hperm IH [| k1 ks1]; intros HH; try discriminate.",
            "VernacExtend",
            "f8e7bd3f4edd2b45feee92bffdd9077d0cc4642c"
        ],
        [
            "case (IH ks1); auto.",
            "VernacExtend",
            "fc263e3e1f1ad2a316a2be14f7ab2a65974da5fa"
        ],
        [
            "intros ks2 (H1ks2, H2ks2); exists (k1::ks2); split; simpl; auto.",
            "VernacExtend",
            "d315b31ca2aed34adc99d57d2f42d58543dabdd0"
        ],
        [
            "apply Aux.perm_skip; auto.",
            "VernacExtend",
            "55187acf4372b9c21af39d136adcf13c393108fb"
        ],
        [
            "repeat rewrite mprod_S; rewrite H2ks2; auto.",
            "VernacExtend",
            "24b761df6aa6ce8f360e17bcc446d6edf23644da"
        ],
        [
            "intros vs1 vs2 vs3 Hp1 IH1 Hp2 IH2 k1 Hk1.",
            "VernacExtend",
            "a19d0a2ec8a750689f807f0ff917418a96d9db45"
        ],
        [
            "case (IH1 _ Hk1); intros k2 (H1k2, H2k2).",
            "VernacExtend",
            "435e52fb7e59b99ea7c0fa79f4fdf2a1e1a04baf"
        ],
        [
            "assert (Hk2: length k2 = length vs2).",
            "VernacExtend",
            "2113042a78c1cbf9f9416273e5a2f1f5b36228ca"
        ],
        [
            "rewrite <-(perm_length _ _ _ Hp1); rewrite <-(perm_length _ _ _ H1k2); auto.",
            "VernacExtend",
            "82ac5413bb9aca8e48d129b1b3408f5d2cfd5ee0"
        ],
        [
            "case (IH2 _ Hk2); intros k3 (H1k3, H2k3).",
            "VernacExtend",
            "aea37213c903725836c8d1f18c1ba29477880d7b"
        ],
        [
            "exists k3; split.",
            "VernacExtend",
            "9f58b9076ceb63e252d5419f4bbff1d12b2c7618"
        ],
        [
            "apply Aux.perm_trans with (1 := H1k2); auto.",
            "VernacExtend",
            "51cd91bf31c633ac11a4e39669aed68dff283ef5"
        ],
        [
            "rewrite H2k2; auto.",
            "VernacExtend",
            "f91986d17e0fbacc529affab48b49a88a9088adc"
        ],
        [
            "intros ks Hlks Hpks k Hk.",
            "VernacExtend",
            "52140f4e3e7340e0768153912d2706f1e4bd9534"
        ],
        [
            "case (Hf ks); auto.",
            "VernacExtend",
            "1fb75bdc29430a5a5dc3316326957de033494e4a"
        ],
        [
            "intros ks1 (H1ks1, H2ks1).",
            "VernacExtend",
            "f3268f0779cb17f4c509640fef35e2ae8c837a79"
        ],
        [
            "apply (Hvs1 ks1); auto.",
            "VernacExtend",
            "1aa2d0baf5d90c89a6e495034a8531dda5efb825"
        ],
        [
            "rewrite <-(perm_length _ _ _ HH); rewrite <-(perm_length _ _ _ H1ks1); auto.",
            "VernacExtend",
            "1377d847e881ba31997db367b6300034bef0c9fa"
        ],
        [
            "rewrite <-H2ks1; auto.",
            "VernacExtend",
            "f92c283355b71f35139750156a8711a88604db9a"
        ],
        [
            "apply perm_in with ks; auto.",
            "VernacExtend",
            "123f75f8773bba70895d1e36f0c2b0e552a98a40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniq_free vs : free vs -> uniq vs.",
            "VernacStartTheoremProof",
            "16306b24a4b86c38a7fe983d7b86d6d60c58ca05"
        ],
        [
            "induction vs as [| a vs IH]; intros Hf.",
            "VernacExtend",
            "2ed2a4fd015f4474b774dcb5a0d136160ea6ecbd"
        ],
        [
            "apply uniq_nil.",
            "VernacExtend",
            "9a6fbe7e97dff2110f3985be52f4b1a022fd20a1"
        ],
        [
            "apply uniq_cons; auto.",
            "VernacExtend",
            "254111457977534262219293b72bdfce8d692935"
        ],
        [
            "intros HH; case (perm_in_inv _ _ _ HH).",
            "VernacExtend",
            "57b522c186586d34804d4a5d645f9f94cdd9a35c"
        ],
        [
            "intros vs1 Hp1.",
            "VernacExtend",
            "cff8cbadb33a82490f293de09ab04896b5568857"
        ],
        [
            "assert (H1: free (a::a::vs1)).",
            "VernacExtend",
            "594b88acfb7bc741a35532f342d2bf6178c51d98"
        ],
        [
            "apply free_perm with (a::vs); auto.",
            "VernacExtend",
            "016d9461354d20c94ee26fd0f20d9e04ef68302d"
        ],
        [
            "apply Aux.perm_skip; auto.",
            "VernacExtend",
            "55187acf4372b9c21af39d136adcf13c393108fb"
        ],
        [
            "apply perm_sym; auto.",
            "VernacExtend",
            "5e4737560b7441717152cae2c77400759019735e"
        ],
        [
            "case (one_diff_zero _ sfP).",
            "VernacExtend",
            "ee5912180fe82f11fb9bbe14484da81901fc6d9d"
        ],
        [
            "apply (H1 (1%f::(-(1))%f::(map (fun _ => 0%f) vs1))); simpl; auto.",
            "VernacExtend",
            "94c781c6c01e682a7678e22fc8ea295367e5ea83"
        ],
        [
            "rewrite map_length; auto.",
            "VernacExtend",
            "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
        ],
        [
            "repeat rewrite mprod_S; rewrite mprod0.",
            "VernacExtend",
            "35ea764e7fc1f23fa299eda97901fa1b6fc6928e"
        ],
        [
            "rewrite addE0r.",
            "VernacExtend",
            "2cfd1df432b45079856971c7051e6075ae6f97ff"
        ],
        [
            "rewrite <-scal_addEl; auto.",
            "VernacExtend",
            "e0631696f56eb8af0d97e2629b0b44f398244911"
        ],
        [
            "rewrite oppKr; auto.",
            "VernacExtend",
            "1c0346bcba6c3365f55eeb23716a07c59551a95b"
        ],
        [
            "rewrite scalE0l; auto.",
            "VernacExtend",
            "a43f27d3100d1a65d41627b871d153f52c80670f"
        ],
        [
            "apply IH; apply free_cons with a; auto.",
            "VernacExtend",
            "b6a758aadb9be946dde5f7ad30fdb462e715bd22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma free_incl vs1 vs2 : incl vs1 vs2 -> uniq vs1 -> free vs2 -> free vs1.",
            "VernacStartTheoremProof",
            "e5cbbb472bd42d1e9e13f25fec37f8520c916d3d"
        ],
        [
            "intros Hi Hu Hf.",
            "VernacExtend",
            "f8e8ccedf9f4d108e5eb326e56c355a4c3c4f88a"
        ],
        [
            "case (perm_incl_inv _ vs1 vs2); auto.",
            "VernacExtend",
            "a74988e4c15befaf2e33ab53f49f0e27fe02ec49"
        ],
        [
            "apply uniq_free; auto.",
            "VernacExtend",
            "d4e2ff56903734d1b5b5a5afd9a7893301835a0b"
        ],
        [
            "intros vs3 H3 ks Hlks Hpks x Hx.",
            "VernacExtend",
            "e1b05cb461e7c030d13a5596fd2881bb55b90c10"
        ],
        [
            "assert (H1: free (vs1 ++ vs3)).",
            "VernacExtend",
            "0c3336d0eef7ff55cd3f2e8f31022920a7fd5d76"
        ],
        [
            "apply free_perm with (1 := perm_sym _ _ _ H3); auto.",
            "VernacExtend",
            "8f7ce2b80b54d8e03dfad9348cc2a5df87637aec"
        ],
        [
            "apply (H1 (ks ++ map (fun _ => 0%f) vs3)%list); auto with datatypes.",
            "VernacExtend",
            "7b54e18e4131e5a6020dfa8d54d9fd02891ebe86"
        ],
        [
            "repeat rewrite app_length; rewrite map_length; auto.",
            "VernacExtend",
            "0de57d3db230333a5e593bc0d060622cc5ac4a00"
        ],
        [
            "rewrite mprod_app; auto.",
            "VernacExtend",
            "57ec243ebbcd8e6c93e960a6404a0e71d0a5fe4e"
        ],
        [
            "rewrite Hpks; rewrite addE0l; auto.",
            "VernacExtend",
            "31860fca45b6f83518e82c221c9a9c45b3e0c7e1"
        ],
        [
            "rewrite mprod0; auto.",
            "VernacExtend",
            "a6c4154989d50bd6da00daa922e56bac1df93946"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_incl l1 l2 v : incl l1 l2 -> cbl l1 v -> cbl l2 v.",
            "VernacStartTheoremProof",
            "80a1e5a974b73370488eb40c6eb9a12a651d5dbf"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "generalize H1; elim H2; clear H1 H2.",
            "VernacExtend",
            "ff5159074643e8bfa89fd31c89cd5e53d567f9b0"
        ],
        [
            "intros; apply cbl0.",
            "VernacExtend",
            "99e8f4ead649e1ec3978e89c89ceacd91875e314"
        ],
        [
            "intros; apply cbl_in; auto with datatypes.",
            "VernacExtend",
            "8270f50e21366b3735bb25845f65c3b3984fa269"
        ],
        [
            "intros; apply cbl_add; auto.",
            "VernacExtend",
            "161fbfb57f10da1ac08ab8b3f4cc36c7899fa5b5"
        ],
        [
            "intros; apply cbl_scal; auto.",
            "VernacExtend",
            "c5fcf615e98d5a0d923c3da949b649cb55865ed9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl0_inv x : cbl nil x -> x = 0.",
            "VernacStartTheoremProof",
            "5e7c87bb6f8e6b6e5884c46b3a4b75c133f1b2a9"
        ],
        [
            "intros HH; elim HH; simpl; auto.",
            "VernacExtend",
            "f8f27c0df6725e3adfae98f1dfb8cc858a9707c4"
        ],
        [
            "intros v [].",
            "VernacExtend",
            "9186533daeb1e4ccd468f2e1d3aa89a285d8edea"
        ],
        [
            "intros x1 y1 _ H1 _ H2; rewrite H1, H2; rewrite addE0l; auto.",
            "VernacExtend",
            "a9d85f6cf0cbeb17bf3aa19e2767c0107e604b8e"
        ],
        [
            "intros k x1 _ H1; rewrite H1, scalE0r; auto.",
            "VernacExtend",
            "105edf7a466beb5042b11482c4bc22160d5ea00a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_cbl l ks : cbl l (ks *X* l).",
            "VernacStartTheoremProof",
            "94e29ada2f83014ffff9f472576a2d2a6965ac01"
        ],
        [
            "generalize ks; clear ks.",
            "VernacExtend",
            "5d2b4d490ebba753c3f289035c30bb1b153e49a2"
        ],
        [
            "induction l as [| x l1 IH].",
            "VernacExtend",
            "df03d182d625546cd8b58b042f906ea1efc99090"
        ],
        [
            "intros [| k ks]; unfold mprod; simpl; apply cbl0.",
            "VernacExtend",
            "6ecaad34b880e13d715bbb21998877526b6ec811"
        ],
        [
            "intros [| k ks].",
            "VernacExtend",
            "63507cf5fc413ed886a574aaea947ddf1612f7b0"
        ],
        [
            "unfold mprod; simpl; apply cbl0.",
            "VernacExtend",
            "2d703dd20405cb3ec6d750490901d3f1c222fc7e"
        ],
        [
            "rewrite mprod_S; apply cbl_add.",
            "VernacExtend",
            "7ddcd35fdf54e5c46aa39d3b4cd700e7a4a8c364"
        ],
        [
            "apply cbl_scal; apply cbl_in; auto with datatypes.",
            "VernacExtend",
            "329630d4426c6683b8323a4488a53328214292f2"
        ],
        [
            "apply cbl_incl with (2 := IH ks); auto with datatypes.",
            "VernacExtend",
            "251e920a4066cdb703cde6fec6259e556e18617d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addE_mprod ks1 ks2 vs : length ks1 = length ks2 -> map2 (fun k1 k2 => (k1 + k2)%f) ks1 ks2 *X* vs = ks1 *X* vs + ks2 *X* vs.",
            "VernacStartTheoremProof",
            "3965fb851042469162efadbb81e795bb262bbec8"
        ],
        [
            "generalize ks2 vs; clear ks2 vs.",
            "VernacExtend",
            "9ce58fcc1ff749c24681c4ed8a77acdf7b03e012"
        ],
        [
            "induction ks1 as [| k1 ks1 IH]; intros [| k2 ks2].",
            "VernacExtend",
            "a662a765d1080d526aeaa2e7637f0c1cc72ebef4"
        ],
        [
            "intros; unfold mprod; simpl; rewrite addE0l; auto.",
            "VernacExtend",
            "0765b829fdb666c64a735e5f710c2c510924e75a"
        ],
        [
            "intros vs H; discriminate H.",
            "VernacExtend",
            "c023cd91c4630c175229af280856d69c4b6c058a"
        ],
        [
            "intros vs H; discriminate H.",
            "VernacExtend",
            "c023cd91c4630c175229af280856d69c4b6c058a"
        ],
        [
            "simpl length; intros [| v vs] Hl.",
            "VernacExtend",
            "c2691c7a6cc1ba8816a45b1e2277a162d8f80ed0"
        ],
        [
            "unfold mprod; simpl; rewrite addE0l; auto.",
            "VernacExtend",
            "fecfff7350359f69fd0d815c4b8a0806ed386d87"
        ],
        [
            "simpl map2; repeat rewrite mprod_S.",
            "VernacExtend",
            "108f80488c5af5fcae036530755aab482b9749fd"
        ],
        [
            "rewrite scal_addEl; auto; rewrite IH; auto.",
            "VernacExtend",
            "ea725bf326921f7b729099754ef865388c290b4b"
        ],
        [
            "repeat rewrite addE_assoc; auto.",
            "VernacExtend",
            "49dfd1312a5c096eb9be061cd550bbd595cd571b"
        ],
        [
            "apply f_equal2 with (f := addE p); auto.",
            "VernacExtend",
            "4825f3844185f34289cd0598cc3eedbaf8da8a45"
        ],
        [
            "rewrite addE_com; auto; repeat rewrite addE_assoc; auto; apply f_equal2 with (f := addE p); auto.",
            "VernacExtend",
            "ca6517e7f5a2bccc58917e0e778d84a46caec997"
        ],
        [
            "rewrite addE_com; auto.",
            "VernacExtend",
            "fb456b3295b5231b7127abdad0b548a56cd420dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalE_mprod k ks vs : map (fun k1 => (k * k1)%f) ks *X* vs = k .* (ks *X* vs).",
            "VernacStartTheoremProof",
            "0064a1c8c037a75dd5d0314c11dc0232686251fd"
        ],
        [
            "generalize vs; clear vs.",
            "VernacExtend",
            "26131db3d7a72c66a2fbfcd4a3908f965c6f1f22"
        ],
        [
            "induction ks as [| k1 ks IH].",
            "VernacExtend",
            "7764c0bb8ff9ec5bccab61711a053dae02e723f6"
        ],
        [
            "intros; unfold mprod; simpl; rewrite scalE0r; auto.",
            "VernacExtend",
            "7fc4ff45b6221d93023713a6202078a1578a1e2e"
        ],
        [
            "intros [| v vs].",
            "VernacExtend",
            "a9b69ce2f4fb0a9091697c01a4fd85cab0c6ba11"
        ],
        [
            "unfold mprod; simpl; rewrite scalE0r; auto.",
            "VernacExtend",
            "b41be79ca99f4f4e1642337367bb2d4ccf8d93a8"
        ],
        [
            "simpl map; repeat rewrite mprod_S.",
            "VernacExtend",
            "743ef2c1a0807af166bc6991c80e830e4dd00deb"
        ],
        [
            "rewrite scal_multE; auto; rewrite IH; auto.",
            "VernacExtend",
            "004ad4b3dfcb20768966705de9d19060368e036e"
        ],
        [
            "rewrite scal_addEr; auto.",
            "VernacExtend",
            "ac3d8102aaac3f0446086b2a67b608562cc67b92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_perm l1 l2 lk1: perm l1 l2 -> length lk1 = length l1 -> exists lk2, perm lk1 lk2 /\\ lk1 *X* l1 = lk2 *X* l2.",
            "VernacStartTheoremProof",
            "d7232afc4fc7b981b36bd46079c46408d4fdf540"
        ],
        [
            "intros HH; generalize lk1; elim HH; auto; clear l1 l2 lk1 HH.",
            "VernacExtend",
            "5fe5db28821b70e3981206409362d8dfca7f2391"
        ],
        [
            "intros l1 lk1 _; exists lk1; split; auto; apply perm_id.",
            "VernacExtend",
            "bb8cbb83c48f61db9743825b9b61cd10dbefc7e3"
        ],
        [
            "intros a b l1 [| a1 [| b1 lk]] HH; try discriminate HH.",
            "VernacExtend",
            "4cdc16055d73f200dd37515a10eca72f0a06b546"
        ],
        [
            "exists (b1::a1::lk); split; auto.",
            "VernacExtend",
            "430c981dfe30f4463daf63d2ba593e31686e71f3"
        ],
        [
            "apply perm_swap.",
            "VernacExtend",
            "ae31658d1834adacffd39ae0769b514845f20926"
        ],
        [
            "rewrite !mprod_S, <-!addE_assoc, (addE_com Hp (a1 .* a)); auto.",
            "VernacExtend",
            "bd6fb0d0c4afd71f7303f16096d5ac877214ce38"
        ],
        [
            "intros a l1 l2 Hp1 IH [|a1 lk1] Hlk1; try discriminate Hlk1.",
            "VernacExtend",
            "4c32209fac739ba0688f69f3450a370057acd538"
        ],
        [
            "case (IH lk1); auto.",
            "VernacExtend",
            "5b6dc732350762a00c599f6116499fc0f857f4cc"
        ],
        [
            "intros lk2 (H1lk2, H2lk2).",
            "VernacExtend",
            "1134596b93479dc2c9a0cfd64b2bf70452b7f1d9"
        ],
        [
            "exists (a1 :: lk2); repeat split; auto.",
            "VernacExtend",
            "cdc5a5c4ac103ff88eec02d8395455e5b5dcc9f6"
        ],
        [
            "apply perm_skip; auto.",
            "VernacExtend",
            "1654357afb92e41945aa99b59e1f36ede00cf103"
        ],
        [
            "rewrite !mprod_S, H2lk2; auto.",
            "VernacExtend",
            "de031afd0f8dc9f40544fae4b39a15f81d569702"
        ],
        [
            "intros l1 l2 l3 Hp1 IH1 Hp2 IH2 lk1 Hlk1.",
            "VernacExtend",
            "94762e732fa5747fd44fc95e9af90554655952ab"
        ],
        [
            "case (IH1 _ Hlk1); intros lk2 (H1lk2, H2lk2).",
            "VernacExtend",
            "0c90b4c501b6f05a81a4ff34649b3cc4cc925301"
        ],
        [
            "case (IH2 lk2); auto.",
            "VernacExtend",
            "907b24c0b9a71fbc79374d459fbfd0d2d4b50e67"
        ],
        [
            "rewrite <-(perm_length _ _ _ H1lk2), Hlk1.",
            "VernacExtend",
            "b9e78db6aa8f4b3f9eb912cafeb50db126af9581"
        ],
        [
            "apply perm_length; auto.",
            "VernacExtend",
            "e851eb5ca547e1d68f4fbf8d8e57eff5d078ce94"
        ],
        [
            "intros lk3 (H1lk3, H2lk3); exists lk3; split; auto.",
            "VernacExtend",
            "5d995dfe8a2e51e48c45fe8ef83f77578db04982"
        ],
        [
            "apply perm_trans with (1 := H1lk2); auto.",
            "VernacExtend",
            "63227f81b13952e0bdc2de4926d4393cea856cd1"
        ],
        [
            "rewrite H2lk2; auto.",
            "VernacExtend",
            "53474516295ba5c0f8d553ebe381bef1ed9ef763"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint lgenk (n: nat) (k: K p) {struct n} : list (K p) := match n with O => nil | 1 => k :: nil | S n1 => k::lgenk n1 k end.",
            "VernacFixpoint",
            "f760ce7d6dbc4996f9523ed8e1ef3575bfd0de6b"
        ],
        [
            "Lemma lgenk_length n k : length (lgenk n k) = n.",
            "VernacStartTheoremProof",
            "7e2370a56c2888bce7357c77e3e2086bd5e35eb2"
        ],
        [
            "generalize k; clear k.",
            "VernacExtend",
            "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
        ],
        [
            "induction n as [| n IH]; simpl; auto.",
            "VernacExtend",
            "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
        ],
        [
            "intros k; generalize IH; case n; clear n IH; auto.",
            "VernacExtend",
            "b32d8ffc0a0e8b16cf1aec9061f586a15826ce6b"
        ],
        [
            "intros n IH; pattern (S n) at 2; rewrite <- (IH k); auto.",
            "VernacExtend",
            "e290fa542b1e465a8b28d7da4f986c5e17984ea7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma genk0_mprod vs : 0 = lgenk (length vs) 0%f *X* vs.",
            "VernacStartTheoremProof",
            "8681dab865b3f9d8a185ce84cc59f262dfecf087"
        ],
        [
            "induction vs as [| v [| v' vs] IH]; auto; simpl lgenk; rewrite mprod_S; rewrite IH; rewrite scalE0l; auto; rewrite addE0l; auto.",
            "VernacExtend",
            "3c8103d0f315c9ae78cabcb3a92eaa21d0cb6945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_mprod vs v : cbl vs v -> exists ks, length ks = length vs /\\ v = ks *X* vs.",
            "VernacStartTheoremProof",
            "4a011031912baa6fca497c616281fb2a61a6b943"
        ],
        [
            "intros H; elim H.",
            "VernacExtend",
            "c422fffbd8d09eb95223611bdd2c40108abb4884"
        ],
        [
            "exists (lgenk (length vs) 0%f); rewrite lgenk_length; split; auto.",
            "VernacExtend",
            "453c4a7f096c7fcff89e47b25d96bfc6742d0dfd"
        ],
        [
            "apply genk0_mprod.",
            "VernacExtend",
            "7c354ace3dee443aade0c1f845642fa44b80735d"
        ],
        [
            "intros v2; clear H; induction vs as [| v' vs IH]; auto.",
            "VernacExtend",
            "25f2e357a16b8ee7ad2cc0ebb088c0a958c16d4d"
        ],
        [
            "intros HH; absurd (In v2 nil); auto with datatypes.",
            "VernacExtend",
            "7b99ef7c746869a1d62bc471dba2f7a4ca3e1094"
        ],
        [
            "simpl In; intros [H1 | H1].",
            "VernacExtend",
            "813392506ffbfb0800295cb193f1cd9ed2bbb512"
        ],
        [
            "exists (1%f::lgenk (length vs) 0%f); split.",
            "VernacExtend",
            "e9a9e60d1022cf006fec77f8a3d6732ead202e4b"
        ],
        [
            "simpl; rewrite lgenk_length; auto.",
            "VernacExtend",
            "9b13d9ed17ba89841d031030f14323e19de4f77c"
        ],
        [
            "rewrite mprod_S; rewrite scalE1; auto; rewrite <- genk0_mprod; rewrite addE0r; auto.",
            "VernacExtend",
            "3759190d1725f1cbd12ccd499944e478104ce0a8"
        ],
        [
            "case IH; auto; intros ks (Hks, Hks1); exists (0%f::ks); split.",
            "VernacExtend",
            "2feed3582cbdd2e899f6be09316031b92ab50bbc"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite mprod_S; rewrite scalE0l; auto; rewrite addE0l; auto.",
            "VernacExtend",
            "2fcab22b213a9e81aaeddde3958b226cd30bc8d7"
        ],
        [
            "intros x y Hcx (ks1, (Hlks1, Hks1)) Hcy (ks2, (Hlks2, Hks2)).",
            "VernacExtend",
            "91007b76ea73363b388da05391ab3aeacebee200"
        ],
        [
            "exists (map2 (fun k1 k2 => (k1 + k2)%f) ks1 ks2); split.",
            "VernacExtend",
            "37a4fb43f127d632021236540b224b7907d254c4"
        ],
        [
            "rewrite map2_length; rewrite min_l; auto.",
            "VernacExtend",
            "a8fb9ef61ccb8b3e274406205c5c06f8c59e9415"
        ],
        [
            "rewrite Hlks1; rewrite Hlks2; auto with arith.",
            "VernacExtend",
            "716978d2f26e78b259528db9cce9673e9094a15d"
        ],
        [
            "rewrite addE_mprod; try rewrite Hks1; try rewrite Hks2; auto.",
            "VernacExtend",
            "3adbb4269678961a52d99007cc8af4c8dfae12bd"
        ],
        [
            "rewrite Hlks1; auto.",
            "VernacExtend",
            "40acde261088ba9c2354fb18e7d375b88a665f22"
        ],
        [
            "intros k x Hcx (ks, (Hlks, Hks)).",
            "VernacExtend",
            "fffe570214c6b74ae1005e384141dec6d3b412cf"
        ],
        [
            "exists (map (fun k1 => (k * k1)%f) ks); split.",
            "VernacExtend",
            "149270b98c0947c9c3974e8a30ea5c04e5cbc57e"
        ],
        [
            "rewrite map_length; auto.",
            "VernacExtend",
            "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
        ],
        [
            "rewrite scalE_mprod; rewrite Hks; auto.",
            "VernacExtend",
            "2852531220749edd1ab6b5112ee3b2c2fe49814b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalE_add0 x : x + (- (1)) .* x = 0.",
            "VernacStartTheoremProof",
            "941cc21309a2b1c99979eef63455ff458c5b50d4"
        ],
        [
            "pattern x at 1; rewrite <- (fun xx => scalE1 xx x); auto.",
            "VernacExtend",
            "202105680cffbd86fff15ea4f3fd28d12892f8c6"
        ],
        [
            "rewrite <-scal_addEl; auto.",
            "VernacExtend",
            "e0631696f56eb8af0d97e2629b0b44f398244911"
        ],
        [
            "rewrite oppKr; auto.",
            "VernacExtend",
            "1c0346bcba6c3365f55eeb23716a07c59551a95b"
        ],
        [
            "rewrite scalE0l; auto.",
            "VernacExtend",
            "a43f27d3100d1a65d41627b871d153f52c80670f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalE_integral k x : k .* x = 0 -> {k = 0%f} + {x = 0}.",
            "VernacStartTheoremProof",
            "f2582d032399f951d560c71b8d05a3045916fd9c"
        ],
        [
            "intros Hk.",
            "VernacExtend",
            "7bbb2d8e4933b80b00c044560f8b1d8fe5fd5ba1"
        ],
        [
            "generalize (eqK_dec _ sfP k 0%f); case eqK; auto; intros Hk1.",
            "VernacExtend",
            "53097f876e5890a547ea3c5755040ce73b39548d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite <-(scalE1 Hp x).",
            "VernacExtend",
            "114dfc39c87b77f8c3cf0ee5b29ad068a88471e6"
        ],
        [
            "simpl; rewrite <-(invKr _ sfP _ Hk1).",
            "VernacExtend",
            "a38aef4410006ba2c573c18408f80900feb81aa2"
        ],
        [
            "rewrite scal_multE; auto.",
            "VernacExtend",
            "1a5e20f2581a08b740b838fb9d4c61ae88987c19"
        ],
        [
            "rewrite Hk; rewrite scalE0r; auto.",
            "VernacExtend",
            "dfcf68996f1f81bd40eb970a136faf8e120dcfc6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma scalE_opp k1 k2 x : k1 .* ((- (k2)) .* x) = (-k1).* (k2 .* x).",
            "VernacStartTheoremProof",
            "bc39059bcef2b7ce96bc5270f167d24dd95bdafd"
        ],
        [
            "rewrite <- scal_multE, <- opp_multKr, opp_multKl, scal_multE; auto.",
            "VernacExtend",
            "4f6baa22790d5d5791506e7da41653fcb96f41c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scalE_swap k1 k2 x : k1 .* (k2 .* x) = k2 .* (k1 .* x).",
            "VernacStartTheoremProof",
            "394fd3a0f0bdd51130240c34d7671a9fdfcb6720"
        ],
        [
            "repeat rewrite <- scal_multE; auto.",
            "VernacExtend",
            "a649e086c042fb074ffda47ea9321c9d4414fd28"
        ],
        [
            "rewrite multK_com; auto.",
            "VernacExtend",
            "101cba15515a9d835b9963a8591487a473d1eb94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addE_swap x1 x2 x3 : x1 + (x2 + x3) = x2 + (x1 + x3).",
            "VernacStartTheoremProof",
            "e8d51aa936569bc04051482725e535e8e9bc1f82"
        ],
        [
            "rewrite addE_com; auto; repeat rewrite addE_assoc; auto.",
            "VernacExtend",
            "f02d7d45b71ec972eebdab5866917a70e707f570"
        ],
        [
            "apply f_equal2 with (f := addE _); auto; rewrite addE_com; auto.",
            "VernacExtend",
            "080839a941a517a7e44316044efb917ab44601a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cblnil x : cbl nil x -> x = 0.",
            "VernacStartTheoremProof",
            "68d718efa4f70e531d7ac66d0dfab592f58e46be"
        ],
        [
            "intros H; elim H; auto; clear x H.",
            "VernacExtend",
            "653ba8e018a240dc007a6eeebb8b5816c7af8f9f"
        ],
        [
            "intros v [].",
            "VernacExtend",
            "9186533daeb1e4ccd468f2e1d3aa89a285d8edea"
        ],
        [
            "intros x y _ Hx _ Hy; rewrite Hx, Hy; rewrite addE0l; auto.",
            "VernacExtend",
            "dd86cdce9a76835e63464737c631c4b03f69554c"
        ],
        [
            "intros k x _ Hx; rewrite Hx; rewrite scalE0r; auto.",
            "VernacExtend",
            "30310c8167616c76714cf8143081fc7b2cc176a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl1 x y : cbl (x::nil) y -> exists k, y = k .* x.",
            "VernacStartTheoremProof",
            "1ddaab6301bbcdb58b501c88611eab7c45ba92f6"
        ],
        [
            "intros H; elim H; auto; clear y H.",
            "VernacExtend",
            "76f81c8ee48e3563443f16fa4ae8a45fbc24a7c9"
        ],
        [
            "exists 0%f; rewrite scalE0l; auto.",
            "VernacExtend",
            "032d2b58832994caf61f597e9be91ed7844b618b"
        ],
        [
            "simpl; intros v [[]|[]]; exists 1%f; rewrite scalE1; auto.",
            "VernacExtend",
            "4e2a7f7742da1efa3fa0e12c8cc27b7244762c05"
        ],
        [
            "intros x1 y _ (k1,Hk1) _ (k2,Hk2).",
            "VernacExtend",
            "7260c214a4999dd397e57059f64f3c4d23b72a0e"
        ],
        [
            "exists (k1 + k2)%f; subst; rewrite scal_addEl; auto.",
            "VernacExtend",
            "5115a0d72e005a57e33d70ebfde637c9e39e8534"
        ],
        [
            "intros k x1 _ (k1,Hk1); exists (k * k1)%f; rewrite Hk1, scal_multE; auto.",
            "VernacExtend",
            "dde77195f7e27f2b1e83d5fe3a26945e34f85355"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End VectorSpace.",
            "VernacEndSegment",
            "4ac5e36c973996de40e411b14701efb894ab436d"
        ],
        [
            "Notation \" x *X* y \" := (mprod _ x y) (at level 40, no associativity): vector_scope.",
            "VernacNotation",
            "6facacca090ab28526825fd3330bd1b66c7cd1bf"
        ],
        [
            "Section Trans.",
            "VernacBeginSection",
            "aa1070acc4d4e93881c2ac3b71eba6dd1cc7c0c8"
        ],
        [
            "Variable p p1 : eparams.",
            "VernacAssumption",
            "4c267a6e68268343d15709709ce6883260e4bf13"
        ],
        [
            "Hypothesis Hp: vparamsProp p.",
            "VernacAssumption",
            "4f100b1df5a375c6c778b9ff9f96f80cc439733a"
        ],
        [
            "Hypothesis Hp1: vparamsProp p1.",
            "VernacAssumption",
            "a2404195b3df9c714b195969f1aef4a50234d391"
        ],
        [
            "Variable (f: p -> p1).",
            "VernacAssumption",
            "d18fcb6b2ce546ed0b52788db536355c7f3d0f15"
        ],
        [
            "Variable (g : stype p -> stype p1).",
            "VernacAssumption",
            "1b3a37c1d6e0d854cddc76da415532b277826c25"
        ],
        [
            "Variable (g1 : stype p1 -> stype p).",
            "VernacAssumption",
            "1e13ebffbdf738cb8f9562068a22bb31936bb698"
        ],
        [
            "Hypothesis Hf0: f 0%v = 0%v.",
            "VernacAssumption",
            "7b57cc7ef805eb1fbe2117c793b91910f32fc507"
        ],
        [
            "Hypothesis Hf1: forall x y : p, (f (x + y) = f x + f y)%v.",
            "VernacAssumption",
            "2c708a8f945372f73c811ffd5bc277c8bf71fedd"
        ],
        [
            "Hypothesis Hf2: forall (k: stype p) (x : p), (f (k .* x) = g k .* f x)%v.",
            "VernacAssumption",
            "5acb8dbb66084eef02e09dfbfc183212b60398d7"
        ],
        [
            "Hypothesis Hg: forall k, g (g1 k) = k.",
            "VernacAssumption",
            "69da1e68ebc4ea8bb79b36d885485fed5fce3426"
        ],
        [
            "Lemma cbl_map l v : cbl _ l v -> cbl _ (map f l) (f v).",
            "VernacStartTheoremProof",
            "042e395759dd01231ac5f49b37fc3eb132db14e5"
        ],
        [
            "intros Hcb; elim Hcb; auto.",
            "VernacExtend",
            "b0cf2b4c95d7db0295b5a582abaaa05ba6a4c07d"
        ],
        [
            "rewrite Hf0; constructor.",
            "VernacExtend",
            "aef9c467b912699240bba64b8a3b2ba34f656015"
        ],
        [
            "intros v1 Hv1; constructor; apply in_map; auto.",
            "VernacExtend",
            "128087fa0a8baf372c6190c7483c2a64d2a4f0ba"
        ],
        [
            "intros; rewrite Hf1; apply cbl_add; auto.",
            "VernacExtend",
            "d39678c2b64635da6c42aad3ed829e939a991ef0"
        ],
        [
            "intros; rewrite Hf2; apply cbl_scal; auto.",
            "VernacExtend",
            "db8653a0cd00282986fd7c0886e02c98e4099b7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cbl_map_inv l v : cbl _ (map f l) v -> exists v1, cbl _ l v1 /\\ v = f v1.",
            "VernacStartTheoremProof",
            "f93a64d23dc17aaf86d8c9f66ed3b8aad04ca7c1"
        ],
        [
            "assert (exists l1, l1 = map f l).",
            "VernacExtend",
            "b435b9aaa17f5849f4708d4d1c0c58a8a1976c76"
        ],
        [
            "exists (map f l); auto.",
            "VernacExtend",
            "e29454c08784df2b9ae6c2c350931b05f3fce6c2"
        ],
        [
            "case H; intros l1 Hl1; rewrite <-Hl1; intros HH.",
            "VernacExtend",
            "aef482f8e142117364becd6ef5a9f68cefa12e98"
        ],
        [
            "generalize Hl1; elim HH; auto; clear HH Hl1.",
            "VernacExtend",
            "4ae7b83b7b3da2cde33434ee9586545f3f719b55"
        ],
        [
            "intros H1; exists 0%v; split; auto; constructor.",
            "VernacExtend",
            "6464b84f9b55c1c6ad4b80b66a9beef1fe7e3816"
        ],
        [
            "intros v1 Hv1 H1; subst.",
            "VernacExtend",
            "45bfb775c835ba4e8987fd6b9254bee1c0283b53"
        ],
        [
            "rewrite in_map_iff in Hv1; case Hv1; intros v2 (H1v2, H2v2); subst.",
            "VernacExtend",
            "0442351d58aab8dedd89d18312642cb8946b1e94"
        ],
        [
            "exists v2; split; auto; constructor; auto.",
            "VernacExtend",
            "ad286f86174b7ed9ea8726d8894fc58c6e49bd34"
        ],
        [
            "intros c y H1 H2 H3 H4 H5.",
            "VernacExtend",
            "cbbc2ee1077e33c81081c26dc3a7a9f9abd2cff2"
        ],
        [
            "case (H2 H5); intros v1 (H1v1, H2v1).",
            "VernacExtend",
            "30c0e4a6709fc5054a0eaf65c3d84dd3e9708096"
        ],
        [
            "case (H4 H5); intros v2 (H1v2, H2v2); subst.",
            "VernacExtend",
            "0e502f4817a5229aadc1684945ad5319409575b1"
        ],
        [
            "exists (v1 + v2)%v; split; auto.",
            "VernacExtend",
            "edad9895a46a7b69cd64c62fcbcfbb53d9528af7"
        ],
        [
            "apply cbl_add; auto.",
            "VernacExtend",
            "9df6b6a5fe172acffe669b4679999f527312c89c"
        ],
        [
            "intros k x H1 H2 H3.",
            "VernacExtend",
            "868206e896ca79610fca165a1a0624393e577e15"
        ],
        [
            "case (H2 H3); intros v1 (H1v1, H2v1).",
            "VernacExtend",
            "8bab3898017a87cc75fad25139dd2a7d357f0855"
        ],
        [
            "exists ((g1 k).* v1)%v; split; subst; auto.",
            "VernacExtend",
            "24dfebfa14e49220b66aa44248872f4d76a45924"
        ],
        [
            "apply cbl_scal; auto.",
            "VernacExtend",
            "51daf280d91a2a62f959c15ac782759afba31c8e"
        ],
        [
            "rewrite Hf2, Hg; auto.",
            "VernacExtend",
            "b2ee88f25e0919f4d32619d8f3b529e8159a0c1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Trans.",
            "VernacEndSegment",
            "ed4bd6ac7bea444f84ba0d465235fe9bcd908a68"
        ],
        [
            "Structure params: Type := { dim:> nat; K:> fparams }.",
            "VernacInductive",
            "9146d47bdfb30f493856df207d5b71a427c265e1"
        ],
        [
            "Ltac Vrm0 := Krm0; repeat (rewrite addE0l ||rewrite addE0r || rewrite scalE0l|| rewrite scalE0r); auto.",
            "VernacExtend",
            "d9b8d2c9ef4278886f96a7796a0334223eb18eb8"
        ]
    ],
    "proofs": [
        {
            "name": "cbl_trans",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros H1 H2; elim H2; auto.",
                        "VernacExtend",
                        "d885867e4042922da2bc459c312dfccac059dccf"
                    ]
                },
                {
                    "command": [
                        "apply cbl0.",
                        "VernacExtend",
                        "a30a6dc0e0b9363a44a8082e597a09cb39921056"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl_add; auto.",
                        "VernacExtend",
                        "161fbfb57f10da1ac08ab8b3f4cc36c7899fa5b5"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl_scal; auto.",
                        "VernacExtend",
                        "c5fcf615e98d5a0d923c3da949b649cb55865ed9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqE_refl",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "generalize (eqE_dec Hp x x); case eqE; auto.",
                        "VernacExtend",
                        "d9ed31a8fe7951acdc3d627e27d743d14fe92f97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addE0r",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros x; rewrite addE_com; auto; rewrite addE0l; auto.",
                        "VernacExtend",
                        "3f770fa58d96184852723457576ab84aaf1a1df2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addE_cancell",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite <-addE0l; auto.",
                        "VernacExtend",
                        "b2ed8974b1c5040476cf8c17fc5e853065e9fbf3"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(fun xx => scalE0l xx z); auto.",
                        "VernacExtend",
                        "b8726db872c8bad460266f3236f9e012389d3900"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(oppKl _ sfP 1%f); auto.",
                        "VernacExtend",
                        "08df613e670498b35e0813e4624a04294d0d87c3"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_addEl; auto.",
                        "VernacExtend",
                        "c87b5425e460458fe084bc53acef712a90641d1f"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE1; auto.",
                        "VernacExtend",
                        "9a3c36c1cf219db115984967e7e814298c7116fa"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_assoc; auto.",
                        "VernacExtend",
                        "842a73c55c038ab5ce4a594963522b28d30ef85a"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H; rewrite <-addE_assoc; auto.",
                        "VernacExtend",
                        "cc00bd20f1166035bee4189197c3e67e04789a8b"
                    ]
                },
                {
                    "command": [
                        "pattern z at 2; rewrite <-(fun xx => scalE1 xx z); auto.",
                        "VernacExtend",
                        "7b09dfade7ef01ed9c0f144b9c11d96688713e4f"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_addEl; auto.",
                        "VernacExtend",
                        "e0631696f56eb8af0d97e2629b0b44f398244911"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKl; auto.",
                        "VernacExtend",
                        "8c015511924da5cb3c52f9109b6c6b18311f6a7a"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE0l; auto.",
                        "VernacExtend",
                        "a43f27d3100d1a65d41627b871d153f52c80670f"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0l; auto.",
                        "VernacExtend",
                        "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addE_cancelr",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros H; apply addE_cancell with z.",
                        "VernacExtend",
                        "64b54a2d4e778b7501c8d617e2f322b9634c6bc2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun xx => addE_com xx z); auto.",
                        "VernacExtend",
                        "3ee663119084af4a798b93474d66b58cfc992694"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalE0r",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "apply addE_cancell with (k .* 0).",
                        "VernacExtend",
                        "87389f5ef12c223c92adcf608bea64b18f2dd3e3"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0r.",
                        "VernacExtend",
                        "2cfd1df432b45079856971c7051e6075ae6f97ff"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_addEr; auto.",
                        "VernacExtend",
                        "b49cfcb76fabe539b8b541822d11be9b70b72b61"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0l; auto.",
                        "VernacExtend",
                        "d4823ccc0864bb5b17f544f086cd702cb1e2d4d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scal_addE0",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "generalize (scal_addEl Hp (1)%f (- (1))%f x).",
                        "VernacExtend",
                        "5d170078ce4ec6624d140c5538b8135e0a85f6a9"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKr; auto; rewrite scalE1, scalE0l; auto.",
                        "VernacExtend",
                        "d65378d9e2280386eeac957f6c424be26154bc72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addE_eq_opp",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros H; apply addE_cancell with ((-(1)) .* y).",
                        "VernacExtend",
                        "0132ec0700c801c795e885cbe82eacc6feff2a3b"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com, H, addE_com, scal_addE0; auto.",
                        "VernacExtend",
                        "cf7161ef2e45b4036045a58726b52f20bff105a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_S",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "assert (Hf: forall ks vs v, fold2 (fun k v r => k .* v + r) ks vs v = v + ks *X* vs).",
                        "VernacExtend",
                        "84f07cdd6393595893a5ee58b636168fd92841a4"
                    ]
                },
                {
                    "command": [
                        "intros ks1; induction ks1 as [| k1 ks1 IH]; simpl.",
                        "VernacExtend",
                        "d54b60cfb43c86556c05b92a61cf78107cd4a598"
                    ]
                },
                {
                    "command": [
                        "intros vs1 v1; unfold mprod; simpl; rewrite addE0r; auto.",
                        "VernacExtend",
                        "f3bb2a942d1fdee4b2a7a08c36ac7affe7d40498"
                    ]
                },
                {
                    "command": [
                        "intros [| v' vs1] v1; unfold mprod; simpl.",
                        "VernacExtend",
                        "2f90fd9bcc42bd4a6ca68c3843bb6af90627b985"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0r; auto.",
                        "VernacExtend",
                        "d764407ca9dc09a8081420e7deade8786691c4d4"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; rewrite IH; rewrite addE0r; rewrite (fun xx => addE_com xx v1); auto; repeat rewrite addE_assoc; auto; rewrite (fun xx => addE_com xx v1); auto.",
                        "VernacExtend",
                        "c287b9766f81e1332699a10dbdf0be7e6e1a3b63"
                    ]
                },
                {
                    "command": [
                        "unfold mprod; simpl.",
                        "VernacExtend",
                        "c6a3ec1f07d3a3f3e84dbde60bd9336866bc6ebd"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf; rewrite Hf; rewrite addE0r; rewrite addE0l; auto.",
                        "VernacExtend",
                        "63056de641979a351aad98bc48e27581cd97ce2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod0l",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod0r",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "destruct ks as [| k ks]; auto.",
                        "VernacExtend",
                        "d26221812d3dc9f22bff0626c65869a6612c095d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod0",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "generalize vs2; clear vs2.",
                        "VernacExtend",
                        "2e49d56d4bed05c593a55d7c2b2d1c0562e56c83"
                    ]
                },
                {
                    "command": [
                        "induction vs1 as [| a vs1]; intros [| b vs2]; simpl map; try rewrite mprod0r; auto.",
                        "VernacExtend",
                        "741640eb7a347c7fe3f84c45ae32ea1a0eceba92"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; rewrite scalE0l; auto; rewrite addE0l; auto.",
                        "VernacExtend",
                        "2fcab22b213a9e81aaeddde3958b226cd30bc8d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_app",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "generalize ks2 vs1 vs2; clear ks2 vs1 vs2.",
                        "VernacExtend",
                        "8497b3c59c16430434406cb720946804151b43e6"
                    ]
                },
                {
                    "command": [
                        "induction ks1 as [| k ks1 IH]; intros ks2 [| v vs1] vs2 H; try discriminate H.",
                        "VernacExtend",
                        "e72e80cc7c98e201f40bae76ab5f01d47a218624"
                    ]
                },
                {
                    "command": [
                        "simpl mprod; unfold mprod; simpl; rewrite addE0l; auto.",
                        "VernacExtend",
                        "de197816dae8acbfb097cbf76acab976b31afa44"
                    ]
                },
                {
                    "command": [
                        "simpl app; rewrite mprod_S; rewrite mprod_S; rewrite IH; auto; rewrite addE_assoc; auto.",
                        "VernacExtend",
                        "c786b148452ccb07fc454d5adf736d224d809866"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqE_spec",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "generalize (eqE_dec Hp x y); case eqE; constructor; auto.",
                        "VernacExtend",
                        "8915c5e363fc3f6cad99cdf550278c21145c3b5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_nil",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros [| k ks]; auto.",
                        "VernacExtend",
                        "e1a693e80ac9c4614b837f256c868625e3ef4fca"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2 l Hk; case Hk.",
                        "VernacExtend",
                        "c675eb92e965a1c7f0758512751aee308f44a0b1"
                    ]
                },
                {
                    "command": [
                        "intros HH; discriminate HH.",
                        "VernacExtend",
                        "d679be8a3d03c7d754d446ef787a80627b8daa6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_cons",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros Hvs ks Hlks Hpks k Hk.",
                        "VernacExtend",
                        "3740dba28a201e2c85f8306ce10abd7ed3f629fd"
                    ]
                },
                {
                    "command": [
                        "apply (Hvs (0%f::ks)); simpl; auto.",
                        "VernacExtend",
                        "930485cba83dd022127446beb2baf1a7b186dc58"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; rewrite Hpks; rewrite scalE0l; auto; rewrite addE0l; auto.",
                        "VernacExtend",
                        "bdc425d9015cf8ccffd13a7b2a77b41498c321d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_perm",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros HH Hvs1.",
                        "VernacExtend",
                        "2f789972f6b54a155b8e116d816f8b2b02ec4e94"
                    ]
                },
                {
                    "command": [
                        "assert (Hf: forall (k1: list _), length k1 = length vs1 -> exists (k2:list _), perm k1 k2 /\\ k1 *X* vs1 = k2 *X* vs2).",
                        "VernacExtend",
                        "798acfd9e76bc7f587b4cd78425bea0bc7cbdae2"
                    ]
                },
                {
                    "command": [
                        "elim HH; clear vs1 vs2 HH Hvs1; auto.",
                        "VernacExtend",
                        "0e72a4abf02aec2e7e7134433d3369ced3921ac6"
                    ]
                },
                {
                    "command": [
                        "intros l k1 Hk1; exists k1; split; auto.",
                        "VernacExtend",
                        "6403c5e29633c96bd702a4ddb323b58fbc97e177"
                    ]
                },
                {
                    "command": [
                        "apply perm_id.",
                        "VernacExtend",
                        "c3e43a644e6d64c155cfec87e93bfff22abcd108"
                    ]
                },
                {
                    "command": [
                        "intros a b vs1 [|k1 [| k2 ks1]] Hl; try discriminate Hl.",
                        "VernacExtend",
                        "83d78fbb2fd6f0e76ea0027b706330d37e7d73f2"
                    ]
                },
                {
                    "command": [
                        "exists (k2::k1::ks1); split; auto.",
                        "VernacExtend",
                        "2e5751be59c77dc9bfcbb6be7909f7576f5f186b"
                    ]
                },
                {
                    "command": [
                        "apply Aux.perm_swap.",
                        "VernacExtend",
                        "6a9fdadd225bae6d0e664116c3d9f898a6892d40"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mprod_S; repeat rewrite <-addE_assoc; auto.",
                        "VernacExtend",
                        "29edfc8eff2407ce324c72735ae223ad2e1889d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (addE_com Hp (k1 .* a)); auto.",
                        "VernacExtend",
                        "474b4b1ecb47751b847cbeb837097561628dcf13"
                    ]
                },
                {
                    "command": [
                        "intros a vs1 vs2 Hperm IH [| k1 ks1]; intros HH; try discriminate.",
                        "VernacExtend",
                        "f8e7bd3f4edd2b45feee92bffdd9077d0cc4642c"
                    ]
                },
                {
                    "command": [
                        "case (IH ks1); auto.",
                        "VernacExtend",
                        "fc263e3e1f1ad2a316a2be14f7ab2a65974da5fa"
                    ]
                },
                {
                    "command": [
                        "intros ks2 (H1ks2, H2ks2); exists (k1::ks2); split; simpl; auto.",
                        "VernacExtend",
                        "d315b31ca2aed34adc99d57d2f42d58543dabdd0"
                    ]
                },
                {
                    "command": [
                        "apply Aux.perm_skip; auto.",
                        "VernacExtend",
                        "55187acf4372b9c21af39d136adcf13c393108fb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mprod_S; rewrite H2ks2; auto.",
                        "VernacExtend",
                        "24b761df6aa6ce8f360e17bcc446d6edf23644da"
                    ]
                },
                {
                    "command": [
                        "intros vs1 vs2 vs3 Hp1 IH1 Hp2 IH2 k1 Hk1.",
                        "VernacExtend",
                        "a19d0a2ec8a750689f807f0ff917418a96d9db45"
                    ]
                },
                {
                    "command": [
                        "case (IH1 _ Hk1); intros k2 (H1k2, H2k2).",
                        "VernacExtend",
                        "435e52fb7e59b99ea7c0fa79f4fdf2a1e1a04baf"
                    ]
                },
                {
                    "command": [
                        "assert (Hk2: length k2 = length vs2).",
                        "VernacExtend",
                        "2113042a78c1cbf9f9416273e5a2f1f5b36228ca"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(perm_length _ _ _ Hp1); rewrite <-(perm_length _ _ _ H1k2); auto.",
                        "VernacExtend",
                        "82ac5413bb9aca8e48d129b1b3408f5d2cfd5ee0"
                    ]
                },
                {
                    "command": [
                        "case (IH2 _ Hk2); intros k3 (H1k3, H2k3).",
                        "VernacExtend",
                        "aea37213c903725836c8d1f18c1ba29477880d7b"
                    ]
                },
                {
                    "command": [
                        "exists k3; split.",
                        "VernacExtend",
                        "9f58b9076ceb63e252d5419f4bbff1d12b2c7618"
                    ]
                },
                {
                    "command": [
                        "apply Aux.perm_trans with (1 := H1k2); auto.",
                        "VernacExtend",
                        "51cd91bf31c633ac11a4e39669aed68dff283ef5"
                    ]
                },
                {
                    "command": [
                        "rewrite H2k2; auto.",
                        "VernacExtend",
                        "f91986d17e0fbacc529affab48b49a88a9088adc"
                    ]
                },
                {
                    "command": [
                        "intros ks Hlks Hpks k Hk.",
                        "VernacExtend",
                        "52140f4e3e7340e0768153912d2706f1e4bd9534"
                    ]
                },
                {
                    "command": [
                        "case (Hf ks); auto.",
                        "VernacExtend",
                        "1fb75bdc29430a5a5dc3316326957de033494e4a"
                    ]
                },
                {
                    "command": [
                        "intros ks1 (H1ks1, H2ks1).",
                        "VernacExtend",
                        "f3268f0779cb17f4c509640fef35e2ae8c837a79"
                    ]
                },
                {
                    "command": [
                        "apply (Hvs1 ks1); auto.",
                        "VernacExtend",
                        "1aa2d0baf5d90c89a6e495034a8531dda5efb825"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(perm_length _ _ _ HH); rewrite <-(perm_length _ _ _ H1ks1); auto.",
                        "VernacExtend",
                        "1377d847e881ba31997db367b6300034bef0c9fa"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H2ks1; auto.",
                        "VernacExtend",
                        "f92c283355b71f35139750156a8711a88604db9a"
                    ]
                },
                {
                    "command": [
                        "apply perm_in with ks; auto.",
                        "VernacExtend",
                        "123f75f8773bba70895d1e36f0c2b0e552a98a40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniq_free",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "induction vs as [| a vs IH]; intros Hf.",
                        "VernacExtend",
                        "2ed2a4fd015f4474b774dcb5a0d136160ea6ecbd"
                    ]
                },
                {
                    "command": [
                        "apply uniq_nil.",
                        "VernacExtend",
                        "9a6fbe7e97dff2110f3985be52f4b1a022fd20a1"
                    ]
                },
                {
                    "command": [
                        "apply uniq_cons; auto.",
                        "VernacExtend",
                        "254111457977534262219293b72bdfce8d692935"
                    ]
                },
                {
                    "command": [
                        "intros HH; case (perm_in_inv _ _ _ HH).",
                        "VernacExtend",
                        "57b522c186586d34804d4a5d645f9f94cdd9a35c"
                    ]
                },
                {
                    "command": [
                        "intros vs1 Hp1.",
                        "VernacExtend",
                        "cff8cbadb33a82490f293de09ab04896b5568857"
                    ]
                },
                {
                    "command": [
                        "assert (H1: free (a::a::vs1)).",
                        "VernacExtend",
                        "594b88acfb7bc741a35532f342d2bf6178c51d98"
                    ]
                },
                {
                    "command": [
                        "apply free_perm with (a::vs); auto.",
                        "VernacExtend",
                        "016d9461354d20c94ee26fd0f20d9e04ef68302d"
                    ]
                },
                {
                    "command": [
                        "apply Aux.perm_skip; auto.",
                        "VernacExtend",
                        "55187acf4372b9c21af39d136adcf13c393108fb"
                    ]
                },
                {
                    "command": [
                        "apply perm_sym; auto.",
                        "VernacExtend",
                        "5e4737560b7441717152cae2c77400759019735e"
                    ]
                },
                {
                    "command": [
                        "case (one_diff_zero _ sfP).",
                        "VernacExtend",
                        "ee5912180fe82f11fb9bbe14484da81901fc6d9d"
                    ]
                },
                {
                    "command": [
                        "apply (H1 (1%f::(-(1))%f::(map (fun _ => 0%f) vs1))); simpl; auto.",
                        "VernacExtend",
                        "94c781c6c01e682a7678e22fc8ea295367e5ea83"
                    ]
                },
                {
                    "command": [
                        "rewrite map_length; auto.",
                        "VernacExtend",
                        "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mprod_S; rewrite mprod0.",
                        "VernacExtend",
                        "35ea764e7fc1f23fa299eda97901fa1b6fc6928e"
                    ]
                },
                {
                    "command": [
                        "rewrite addE0r.",
                        "VernacExtend",
                        "2cfd1df432b45079856971c7051e6075ae6f97ff"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_addEl; auto.",
                        "VernacExtend",
                        "e0631696f56eb8af0d97e2629b0b44f398244911"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKr; auto.",
                        "VernacExtend",
                        "1c0346bcba6c3365f55eeb23716a07c59551a95b"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE0l; auto.",
                        "VernacExtend",
                        "a43f27d3100d1a65d41627b871d153f52c80670f"
                    ]
                },
                {
                    "command": [
                        "apply IH; apply free_cons with a; auto.",
                        "VernacExtend",
                        "b6a758aadb9be946dde5f7ad30fdb462e715bd22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "free_incl",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intros Hi Hu Hf.",
                        "VernacExtend",
                        "f8e8ccedf9f4d108e5eb326e56c355a4c3c4f88a"
                    ]
                },
                {
                    "command": [
                        "case (perm_incl_inv _ vs1 vs2); auto.",
                        "VernacExtend",
                        "a74988e4c15befaf2e33ab53f49f0e27fe02ec49"
                    ]
                },
                {
                    "command": [
                        "apply uniq_free; auto.",
                        "VernacExtend",
                        "d4e2ff56903734d1b5b5a5afd9a7893301835a0b"
                    ]
                },
                {
                    "command": [
                        "intros vs3 H3 ks Hlks Hpks x Hx.",
                        "VernacExtend",
                        "e1b05cb461e7c030d13a5596fd2881bb55b90c10"
                    ]
                },
                {
                    "command": [
                        "assert (H1: free (vs1 ++ vs3)).",
                        "VernacExtend",
                        "0c3336d0eef7ff55cd3f2e8f31022920a7fd5d76"
                    ]
                },
                {
                    "command": [
                        "apply free_perm with (1 := perm_sym _ _ _ H3); auto.",
                        "VernacExtend",
                        "8f7ce2b80b54d8e03dfad9348cc2a5df87637aec"
                    ]
                },
                {
                    "command": [
                        "apply (H1 (ks ++ map (fun _ => 0%f) vs3)%list); auto with datatypes.",
                        "VernacExtend",
                        "7b54e18e4131e5a6020dfa8d54d9fd02891ebe86"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite app_length; rewrite map_length; auto.",
                        "VernacExtend",
                        "0de57d3db230333a5e593bc0d060622cc5ac4a00"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_app; auto.",
                        "VernacExtend",
                        "57ec243ebbcd8e6c93e960a6404a0e71d0a5fe4e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hpks; rewrite addE0l; auto.",
                        "VernacExtend",
                        "31860fca45b6f83518e82c221c9a9c45b3e0c7e1"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod0; auto.",
                        "VernacExtend",
                        "a6c4154989d50bd6da00daa922e56bac1df93946"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_incl",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "generalize H1; elim H2; clear H1 H2.",
                        "VernacExtend",
                        "ff5159074643e8bfa89fd31c89cd5e53d567f9b0"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl0.",
                        "VernacExtend",
                        "99e8f4ead649e1ec3978e89c89ceacd91875e314"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl_in; auto with datatypes.",
                        "VernacExtend",
                        "8270f50e21366b3735bb25845f65c3b3984fa269"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl_add; auto.",
                        "VernacExtend",
                        "161fbfb57f10da1ac08ab8b3f4cc36c7899fa5b5"
                    ]
                },
                {
                    "command": [
                        "intros; apply cbl_scal; auto.",
                        "VernacExtend",
                        "c5fcf615e98d5a0d923c3da949b649cb55865ed9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl0_inv",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros HH; elim HH; simpl; auto.",
                        "VernacExtend",
                        "f8f27c0df6725e3adfae98f1dfb8cc858a9707c4"
                    ]
                },
                {
                    "command": [
                        "intros v [].",
                        "VernacExtend",
                        "9186533daeb1e4ccd468f2e1d3aa89a285d8edea"
                    ]
                },
                {
                    "command": [
                        "intros x1 y1 _ H1 _ H2; rewrite H1, H2; rewrite addE0l; auto.",
                        "VernacExtend",
                        "a9d85f6cf0cbeb17bf3aa19e2767c0107e604b8e"
                    ]
                },
                {
                    "command": [
                        "intros k x1 _ H1; rewrite H1, scalE0r; auto.",
                        "VernacExtend",
                        "105edf7a466beb5042b11482c4bc22160d5ea00a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_cbl",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "generalize ks; clear ks.",
                        "VernacExtend",
                        "5d2b4d490ebba753c3f289035c30bb1b153e49a2"
                    ]
                },
                {
                    "command": [
                        "induction l as [| x l1 IH].",
                        "VernacExtend",
                        "df03d182d625546cd8b58b042f906ea1efc99090"
                    ]
                },
                {
                    "command": [
                        "intros [| k ks]; unfold mprod; simpl; apply cbl0.",
                        "VernacExtend",
                        "6ecaad34b880e13d715bbb21998877526b6ec811"
                    ]
                },
                {
                    "command": [
                        "intros [| k ks].",
                        "VernacExtend",
                        "63507cf5fc413ed886a574aaea947ddf1612f7b0"
                    ]
                },
                {
                    "command": [
                        "unfold mprod; simpl; apply cbl0.",
                        "VernacExtend",
                        "2d703dd20405cb3ec6d750490901d3f1c222fc7e"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; apply cbl_add.",
                        "VernacExtend",
                        "7ddcd35fdf54e5c46aa39d3b4cd700e7a4a8c364"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal; apply cbl_in; auto with datatypes.",
                        "VernacExtend",
                        "329630d4426c6683b8323a4488a53328214292f2"
                    ]
                },
                {
                    "command": [
                        "apply cbl_incl with (2 := IH ks); auto with datatypes.",
                        "VernacExtend",
                        "251e920a4066cdb703cde6fec6259e556e18617d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addE_mprod",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "generalize ks2 vs; clear ks2 vs.",
                        "VernacExtend",
                        "9ce58fcc1ff749c24681c4ed8a77acdf7b03e012"
                    ]
                },
                {
                    "command": [
                        "induction ks1 as [| k1 ks1 IH]; intros [| k2 ks2].",
                        "VernacExtend",
                        "a662a765d1080d526aeaa2e7637f0c1cc72ebef4"
                    ]
                },
                {
                    "command": [
                        "intros; unfold mprod; simpl; rewrite addE0l; auto.",
                        "VernacExtend",
                        "0765b829fdb666c64a735e5f710c2c510924e75a"
                    ]
                },
                {
                    "command": [
                        "intros vs H; discriminate H.",
                        "VernacExtend",
                        "c023cd91c4630c175229af280856d69c4b6c058a"
                    ]
                },
                {
                    "command": [
                        "intros vs H; discriminate H.",
                        "VernacExtend",
                        "c023cd91c4630c175229af280856d69c4b6c058a"
                    ]
                },
                {
                    "command": [
                        "simpl length; intros [| v vs] Hl.",
                        "VernacExtend",
                        "c2691c7a6cc1ba8816a45b1e2277a162d8f80ed0"
                    ]
                },
                {
                    "command": [
                        "unfold mprod; simpl; rewrite addE0l; auto.",
                        "VernacExtend",
                        "fecfff7350359f69fd0d815c4b8a0806ed386d87"
                    ]
                },
                {
                    "command": [
                        "simpl map2; repeat rewrite mprod_S.",
                        "VernacExtend",
                        "108f80488c5af5fcae036530755aab482b9749fd"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_addEl; auto; rewrite IH; auto.",
                        "VernacExtend",
                        "ea725bf326921f7b729099754ef865388c290b4b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite addE_assoc; auto.",
                        "VernacExtend",
                        "49dfd1312a5c096eb9be061cd550bbd595cd571b"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := addE p); auto.",
                        "VernacExtend",
                        "4825f3844185f34289cd0598cc3eedbaf8da8a45"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto; repeat rewrite addE_assoc; auto; apply f_equal2 with (f := addE p); auto.",
                        "VernacExtend",
                        "ca6517e7f5a2bccc58917e0e778d84a46caec997"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_com; auto.",
                        "VernacExtend",
                        "fb456b3295b5231b7127abdad0b548a56cd420dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalE_mprod",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "generalize vs; clear vs.",
                        "VernacExtend",
                        "26131db3d7a72c66a2fbfcd4a3908f965c6f1f22"
                    ]
                },
                {
                    "command": [
                        "induction ks as [| k1 ks IH].",
                        "VernacExtend",
                        "7764c0bb8ff9ec5bccab61711a053dae02e723f6"
                    ]
                },
                {
                    "command": [
                        "intros; unfold mprod; simpl; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "7fc4ff45b6221d93023713a6202078a1578a1e2e"
                    ]
                },
                {
                    "command": [
                        "intros [| v vs].",
                        "VernacExtend",
                        "a9b69ce2f4fb0a9091697c01a4fd85cab0c6ba11"
                    ]
                },
                {
                    "command": [
                        "unfold mprod; simpl; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "b41be79ca99f4f4e1642337367bb2d4ccf8d93a8"
                    ]
                },
                {
                    "command": [
                        "simpl map; repeat rewrite mprod_S.",
                        "VernacExtend",
                        "743ef2c1a0807af166bc6991c80e830e4dd00deb"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_multE; auto; rewrite IH; auto.",
                        "VernacExtend",
                        "004ad4b3dfcb20768966705de9d19060368e036e"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_addEr; auto.",
                        "VernacExtend",
                        "ac3d8102aaac3f0446086b2a67b608562cc67b92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_perm",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "intros HH; generalize lk1; elim HH; auto; clear l1 l2 lk1 HH.",
                        "VernacExtend",
                        "5fe5db28821b70e3981206409362d8dfca7f2391"
                    ]
                },
                {
                    "command": [
                        "intros l1 lk1 _; exists lk1; split; auto; apply perm_id.",
                        "VernacExtend",
                        "bb8cbb83c48f61db9743825b9b61cd10dbefc7e3"
                    ]
                },
                {
                    "command": [
                        "intros a b l1 [| a1 [| b1 lk]] HH; try discriminate HH.",
                        "VernacExtend",
                        "4cdc16055d73f200dd37515a10eca72f0a06b546"
                    ]
                },
                {
                    "command": [
                        "exists (b1::a1::lk); split; auto.",
                        "VernacExtend",
                        "430c981dfe30f4463daf63d2ba593e31686e71f3"
                    ]
                },
                {
                    "command": [
                        "apply perm_swap.",
                        "VernacExtend",
                        "ae31658d1834adacffd39ae0769b514845f20926"
                    ]
                },
                {
                    "command": [
                        "rewrite !mprod_S, <-!addE_assoc, (addE_com Hp (a1 .* a)); auto.",
                        "VernacExtend",
                        "bd6fb0d0c4afd71f7303f16096d5ac877214ce38"
                    ]
                },
                {
                    "command": [
                        "intros a l1 l2 Hp1 IH [|a1 lk1] Hlk1; try discriminate Hlk1.",
                        "VernacExtend",
                        "4c32209fac739ba0688f69f3450a370057acd538"
                    ]
                },
                {
                    "command": [
                        "case (IH lk1); auto.",
                        "VernacExtend",
                        "5b6dc732350762a00c599f6116499fc0f857f4cc"
                    ]
                },
                {
                    "command": [
                        "intros lk2 (H1lk2, H2lk2).",
                        "VernacExtend",
                        "1134596b93479dc2c9a0cfd64b2bf70452b7f1d9"
                    ]
                },
                {
                    "command": [
                        "exists (a1 :: lk2); repeat split; auto.",
                        "VernacExtend",
                        "cdc5a5c4ac103ff88eec02d8395455e5b5dcc9f6"
                    ]
                },
                {
                    "command": [
                        "apply perm_skip; auto.",
                        "VernacExtend",
                        "1654357afb92e41945aa99b59e1f36ede00cf103"
                    ]
                },
                {
                    "command": [
                        "rewrite !mprod_S, H2lk2; auto.",
                        "VernacExtend",
                        "de031afd0f8dc9f40544fae4b39a15f81d569702"
                    ]
                },
                {
                    "command": [
                        "intros l1 l2 l3 Hp1 IH1 Hp2 IH2 lk1 Hlk1.",
                        "VernacExtend",
                        "94762e732fa5747fd44fc95e9af90554655952ab"
                    ]
                },
                {
                    "command": [
                        "case (IH1 _ Hlk1); intros lk2 (H1lk2, H2lk2).",
                        "VernacExtend",
                        "0c90b4c501b6f05a81a4ff34649b3cc4cc925301"
                    ]
                },
                {
                    "command": [
                        "case (IH2 lk2); auto.",
                        "VernacExtend",
                        "907b24c0b9a71fbc79374d459fbfd0d2d4b50e67"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(perm_length _ _ _ H1lk2), Hlk1.",
                        "VernacExtend",
                        "b9e78db6aa8f4b3f9eb912cafeb50db126af9581"
                    ]
                },
                {
                    "command": [
                        "apply perm_length; auto.",
                        "VernacExtend",
                        "e851eb5ca547e1d68f4fbf8d8e57eff5d078ce94"
                    ]
                },
                {
                    "command": [
                        "intros lk3 (H1lk3, H2lk3); exists lk3; split; auto.",
                        "VernacExtend",
                        "5d995dfe8a2e51e48c45fe8ef83f77578db04982"
                    ]
                },
                {
                    "command": [
                        "apply perm_trans with (1 := H1lk2); auto.",
                        "VernacExtend",
                        "63227f81b13952e0bdc2de4926d4393cea856cd1"
                    ]
                },
                {
                    "command": [
                        "rewrite H2lk2; auto.",
                        "VernacExtend",
                        "53474516295ba5c0f8d553ebe381bef1ed9ef763"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lgenk_length",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "generalize k; clear k.",
                        "VernacExtend",
                        "795f6c43a4686d830d7912ca9e2282ae4aec9b91"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n IH]; simpl; auto.",
                        "VernacExtend",
                        "bc286bc7851c1ac90cc9968d608e9f1cf83c827b"
                    ]
                },
                {
                    "command": [
                        "intros k; generalize IH; case n; clear n IH; auto.",
                        "VernacExtend",
                        "b32d8ffc0a0e8b16cf1aec9061f586a15826ce6b"
                    ]
                },
                {
                    "command": [
                        "intros n IH; pattern (S n) at 2; rewrite <- (IH k); auto.",
                        "VernacExtend",
                        "e290fa542b1e465a8b28d7da4f986c5e17984ea7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "genk0_mprod",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "induction vs as [| v [| v' vs] IH]; auto; simpl lgenk; rewrite mprod_S; rewrite IH; rewrite scalE0l; auto; rewrite addE0l; auto.",
                        "VernacExtend",
                        "3c8103d0f315c9ae78cabcb3a92eaa21d0cb6945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_mprod",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros H; elim H.",
                        "VernacExtend",
                        "c422fffbd8d09eb95223611bdd2c40108abb4884"
                    ]
                },
                {
                    "command": [
                        "exists (lgenk (length vs) 0%f); rewrite lgenk_length; split; auto.",
                        "VernacExtend",
                        "453c4a7f096c7fcff89e47b25d96bfc6742d0dfd"
                    ]
                },
                {
                    "command": [
                        "apply genk0_mprod.",
                        "VernacExtend",
                        "7c354ace3dee443aade0c1f845642fa44b80735d"
                    ]
                },
                {
                    "command": [
                        "intros v2; clear H; induction vs as [| v' vs IH]; auto.",
                        "VernacExtend",
                        "25f2e357a16b8ee7ad2cc0ebb088c0a958c16d4d"
                    ]
                },
                {
                    "command": [
                        "intros HH; absurd (In v2 nil); auto with datatypes.",
                        "VernacExtend",
                        "7b99ef7c746869a1d62bc471dba2f7a4ca3e1094"
                    ]
                },
                {
                    "command": [
                        "simpl In; intros [H1 | H1].",
                        "VernacExtend",
                        "813392506ffbfb0800295cb193f1cd9ed2bbb512"
                    ]
                },
                {
                    "command": [
                        "exists (1%f::lgenk (length vs) 0%f); split.",
                        "VernacExtend",
                        "e9a9e60d1022cf006fec77f8a3d6732ead202e4b"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite lgenk_length; auto.",
                        "VernacExtend",
                        "9b13d9ed17ba89841d031030f14323e19de4f77c"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; rewrite scalE1; auto; rewrite <- genk0_mprod; rewrite addE0r; auto.",
                        "VernacExtend",
                        "3759190d1725f1cbd12ccd499944e478104ce0a8"
                    ]
                },
                {
                    "command": [
                        "case IH; auto; intros ks (Hks, Hks1); exists (0%f::ks); split.",
                        "VernacExtend",
                        "2feed3582cbdd2e899f6be09316031b92ab50bbc"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "rewrite mprod_S; rewrite scalE0l; auto; rewrite addE0l; auto.",
                        "VernacExtend",
                        "2fcab22b213a9e81aaeddde3958b226cd30bc8d7"
                    ]
                },
                {
                    "command": [
                        "intros x y Hcx (ks1, (Hlks1, Hks1)) Hcy (ks2, (Hlks2, Hks2)).",
                        "VernacExtend",
                        "91007b76ea73363b388da05391ab3aeacebee200"
                    ]
                },
                {
                    "command": [
                        "exists (map2 (fun k1 k2 => (k1 + k2)%f) ks1 ks2); split.",
                        "VernacExtend",
                        "37a4fb43f127d632021236540b224b7907d254c4"
                    ]
                },
                {
                    "command": [
                        "rewrite map2_length; rewrite min_l; auto.",
                        "VernacExtend",
                        "a8fb9ef61ccb8b3e274406205c5c06f8c59e9415"
                    ]
                },
                {
                    "command": [
                        "rewrite Hlks1; rewrite Hlks2; auto with arith.",
                        "VernacExtend",
                        "716978d2f26e78b259528db9cce9673e9094a15d"
                    ]
                },
                {
                    "command": [
                        "rewrite addE_mprod; try rewrite Hks1; try rewrite Hks2; auto.",
                        "VernacExtend",
                        "3adbb4269678961a52d99007cc8af4c8dfae12bd"
                    ]
                },
                {
                    "command": [
                        "rewrite Hlks1; auto.",
                        "VernacExtend",
                        "40acde261088ba9c2354fb18e7d375b88a665f22"
                    ]
                },
                {
                    "command": [
                        "intros k x Hcx (ks, (Hlks, Hks)).",
                        "VernacExtend",
                        "fffe570214c6b74ae1005e384141dec6d3b412cf"
                    ]
                },
                {
                    "command": [
                        "exists (map (fun k1 => (k * k1)%f) ks); split.",
                        "VernacExtend",
                        "149270b98c0947c9c3974e8a30ea5c04e5cbc57e"
                    ]
                },
                {
                    "command": [
                        "rewrite map_length; auto.",
                        "VernacExtend",
                        "a8f663493a4d48cfa67dcfb6c8f4b888dd591a6c"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE_mprod; rewrite Hks; auto.",
                        "VernacExtend",
                        "2852531220749edd1ab6b5112ee3b2c2fe49814b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalE_add0",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "pattern x at 1; rewrite <- (fun xx => scalE1 xx x); auto.",
                        "VernacExtend",
                        "202105680cffbd86fff15ea4f3fd28d12892f8c6"
                    ]
                },
                {
                    "command": [
                        "rewrite <-scal_addEl; auto.",
                        "VernacExtend",
                        "e0631696f56eb8af0d97e2629b0b44f398244911"
                    ]
                },
                {
                    "command": [
                        "rewrite oppKr; auto.",
                        "VernacExtend",
                        "1c0346bcba6c3365f55eeb23716a07c59551a95b"
                    ]
                },
                {
                    "command": [
                        "rewrite scalE0l; auto.",
                        "VernacExtend",
                        "a43f27d3100d1a65d41627b871d153f52c80670f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalE_integral",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "intros Hk.",
                        "VernacExtend",
                        "7bbb2d8e4933b80b00c044560f8b1d8fe5fd5ba1"
                    ]
                },
                {
                    "command": [
                        "generalize (eqK_dec _ sfP k 0%f); case eqK; auto; intros Hk1.",
                        "VernacExtend",
                        "53097f876e5890a547ea3c5755040ce73b39548d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite <-(scalE1 Hp x).",
                        "VernacExtend",
                        "114dfc39c87b77f8c3cf0ee5b29ad068a88471e6"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <-(invKr _ sfP _ Hk1).",
                        "VernacExtend",
                        "a38aef4410006ba2c573c18408f80900feb81aa2"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_multE; auto.",
                        "VernacExtend",
                        "1a5e20f2581a08b740b838fb9d4c61ae88987c19"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "dfcf68996f1f81bd40eb970a136faf8e120dcfc6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "scalE_opp",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "rewrite <- scal_multE, <- opp_multKr, opp_multKl, scal_multE; auto.",
                        "VernacExtend",
                        "4f6baa22790d5d5791506e7da41653fcb96f41c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalE_swap",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- scal_multE; auto.",
                        "VernacExtend",
                        "a649e086c042fb074ffda47ea9321c9d4414fd28"
                    ]
                },
                {
                    "command": [
                        "rewrite multK_com; auto.",
                        "VernacExtend",
                        "101cba15515a9d835b9963a8591487a473d1eb94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addE_swap",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "rewrite addE_com; auto; repeat rewrite addE_assoc; auto.",
                        "VernacExtend",
                        "f02d7d45b71ec972eebdab5866917a70e707f570"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := addE _); auto; rewrite addE_com; auto.",
                        "VernacExtend",
                        "080839a941a517a7e44316044efb917ab44601a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cblnil",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; auto; clear x H.",
                        "VernacExtend",
                        "653ba8e018a240dc007a6eeebb8b5816c7af8f9f"
                    ]
                },
                {
                    "command": [
                        "intros v [].",
                        "VernacExtend",
                        "9186533daeb1e4ccd468f2e1d3aa89a285d8edea"
                    ]
                },
                {
                    "command": [
                        "intros x y _ Hx _ Hy; rewrite Hx, Hy; rewrite addE0l; auto.",
                        "VernacExtend",
                        "dd86cdce9a76835e63464737c631c4b03f69554c"
                    ]
                },
                {
                    "command": [
                        "intros k x _ Hx; rewrite Hx; rewrite scalE0r; auto.",
                        "VernacExtend",
                        "30310c8167616c76714cf8143081fc7b2cc176a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl1",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros H; elim H; auto; clear y H.",
                        "VernacExtend",
                        "76f81c8ee48e3563443f16fa4ae8a45fbc24a7c9"
                    ]
                },
                {
                    "command": [
                        "exists 0%f; rewrite scalE0l; auto.",
                        "VernacExtend",
                        "032d2b58832994caf61f597e9be91ed7844b618b"
                    ]
                },
                {
                    "command": [
                        "simpl; intros v [[]|[]]; exists 1%f; rewrite scalE1; auto.",
                        "VernacExtend",
                        "4e2a7f7742da1efa3fa0e12c8cc27b7244762c05"
                    ]
                },
                {
                    "command": [
                        "intros x1 y _ (k1,Hk1) _ (k2,Hk2).",
                        "VernacExtend",
                        "7260c214a4999dd397e57059f64f3c4d23b72a0e"
                    ]
                },
                {
                    "command": [
                        "exists (k1 + k2)%f; subst; rewrite scal_addEl; auto.",
                        "VernacExtend",
                        "5115a0d72e005a57e33d70ebfde637c9e39e8534"
                    ]
                },
                {
                    "command": [
                        "intros k x1 _ (k1,Hk1); exists (k * k1)%f; rewrite Hk1, scal_multE; auto.",
                        "VernacExtend",
                        "dde77195f7e27f2b1e83d5fe3a26945e34f85355"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_map",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros Hcb; elim Hcb; auto.",
                        "VernacExtend",
                        "b0cf2b4c95d7db0295b5a582abaaa05ba6a4c07d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf0; constructor.",
                        "VernacExtend",
                        "aef9c467b912699240bba64b8a3b2ba34f656015"
                    ]
                },
                {
                    "command": [
                        "intros v1 Hv1; constructor; apply in_map; auto.",
                        "VernacExtend",
                        "128087fa0a8baf372c6190c7483c2a64d2a4f0ba"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Hf1; apply cbl_add; auto.",
                        "VernacExtend",
                        "d39678c2b64635da6c42aad3ed829e939a991ef0"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Hf2; apply cbl_scal; auto.",
                        "VernacExtend",
                        "db8653a0cd00282986fd7c0886e02c98e4099b7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cbl_map_inv",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "assert (exists l1, l1 = map f l).",
                        "VernacExtend",
                        "b435b9aaa17f5849f4708d4d1c0c58a8a1976c76"
                    ]
                },
                {
                    "command": [
                        "exists (map f l); auto.",
                        "VernacExtend",
                        "e29454c08784df2b9ae6c2c350931b05f3fce6c2"
                    ]
                },
                {
                    "command": [
                        "case H; intros l1 Hl1; rewrite <-Hl1; intros HH.",
                        "VernacExtend",
                        "aef482f8e142117364becd6ef5a9f68cefa12e98"
                    ]
                },
                {
                    "command": [
                        "generalize Hl1; elim HH; auto; clear HH Hl1.",
                        "VernacExtend",
                        "4ae7b83b7b3da2cde33434ee9586545f3f719b55"
                    ]
                },
                {
                    "command": [
                        "intros H1; exists 0%v; split; auto; constructor.",
                        "VernacExtend",
                        "6464b84f9b55c1c6ad4b80b66a9beef1fe7e3816"
                    ]
                },
                {
                    "command": [
                        "intros v1 Hv1 H1; subst.",
                        "VernacExtend",
                        "45bfb775c835ba4e8987fd6b9254bee1c0283b53"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in Hv1; case Hv1; intros v2 (H1v2, H2v2); subst.",
                        "VernacExtend",
                        "0442351d58aab8dedd89d18312642cb8946b1e94"
                    ]
                },
                {
                    "command": [
                        "exists v2; split; auto; constructor; auto.",
                        "VernacExtend",
                        "ad286f86174b7ed9ea8726d8894fc58c6e49bd34"
                    ]
                },
                {
                    "command": [
                        "intros c y H1 H2 H3 H4 H5.",
                        "VernacExtend",
                        "cbbc2ee1077e33c81081c26dc3a7a9f9abd2cff2"
                    ]
                },
                {
                    "command": [
                        "case (H2 H5); intros v1 (H1v1, H2v1).",
                        "VernacExtend",
                        "30c0e4a6709fc5054a0eaf65c3d84dd3e9708096"
                    ]
                },
                {
                    "command": [
                        "case (H4 H5); intros v2 (H1v2, H2v2); subst.",
                        "VernacExtend",
                        "0e502f4817a5229aadc1684945ad5319409575b1"
                    ]
                },
                {
                    "command": [
                        "exists (v1 + v2)%v; split; auto.",
                        "VernacExtend",
                        "edad9895a46a7b69cd64c62fcbcfbb53d9528af7"
                    ]
                },
                {
                    "command": [
                        "apply cbl_add; auto.",
                        "VernacExtend",
                        "9df6b6a5fe172acffe669b4679999f527312c89c"
                    ]
                },
                {
                    "command": [
                        "intros k x H1 H2 H3.",
                        "VernacExtend",
                        "868206e896ca79610fca165a1a0624393e577e15"
                    ]
                },
                {
                    "command": [
                        "case (H2 H3); intros v1 (H1v1, H2v1).",
                        "VernacExtend",
                        "8bab3898017a87cc75fad25139dd2a7d357f0855"
                    ]
                },
                {
                    "command": [
                        "exists ((g1 k).* v1)%v; split; subst; auto.",
                        "VernacExtend",
                        "24dfebfa14e49220b66aa44248872f4d76a45924"
                    ]
                },
                {
                    "command": [
                        "apply cbl_scal; auto.",
                        "VernacExtend",
                        "51daf280d91a2a62f959c15ac782759afba31c8e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf2, Hg; auto.",
                        "VernacExtend",
                        "b2ee88f25e0919f4d32619d8f3b529e8159a0c1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}