{
    "filename": "Essentials/Facts_Tactics.v",
    "coq_project": "Categories",
    "vernac_cmds": [
        [
            "From Categories Require Import Essentials.Notations.",
            "VernacRequire",
            "7ba2827a321d80d762022e4b433f0b210e0d44ef"
        ],
        [
            "From Categories Require Import Essentials.Types.",
            "VernacRequire",
            "43e8a9f337824e7b700ef760d90ba6f2c95a4a7e"
        ],
        [
            "Require Export Coq.Program.Tactics.",
            "VernacRequire",
            "3434873605d9de32248aa6856e689b33d93ed958"
        ],
        [
            "Require Export Coq.Program.Equality.",
            "VernacRequire",
            "db4f8fe04532ef40d0953125640625a46cdd70a7"
        ],
        [
            "Require Export Coq.Logic.FunctionalExtensionality.",
            "VernacRequire",
            "9ba52a575f16d0ba1f8c5191b57a8dace7df68f0"
        ],
        [
            "Require Export Coq.Logic.ProofIrrelevance.",
            "VernacRequire",
            "b6c075a7dfaadd3888b69520ca3582b6115202cc"
        ],
        [
            "Definition equal_f : \u2200 {A B : Type} {f g : A \u2192 B}, f = g \u2192 \u2200 x : A, f x = g x.",
            "VernacDefinition",
            "fe9a4febefce41cbde14bcbe5350c5ac81580538"
        ],
        [
            "intros A B f g H x.",
            "VernacExtend",
            "09c527c3caf7294dae29dae963995051dc42b0dc"
        ],
        [
            "destruct H; reflexivity.",
            "VernacExtend",
            "6380e8fb07e3e11b45a8938b5a219a86698d2b18"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition f_equal : \u2200 (A B : Type) (f : A \u2192 B) (x y : A), x = y \u2192 f x = f y.",
            "VernacDefinition",
            "4c6e158e0a0b9d53129bf4b2c4d4c30fbaa500d1"
        ],
        [
            "intros A B f x y H.",
            "VernacExtend",
            "9919fd3b24f391c3ec5e4fb392dbd59c6d4de2d5"
        ],
        [
            "destruct H; reflexivity.",
            "VernacExtend",
            "6380e8fb07e3e11b45a8938b5a219a86698d2b18"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Arguments f_equal [_ _] _ [_ _] _.",
            "VernacArguments",
            "c4dfdb8989c65a9d5ebfcf84961ffc481c8103c0"
        ],
        [
            "Ltac basic_simpl := let simpl_prod _ := match goal with [H : prod _ _ |- _] => let H1 := fresh H \"1\" in let H2 := fresh H \"2\" in destruct H as [H1 H2] end in let simpl_sig _ := match goal with [H : @sig _ _ |- _] => let H1 := fresh H \"1\" in let H2 := fresh H \"2\" in destruct H as [H1 H2] end in let basic_simpl_helper _ := cbn in *; intros; repeat simpl_prod tt; repeat simpl_sig tt in repeat basic_simpl_helper tt .",
            "VernacExtend",
            "ab7136b5c85795847c56f624b554b491e16fda61"
        ],
        [
            "Global Obligation Tactic := basic_simpl; auto.",
            "VernacExtend",
            "fa25be3759a89a816eb5fb2dae0bb8e73b4bc180"
        ],
        [
            "Ltac PIR := let pir_helper _ := match goal with |[H : ?A, H' : ?A|- _] => match type of A with | Prop => destruct (proof_irrelevance _ H H') end end in repeat pir_helper tt .",
            "VernacExtend",
            "28adea30ff97645ecd6e7467497a100504cd27b9"
        ],
        [
            "Ltac ElimEq := repeat match goal with [H : _ = _|- _] => destruct H end.",
            "VernacExtend",
            "0db1a2ffacf4fb9eba065e133b12bc3068b01411"
        ],
        [
            "Hint Extern 1 => progress ElimEq.",
            "VernacHints",
            "947f2d287894e143060ae92742b6dbbc03a1d856"
        ],
        [
            "Ltac cbn_rewrite W := let H := fresh \"H\" in set (H := W); cbn in H; rewrite H; clear H .",
            "VernacExtend",
            "4e6ee2ab7037d7c70356a6b9862c3cef7da76b13"
        ],
        [
            "Ltac cbn_rewrite_in W V := let H := fresh \"H\" in set (H := W); cbn in H; rewrite H in V; clear H .",
            "VernacExtend",
            "9686d3c8f34ca8f63722a5e97f3f6196fbfa612b"
        ],
        [
            "Ltac cbn_rewrite_back W := let H := fresh \"H\" in set (H := W); cbn in H; rewrite <- H; clear H .",
            "VernacExtend",
            "0082dcc5be995a231ed84fb91a2148cbc98409ee"
        ],
        [
            "Ltac cbn_rewrite_back_in W V := let H := fresh \"H\" in set (H := W); cbn in H; rewrite <- H in V; clear H .",
            "VernacExtend",
            "f49d9a8df7a5252e3d98f82153fa6017ed3a575b"
        ],
        [
            "Tactic Notation \"cbn_rewrite\" constr(W) := cbn_rewrite W.",
            "VernacExtend",
            "c8e933105e79e70bcf5b0276baa8d46affbd7899"
        ],
        [
            "Tactic Notation \"cbn_rewrite\" constr(W) \"in\" hyp_list(V) := cbn_rewrite_in W V.",
            "VernacExtend",
            "b3cabbb14a32033cded619e3e6aef8ef669e28d5"
        ],
        [
            "Tactic Notation \"cbn_rewrite\" \"<-\" constr(W) := cbn_rewrite_back W.",
            "VernacExtend",
            "6786913d44df71cbb17895ee90df75fbd5341cda"
        ],
        [
            "Tactic Notation \"cbn_rewrite\" \"<-\" constr(W) \"in\" hyp_list(V) := cbn_rewrite_back_in W V.",
            "VernacExtend",
            "844325399ca2599addc422d034fbe51720cf8376"
        ],
        [
            "Lemma sig_proof_irrelevance {A : Type} (P : A \u2192 Prop) (X Y : sig P) : proj1_sig X = proj1_sig Y \u2192 X = Y.",
            "VernacStartTheoremProof",
            "c2caa9f10a7e604b0a8370d962f38fbb3876574b"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "ElimEq.",
            "VernacExtend",
            "0fa36d5daf385f8d3c0b867316f2379271cf22ec"
        ],
        [
            "PIR.",
            "VernacExtend",
            "c01a90d1f0164eb87103140513b95d664314180c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Extern 2 (exist ?A _ _ = exist ?A _ _) => apply sig_proof_irrelevance.",
            "VernacHints",
            "0a307c4a5cb714c7ff8eed8a49c6d749a1763586"
        ],
        [
            "Ltac FunExt := progress ( repeat ( match goal with [|- _ = _] => let x := fresh \"x\" in extensionality x end ) ) .",
            "VernacExtend",
            "b3f2188a69a507d3ab34547d28aff0fe1834fe09"
        ],
        [
            "Hint Extern 1 => FunExt.",
            "VernacHints",
            "7839d325fff36a6d1af251848ae1be6e23ffe2ce"
        ],
        [
            "Lemma pair_eq (A B : Type) (a b : A * B) : fst a = fst b \u2192 snd a = snd b \u2192 a = b.",
            "VernacStartTheoremProof",
            "2a50ea957c2b20075d1c5eb7402fb992774b334c"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "destruct a; destruct b.",
            "VernacExtend",
            "53747861acadbe83f728269c5d948db4876159dc"
        ],
        [
            "cbn in *.",
            "VernacExtend",
            "37f5b5a6925d866566f6474e86b3c2d0a6a5ef5a"
        ],
        [
            "repeat match goal with [H : _ = _|-_] => destruct H end.",
            "VernacExtend",
            "5ea23ec44ecd7c5a00f57de5c0c0e2df8aa37666"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve pair_eq.",
            "VernacHints",
            "d5fa04fb418d02c679d7b3053a5e40a9ebd38f01"
        ],
        [
            "Ltac revert_clearbody_all := repeat lazymatch goal with H:_ |- _ => try clearbody H; revert H end.",
            "VernacExtend",
            "75a063504b6a1617742a833b8b13a304b65c0e09"
        ],
        [
            "Ltac hyp_stack := constr:(ltac:(revert_clearbody_all;constructor) : True).",
            "VernacExtend",
            "5e580bcd515c698dd831741ad42a9338a52f0440"
        ],
        [
            "Ltac next_hyp hs step last := lazymatch hs with (?hs' ?H) => step H hs' | _ => last end.",
            "VernacExtend",
            "b396137a06e5e1ec98301ad2130d2c00ca325a6c"
        ],
        [
            "Tactic Notation \"dohyps\" tactic3(tac) := let hs := hyp_stack in let rec step H hs := tac H; next_hyp hs step idtac in next_hyp hs step idtac.",
            "VernacExtend",
            "3032e998572b4c4ec28c5196e7ad895cac801073"
        ],
        [
            "Tactic Notation \"dohyps\" \"reverse\" tactic3(tac) := let hs := hyp_stack in let rec step H hs := next_hyp hs step idtac; tac H in next_hyp hs step idtac.",
            "VernacExtend",
            "ce7606a59155180103f88a0361d802f8594a45d0"
        ],
        [
            "Tactic Notation \"do1hyp\" tactic3(tac) := let hs := hyp_stack in let rec step H hs := tac H + next_hyp hs step fail in next_hyp hs step fail.",
            "VernacExtend",
            "6702299b6e460a3ae3c117038414eccf6d410362"
        ],
        [
            "Tactic Notation \"do1hyp\" \"reverse\" tactic3(tac) := let hs := hyp_stack in let rec step H hs := next_hyp hs step fail + tac H in next_hyp hs step fail.",
            "VernacExtend",
            "561e1c1bdfaf08ac1ff1bef9e5505318ba9b3488"
        ]
    ],
    "proofs": [
        {
            "name": "equal_f",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros A B f g H x.",
                        "VernacExtend",
                        "09c527c3caf7294dae29dae963995051dc42b0dc"
                    ]
                },
                {
                    "command": [
                        "destruct H; reflexivity.",
                        "VernacExtend",
                        "6380e8fb07e3e11b45a8938b5a219a86698d2b18"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "f_equal",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros A B f x y H.",
                        "VernacExtend",
                        "9919fd3b24f391c3ec5e4fb392dbd59c6d4de2d5"
                    ]
                },
                {
                    "command": [
                        "destruct H; reflexivity.",
                        "VernacExtend",
                        "6380e8fb07e3e11b45a8938b5a219a86698d2b18"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sig_proof_irrelevance",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "ElimEq.",
                        "VernacExtend",
                        "0fa36d5daf385f8d3c0b867316f2379271cf22ec"
                    ]
                },
                {
                    "command": [
                        "PIR.",
                        "VernacExtend",
                        "c01a90d1f0164eb87103140513b95d664314180c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}