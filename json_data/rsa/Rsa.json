{
    "filename": "Rsa.v",
    "coq_project": "rsa",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Export Fermat.",
            "VernacRequire",
            "98e3b8576ca8edc44204367278761f2cf037ceb5"
        ],
        [
            "Section RSA.",
            "VernacBeginSection",
            "4dc146926a1ab75fb8792abc3468e06776e1991a"
        ],
        [
            "Variable p q : nat.",
            "VernacAssumption",
            "76ae4b490ca7bd018a805069387a34197e0cd956"
        ],
        [
            "Variable prime_p : prime p.",
            "VernacAssumption",
            "5d42046783f9aa150e5da6cb2523c01fedd8fb47"
        ],
        [
            "Variable prime_q : prime q.",
            "VernacAssumption",
            "5d588e87078dc709bac9cfbcc033a74bea748496"
        ],
        [
            "Variable neq_pq : p <> q.",
            "VernacAssumption",
            "81c3ae87f72173ebc2ae568284355f12b42ada73"
        ],
        [
            "Variable e d : nat.",
            "VernacAssumption",
            "2a02dc07edcf341b100c3499c7aff3b9730e6681"
        ],
        [
            "Variable pq : nat.",
            "VernacAssumption",
            "a7e365b165ea77f3b6ae9fea44c5ca3a44be946d"
        ],
        [
            "Hypothesis pqnot_zero : pq <> 0.",
            "VernacAssumption",
            "1cb3ca1d6f0694167fc1d629f6397a8c50a5ca66"
        ],
        [
            "Hypothesis pq_div_p : divides (p - 1) pq.",
            "VernacAssumption",
            "c398a9dff9af034c1d429f1bdb245b172762e9ae"
        ],
        [
            "Hypothesis pq_div_q : divides (q - 1) pq.",
            "VernacAssumption",
            "fb311919a3b5be637d6750f2944c1bb7b5645fb3"
        ],
        [
            "Variable ed_inv : congruent pq (e * d) 1.",
            "VernacAssumption",
            "c41c4997ff0cbee23151f27981ad8c781fb86c91"
        ],
        [
            "Definition encrypt (w : nat) : nat := power w e.",
            "VernacDefinition",
            "73696334ff3e6dedcb3be7061cb3d350464d1d57"
        ],
        [
            "Definition decrypt (w : nat) : nat := power w d.",
            "VernacDefinition",
            "f4895a7d7530b0952a64da6ddca54a75d8000c93"
        ],
        [
            "Lemma gcd_pq_SO : is_gcd p q 1.",
            "VernacStartTheoremProof",
            "39b067442ebfe72e49fdd9435dafbcfaaf614e8d"
        ],
        [
            "apply prime_gcd; auto.",
            "VernacExtend",
            "0d7bafb22fd8ae168c47bbe88efcbb85185ea6d9"
        ],
        [
            "red in |- *; intros H.",
            "VernacExtend",
            "90ce1a8959a292b808f2fe49aa856e87b920fbd4"
        ],
        [
            "inversion prime_p.",
            "VernacExtend",
            "76638640ee404d71e3de6c9e126aa9d16dfc5573"
        ],
        [
            "case neq_pq.",
            "VernacExtend",
            "bdf2156bea1fa10d80f7d2e1ed1542cd6192c033"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "inversion prime_q; auto.",
            "VernacExtend",
            "85e58bf7c72b7b80659cbbe24d3c4aafde188734"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Chinese : forall a b : nat, b <= a -> congruent p a b -> congruent q a b -> congruent (p * q) a b.",
            "VernacStartTheoremProof",
            "18823e9553b4b4b5b7f0357a45ffca243c3f41f2"
        ],
        [
            "intros a b H' H'0 H'1.",
            "VernacExtend",
            "4f82b10048453a7c472d911111ea36485928da1f"
        ],
        [
            "cut (divides p (a - b)); [ intros H'2; inversion_clear H'2 | idtac ].",
            "VernacExtend",
            "34551489ed756a7e1e6849620ce07776d083e34f"
        ],
        [
            "cut (divides q (a - b)); [ intros H'3; inversion_clear H'3 | idtac ].",
            "VernacExtend",
            "abf41ed8bb584c8fa4403c2899b8fb3380a86b4b"
        ],
        [
            "cut (divides p q1); [ intros H'4; inversion_clear H'4 | idtac ].",
            "VernacExtend",
            "6027f04e206719de2f566decae515cd095d72e18"
        ],
        [
            "apply congruentDef with (u := 0) (v := q2); simpl in |- *.",
            "VernacExtend",
            "511180bec3061bda2a0875ae180534d648cf6eac"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite <- H1; rewrite <- H0; rewrite <- plus_n_O; auto with arith.",
            "VernacExtend",
            "492688766e4fe09363d0730c4c196a4eba0a4160"
        ],
        [
            "apply L_Euclides with q.",
            "VernacExtend",
            "d690bbbcce5e0934e216e9f84db1a2703583dab2"
        ],
        [
            "apply gcd_pq_SO.",
            "VernacExtend",
            "e3e59339392a9a756cf4854fc5665a30ccd7a863"
        ],
        [
            "apply dividesDef with (q := q0).",
            "VernacExtend",
            "c851a5276dbcb747f4acfb9df0bbf3e8ff82b309"
        ],
        [
            "rewrite (mult_comm q); rewrite <- H; auto.",
            "VernacExtend",
            "ed2f2ec087f9e357a5310d7f6b248796ffb83b49"
        ],
        [
            "apply cong_divides; auto.",
            "VernacExtend",
            "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
        ],
        [
            "apply cong_divides; auto.",
            "VernacExtend",
            "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_2_or_more : forall r : nat, prime r -> r = 2 \\/ 2 < r.",
            "VernacStartTheoremProof",
            "2bc7780b049f128d6dc7c4ab1a36b25be8d0e0db"
        ],
        [
            "intros r; case r.",
            "VernacExtend",
            "9a6003e1fe2da566e8f472a3900465a6d12039be"
        ],
        [
            "intros H'; absurd (prime 0); auto.",
            "VernacExtend",
            "eeb031c6624d4cf141589a476039e18ddb76aeb2"
        ],
        [
            "intros n; case n.",
            "VernacExtend",
            "b4ea99e9638b1f4853c8a1f258c5b4ff22cab052"
        ],
        [
            "intros H'; absurd (prime 1); auto.",
            "VernacExtend",
            "7fd0e638b72631ed464d4c8fbc47d687515b1be7"
        ],
        [
            "intros n0; case n0; auto with arith.",
            "VernacExtend",
            "f1213a7cce59dd6dcfd02eed5ec4bf16311de965"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma phi_gt_SO : 1 < pq.",
            "VernacStartTheoremProof",
            "85de360c685229a449561bd8d6ec7b5385a527ff"
        ],
        [
            "elim (prime_2_or_more p); auto; intros H'1.",
            "VernacExtend",
            "d79af333ec79c8e4865e348a0b3277da4ce7c800"
        ],
        [
            "elim (prime_2_or_more q); auto; intros H'2.",
            "VernacExtend",
            "d5796e120bd37276a65f6df7e651c58e214753f8"
        ],
        [
            "absurd (p = q); auto.",
            "VernacExtend",
            "dffadc5fb8bf0080033f11651ee2d3ad5ac752ad"
        ],
        [
            "rewrite H'2; auto.",
            "VernacExtend",
            "2c2cd2310e6d6c30ae4cdcfb896dfe62bf83deb1"
        ],
        [
            "apply lt_le_trans with (m := q - 1); auto.",
            "VernacExtend",
            "12897ae2d607413034f17244b54baf987336f674"
        ],
        [
            "apply lt_S_n; simpl in |- *; auto.",
            "VernacExtend",
            "43082a85ae9f20dbbba05ecdb246c8bc6b5a5fbf"
        ],
        [
            "replace (S (q - 1)) with (1 + (q - 1)).",
            "VernacExtend",
            "505a988f2da19ef2fde1ec046e999a7f5a17a07b"
        ],
        [
            "rewrite <- (le_plus_minus 1 q); auto.",
            "VernacExtend",
            "e5ddc004458c16bcf7c483144afc1771a241ac57"
        ],
        [
            "apply le_trans with (m := 2); auto.",
            "VernacExtend",
            "5a1f7b8faf53f11d67236a1efaf7da211abde623"
        ],
        [
            "apply lt_le_weak; auto.",
            "VernacExtend",
            "8ceda1915937002cfad73199d97036567b8326a1"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "apply divides_le; auto.",
            "VernacExtend",
            "64211d1652343e755aa17841343b749f37b1bdea"
        ],
        [
            "apply lt_le_trans with (m := p - 1); auto.",
            "VernacExtend",
            "4e617c7dbbd6290ff778cd7ee490e16bd1e45a4b"
        ],
        [
            "apply lt_S_n; simpl in |- *; auto.",
            "VernacExtend",
            "43082a85ae9f20dbbba05ecdb246c8bc6b5a5fbf"
        ],
        [
            "replace (S (p - 1)) with (1 + (p - 1)).",
            "VernacExtend",
            "2c207c77605c7d85ffe215bda93bae4de170ff06"
        ],
        [
            "rewrite <- (le_plus_minus 1 p); auto.",
            "VernacExtend",
            "926b06123eeebb34e17a71c0268b3eff569635f9"
        ],
        [
            "apply le_trans with (m := 2); auto.",
            "VernacExtend",
            "5a1f7b8faf53f11d67236a1efaf7da211abde623"
        ],
        [
            "apply lt_le_weak; auto.",
            "VernacExtend",
            "8ceda1915937002cfad73199d97036567b8326a1"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "apply divides_le; auto.",
            "VernacExtend",
            "64211d1652343e755aa17841343b749f37b1bdea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rsa_correct : forall w : nat, congruent (p * q) (decrypt (encrypt w)) w.",
            "VernacStartTheoremProof",
            "b884af4f945a57729de67813a556945ab889a2b8"
        ],
        [
            "unfold decrypt, encrypt in |- *.",
            "VernacExtend",
            "fb726ab523a9ba6aa0fe7c09aa7e268b2152313d"
        ],
        [
            "intros; rewrite power_power.",
            "VernacExtend",
            "570c8aa14cc5a7eae010baad86f8f1cf0e0c46c3"
        ],
        [
            "cut (1 <= e * d); [ intros leH | idtac ].",
            "VernacExtend",
            "95efe0555605caf3607f9ef6ad6a49229db94982"
        ],
        [
            "cut (divides pq (e * d - 1)); [ intros H; inversion_clear H | idtac ].",
            "VernacExtend",
            "a1ec56aa3606778751f815365d076e682962c8ef"
        ],
        [
            "cut (e * d = 1 + q0 * pq); [ intros Eqed | idtac ].",
            "VernacExtend",
            "6fbb206c0c0d9620ab044ab8f683e1f6ecabd706"
        ],
        [
            "apply Chinese; auto with arith.",
            "VernacExtend",
            "9606390c66069a2b1e7f85e78fb5d0a6c12fc0ef"
        ],
        [
            "rewrite Eqed; apply power_le; auto with arith.",
            "VernacExtend",
            "c121d2678b67eb97738217e71224f9944e781fe5"
        ],
        [
            "case (divides_dec p w); intros divPpw.",
            "VernacExtend",
            "07407870b8c6d83da0a92c931a17720e5f3fd5e2"
        ],
        [
            "apply cong_trans with (b := 0).",
            "VernacExtend",
            "a3253737555b7b91c26e70a4752f618dd9ac7def"
        ],
        [
            "apply cong_sym.",
            "VernacExtend",
            "b5510a0f5902aaecb159d12d8e9dae0eed3c257b"
        ],
        [
            "apply cong_trans with (b := power 0 (e * d)).",
            "VernacExtend",
            "234bd5be461920b4f512a8330b7b16d2b78440a6"
        ],
        [
            "rewrite power_O; auto.",
            "VernacExtend",
            "8385c0265448261b2464344308031b7b7410e478"
        ],
        [
            "apply cong_ref; auto.",
            "VernacExtend",
            "53c146405acbc142c6a10700f466e7fdc41ca144"
        ],
        [
            "apply cong_pow; auto.",
            "VernacExtend",
            "48648b67574d21f0dcd5b4c32f401027c76418be"
        ],
        [
            "apply divides_cong; auto.",
            "VernacExtend",
            "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
        ],
        [
            "apply divides_cong; auto.",
            "VernacExtend",
            "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
        ],
        [
            "rewrite Eqed; simpl in |- *.",
            "VernacExtend",
            "3f9c5bec65c0bd78fd76c79d6c41a5dc0c4544d2"
        ],
        [
            "inversion_clear pq_div_p.",
            "VernacExtend",
            "40ec4b6f0d0ed90ae061a1abf62100b3fe2ed283"
        ],
        [
            "rewrite mult_comm; apply cong_trans with (b := power 1 (q1 * q0) * w).",
            "VernacExtend",
            "c57d6504a67a253d6f0b127960346b42304417a6"
        ],
        [
            "apply cong_times; auto.",
            "VernacExtend",
            "835825ab9cc3400b6629ef420bef4ca99c884503"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "repeat rewrite <- power_power.",
            "VernacExtend",
            "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
        ],
        [
            "apply cong_pow.",
            "VernacExtend",
            "de21c95b67016fdcfa8114ca33e8580a719afbd0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "repeat rewrite <- power_power.",
            "VernacExtend",
            "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
        ],
        [
            "rewrite power_SO.",
            "VernacExtend",
            "5b37b7b3b88ba066b907ea2d2749620c093b48f1"
        ],
        [
            "apply Fermat; auto.",
            "VernacExtend",
            "47c40ea18eea56bab5292e706d77ea0dfef89c59"
        ],
        [
            "red in |- *; intros H'; case divPpw.",
            "VernacExtend",
            "9aa47aa14365331687a26a5316797fadd8c14f09"
        ],
        [
            "apply div_power_prime with (n := q1); auto.",
            "VernacExtend",
            "e3d4f5bfb4fb23a17f1701f23e0fbc9babd67ceb"
        ],
        [
            "rewrite power_SO; simpl in |- *; rewrite <- plus_n_O; auto.",
            "VernacExtend",
            "f5f3412f50efed88702cde727290e0634df4a7bc"
        ],
        [
            "apply cong_ref; auto.",
            "VernacExtend",
            "53c146405acbc142c6a10700f466e7fdc41ca144"
        ],
        [
            "case (divides_dec q w); intros divPpw.",
            "VernacExtend",
            "e912b53e5d85b8aed07ec3b493aff26772dbd835"
        ],
        [
            "apply cong_trans with (b := 0).",
            "VernacExtend",
            "a3253737555b7b91c26e70a4752f618dd9ac7def"
        ],
        [
            "apply cong_sym.",
            "VernacExtend",
            "b5510a0f5902aaecb159d12d8e9dae0eed3c257b"
        ],
        [
            "apply cong_trans with (b := power 0 (e * d)).",
            "VernacExtend",
            "234bd5be461920b4f512a8330b7b16d2b78440a6"
        ],
        [
            "rewrite power_O; auto.",
            "VernacExtend",
            "8385c0265448261b2464344308031b7b7410e478"
        ],
        [
            "apply cong_ref; auto.",
            "VernacExtend",
            "53c146405acbc142c6a10700f466e7fdc41ca144"
        ],
        [
            "apply cong_pow; auto.",
            "VernacExtend",
            "48648b67574d21f0dcd5b4c32f401027c76418be"
        ],
        [
            "apply divides_cong; auto.",
            "VernacExtend",
            "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
        ],
        [
            "apply divides_cong; auto.",
            "VernacExtend",
            "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
        ],
        [
            "rewrite Eqed; simpl in |- *.",
            "VernacExtend",
            "3f9c5bec65c0bd78fd76c79d6c41a5dc0c4544d2"
        ],
        [
            "inversion_clear pq_div_q.",
            "VernacExtend",
            "299ee60edfac9f38e1ce0b6ca4a7408f12c660ec"
        ],
        [
            "rewrite mult_comm; apply cong_trans with (b := power 1 (q1 * q0) * w).",
            "VernacExtend",
            "c57d6504a67a253d6f0b127960346b42304417a6"
        ],
        [
            "apply cong_times; auto.",
            "VernacExtend",
            "835825ab9cc3400b6629ef420bef4ca99c884503"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "repeat rewrite <- power_power.",
            "VernacExtend",
            "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
        ],
        [
            "apply cong_pow.",
            "VernacExtend",
            "de21c95b67016fdcfa8114ca33e8580a719afbd0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "repeat rewrite <- power_power.",
            "VernacExtend",
            "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
        ],
        [
            "rewrite power_SO.",
            "VernacExtend",
            "5b37b7b3b88ba066b907ea2d2749620c093b48f1"
        ],
        [
            "apply Fermat; auto.",
            "VernacExtend",
            "47c40ea18eea56bab5292e706d77ea0dfef89c59"
        ],
        [
            "red in |- *; intros H'; case divPpw.",
            "VernacExtend",
            "9aa47aa14365331687a26a5316797fadd8c14f09"
        ],
        [
            "apply div_power_prime with (n := q1); auto.",
            "VernacExtend",
            "e3d4f5bfb4fb23a17f1701f23e0fbc9babd67ceb"
        ],
        [
            "rewrite power_SO; simpl in |- *; rewrite <- plus_n_O; auto.",
            "VernacExtend",
            "f5f3412f50efed88702cde727290e0634df4a7bc"
        ],
        [
            "apply cong_ref; auto.",
            "VernacExtend",
            "53c146405acbc142c6a10700f466e7fdc41ca144"
        ],
        [
            "rewrite <- H0; auto.",
            "VernacExtend",
            "075413acf92795f866dc4a2ff39c7d41ef0fda3f"
        ],
        [
            "rewrite <- le_plus_minus; auto.",
            "VernacExtend",
            "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
        ],
        [
            "apply cong_divides; auto.",
            "VernacExtend",
            "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
        ],
        [
            "apply cong1_le with pq; auto.",
            "VernacExtend",
            "1f0cd23abbd2bd2530697d5b530f446cb9b63b60"
        ],
        [
            "apply phi_gt_SO.",
            "VernacExtend",
            "cd192daba6d50792a857b396aa448b4725ec74e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RSA.",
            "VernacEndSegment",
            "31309bcd3a599d6f5ed0fe51328d2426480c7ead"
        ],
        [
            "Section RSAI.",
            "VernacBeginSection",
            "647f2e4d7d35be2d5aaf89d1ce3e5feaf6f38c9b"
        ],
        [
            "Variable p q : nat.",
            "VernacAssumption",
            "76ae4b490ca7bd018a805069387a34197e0cd956"
        ],
        [
            "Variable prime_p : prime p.",
            "VernacAssumption",
            "5d42046783f9aa150e5da6cb2523c01fedd8fb47"
        ],
        [
            "Variable prime_q : prime q.",
            "VernacAssumption",
            "5d588e87078dc709bac9cfbcc033a74bea748496"
        ],
        [
            "Variable neq_pq : p <> q.",
            "VernacAssumption",
            "81c3ae87f72173ebc2ae568284355f12b42ada73"
        ],
        [
            "Variable e d : nat.",
            "VernacAssumption",
            "2a02dc07edcf341b100c3499c7aff3b9730e6681"
        ],
        [
            "Variable ed_inv : congruent ((p - 1) * (q - 1)) (e * d) 1.",
            "VernacAssumption",
            "345c19fbe09b40207c9bc3ade4d71de3e05ecdc6"
        ],
        [
            "Theorem rsa_correct' : forall w : nat, congruent (p * q) (decrypt d (encrypt e w)) w.",
            "VernacStartTheoremProof",
            "b88a8d86c499e9828395d75a02c48cb45e53c006"
        ],
        [
            "intros w.",
            "VernacExtend",
            "dc4d28ea6a966d58808cc6f9e5cb47dc57f33793"
        ],
        [
            "apply rsa_correct with (pq := (p - 1) * (q - 1)); auto.",
            "VernacExtend",
            "95163359f7fd97c3926f8335788b64969d8ccdb4"
        ],
        [
            "red in |- *; intros H'.",
            "VernacExtend",
            "f1f067c21ab428eb66f1e9d6fdfbbe25c6c0dec5"
        ],
        [
            "case (mult_eqO _ _ H').",
            "VernacExtend",
            "8dfe488d215454b555668afa3040447229fd9f81"
        ],
        [
            "generalize (prime_2_or_more p prime_p); case p; simpl in |- *; auto.",
            "VernacExtend",
            "79a352477ac825aebc2420168eb59c0426ea9bf8"
        ],
        [
            "intros H'0; elim H'0; intros H'1; inversion H'1; auto.",
            "VernacExtend",
            "333eee47f473d9f90d1683a026da721f8c8f0a86"
        ],
        [
            "intros n; case n; simpl in |- *; auto.",
            "VernacExtend",
            "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
        ],
        [
            "intros H'0; elim H'0; intros H'1; auto.",
            "VernacExtend",
            "a230593c3435c70cc1442b622e8291d345e353e1"
        ],
        [
            "inversion H'1; auto.",
            "VernacExtend",
            "28c2a8119ea07c6e34984064f9b56bbd61ce3b47"
        ],
        [
            "absurd (2 < 1); auto.",
            "VernacExtend",
            "bb7e1334fb9abd00a24752f1964e8013c9844fcd"
        ],
        [
            "apply lt_asym; auto.",
            "VernacExtend",
            "a0c15bff50ccd89b422047c9832288ecc970ca52"
        ],
        [
            "intros n0 H'0 H'1; inversion H'1.",
            "VernacExtend",
            "014429a33f685037ed36311737e4fb365e2c234b"
        ],
        [
            "generalize (prime_2_or_more q prime_q); case q; simpl in |- *; auto.",
            "VernacExtend",
            "94a865f473b7de5034c68e2e17a2a84541d8b86b"
        ],
        [
            "intros H'0; elim H'0; intros H'1; inversion H'1; auto.",
            "VernacExtend",
            "333eee47f473d9f90d1683a026da721f8c8f0a86"
        ],
        [
            "intros n; case n; simpl in |- *; auto.",
            "VernacExtend",
            "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
        ],
        [
            "intros H'0; elim H'0; intros H'1; auto.",
            "VernacExtend",
            "a230593c3435c70cc1442b622e8291d345e353e1"
        ],
        [
            "inversion H'1; auto.",
            "VernacExtend",
            "28c2a8119ea07c6e34984064f9b56bbd61ce3b47"
        ],
        [
            "absurd (2 < 1); auto.",
            "VernacExtend",
            "bb7e1334fb9abd00a24752f1964e8013c9844fcd"
        ],
        [
            "apply lt_asym; auto.",
            "VernacExtend",
            "a0c15bff50ccd89b422047c9832288ecc970ca52"
        ],
        [
            "intros n0 H'0 H'1; inversion H'1.",
            "VernacExtend",
            "014429a33f685037ed36311737e4fb365e2c234b"
        ],
        [
            "apply dividesDef with (q := q - 1); auto with arith.",
            "VernacExtend",
            "131199f49b6c7c7d9fc19c787fa94ddc003f9082"
        ],
        [
            "apply dividesDef with (q := p - 1); auto with arith.",
            "VernacExtend",
            "04d08be114689cb4097122b290b5ed4c46faabd1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RSAI.",
            "VernacEndSegment",
            "ef8a5bc119d2a03c0b56c940695602d4ceb75b7d"
        ]
    ],
    "proofs": [
        {
            "name": "gcd_pq_SO",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "apply prime_gcd; auto.",
                        "VernacExtend",
                        "0d7bafb22fd8ae168c47bbe88efcbb85185ea6d9"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H.",
                        "VernacExtend",
                        "90ce1a8959a292b808f2fe49aa856e87b920fbd4"
                    ]
                },
                {
                    "command": [
                        "inversion prime_p.",
                        "VernacExtend",
                        "76638640ee404d71e3de6c9e126aa9d16dfc5573"
                    ]
                },
                {
                    "command": [
                        "case neq_pq.",
                        "VernacExtend",
                        "bdf2156bea1fa10d80f7d2e1ed1542cd6192c033"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "inversion prime_q; auto.",
                        "VernacExtend",
                        "85e58bf7c72b7b80659cbbe24d3c4aafde188734"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Chinese",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0 H'1.",
                        "VernacExtend",
                        "4f82b10048453a7c472d911111ea36485928da1f"
                    ]
                },
                {
                    "command": [
                        "cut (divides p (a - b)); [ intros H'2; inversion_clear H'2 | idtac ].",
                        "VernacExtend",
                        "34551489ed756a7e1e6849620ce07776d083e34f"
                    ]
                },
                {
                    "command": [
                        "cut (divides q (a - b)); [ intros H'3; inversion_clear H'3 | idtac ].",
                        "VernacExtend",
                        "abf41ed8bb584c8fa4403c2899b8fb3380a86b4b"
                    ]
                },
                {
                    "command": [
                        "cut (divides p q1); [ intros H'4; inversion_clear H'4 | idtac ].",
                        "VernacExtend",
                        "6027f04e206719de2f566decae515cd095d72e18"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := 0) (v := q2); simpl in |- *.",
                        "VernacExtend",
                        "511180bec3061bda2a0875ae180534d648cf6eac"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; rewrite <- H0; rewrite <- plus_n_O; auto with arith.",
                        "VernacExtend",
                        "492688766e4fe09363d0730c4c196a4eba0a4160"
                    ]
                },
                {
                    "command": [
                        "apply L_Euclides with q.",
                        "VernacExtend",
                        "d690bbbcce5e0934e216e9f84db1a2703583dab2"
                    ]
                },
                {
                    "command": [
                        "apply gcd_pq_SO.",
                        "VernacExtend",
                        "e3e59339392a9a756cf4854fc5665a30ccd7a863"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := q0).",
                        "VernacExtend",
                        "c851a5276dbcb747f4acfb9df0bbf3e8ff82b309"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm q); rewrite <- H; auto.",
                        "VernacExtend",
                        "ed2f2ec087f9e357a5310d7f6b248796ffb83b49"
                    ]
                },
                {
                    "command": [
                        "apply cong_divides; auto.",
                        "VernacExtend",
                        "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
                    ]
                },
                {
                    "command": [
                        "apply cong_divides; auto.",
                        "VernacExtend",
                        "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_2_or_more",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros r; case r.",
                        "VernacExtend",
                        "9a6003e1fe2da566e8f472a3900465a6d12039be"
                    ]
                },
                {
                    "command": [
                        "intros H'; absurd (prime 0); auto.",
                        "VernacExtend",
                        "eeb031c6624d4cf141589a476039e18ddb76aeb2"
                    ]
                },
                {
                    "command": [
                        "intros n; case n.",
                        "VernacExtend",
                        "b4ea99e9638b1f4853c8a1f258c5b4ff22cab052"
                    ]
                },
                {
                    "command": [
                        "intros H'; absurd (prime 1); auto.",
                        "VernacExtend",
                        "7fd0e638b72631ed464d4c8fbc47d687515b1be7"
                    ]
                },
                {
                    "command": [
                        "intros n0; case n0; auto with arith.",
                        "VernacExtend",
                        "f1213a7cce59dd6dcfd02eed5ec4bf16311de965"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_gt_SO",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "elim (prime_2_or_more p); auto; intros H'1.",
                        "VernacExtend",
                        "d79af333ec79c8e4865e348a0b3277da4ce7c800"
                    ]
                },
                {
                    "command": [
                        "elim (prime_2_or_more q); auto; intros H'2.",
                        "VernacExtend",
                        "d5796e120bd37276a65f6df7e651c58e214753f8"
                    ]
                },
                {
                    "command": [
                        "absurd (p = q); auto.",
                        "VernacExtend",
                        "dffadc5fb8bf0080033f11651ee2d3ad5ac752ad"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2; auto.",
                        "VernacExtend",
                        "2c2cd2310e6d6c30ae4cdcfb896dfe62bf83deb1"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (m := q - 1); auto.",
                        "VernacExtend",
                        "12897ae2d607413034f17244b54baf987336f674"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n; simpl in |- *; auto.",
                        "VernacExtend",
                        "43082a85ae9f20dbbba05ecdb246c8bc6b5a5fbf"
                    ]
                },
                {
                    "command": [
                        "replace (S (q - 1)) with (1 + (q - 1)).",
                        "VernacExtend",
                        "505a988f2da19ef2fde1ec046e999a7f5a17a07b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (le_plus_minus 1 q); auto.",
                        "VernacExtend",
                        "e5ddc004458c16bcf7c483144afc1771a241ac57"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m := 2); auto.",
                        "VernacExtend",
                        "5a1f7b8faf53f11d67236a1efaf7da211abde623"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; auto.",
                        "VernacExtend",
                        "8ceda1915937002cfad73199d97036567b8326a1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "apply divides_le; auto.",
                        "VernacExtend",
                        "64211d1652343e755aa17841343b749f37b1bdea"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (m := p - 1); auto.",
                        "VernacExtend",
                        "4e617c7dbbd6290ff778cd7ee490e16bd1e45a4b"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n; simpl in |- *; auto.",
                        "VernacExtend",
                        "43082a85ae9f20dbbba05ecdb246c8bc6b5a5fbf"
                    ]
                },
                {
                    "command": [
                        "replace (S (p - 1)) with (1 + (p - 1)).",
                        "VernacExtend",
                        "2c207c77605c7d85ffe215bda93bae4de170ff06"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (le_plus_minus 1 p); auto.",
                        "VernacExtend",
                        "926b06123eeebb34e17a71c0268b3eff569635f9"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m := 2); auto.",
                        "VernacExtend",
                        "5a1f7b8faf53f11d67236a1efaf7da211abde623"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; auto.",
                        "VernacExtend",
                        "8ceda1915937002cfad73199d97036567b8326a1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "apply divides_le; auto.",
                        "VernacExtend",
                        "64211d1652343e755aa17841343b749f37b1bdea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsa_correct",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "unfold decrypt, encrypt in |- *.",
                        "VernacExtend",
                        "fb726ab523a9ba6aa0fe7c09aa7e268b2152313d"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite power_power.",
                        "VernacExtend",
                        "570c8aa14cc5a7eae010baad86f8f1cf0e0c46c3"
                    ]
                },
                {
                    "command": [
                        "cut (1 <= e * d); [ intros leH | idtac ].",
                        "VernacExtend",
                        "95efe0555605caf3607f9ef6ad6a49229db94982"
                    ]
                },
                {
                    "command": [
                        "cut (divides pq (e * d - 1)); [ intros H; inversion_clear H | idtac ].",
                        "VernacExtend",
                        "a1ec56aa3606778751f815365d076e682962c8ef"
                    ]
                },
                {
                    "command": [
                        "cut (e * d = 1 + q0 * pq); [ intros Eqed | idtac ].",
                        "VernacExtend",
                        "6fbb206c0c0d9620ab044ab8f683e1f6ecabd706"
                    ]
                },
                {
                    "command": [
                        "apply Chinese; auto with arith.",
                        "VernacExtend",
                        "9606390c66069a2b1e7f85e78fb5d0a6c12fc0ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Eqed; apply power_le; auto with arith.",
                        "VernacExtend",
                        "c121d2678b67eb97738217e71224f9944e781fe5"
                    ]
                },
                {
                    "command": [
                        "case (divides_dec p w); intros divPpw.",
                        "VernacExtend",
                        "07407870b8c6d83da0a92c931a17720e5f3fd5e2"
                    ]
                },
                {
                    "command": [
                        "apply cong_trans with (b := 0).",
                        "VernacExtend",
                        "a3253737555b7b91c26e70a4752f618dd9ac7def"
                    ]
                },
                {
                    "command": [
                        "apply cong_sym.",
                        "VernacExtend",
                        "b5510a0f5902aaecb159d12d8e9dae0eed3c257b"
                    ]
                },
                {
                    "command": [
                        "apply cong_trans with (b := power 0 (e * d)).",
                        "VernacExtend",
                        "234bd5be461920b4f512a8330b7b16d2b78440a6"
                    ]
                },
                {
                    "command": [
                        "rewrite power_O; auto.",
                        "VernacExtend",
                        "8385c0265448261b2464344308031b7b7410e478"
                    ]
                },
                {
                    "command": [
                        "apply cong_ref; auto.",
                        "VernacExtend",
                        "53c146405acbc142c6a10700f466e7fdc41ca144"
                    ]
                },
                {
                    "command": [
                        "apply cong_pow; auto.",
                        "VernacExtend",
                        "48648b67574d21f0dcd5b4c32f401027c76418be"
                    ]
                },
                {
                    "command": [
                        "apply divides_cong; auto.",
                        "VernacExtend",
                        "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
                    ]
                },
                {
                    "command": [
                        "apply divides_cong; auto.",
                        "VernacExtend",
                        "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
                    ]
                },
                {
                    "command": [
                        "rewrite Eqed; simpl in |- *.",
                        "VernacExtend",
                        "3f9c5bec65c0bd78fd76c79d6c41a5dc0c4544d2"
                    ]
                },
                {
                    "command": [
                        "inversion_clear pq_div_p.",
                        "VernacExtend",
                        "40ec4b6f0d0ed90ae061a1abf62100b3fe2ed283"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; apply cong_trans with (b := power 1 (q1 * q0) * w).",
                        "VernacExtend",
                        "c57d6504a67a253d6f0b127960346b42304417a6"
                    ]
                },
                {
                    "command": [
                        "apply cong_times; auto.",
                        "VernacExtend",
                        "835825ab9cc3400b6629ef420bef4ca99c884503"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- power_power.",
                        "VernacExtend",
                        "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
                    ]
                },
                {
                    "command": [
                        "apply cong_pow.",
                        "VernacExtend",
                        "de21c95b67016fdcfa8114ca33e8580a719afbd0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- power_power.",
                        "VernacExtend",
                        "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
                    ]
                },
                {
                    "command": [
                        "rewrite power_SO.",
                        "VernacExtend",
                        "5b37b7b3b88ba066b907ea2d2749620c093b48f1"
                    ]
                },
                {
                    "command": [
                        "apply Fermat; auto.",
                        "VernacExtend",
                        "47c40ea18eea56bab5292e706d77ea0dfef89c59"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'; case divPpw.",
                        "VernacExtend",
                        "9aa47aa14365331687a26a5316797fadd8c14f09"
                    ]
                },
                {
                    "command": [
                        "apply div_power_prime with (n := q1); auto.",
                        "VernacExtend",
                        "e3d4f5bfb4fb23a17f1701f23e0fbc9babd67ceb"
                    ]
                },
                {
                    "command": [
                        "rewrite power_SO; simpl in |- *; rewrite <- plus_n_O; auto.",
                        "VernacExtend",
                        "f5f3412f50efed88702cde727290e0634df4a7bc"
                    ]
                },
                {
                    "command": [
                        "apply cong_ref; auto.",
                        "VernacExtend",
                        "53c146405acbc142c6a10700f466e7fdc41ca144"
                    ]
                },
                {
                    "command": [
                        "case (divides_dec q w); intros divPpw.",
                        "VernacExtend",
                        "e912b53e5d85b8aed07ec3b493aff26772dbd835"
                    ]
                },
                {
                    "command": [
                        "apply cong_trans with (b := 0).",
                        "VernacExtend",
                        "a3253737555b7b91c26e70a4752f618dd9ac7def"
                    ]
                },
                {
                    "command": [
                        "apply cong_sym.",
                        "VernacExtend",
                        "b5510a0f5902aaecb159d12d8e9dae0eed3c257b"
                    ]
                },
                {
                    "command": [
                        "apply cong_trans with (b := power 0 (e * d)).",
                        "VernacExtend",
                        "234bd5be461920b4f512a8330b7b16d2b78440a6"
                    ]
                },
                {
                    "command": [
                        "rewrite power_O; auto.",
                        "VernacExtend",
                        "8385c0265448261b2464344308031b7b7410e478"
                    ]
                },
                {
                    "command": [
                        "apply cong_ref; auto.",
                        "VernacExtend",
                        "53c146405acbc142c6a10700f466e7fdc41ca144"
                    ]
                },
                {
                    "command": [
                        "apply cong_pow; auto.",
                        "VernacExtend",
                        "48648b67574d21f0dcd5b4c32f401027c76418be"
                    ]
                },
                {
                    "command": [
                        "apply divides_cong; auto.",
                        "VernacExtend",
                        "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
                    ]
                },
                {
                    "command": [
                        "apply divides_cong; auto.",
                        "VernacExtend",
                        "98c4f8ba87bc8dd55c32ce22de49188bc5d4d1b8"
                    ]
                },
                {
                    "command": [
                        "rewrite Eqed; simpl in |- *.",
                        "VernacExtend",
                        "3f9c5bec65c0bd78fd76c79d6c41a5dc0c4544d2"
                    ]
                },
                {
                    "command": [
                        "inversion_clear pq_div_q.",
                        "VernacExtend",
                        "299ee60edfac9f38e1ce0b6ca4a7408f12c660ec"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; apply cong_trans with (b := power 1 (q1 * q0) * w).",
                        "VernacExtend",
                        "c57d6504a67a253d6f0b127960346b42304417a6"
                    ]
                },
                {
                    "command": [
                        "apply cong_times; auto.",
                        "VernacExtend",
                        "835825ab9cc3400b6629ef420bef4ca99c884503"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- power_power.",
                        "VernacExtend",
                        "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
                    ]
                },
                {
                    "command": [
                        "apply cong_pow.",
                        "VernacExtend",
                        "de21c95b67016fdcfa8114ca33e8580a719afbd0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- power_power.",
                        "VernacExtend",
                        "53d4f02a74291dd26719d48a4c248dadb6bd3f22"
                    ]
                },
                {
                    "command": [
                        "rewrite power_SO.",
                        "VernacExtend",
                        "5b37b7b3b88ba066b907ea2d2749620c093b48f1"
                    ]
                },
                {
                    "command": [
                        "apply Fermat; auto.",
                        "VernacExtend",
                        "47c40ea18eea56bab5292e706d77ea0dfef89c59"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'; case divPpw.",
                        "VernacExtend",
                        "9aa47aa14365331687a26a5316797fadd8c14f09"
                    ]
                },
                {
                    "command": [
                        "apply div_power_prime with (n := q1); auto.",
                        "VernacExtend",
                        "e3d4f5bfb4fb23a17f1701f23e0fbc9babd67ceb"
                    ]
                },
                {
                    "command": [
                        "rewrite power_SO; simpl in |- *; rewrite <- plus_n_O; auto.",
                        "VernacExtend",
                        "f5f3412f50efed88702cde727290e0634df4a7bc"
                    ]
                },
                {
                    "command": [
                        "apply cong_ref; auto.",
                        "VernacExtend",
                        "53c146405acbc142c6a10700f466e7fdc41ca144"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; auto.",
                        "VernacExtend",
                        "075413acf92795f866dc4a2ff39c7d41ef0fda3f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto.",
                        "VernacExtend",
                        "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
                    ]
                },
                {
                    "command": [
                        "apply cong_divides; auto.",
                        "VernacExtend",
                        "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
                    ]
                },
                {
                    "command": [
                        "apply cong1_le with pq; auto.",
                        "VernacExtend",
                        "1f0cd23abbd2bd2530697d5b530f446cb9b63b60"
                    ]
                },
                {
                    "command": [
                        "apply phi_gt_SO.",
                        "VernacExtend",
                        "cd192daba6d50792a857b396aa448b4725ec74e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsa_correct'",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros w.",
                        "VernacExtend",
                        "dc4d28ea6a966d58808cc6f9e5cb47dc57f33793"
                    ]
                },
                {
                    "command": [
                        "apply rsa_correct with (pq := (p - 1) * (q - 1)); auto.",
                        "VernacExtend",
                        "95163359f7fd97c3926f8335788b64969d8ccdb4"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'.",
                        "VernacExtend",
                        "f1f067c21ab428eb66f1e9d6fdfbbe25c6c0dec5"
                    ]
                },
                {
                    "command": [
                        "case (mult_eqO _ _ H').",
                        "VernacExtend",
                        "8dfe488d215454b555668afa3040447229fd9f81"
                    ]
                },
                {
                    "command": [
                        "generalize (prime_2_or_more p prime_p); case p; simpl in |- *; auto.",
                        "VernacExtend",
                        "79a352477ac825aebc2420168eb59c0426ea9bf8"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0; intros H'1; inversion H'1; auto.",
                        "VernacExtend",
                        "333eee47f473d9f90d1683a026da721f8c8f0a86"
                    ]
                },
                {
                    "command": [
                        "intros n; case n; simpl in |- *; auto.",
                        "VernacExtend",
                        "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0; intros H'1; auto.",
                        "VernacExtend",
                        "a230593c3435c70cc1442b622e8291d345e353e1"
                    ]
                },
                {
                    "command": [
                        "inversion H'1; auto.",
                        "VernacExtend",
                        "28c2a8119ea07c6e34984064f9b56bbd61ce3b47"
                    ]
                },
                {
                    "command": [
                        "absurd (2 < 1); auto.",
                        "VernacExtend",
                        "bb7e1334fb9abd00a24752f1964e8013c9844fcd"
                    ]
                },
                {
                    "command": [
                        "apply lt_asym; auto.",
                        "VernacExtend",
                        "a0c15bff50ccd89b422047c9832288ecc970ca52"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'0 H'1; inversion H'1.",
                        "VernacExtend",
                        "014429a33f685037ed36311737e4fb365e2c234b"
                    ]
                },
                {
                    "command": [
                        "generalize (prime_2_or_more q prime_q); case q; simpl in |- *; auto.",
                        "VernacExtend",
                        "94a865f473b7de5034c68e2e17a2a84541d8b86b"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0; intros H'1; inversion H'1; auto.",
                        "VernacExtend",
                        "333eee47f473d9f90d1683a026da721f8c8f0a86"
                    ]
                },
                {
                    "command": [
                        "intros n; case n; simpl in |- *; auto.",
                        "VernacExtend",
                        "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0; intros H'1; auto.",
                        "VernacExtend",
                        "a230593c3435c70cc1442b622e8291d345e353e1"
                    ]
                },
                {
                    "command": [
                        "inversion H'1; auto.",
                        "VernacExtend",
                        "28c2a8119ea07c6e34984064f9b56bbd61ce3b47"
                    ]
                },
                {
                    "command": [
                        "absurd (2 < 1); auto.",
                        "VernacExtend",
                        "bb7e1334fb9abd00a24752f1964e8013c9844fcd"
                    ]
                },
                {
                    "command": [
                        "apply lt_asym; auto.",
                        "VernacExtend",
                        "a0c15bff50ccd89b422047c9832288ecc970ca52"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'0 H'1; inversion H'1.",
                        "VernacExtend",
                        "014429a33f685037ed36311737e4fb365e2c234b"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := q - 1); auto with arith.",
                        "VernacExtend",
                        "131199f49b6c7c7d9fc19c787fa94ddc003f9082"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := p - 1); auto with arith.",
                        "VernacExtend",
                        "04d08be114689cb4097122b290b5ed4c46faabd1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}