{
    "filename": "Fermat.v",
    "coq_project": "rsa",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Export Divides.",
            "VernacRequire",
            "0c04bcc34e7639657ac18832e41ff5dc3d9013f6"
        ],
        [
            "Require Export Binomials.",
            "VernacRequire",
            "791d85945d66084f3ad93b62c72623f386dbda29"
        ],
        [
            "Lemma div_fact : forall p k : nat, prime p -> 0 < k -> divides p (factorial k) -> exists j : nat, 0 < j /\\ j <= k /\\ divides p j.",
            "VernacStartTheoremProof",
            "a191064ec6cdc4910ac2f873f8eb16a08c22dd0a"
        ],
        [
            "simple induction k.",
            "VernacExtend",
            "7d54c1ad8f6e7191867edc84fbdc467b83bd5756"
        ],
        [
            "simpl in |- *; intros H' H'0; absurd (0 < 0); auto with arith.",
            "VernacExtend",
            "cc9608ba5ca38b038faab35294142005b1636b6f"
        ],
        [
            "intros k' H' H'0 H'1 H'2; case (L_Euclides2 p (S k') (factorial k')); auto.",
            "VernacExtend",
            "97879e963e0d818374efb71d37234a7b706b83c4"
        ],
        [
            "intros H'3; exists (S k'); auto.",
            "VernacExtend",
            "c7ad94e2952af2fdf3512a9c58bfbc7d29da027d"
        ],
        [
            "intros H'3.",
            "VernacExtend",
            "2e512d3c52562ab0fb19b78be8662c12b7168c72"
        ],
        [
            "elim H'; [ intros j E; elim E; intros H'7 H'8; elim H'8; intros H'9 H'10; try exact H'10 | clear H' | clear H' | clear H' ]; auto.",
            "VernacExtend",
            "2b2860418ae0ffdfe29da4d45da7217ea36b2289"
        ],
        [
            "exists j; split; auto.",
            "VernacExtend",
            "9f36e654af438a387561e8c85f17269f34dfce27"
        ],
        [
            "generalize H'3; case k'; simpl in |- *; auto with arith.",
            "VernacExtend",
            "364e4c5b7aba4bb79aba8bbdbe62b53cd5959ca8"
        ],
        [
            "intros H'4; absurd (prime 1); auto.",
            "VernacExtend",
            "0963304ad38820a8882a30b0825d7242b4d08daa"
        ],
        [
            "rewrite (divides_antisym 1 p); auto.",
            "VernacExtend",
            "9f46ba6b066b68d35622f49e47528c43d7c1e642"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma p_div_bin : forall k p : nat, prime p -> 0 < k -> k < p -> divides p (binomial p k).",
            "VernacStartTheoremProof",
            "a1fcaa6d3be08e1192b555cadd614671c2b67027"
        ],
        [
            "intros k p; case p; auto.",
            "VernacExtend",
            "c354ceef347af6f678088d7474c94fb773b08225"
        ],
        [
            "intros H'; absurd (prime 0); auto.",
            "VernacExtend",
            "eeb031c6624d4cf141589a476039e18ddb76aeb2"
        ],
        [
            "intros p' H' H'0 H'1.",
            "VernacExtend",
            "dea912e134d42a696e457a238248be963e718bd2"
        ],
        [
            "apply L_Euclides1 with (factorial k); auto.",
            "VernacExtend",
            "cab9b7a0bdcf5ec6492aeae53d4c8fa6538c8b0a"
        ],
        [
            "apply L_Euclides1 with (factorial (S p' - k)); auto.",
            "VernacExtend",
            "f696676860310769eda893ff28ed3e69d4429351"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "pattern (S p') at 2 in |- *; rewrite (le_plus_minus k (S p')); auto with arith.",
            "VernacExtend",
            "168211e7b4b822916c1af85c201b57e952601777"
        ],
        [
            "rewrite mult_comm with (m := factorial k); auto.",
            "VernacExtend",
            "29965f3f699c10b2e1b67770a268025a338c3267"
        ],
        [
            "rewrite binomial_fact; auto.",
            "VernacExtend",
            "f6174a6672d9858e053118a568258ee1be4c0eb1"
        ],
        [
            "rewrite <- le_plus_minus; auto with arith.",
            "VernacExtend",
            "a5432e30d7d74e16734630adacbca5118010b9b1"
        ],
        [
            "apply dividesDef with (q := factorial p'); rewrite mult_comm; auto.",
            "VernacExtend",
            "403213d9107ea598f1ec81677dcb370bed7190cb"
        ],
        [
            "red in |- *; intros H'2; elim (div_fact (S p') (S p' - k)); [ intros j E; elim E; intros H'7 H'8; elim H'8; intros H'9 H'10; clear H'8 E | idtac | idtac | idtac ]; auto with arith.",
            "VernacExtend",
            "1cb37ac17fda6e889f3568fb5abcf54d8901efb4"
        ],
        [
            "absurd (divides (S p') j); auto.",
            "VernacExtend",
            "6cf4bd04d77a91029ae97ff3349e45c48c3b0b05"
        ],
        [
            "apply not_lt_div; auto.",
            "VernacExtend",
            "8e588c26775de142d4ae44d5561f2b2cdb6de4af"
        ],
        [
            "apply le_lt_trans with (m := S p' - k); auto with arith.",
            "VernacExtend",
            "ac4836d329312222104c55894087c31e37aa72d3"
        ],
        [
            "apply lt_minus_O_lt; auto.",
            "VernacExtend",
            "2dffe5a9cbfb8601174c917413a07770b2c3cbbf"
        ],
        [
            "red in |- *; intros H'2.",
            "VernacExtend",
            "29798b4cb13ef1e364d399e1c3d559bb1deae4ac"
        ],
        [
            "elim (div_fact (S p') k); [ intros j E; elim E; intros H'8 H'9; elim H'9; intros H'10 H'11; clear H'9 E | idtac | idtac | idtac ]; auto.",
            "VernacExtend",
            "4f30baf111055be3744fc1ec6b26312d2118d0f1"
        ],
        [
            "absurd (divides (S p') j); auto.",
            "VernacExtend",
            "6cf4bd04d77a91029ae97ff3349e45c48c3b0b05"
        ],
        [
            "apply not_lt_div; auto.",
            "VernacExtend",
            "8e588c26775de142d4ae44d5561f2b2cdb6de4af"
        ],
        [
            "apply le_lt_trans with (m := k); auto with arith.",
            "VernacExtend",
            "5d8b580a40309bac896fda264bee5ac79c8d4c8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fermat1 : forall x p : nat, prime p -> congruent p (power (x + 1) p) (power x p + 1).",
            "VernacStartTheoremProof",
            "ce26f44ad7bb10a2251e7eb76f9fea09d89f4ec4"
        ],
        [
            "intros x p; case p; auto.",
            "VernacExtend",
            "d48a68def849135efd0f810760aee84076e30c19"
        ],
        [
            "intros H'; absurd (prime 0); auto.",
            "VernacExtend",
            "eeb031c6624d4cf141589a476039e18ddb76aeb2"
        ],
        [
            "intros n; case n.",
            "VernacExtend",
            "b4ea99e9638b1f4853c8a1f258c5b4ff22cab052"
        ],
        [
            "intros H'; absurd (prime 1); auto.",
            "VernacExtend",
            "7fd0e638b72631ed464d4c8fbc47d687515b1be7"
        ],
        [
            "intros n0 H'.",
            "VernacExtend",
            "e2fb2fd64e9fcf20cb20ff783166d17b896ad0f0"
        ],
        [
            "rewrite (exp_Pascal x 1).",
            "VernacExtend",
            "af02618abc2233bcb280471dbf7166b96301ce17"
        ],
        [
            "rewrite sum_nm_i.",
            "VernacExtend",
            "c466300b9f438ce29c2ae6e34754a731535fb80d"
        ],
        [
            "rewrite sum_nm_f.",
            "VernacExtend",
            "edb21164b237a81852b0386af7e488d35b11bf4b"
        ],
        [
            "replace (binomial (S (S n0)) 0 * (power x (S (S n0) - 0) * power 1 0)) with (power x (S (S n0))).",
            "VernacExtend",
            "f9574e3d601c5155173d7c7925780b9eaf46b629"
        ],
        [
            "replace (binomial (S (S n0)) (1 + S n0) * (power x (S (S n0) - (1 + S n0)) * power 1 (1 + S n0))) with 1.",
            "VernacExtend",
            "2ae3de320bf89f80f8513a07cbe0d7d8aeeb656c"
        ],
        [
            "rewrite plus_comm with (m := 1).",
            "VernacExtend",
            "811db2d7dd2ade99d37cd63afca86e016a9aac3b"
        ],
        [
            "replace (power x (S (S n0)) + 1) with (power x (S (S n0)) + 1 + 0); auto with arith.",
            "VernacExtend",
            "266ca0bb0766a67669e123c3606599273479dea2"
        ],
        [
            "rewrite plus_assoc.",
            "VernacExtend",
            "3bacd64a87549657845fdfa6170cde8d727d12ef"
        ],
        [
            "apply cong_plus; auto.",
            "VernacExtend",
            "8cd734ddeeffdcb4ec506d87015cfdcaf867d467"
        ],
        [
            "apply cong_ref; auto.",
            "VernacExtend",
            "53c146405acbc142c6a10700f466e7fdc41ca144"
        ],
        [
            "apply inv_sum_nm.",
            "VernacExtend",
            "0789c9f576438191ceb831a32fcf7e08a3a03f33"
        ],
        [
            "replace 0 with (0 + 0); auto.",
            "VernacExtend",
            "decfc52f40c1953eef6650f9538036baa27637d2"
        ],
        [
            "intros; apply cong_plus; auto.",
            "VernacExtend",
            "30385f6990caf9a1b5faa610b01ab39cf9e3bcd9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cong_mult_O.",
            "VernacExtend",
            "48b5fcd69a9b210478c7ce9e8e00588ebc4e1a42"
        ],
        [
            "apply cong_sym.",
            "VernacExtend",
            "b5510a0f5902aaecb159d12d8e9dae0eed3c257b"
        ],
        [
            "apply divides_cong.",
            "VernacExtend",
            "8f59c3360e62fb66a9d73323d8097b3a93bcd3a4"
        ],
        [
            "apply p_div_bin; auto with arith.",
            "VernacExtend",
            "91ae9eb824ed16490cabaab873ee6d6ff4a8e515"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "simpl in |- *; rewrite binomial_def3; simpl in |- *; auto.",
            "VernacExtend",
            "6989d5ad7c078fbca84cfef33422d39f93d9d872"
        ],
        [
            "repeat (rewrite binomial_def2; simpl in |- *; auto with arith).",
            "VernacExtend",
            "9323e7296aff0bdfd526648aa6da3e91597b0dbf"
        ],
        [
            "rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "f723529dfbfb6a37c254caaef79aac053d6103e3"
        ],
        [
            "rewrite power_SO.",
            "VernacExtend",
            "5b37b7b3b88ba066b907ea2d2749620c093b48f1"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite <- plus_n_O.",
            "VernacExtend",
            "82e76fe4a7447040940c37f8f7935de7fb153db6"
        ],
        [
            "rewrite mult_1_r; auto.",
            "VernacExtend",
            "eee1d746a9d0e968de99c238cf0510a8b0aa99e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fermat2 : forall x p : nat, prime p -> congruent p (power x p) x.",
            "VernacStartTheoremProof",
            "df179556a78f74d8f497aa2a2fc0b19a747c91c6"
        ],
        [
            "intros x; elim x; auto.",
            "VernacExtend",
            "60009c3b651965c1a0eac46578bb63ea275bf7d9"
        ],
        [
            "intros p; case p; simpl in |- *; auto.",
            "VernacExtend",
            "afee7a9ab62d247041c6e9d02f5397b50015aedd"
        ],
        [
            "intros H'; absurd (prime 0); auto.",
            "VernacExtend",
            "eeb031c6624d4cf141589a476039e18ddb76aeb2"
        ],
        [
            "intros n H'; apply cong_ref; auto.",
            "VernacExtend",
            "ab1e339dbeac65f5209c93937954a576beb88680"
        ],
        [
            "intros n H' p H'0.",
            "VernacExtend",
            "2af61ee2f8e5988ceac506091c52887c58f04cfa"
        ],
        [
            "apply (cong_trans p) with (b := power n p + 1).",
            "VernacExtend",
            "b1342aa38b193396472b74d81cfdd94848118dae"
        ],
        [
            "replace (S n) with (n + 1); auto with arith.",
            "VernacExtend",
            "b7121b18ddb0cf7d30af02a79854378c97b5ce99"
        ],
        [
            "apply Fermat1; auto.",
            "VernacExtend",
            "1829bd6032fd15517336ade00c40b4cc8c747260"
        ],
        [
            "rewrite plus_comm; simpl in |- *; auto.",
            "VernacExtend",
            "a510e8b3ccb9a5207bf615eb71ff2e3ed8078042"
        ],
        [
            "replace (S n) with (n + 1).",
            "VernacExtend",
            "f588b35cfecbc841f9141c386215aafd318c47d4"
        ],
        [
            "apply cong_plus; auto.",
            "VernacExtend",
            "8cd734ddeeffdcb4ec506d87015cfdcaf867d467"
        ],
        [
            "apply cong_ref.",
            "VernacExtend",
            "db548c76e7d0f6c61dbcec97914bd3caca4c496e"
        ],
        [
            "rewrite plus_comm; simpl in |- *; auto.",
            "VernacExtend",
            "a510e8b3ccb9a5207bf615eb71ff2e3ed8078042"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fermat : forall x p : nat, prime p -> ~ divides p x -> congruent p (power x (p - 1)) 1.",
            "VernacStartTheoremProof",
            "9e946c827ac26bbf9310a15fda6c9df5ac0240dd"
        ],
        [
            "intros x p H' H'0.",
            "VernacExtend",
            "2a499e1be5ff3deda356b2e34db403fd0ae4a65e"
        ],
        [
            "cut (x <= power x p); [ intros Lex | idtac ].",
            "VernacExtend",
            "634dcbb60b5f1eff8f91debae87961f27ddd56aa"
        ],
        [
            "cut (divides p (power x p - x)); [ intros H'1; inversion_clear H'1 | idtac ].",
            "VernacExtend",
            "b64e6fbb12aff6f67d0a4a7f202ec96a3f501108"
        ],
        [
            "cut (power x p = x * power x (p - 1)); [ intros Eqp | idtac ].",
            "VernacExtend",
            "4fb4943e85c4ecb037903c1f20b7c796d179e6d0"
        ],
        [
            "cut (x <> 0); [ intros nx | idtac ].",
            "VernacExtend",
            "c832bfe6b01310267b45520ffbd5d49a19573426"
        ],
        [
            "cut (divides x q); [ intros H2; inversion_clear H2 | idtac ].",
            "VernacExtend",
            "925152b91f9858dcf5641894b3b201acd8239053"
        ],
        [
            "apply congruentDef with (u := 0) (v := q0); simpl in |- *; auto.",
            "VernacExtend",
            "da4049084f883993d3bd6de678d6f7f5c59b7917"
        ],
        [
            "rewrite <- plus_n_O.",
            "VernacExtend",
            "82e76fe4a7447040940c37f8f7935de7fb153db6"
        ],
        [
            "apply eq_mult with x; auto.",
            "VernacExtend",
            "e6f0c5b6e3f65668eb4396a4fea41bf764d854ad"
        ],
        [
            "rewrite <- Eqp; auto.",
            "VernacExtend",
            "16ebbd5d057ecfd9227b7a64897fbfd6c834ccf6"
        ],
        [
            "rewrite mult_comm; simpl in |- *.",
            "VernacExtend",
            "47227ef1d2af555f99fb6c71c74ad226248599b8"
        ],
        [
            "rewrite mult_comm with (m := x).",
            "VernacExtend",
            "80db8baae17b3eb72b249f56ebcd9fdfe0e343d8"
        ],
        [
            "rewrite mult_assoc.",
            "VernacExtend",
            "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
        ],
        [
            "rewrite (mult_comm x).",
            "VernacExtend",
            "e99ec5c7a6ea1fe8e0d0a789aaf5e1f1a8ca0adb"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply le_plus_minus; auto.",
            "VernacExtend",
            "7d49dfe9def5f28d67afefdb4d8de9c60fd78f7b"
        ],
        [
            "apply L_Euclides with (a := p); auto.",
            "VernacExtend",
            "fcf55b3763328df5c888a0499bbcee531428cb8e"
        ],
        [
            "apply prime_gcd; auto.",
            "VernacExtend",
            "0d7bafb22fd8ae168c47bbe88efcbb85185ea6d9"
        ],
        [
            "rewrite mult_comm; rewrite <- H.",
            "VernacExtend",
            "3662b5c2712a2724cd4b4134be431771ffa2814d"
        ],
        [
            "apply dividesDef with (q := power x (p - 1) - 1); auto.",
            "VernacExtend",
            "931ed39f477024fccaa5318ebeb48a998874353c"
        ],
        [
            "rewrite mult_minus_distr_r.",
            "VernacExtend",
            "8affc1e7492a03e77da168a254c8278b756311fb"
        ],
        [
            "apply f_equal2 with (A1 := nat) (A2 := nat); simpl in |- *; auto.",
            "VernacExtend",
            "117a765df81eb7fe0dc395877543439619d18f30"
        ],
        [
            "rewrite mult_comm; auto.",
            "VernacExtend",
            "6c3edfbd689b9ef2f201b9c9358184ca9f4a59f8"
        ],
        [
            "red in |- *; intros H'1; case H'0; rewrite H'1; auto.",
            "VernacExtend",
            "9b3491277e50b54d6f49f062b6bee2f642a6f026"
        ],
        [
            "generalize H'; case p; simpl in |- *; auto with arith.",
            "VernacExtend",
            "90c696938f6db565a152930fb96c0b3e2c8b6ec7"
        ],
        [
            "intros H'1; absurd (prime 0); auto.",
            "VernacExtend",
            "7ba8a8d00746043c02dc9d45f5c818360819e355"
        ],
        [
            "apply cong_divides; auto.",
            "VernacExtend",
            "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
        ],
        [
            "apply Fermat2; auto.",
            "VernacExtend",
            "337ef185a0e8492bbdcf559c17644351756b1436"
        ],
        [
            "generalize H'; case p; auto.",
            "VernacExtend",
            "df9f563d8b9711ab890a0401ea1c4cd06fd0d01b"
        ],
        [
            "intros H'1; absurd (prime 0); auto.",
            "VernacExtend",
            "7ba8a8d00746043c02dc9d45f5c818360819e355"
        ],
        [
            "intros n H'1.",
            "VernacExtend",
            "ee33b5ef53659b5eaf53ea910e834126cbb275b1"
        ],
        [
            "apply power_le; auto with arith.",
            "VernacExtend",
            "9ede661f2bdbad32967cb99999f45022c0d0a12c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "div_fact",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "simple induction k.",
                        "VernacExtend",
                        "7d54c1ad8f6e7191867edc84fbdc467b83bd5756"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros H' H'0; absurd (0 < 0); auto with arith.",
                        "VernacExtend",
                        "cc9608ba5ca38b038faab35294142005b1636b6f"
                    ]
                },
                {
                    "command": [
                        "intros k' H' H'0 H'1 H'2; case (L_Euclides2 p (S k') (factorial k')); auto.",
                        "VernacExtend",
                        "97879e963e0d818374efb71d37234a7b706b83c4"
                    ]
                },
                {
                    "command": [
                        "intros H'3; exists (S k'); auto.",
                        "VernacExtend",
                        "c7ad94e2952af2fdf3512a9c58bfbc7d29da027d"
                    ]
                },
                {
                    "command": [
                        "intros H'3.",
                        "VernacExtend",
                        "2e512d3c52562ab0fb19b78be8662c12b7168c72"
                    ]
                },
                {
                    "command": [
                        "elim H'; [ intros j E; elim E; intros H'7 H'8; elim H'8; intros H'9 H'10; try exact H'10 | clear H' | clear H' | clear H' ]; auto.",
                        "VernacExtend",
                        "2b2860418ae0ffdfe29da4d45da7217ea36b2289"
                    ]
                },
                {
                    "command": [
                        "exists j; split; auto.",
                        "VernacExtend",
                        "9f36e654af438a387561e8c85f17269f34dfce27"
                    ]
                },
                {
                    "command": [
                        "generalize H'3; case k'; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "364e4c5b7aba4bb79aba8bbdbe62b53cd5959ca8"
                    ]
                },
                {
                    "command": [
                        "intros H'4; absurd (prime 1); auto.",
                        "VernacExtend",
                        "0963304ad38820a8882a30b0825d7242b4d08daa"
                    ]
                },
                {
                    "command": [
                        "rewrite (divides_antisym 1 p); auto.",
                        "VernacExtend",
                        "9f46ba6b066b68d35622f49e47528c43d7c1e642"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "p_div_bin",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros k p; case p; auto.",
                        "VernacExtend",
                        "c354ceef347af6f678088d7474c94fb773b08225"
                    ]
                },
                {
                    "command": [
                        "intros H'; absurd (prime 0); auto.",
                        "VernacExtend",
                        "eeb031c6624d4cf141589a476039e18ddb76aeb2"
                    ]
                },
                {
                    "command": [
                        "intros p' H' H'0 H'1.",
                        "VernacExtend",
                        "dea912e134d42a696e457a238248be963e718bd2"
                    ]
                },
                {
                    "command": [
                        "apply L_Euclides1 with (factorial k); auto.",
                        "VernacExtend",
                        "cab9b7a0bdcf5ec6492aeae53d4c8fa6538c8b0a"
                    ]
                },
                {
                    "command": [
                        "apply L_Euclides1 with (factorial (S p' - k)); auto.",
                        "VernacExtend",
                        "f696676860310769eda893ff28ed3e69d4429351"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "pattern (S p') at 2 in |- *; rewrite (le_plus_minus k (S p')); auto with arith.",
                        "VernacExtend",
                        "168211e7b4b822916c1af85c201b57e952601777"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm with (m := factorial k); auto.",
                        "VernacExtend",
                        "29965f3f699c10b2e1b67770a268025a338c3267"
                    ]
                },
                {
                    "command": [
                        "rewrite binomial_fact; auto.",
                        "VernacExtend",
                        "f6174a6672d9858e053118a568258ee1be4c0eb1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto with arith.",
                        "VernacExtend",
                        "a5432e30d7d74e16734630adacbca5118010b9b1"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := factorial p'); rewrite mult_comm; auto.",
                        "VernacExtend",
                        "403213d9107ea598f1ec81677dcb370bed7190cb"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'2; elim (div_fact (S p') (S p' - k)); [ intros j E; elim E; intros H'7 H'8; elim H'8; intros H'9 H'10; clear H'8 E | idtac | idtac | idtac ]; auto with arith.",
                        "VernacExtend",
                        "1cb37ac17fda6e889f3568fb5abcf54d8901efb4"
                    ]
                },
                {
                    "command": [
                        "absurd (divides (S p') j); auto.",
                        "VernacExtend",
                        "6cf4bd04d77a91029ae97ff3349e45c48c3b0b05"
                    ]
                },
                {
                    "command": [
                        "apply not_lt_div; auto.",
                        "VernacExtend",
                        "8e588c26775de142d4ae44d5561f2b2cdb6de4af"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m := S p' - k); auto with arith.",
                        "VernacExtend",
                        "ac4836d329312222104c55894087c31e37aa72d3"
                    ]
                },
                {
                    "command": [
                        "apply lt_minus_O_lt; auto.",
                        "VernacExtend",
                        "2dffe5a9cbfb8601174c917413a07770b2c3cbbf"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'2.",
                        "VernacExtend",
                        "29798b4cb13ef1e364d399e1c3d559bb1deae4ac"
                    ]
                },
                {
                    "command": [
                        "elim (div_fact (S p') k); [ intros j E; elim E; intros H'8 H'9; elim H'9; intros H'10 H'11; clear H'9 E | idtac | idtac | idtac ]; auto.",
                        "VernacExtend",
                        "4f30baf111055be3744fc1ec6b26312d2118d0f1"
                    ]
                },
                {
                    "command": [
                        "absurd (divides (S p') j); auto.",
                        "VernacExtend",
                        "6cf4bd04d77a91029ae97ff3349e45c48c3b0b05"
                    ]
                },
                {
                    "command": [
                        "apply not_lt_div; auto.",
                        "VernacExtend",
                        "8e588c26775de142d4ae44d5561f2b2cdb6de4af"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m := k); auto with arith.",
                        "VernacExtend",
                        "5d8b580a40309bac896fda264bee5ac79c8d4c8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fermat1",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros x p; case p; auto.",
                        "VernacExtend",
                        "d48a68def849135efd0f810760aee84076e30c19"
                    ]
                },
                {
                    "command": [
                        "intros H'; absurd (prime 0); auto.",
                        "VernacExtend",
                        "eeb031c6624d4cf141589a476039e18ddb76aeb2"
                    ]
                },
                {
                    "command": [
                        "intros n; case n.",
                        "VernacExtend",
                        "b4ea99e9638b1f4853c8a1f258c5b4ff22cab052"
                    ]
                },
                {
                    "command": [
                        "intros H'; absurd (prime 1); auto.",
                        "VernacExtend",
                        "7fd0e638b72631ed464d4c8fbc47d687515b1be7"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'.",
                        "VernacExtend",
                        "e2fb2fd64e9fcf20cb20ff783166d17b896ad0f0"
                    ]
                },
                {
                    "command": [
                        "rewrite (exp_Pascal x 1).",
                        "VernacExtend",
                        "af02618abc2233bcb280471dbf7166b96301ce17"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_nm_i.",
                        "VernacExtend",
                        "c466300b9f438ce29c2ae6e34754a731535fb80d"
                    ]
                },
                {
                    "command": [
                        "rewrite sum_nm_f.",
                        "VernacExtend",
                        "edb21164b237a81852b0386af7e488d35b11bf4b"
                    ]
                },
                {
                    "command": [
                        "replace (binomial (S (S n0)) 0 * (power x (S (S n0) - 0) * power 1 0)) with (power x (S (S n0))).",
                        "VernacExtend",
                        "f9574e3d601c5155173d7c7925780b9eaf46b629"
                    ]
                },
                {
                    "command": [
                        "replace (binomial (S (S n0)) (1 + S n0) * (power x (S (S n0) - (1 + S n0)) * power 1 (1 + S n0))) with 1.",
                        "VernacExtend",
                        "2ae3de320bf89f80f8513a07cbe0d7d8aeeb656c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm with (m := 1).",
                        "VernacExtend",
                        "811db2d7dd2ade99d37cd63afca86e016a9aac3b"
                    ]
                },
                {
                    "command": [
                        "replace (power x (S (S n0)) + 1) with (power x (S (S n0)) + 1 + 0); auto with arith.",
                        "VernacExtend",
                        "266ca0bb0766a67669e123c3606599273479dea2"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_assoc.",
                        "VernacExtend",
                        "3bacd64a87549657845fdfa6170cde8d727d12ef"
                    ]
                },
                {
                    "command": [
                        "apply cong_plus; auto.",
                        "VernacExtend",
                        "8cd734ddeeffdcb4ec506d87015cfdcaf867d467"
                    ]
                },
                {
                    "command": [
                        "apply cong_ref; auto.",
                        "VernacExtend",
                        "53c146405acbc142c6a10700f466e7fdc41ca144"
                    ]
                },
                {
                    "command": [
                        "apply inv_sum_nm.",
                        "VernacExtend",
                        "0789c9f576438191ceb831a32fcf7e08a3a03f33"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (0 + 0); auto.",
                        "VernacExtend",
                        "decfc52f40c1953eef6650f9538036baa27637d2"
                    ]
                },
                {
                    "command": [
                        "intros; apply cong_plus; auto.",
                        "VernacExtend",
                        "30385f6990caf9a1b5faa610b01ab39cf9e3bcd9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply cong_mult_O.",
                        "VernacExtend",
                        "48b5fcd69a9b210478c7ce9e8e00588ebc4e1a42"
                    ]
                },
                {
                    "command": [
                        "apply cong_sym.",
                        "VernacExtend",
                        "b5510a0f5902aaecb159d12d8e9dae0eed3c257b"
                    ]
                },
                {
                    "command": [
                        "apply divides_cong.",
                        "VernacExtend",
                        "8f59c3360e62fb66a9d73323d8097b3a93bcd3a4"
                    ]
                },
                {
                    "command": [
                        "apply p_div_bin; auto with arith.",
                        "VernacExtend",
                        "91ae9eb824ed16490cabaab873ee6d6ff4a8e515"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite binomial_def3; simpl in |- *; auto.",
                        "VernacExtend",
                        "6989d5ad7c078fbca84cfef33422d39f93d9d872"
                    ]
                },
                {
                    "command": [
                        "repeat (rewrite binomial_def2; simpl in |- *; auto with arith).",
                        "VernacExtend",
                        "9323e7296aff0bdfd526648aa6da3e91597b0dbf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "f723529dfbfb6a37c254caaef79aac053d6103e3"
                    ]
                },
                {
                    "command": [
                        "rewrite power_SO.",
                        "VernacExtend",
                        "5b37b7b3b88ba066b907ea2d2749620c093b48f1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_O.",
                        "VernacExtend",
                        "82e76fe4a7447040940c37f8f7935de7fb153db6"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_1_r; auto.",
                        "VernacExtend",
                        "eee1d746a9d0e968de99c238cf0510a8b0aa99e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fermat2",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros x; elim x; auto.",
                        "VernacExtend",
                        "60009c3b651965c1a0eac46578bb63ea275bf7d9"
                    ]
                },
                {
                    "command": [
                        "intros p; case p; simpl in |- *; auto.",
                        "VernacExtend",
                        "afee7a9ab62d247041c6e9d02f5397b50015aedd"
                    ]
                },
                {
                    "command": [
                        "intros H'; absurd (prime 0); auto.",
                        "VernacExtend",
                        "eeb031c6624d4cf141589a476039e18ddb76aeb2"
                    ]
                },
                {
                    "command": [
                        "intros n H'; apply cong_ref; auto.",
                        "VernacExtend",
                        "ab1e339dbeac65f5209c93937954a576beb88680"
                    ]
                },
                {
                    "command": [
                        "intros n H' p H'0.",
                        "VernacExtend",
                        "2af61ee2f8e5988ceac506091c52887c58f04cfa"
                    ]
                },
                {
                    "command": [
                        "apply (cong_trans p) with (b := power n p + 1).",
                        "VernacExtend",
                        "b1342aa38b193396472b74d81cfdd94848118dae"
                    ]
                },
                {
                    "command": [
                        "replace (S n) with (n + 1); auto with arith.",
                        "VernacExtend",
                        "b7121b18ddb0cf7d30af02a79854378c97b5ce99"
                    ]
                },
                {
                    "command": [
                        "apply Fermat1; auto.",
                        "VernacExtend",
                        "1829bd6032fd15517336ade00c40b4cc8c747260"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; simpl in |- *; auto.",
                        "VernacExtend",
                        "a510e8b3ccb9a5207bf615eb71ff2e3ed8078042"
                    ]
                },
                {
                    "command": [
                        "replace (S n) with (n + 1).",
                        "VernacExtend",
                        "f588b35cfecbc841f9141c386215aafd318c47d4"
                    ]
                },
                {
                    "command": [
                        "apply cong_plus; auto.",
                        "VernacExtend",
                        "8cd734ddeeffdcb4ec506d87015cfdcaf867d467"
                    ]
                },
                {
                    "command": [
                        "apply cong_ref.",
                        "VernacExtend",
                        "db548c76e7d0f6c61dbcec97914bd3caca4c496e"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; simpl in |- *; auto.",
                        "VernacExtend",
                        "a510e8b3ccb9a5207bf615eb71ff2e3ed8078042"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fermat",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros x p H' H'0.",
                        "VernacExtend",
                        "2a499e1be5ff3deda356b2e34db403fd0ae4a65e"
                    ]
                },
                {
                    "command": [
                        "cut (x <= power x p); [ intros Lex | idtac ].",
                        "VernacExtend",
                        "634dcbb60b5f1eff8f91debae87961f27ddd56aa"
                    ]
                },
                {
                    "command": [
                        "cut (divides p (power x p - x)); [ intros H'1; inversion_clear H'1 | idtac ].",
                        "VernacExtend",
                        "b64e6fbb12aff6f67d0a4a7f202ec96a3f501108"
                    ]
                },
                {
                    "command": [
                        "cut (power x p = x * power x (p - 1)); [ intros Eqp | idtac ].",
                        "VernacExtend",
                        "4fb4943e85c4ecb037903c1f20b7c796d179e6d0"
                    ]
                },
                {
                    "command": [
                        "cut (x <> 0); [ intros nx | idtac ].",
                        "VernacExtend",
                        "c832bfe6b01310267b45520ffbd5d49a19573426"
                    ]
                },
                {
                    "command": [
                        "cut (divides x q); [ intros H2; inversion_clear H2 | idtac ].",
                        "VernacExtend",
                        "925152b91f9858dcf5641894b3b201acd8239053"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := 0) (v := q0); simpl in |- *; auto.",
                        "VernacExtend",
                        "da4049084f883993d3bd6de678d6f7f5c59b7917"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_O.",
                        "VernacExtend",
                        "82e76fe4a7447040940c37f8f7935de7fb153db6"
                    ]
                },
                {
                    "command": [
                        "apply eq_mult with x; auto.",
                        "VernacExtend",
                        "e6f0c5b6e3f65668eb4396a4fea41bf764d854ad"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Eqp; auto.",
                        "VernacExtend",
                        "16ebbd5d057ecfd9227b7a64897fbfd6c834ccf6"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *.",
                        "VernacExtend",
                        "47227ef1d2af555f99fb6c71c74ad226248599b8"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm with (m := x).",
                        "VernacExtend",
                        "80db8baae17b3eb72b249f56ebcd9fdfe0e343d8"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc.",
                        "VernacExtend",
                        "ff8f3d72650d99fb5d9d94021aab3ce435b4e7f3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm x).",
                        "VernacExtend",
                        "e99ec5c7a6ea1fe8e0d0a789aaf5e1f1a8ca0adb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_minus; auto.",
                        "VernacExtend",
                        "7d49dfe9def5f28d67afefdb4d8de9c60fd78f7b"
                    ]
                },
                {
                    "command": [
                        "apply L_Euclides with (a := p); auto.",
                        "VernacExtend",
                        "fcf55b3763328df5c888a0499bbcee531428cb8e"
                    ]
                },
                {
                    "command": [
                        "apply prime_gcd; auto.",
                        "VernacExtend",
                        "0d7bafb22fd8ae168c47bbe88efcbb85185ea6d9"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; rewrite <- H.",
                        "VernacExtend",
                        "3662b5c2712a2724cd4b4134be431771ffa2814d"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := power x (p - 1) - 1); auto.",
                        "VernacExtend",
                        "931ed39f477024fccaa5318ebeb48a998874353c"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_r.",
                        "VernacExtend",
                        "8affc1e7492a03e77da168a254c8278b756311fb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (A1 := nat) (A2 := nat); simpl in |- *; auto.",
                        "VernacExtend",
                        "117a765df81eb7fe0dc395877543439619d18f30"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; auto.",
                        "VernacExtend",
                        "6c3edfbd689b9ef2f201b9c9358184ca9f4a59f8"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'1; case H'0; rewrite H'1; auto.",
                        "VernacExtend",
                        "9b3491277e50b54d6f49f062b6bee2f642a6f026"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case p; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "90c696938f6db565a152930fb96c0b3e2c8b6ec7"
                    ]
                },
                {
                    "command": [
                        "intros H'1; absurd (prime 0); auto.",
                        "VernacExtend",
                        "7ba8a8d00746043c02dc9d45f5c818360819e355"
                    ]
                },
                {
                    "command": [
                        "apply cong_divides; auto.",
                        "VernacExtend",
                        "5b8ad0267ff6cc01cc6e9f8edad57f3e9da7f772"
                    ]
                },
                {
                    "command": [
                        "apply Fermat2; auto.",
                        "VernacExtend",
                        "337ef185a0e8492bbdcf559c17644351756b1436"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case p; auto.",
                        "VernacExtend",
                        "df9f563d8b9711ab890a0401ea1c4cd06fd0d01b"
                    ]
                },
                {
                    "command": [
                        "intros H'1; absurd (prime 0); auto.",
                        "VernacExtend",
                        "7ba8a8d00746043c02dc9d45f5c818360819e355"
                    ]
                },
                {
                    "command": [
                        "intros n H'1.",
                        "VernacExtend",
                        "ee33b5ef53659b5eaf53ea910e834126cbb275b1"
                    ]
                },
                {
                    "command": [
                        "apply power_le; auto with arith.",
                        "VernacExtend",
                        "9ede661f2bdbad32967cb99999f45022c0d0a12c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}