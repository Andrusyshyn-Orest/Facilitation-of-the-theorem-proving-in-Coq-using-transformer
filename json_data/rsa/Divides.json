{
    "filename": "Divides.v",
    "coq_project": "rsa",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Export MiscRsa.",
            "VernacRequire",
            "f362b0aa6f74c21b3c2df86f3f7c31b157672929"
        ],
        [
            "Inductive divides : nat -> nat -> Prop := dividesDef : forall a b q : nat, b = q * a -> divides a b.",
            "VernacInductive",
            "6980987a6a46254cdf1262fcaf75261c38bf2c63"
        ],
        [
            "Lemma div_ref : forall a : nat, divides a a.",
            "VernacStartTheoremProof",
            "60cc31240ebf295e21803f68ab6e8f77c6f177e5"
        ],
        [
            "intros a; apply dividesDef with (q := 1); auto with arith.",
            "VernacExtend",
            "49ec5023ca7950a69a6981b25fb833145486c06d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_divides : forall x y : nat, (exists q : _, is_div x y q 0) -> divides y x.",
            "VernacStartTheoremProof",
            "39e1a5ff5be10d919ec0c875280346d4f45a6429"
        ],
        [
            "intros x y H'; elim H'; intros q E; inversion_clear E; clear H'.",
            "VernacExtend",
            "7b795566cf1d37ced2ffc4f60c0b288283be6151"
        ],
        [
            "apply dividesDef with (q := q); auto.",
            "VernacExtend",
            "0894e55553c04b5c12430f7ef72deb92757862e1"
        ],
        [
            "rewrite H0; auto with arith.",
            "VernacExtend",
            "1e6a183f197fa0fcaafa00d29ecd9c590b860a05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_div : forall x y : nat, 0 < y -> divides y x -> exists q : _, is_div x y q 0.",
            "VernacStartTheoremProof",
            "8f53f91ddc1b5a04936c2f72498a82c444e8097a"
        ],
        [
            "intros x y H'1 H'2; inversion H'2.",
            "VernacExtend",
            "0d9ec60b80865104b522de169d2a34ff0df2be4a"
        ],
        [
            "exists q; auto.",
            "VernacExtend",
            "1fdae78c26ceaa9a35fb46406a63d0624830b684"
        ],
        [
            "apply is_div_def; auto with arith.",
            "VernacExtend",
            "4a1f541f917375d7237cf35fbc0034ca36bc524f"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_dec' : forall x y : nat, {(exists q : _, is_div x y q 0)} + {~ (exists q : _, is_div x y q 0)}.",
            "VernacStartTheoremProof",
            "e3b7d8fa2b2812b240fe5815e6ff20c8172c9d4f"
        ],
        [
            "intros x y; case y; auto.",
            "VernacExtend",
            "f452b00ac6bc59f7e7b1af92dfddcd58a5a09915"
        ],
        [
            "right; red in |- *; intros H'; elim H'; intros q E; inversion E; clear H'; auto.",
            "VernacExtend",
            "48e44d48424c40b01831a83d30c49895fd73198c"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "intros y'; case (eucl_dev (S y') (gt_Sn_O y') x).",
            "VernacExtend",
            "54340464c48b683a01cfe7176cf468a0540d90e5"
        ],
        [
            "intros q r; case r; auto.",
            "VernacExtend",
            "5bf661c987f2ebad755464d45e14510fe532405c"
        ],
        [
            "intros H' H'0; left; exists q; auto.",
            "VernacExtend",
            "de54ba24ea926858beb333f2820d210a30da3d13"
        ],
        [
            "apply is_div_def; auto; rewrite H'0; auto with arith.",
            "VernacExtend",
            "af24fc67090a06e66cebb13ec2f8d2d6ca0da389"
        ],
        [
            "intros n H' H'0; right; red in |- *; intros H'1; elim H'1; intros q0 E; clear H'1.",
            "VernacExtend",
            "ceaf318e699f28f9bb701a6076e8e7993accbd32"
        ],
        [
            "absurd (0 = S n); auto with arith.",
            "VernacExtend",
            "abd75b8f5da9a67347957a5cc0bbc58e2532831d"
        ],
        [
            "apply div_unic_r with (a := x) (b := S y') (q1 := q0) (q2 := q); auto.",
            "VernacExtend",
            "c44544f3c7da23124f4a25313db5c12e5ccff282"
        ],
        [
            "apply is_div_def; auto with arith.",
            "VernacExtend",
            "4a1f541f917375d7237cf35fbc0034ca36bc524f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_dec : forall x y : nat, {divides x y} + {~ divides x y}.",
            "VernacStartTheoremProof",
            "19078f91ab4e0a55a6e0692a985696a0a9b309b7"
        ],
        [
            "intros x y; case x; case y; auto.",
            "VernacExtend",
            "c049be51bec30cad65bb6c086a0e3eda658801c8"
        ],
        [
            "left; apply dividesDef with (q := 0); auto.",
            "VernacExtend",
            "d91331adf02f3b1bf88f2b8c07bde90667a8db82"
        ],
        [
            "intros n; right; red in |- *; intros H'; inversion_clear H'.",
            "VernacExtend",
            "99a1baf59ef335de895e197e4b934386b6f077f1"
        ],
        [
            "rewrite (mult_comm q 0) in H; discriminate.",
            "VernacExtend",
            "cf11314af184ac80343c828b5e96b0a43bb81651"
        ],
        [
            "intros n; left; apply dividesDef with (q := 0); auto.",
            "VernacExtend",
            "ca0a1aa62321b88c2e14f543684abafbd16cfb75"
        ],
        [
            "intros x' y'; case (divides_dec' (S x') (S y')); auto.",
            "VernacExtend",
            "3b47289af5bf93d09b625de536e149bc26a8d5fc"
        ],
        [
            "intros H'; left; apply div_divides; auto.",
            "VernacExtend",
            "6c5aff8bbccd692cc402bc5b1370a892aa58546d"
        ],
        [
            "intros H'; right; red in |- *; intros H'0; case H'; auto.",
            "VernacExtend",
            "042e98820324e4924fe1d530b738ef0bbc59cae5"
        ],
        [
            "inversion H'0.",
            "VernacExtend",
            "00e0ad3eaaed6a837c55aecf644d04a72455e588"
        ],
        [
            "exists q; auto.",
            "VernacExtend",
            "1fdae78c26ceaa9a35fb46406a63d0624830b684"
        ],
        [
            "apply is_div_def; auto with arith.",
            "VernacExtend",
            "4a1f541f917375d7237cf35fbc0034ca36bc524f"
        ],
        [
            "rewrite H; auto with arith.",
            "VernacExtend",
            "8392a856d0dbbc586f2ccf3f38a822850be88673"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_divides_O : forall n : nat, divides n 0.",
            "VernacStartTheoremProof",
            "261461e4a31e1b2886baeca3ee3d8c68415f5dc6"
        ],
        [
            "intros n; apply dividesDef with (q := 0); auto.",
            "VernacExtend",
            "13379133af21f78cae2f9fba0f1a6fafc17b6deb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SO_divides_all : forall n : nat, divides 1 n.",
            "VernacStartTheoremProof",
            "41ab45677c458619b570eba5a470eff61c500de7"
        ],
        [
            "intros n; apply dividesDef with (q := n); auto with arith.",
            "VernacExtend",
            "5d4051b65f20a1136d4490267ca5d4ea369e3761"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_plus1 : forall a b c : nat, divides a b -> divides a c -> divides a (b + c).",
            "VernacStartTheoremProof",
            "3569fa1240f36414607af8c72489c4cd37c268fe"
        ],
        [
            "intros a b c H' H'0; inversion_clear H'; inversion_clear H'0.",
            "VernacExtend",
            "ec1862138bc89568b72c26e878b6c30d647dc61b"
        ],
        [
            "apply dividesDef with (q := q + q0); auto.",
            "VernacExtend",
            "ac578d24d58b1658953c482d23b66daea53c9742"
        ],
        [
            "rewrite H; rewrite H0; auto with arith.",
            "VernacExtend",
            "16f55a8ca0553a9fad244e22decd1dceeedc8ee4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_plus2 : forall a b c : nat, divides a b -> divides a (b + c) -> divides a c.",
            "VernacStartTheoremProof",
            "49cbdd92cda3ec73e0361eb06d7fa4b5e9f572e8"
        ],
        [
            "intros a b c H' H'0; inversion_clear H'; inversion_clear H'0.",
            "VernacExtend",
            "ec1862138bc89568b72c26e878b6c30d647dc61b"
        ],
        [
            "apply dividesDef with (q := q0 - q).",
            "VernacExtend",
            "fa867e25ae5dc60a05565ad038e4364824a98217"
        ],
        [
            "rewrite mult_minus_distr_r.",
            "VernacExtend",
            "8affc1e7492a03e77da168a254c8278b756311fb"
        ],
        [
            "rewrite <- H; rewrite <- H0.",
            "VernacExtend",
            "c890194a1ac2b81309cd7e37bef7077d1de7efcd"
        ],
        [
            "rewrite minus_plus; auto.",
            "VernacExtend",
            "90d2fd3a8cf3286d185a3c8259f2318d44a10879"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divides_le : forall a b : nat, b <> 0 -> divides a b -> a <= b.",
            "VernacStartTheoremProof",
            "7a55022228ef14aec8a1274b23d51a1047780338"
        ],
        [
            "intros a b; case b.",
            "VernacExtend",
            "dddde652d6480873d5eb74cf1cc238fdc82041b9"
        ],
        [
            "intros H'; case H'; auto.",
            "VernacExtend",
            "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
        ],
        [
            "intros n H' H'0; inversion_clear H'0.",
            "VernacExtend",
            "af6c80fde989b52744a789bbbd691ce9b3be30ba"
        ],
        [
            "rewrite H; generalize H; case q; simpl in |- *; auto with arith; intros; discriminate.",
            "VernacExtend",
            "1eb2993fdf17b8cb5aaa1218d725338c5010b7cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_antisym : forall a b : nat, divides a b -> divides b a -> a = b.",
            "VernacStartTheoremProof",
            "c44d8aa8241129e029c2b1088a1c298c69e65df2"
        ],
        [
            "intros a b; case a; case b; auto.",
            "VernacExtend",
            "f64dfafefbcc685efdadf76d216b1a6ade6b3f4f"
        ],
        [
            "intros b' H' H'1; inversion_clear H'.",
            "VernacExtend",
            "d97dc21d82e22d7a3a9a7b1498a3327bb298e49b"
        ],
        [
            "rewrite H; auto with arith.",
            "VernacExtend",
            "8392a856d0dbbc586f2ccf3f38a822850be88673"
        ],
        [
            "intros a' H' H'1; inversion_clear H'1.",
            "VernacExtend",
            "7737369cc6c774373ce220b75a4b00bd21bc302d"
        ],
        [
            "rewrite H; auto with arith.",
            "VernacExtend",
            "8392a856d0dbbc586f2ccf3f38a822850be88673"
        ],
        [
            "intros n n0 H' H'0; apply le_antisym; apply divides_le; auto.",
            "VernacExtend",
            "b969f36b74dbf156e9228803bcb755c9600b5b1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_lt_div : forall a b : nat, 0 < b -> b < a -> ~ divides a b.",
            "VernacStartTheoremProof",
            "6117e0017c1465415d8681aab373c242fa8e84d2"
        ],
        [
            "intros a b H'1 H'2; red in |- *; intros H'3; absurd (a <= b); auto with arith.",
            "VernacExtend",
            "497f682a9acf5a0e025950790c882ad46f75d373"
        ],
        [
            "apply divides_le; auto.",
            "VernacExtend",
            "64211d1652343e755aa17841343b749f37b1bdea"
        ],
        [
            "apply sym_not_eq; auto with arith.",
            "VernacExtend",
            "46bdfc6afed026a7db3926360c7db624b863bcab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive prime : nat -> Prop := primeDef : forall a : nat, a <> 1 -> (forall b : nat, divides b a -> b <> 1 -> a = b) -> prime a.",
            "VernacInductive",
            "d467a4437f7c88bdf8220b36f0898962c4b472d2"
        ],
        [
            "Lemma not_prime_O : ~ prime 0.",
            "VernacStartTheoremProof",
            "6fc11e4b1199982ee9bd0d58e271ba956ff98b58"
        ],
        [
            "red in |- *; intros H'; inversion_clear H'; auto.",
            "VernacExtend",
            "820dc8ca29ae703441d4dad35508df07e2190e0e"
        ],
        [
            "absurd (0 = 2); auto with arith.",
            "VernacExtend",
            "b29a7ec4f9e84ae46d6f9ca7367cb6bf30b563bf"
        ],
        [
            "apply H0; auto.",
            "VernacExtend",
            "e167f871dfeec1cef76aaf201c54c081f29f730b"
        ],
        [
            "apply all_divides_O.",
            "VernacExtend",
            "0115d65033b72d746edcf1f6136893856c1942bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_prime_1 : ~ prime 1.",
            "VernacStartTheoremProof",
            "1bdce5cb9b5a998f4e0ac5093df628ac6fed1997"
        ],
        [
            "red in |- *; intros H'; inversion_clear H'; auto.",
            "VernacExtend",
            "820dc8ca29ae703441d4dad35508df07e2190e0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve div_ref all_divides_O SO_divides_all not_prime_O not_prime_1.",
            "VernacHints",
            "13e3a236bf78cfabf47c0dbb451c6c8bcb4de639"
        ],
        [
            "Lemma lt_prime : forall p : nat, prime p -> 1 < p.",
            "VernacStartTheoremProof",
            "2e353ed485b2a93a21dde7fa6052d1cec65ab1bd"
        ],
        [
            "intros p; case p.",
            "VernacExtend",
            "3fe2912e7637b448c6946cd153d26a7b946522ba"
        ],
        [
            "intro; absurd (prime 0); auto.",
            "VernacExtend",
            "2908f0c61c40f03654de5f25bd3620ebc6510713"
        ],
        [
            "intros n; case n.",
            "VernacExtend",
            "b4ea99e9638b1f4853c8a1f258c5b4ff22cab052"
        ],
        [
            "intro; absurd (prime 1); auto.",
            "VernacExtend",
            "165c11a5e27db20dc2a4730984c6c67adf8e0f05"
        ],
        [
            "intros; auto with arith.",
            "VernacExtend",
            "660aa3a1f13e95168de147a98a19de160321bd35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive is_gcd (a b c : nat) : Prop := is_gcd_intro : divides c a -> divides c b -> (forall d : nat, divides d a -> divides d b -> divides d c) -> is_gcd a b c.",
            "VernacInductive",
            "0148b6ca204307ef94f7a60a9174c56e8bd94e2c"
        ],
        [
            "Lemma is_gcd_unic : forall a b c d : nat, is_gcd a b c -> is_gcd a b d -> c = d.",
            "VernacStartTheoremProof",
            "b7f778e250782a05b1ca3f6b248543b6587df609"
        ],
        [
            "intros a b c d H' H'0; inversion_clear H'; inversion_clear H'0.",
            "VernacExtend",
            "1f656ee4d4ba3999fa3168eae4878f5ee212f413"
        ],
        [
            "apply divides_antisym; auto.",
            "VernacExtend",
            "76fafd0bc5d5948f89a582a31a77f5ba8d2f4c90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gcd_ref : forall x : nat, is_gcd x x x.",
            "VernacStartTheoremProof",
            "4235bc61c7fbfeb63e19760fea22451c62a16afe"
        ],
        [
            "intros x; apply is_gcd_intro; auto.",
            "VernacExtend",
            "d5292fcd52dc11b529c0fd40e84e1fc9f7b68b05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gcd_sym : forall a b c : nat, is_gcd a b c -> is_gcd b a c.",
            "VernacStartTheoremProof",
            "91bf8c63b3ff975994dd5690404677d4dd542ab7"
        ],
        [
            "intros a b c H; inversion_clear H; intros.",
            "VernacExtend",
            "58e39bfdadd74c12cd8c66be0fe79aafb408f3f6"
        ],
        [
            "apply is_gcd_intro; auto.",
            "VernacExtend",
            "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gcd_O' : forall a r : nat, is_gcd a 0 r -> a = r.",
            "VernacStartTheoremProof",
            "7dbe847f0fa9054dd31e86c27d311c32b6f804af"
        ],
        [
            "intros a r H'; inversion_clear H'.",
            "VernacExtend",
            "149af063e6887ba0188fe71a641609a6da8c54e5"
        ],
        [
            "apply divides_antisym; auto.",
            "VernacExtend",
            "76fafd0bc5d5948f89a582a31a77f5ba8d2f4c90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gcd_Ol : forall a : nat, is_gcd a 0 a.",
            "VernacStartTheoremProof",
            "80dd76c1a2b0126626beb91cd9b28bfd007b1922"
        ],
        [
            "intros a.",
            "VernacExtend",
            "9fef235d1a71132a4c9de7f87ab95d540098d91d"
        ],
        [
            "apply is_gcd_intro; auto.",
            "VernacExtend",
            "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_gcd_Or : forall a : nat, is_gcd 0 a a.",
            "VernacStartTheoremProof",
            "9db0ccc0d9ebb9d40fabc6360eea5d5cedf06f17"
        ],
        [
            "intros a.",
            "VernacExtend",
            "9fef235d1a71132a4c9de7f87ab95d540098d91d"
        ],
        [
            "apply is_gcd_intro; auto.",
            "VernacExtend",
            "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prime_gcd : forall p n : nat, prime p -> ~ divides p n -> is_gcd n p 1.",
            "VernacStartTheoremProof",
            "548b78cc7b33f5c1ff1a92830385034a73d4d054"
        ],
        [
            "intros p n H' H'0.",
            "VernacExtend",
            "c067d9edde3b90ec7719273563e00ce3bf01f426"
        ],
        [
            "apply is_gcd_intro; auto.",
            "VernacExtend",
            "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
        ],
        [
            "intros d H'1 H'2.",
            "VernacExtend",
            "0369ff05dd23049c6d5428214e31df301c12c014"
        ],
        [
            "inversion_clear H'.",
            "VernacExtend",
            "18ae047618136a9a486781b83a1f3fe38aade884"
        ],
        [
            "elim (eq_nat_dec d 1); intros H'4; auto.",
            "VernacExtend",
            "77e2d7f9267e9f8f2f2ab829231f3448d2f7357d"
        ],
        [
            "rewrite H'4; auto.",
            "VernacExtend",
            "4d1a9c913908d4131f22e0efbc1d2c6df5beb11a"
        ],
        [
            "elim (eq_nat_dec p d); intros H'5; auto.",
            "VernacExtend",
            "8bb16b9e69b313843ce5bf89b8ea17af15eecd9a"
        ],
        [
            "case H'0; try rewrite H'5; auto.",
            "VernacExtend",
            "7b4c1262d8bba6031bc101e3c7072bae307f1505"
        ],
        [
            "case H'5; apply H0; auto.",
            "VernacExtend",
            "e6c4937e540f77c56234ee3e84b4200aedcd6c77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_rec : forall P : nat -> nat -> Set, (forall x : nat, P 0 x) -> (forall x : nat, P x 0) -> (forall a b : nat, P a b -> P a (b + a)) -> (forall a b : nat, P a b -> P (a + b) b) -> forall a b : nat, P a b.",
            "VernacStartTheoremProof",
            "787a3555d7a442558aff4040d8af64f64da59eb7"
        ],
        [
            "intros P H H0 H1 H2 a; pattern a in |- *; apply lt_wf_rec.",
            "VernacExtend",
            "3e1a630b0819bf86ba0cfe21232a9c9a2a43a7ad"
        ],
        [
            "intros a' H' b; pattern b in |- *; apply lt_wf_rec.",
            "VernacExtend",
            "a93d5435a61fc474be9e9263d1a4c9a0593107ba"
        ],
        [
            "intros b' H'0.",
            "VernacExtend",
            "b53b2692417e14e466b414855d2dad013cb89c84"
        ],
        [
            "case (lt_eq_lt_dec a' b'); intros Ca'b'; [ case Ca'b'; clear Ca'b'; intros Ca'b' | idtac ].",
            "VernacExtend",
            "857d7ec253cb38b89ada548bbe9229f7a753d2a7"
        ],
        [
            "2: rewrite Ca'b'; auto.",
            "VernacExtend",
            "4ec01b23d89150769b4993e654b7929fbba8dde7"
        ],
        [
            "2: pattern b' at 1 in |- *; replace b' with (0 + b'); auto.",
            "VernacExtend",
            "a433a3e14c41227609025c8cdc7c6b948f2e99be"
        ],
        [
            "replace b' with (b' - a' + a'); auto with arith.",
            "VernacExtend",
            "609f9eaa194e57a4439be4e04d9c8c5fdc4b4028"
        ],
        [
            "case (zerop a'); intros lta'.",
            "VernacExtend",
            "601af092da05445e15ce2c42cca214b2b2480c99"
        ],
        [
            "rewrite lta'; auto.",
            "VernacExtend",
            "fda5720b79764ccd9678901b05e7306dce420113"
        ],
        [
            "apply H1; apply H'0; auto with arith.",
            "VernacExtend",
            "c7a778457aa47fdc99179b0d5903bf97712bb551"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "replace a' with (a' - b' + b'); auto with arith.",
            "VernacExtend",
            "e16fa3269efffc70fe06e2713618ba716b04d81b"
        ],
        [
            "case (zerop b'); intros ltb'.",
            "VernacExtend",
            "501eba81cd13927a1140dae7ecdfbaa01b0e0f90"
        ],
        [
            "rewrite ltb'; auto.",
            "VernacExtend",
            "065193b86a6fad68b33033d1654676be35bc3718"
        ],
        [
            "apply H2; apply H'; auto with arith.",
            "VernacExtend",
            "1e4e90ce1d2ca55707a149b04ad970f07abf1dab"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_ind : forall P : nat -> nat -> Prop, (forall x : nat, P 0 x) -> (forall x : nat, P x 0) -> (forall a b : nat, P a b -> P a (b + a)) -> (forall a b : nat, P a b -> P (a + b) b) -> forall a b : nat, P a b.",
            "VernacStartTheoremProof",
            "9b7fb2ec5c3e75f1160870aebc2deac448a9111e"
        ],
        [
            "intros P H H0 H1 H2 a; pattern a in |- *; apply lt_wf_ind.",
            "VernacExtend",
            "334ed62ebaf5b5635b4567b729f33c20be32fd51"
        ],
        [
            "intros a' H' b; pattern b in |- *; apply lt_wf_ind.",
            "VernacExtend",
            "81df2ac0850eae6c72b47d09bd9ea6e00a3cee77"
        ],
        [
            "intros b' H'0.",
            "VernacExtend",
            "b53b2692417e14e466b414855d2dad013cb89c84"
        ],
        [
            "case (lt_eq_lt_dec a' b'); intros Ca'b'; [ case Ca'b'; clear Ca'b'; intros Ca'b' | idtac ].",
            "VernacExtend",
            "857d7ec253cb38b89ada548bbe9229f7a753d2a7"
        ],
        [
            "2: rewrite Ca'b'; auto.",
            "VernacExtend",
            "4ec01b23d89150769b4993e654b7929fbba8dde7"
        ],
        [
            "2: pattern b' at 1 in |- *; replace b' with (0 + b'); auto.",
            "VernacExtend",
            "a433a3e14c41227609025c8cdc7c6b948f2e99be"
        ],
        [
            "replace b' with (b' - a' + a'); auto with arith.",
            "VernacExtend",
            "609f9eaa194e57a4439be4e04d9c8c5fdc4b4028"
        ],
        [
            "case (zerop a'); intros lta'.",
            "VernacExtend",
            "601af092da05445e15ce2c42cca214b2b2480c99"
        ],
        [
            "rewrite lta'; auto.",
            "VernacExtend",
            "fda5720b79764ccd9678901b05e7306dce420113"
        ],
        [
            "apply H1; apply H'0; auto with arith.",
            "VernacExtend",
            "c7a778457aa47fdc99179b0d5903bf97712bb551"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "replace a' with (a' - b' + b'); auto with arith.",
            "VernacExtend",
            "e16fa3269efffc70fe06e2713618ba716b04d81b"
        ],
        [
            "case (zerop b'); intros ltb'.",
            "VernacExtend",
            "501eba81cd13927a1140dae7ecdfbaa01b0e0f90"
        ],
        [
            "rewrite ltb'; auto.",
            "VernacExtend",
            "065193b86a6fad68b33033d1654676be35bc3718"
        ],
        [
            "apply H2; apply H'; auto with arith.",
            "VernacExtend",
            "1e4e90ce1d2ca55707a149b04ad970f07abf1dab"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive gcd_spec : nat -> nat -> nat -> Prop := | gcd_spec_ex0 : forall a : nat, gcd_spec a 0 a | gcd_spec_ex1 : forall b : nat, gcd_spec 0 b b | gcd_spec_ex2 : forall a b c : nat, a < b -> gcd_spec a (b - a) c -> gcd_spec a b c | gcd_spec_ex3 : forall a b c : nat, b <= a -> gcd_spec (a - b) b c -> gcd_spec a b c.",
            "VernacInductive",
            "570afeddc8b95721fcdf08d24ca0d2db41a7991a"
        ],
        [
            "Hint Resolve gcd_spec_ex0 gcd_spec_ex1.",
            "VernacHints",
            "88ab922b005b2cde6825cd0a34daa152269e8f31"
        ],
        [
            "Theorem gcd_inv_Or_aux : forall a b c : nat, gcd_spec a b c -> b = 0 -> a = c.",
            "VernacStartTheoremProof",
            "5bfac3d0953133c2bd24073dffe8eb20302e5aff"
        ],
        [
            "intros a b c H'; elim H'; auto.",
            "VernacExtend",
            "f979a70ee0ec90ea63c1c5b91956eb55c2dd4b3f"
        ],
        [
            "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "e29b2e33c59d052ba2364745c695954d85d2519e"
        ],
        [
            "apply H'2; auto.",
            "VernacExtend",
            "a164c9738e5df320ed05067f01092f4a2e3c5e0a"
        ],
        [
            "rewrite H'3; auto.",
            "VernacExtend",
            "b933c076500edf22608523e02109fb3904029f8e"
        ],
        [
            "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "e29b2e33c59d052ba2364745c695954d85d2519e"
        ],
        [
            "replace a0 with (a0 - b0); auto.",
            "VernacExtend",
            "5e943729646f7c0b746af03f3d04bfd132103e8e"
        ],
        [
            "rewrite H'3; auto with arith.",
            "VernacExtend",
            "978dcd83531b33ff78f9b3e05f1d7ddc5e6ba994"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gcd_inv_Or : forall a b : nat, gcd_spec a 0 b -> a = b.",
            "VernacStartTheoremProof",
            "b0a8bb4cb57a71788cf50d92ec5333e0aaa25615"
        ],
        [
            "intros a b H'.",
            "VernacExtend",
            "bd160d2246ab14528cfcf9da0463f63a88c538ea"
        ],
        [
            "apply gcd_inv_Or_aux with (b := 0); auto.",
            "VernacExtend",
            "111542d239aa26972ebed2be762e49961acb9942"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gcd_inv_Ol_aux : forall a b c : nat, gcd_spec a b c -> a = 0 -> b = c.",
            "VernacStartTheoremProof",
            "a5bd97dee0cd2f8d418e832233b54880cad596e8"
        ],
        [
            "intros a b c H'; elim H'; auto.",
            "VernacExtend",
            "f979a70ee0ec90ea63c1c5b91956eb55c2dd4b3f"
        ],
        [
            "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "e29b2e33c59d052ba2364745c695954d85d2519e"
        ],
        [
            "replace b0 with (b0 - a0); auto.",
            "VernacExtend",
            "ac3bfa00a0b31952ae4b0e8a71263423928688d7"
        ],
        [
            "rewrite H'3; auto with arith.",
            "VernacExtend",
            "978dcd83531b33ff78f9b3e05f1d7ddc5e6ba994"
        ],
        [
            "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "e29b2e33c59d052ba2364745c695954d85d2519e"
        ],
        [
            "apply H'2; auto.",
            "VernacExtend",
            "a164c9738e5df320ed05067f01092f4a2e3c5e0a"
        ],
        [
            "rewrite H'3; auto.",
            "VernacExtend",
            "b933c076500edf22608523e02109fb3904029f8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gcd_inv_Ol : forall a b : nat, gcd_spec 0 a b -> a = b.",
            "VernacStartTheoremProof",
            "fa7ee7a2c340cef70a8e2f0cb85a9ebee1e4c924"
        ],
        [
            "intros a b H'.",
            "VernacExtend",
            "bd160d2246ab14528cfcf9da0463f63a88c538ea"
        ],
        [
            "apply gcd_inv_Ol_aux with (a := 0); auto.",
            "VernacExtend",
            "98cb2a978176feeb0ae94a4b656f4cac70d66378"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gcd' := gcd_rec (fun _ _ : nat => nat) (fun x : nat => x) (fun x : nat => x) (fun x y r : nat => r) (fun x y r : nat => r).",
            "VernacDefinition",
            "02f375845ccb8e51154f960c2401f9bee8ce4d61"
        ],
        [
            "Lemma gcd_ex : forall a b : nat, {r : nat | gcd_spec a b r}.",
            "VernacStartTheoremProof",
            "bc22bfae5c01bb8513b45971d53386f889a04f48"
        ],
        [
            "intros a b; pattern b, a in |- *; apply gcd_rec; clear a b.",
            "VernacExtend",
            "6dd42d20245986acbd8a4ce8e79380dda0b7b329"
        ],
        [
            "intros a; exists a; auto.",
            "VernacExtend",
            "e59cb5fff547dc959e4980cc40a2f2e21f4b6e34"
        ],
        [
            "intros b; exists b; auto.",
            "VernacExtend",
            "84342b0c17b662070c0c7df27e0d488648e3076a"
        ],
        [
            "intros a b Rr; case Rr; intros r Hr; exists r.",
            "VernacExtend",
            "3584696449c9b597458d34630d988b5649ab4e19"
        ],
        [
            "apply gcd_spec_ex3; auto with arith.",
            "VernacExtend",
            "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
        ],
        [
            "rewrite plus_comm; rewrite minus_plus; auto; rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "854d8c93e8adc865483e52630bbda6e13ce0da53"
        ],
        [
            "intros a b Rr; case Rr; intros r Hr; exists r.",
            "VernacExtend",
            "3584696449c9b597458d34630d988b5649ab4e19"
        ],
        [
            "case (zerop a); intros lta.",
            "VernacExtend",
            "5196fce6a6464cea3f7ae68b59362deedc5065e2"
        ],
        [
            "rewrite lta; simpl in |- *.",
            "VernacExtend",
            "26d5eff179b7a4d8dd654b84bb895b392a305e90"
        ],
        [
            "rewrite <- (gcd_inv_Or b r); auto.",
            "VernacExtend",
            "378c646248112c10a31240471c97a3cac3bcc139"
        ],
        [
            "apply gcd_spec_ex3; auto with arith.",
            "VernacExtend",
            "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
        ],
        [
            "rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "f723529dfbfb6a37c254caaef79aac053d6103e3"
        ],
        [
            "rewrite <- lta; auto.",
            "VernacExtend",
            "1dec4a288b724d447321382a31f3191290834379"
        ],
        [
            "apply gcd_spec_ex2; auto with arith.",
            "VernacExtend",
            "6ec98fcd56f8f18be33be217c7275be483259cf1"
        ],
        [
            "pattern b at 1 in |- *; replace b with (0 + b); auto with arith.",
            "VernacExtend",
            "0da5993a46487e96fee83a83dbe22346d5794aef"
        ],
        [
            "rewrite plus_comm; rewrite minus_plus; auto; rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "854d8c93e8adc865483e52630bbda6e13ce0da53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gcd (a b : nat) := proj1_sig (gcd_ex a b).",
            "VernacDefinition",
            "a8dd919c8615b9912ee2450e4bb0427e654274a4"
        ],
        [
            "Lemma gcd_correct : forall a b : nat, gcd_spec a b (gcd a b).",
            "VernacStartTheoremProof",
            "a85087c7d9238b73155ac2eff32a890108fd6779"
        ],
        [
            "intros a b; unfold gcd in |- *; case (gcd_ex a b); simpl in |- *; auto.",
            "VernacExtend",
            "73c10f9832e0b44b9eda16f4d7d853b83e8a5fc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve gcd_correct.",
            "VernacHints",
            "d74cf2bedfd54aceb41f209eff9828cff4ff3645"
        ],
        [
            "Lemma gcd_spec_uniq : forall a b r1 r2 : nat, gcd_spec a b r1 -> gcd_spec a b r2 -> r1 = r2.",
            "VernacStartTheoremProof",
            "3c1f8838397de06c2518f3e24aa6df4b550874a8"
        ],
        [
            "intros a b r1 r2 H'; generalize r2; elim H'; clear H' a b r1 r2.",
            "VernacExtend",
            "cab0e1f4caa9131b8aec6dd220e682f5622add29"
        ],
        [
            "exact gcd_inv_Or.",
            "VernacExtend",
            "cc1b81de1d29d2df15cba2aa8b9594d562c99f97"
        ],
        [
            "exact gcd_inv_Ol.",
            "VernacExtend",
            "8abab116f0532072e6587b58e2f3eeaf7de90e68"
        ],
        [
            "intros a b c H' H'0 H'1 r2 H'2; inversion H'2; auto.",
            "VernacExtend",
            "dc1ba515593d37d89372a2c57f29249d738cf938"
        ],
        [
            "apply H'1; auto.",
            "VernacExtend",
            "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
        ],
        [
            "rewrite <- H0; simpl in |- *; rewrite H1; auto.",
            "VernacExtend",
            "7b676d96f92349ddbe4d654a866ce0c4a0e08d35"
        ],
        [
            "apply H'1; auto.",
            "VernacExtend",
            "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
        ],
        [
            "rewrite <- H; simpl in |- *; rewrite <- minus_n_O; rewrite H1; auto.",
            "VernacExtend",
            "1724a949c78ded54f887168ba7be1ba1f14b182a"
        ],
        [
            "absurd (a < b); auto with arith.",
            "VernacExtend",
            "b3a998aa876e5530af61f52732d093f8f2967b62"
        ],
        [
            "intros a b c H' H'0 H'1 r2 H'2; inversion H'2; auto.",
            "VernacExtend",
            "dc1ba515593d37d89372a2c57f29249d738cf938"
        ],
        [
            "apply H'1; auto.",
            "VernacExtend",
            "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
        ],
        [
            "rewrite <- H0; simpl in |- *; rewrite H1; rewrite <- minus_n_O; auto.",
            "VernacExtend",
            "7db6a63ffcca42e76a97c902dbeab31c4daa8eb9"
        ],
        [
            "apply H'1; auto.",
            "VernacExtend",
            "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
        ],
        [
            "rewrite <- H; simpl in |- *; rewrite H1; auto.",
            "VernacExtend",
            "51bec44e02f31868d40b176520ce3caad1b892dc"
        ],
        [
            "absurd (a < b); auto with arith.",
            "VernacExtend",
            "b3a998aa876e5530af61f52732d093f8f2967b62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_correct2 : forall a b r : nat, gcd_spec a b r -> gcd a b = r.",
            "VernacStartTheoremProof",
            "c5a5acc9836d66ecde801520cb5dd65cc183263e"
        ],
        [
            "intros a b r H'.",
            "VernacExtend",
            "993b390fad33da7c27f8de96161501334ed0d4ce"
        ],
        [
            "apply gcd_spec_uniq with (a := a) (b := b); auto.",
            "VernacExtend",
            "725cef65e337d16651987000ca9896bb9b5b8ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_def0l : forall x : nat, gcd 0 x = x.",
            "VernacStartTheoremProof",
            "a7378c83f5c8ecb43015cf63a6e2ee3188822680"
        ],
        [
            "intros x; apply gcd_spec_uniq with (a := 0) (b := x); auto.",
            "VernacExtend",
            "9e5181e85bbe36c6e65af7e7668325d03bec3f4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_def0r : forall x : nat, gcd x 0 = x.",
            "VernacStartTheoremProof",
            "d19096eb004a201299557f49266d01b48abf5cb8"
        ],
        [
            "intros x; apply gcd_spec_uniq with (a := x) (b := 0); auto.",
            "VernacExtend",
            "d111c674d174ef88bc311708c2d106e1baadf9a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_def1 : forall x : nat, gcd x x = x.",
            "VernacStartTheoremProof",
            "30972c7df304621a1e5ace0105b2520692857bd7"
        ],
        [
            "intros x; apply gcd_spec_uniq with (a := x) (b := x); auto.",
            "VernacExtend",
            "9f11be70ce90ea68baafff1d0eaa609d6701953c"
        ],
        [
            "apply gcd_spec_ex3; auto.",
            "VernacExtend",
            "9295c1631ab0e39e6ef4689cabcb4b69bffa0579"
        ],
        [
            "rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "f723529dfbfb6a37c254caaef79aac053d6103e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_def2 : forall a b : nat, gcd a b = gcd a (b + a).",
            "VernacStartTheoremProof",
            "e2dc3ecd5d844881b0472503ba15d2da073d7198"
        ],
        [
            "intros a b; apply gcd_spec_uniq with (a := a) (b := b + a); auto.",
            "VernacExtend",
            "96e72cf2efdb4cd756563e403b7640a7039e587a"
        ],
        [
            "case (zerop b); intros ltb.",
            "VernacExtend",
            "0ef274fecd8c78ff75a351e2aa7ac7b9677c33a6"
        ],
        [
            "rewrite ltb; simpl in |- *; rewrite gcd_def0r; auto.",
            "VernacExtend",
            "30e81a88d4098cb6ea2d0da6a1ceae71e88a5dbe"
        ],
        [
            "apply gcd_spec_ex3; auto.",
            "VernacExtend",
            "9295c1631ab0e39e6ef4689cabcb4b69bffa0579"
        ],
        [
            "rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "f723529dfbfb6a37c254caaef79aac053d6103e3"
        ],
        [
            "apply gcd_spec_ex2; auto with arith.",
            "VernacExtend",
            "6ec98fcd56f8f18be33be217c7275be483259cf1"
        ],
        [
            "replace a with (0 + a); auto with arith.",
            "VernacExtend",
            "3d0863e382fbda4c09690ff45d4925e8ad9a4c3d"
        ],
        [
            "rewrite plus_comm; rewrite minus_plus.",
            "VernacExtend",
            "19ab82343c49e444f29582ecadc39edb49f22fcc"
        ],
        [
            "apply gcd_correct; auto.",
            "VernacExtend",
            "227077771a11128b9b0d4c338c4a4a29ba07ce59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_def3 : forall a b : nat, gcd a b = gcd (a + b) b.",
            "VernacStartTheoremProof",
            "5e48e42abd7b8197e013d40e48930ccf5308c719"
        ],
        [
            "intros a b; apply gcd_spec_uniq with (a := a + b) (b := b); auto.",
            "VernacExtend",
            "299052c854e7a4f37632e6189dd1f034c5f51df2"
        ],
        [
            "case (zerop a); intros lta.",
            "VernacExtend",
            "5196fce6a6464cea3f7ae68b59362deedc5065e2"
        ],
        [
            "rewrite lta; simpl in |- *; rewrite gcd_def0l; auto.",
            "VernacExtend",
            "5a0da7ad4b9d7e4b3bd5e2bef22ccb54be8599ca"
        ],
        [
            "apply gcd_spec_ex3; auto with arith.",
            "VernacExtend",
            "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
        ],
        [
            "rewrite <- minus_n_n; auto.",
            "VernacExtend",
            "f723529dfbfb6a37c254caaef79aac053d6103e3"
        ],
        [
            "apply gcd_spec_ex3; auto with arith.",
            "VernacExtend",
            "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
        ],
        [
            "rewrite plus_comm; rewrite minus_plus.",
            "VernacExtend",
            "19ab82343c49e444f29582ecadc39edb49f22fcc"
        ],
        [
            "apply gcd_correct; auto.",
            "VernacExtend",
            "227077771a11128b9b0d4c338c4a4a29ba07ce59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_is_gcd : forall a b : nat, is_gcd a b (gcd a b).",
            "VernacStartTheoremProof",
            "dbe756155edc8c0a52d2e9be16339a4735931a70"
        ],
        [
            "intros; pattern a, b in |- *; apply gcd_ind; clear a b.",
            "VernacExtend",
            "3576e94bd8790a317ac6850476f2782ff60e2203"
        ],
        [
            "intros x; rewrite gcd_def0l; auto.",
            "VernacExtend",
            "4b716d25fbb5ce4241be1b83e33c319e128ccf53"
        ],
        [
            "apply is_gcd_Or; auto.",
            "VernacExtend",
            "23aa37b5ab294abf35b56be3611678e6e08217b1"
        ],
        [
            "intros x; rewrite gcd_def0r; auto.",
            "VernacExtend",
            "a424fa649e8875c7be6e6b2cd32af1dda1e046e3"
        ],
        [
            "apply is_gcd_Ol; auto.",
            "VernacExtend",
            "e71d3a3e02b53049d0b4f883603a6219a951a8ff"
        ],
        [
            "intros a b H'; rewrite <- gcd_def2.",
            "VernacExtend",
            "49c230385cdddb08571383faeeb7f723e37436b0"
        ],
        [
            "inversion_clear H'.",
            "VernacExtend",
            "18ae047618136a9a486781b83a1f3fe38aade884"
        ],
        [
            "apply is_gcd_intro; auto.",
            "VernacExtend",
            "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
        ],
        [
            "apply divides_plus1; auto.",
            "VernacExtend",
            "d292d3c60324d196b6d50d226e02ef3faae3259d"
        ],
        [
            "intros d H' H'0.",
            "VernacExtend",
            "7858cd1a851c22b4c051c225bb044054b3e236d8"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "apply divides_plus2 with (b := a); auto.",
            "VernacExtend",
            "71c52a4586d545e8c91de6aeee98214939a2505b"
        ],
        [
            "rewrite plus_comm; auto.",
            "VernacExtend",
            "be5d0dcccc55ce4260cd664dcabdc8289d7f9027"
        ],
        [
            "intros a b H'; rewrite <- gcd_def3.",
            "VernacExtend",
            "5860fc3a24dba28212dca40e3e66ca2838604836"
        ],
        [
            "inversion_clear H'.",
            "VernacExtend",
            "18ae047618136a9a486781b83a1f3fe38aade884"
        ],
        [
            "apply is_gcd_intro; auto.",
            "VernacExtend",
            "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
        ],
        [
            "apply divides_plus1; auto.",
            "VernacExtend",
            "d292d3c60324d196b6d50d226e02ef3faae3259d"
        ],
        [
            "intros d H' H'0.",
            "VernacExtend",
            "7858cd1a851c22b4c051c225bb044054b3e236d8"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "apply divides_plus2 with (b := b); auto.",
            "VernacExtend",
            "6427ff69a9a74379b067ef3bff3f1a14e7224044"
        ],
        [
            "rewrite plus_comm; auto.",
            "VernacExtend",
            "be5d0dcccc55ce4260cd664dcabdc8289d7f9027"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma preEuclid : forall a b c m : nat, divides c (m * a) -> divides c (m * b) -> divides c (m * gcd a b).",
            "VernacStartTheoremProof",
            "d3df8cc9e6152309e859301a86d8d092f6f6afd7"
        ],
        [
            "intros a b; pattern a, b in |- *; apply gcd_ind; clear a b.",
            "VernacExtend",
            "98e742d3b453e2ce7cd7460be2495f7dd54f5fa9"
        ],
        [
            "intros x c m H' H'0; rewrite gcd_def0l; auto.",
            "VernacExtend",
            "7eb6b6fd35e7edb397437dbd82b248fd579d3976"
        ],
        [
            "intros x c m H' H'0; rewrite gcd_def0r; auto.",
            "VernacExtend",
            "c272bb7dce97818d0d8d1b8716f8cfc556d0bc54"
        ],
        [
            "intros a b H' c m H'0 H'1; rewrite <- gcd_def2.",
            "VernacExtend",
            "6b59fa11efeebb296356e8dd46cb844210228f9f"
        ],
        [
            "apply H'; auto.",
            "VernacExtend",
            "207a890ff324766988e4ef387babc047c1f93b3b"
        ],
        [
            "apply divides_plus2 with (m * a); auto.",
            "VernacExtend",
            "2b159570c07b62e1c97e75577d1d1c2f32dc9332"
        ],
        [
            "rewrite mult_comm; pattern mult at 1 in |- *; rewrite mult_comm; rewrite <- mult_plus_distr_r; rewrite mult_comm.",
            "VernacExtend",
            "ffa5494a0577f651dc6a20c91d7ef79500736c8e"
        ],
        [
            "rewrite plus_comm; simpl in |- *; assumption.",
            "VernacExtend",
            "e8b99c33b1202f4ce258ec07115871710b62d4ea"
        ],
        [
            "intros a b H' c m H'0 H'1; rewrite <- gcd_def3.",
            "VernacExtend",
            "ea4a2c4cfca757b84e93c5f714d6d3a3843fa099"
        ],
        [
            "apply H'; auto.",
            "VernacExtend",
            "207a890ff324766988e4ef387babc047c1f93b3b"
        ],
        [
            "apply divides_plus2 with (m * b); auto.",
            "VernacExtend",
            "adca825ed5789ef31c77592d7a24e502ac472530"
        ],
        [
            "rewrite mult_comm; pattern mult at 1 in |- *; rewrite mult_comm; rewrite <- mult_plus_distr_r; rewrite mult_comm.",
            "VernacExtend",
            "ffa5494a0577f651dc6a20c91d7ef79500736c8e"
        ],
        [
            "rewrite plus_comm; simpl in |- *; assumption.",
            "VernacExtend",
            "e8b99c33b1202f4ce258ec07115871710b62d4ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem L_Euclides : forall x a b : nat, is_gcd x a 1 -> divides x (a * b) -> divides x b.",
            "VernacStartTheoremProof",
            "93781d271aaba39b1a506865c1801af759d96d5a"
        ],
        [
            "intros x a b H' H'0; replace b with (b * gcd x a).",
            "VernacExtend",
            "310c8e6489f2456a25c420e2e6fb72c70b504b68"
        ],
        [
            "apply preEuclid; auto with arith.",
            "VernacExtend",
            "4fb02236b112419aab8a9b42c5d2a1b5a3b9f992"
        ],
        [
            "apply dividesDef with (q := b); auto with arith.",
            "VernacExtend",
            "ebd6f2b27f44cfe03ded22ad8a298cdb90d72943"
        ],
        [
            "rewrite mult_comm; auto.",
            "VernacExtend",
            "6c3edfbd689b9ef2f201b9c9358184ca9f4a59f8"
        ],
        [
            "rewrite (is_gcd_unic x a (gcd x a) 1); auto with arith.",
            "VernacExtend",
            "f0a85789aa7251d66ea69fa92397316c7d1352b9"
        ],
        [
            "apply gcd_is_gcd; auto.",
            "VernacExtend",
            "7734cd3bf99ba65873927d495783f0a8dd699717"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma L_Euclides1 : forall p a b : nat, prime p -> divides p (a * b) -> ~ divides p a -> divides p b.",
            "VernacStartTheoremProof",
            "b171c14e1709964617e3da98752c4acfb39b6657"
        ],
        [
            "intros; apply L_Euclides with a; auto.",
            "VernacExtend",
            "ed1987f851aa2e1dd0f8ee55b55700abfc4056a3"
        ],
        [
            "apply is_gcd_sym.",
            "VernacExtend",
            "2d9653e7a06e9e7787ab2ae2584928111aef3ef3"
        ],
        [
            "apply prime_gcd; auto.",
            "VernacExtend",
            "0d7bafb22fd8ae168c47bbe88efcbb85185ea6d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma L_Euclides2 : forall p a b : nat, prime p -> divides p (a * b) -> divides p a \\/ divides p b.",
            "VernacStartTheoremProof",
            "640ea264e3e83116a50fd428bad7f663204ccfee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (divides_dec p a); [ left | right ]; auto.",
            "VernacExtend",
            "eac7d26375b4981416a0fb01cd7879312a6b1530"
        ],
        [
            "apply L_Euclides1 with a; auto.",
            "VernacExtend",
            "a1bb9b75cd9ec48bd903a73177ce763a88c48694"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem div_power_prime : forall p w n : nat, prime p -> divides p (power w n) -> divides p w.",
            "VernacStartTheoremProof",
            "1a2cfccee30266b50934611f608e857ff2f36e2c"
        ],
        [
            "intros p w n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "9ea91c92fa89dfc6c4fcc66f3dd808a2a8ef26fb"
        ],
        [
            "intros H' H'0; inversion_clear H'0.",
            "VernacExtend",
            "57978ad7189e041cf7c6386c1010c500c7b9efb7"
        ],
        [
            "generalize H' H; case q; case p; simpl in |- *; intros; try discriminate.",
            "VernacExtend",
            "663ad1ebd859bd5ae336aef1e664015f0f4347e4"
        ],
        [
            "absurd (prime 0); auto.",
            "VernacExtend",
            "7d4837466d0e7f248d63d8d5a35fe471f59e381c"
        ],
        [
            "generalize H0; case n0; simpl in |- *; auto.",
            "VernacExtend",
            "45b992df4372525eb5b1c2019a46456eae70b33e"
        ],
        [
            "intros n2 H'1; absurd (1 = S (S (n2 + n1 * S (S n2)))); auto.",
            "VernacExtend",
            "5ab6b91a0c071f060170f5ff44d6285a162e2c7f"
        ],
        [
            "intros n0 H' H'0 H'1.",
            "VernacExtend",
            "d8c9ab0b72627bce82379860842852c02299868f"
        ],
        [
            "case (divides_dec p (power w n0)); intros H; auto.",
            "VernacExtend",
            "d2cfa2cb62f57ab4967303106f37c1f4fb141e1b"
        ],
        [
            "apply L_Euclides1 with (a := power w n0); auto.",
            "VernacExtend",
            "26de1bfec17c7d8243fffd2027eb71f8aa75400a"
        ],
        [
            "rewrite mult_comm; auto.",
            "VernacExtend",
            "6c3edfbd689b9ef2f201b9c9358184ca9f4a59f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section CD.",
            "VernacBeginSection",
            "738b7329b15add156c73fbf97598c525aa2f5f02"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Inductive congruent : nat -> nat -> Prop := congruentDef : forall a b u v : nat, a + u * n = b + v * n -> congruent a b.",
            "VernacInductive",
            "81299df11362f515e1be3d5c928eb10ab883d478"
        ],
        [
            "Lemma cong_ref : forall a : nat, congruent a a.",
            "VernacStartTheoremProof",
            "a8f9a61b31e6f71f99c68fe4d76183fc5d82db52"
        ],
        [
            "intros a.",
            "VernacExtend",
            "9fef235d1a71132a4c9de7f87ab95d540098d91d"
        ],
        [
            "apply congruentDef with (u := 1) (v := 1); auto.",
            "VernacExtend",
            "3393fdff0315b3c203d6d54ec7fdc3b3ce8d6ee0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_sym : forall a b : nat, congruent a b -> congruent b a.",
            "VernacStartTheoremProof",
            "1d803700d6848d4817ff3b5826bf68510dbfacf0"
        ],
        [
            "intros a b H; elim H.",
            "VernacExtend",
            "7b1e39fdd171d7b5608aeb1137e11579e3e5ecf2"
        ],
        [
            "intros a0 b0 c d H'.",
            "VernacExtend",
            "0a1366c1145bba575980686feb2aeb86c42e5fae"
        ],
        [
            "apply congruentDef with (u := d) (v := c); auto.",
            "VernacExtend",
            "28dca894b7eb55ceafc7f36bd95b39003a35e9a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_trans : forall a b c : nat, congruent a b -> congruent b c -> congruent a c.",
            "VernacStartTheoremProof",
            "95829fb897410ad0b8fb37d98aa94eb3b29fe287"
        ],
        [
            "intros a b c H' H'0; inversion_clear H'; inversion_clear H'0.",
            "VernacExtend",
            "ec1862138bc89568b72c26e878b6c30d647dc61b"
        ],
        [
            "apply congruentDef with (u := u + u0) (v := v + v0); auto.",
            "VernacExtend",
            "d596ac4f553408bae55abb533bc42f821bb6ac01"
        ],
        [
            "repeat rewrite mult_plus_distr_r; repeat rewrite plus_assoc; rewrite H.",
            "VernacExtend",
            "86b843525881a98b2c0e39b30aec0ceb36d86f50"
        ],
        [
            "repeat rewrite plus_comm with (m := v * n); repeat rewrite plus_assoc_reverse; rewrite H0; auto.",
            "VernacExtend",
            "ad699a1c57b7f05c6f6ed98e5711ed836d43a8f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_mult_O : forall a b : nat, congruent a 0 -> congruent (a * b) 0.",
            "VernacStartTheoremProof",
            "7ed34c908f1d07beae5bae3b69a5d4f428eda88d"
        ],
        [
            "intros a b H'; inversion_clear H'.",
            "VernacExtend",
            "16241007a80ad255d3e0a1de0695622024d7e1b3"
        ],
        [
            "apply congruentDef with (u := u * b) (v := v * b).",
            "VernacExtend",
            "0e69f85150232a0eeacd18fac4091f691bc090f2"
        ],
        [
            "repeat rewrite mult_comm with (m := b); repeat rewrite mult_assoc_reverse; repeat rewrite (mult_comm b).",
            "VernacExtend",
            "93ed5fca6e3ba1b385936bd17548670116cb2565"
        ],
        [
            "rewrite <- mult_plus_distr_r; rewrite H; rewrite mult_plus_distr_r; simpl in |- *; auto.",
            "VernacExtend",
            "70aaa5dd7ed67f3c13ab56b94facbb61ae8004a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_plus : forall a b c d : nat, congruent a b -> congruent c d -> congruent (a + c) (b + d).",
            "VernacStartTheoremProof",
            "9318378f8e8f43cf2457c7a7984a155c94a5b557"
        ],
        [
            "intros a b c d H' H'0; inversion_clear H'; inversion_clear H'0.",
            "VernacExtend",
            "1f656ee4d4ba3999fa3168eae4878f5ee212f413"
        ],
        [
            "apply congruentDef with (u := u0 + u) (v := v0 + v).",
            "VernacExtend",
            "7098c6bd22f7bdec978b288441bbb1aaa4526c1b"
        ],
        [
            "repeat rewrite mult_plus_distr_r; repeat rewrite plus_assoc_reverse.",
            "VernacExtend",
            "b8f9d24d7806df6a3c03312fbdda4f1b55fe5894"
        ],
        [
            "rewrite (plus_assoc c); rewrite (plus_assoc d); rewrite H0.",
            "VernacExtend",
            "2f74021f670777781d774a40d888bb90f02416c1"
        ],
        [
            "rewrite (plus_comm a); rewrite (plus_comm b); repeat rewrite plus_assoc_reverse; rewrite plus_comm with (m := a); rewrite plus_comm with (m := b); rewrite H; auto.",
            "VernacExtend",
            "41c44e29c3809f2a57223913d4d1172ca256727e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_add : forall a b c : nat, congruent a b -> congruent (a + c) (b + c).",
            "VernacStartTheoremProof",
            "9006a5a6733aeac38885c41ca6ab78b66b105728"
        ],
        [
            "intros a b c H; inversion_clear H.",
            "VernacExtend",
            "8356a4c091c1a7ec049a01fd6e776da014ffc5e8"
        ],
        [
            "apply congruentDef with (u := u) (v := v); auto.",
            "VernacExtend",
            "b21fec2feaae5445d64a1fadc94083e61e9c7fe4"
        ],
        [
            "repeat rewrite plus_comm with (m := c); repeat rewrite plus_assoc_reverse; rewrite H0; auto.",
            "VernacExtend",
            "6636bc47cd19761ad95afebe1bf97359777f1a2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_times : forall a b c : nat, congruent a b -> congruent (a * c) (b * c).",
            "VernacStartTheoremProof",
            "ba010f3c275c4a0fceb1c994268567771c41bb67"
        ],
        [
            "intros a b c H; inversion_clear H.",
            "VernacExtend",
            "8356a4c091c1a7ec049a01fd6e776da014ffc5e8"
        ],
        [
            "apply congruentDef with (u := u * c) (v := v * c); auto.",
            "VernacExtend",
            "d9a29b0b21d428365f66344cf623cdb264e8ba1c"
        ],
        [
            "repeat rewrite mult_comm with (m := c); repeat rewrite mult_assoc_reverse; repeat rewrite (mult_comm c).",
            "VernacExtend",
            "31a325122487cba8ffc326cebff2245ab6b4f19b"
        ],
        [
            "repeat rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "659593e70bd346a77e8af099a7a4f92851083e9b"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_mult : forall a b c d : nat, congruent a b -> congruent c d -> congruent (a * c) (b * d).",
            "VernacStartTheoremProof",
            "5db30a195c4cee9e268256b764593ae78bb3711a"
        ],
        [
            "intros a b c d H' H'0; inversion_clear H'; inversion_clear H'0.",
            "VernacExtend",
            "1f656ee4d4ba3999fa3168eae4878f5ee212f413"
        ],
        [
            "apply congruentDef with (u := u0 * a + u * u0 * n + u * c) (v := v0 * b + v * v0 * n + v * d).",
            "VernacExtend",
            "80dade877e2dff5d3a98eb65f8f8d4ce8ee53943"
        ],
        [
            "repeat rewrite mult_plus_distr_r.",
            "VernacExtend",
            "df7976210811659a9acb3de0387b24aaa38b78d7"
        ],
        [
            "repeat rewrite plus_assoc.",
            "VernacExtend",
            "5dd8a7fee64febaa68da3d2e8e9db466c70f71a9"
        ],
        [
            "rewrite (mult_comm u0); rewrite (mult_comm v0).",
            "VernacExtend",
            "6cdc6aef12cf5507524e1fc14c94f50443067bbe"
        ],
        [
            "repeat rewrite mult_assoc_reverse.",
            "VernacExtend",
            "7fc64a3db40f26da8a32b79c4818dae38ac3c8ef"
        ],
        [
            "repeat rewrite (mult_comm a); repeat rewrite (mult_comm b).",
            "VernacExtend",
            "0634e8eef8a4c57dfb6ce39ba48103d34ec186d2"
        ],
        [
            "repeat rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "659593e70bd346a77e8af099a7a4f92851083e9b"
        ],
        [
            "repeat rewrite mult_assoc.",
            "VernacExtend",
            "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
        ],
        [
            "repeat rewrite mult_comm with (m := n).",
            "VernacExtend",
            "eaabfc8513c763d4b91114a2a6636c92b1d011d5"
        ],
        [
            "rewrite (mult_assoc n u); rewrite (mult_assoc n v).",
            "VernacExtend",
            "2e2d0e119c275a7c0adf5342ae8825c68f4a8575"
        ],
        [
            "repeat rewrite mult_assoc.",
            "VernacExtend",
            "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
        ],
        [
            "repeat rewrite (mult_assoc_reverse n n).",
            "VernacExtend",
            "ca004f50898c042d77239410c4ac1cb2e27f82fb"
        ],
        [
            "rewrite mult_comm with (m := n * u); rewrite mult_comm with (m := n * v).",
            "VernacExtend",
            "9017fde7719da7c1c9dc9c1f6c67b1ce3a2d8604"
        ],
        [
            "repeat rewrite mult_assoc_reverse with (m := n).",
            "VernacExtend",
            "3252c24bc6659615046c212c75585da592384486"
        ],
        [
            "repeat rewrite (mult_comm (n * u)); repeat rewrite (mult_comm (n * v)).",
            "VernacExtend",
            "a2efc2faad06126c49c69d8c1a4513e0179ac47c"
        ],
        [
            "repeat rewrite plus_assoc_reverse; repeat rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "0a0e5402c4878f76d59745468f02668b16f98a87"
        ],
        [
            "rewrite plus_comm with (m := c); rewrite plus_comm with (m := d).",
            "VernacExtend",
            "4853cccad2a8c1c982d79a11b6ba4677397141c1"
        ],
        [
            "repeat rewrite (mult_comm (c + n * u0)); repeat rewrite (mult_comm (d + n * v0)).",
            "VernacExtend",
            "edefee14bfe91f18f394488a99fa969736f5694b"
        ],
        [
            "repeat rewrite (mult_comm (c + n * u0)); repeat rewrite (mult_comm (d + n * v0)).",
            "VernacExtend",
            "edefee14bfe91f18f394488a99fa969736f5694b"
        ],
        [
            "repeat rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "659593e70bd346a77e8af099a7a4f92851083e9b"
        ],
        [
            "repeat rewrite (mult_comm n); rewrite H; auto.",
            "VernacExtend",
            "27522ed049429f8cdf253dbec9ec064d60f3a255"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_pow : forall a b c : nat, congruent a b -> congruent (power a c) (power b c).",
            "VernacStartTheoremProof",
            "78fdc14a58b4652204573009fc0ff2731c0c6ec1"
        ],
        [
            "intros a b c; elim c; simpl in |- *; auto.",
            "VernacExtend",
            "0970e8c2f0fa18951e87c7b38bfb5281a8a3b16a"
        ],
        [
            "intros H'; apply cong_ref.",
            "VernacExtend",
            "0c565c2ee28d50abac05d247aa6af29347b3e331"
        ],
        [
            "intros n0 H' H'0.",
            "VernacExtend",
            "ea8ac79a2800f0d8bdcdd37aaa48ae8cfeab89be"
        ],
        [
            "apply cong_mult; auto.",
            "VernacExtend",
            "abfc7c3bff817defcdac2c0577e4a2155ea98356"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem congruent' : forall a b : nat, b <= a -> congruent a b -> exists k : nat, a = k * n + b.",
            "VernacStartTheoremProof",
            "95265996fd1f26bc2a387bd45b994f4ac7dca115"
        ],
        [
            "intros a b H' H'0; inversion_clear H'0.",
            "VernacExtend",
            "d9b311671a4c58aa53e4c908ff386a4c8499e378"
        ],
        [
            "exists (v - u).",
            "VernacExtend",
            "2a7403c1204cd255fb617b6c1adc9c7fd6d184ba"
        ],
        [
            "rewrite mult_minus_distr_r; auto.",
            "VernacExtend",
            "a53386ea5765e98d2d4aa1d2f2a820311fca9834"
        ],
        [
            "rewrite plus_minus_assoc.",
            "VernacExtend",
            "da4a668d96208a0eb12ac2a8517ae068388eb1f9"
        ],
        [
            "rewrite plus_comm; rewrite <- H; rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "001a61e93dad7c2f353876bc9b4261ce01668ce1"
        ],
        [
            "apply le_plus_le with (a := b) (b := a); auto.",
            "VernacExtend",
            "180f4be34e446ea661cae32023ea28b8f9163543"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong1_le : forall x : nat, 1 < n -> congruent x 1 -> 1 <= x.",
            "VernacStartTheoremProof",
            "3a991cc7f36df631458e0ba38098f6448353dc70"
        ],
        [
            "intros x; case x; auto with arith.",
            "VernacExtend",
            "0ad0983039580e13e8453bbff640b5ec6399e624"
        ],
        [
            "intros H' H'0; inversion_clear H'0.",
            "VernacExtend",
            "57978ad7189e041cf7c6386c1010c500c7b9efb7"
        ],
        [
            "absurd (n = 1).",
            "VernacExtend",
            "3294fa6a2ccee376e7c3606f6f90b99a28ecff78"
        ],
        [
            "red in |- *; intros H'0; absurd (1 < n); auto; rewrite H'0; auto with arith.",
            "VernacExtend",
            "62019dc2c000841bb417074d90f7dc777e6f9cec"
        ],
        [
            "apply mult_SO with (y := u - v); auto.",
            "VernacExtend",
            "cee265d808c694e887e5ca5e4d1e25c494df4dcd"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "rewrite mult_minus_distr_r; auto.",
            "VernacExtend",
            "a53386ea5765e98d2d4aa1d2f2a820311fca9834"
        ],
        [
            "simpl in H; rewrite H.",
            "VernacExtend",
            "0e32ce81b090f217ca5901e8c7a2aa8bca44de30"
        ],
        [
            "rewrite <- minus_Sn_m; auto with arith.",
            "VernacExtend",
            "5e0dc727f7596ad62b6284d24e09632fa0d1a674"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divides_cong : forall x : nat, divides n x -> congruent 0 x.",
            "VernacStartTheoremProof",
            "ad85b7cc7ad77a947a94a92cac3a7faafa234df3"
        ],
        [
            "intros x H; inversion_clear H.",
            "VernacExtend",
            "456df79616bcf798c7396bc2568b7faab61a20aa"
        ],
        [
            "apply congruentDef with (u := q) (v := 0); simpl in |- *; rewrite H0; auto with arith.",
            "VernacExtend",
            "48ac3c40c4c31e022abcdc639f169b859c57f8f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cong_divides : forall a b : nat, b <= a -> congruent a b -> divides n (a - b).",
            "VernacStartTheoremProof",
            "0384ff49540389ce63628620d28b448273e0c818"
        ],
        [
            "intros a b H H0; elim (congruent' _ _ H H0).",
            "VernacExtend",
            "08c4d214e03114b8f1fed4c913f15db2705ae2b3"
        ],
        [
            "intros x H1; exists x.",
            "VernacExtend",
            "e373332a217eae2944452a06230b4657d4271c44"
        ],
        [
            "apply plus_reg_l with b.",
            "VernacExtend",
            "f42b9d66a4684e05c2000294bb7ae20dd1a71969"
        ],
        [
            "rewrite le_plus_minus_r; auto.",
            "VernacExtend",
            "383ee41ec24a79af2d0006fe6fd12fa59e5491ad"
        ],
        [
            "rewrite plus_comm; rewrite <- H1; auto.",
            "VernacExtend",
            "e7ac7fa6cddbe60025a16a0ccaaaa429daf6bdf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CD.",
            "VernacEndSegment",
            "379a01535982483cfe472958718d4c29b554229b"
        ]
    ],
    "proofs": [
        {
            "name": "div_ref",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros a; apply dividesDef with (q := 1); auto with arith.",
                        "VernacExtend",
                        "49ec5023ca7950a69a6981b25fb833145486c06d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_divides",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros x y H'; elim H'; intros q E; inversion_clear E; clear H'.",
                        "VernacExtend",
                        "7b795566cf1d37ced2ffc4f60c0b288283be6151"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := q); auto.",
                        "VernacExtend",
                        "0894e55553c04b5c12430f7ef72deb92757862e1"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto with arith.",
                        "VernacExtend",
                        "1e6a183f197fa0fcaafa00d29ecd9c590b860a05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_div",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros x y H'1 H'2; inversion H'2.",
                        "VernacExtend",
                        "0d9ec60b80865104b522de169d2a34ff0df2be4a"
                    ]
                },
                {
                    "command": [
                        "exists q; auto.",
                        "VernacExtend",
                        "1fdae78c26ceaa9a35fb46406a63d0624830b684"
                    ]
                },
                {
                    "command": [
                        "apply is_div_def; auto with arith.",
                        "VernacExtend",
                        "4a1f541f917375d7237cf35fbc0034ca36bc524f"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_dec'",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros x y; case y; auto.",
                        "VernacExtend",
                        "f452b00ac6bc59f7e7b1af92dfddcd58a5a09915"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; intros H'; elim H'; intros q E; inversion E; clear H'; auto.",
                        "VernacExtend",
                        "48e44d48424c40b01831a83d30c49895fd73198c"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "intros y'; case (eucl_dev (S y') (gt_Sn_O y') x).",
                        "VernacExtend",
                        "54340464c48b683a01cfe7176cf468a0540d90e5"
                    ]
                },
                {
                    "command": [
                        "intros q r; case r; auto.",
                        "VernacExtend",
                        "5bf661c987f2ebad755464d45e14510fe532405c"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; left; exists q; auto.",
                        "VernacExtend",
                        "de54ba24ea926858beb333f2820d210a30da3d13"
                    ]
                },
                {
                    "command": [
                        "apply is_div_def; auto; rewrite H'0; auto with arith.",
                        "VernacExtend",
                        "af24fc67090a06e66cebb13ec2f8d2d6ca0da389"
                    ]
                },
                {
                    "command": [
                        "intros n H' H'0; right; red in |- *; intros H'1; elim H'1; intros q0 E; clear H'1.",
                        "VernacExtend",
                        "ceaf318e699f28f9bb701a6076e8e7993accbd32"
                    ]
                },
                {
                    "command": [
                        "absurd (0 = S n); auto with arith.",
                        "VernacExtend",
                        "abd75b8f5da9a67347957a5cc0bbc58e2532831d"
                    ]
                },
                {
                    "command": [
                        "apply div_unic_r with (a := x) (b := S y') (q1 := q0) (q2 := q); auto.",
                        "VernacExtend",
                        "c44544f3c7da23124f4a25313db5c12e5ccff282"
                    ]
                },
                {
                    "command": [
                        "apply is_div_def; auto with arith.",
                        "VernacExtend",
                        "4a1f541f917375d7237cf35fbc0034ca36bc524f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_dec",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros x y; case x; case y; auto.",
                        "VernacExtend",
                        "c049be51bec30cad65bb6c086a0e3eda658801c8"
                    ]
                },
                {
                    "command": [
                        "left; apply dividesDef with (q := 0); auto.",
                        "VernacExtend",
                        "d91331adf02f3b1bf88f2b8c07bde90667a8db82"
                    ]
                },
                {
                    "command": [
                        "intros n; right; red in |- *; intros H'; inversion_clear H'.",
                        "VernacExtend",
                        "99a1baf59ef335de895e197e4b934386b6f077f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm q 0) in H; discriminate.",
                        "VernacExtend",
                        "cf11314af184ac80343c828b5e96b0a43bb81651"
                    ]
                },
                {
                    "command": [
                        "intros n; left; apply dividesDef with (q := 0); auto.",
                        "VernacExtend",
                        "ca0a1aa62321b88c2e14f543684abafbd16cfb75"
                    ]
                },
                {
                    "command": [
                        "intros x' y'; case (divides_dec' (S x') (S y')); auto.",
                        "VernacExtend",
                        "3b47289af5bf93d09b625de536e149bc26a8d5fc"
                    ]
                },
                {
                    "command": [
                        "intros H'; left; apply div_divides; auto.",
                        "VernacExtend",
                        "6c5aff8bbccd692cc402bc5b1370a892aa58546d"
                    ]
                },
                {
                    "command": [
                        "intros H'; right; red in |- *; intros H'0; case H'; auto.",
                        "VernacExtend",
                        "042e98820324e4924fe1d530b738ef0bbc59cae5"
                    ]
                },
                {
                    "command": [
                        "inversion H'0.",
                        "VernacExtend",
                        "00e0ad3eaaed6a837c55aecf644d04a72455e588"
                    ]
                },
                {
                    "command": [
                        "exists q; auto.",
                        "VernacExtend",
                        "1fdae78c26ceaa9a35fb46406a63d0624830b684"
                    ]
                },
                {
                    "command": [
                        "apply is_div_def; auto with arith.",
                        "VernacExtend",
                        "4a1f541f917375d7237cf35fbc0034ca36bc524f"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with arith.",
                        "VernacExtend",
                        "8392a856d0dbbc586f2ccf3f38a822850be88673"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_divides_O",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros n; apply dividesDef with (q := 0); auto.",
                        "VernacExtend",
                        "13379133af21f78cae2f9fba0f1a6fafc17b6deb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SO_divides_all",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros n; apply dividesDef with (q := n); auto with arith.",
                        "VernacExtend",
                        "5d4051b65f20a1136d4490267ca5d4ea369e3761"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_plus1",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0; inversion_clear H'; inversion_clear H'0.",
                        "VernacExtend",
                        "ec1862138bc89568b72c26e878b6c30d647dc61b"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := q + q0); auto.",
                        "VernacExtend",
                        "ac578d24d58b1658953c482d23b66daea53c9742"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite H0; auto with arith.",
                        "VernacExtend",
                        "16f55a8ca0553a9fad244e22decd1dceeedc8ee4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_plus2",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0; inversion_clear H'; inversion_clear H'0.",
                        "VernacExtend",
                        "ec1862138bc89568b72c26e878b6c30d647dc61b"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := q0 - q).",
                        "VernacExtend",
                        "fa867e25ae5dc60a05565ad038e4364824a98217"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_r.",
                        "VernacExtend",
                        "8affc1e7492a03e77da168a254c8278b756311fb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; rewrite <- H0.",
                        "VernacExtend",
                        "c890194a1ac2b81309cd7e37bef7077d1de7efcd"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus; auto.",
                        "VernacExtend",
                        "90d2fd3a8cf3286d185a3c8259f2318d44a10879"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_le",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros a b; case b.",
                        "VernacExtend",
                        "dddde652d6480873d5eb74cf1cc238fdc82041b9"
                    ]
                },
                {
                    "command": [
                        "intros H'; case H'; auto.",
                        "VernacExtend",
                        "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
                    ]
                },
                {
                    "command": [
                        "intros n H' H'0; inversion_clear H'0.",
                        "VernacExtend",
                        "af6c80fde989b52744a789bbbd691ce9b3be30ba"
                    ]
                },
                {
                    "command": [
                        "rewrite H; generalize H; case q; simpl in |- *; auto with arith; intros; discriminate.",
                        "VernacExtend",
                        "1eb2993fdf17b8cb5aaa1218d725338c5010b7cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_antisym",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; auto.",
                        "VernacExtend",
                        "f64dfafefbcc685efdadf76d216b1a6ade6b3f4f"
                    ]
                },
                {
                    "command": [
                        "intros b' H' H'1; inversion_clear H'.",
                        "VernacExtend",
                        "d97dc21d82e22d7a3a9a7b1498a3327bb298e49b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with arith.",
                        "VernacExtend",
                        "8392a856d0dbbc586f2ccf3f38a822850be88673"
                    ]
                },
                {
                    "command": [
                        "intros a' H' H'1; inversion_clear H'1.",
                        "VernacExtend",
                        "7737369cc6c774373ce220b75a4b00bd21bc302d"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with arith.",
                        "VernacExtend",
                        "8392a856d0dbbc586f2ccf3f38a822850be88673"
                    ]
                },
                {
                    "command": [
                        "intros n n0 H' H'0; apply le_antisym; apply divides_le; auto.",
                        "VernacExtend",
                        "b969f36b74dbf156e9228803bcb755c9600b5b1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_lt_div",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros a b H'1 H'2; red in |- *; intros H'3; absurd (a <= b); auto with arith.",
                        "VernacExtend",
                        "497f682a9acf5a0e025950790c882ad46f75d373"
                    ]
                },
                {
                    "command": [
                        "apply divides_le; auto.",
                        "VernacExtend",
                        "64211d1652343e755aa17841343b749f37b1bdea"
                    ]
                },
                {
                    "command": [
                        "apply sym_not_eq; auto with arith.",
                        "VernacExtend",
                        "46bdfc6afed026a7db3926360c7db624b863bcab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_prime_O",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros H'; inversion_clear H'; auto.",
                        "VernacExtend",
                        "820dc8ca29ae703441d4dad35508df07e2190e0e"
                    ]
                },
                {
                    "command": [
                        "absurd (0 = 2); auto with arith.",
                        "VernacExtend",
                        "b29a7ec4f9e84ae46d6f9ca7367cb6bf30b563bf"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto.",
                        "VernacExtend",
                        "e167f871dfeec1cef76aaf201c54c081f29f730b"
                    ]
                },
                {
                    "command": [
                        "apply all_divides_O.",
                        "VernacExtend",
                        "0115d65033b72d746edcf1f6136893856c1942bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_prime_1",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros H'; inversion_clear H'; auto.",
                        "VernacExtend",
                        "820dc8ca29ae703441d4dad35508df07e2190e0e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_prime",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros p; case p.",
                        "VernacExtend",
                        "3fe2912e7637b448c6946cd153d26a7b946522ba"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (prime 0); auto.",
                        "VernacExtend",
                        "2908f0c61c40f03654de5f25bd3620ebc6510713"
                    ]
                },
                {
                    "command": [
                        "intros n; case n.",
                        "VernacExtend",
                        "b4ea99e9638b1f4853c8a1f258c5b4ff22cab052"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (prime 1); auto.",
                        "VernacExtend",
                        "165c11a5e27db20dc2a4730984c6c67adf8e0f05"
                    ]
                },
                {
                    "command": [
                        "intros; auto with arith.",
                        "VernacExtend",
                        "660aa3a1f13e95168de147a98a19de160321bd35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gcd_unic",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros a b c d H' H'0; inversion_clear H'; inversion_clear H'0.",
                        "VernacExtend",
                        "1f656ee4d4ba3999fa3168eae4878f5ee212f413"
                    ]
                },
                {
                    "command": [
                        "apply divides_antisym; auto.",
                        "VernacExtend",
                        "76fafd0bc5d5948f89a582a31a77f5ba8d2f4c90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gcd_ref",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros x; apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "d5292fcd52dc11b529c0fd40e84e1fc9f7b68b05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gcd_sym",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros a b c H; inversion_clear H; intros.",
                        "VernacExtend",
                        "58e39bfdadd74c12cd8c66be0fe79aafb408f3f6"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gcd_O'",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros a r H'; inversion_clear H'.",
                        "VernacExtend",
                        "149af063e6887ba0188fe71a641609a6da8c54e5"
                    ]
                },
                {
                    "command": [
                        "apply divides_antisym; auto.",
                        "VernacExtend",
                        "76fafd0bc5d5948f89a582a31a77f5ba8d2f4c90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gcd_Ol",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros a.",
                        "VernacExtend",
                        "9fef235d1a71132a4c9de7f87ab95d540098d91d"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_gcd_Or",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros a.",
                        "VernacExtend",
                        "9fef235d1a71132a4c9de7f87ab95d540098d91d"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prime_gcd",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros p n H' H'0.",
                        "VernacExtend",
                        "c067d9edde3b90ec7719273563e00ce3bf01f426"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
                    ]
                },
                {
                    "command": [
                        "intros d H'1 H'2.",
                        "VernacExtend",
                        "0369ff05dd23049c6d5428214e31df301c12c014"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H'.",
                        "VernacExtend",
                        "18ae047618136a9a486781b83a1f3fe38aade884"
                    ]
                },
                {
                    "command": [
                        "elim (eq_nat_dec d 1); intros H'4; auto.",
                        "VernacExtend",
                        "77e2d7f9267e9f8f2f2ab829231f3448d2f7357d"
                    ]
                },
                {
                    "command": [
                        "rewrite H'4; auto.",
                        "VernacExtend",
                        "4d1a9c913908d4131f22e0efbc1d2c6df5beb11a"
                    ]
                },
                {
                    "command": [
                        "elim (eq_nat_dec p d); intros H'5; auto.",
                        "VernacExtend",
                        "8bb16b9e69b313843ce5bf89b8ea17af15eecd9a"
                    ]
                },
                {
                    "command": [
                        "case H'0; try rewrite H'5; auto.",
                        "VernacExtend",
                        "7b4c1262d8bba6031bc101e3c7072bae307f1505"
                    ]
                },
                {
                    "command": [
                        "case H'5; apply H0; auto.",
                        "VernacExtend",
                        "e6c4937e540f77c56234ee3e84b4200aedcd6c77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_inv_Or_aux",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros a b c H'; elim H'; auto.",
                        "VernacExtend",
                        "f979a70ee0ec90ea63c1c5b91956eb55c2dd4b3f"
                    ]
                },
                {
                    "command": [
                        "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "e29b2e33c59d052ba2364745c695954d85d2519e"
                    ]
                },
                {
                    "command": [
                        "apply H'2; auto.",
                        "VernacExtend",
                        "a164c9738e5df320ed05067f01092f4a2e3c5e0a"
                    ]
                },
                {
                    "command": [
                        "rewrite H'3; auto.",
                        "VernacExtend",
                        "b933c076500edf22608523e02109fb3904029f8e"
                    ]
                },
                {
                    "command": [
                        "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "e29b2e33c59d052ba2364745c695954d85d2519e"
                    ]
                },
                {
                    "command": [
                        "replace a0 with (a0 - b0); auto.",
                        "VernacExtend",
                        "5e943729646f7c0b746af03f3d04bfd132103e8e"
                    ]
                },
                {
                    "command": [
                        "rewrite H'3; auto with arith.",
                        "VernacExtend",
                        "978dcd83531b33ff78f9b3e05f1d7ddc5e6ba994"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_inv_Or",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intros a b H'.",
                        "VernacExtend",
                        "bd160d2246ab14528cfcf9da0463f63a88c538ea"
                    ]
                },
                {
                    "command": [
                        "apply gcd_inv_Or_aux with (b := 0); auto.",
                        "VernacExtend",
                        "111542d239aa26972ebed2be762e49961acb9942"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_inv_Ol_aux",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros a b c H'; elim H'; auto.",
                        "VernacExtend",
                        "f979a70ee0ec90ea63c1c5b91956eb55c2dd4b3f"
                    ]
                },
                {
                    "command": [
                        "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "e29b2e33c59d052ba2364745c695954d85d2519e"
                    ]
                },
                {
                    "command": [
                        "replace b0 with (b0 - a0); auto.",
                        "VernacExtend",
                        "ac3bfa00a0b31952ae4b0e8a71263423928688d7"
                    ]
                },
                {
                    "command": [
                        "rewrite H'3; auto with arith.",
                        "VernacExtend",
                        "978dcd83531b33ff78f9b3e05f1d7ddc5e6ba994"
                    ]
                },
                {
                    "command": [
                        "intros a0 b0 c0 H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "e29b2e33c59d052ba2364745c695954d85d2519e"
                    ]
                },
                {
                    "command": [
                        "apply H'2; auto.",
                        "VernacExtend",
                        "a164c9738e5df320ed05067f01092f4a2e3c5e0a"
                    ]
                },
                {
                    "command": [
                        "rewrite H'3; auto.",
                        "VernacExtend",
                        "b933c076500edf22608523e02109fb3904029f8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_inv_Ol",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros a b H'.",
                        "VernacExtend",
                        "bd160d2246ab14528cfcf9da0463f63a88c538ea"
                    ]
                },
                {
                    "command": [
                        "apply gcd_inv_Ol_aux with (a := 0); auto.",
                        "VernacExtend",
                        "98cb2a978176feeb0ae94a4b656f4cac70d66378"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_ex",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros a b; pattern b, a in |- *; apply gcd_rec; clear a b.",
                        "VernacExtend",
                        "6dd42d20245986acbd8a4ce8e79380dda0b7b329"
                    ]
                },
                {
                    "command": [
                        "intros a; exists a; auto.",
                        "VernacExtend",
                        "e59cb5fff547dc959e4980cc40a2f2e21f4b6e34"
                    ]
                },
                {
                    "command": [
                        "intros b; exists b; auto.",
                        "VernacExtend",
                        "84342b0c17b662070c0c7df27e0d488648e3076a"
                    ]
                },
                {
                    "command": [
                        "intros a b Rr; case Rr; intros r Hr; exists r.",
                        "VernacExtend",
                        "3584696449c9b597458d34630d988b5649ab4e19"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex3; auto with arith.",
                        "VernacExtend",
                        "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite minus_plus; auto; rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "854d8c93e8adc865483e52630bbda6e13ce0da53"
                    ]
                },
                {
                    "command": [
                        "intros a b Rr; case Rr; intros r Hr; exists r.",
                        "VernacExtend",
                        "3584696449c9b597458d34630d988b5649ab4e19"
                    ]
                },
                {
                    "command": [
                        "case (zerop a); intros lta.",
                        "VernacExtend",
                        "5196fce6a6464cea3f7ae68b59362deedc5065e2"
                    ]
                },
                {
                    "command": [
                        "rewrite lta; simpl in |- *.",
                        "VernacExtend",
                        "26d5eff179b7a4d8dd654b84bb895b392a305e90"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (gcd_inv_Or b r); auto.",
                        "VernacExtend",
                        "378c646248112c10a31240471c97a3cac3bcc139"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex3; auto with arith.",
                        "VernacExtend",
                        "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "f723529dfbfb6a37c254caaef79aac053d6103e3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lta; auto.",
                        "VernacExtend",
                        "1dec4a288b724d447321382a31f3191290834379"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex2; auto with arith.",
                        "VernacExtend",
                        "6ec98fcd56f8f18be33be217c7275be483259cf1"
                    ]
                },
                {
                    "command": [
                        "pattern b at 1 in |- *; replace b with (0 + b); auto with arith.",
                        "VernacExtend",
                        "0da5993a46487e96fee83a83dbe22346d5794aef"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite minus_plus; auto; rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "854d8c93e8adc865483e52630bbda6e13ce0da53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_correct",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros a b; unfold gcd in |- *; case (gcd_ex a b); simpl in |- *; auto.",
                        "VernacExtend",
                        "73c10f9832e0b44b9eda16f4d7d853b83e8a5fc7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_spec_uniq",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros a b r1 r2 H'; generalize r2; elim H'; clear H' a b r1 r2.",
                        "VernacExtend",
                        "cab0e1f4caa9131b8aec6dd220e682f5622add29"
                    ]
                },
                {
                    "command": [
                        "exact gcd_inv_Or.",
                        "VernacExtend",
                        "cc1b81de1d29d2df15cba2aa8b9594d562c99f97"
                    ]
                },
                {
                    "command": [
                        "exact gcd_inv_Ol.",
                        "VernacExtend",
                        "8abab116f0532072e6587b58e2f3eeaf7de90e68"
                    ]
                },
                {
                    "command": [
                        "intros a b c H' H'0 H'1 r2 H'2; inversion H'2; auto.",
                        "VernacExtend",
                        "dc1ba515593d37d89372a2c57f29249d738cf938"
                    ]
                },
                {
                    "command": [
                        "apply H'1; auto.",
                        "VernacExtend",
                        "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; simpl in |- *; rewrite H1; auto.",
                        "VernacExtend",
                        "7b676d96f92349ddbe4d654a866ce0c4a0e08d35"
                    ]
                },
                {
                    "command": [
                        "apply H'1; auto.",
                        "VernacExtend",
                        "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; simpl in |- *; rewrite <- minus_n_O; rewrite H1; auto.",
                        "VernacExtend",
                        "1724a949c78ded54f887168ba7be1ba1f14b182a"
                    ]
                },
                {
                    "command": [
                        "absurd (a < b); auto with arith.",
                        "VernacExtend",
                        "b3a998aa876e5530af61f52732d093f8f2967b62"
                    ]
                },
                {
                    "command": [
                        "intros a b c H' H'0 H'1 r2 H'2; inversion H'2; auto.",
                        "VernacExtend",
                        "dc1ba515593d37d89372a2c57f29249d738cf938"
                    ]
                },
                {
                    "command": [
                        "apply H'1; auto.",
                        "VernacExtend",
                        "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; simpl in |- *; rewrite H1; rewrite <- minus_n_O; auto.",
                        "VernacExtend",
                        "7db6a63ffcca42e76a97c902dbeab31c4daa8eb9"
                    ]
                },
                {
                    "command": [
                        "apply H'1; auto.",
                        "VernacExtend",
                        "ef00f6d81d326a1ea91faa2b15abdc5016de8fed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; simpl in |- *; rewrite H1; auto.",
                        "VernacExtend",
                        "51bec44e02f31868d40b176520ce3caad1b892dc"
                    ]
                },
                {
                    "command": [
                        "absurd (a < b); auto with arith.",
                        "VernacExtend",
                        "b3a998aa876e5530af61f52732d093f8f2967b62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_correct2",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros a b r H'.",
                        "VernacExtend",
                        "993b390fad33da7c27f8de96161501334ed0d4ce"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_uniq with (a := a) (b := b); auto.",
                        "VernacExtend",
                        "725cef65e337d16651987000ca9896bb9b5b8ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_def0l",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros x; apply gcd_spec_uniq with (a := 0) (b := x); auto.",
                        "VernacExtend",
                        "9e5181e85bbe36c6e65af7e7668325d03bec3f4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_def0r",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "intros x; apply gcd_spec_uniq with (a := x) (b := 0); auto.",
                        "VernacExtend",
                        "d111c674d174ef88bc311708c2d106e1baadf9a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_def1",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros x; apply gcd_spec_uniq with (a := x) (b := x); auto.",
                        "VernacExtend",
                        "9f11be70ce90ea68baafff1d0eaa609d6701953c"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex3; auto.",
                        "VernacExtend",
                        "9295c1631ab0e39e6ef4689cabcb4b69bffa0579"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "f723529dfbfb6a37c254caaef79aac053d6103e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_def2",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros a b; apply gcd_spec_uniq with (a := a) (b := b + a); auto.",
                        "VernacExtend",
                        "96e72cf2efdb4cd756563e403b7640a7039e587a"
                    ]
                },
                {
                    "command": [
                        "case (zerop b); intros ltb.",
                        "VernacExtend",
                        "0ef274fecd8c78ff75a351e2aa7ac7b9677c33a6"
                    ]
                },
                {
                    "command": [
                        "rewrite ltb; simpl in |- *; rewrite gcd_def0r; auto.",
                        "VernacExtend",
                        "30e81a88d4098cb6ea2d0da6a1ceae71e88a5dbe"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex3; auto.",
                        "VernacExtend",
                        "9295c1631ab0e39e6ef4689cabcb4b69bffa0579"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "f723529dfbfb6a37c254caaef79aac053d6103e3"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex2; auto with arith.",
                        "VernacExtend",
                        "6ec98fcd56f8f18be33be217c7275be483259cf1"
                    ]
                },
                {
                    "command": [
                        "replace a with (0 + a); auto with arith.",
                        "VernacExtend",
                        "3d0863e382fbda4c09690ff45d4925e8ad9a4c3d"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite minus_plus.",
                        "VernacExtend",
                        "19ab82343c49e444f29582ecadc39edb49f22fcc"
                    ]
                },
                {
                    "command": [
                        "apply gcd_correct; auto.",
                        "VernacExtend",
                        "227077771a11128b9b0d4c338c4a4a29ba07ce59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_def3",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "intros a b; apply gcd_spec_uniq with (a := a + b) (b := b); auto.",
                        "VernacExtend",
                        "299052c854e7a4f37632e6189dd1f034c5f51df2"
                    ]
                },
                {
                    "command": [
                        "case (zerop a); intros lta.",
                        "VernacExtend",
                        "5196fce6a6464cea3f7ae68b59362deedc5065e2"
                    ]
                },
                {
                    "command": [
                        "rewrite lta; simpl in |- *; rewrite gcd_def0l; auto.",
                        "VernacExtend",
                        "5a0da7ad4b9d7e4b3bd5e2bef22ccb54be8599ca"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex3; auto with arith.",
                        "VernacExtend",
                        "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; auto.",
                        "VernacExtend",
                        "f723529dfbfb6a37c254caaef79aac053d6103e3"
                    ]
                },
                {
                    "command": [
                        "apply gcd_spec_ex3; auto with arith.",
                        "VernacExtend",
                        "25e2823a7f305ebc5fd5b8d6cd71dfade6583024"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite minus_plus.",
                        "VernacExtend",
                        "19ab82343c49e444f29582ecadc39edb49f22fcc"
                    ]
                },
                {
                    "command": [
                        "apply gcd_correct; auto.",
                        "VernacExtend",
                        "227077771a11128b9b0d4c338c4a4a29ba07ce59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_is_gcd",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros; pattern a, b in |- *; apply gcd_ind; clear a b.",
                        "VernacExtend",
                        "3576e94bd8790a317ac6850476f2782ff60e2203"
                    ]
                },
                {
                    "command": [
                        "intros x; rewrite gcd_def0l; auto.",
                        "VernacExtend",
                        "4b716d25fbb5ce4241be1b83e33c319e128ccf53"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_Or; auto.",
                        "VernacExtend",
                        "23aa37b5ab294abf35b56be3611678e6e08217b1"
                    ]
                },
                {
                    "command": [
                        "intros x; rewrite gcd_def0r; auto.",
                        "VernacExtend",
                        "a424fa649e8875c7be6e6b2cd32af1dda1e046e3"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_Ol; auto.",
                        "VernacExtend",
                        "e71d3a3e02b53049d0b4f883603a6219a951a8ff"
                    ]
                },
                {
                    "command": [
                        "intros a b H'; rewrite <- gcd_def2.",
                        "VernacExtend",
                        "49c230385cdddb08571383faeeb7f723e37436b0"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H'.",
                        "VernacExtend",
                        "18ae047618136a9a486781b83a1f3fe38aade884"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
                    ]
                },
                {
                    "command": [
                        "apply divides_plus1; auto.",
                        "VernacExtend",
                        "d292d3c60324d196b6d50d226e02ef3faae3259d"
                    ]
                },
                {
                    "command": [
                        "intros d H' H'0.",
                        "VernacExtend",
                        "7858cd1a851c22b4c051c225bb044054b3e236d8"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "apply divides_plus2 with (b := a); auto.",
                        "VernacExtend",
                        "71c52a4586d545e8c91de6aeee98214939a2505b"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto.",
                        "VernacExtend",
                        "be5d0dcccc55ce4260cd664dcabdc8289d7f9027"
                    ]
                },
                {
                    "command": [
                        "intros a b H'; rewrite <- gcd_def3.",
                        "VernacExtend",
                        "5860fc3a24dba28212dca40e3e66ca2838604836"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H'.",
                        "VernacExtend",
                        "18ae047618136a9a486781b83a1f3fe38aade884"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_intro; auto.",
                        "VernacExtend",
                        "44ca939eb513b2411fefb5412a2bcec4e7a535aa"
                    ]
                },
                {
                    "command": [
                        "apply divides_plus1; auto.",
                        "VernacExtend",
                        "d292d3c60324d196b6d50d226e02ef3faae3259d"
                    ]
                },
                {
                    "command": [
                        "intros d H' H'0.",
                        "VernacExtend",
                        "7858cd1a851c22b4c051c225bb044054b3e236d8"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "apply divides_plus2 with (b := b); auto.",
                        "VernacExtend",
                        "6427ff69a9a74379b067ef3bff3f1a14e7224044"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto.",
                        "VernacExtend",
                        "be5d0dcccc55ce4260cd664dcabdc8289d7f9027"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "preEuclid",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros a b; pattern a, b in |- *; apply gcd_ind; clear a b.",
                        "VernacExtend",
                        "98e742d3b453e2ce7cd7460be2495f7dd54f5fa9"
                    ]
                },
                {
                    "command": [
                        "intros x c m H' H'0; rewrite gcd_def0l; auto.",
                        "VernacExtend",
                        "7eb6b6fd35e7edb397437dbd82b248fd579d3976"
                    ]
                },
                {
                    "command": [
                        "intros x c m H' H'0; rewrite gcd_def0r; auto.",
                        "VernacExtend",
                        "c272bb7dce97818d0d8d1b8716f8cfc556d0bc54"
                    ]
                },
                {
                    "command": [
                        "intros a b H' c m H'0 H'1; rewrite <- gcd_def2.",
                        "VernacExtend",
                        "6b59fa11efeebb296356e8dd46cb844210228f9f"
                    ]
                },
                {
                    "command": [
                        "apply H'; auto.",
                        "VernacExtend",
                        "207a890ff324766988e4ef387babc047c1f93b3b"
                    ]
                },
                {
                    "command": [
                        "apply divides_plus2 with (m * a); auto.",
                        "VernacExtend",
                        "2b159570c07b62e1c97e75577d1d1c2f32dc9332"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; pattern mult at 1 in |- *; rewrite mult_comm; rewrite <- mult_plus_distr_r; rewrite mult_comm.",
                        "VernacExtend",
                        "ffa5494a0577f651dc6a20c91d7ef79500736c8e"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; simpl in |- *; assumption.",
                        "VernacExtend",
                        "e8b99c33b1202f4ce258ec07115871710b62d4ea"
                    ]
                },
                {
                    "command": [
                        "intros a b H' c m H'0 H'1; rewrite <- gcd_def3.",
                        "VernacExtend",
                        "ea4a2c4cfca757b84e93c5f714d6d3a3843fa099"
                    ]
                },
                {
                    "command": [
                        "apply H'; auto.",
                        "VernacExtend",
                        "207a890ff324766988e4ef387babc047c1f93b3b"
                    ]
                },
                {
                    "command": [
                        "apply divides_plus2 with (m * b); auto.",
                        "VernacExtend",
                        "adca825ed5789ef31c77592d7a24e502ac472530"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; pattern mult at 1 in |- *; rewrite mult_comm; rewrite <- mult_plus_distr_r; rewrite mult_comm.",
                        "VernacExtend",
                        "ffa5494a0577f651dc6a20c91d7ef79500736c8e"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; simpl in |- *; assumption.",
                        "VernacExtend",
                        "e8b99c33b1202f4ce258ec07115871710b62d4ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "L_Euclides",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "intros x a b H' H'0; replace b with (b * gcd x a).",
                        "VernacExtend",
                        "310c8e6489f2456a25c420e2e6fb72c70b504b68"
                    ]
                },
                {
                    "command": [
                        "apply preEuclid; auto with arith.",
                        "VernacExtend",
                        "4fb02236b112419aab8a9b42c5d2a1b5a3b9f992"
                    ]
                },
                {
                    "command": [
                        "apply dividesDef with (q := b); auto with arith.",
                        "VernacExtend",
                        "ebd6f2b27f44cfe03ded22ad8a298cdb90d72943"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; auto.",
                        "VernacExtend",
                        "6c3edfbd689b9ef2f201b9c9358184ca9f4a59f8"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_gcd_unic x a (gcd x a) 1); auto with arith.",
                        "VernacExtend",
                        "f0a85789aa7251d66ea69fa92397316c7d1352b9"
                    ]
                },
                {
                    "command": [
                        "apply gcd_is_gcd; auto.",
                        "VernacExtend",
                        "7734cd3bf99ba65873927d495783f0a8dd699717"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "L_Euclides1",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "intros; apply L_Euclides with a; auto.",
                        "VernacExtend",
                        "ed1987f851aa2e1dd0f8ee55b55700abfc4056a3"
                    ]
                },
                {
                    "command": [
                        "apply is_gcd_sym.",
                        "VernacExtend",
                        "2d9653e7a06e9e7787ab2ae2584928111aef3ef3"
                    ]
                },
                {
                    "command": [
                        "apply prime_gcd; auto.",
                        "VernacExtend",
                        "0d7bafb22fd8ae168c47bbe88efcbb85185ea6d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "L_Euclides2",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (divides_dec p a); [ left | right ]; auto.",
                        "VernacExtend",
                        "eac7d26375b4981416a0fb01cd7879312a6b1530"
                    ]
                },
                {
                    "command": [
                        "apply L_Euclides1 with a; auto.",
                        "VernacExtend",
                        "a1bb9b75cd9ec48bd903a73177ce763a88c48694"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_power_prime",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "intros p w n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "9ea91c92fa89dfc6c4fcc66f3dd808a2a8ef26fb"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; inversion_clear H'0.",
                        "VernacExtend",
                        "57978ad7189e041cf7c6386c1010c500c7b9efb7"
                    ]
                },
                {
                    "command": [
                        "generalize H' H; case q; case p; simpl in |- *; intros; try discriminate.",
                        "VernacExtend",
                        "663ad1ebd859bd5ae336aef1e664015f0f4347e4"
                    ]
                },
                {
                    "command": [
                        "absurd (prime 0); auto.",
                        "VernacExtend",
                        "7d4837466d0e7f248d63d8d5a35fe471f59e381c"
                    ]
                },
                {
                    "command": [
                        "generalize H0; case n0; simpl in |- *; auto.",
                        "VernacExtend",
                        "45b992df4372525eb5b1c2019a46456eae70b33e"
                    ]
                },
                {
                    "command": [
                        "intros n2 H'1; absurd (1 = S (S (n2 + n1 * S (S n2)))); auto.",
                        "VernacExtend",
                        "5ab6b91a0c071f060170f5ff44d6285a162e2c7f"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' H'0 H'1.",
                        "VernacExtend",
                        "d8c9ab0b72627bce82379860842852c02299868f"
                    ]
                },
                {
                    "command": [
                        "case (divides_dec p (power w n0)); intros H; auto.",
                        "VernacExtend",
                        "d2cfa2cb62f57ab4967303106f37c1f4fb141e1b"
                    ]
                },
                {
                    "command": [
                        "apply L_Euclides1 with (a := power w n0); auto.",
                        "VernacExtend",
                        "26de1bfec17c7d8243fffd2027eb71f8aa75400a"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; auto.",
                        "VernacExtend",
                        "6c3edfbd689b9ef2f201b9c9358184ca9f4a59f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_ref",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "intros a.",
                        "VernacExtend",
                        "9fef235d1a71132a4c9de7f87ab95d540098d91d"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := 1) (v := 1); auto.",
                        "VernacExtend",
                        "3393fdff0315b3c203d6d54ec7fdc3b3ce8d6ee0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_sym",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "intros a b H; elim H.",
                        "VernacExtend",
                        "7b1e39fdd171d7b5608aeb1137e11579e3e5ecf2"
                    ]
                },
                {
                    "command": [
                        "intros a0 b0 c d H'.",
                        "VernacExtend",
                        "0a1366c1145bba575980686feb2aeb86c42e5fae"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := d) (v := c); auto.",
                        "VernacExtend",
                        "28dca894b7eb55ceafc7f36bd95b39003a35e9a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_trans",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0; inversion_clear H'; inversion_clear H'0.",
                        "VernacExtend",
                        "ec1862138bc89568b72c26e878b6c30d647dc61b"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := u + u0) (v := v + v0); auto.",
                        "VernacExtend",
                        "d596ac4f553408bae55abb533bc42f821bb6ac01"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_plus_distr_r; repeat rewrite plus_assoc; rewrite H.",
                        "VernacExtend",
                        "86b843525881a98b2c0e39b30aec0ceb36d86f50"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_comm with (m := v * n); repeat rewrite plus_assoc_reverse; rewrite H0; auto.",
                        "VernacExtend",
                        "ad699a1c57b7f05c6f6ed98e5711ed836d43a8f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_mult_O",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "intros a b H'; inversion_clear H'.",
                        "VernacExtend",
                        "16241007a80ad255d3e0a1de0695622024d7e1b3"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := u * b) (v := v * b).",
                        "VernacExtend",
                        "0e69f85150232a0eeacd18fac4091f691bc090f2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_comm with (m := b); repeat rewrite mult_assoc_reverse; repeat rewrite (mult_comm b).",
                        "VernacExtend",
                        "93ed5fca6e3ba1b385936bd17548670116cb2565"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_r; rewrite H; rewrite mult_plus_distr_r; simpl in |- *; auto.",
                        "VernacExtend",
                        "70aaa5dd7ed67f3c13ab56b94facbb61ae8004a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_plus",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "intros a b c d H' H'0; inversion_clear H'; inversion_clear H'0.",
                        "VernacExtend",
                        "1f656ee4d4ba3999fa3168eae4878f5ee212f413"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := u0 + u) (v := v0 + v).",
                        "VernacExtend",
                        "7098c6bd22f7bdec978b288441bbb1aaa4526c1b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_plus_distr_r; repeat rewrite plus_assoc_reverse.",
                        "VernacExtend",
                        "b8f9d24d7806df6a3c03312fbdda4f1b55fe5894"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_assoc c); rewrite (plus_assoc d); rewrite H0.",
                        "VernacExtend",
                        "2f74021f670777781d774a40d888bb90f02416c1"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm a); rewrite (plus_comm b); repeat rewrite plus_assoc_reverse; rewrite plus_comm with (m := a); rewrite plus_comm with (m := b); rewrite H; auto.",
                        "VernacExtend",
                        "41c44e29c3809f2a57223913d4d1172ca256727e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_add",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "intros a b c H; inversion_clear H.",
                        "VernacExtend",
                        "8356a4c091c1a7ec049a01fd6e776da014ffc5e8"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := u) (v := v); auto.",
                        "VernacExtend",
                        "b21fec2feaae5445d64a1fadc94083e61e9c7fe4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_comm with (m := c); repeat rewrite plus_assoc_reverse; rewrite H0; auto.",
                        "VernacExtend",
                        "6636bc47cd19761ad95afebe1bf97359777f1a2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_times",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros a b c H; inversion_clear H.",
                        "VernacExtend",
                        "8356a4c091c1a7ec049a01fd6e776da014ffc5e8"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := u * c) (v := v * c); auto.",
                        "VernacExtend",
                        "d9a29b0b21d428365f66344cf623cdb264e8ba1c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_comm with (m := c); repeat rewrite mult_assoc_reverse; repeat rewrite (mult_comm c).",
                        "VernacExtend",
                        "31a325122487cba8ffc326cebff2245ab6b4f19b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "659593e70bd346a77e8af099a7a4f92851083e9b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_mult",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "intros a b c d H' H'0; inversion_clear H'; inversion_clear H'0.",
                        "VernacExtend",
                        "1f656ee4d4ba3999fa3168eae4878f5ee212f413"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := u0 * a + u * u0 * n + u * c) (v := v0 * b + v * v0 * n + v * d).",
                        "VernacExtend",
                        "80dade877e2dff5d3a98eb65f8f8d4ce8ee53943"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_plus_distr_r.",
                        "VernacExtend",
                        "df7976210811659a9acb3de0387b24aaa38b78d7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc.",
                        "VernacExtend",
                        "5dd8a7fee64febaa68da3d2e8e9db466c70f71a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm u0); rewrite (mult_comm v0).",
                        "VernacExtend",
                        "6cdc6aef12cf5507524e1fc14c94f50443067bbe"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_assoc_reverse.",
                        "VernacExtend",
                        "7fc64a3db40f26da8a32b79c4818dae38ac3c8ef"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_comm a); repeat rewrite (mult_comm b).",
                        "VernacExtend",
                        "0634e8eef8a4c57dfb6ce39ba48103d34ec186d2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "659593e70bd346a77e8af099a7a4f92851083e9b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_assoc.",
                        "VernacExtend",
                        "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_comm with (m := n).",
                        "VernacExtend",
                        "eaabfc8513c763d4b91114a2a6636c92b1d011d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_assoc n u); rewrite (mult_assoc n v).",
                        "VernacExtend",
                        "2e2d0e119c275a7c0adf5342ae8825c68f4a8575"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_assoc.",
                        "VernacExtend",
                        "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_assoc_reverse n n).",
                        "VernacExtend",
                        "ca004f50898c042d77239410c4ac1cb2e27f82fb"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm with (m := n * u); rewrite mult_comm with (m := n * v).",
                        "VernacExtend",
                        "9017fde7719da7c1c9dc9c1f6c67b1ce3a2d8604"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_assoc_reverse with (m := n).",
                        "VernacExtend",
                        "3252c24bc6659615046c212c75585da592384486"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_comm (n * u)); repeat rewrite (mult_comm (n * v)).",
                        "VernacExtend",
                        "a2efc2faad06126c49c69d8c1a4513e0179ac47c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc_reverse; repeat rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "0a0e5402c4878f76d59745468f02668b16f98a87"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm with (m := c); rewrite plus_comm with (m := d).",
                        "VernacExtend",
                        "4853cccad2a8c1c982d79a11b6ba4677397141c1"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_comm (c + n * u0)); repeat rewrite (mult_comm (d + n * v0)).",
                        "VernacExtend",
                        "edefee14bfe91f18f394488a99fa969736f5694b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_comm (c + n * u0)); repeat rewrite (mult_comm (d + n * v0)).",
                        "VernacExtend",
                        "edefee14bfe91f18f394488a99fa969736f5694b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "659593e70bd346a77e8af099a7a4f92851083e9b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (mult_comm n); rewrite H; auto.",
                        "VernacExtend",
                        "27522ed049429f8cdf253dbec9ec064d60f3a255"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_pow",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "intros a b c; elim c; simpl in |- *; auto.",
                        "VernacExtend",
                        "0970e8c2f0fa18951e87c7b38bfb5281a8a3b16a"
                    ]
                },
                {
                    "command": [
                        "intros H'; apply cong_ref.",
                        "VernacExtend",
                        "0c565c2ee28d50abac05d247aa6af29347b3e331"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' H'0.",
                        "VernacExtend",
                        "ea8ac79a2800f0d8bdcdd37aaa48ae8cfeab89be"
                    ]
                },
                {
                    "command": [
                        "apply cong_mult; auto.",
                        "VernacExtend",
                        "abfc7c3bff817defcdac2c0577e4a2155ea98356"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "congruent'",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0; inversion_clear H'0.",
                        "VernacExtend",
                        "d9b311671a4c58aa53e4c908ff386a4c8499e378"
                    ]
                },
                {
                    "command": [
                        "exists (v - u).",
                        "VernacExtend",
                        "2a7403c1204cd255fb617b6c1adc9c7fd6d184ba"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_r; auto.",
                        "VernacExtend",
                        "a53386ea5765e98d2d4aa1d2f2a820311fca9834"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_minus_assoc.",
                        "VernacExtend",
                        "da4a668d96208a0eb12ac2a8517ae068388eb1f9"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite <- H; rewrite plus_comm; auto with arith.",
                        "VernacExtend",
                        "001a61e93dad7c2f353876bc9b4261ce01668ce1"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_le with (a := b) (b := a); auto.",
                        "VernacExtend",
                        "180f4be34e446ea661cae32023ea28b8f9163543"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong1_le",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "intros x; case x; auto with arith.",
                        "VernacExtend",
                        "0ad0983039580e13e8453bbff640b5ec6399e624"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; inversion_clear H'0.",
                        "VernacExtend",
                        "57978ad7189e041cf7c6386c1010c500c7b9efb7"
                    ]
                },
                {
                    "command": [
                        "absurd (n = 1).",
                        "VernacExtend",
                        "3294fa6a2ccee376e7c3606f6f90b99a28ecff78"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'0; absurd (1 < n); auto; rewrite H'0; auto with arith.",
                        "VernacExtend",
                        "62019dc2c000841bb417074d90f7dc777e6f9cec"
                    ]
                },
                {
                    "command": [
                        "apply mult_SO with (y := u - v); auto.",
                        "VernacExtend",
                        "cee265d808c694e887e5ca5e4d1e25c494df4dcd"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm.",
                        "VernacExtend",
                        "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_minus_distr_r; auto.",
                        "VernacExtend",
                        "a53386ea5765e98d2d4aa1d2f2a820311fca9834"
                    ]
                },
                {
                    "command": [
                        "simpl in H; rewrite H.",
                        "VernacExtend",
                        "0e32ce81b090f217ca5901e8c7a2aa8bca44de30"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_Sn_m; auto with arith.",
                        "VernacExtend",
                        "5e0dc727f7596ad62b6284d24e09632fa0d1a674"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divides_cong",
            "line_nb": 438,
            "steps": [
                {
                    "command": [
                        "intros x H; inversion_clear H.",
                        "VernacExtend",
                        "456df79616bcf798c7396bc2568b7faab61a20aa"
                    ]
                },
                {
                    "command": [
                        "apply congruentDef with (u := q) (v := 0); simpl in |- *; rewrite H0; auto with arith.",
                        "VernacExtend",
                        "48ac3c40c4c31e022abcdc639f169b859c57f8f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_divides",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "intros a b H H0; elim (congruent' _ _ H H0).",
                        "VernacExtend",
                        "08c4d214e03114b8f1fed4c913f15db2705ae2b3"
                    ]
                },
                {
                    "command": [
                        "intros x H1; exists x.",
                        "VernacExtend",
                        "e373332a217eae2944452a06230b4657d4271c44"
                    ]
                },
                {
                    "command": [
                        "apply plus_reg_l with b.",
                        "VernacExtend",
                        "f42b9d66a4684e05c2000294bb7ae20dd1a71969"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r; auto.",
                        "VernacExtend",
                        "383ee41ec24a79af2d0006fe6fd12fa59e5491ad"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite <- H1; auto.",
                        "VernacExtend",
                        "e7ac7fa6cddbe60025a16a0ccaaaa429daf6bdf3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}