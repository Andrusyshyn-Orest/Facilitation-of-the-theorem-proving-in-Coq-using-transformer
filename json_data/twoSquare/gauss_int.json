{
    "filename": "gauss_int.v",
    "coq_project": "twoSquare",
    "vernac_cmds": [
        [
            "From mathcomp Require Import all_ssreflect all_algebra all_field.",
            "VernacRequire",
            "9ae2da43b8d56589c9d880278611ed428bd1a779"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GRing.Theory Num.Theory UnityRootTheory.",
            "VernacImport",
            "e34b5fcb5dfb87b4ce98155046197a426a5ece4b"
        ],
        [
            "Open Scope ring_scope.",
            "VernacOpenCloseScope",
            "508d3abdb5708930f210cdbb3daabf39f19e68e3"
        ],
        [
            "Section PreliminaryLemmas.",
            "VernacBeginSection",
            "0f463c4edc6e549b7b36a442c3632fd711af5079"
        ],
        [
            "Lemma Cnat_mul_eq1 : {in Cnat &, forall x y, (x * y == 1) = (x == 1) && (y == 1)}.",
            "VernacStartTheoremProof",
            "f6b191674fa2881a7e1ffefcda878413afe76a1b"
        ],
        [
            "by move=> x y /CnatP [n ->] /CnatP [m ->]; rewrite -natrM !pnatr_eq1 muln_eq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cnat_add_eq1 : {in Cnat &, forall x y, (x + y == 1) = ((x == 1) && (y == 0)) || ((x == 0) && (y == 1))}.",
            "VernacStartTheoremProof",
            "e978823fdef6d3a9e045f081eb5e777a9fda86ae"
        ],
        [
            "move=> x y /CnatP [n ->] /CnatP [m ->]; rewrite -natrD !pnatr_eq1 ?pnatr_eq0.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move: n m => [|[|?]] [|[|?]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algReM (x y : algC) : 'Re (x * y) = 'Re x * 'Re y - 'Im x * 'Im y.",
            "VernacStartTheoremProof",
            "9171058855a073122b4b2dc45ab2800c0b60b353"
        ],
        [
            "rewrite {1}[x]algCrect {1}[y]algCrect mulC_rect Re_rect //; by rewrite rpredD ?rpredN // rpredM // ?Creal_Re ?Creal_Im.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algImM (x y : algC) : 'Im (x * y) = 'Re x * 'Im y + 'Re y * 'Im x.",
            "VernacStartTheoremProof",
            "35a904c5b43d9b22a19201e6e615fa3cf276042d"
        ],
        [
            "rewrite {1}[x]algCrect {1}[y]algCrect mulC_rect Im_rect //; by rewrite rpredD ?rpredN // rpredM // ?Creal_Re ?Creal_Im.",
            "VernacExtend",
            "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algReV (x : algC) : 'Re (x^-1) = 'Re x / `|x| ^+ 2.",
            "VernacStartTheoremProof",
            "0bf9087bf5ce6f8368aa058670d57ff808dbd1e8"
        ],
        [
            "have [|/mulfV H] := boolP (x^* == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite conjC_eq0 => /eqP->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite invr0 normr0 (Creal_ReP _ _) ?mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}[_ ^-1]mul1r -H -mulrA -invfM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {1}[x]algCrect conjC_rect ?Creal_Re ?Creal_Im //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have F : (x^* * x)^-1 \\is Creal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite rpredV CrealE rmorphM conjCK mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrBl -mulrN -['i * _ * _]mulrA Re_rect ?normCKC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite rpredM ?Creal_Re.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mulrN rpredN rpredM // Creal_Im.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algImV (x : algC) : 'Im (x^-1) = - ('Im x / `|x| ^+ 2).",
            "VernacStartTheoremProof",
            "74105fe940bcc01b0c9b30e71ae9d8a6d3fc15b5"
        ],
        [
            "have [|/mulfV H] := boolP (x^* == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite conjC_eq0 => /eqP->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite invr0 normr0 (Creal_ImP _ _) ?mul0r ?oppr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}[_ ^-1]mul1r -H -mulrA -invfM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {1}[x]algCrect conjC_rect ?Creal_Re ?Creal_Im //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have F : (x^* * x)^-1 \\is Creal.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite rpredV CrealE rmorphM conjCK mulrC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrBl -mulrN -['i * _ * _]mulrA Im_rect ?normCKC //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite mulrN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite rpredM ?Creal_Re.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mulrN rpredN rpredM // Creal_Im.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algRe_div (x y : algC) : 'Re (x/y) = ('Re x * 'Re y + 'Im x * 'Im y) / `|y| ^+ 2.",
            "VernacStartTheoremProof",
            "5bc6289fb70a5396732545ec6829874e804833f5"
        ],
        [
            "by rewrite algReM algReV algImV mulrN opprK mulrA ['Im x * _]mulrA mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algIm_div (x y : algC) : 'Im (x/y) = ('Re y * 'Im x - 'Re x * 'Im y) / `|y| ^+ 2.",
            "VernacStartTheoremProof",
            "cb8dde89e4bd3a0a8ff93ce8f1a2cc7e1a1d6b10"
        ],
        [
            "rewrite algImM algReV algImV addrC mulrN mulrA ['Re x * _]mulrA mulrBl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cdivz (x y : int) : int := (let q := (x %/ y) in if (y == 0) || (2%:R * (x %% y)%Z <= `|y|) then q else q + (-1) ^+ (y < 0)%R)%Z.",
            "VernacDefinition",
            "9aada8179d41a4bec3dac1af4b3f4cbf7820b05c"
        ],
        [
            "Infix \"%c/\" := cdivz (at level 40) : int_scope.",
            "VernacInfix",
            "f20f413479cafe0af96bd80fa56e0521526cc2a4"
        ],
        [
            "Lemma cdivz0 x : (x %c/ 0)%Z = 0.",
            "VernacStartTheoremProof",
            "2378202c269966d9e7bf486c17bafed85cfbb0fe"
        ],
        [
            "by rewrite /cdivz eqxx divz0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cdiv0z y : (0 %c/ y)%Z = 0.",
            "VernacStartTheoremProof",
            "e532b6aed1d2c57da8c2c8ea01e5448bd0ed2392"
        ],
        [
            "by rewrite /cdivz div0z mod0z mulr0 normr_ge0 orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cdivz1 x : (x %c/ 1)%Z = x.",
            "VernacStartTheoremProof",
            "ad0562fd539dcd4de96df2271b962cdeb696435e"
        ],
        [
            "by rewrite /cdivz oner_eq0 divz1 modz1 normr1 mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cdivzz x : x != 0 -> (x %c/ x)%Z = 1.",
            "VernacStartTheoremProof",
            "85e4577ce2da9cf76c438941bee65d6c097759d7"
        ],
        [
            "move=> xNz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /cdivz (negPf xNz) divzz xNz modzz mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cmodz (x y : int) : int := x - (x %c/ y)%Z * y.",
            "VernacDefinition",
            "baf5fb525af36853a8e9f72bdf0eb2c081459d23"
        ],
        [
            "Infix \"%c%\" := cmodz (at level 40) : int_scope.",
            "VernacInfix",
            "d93e6cd4b146311fffd294aff4ba2a36ef7cd996"
        ],
        [
            "Lemma cdivz_eq (x y : int) : x = (x %c/ y)%Z * y + (x %c% y)%Z.",
            "VernacStartTheoremProof",
            "227469396523879a5866996069ad7c99fad878f4"
        ],
        [
            "by rewrite /cmodz addrC subrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmodz0 x : (x %c% 0)%Z = x.",
            "VernacStartTheoremProof",
            "2d55220dd380c9a4cc5f2b09ef1c6847b3a0954e"
        ],
        [
            "by rewrite {2}(cdivz_eq x 0) mulr0 add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmod0z y : (0 %c% y)%Z = 0.",
            "VernacStartTheoremProof",
            "1e0677728694a46c2dfde7d2038763063cc9c155"
        ],
        [
            "by rewrite {2}(cdivz_eq 0 y) cdiv0z mul0r add0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmodz1 x : (x %c% 1)%Z = 0.",
            "VernacStartTheoremProof",
            "07a18c3bd900c49f50cec9f80e214077b3691a03"
        ],
        [
            "by rewrite /cmodz cdivz1 mulr1 subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmodzz x : (x %c% x)%Z = 0.",
            "VernacStartTheoremProof",
            "5476fef214619558201c48bd67d8756099d13a04"
        ],
        [
            "have [/eqP->|xNz] := boolP (x == 0); first by rewrite cmod0z.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /cmodz cdivzz // mul1r subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cmodz_lt (x y : int) : y != 0 -> (2%:R * `|x %c% y| <= `|y|)%Z.",
            "VernacStartTheoremProof",
            "9db863f2665f1e56d247e4e133a437849191d66b"
        ],
        [
            "move=> yNz; rewrite /cmodz /cdivz (negPf yNz) /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [mLe|eLm] := boolP (2%:R * (_ %% _)%Z <= `|_|).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {1}(divz_eq x y) [_ * _ + _]addrC addrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [`|(_ %% _)%Z|]ger0_norm // modz_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrDl opprD addrA {1}(divz_eq x y) [_ * _ + _]addrC addrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have F := ltz_mod x yNz.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -normrEsign ler0_norm; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite subr_le0; apply: ltrW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mulrN mulrBr opprB lter_sub_addl (_ : 2%:R = 1 + 1) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite mulrDl mul1r ler_add // ltrW // ltrNge.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PreliminaryLemmas.",
            "VernacEndSegment",
            "cfa355b9beeb4dd82b774864ca0e38491d56af8a"
        ],
        [
            "Section GaussIntegers.",
            "VernacBeginSection",
            "d979e93db5a1907ac69239b3a71589a497d34253"
        ],
        [
            "Definition gaussInteger := [qualify a x | ('Re x \\in Cint) && ('Im x \\in Cint)].",
            "VernacDefinition",
            "cad9c2ed565a1a3ec3b9def1555d7caadf474cd2"
        ],
        [
            "Lemma Cint_GI (x : algC) : x \\in Cint -> x \\is a gaussInteger.",
            "VernacStartTheoremProof",
            "29ce80c77b456d0689aa3e663a7902324b73c3b8"
        ],
        [
            "move=> x_int; rewrite qualifE (Creal_ReP _ _) ?(Creal_ImP _ _) ?Creal_Cint //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite x_int rpred0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GI_subring : subring_closed gaussInteger.",
            "VernacStartTheoremProof",
            "ddd2ebfa3e582021f2ae63dc90b00f637dcda7a8"
        ],
        [
            "split => [|x y /andP[??] /andP[??]|x y /andP[??] /andP[??]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite Cint_GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite qualifE !raddfB /= ?rpredB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite qualifE algReM algImM rpredB ?rpredD // rpredM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact GI_key : pred_key gaussInteger.",
            "VernacStartTheoremProof",
            "f7559ba0c8733c26a06498337dd5449d1489f59d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical GI_keyed := KeyedQualifier GI_key.",
            "VernacDefinition",
            "b601d0155c01506fa38fb06d723db5589341dc1d"
        ],
        [
            "Canonical GI_opprPred := OpprPred GI_subring.",
            "VernacDefinition",
            "77252bf74aa8dfdf06e8aacf5fee02394a56a148"
        ],
        [
            "Canonical GI_addrPred := AddrPred GI_subring.",
            "VernacDefinition",
            "6d74ab68c97111638212941cb0e10965751d614c"
        ],
        [
            "Canonical GI_mulrPred := MulrPred GI_subring.",
            "VernacDefinition",
            "20f3c25fcced502aa2d610f3a432ea7a0a0688ce"
        ],
        [
            "Canonical GI_zmodPred := ZmodPred GI_subring.",
            "VernacDefinition",
            "c645b711f8c404c2bd93a0cd1ee51d6fb43cf85e"
        ],
        [
            "Canonical GI_semiringPred := SemiringPred GI_subring.",
            "VernacDefinition",
            "bf7fac38d5fad87f6cd745abc8367021f177d8d9"
        ],
        [
            "Canonical GI_smulrPred := SmulrPred GI_subring.",
            "VernacDefinition",
            "00a26a61fb8a96b066ec8eb82f872c93b6a64837"
        ],
        [
            "Canonical GI_subringPred := SubringPred GI_subring.",
            "VernacDefinition",
            "e8c65d78cebb9d36f5e7aa2b180fcd0529e366b5"
        ],
        [
            "Record GI := GIof { algGI : algC; algGIP : algGI \\is a gaussInteger }.",
            "VernacInductive",
            "fc31e5c9392787e4a36fe7602c2c0c142482225e"
        ],
        [
            "Hint Resolve algGIP.",
            "VernacHints",
            "e4bbd3291d64a4aa0c8cdc74c5c25b0872016a1d"
        ],
        [
            "Canonical GI_subType := [subType for algGI].",
            "VernacDefinition",
            "5b310fadde8d3efe378a13b084678e3e1bef995c"
        ],
        [
            "Lemma GIRe (x : GI) : 'Re (val x) \\in Cint.",
            "VernacStartTheoremProof",
            "1231a3a3dfeafd84f68e99db0cadd5361959db2d"
        ],
        [
            "by have /andP [] := algGIP x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma GIIm (x : GI) : 'Im (val x) \\in Cint.",
            "VernacStartTheoremProof",
            "3ccd6ea92458c4f0451f04208a6943ad55191831"
        ],
        [
            "by have /andP [] := algGIP x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve GIRe GIIm.",
            "VernacHints",
            "004558e6360c08b4c33ec8a889032469269db2a4"
        ],
        [
            "Canonical ReGI x := GIof (Cint_GI (GIRe x)).",
            "VernacDefinition",
            "72655212ce07f5a3639a62c0789b986c59d5a59a"
        ],
        [
            "Canonical ImGI x := GIof (Cint_GI (GIIm x)).",
            "VernacDefinition",
            "0ac73be0341645b0e24f89da4520e3d6a2b8e135"
        ],
        [
            "Definition eqGIMixin := [eqMixin of GI by <:].",
            "VernacDefinition",
            "2c27a3b7e7a6b4c92739996b2cfdc122d448c5e8"
        ],
        [
            "Canonical eqGIType := EqType GI eqGIMixin.",
            "VernacDefinition",
            "ac384fc9556ab6a60fcf2313105d64b90bee507e"
        ],
        [
            "Definition GI_choiceMixin := [choiceMixin of GI by <:].",
            "VernacDefinition",
            "307c937f3356e633d65f0517e1fb65ea5d754b46"
        ],
        [
            "Canonical GI_choiceType := ChoiceType GI GI_choiceMixin.",
            "VernacDefinition",
            "d301d984b7b54ce6a06161e26c61e34de96adabe"
        ],
        [
            "Definition GI_countMixin := [countMixin of GI by <:].",
            "VernacDefinition",
            "8a88f1dae6e650c800d0679f0d59d5c274b95152"
        ],
        [
            "Canonical GI_countType := CountType GI GI_countMixin.",
            "VernacDefinition",
            "4f7331bf08aacfe650cf55332951fcdb39f9ed24"
        ],
        [
            "Definition GI_zmodMixin := [zmodMixin of GI by <:].",
            "VernacDefinition",
            "f6f6469dd77b606b54410ccc818c8650d66933e7"
        ],
        [
            "Canonical GI_zmodType := ZmodType GI GI_zmodMixin.",
            "VernacDefinition",
            "02037bb4cbfb974254839c35b8d68c0fe97394c2"
        ],
        [
            "Definition GI_ringMixin := [ringMixin of GI by <:].",
            "VernacDefinition",
            "c1ff3ac67538d0c5879fcced7bf2b58bcbae8ba9"
        ],
        [
            "Canonical GI_ringType := RingType GI GI_ringMixin.",
            "VernacDefinition",
            "dd20c19a2e301d22164041bd95b0264a09b640f6"
        ],
        [
            "Definition GI_comRingMixin := [comRingMixin of GI by <:].",
            "VernacDefinition",
            "fddc9ff3138f60cd1024c4ef45a2a1d471e8ab1f"
        ],
        [
            "Canonical GI_comRingType := ComRingType GI GI_comRingMixin.",
            "VernacDefinition",
            "f68d32b9d4e312606d3b3345d70b06cd5523f211"
        ],
        [
            "Definition invGI (x : GI) := insubd x (val x)^-1.",
            "VernacDefinition",
            "af8079f6337302748563c2259ae9a1f6861a1238"
        ],
        [
            "Definition unitGI (x : GI) := (x != 0) && ((val x)^-1 \\is a gaussInteger).",
            "VernacDefinition",
            "d7ed3118f42aaf147f036ffee017d41a11047e4a"
        ],
        [
            "Fact mulGIr : {in unitGI, left_inverse 1 invGI *%R}.",
            "VernacStartTheoremProof",
            "dd6356d8477eab746d7dd4cb6bb1ab6fd8afbf3b"
        ],
        [
            "move=> x /andP [x_neq0 xVGI]; rewrite /invGI.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: val_inj; rewrite /= insubdK // mulVr ?unitfE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact unitGIP (x y : GI) : y * x = 1 -> unitGI x.",
            "VernacStartTheoremProof",
            "71ac8fc473f2a97eb5c7a3cec3c8b60ff095ff77"
        ],
        [
            "rewrite /unitGI => /(congr1 val) /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [-> /eqP|x_neq0] := altP (x =P 0); first by rewrite mulr0 eq_sym oner_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> /(canRL (mulfK x_neq0)); rewrite mul1r => <- /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact unitGI_out : {in [predC unitGI], invGI =1 id}.",
            "VernacStartTheoremProof",
            "bea220972caf86fbfc2cea73d13fafd39c017b47"
        ],
        [
            "move=> x; rewrite inE /= -topredE /= /unitGI.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite negb_and negbK => /predU1P [->|/negPf xGIF]; by apply: val_inj; rewrite /invGI ?val_insubd /= ?xGIF // invr0 if_same.",
            "VernacExtend",
            "7bd77ea96f784074e3b1d448260a45dd4191485f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition GI_comUnitRingMixin := ComUnitRingMixin mulGIr unitGIP unitGI_out.",
            "VernacDefinition",
            "cd4e8edbba4b3de354c77edb6a0b7900321bb267"
        ],
        [
            "Canonical GI_unitRingType := UnitRingType GI GI_comUnitRingMixin.",
            "VernacDefinition",
            "5db119e7360bc1815fdb54d380d5aea5328498fc"
        ],
        [
            "Canonical GI_comUnitRingType := [comUnitRingType of GI].",
            "VernacDefinition",
            "4b7a94341159765d2c757f2ee19f2354e786f563"
        ],
        [
            "Lemma conjGIE x : (x^* \\is a gaussInteger) = (x \\is a gaussInteger).",
            "VernacStartTheoremProof",
            "151ed2513771dcbde85e158579ea7a8ea519d627"
        ],
        [
            "by rewrite ![_ \\is a _]qualifE Re_conj Im_conj rpredN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact conjGI_subproof (x : GI) : (val x)^* \\is a gaussInteger.",
            "VernacStartTheoremProof",
            "921e470282817d47d610c8497b9d11941288d87b"
        ],
        [
            "by rewrite conjGIE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical conjGI x := GIof (conjGI_subproof x).",
            "VernacDefinition",
            "62c56194ba5732762e7fe539f240fe6f608414d6"
        ],
        [
            "Fact conjGI_sub : {morph conjGI : a b / a - b}.",
            "VernacStartTheoremProof",
            "b9a27e6eecfc1e34f0238524b1c34d8a675b21dc"
        ],
        [
            "by move=> a b; apply/val_eqP; rewrite /= raddfB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical conjGI_additive := Additive conjGI_sub.",
            "VernacDefinition",
            "3e16fa49b2ed94f0cb52928cf6c9cd2074eef05f"
        ],
        [
            "Fact conjGI_multiplicative : multiplicative conjGI.",
            "VernacStartTheoremProof",
            "f5199d5a1db39bd16488df4c60efc8718c5ac27b"
        ],
        [
            "by split=> [a b|]; apply/val_eqP; rewrite /= ?(rmorphM,rmorph1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical conjGI_rmorphism := AddRMorphism conjGI_multiplicative.",
            "VernacDefinition",
            "5f83ce5c2a9d4c8669ebb210ebbc49e71acacdd7"
        ],
        [
            "Lemma algGI_nat n : algGI n%:R = n%:R.",
            "VernacStartTheoremProof",
            "4d15020098328a9f0661fa877094fb3d1b33ba2a"
        ],
        [
            "by elim: n => //= n IH; rewrite -addn1 !natrD -IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjGI_nat n : conjGI n%:R = n%:R.",
            "VernacStartTheoremProof",
            "88db71747702e1e9d7896ed7a87b09564a14e17e"
        ],
        [
            "by apply/val_eqP; rewrite /= algGI_nat conjC_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjGIK : involutive conjGI.",
            "VernacStartTheoremProof",
            "a59c7cd290ce2af2f7f4af6f66b5a5e2ab760cd3"
        ],
        [
            "by move=> x; apply/val_eqP/eqP; exact: conjCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gaussNorm (x : algC) := x * x^*.",
            "VernacDefinition",
            "c4fd12034065f1bb9118c7c1020053101c42b0c6"
        ],
        [
            "Lemma gaussNormE x : gaussNorm x = `|x| ^+ 2.",
            "VernacStartTheoremProof",
            "7375f54fb8d93766ce4d8ac4d68d694c4469b0f6"
        ],
        [
            "by rewrite normCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gaussNormCnat (x : GI) : gaussNorm (val x) \\in Cnat.",
            "VernacStartTheoremProof",
            "3a19681d8ef6ca44f72fa74ef11f97bbbc95f8a6"
        ],
        [
            "by rewrite /gaussNorm -normCK normC2_Re_Im rpredD // Cnat_exp_even.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve gaussNormCnat.",
            "VernacHints",
            "3c0615f1d446f956d6ee71c1c0b02f799219b9af"
        ],
        [
            "Delimit Scope GI_scope with GI.",
            "VernacDelimiters",
            "31f010316a375b3cdd106b5a0b19ab3f75ec9aad"
        ],
        [
            "Open Scope GI_scope.",
            "VernacOpenCloseScope",
            "197710bc9e8eb7cede38ae3ed2957b184fe6a8fc"
        ],
        [
            "Definition normGI (x : GI) := truncC (gaussNorm (val x)).",
            "VernacDefinition",
            "329a0fea5638fd2b9108b3d4f99f07d4588b9283"
        ],
        [
            "Local Notation \"'N x\" := (normGI x%R) (at level 10) : GI_scope.",
            "VernacNotation",
            "196615c3f77b85e4d354631c03e8a164cfcb6c38"
        ],
        [
            "Lemma gaussNorm0 : gaussNorm 0 = 0.",
            "VernacStartTheoremProof",
            "99751ea1d714661541b3e34ef68407996554af0c"
        ],
        [
            "by rewrite /gaussNorm mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI0 : 'N 0 = 0%N.",
            "VernacStartTheoremProof",
            "bd61ef4ac5041817be38b300ce071e6d88f6899b"
        ],
        [
            "by rewrite /normGI gaussNorm0 (natCK 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gaussNorm1 : gaussNorm 1 = 1.",
            "VernacStartTheoremProof",
            "4ddd7edd44874bea044feeeb26566c28888bc4bf"
        ],
        [
            "by rewrite /gaussNorm rmorph1 mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI1 : 'N 1 = 1%N.",
            "VernacStartTheoremProof",
            "2d171f7ccba2511ff3b1331bb2a5d790a9794aa1"
        ],
        [
            "by rewrite /normGI gaussNorm1 (natCK 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gaussNormM : {morph gaussNorm : x y / x * y}.",
            "VernacStartTheoremProof",
            "eba6e51e3bf270562731d0455478a8959707061d"
        ],
        [
            "by move=> x y; rewrite /gaussNorm rmorphM mulrACA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGIM x y : 'N (x * y) = ('N x * 'N y)%N.",
            "VernacStartTheoremProof",
            "109d790a2dcad65d12642804f9af38b6183b6a58"
        ],
        [
            "by rewrite /normGI gaussNormM truncCM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGIX x n : 'N (x ^+ n) = ('N x ^ n)%N.",
            "VernacStartTheoremProof",
            "04094a89e6ff517e6ddf828c3d3cee2ef5b6660f"
        ],
        [
            "elim: n => [|n IH].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite expr0 normGI1 expn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite exprS normGIM IH expnS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gaussNorm_eq0 (x : GI) : (gaussNorm (algGI x) == 0) = (x == 0).",
            "VernacStartTheoremProof",
            "6bcfff34c90a733c5399ab61496542b07e4f5e8b"
        ],
        [
            "by rewrite gaussNormE sqrf_eq0 normr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI_eq0 (x : GI) : ('N x == 0%N) = (x == 0).",
            "VernacStartTheoremProof",
            "00fdd534ad0d689b128a598bcd24af13dddebf23"
        ],
        [
            "have /charf0P<- := Cchar.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite truncCK // gaussNorm_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI_gt0 (x : GI) : ('N x > 0)%N = (x != 0).",
            "VernacStartTheoremProof",
            "dda42444f9398fff8db40f984381e5f089ce861a"
        ],
        [
            "by rewrite ltn_neqAle andbT eq_sym normGI_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI_le (x y : GI) : y != 0 -> ('N x <= 'N (x * y))%N.",
            "VernacStartTheoremProof",
            "b22ee52e0726f860b1ed3c0890195dc267573da4"
        ],
        [
            "rewrite -!normGI_eq0 normGIM; case: ('N _) => // n _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite leq_pmulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI_nat n : 'N n%:R = (n ^ 2)%N.",
            "VernacStartTheoremProof",
            "1d7d1768836aad4ecd245ae13c9ecaad1939da5b"
        ],
        [
            "by rewrite /normGI [val _]algGI_nat gaussNormE normr_nat truncCX // natCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGIE (x : GI) : ('N(x) = truncC (`|'Re (val x)|) ^ 2 + truncC (`|'Im (val x)|) ^ 2)%N.",
            "VernacStartTheoremProof",
            "9431a26a959ebceb2a9ad3778352467d0e47a5c3"
        ],
        [
            "rewrite /normGI gaussNormE normC2_Re_Im truncCD ?Cnat_exp_even //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite qualifE Cnat_ge0 // Cnat_exp_even.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -!truncCX ?Cnat_norm_Cint // !Cint_normK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma truncC_Cint (x : algC) : x \\in Cint -> x = (-1) ^+ (x < 0)%R * (truncC `|x|)%:R.",
            "VernacStartTheoremProof",
            "68f133612ff568c30b53fe0bd09fd3e186cf8b8a"
        ],
        [
            "by move=> xCint; rewrite {1}[x]CintEsign // truncCK // Cnat_norm_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI_eq1 (x : GI) : ('N(x) == 1)%N = (val x \\in [::1;-1;'i;-'i]).",
            "VernacStartTheoremProof",
            "4b663bc06c4b738dd4ab990d149cf691eaa14bb2"
        ],
        [
            "apply/idP/idP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite normGIE !inE => /or4P[] /eqP->; rewrite ?raddfN /= ?(Creal_ReP 1 _) ?(Creal_ImP 1 _) ?Re_i ?Im_i //= ?normrN ?normr1 ?normr0 ?truncC0 ?truncC1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite [val x]algCrect normGIE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /andP[/truncC_Cint {2}-> /truncC_Cint {2}->] := algGIP x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: truncC => [|[|m]] //; case: truncC => [|[|n]] // _; rewrite !(mulr1, mulr0, add0r, addr0); case: (_ < _)%R; rewrite ?(expr1, expr0, mulrN, mulr1, inE, eqxx, orbT).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unitGIE (x : GI) : (x \\in GRing.unit) = (val x \\in 4.-unity_root).",
            "VernacStartTheoremProof",
            "ac07300bff84dee810989059f60c7bdf10920f54"
        ],
        [
            "have eq_algC (a b : algC) : (a == b) = ('Re a == 'Re b) && ('Im a == 'Im b).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite {1}[a]algCrect {1}[b]algCrect -subr_eq0 opprD addrACA -mulrBr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -normr_eq0 -sqrf_eq0 normC2_rect ?rpredB ?Creal_Re ?Creal_Im //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite paddr_eq0 ?real_exprn_even_ge0 // ?rpredB ?Creal_Re ?Creal_Im //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !expf_eq0 /= !subr_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have N1Creal : -1 \\is Creal by rewrite rpredN.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have oneE : 1 = 1 + 'i * 0 :> algC by rewrite mulr0 addr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have N1E : - 1 = - 1 + 'i * 0 :> algC by rewrite mulr0 addr0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have iE : 'i = 0 + 'i * 1 :> algC by rewrite mulr1 add0r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have NiE : - 'i = 0 + 'i * (- 1) :> algC by rewrite mulrN1 add0r.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have onerN1 : (1 == -1 :> algC) = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -subr_eq0 opprK paddr_eq0 ?oner_eq0 ?ler01.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose my := @id algC.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "transitivity (gaussNorm (val x) == 1).",
            "VernacExtend",
            "4e11a05cc84840e90a90a6e79f1fe402c60877d1"
        ],
        [
            "apply/idP/eqP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> gNx; apply/unitrPr; exists (conjGI x); apply: val_inj.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> x_unit; have /(congr1 (gaussNorm \\o val)) /= /eqP := mulrV x_unit.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "by rewrite gaussNormM gaussNorm1 Cnat_mul_eq1 //= => /andP [/eqP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (@mem_unity_roots _ 4 (map my [:: 1; -1; 'i; -'i])) //; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /= !unity_rootE /= [(- 'i) ^+ _]exprNn expr1n -signr_odd ?expr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[4]/(2 * 2)%N exprM sqrCi -signr_odd ?expr0 mulr1 !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /= ![my _](iE, oneE, N1E, NiE).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= !in_cons !in_nil /= !negb_or -!andbA !andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ![_ + 'i * _ == _]eq_algC ?Re_rect ?Im_rect //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ![_ == -1]eq_sym ![_ == 1]eq_sym oppr_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite eqxx onerN1 oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite gaussNormE [val x]algCrect normC2_rect ?Creal_Re ?Creal_Im //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Cnat_add_eq1 ?Cnat_exp_even ?expf_eq0 //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -Cint_normK // -['Im _ ^+ 2]Cint_normK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !expr2 !Cnat_mul_eq1 ?andbb ?Cnat_norm_Cint //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !real_eqr_norml ?Creal_Re ?Creal_Im ?ler01 ?andbT //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !inE ![my _](iE, oneE, N1E, NiE).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ![_ + 'i * _ == _]eq_algC ?Re_rect ?Im_rect // ?Creal_Re ?Creal_Im //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite andb_orl andb_orr -orbA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma algC_eqE (x y : algC) : (x == y) = (('Re x == 'Re y) && ('Im x == 'Im y)).",
            "VernacStartTheoremProof",
            "d8f682e1c0d725b5661b701b117d0055c7d6d49a"
        ],
        [
            "apply/eqP/andP=> [->//|[/eqP H1 /eqP H2]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite [x]algCrect H1 H2 -algCrect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normGI_unit (x : GI) : ('N(x) == 1)%N = (x \\in GRing.unit).",
            "VernacStartTheoremProof",
            "713857fc5cb5c18f95b06ce2d34216f264917dbf"
        ],
        [
            "rewrite normGI_eq1 unitGIE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (@mem_unity_roots _ 4 (map id [:: 1; -1; 'i; -'i])) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /= !unity_rootE /= [(- 'i) ^+ _]exprNn expr1n -signr_odd ?expr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -[4]/(2 * 2)%N exprM sqrCi -signr_odd ?expr0 mulr1 !eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /= !in_cons !in_nil /= !negb_or -!andbA !andbT /= eqr_opp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -addr_eq0 (eqC_nat 2 0) andTb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite algC_eqE (Creal_ImP _ _) // Im_i (eqC_nat 0 1) andbF andTb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite algC_eqE raddfN (Creal_ReP _ _) //= Re_i oppr0 (eqC_nat 1 0) andFb andTb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite algC_eqE !raddfN /= (Creal_ImP _ _) // Im_i oppr0 (eqC_nat 0 1) andbF andTb.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -addr_eq0 (@mulrn_eq0 _ 'i 2) negb_or neq0Ci.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact GI_idomainAxiom (x y : GI) : x * y = 0 -> (x == 0) || (y == 0).",
            "VernacStartTheoremProof",
            "22cb2e8dbd02a5b549b63b296695a8c19c854c86"
        ],
        [
            "move=> /(congr1 (gaussNorm \\o val)) /= /eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite gaussNorm0 gaussNormM mulf_eq0 !gaussNorm_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical GI_idomainType := Eval hnf in IdomainType GI GI_idomainAxiom.",
            "VernacDefinition",
            "a347b15bfcf664d3881bbce142d3ccf9503f1a5b"
        ],
        [
            "Fact divGI_subproof (x y : int) : x%:~R + 'i * y%:~R \\is a gaussInteger.",
            "VernacStartTheoremProof",
            "5f24c174cce5f9898de16751f44f04d993630d04"
        ],
        [
            "by rewrite qualifE /= Re_rect ?Im_rect ?Creal_Cint ?Cint_int.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition divGI (x y : GI) : GI := let zr := floorC ('Re (val x) * 'Re (val y) + 'Im (val x) * 'Im (val y)) in let zi := floorC ('Re (val y) * 'Im (val x) - 'Re (val x) * 'Im (val y)) in let n := 'N y in GIof (divGI_subproof (cdivz zr n) (cdivz zi n)).",
            "VernacDefinition",
            "4b182ae24631fb80ea9a66c6e8fd6cdb888f1bf0"
        ],
        [
            "Notation \" x %/ y \" := (divGI x y) : GI_scope.",
            "VernacNotation",
            "4488ab9a291d22590a7f871b2514c24dc61e9914"
        ],
        [
            "Lemma divGI0 x : x %/ 0 = 0.",
            "VernacStartTheoremProof",
            "1571b68e4a94df8252f4855eb7821e147294e88e"
        ],
        [
            "apply/val_eqP=> /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !raddf0 !(mul0r, mulr0, subrr, add0r, floorC0, normGI0, cdiv0z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div0GI y : 0 %/ y = 0.",
            "VernacStartTheoremProof",
            "ba80a30c9b68f4d3f29698cab26f215dc876e3ef"
        ],
        [
            "apply/val_eqP=> /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !raddf0 !(mul0r, mulr0, subrr, add0r, floorC0, normGI0, cdiv0z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divGI1 x : x %/ 1 = x.",
            "VernacStartTheoremProof",
            "4064944825bed966555a0dad63c76fd4dfd0d32f"
        ],
        [
            "apply/val_eqP=> /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have /andP[CR CI] := algGIP x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite normGI1 !cdivz1 (Creal_ReP 1 _) ?(Creal_ImP 1 _) // !(mul1r, mulr1, mulr0, mul0r, addr0, add0r, subr0).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite 2?floorCK ?Creal_Cint // -algCrect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divGIxx (x : GI) : x != 0 -> x %/ x = 1.",
            "VernacStartTheoremProof",
            "645b7da200666ab65a742198df5dbf70476c4cee"
        ],
        [
            "move=> xNz; apply/val_eqP => /=.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite subrr floorC0 cdiv0z mulr0 addr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have := xNz.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -normGI_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /normGI gaussNormE [val x]algCrect normC2_rect ?(Creal_Cint, Cint_int) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set u :=_ + _ * _ => uNz.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have->: floorC u = truncC u.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: floorC_def.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite [(_+ 1)%Z]addrC -intS truncC_itv //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addr_ge0 // -expr2 real_exprn_even_ge0 ?(Creal_Cint, Cint_int) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite cdivzz ?mul1r ?subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition modGI (x y : GI) : GI := x - (x %/ y)%GI * y.",
            "VernacDefinition",
            "6320ded8292099f9499a90b8406cac5e2d70ba91"
        ],
        [
            "Notation \" x %% y \" := (modGI x y) : GI_scope.",
            "VernacNotation",
            "b559830d5946fc38da5a447a3db152e3de31b8f7"
        ],
        [
            "Lemma modGI0 x : x %% 0 = x.",
            "VernacStartTheoremProof",
            "1d506e1598cb97b0534222e51a9a0789fda14833"
        ],
        [
            "by apply/val_eqP; rewrite /= !raddf0 !mulr0 subr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod0GI y : 0 %% y = 0.",
            "VernacStartTheoremProof",
            "9d1fdbddfc8db616b3adad0f2ae9a64f6d321578"
        ],
        [
            "apply/val_eqP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /= !(raddf0, mul0r, mulr0, add0r, floorC0, cdiv0z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modGI1 x : x %% 1 = 0.",
            "VernacStartTheoremProof",
            "b81040e45ca721acc3a9c674439220bb624926b5"
        ],
        [
            "by rewrite /modGI divGI1 mulr1 subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divGI_eq (x y : GI) : x = (x %/ y)%GI * y + (x %% y)%GI.",
            "VernacStartTheoremProof",
            "24f77c33ddf0a19cb33e01099342140f53e0cf2a"
        ],
        [
            "by rewrite /modGI addrC subrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_modGI(x y : GI) : ('N (x %% y)%GI < 'N y)%N = (y != 0).",
            "VernacStartTheoremProof",
            "3d01574d694a2699f04b842efb2cfc366f6742ea"
        ],
        [
            "have [/eqP->|yNz] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite normGI0 modGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /ltn_pmul2r<-: (0 < 'N(y) ^ 2)%N by rewrite sqrn_gt0 lt0n normGI_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -{1}normGI_nat -!normGIM /modGI /divGI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set Ux := floorC _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "set Uy := floorC _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "have UxRe : Ux%:~R = 'Re (algGI x / algGI y * ('N y)%:R).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite algReM ['Re _%:R](Creal_ReP _ _) ?qualifE ?ler0n //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?['Im _%:R](Creal_ImP _ _) ?qualifE ?ler0n // mulr0 subr0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /normGI truncCK // algRe_div -gaussNormE divfK; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gaussNorm_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite floorCK // rpredD // rpredM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have UyIm : Uy%:~R = 'Im (algGI x / algGI y * ('N(y))%GI%:R).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite algImM ['Re _%:R](Creal_ReP _ _) ?qualifE ?ler0n //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ?['Im _%:R](Creal_ImP _ _) ?qualifE ?ler0n // mulr0 add0r mulrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /normGI truncCK // algIm_div -gaussNormE divfK; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite gaussNorm_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite floorCK // rpredB // rpredM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ['N (_ * _)]/normGI /= -[algGI x](divfK yNz).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -mulrBl -mulrA -[algGI y * _]mulrC mulrA algGI_nat mulrBl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [_ * _%:R]algCrect -UxRe -UyIm [_ * _%:R]mulrDl -['i * _ * _]mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {1}(cdivz_eq Ux ('N y)) {1}(cdivz_eq Uy ('N y)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subC_rect ![_ + cmodz _ _]addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite rmorphD /= rmorphM /= addrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [(_ + _)%:~R]rmorphD /= rmorphM /= addrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !gaussNormM gaussNormE normC2_rect ?(Creal_Cint, Cint_int) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite truncCM //; last by rewrite rpredD // Cnat_exp_even // Cint_int.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite mulnC ltn_pmul2l; last by rewrite lt0n normGI_eq0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -!rmorphX /= -!rmorphD /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[_ + _]gez0_abs ?natCK; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite addr_ge0 // exprn_even_ge0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set x1 := _ ^+ 2; set x2 := _ ^+ 2.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "apply: leq_ltn_trans (_ : (`|x1| + `|x2| < _)%N).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have := leq_add_dist (x1) (x1 - x2) (-x2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !opprK subrK opprB [_ + (_ - _)]addrC subrK [(`|_| + _)%N]addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(ltn_pmul2l (isT: (0 < 2 ^ 2)%N)) mulnDr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: leq_ltn_trans (_ : 2 * 'N y ^ 2 < _)%N; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltn_mul2r sqrn_gt0 lt0n normGI_eq0 yNz.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F : Posz ('N y) != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqz_nat normGI_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite mul2n -addnn leq_add // !abszX -!expnMn leq_exp2r // -(@ler_nat [numDomainType of int]) natrM !natz /= cmodz_lt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_modGIN0 x y : y != 0 -> ('N (x %% y)%GI < 'N y)%N.",
            "VernacStartTheoremProof",
            "dcc25575cd584988d3e7a3bcee4a6b6ffb89dd39"
        ],
        [
            "by rewrite ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modGIxx x : (x %% x)%GI = 0.",
            "VernacStartTheoremProof",
            "ed2a7f67e316128a239e5fe2f91a5a7e4d961c3a"
        ],
        [
            "have [/eqP->|xNz] := boolP (x == 0); first by rewrite mod0GI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /modGI divGIxx // mul1r subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divGIKl (x y : GI) : x != 0 -> (y * x %/ x) = y.",
            "VernacStartTheoremProof",
            "fcfb5cf4cc9d9322bd3bcb2c973ea48643e101d7"
        ],
        [
            "move=> xNz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/eqP; rewrite eq_sym -subr_eq0.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have := xNz; rewrite -(ltn_modGI (y * x)).",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have -> : ((y * x) %% x)%GI = (y - ((y * x) %/ x)%GI) * x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mulrBl {2}(divGI_eq (y * x) x) [_ + (_ %% _)%GI]addrC addrK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite normGIM -{2}['N x]mul1n ltn_mul2r ltnS leqn0 normGI_eq0 => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divGIKr (x y : GI) : x != 0 -> (x * y %/ x) = y.",
            "VernacStartTheoremProof",
            "5a9ddc253634e15a6cecdc522891876cdd6261ba"
        ],
        [
            "by rewrite mulrC; exact: divGIKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modGIKl (x y : GI) : (y * x %% x) = 0.",
            "VernacStartTheoremProof",
            "9aab6d6665b6c7057329e0b4ad704f0edc72b372"
        ],
        [
            "have [/eqP->|xNz] := boolP (x == 0); first by rewrite modGI0 mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /modGI divGIKl // subrr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modGIKr (x y : GI) : (x * y %% x) = 0.",
            "VernacStartTheoremProof",
            "7c6a7b959f8908e54b62800c06c3eb7a1d1618f4"
        ],
        [
            "by rewrite mulrC modGIKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition dvdGI x y := (y %% x)%GI == 0.",
            "VernacDefinition",
            "64f161b141e81bc319d9f3091dc5910b64091cc9"
        ],
        [
            "Notation \" x %| y \" := (dvdGI x y) : GI_scope.",
            "VernacNotation",
            "185354154d0f1ff73fdd45ba50861b6057dfdc1d"
        ],
        [
            "Lemma dvdGI0 x : (x %| 0)%GI.",
            "VernacStartTheoremProof",
            "aa24e0dfc241f7a07352ffc79eb3cba407f11046"
        ],
        [
            "by rewrite /dvdGI mod0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGIP (x y : GI) : reflect (exists q : GI, y = q * x) (x %| y)%GI.",
            "VernacStartTheoremProof",
            "97b45c046a16cf882f5355671c7366521fd4fefc"
        ],
        [
            "apply: (iffP idP) => [/eqP xDy|[q ->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (y %/ x)%GI; first by rewrite {1}(divGI_eq y x) xDy addr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /dvdGI modGIKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd0GI x : (0 %| x) = (x == 0).",
            "VernacStartTheoremProof",
            "a3868168f315971244789046af1948e89675061a"
        ],
        [
            "apply/dvdGIP/eqP => [[q ->]|->]; first by rewrite mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by exists 0; rewrite mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_mull z x y : (x %| y) -> (x %| z * y).",
            "VernacStartTheoremProof",
            "848b1ecf408ec5f8aba0b99fc29015d363eeda09"
        ],
        [
            "by move=> /dvdGIP[u ->]; apply/dvdGIP; exists (z * u); exact: mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_mulr z x y : (x %| y) -> (x %| y * z).",
            "VernacStartTheoremProof",
            "33e2dca8b669d2f407fcb6c958693177b702661e"
        ],
        [
            "by rewrite mulrC; exact: dvdGI_mull.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGIxx x : x %| x.",
            "VernacStartTheoremProof",
            "1fcd78e2107b4885159732395285319aedc50b9a"
        ],
        [
            "by rewrite /dvdGI modGIxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_norm x y : x %| y -> ('N x %| 'N y)%N.",
            "VernacStartTheoremProof",
            "6f64dbff543af53232a658d55e16c92cb5bd48c3"
        ],
        [
            "by move=> /dvdGIP[z ->]; rewrite normGIM dvdn_mull // dvdnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvd1GI x : (1 %| x) .",
            "VernacStartTheoremProof",
            "a00e6472eb79ae48d73e6501892e6a4683697bb6"
        ],
        [
            "by apply/dvdGIP; exists x; rewrite mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI1 x : (x %| 1) = ('N x == 1%N).",
            "VernacStartTheoremProof",
            "7487cde1c5dd92ffd4aeb1848a75c27f6aaf9250"
        ],
        [
            "apply/idP/idP => [H|].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by have := dvdGI_norm H; rewrite normGI1 dvdn1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite normGI_unit => H; apply/dvdGIP; exists x^-1.",
            "VernacExtend",
            "6c82aa6816646a444944f0e4be3ccd48f32ec434"
        ],
        [
            "by apply/eqP; rewrite mulrC eq_sym -unitrE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divGIK (x y : GI) : x %| y -> (y %/ x)%GI * x = y.",
            "VernacStartTheoremProof",
            "21e924440497c05a25a9b5888aa250d3f92c14c5"
        ],
        [
            "have [/eqP->|nZx /dvdGIP[q ->]] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite dvd0GI mulr0 => /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite divGIKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_add x y z: (x %| y) -> (x %| z) -> (x %| y + z).",
            "VernacStartTheoremProof",
            "cc8adb7fa28364dd882594fb11e3d00669b2e469"
        ],
        [
            "move=> /dvdGIP[q1->] /dvdGIP[q2->]; apply/dvdGIP; exists (q1 + q2).",
            "VernacExtend",
            "fbafe6701d533800ec692c8144676386eb71a80b"
        ],
        [
            "by rewrite mulrDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_nat_dvdz_Re n x : n%:R %| x -> (n %| `|floorC ('Re (algGI x))|)%N.",
            "VernacStartTheoremProof",
            "d859866238fa321ccc5aea0398c47167cd7736d4"
        ],
        [
            "case/dvdGIP=> q /val_eqP/eqP /(congr1 (fun x => Re x)) /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: x => /= ax; rewrite qualifE => /andP[Rx Ix].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: q => /= aq; rewrite qualifE => /andP[Rq Iq].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite [aq]algCrect mulrDl algGI_nat -['i * _ * _]mulrA Re_rect; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /(congr1 Num.norm) /eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite [`|_* _%:R|]normrM -{1}(floorCK Rx) -{1}(floorCK Rq).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite normr_nat -!intr_norm -(intrM _ _ (Posz n)) eqr_int.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -2![`|_|]abszE -PoszM => /eqP[H].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/dvdnP; exists (`|floorC ('Re aq)|)%N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_nat_dvdz_Im n x : n%:R %| x -> (n %| `|floorC ('Im (algGI x))|)%N.",
            "VernacStartTheoremProof",
            "9374a341c37ac0c2179d250bae0a817515531440"
        ],
        [
            "case/dvdGIP=> q /val_eqP/eqP/(congr1 (fun x => Im x)) /=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: x => /= ax; rewrite qualifE => /andP[Rx Ix].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: q => /= aq; rewrite qualifE => /andP[Rq Iq].",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "rewrite [aq]algCrect mulrDl algGI_nat -['i * _ * _]mulrA Im_rect; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /(congr1 Num.norm) /eqP.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite [`|_* _%:R|]normrM -{1}(floorCK Ix) -{1}(floorCK Iq).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite normr_nat -!intr_norm -(intrM _ _ (Posz n)) eqr_int.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -2![`|_|]abszE -PoszM => /eqP[H].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by apply/dvdnP; exists (`|floorC ('Im aq)|)%N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjGI_dvd x y : x %| y -> (conjGI x) %| (conjGI y).",
            "VernacStartTheoremProof",
            "d550e8a298a8c490ae5507b4a9dcbc9bac693e2a"
        ],
        [
            "case/dvdGIP=> q ->; apply/dvdGIP; exists (conjGI q).",
            "VernacExtend",
            "a39e135a3ff0f2f23e960b05678bfbcc7c5f6dc7"
        ],
        [
            "by rewrite rmorphM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact iGI_proof : 'i \\is a gaussInteger.",
            "VernacStartTheoremProof",
            "b9e5a6907ea3de4d3248cb86ec83c2494460f321"
        ],
        [
            "by rewrite qualifE Re_i Im_i Cint0 Cint1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition iGI := GIof iGI_proof.",
            "VernacDefinition",
            "91c6fb229372496c50d386abd74f193720ec8cca"
        ],
        [
            "Lemma dvdGI_norm_even x : ~~ odd ('N x) = ((1 + iGI) %| x).",
            "VernacStartTheoremProof",
            "23fe189d746eb578d5309d6c738c0b1fce39278f"
        ],
        [
            "apply/idP/idP => [Ex|/dvdGIP[u ->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite normGIM {2}/normGI gaussNormE normC2_Re_Im.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite !raddfD /= Re_i Im_i (Creal_ReP _ _) // (Creal_ImP _ _) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite add0r addr0 expr1n (natCK 2) odd_mul negb_and orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/dvdGIP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have := algGIP x; rewrite qualifE => / andP[].",
            "VernacExtend",
            "8431fc4d2460f7908baa11892c1b26797a3f17b8"
        ],
        [
            "have := Ex; rewrite normGIE odd_add !odd_exp /= negb_add.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "set m := 'Re _; set n := 'Im _ => /eqP Omn Cm Cn.",
            "VernacExtend",
            "ced270260aea2dd3ab523a646806c84962140531"
        ],
        [
            "suff FF : (n + m)/2%:R + 'i * ((n - m)/2%:R) \\is a gaussInteger.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "exists (GIof FF); apply/val_eqP => /=.",
            "VernacExtend",
            "240c0b86ad4a22d7c4385b0f03213dfafa3d716d"
        ],
        [
            "rewrite -{2}['i]mulr1 mulC_rect !mulr1 mul1r -mulrBl -mulrDl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite opprB [_ + (m - n)]addrC addrA subrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -addrA [_ + (_ - _)]addrC subrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have F u : (u * 2%:R = u + u) by rewrite mulrDr mulr1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -!F !mulfK 1?[algGI x]algCrect ?(eqC_nat _ 0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite qualifE Re_rect ?Im_rect; last 4 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !(rpredM, rpredV) 1? rpredD ?Creal_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !(rpredM, rpredV) 1? rpredB ?rpredD ?Creal_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !(rpredM, rpredV) 1? rpredD ?Creal_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite !(rpredM, rpredV) 1? rpredB ?rpredD ?Creal_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (CintEsign Cm) (CintEsign Cn).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(truncCK (Cnat_norm_Cint Cm)) -(truncCK (Cnat_norm_Cint Cn)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[truncC `|m|]odd_double_half -[truncC `|n|]odd_double_half.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite Omn !natrD !mulrDr ![(-1) ^+ _]signrE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set u := nat_of_bool _; set v := nat_of_bool _; set w := nat_of_bool _.",
            "VernacExtend",
            "6f9acefb35d3c4fa4eb78a0e027eeb287acf16a4"
        ],
        [
            "set x1 := _./2; set y1 := _./2.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "have F : 2%:R != 0 :> algC by rewrite (eqC_nat 2 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/andP; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "rewrite addrAC addrA -mulrDl -addrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite addrAC !addrA -[1 + 1](natrD _ 1 1) addnn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!muln2 !natrM !mul1r [_ * v%:R]mulrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ![v%:R * _]mulrBr !mulrA !(mulrBl, mulrDl) !mulfK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !mul1r !(rpredB, rpredD, rpredN, rpredM) // Cint_Cnat // Cnat_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite addrAC opprD addrA -mulrBl opprB [(_ - _) + (_ - _)]addrC !addrA subrK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -!muln2 !natrM [_ * v%:R]mulrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite ![v%:R * _]mulrBr !mulrA !(mulrBl, mulrDl) !mulfK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite !mul1r !(rpredB, rpredD, rpredN, rpredM) // Cint_Cnat // Cnat_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gcdGI_rec (n : nat) (xx yy : GI) {struct n} := let rr := modGI xx yy in if rr == 0 then yy else if n is n1.+1 then gcdGI_rec n1 yy rr else rr.",
            "VernacFixpoint",
            "c704a40c5ff441d045f624ba64f0616343a52c40"
        ],
        [
            "Definition gcdGI x y := let: (x1, y1) := if ('N x < 'N y)%N then (y, x) else (x, y) in if x1 == 0 then y1 else gcdGI_rec ('N x1) x1 y1.",
            "VernacDefinition",
            "efa2d3ead45b4402eb347d4b3054bcb39e9cc95f"
        ],
        [
            "Lemma gcd0GI : left_id 0 gcdGI.",
            "VernacStartTheoremProof",
            "39f203637c52dd19a6c478062121bb756b56c250"
        ],
        [
            "move=> x; rewrite /gcdGI.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [/eqP->|xNz]:= boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ltnn eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite normGI0 normGI_gt0 xNz (negPf xNz).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have : 'N x != 0%N by rewrite normGI_eq0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: ('N _) => [|[|v]]; rewrite //= !(mod0GI, modGI0) (negPf xNz) eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGI0 : right_id 0 gcdGI.",
            "VernacStartTheoremProof",
            "106d85c177cac49b729e0bce8d4ef24206f5d453"
        ],
        [
            "move=> x; rewrite /gcdGI.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have [/eqP->|xNz]:= boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ltnn eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite normGI0 /= (negPf xNz).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ('N _) => [|[|v]] //= ; rewrite !(modGI0,mod0GI) (negPf xNz) ?eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGI_recE m n x y : ('N y <= m)%N -> ('N y <= n)%N -> ('N y < 'N x)%N -> gcdGI_rec m x y = gcdGI_rec n x y.",
            "VernacStartTheoremProof",
            "c5d52fc54e837f624dcd1097e588f52f48ef5248"
        ],
        [
            "elim: m n x y => [|m Hrec] [|n] //= x1 y1.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite leqn0 normGI_eq0 => /eqP=> -> _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite normGI0 normGI_gt0 modGI0 => /negPf-> /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case: n => [|n]; rewrite /= mod0GI eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite leqn0 normGI_eq0 => _ /eqP=> -> _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite modGI0; case: (boolP (x1 == 0)) => // x1Nz.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: m {Hrec} =>[|m]; rewrite /= mod0GI eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP => Epq Sm Sn Sq //; rewrite ?Epq //.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "case: (eqVneq y1 0) => [->|y1Nz].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: n m {Sm Sn Hrec} => [|m] [|n] //=; rewrite mod0GI eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: Hrec; last by rewrite ltn_modGI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (leq_trans _ Sm) // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -ltnS (leq_trans _ Sn) // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGIE x y : gcdGI x y = if ('N x < 'N y)%N then gcdGI (y %% x) x else gcdGI (x %% y) y.",
            "VernacStartTheoremProof",
            "2b2daa5e06d20525a97f554f55546bc0d3d03fb1"
        ],
        [
            "case: (eqVneq x 0) => [-> | xNz].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mod0GI modGI0 gcd0GI gcdGI0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq y 0) => [-> | yNz].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mod0GI modGI0 gcd0GI gcdGI0 if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /gcdGI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ltnP; rewrite (negPf xNz, negPf yNz) //=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move=> ltxy; rewrite ltn_modGI (negPf xNz) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite -(ltn_predK ltxy) /=; case: eqP => [->|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: ('N x) => [|[|s]]; rewrite /= modGI0 (negPf xNz) // mod0GI eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> yxNz; rewrite (negPf xNz).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: gcdGI_recE => //; last by rewrite ltn_modGI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (ltn_predK ltxy) (leq_trans _ ltxy) ?leqW // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnW // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> leyx; rewrite ltn_modGI (negPf yNz) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have x_gt0: ('N x > 0)%N by rewrite normGI_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -(prednK x_gt0) /=; case: eqP => [->|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by case: ('N y)%N => [|[|s]]; rewrite /= modGI0 (negPf yNz) // mod0GI eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=> xyNz; rewrite (negPf yNz).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "apply: gcdGI_recE => //; last by rewrite ltn_modGI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -ltnS (prednK x_gt0) (leq_trans _ leyx) // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ltnW // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd1GIE y : gcdGI 1 y = if ('N y == 1)%N then y else 1.",
            "VernacStartTheoremProof",
            "724cb346183cd1c0b99f7ca965dc834d66e74746"
        ],
        [
            "rewrite gcdGIE normGI1; case: leqP => [|H].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "rewrite leq_eqVlt; case: eqP => [/eqP|/= _].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite -dvdGI1 => /eqP->; rewrite gcd0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnS leqn0 normGI_eq0 => /eqP->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite modGI0 gcdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite modGI1 gcd0GI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: H; rewrite ltnNge leq_eqVlt negb_or => /andP[/negPf->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd1GI_norm y : 'N(gcdGI 1 y) = 1%N.",
            "VernacStartTheoremProof",
            "497c59f2ba5e67e5482ae1b250eea09a706b7d29"
        ],
        [
            "by rewrite gcd1GIE; case: eqP; rewrite ?normGI1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGI1 y : gcdGI y 1 = 1.",
            "VernacStartTheoremProof",
            "4e0d05780f7ecceac5f576a98ffcac802b6b8f98"
        ],
        [
            "rewrite gcdGIE normGI1; case: leqP => [_|].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite modGI1 gcd0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnS leqn0 normGI_eq0 => /eqP->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite modGI0 gcdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGIxx : idempotent gcdGI.",
            "VernacStartTheoremProof",
            "8d8cfb648377e277294105beb268578b0a80e643"
        ],
        [
            "by move=> x; rewrite gcdGIE ltnn modGIxx gcd0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_mod d x y : d %| x -> (d %| y) = (d %| y %% x).",
            "VernacStartTheoremProof",
            "08464f0ec55f90a9aed52d779ad1e2d790c1659d"
        ],
        [
            "case: (altP (x =P 0)) => [-> | nZx]; first by rewrite modGI0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (altP (d =P 0)) => [-> | nZd /dvdGIP[q1 ->]].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite dvd0GI => /eqP->; rewrite modGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/dvdGIP/dvdGIP=> [] [q2 Hq2].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite /modGI Hq2 !mulrA -mulrBl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by set u := _ - _; exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (divGI_eq y (q1 * d)) Hq2 mulrA -mulrDl.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by set u := _ + _; exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_gcdlr x y : (gcdGI x y %| x) && (gcdGI x y %| y).",
            "VernacStartTheoremProof",
            "0c9709c9f0f2f71e362047ab400e3c6fe7acb79e"
        ],
        [
            "elim: {x y}minn {-2}x {-2}y (leqnn (minn ('N y) ('N x))) => [x y|r IH x y].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite geq_min !leqn0 !normGI_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/pred2P=>->; rewrite (gcd0GI, gcdGI0) dvdGIxx ?andbT dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq x 0) => [-> _|nZx].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite gcd0GI dvdGIxx andbT dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq y 0) => [->|nZy].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite gcdGI0 dvdGIxx /= dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite gcdGIE minnC /minn; case: ltnP => [lt_xy | le_xy] le_yr.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "suffices /IH/andP[E1 E2]: (minn ('N x) ('N (y %% x)%GI) <= r)%N.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite E2 (dvdGI_mod _ E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_yr) ?ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suffices /IH/andP[E1 E2] : (minn ('N y) ('N (x %% y)%GI) <= r)%N.",
            "VernacExtend",
            "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
        ],
        [
            "by rewrite E2 andbT (dvdGI_mod _ E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_yr) ?ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_gcdl x y : gcdGI x y %| x.",
            "VernacStartTheoremProof",
            "0f7e3063f80e05ea81d0a4ad80627ac05f12e781"
        ],
        [
            "by case/andP: (dvdGI_gcdlr x y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_gcdr x y : gcdGI x y %| y.",
            "VernacStartTheoremProof",
            "389ec8f490c4dfdd48bfb412391ccb680902adc7"
        ],
        [
            "by case/andP: (dvdGI_gcdlr x y).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGI_eq0 x y : (gcdGI x y == 0) = ((x == 0) && (y == 0)).",
            "VernacStartTheoremProof",
            "951b8015a1364f09d3e3247aba63d74ae325317b"
        ],
        [
            "have [/eqP->|/eqP nZx] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite gcd0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have := dvdGI_gcdl x y.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case:eqP => //->; rewrite dvd0GI => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_leq x y : y != 0 -> x %| y -> ('N x <= 'N y)%N.",
            "VernacStartTheoremProof",
            "cc28dafcfdef976b609671af11d03a6793c52eee"
        ],
        [
            "move=> nZy /dvdGIP[q qE]; have := nZy.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite qE -normGI_eq0 normGIM muln_eq0 negb_or => /andP[H1 H2].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -[X in (X <= _)%N] mul1n leq_pmul2r lt0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_gcdGIl (x y : GI) : x != 0 -> ('N (gcdGI x y) <= 'N x)%N.",
            "VernacStartTheoremProof",
            "e14044c1c202e267d205416915538ce07ffd70bc"
        ],
        [
            "by move=> nZx; apply: dvdGI_leq => //; exact: dvdGI_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leq_gcdGIr (x y : GI) : y != 0 -> ('N (gcdGI x y) <= 'N y)%N.",
            "VernacStartTheoremProof",
            "ac13907285a96f2a3cfc92270ff9828fa4d6b86f"
        ],
        [
            "by move=> nZy; move: (dvdGI_gcdr x y); apply: dvdGI_leq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_trans : transitive dvdGI.",
            "VernacStartTheoremProof",
            "95bf2139fa99dc569d4463b82ea18441b30ef0ca"
        ],
        [
            "move=> x y z /dvdGIP[qx -> /dvdGIP[qy ->]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply/dvdGIP; exists (qy * qx); rewrite mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_gcd x y z : x %| gcdGI y z = (x %| y) && (x %| z).",
            "VernacStartTheoremProof",
            "155b386364e261ece2892f23ad143ffa2cb8d44c"
        ],
        [
            "apply/idP/andP=> [dv_xyz | [dv_xy dv_xz]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite ?(dvdGI_trans dv_xyz) ?dvdGI_gcdl ?dvdGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (leqnn (minn ('N z) ('N y))) dv_xy dv_xz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: {y z}minn {-2}y {-2}z => [|r IH] y z.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "rewrite geq_min !leqn0 !normGI_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case/pred2P=> ->; rewrite ?(gcd0GI, gcdGI0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (eqVneq y 0) => [-> _|nZy]; first by rewrite gcd0GI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (eqVneq z 0) => [->|nZz]; first by rewrite gcdGI0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite gcdGIE minnC /minn; case: ltnP => Czy le_r dv_y dv_z.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "apply: IH => //; last by rewrite -(dvdGI_mod _ dv_y).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: IH => //; last by rewrite -(dvdGI_mod _ dv_z).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_mul2r (p d x : GI) : p != 0 -> (d * p %| x * p) = (d %| x).",
            "VernacStartTheoremProof",
            "ff1be2a27806b5f57d863697681e3d579f30017f"
        ],
        [
            "move=> nZp; apply/dvdGIP/dvdGIP=> [] [q Hq]; exists q.",
            "VernacExtend",
            "65dda251a6498009b58f054397e19016da95b086"
        ],
        [
            "by apply: (mulIf nZp); rewrite -mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Hq mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_mul2l (p d x : GI) : p != 0 -> (p * d %| p * x) = (d %| x).",
            "VernacStartTheoremProof",
            "7cc467c8db24045f0b6e73e1fc0e8940a7125032"
        ],
        [
            "by rewrite ![p *_]mulrC; exact: dvdGI_mul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lcmGI x y := (x * y) %/ gcdGI x y.",
            "VernacDefinition",
            "6fea9d102be07079568218382b28a720832480c5"
        ],
        [
            "Lemma mulGI_lcm_gcd x y : lcmGI x y * gcdGI x y = x * y.",
            "VernacStartTheoremProof",
            "d08160f350fbd3a8b86d374da352cbed0d19043b"
        ],
        [
            "by apply/eqP; rewrite divGIK // dvdGI_mull // dvdGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm0GI y : lcmGI 0 y = 0.",
            "VernacStartTheoremProof",
            "b9f344df73ce2a6d7c3da7be963cb4a6f52691c3"
        ],
        [
            "by rewrite /lcmGI mul0r div0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmGI0 x : lcmGI x 0 = 0.",
            "VernacStartTheoremProof",
            "1879cc04bec35834f48631db551d8a78aefc56f4"
        ],
        [
            "by rewrite /lcmGI mulr0 div0GI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcmGI_eq0 x y : (lcmGI x y == 0) = ((x == 0) || (y == 0)).",
            "VernacStartTheoremProof",
            "f38c88d5145db4a7d237654888524fbe3823fb2c"
        ],
        [
            "have [/eqP->|nZx] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite lcm0GI eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP->|nZy] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite lcmGI0 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /lcmGI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /dvdGIP[q Hq]: gcdGI x y %| x * y by rewrite dvdGI_mulr // dvdGI_gcdl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Hq divGIKl ?gcdGI_eq0 ?negb_and ?nZx //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: eqP Hq => // -> /eqP.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite mul0r mulf_eq0 (negPf nZx) (negPf nZy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqGI x y := (dvdGI x y) && (dvdGI y x).",
            "VernacDefinition",
            "abc117d5faf29c42c0b2df2af41e6d2712a8fbe5"
        ],
        [
            "Lemma eqGIxx : reflexive eqGI.",
            "VernacStartTheoremProof",
            "d95606c19086651f92a962ce95e8cb38f72df9be"
        ],
        [
            "by move=> x; rewrite /eqGI dvdGIxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_sym : symmetric eqGI.",
            "VernacStartTheoremProof",
            "0749c9ca7c70cb008326192eb6f9c0cfb3c4f8da"
        ],
        [
            "by move=> x y; rewrite /eqGI andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_trans : transitive eqGI.",
            "VernacStartTheoremProof",
            "5e95b5ac55a6f1c18a5ad03c462949b2a98aa497"
        ],
        [
            "move=> x y z /andP[U1 V1] /andP[U2 V2].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /eqGI (dvdGI_trans U1) // (dvdGI_trans V2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Infix \"%=\" := eqGI : GI_scope.",
            "VernacInfix",
            "a7cab5421440e44c3e2b4cb13af2988879151813"
        ],
        [
            "Lemma eqGI0 (x : GI) : (x %= 0) = (x == 0).",
            "VernacStartTheoremProof",
            "59472acbffe802bcfe2adc21c6f41cb20cbd1516"
        ],
        [
            "apply/andP/eqP=>[[]|->]; last by rewrite dvdGIxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite dvd0GI => _ /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_eq0 x y : x %= y -> (x == 0) = (y == 0).",
            "VernacStartTheoremProof",
            "aa26e89b1252b836e5259c9f5ed1e718e0990189"
        ],
        [
            "have [/eqP->|] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqGI_sym eqGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP->|//] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqGI0 => /negP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_norm x y : x %= y -> 'N x = 'N y.",
            "VernacStartTheoremProof",
            "fc0740c2045a0957cf183af57d51c7aaf2caa929"
        ],
        [
            "have [/eqP->|nZx] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqGI_sym eqGI0 => /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP->|nZy] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite eqGI0 => /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/andP => /(dvdGI_leq nZy) H1 /(dvdGI_leq nZx) H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/eqP; rewrite eqn_leq H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_eq_norm x y : 'N x = 'N y -> x %| y -> x %= y.",
            "VernacStartTheoremProof",
            "a414a5e4ae65ca906aeef27ba0ebb4aee40ba14c"
        ],
        [
            "have [/eqP->|nZx] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite dvd0GI => _ /eqP->; exact: eqGIxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> xNy xDy; rewrite /eqGI xDy /=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/dvdGIP: xDy => q Hq.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "apply/dvdGIP; exists q^-1.",
            "VernacExtend",
            "2f47378aa7a4fe5fce43f56c11c04a7eab874245"
        ],
        [
            "rewrite Hq mulrA mulVr ?mul1r // -normGI_unit.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /eqn_pmul2r<- : (0 < 'N x)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: nZx; rewrite -normGI_eq0; case: ('N x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -normGIM -Hq xNy mul1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_nat m n : m%:R %= n%:R -> m = n.",
            "VernacStartTheoremProof",
            "22cbc5fee92e2217e440efb0e1c9fb95ab0450c8"
        ],
        [
            "move=> /andP[H1 H2]; apply/eqP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -(eqn_exp2r _ _ (isT : 0 < 2)%N) -!normGI_nat eqn_dvd !dvdGI_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjGI_gcd x y : conjGI (gcdGI x y) %= gcdGI (conjGI x) (conjGI y).",
            "VernacStartTheoremProof",
            "302ef16e46b2925e2c38ed276460423f5dc8e5f9"
        ],
        [
            "rewrite /eqGI dvdGI_gcd !conjGI_dvd //= ?(dvdGI_gcdr,dvdGI_gcdl) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[X in X %|_]conjGIK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite conjGI_dvd // dvdGI_gcd -{2}[x]conjGIK -{3}[y]conjGIK !conjGI_dvd // ?(dvdGI_gcdr,dvdGI_gcdl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conjGIM_norm x : x * conjGI x = ('N x)%:R.",
            "VernacStartTheoremProof",
            "ac34d9b4053230eb996a5621f3bf08378346dba4"
        ],
        [
            "by apply/val_eqP; rewrite /= -normCK -gaussNormE algGI_nat truncCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGIP (x y : GI) : reflect (exists2 u, normGI u = 1%N & x = u * y) (x %= y).",
            "VernacStartTheoremProof",
            "2396a4e361debe2fd1815ee08866753b6d308c5d"
        ],
        [
            "apply: (iffP andP)=> [[xDy yDx]|[u Nu->]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "split; apply/dvdGIP; last by exists u.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists (conjGI u); rewrite mulrA [conjGI _ * _]mulrC.",
            "VernacExtend",
            "88af2f290932010303ae4d15e6a04d10d54edd99"
        ],
        [
            "by rewrite conjGIM_norm Nu mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: 'N x = 'N y by rewrite (@eqGI_norm x y) ///eqGI xDy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/dvdGIP: yDx => u -> /eqP.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite normGIM -{2}['N y]mul1n eqn_mul2r normGI_eq0 => /orP[/eqP->|/eqP Nu].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by exists 1; rewrite ?mulr0 // normGI1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists u.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGIC x y : gcdGI x y %= gcdGI y x.",
            "VernacStartTheoremProof",
            "874faf3a7fd5214c8347bdc87e93f6722e9f657b"
        ],
        [
            "by rewrite /eqGI !(dvdGI_gcd, dvdGI_gcdl, dvdGI_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd1GI y : gcdGI 1 y %= 1.",
            "VernacStartTheoremProof",
            "455168ee0642131266abc062032b45137d7fb782"
        ],
        [
            "rewrite /eqGI dvd1GI dvdGI1 gcd1GIE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (@eqP _ ('N y) 1%N) => [->|]; rewrite ?normGI1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_dvdr x y1 y2 : y1 %= y2 -> (x %| y1) = (x %| y2).",
            "VernacStartTheoremProof",
            "03119aacb5d219892c2534d6a36effd20464df43"
        ],
        [
            "move=> /andP[y1Dy2 y2Dy1]; apply/idP/idP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move=> /dvdGI_trans /(_ y1Dy2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> /dvdGI_trans /(_ y2Dy1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_dvdl y x1 x2 : x1 %= x2 -> (x1 %| y) = (x2 %| y).",
            "VernacStartTheoremProof",
            "701497045580ffb9bd389f957bd83635521799c2"
        ],
        [
            "move=> /andP[x1Dx2 x2Dx1]; apply/idP/idP.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move=> /(dvdGI_trans x2Dx1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=> /(dvdGI_trans x1Dx2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_gcdr x y1 y2 : y1 %= y2 -> gcdGI x y1 %= gcdGI x y2.",
            "VernacStartTheoremProof",
            "af4dc8b1d0a18416e265dea26c13e376ed2885b1"
        ],
        [
            "move=> y1Ey2; rewrite /eqGI !(dvdGI_gcd, dvdGI_gcdl, dvdGI_gcdr).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(eqGI_dvdr _ y1Ey2) dvdGI_gcdr (eqGI_dvdr _ y1Ey2) dvdGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_gcdl y x1 x2 : x1 %= x2 -> gcdGI x1 y %= gcdGI x2 y.",
            "VernacStartTheoremProof",
            "c31c36909580798a3dd24897198aa4604a326546"
        ],
        [
            "move=> x1Ex2; apply: eqGI_trans (gcdGIC _ _).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: eqGI_trans (gcdGIC _ _) _; exact: eqGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_mul2r (r p q : GI) : r != 0 -> (p * r %= q * r) = (p %= q).",
            "VernacStartTheoremProof",
            "dc57fee4b065869fa982ad223ee02b8fd674e0f2"
        ],
        [
            "by move => nZr; rewrite /eqGI !dvdGI_mul2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_mul2l (r p q : GI): r != 0 -> (r * p %= r * q) = (p %= q).",
            "VernacStartTheoremProof",
            "255f67261acceee2db15a67f04f2e381a902d24a"
        ],
        [
            "by move => nZr; rewrite /eqGI !dvdGI_mul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_mul (p1 p2 q1 q2 : GI) : p1 %= q1 -> p2 %= q2 -> p1 * p2 %= q1 * q2.",
            "VernacStartTheoremProof",
            "28060cf8a602bd84653a2e3c2a31e7d2c4f4de80"
        ],
        [
            "move=> /andP[E1 E2] /andP[F1 F2]; apply/andP; split.",
            "VernacExtend",
            "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
        ],
        [
            "have /dvdGIP[u1->] := E1; have /dvdGIP[v1->] := F1.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "by apply/dvdGIP; exists (u1 * v1); rewrite mulrAC [p1 * _]mulrC !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /dvdGIP[u1->] := E2; have /dvdGIP[v1->] := F2.",
            "VernacExtend",
            "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
        ],
        [
            "by apply/dvdGIP; exists (u1 * v1); rewrite mulrAC [q1 * _]mulrC !mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint egcdGI_rec n (x y : GI) := if y == 0 then (1, 0) else if n is n1.+1 then let: (u, v) := egcdGI_rec n1 y (modGI x y) in (v, u - v * (x %/ y)%GI) else (1, 0).",
            "VernacFixpoint",
            "dbd1a6b1d049b81542865393299795313eb07647"
        ],
        [
            "Definition egcdGI (x y : GI) := if ('N y <= 'N x)%N then egcdGI_rec ('N x) x y else let e := egcdGI_rec ('N y) y x in (e.2, e.1).",
            "VernacDefinition",
            "dc9f6561b6e0cb7443ad08a72aca86ee0ef08486"
        ],
        [
            "Lemma egcdGI_rec0r n x : egcdGI_rec n x 0 = (1, 0).",
            "VernacStartTheoremProof",
            "1d19bdd29189917fe53a6fd2aeafa6dc19db657e"
        ],
        [
            "by case: n => /= [|n]; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdGI0 x : egcdGI x 0 = (1, 0).",
            "VernacStartTheoremProof",
            "6c0402950ebfbcef29dc6b49a3b814a02140ba11"
        ],
        [
            "by rewrite /egcdGI normGI0 egcdGI_rec0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcd0GI y : y != 0 -> egcdGI 0 y = (0, 1).",
            "VernacStartTheoremProof",
            "d445a7429b574c8d152473dbaad445dad3401187"
        ],
        [
            "by rewrite /egcdGI normGI0 -normGI_eq0 leqn0 egcdGI_rec0r => /negPf->/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdGI_recP : forall n x y, y != 0 -> ('N y <= n)%N -> ('N y <= 'N x)%N -> forall (e := egcdGI_rec n x y), gcdGI_rec n x y = e.1 * x + e.2 * y.",
            "VernacStartTheoremProof",
            "1da980cb61961f09c632d6b42e598f7f00dd7208"
        ],
        [
            "elim => [x y nZy|n /= IH x y nZy NyLn NyLNx].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by rewrite leqn0 normGI_eq0 (negPf nZy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have NxP : (0 < 'N x)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: leq_trans NyLNx; rewrite ltnNge leqn0 normGI_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (negPf nZy).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [r0|nZr0] := eqVneq (x %% y) 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite r0 egcdGI_rec0r !mul0r subr0 add0r mul1r eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have NxyLn : ('N(x %% y)%GI <= n)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -ltnS (leq_trans _ NyLn) // ltn_modGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have NxyLNy : ('N (x %% y)%GI <= 'N y)%N by rewrite ltnW // ltn_modGI.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have := IH _ _ nZr0 NxyLn NxyLNy.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (egcdGI_rec _ _) => u v ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (negPf nZr0) /= /modGI mulrBr mulrBl addrCA mulrA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma egcdGIP (x y : GI) : gcdGI x y = (egcdGI x y).1 * x + (egcdGI x y).2 * y.",
            "VernacStartTheoremProof",
            "345de2108663907932a617ed86eb83966d9b9c19"
        ],
        [
            "have [->|nZy] := eqVneq y 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite egcdGI0 gcdGI0 mul1r mulr0 addr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [->|nZx] := eqVneq x 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mulr0 add0r gcd0GI egcd0GI // mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /egcdGI /gcdGI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: leqP => [H|H] /=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite (negPf nZy) addrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: egcdGI_recP; rewrite // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (negPf nZx).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: egcdGI_recP => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulGI_gcdr x y z : x * gcdGI y z %= gcdGI (x * y) (x * z).",
            "VernacStartTheoremProof",
            "ca9625f1e05784ec0b2a9d73cd424b3478d79df3"
        ],
        [
            "have [/eqP->|nZx] := boolP (x == 0); first by rewrite !mul0r gcd0GI eqGIxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /eqGI dvdGI_gcd !dvdGI_mul2l // dvdGI_gcdl dvdGI_gcdr /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [X in _%|_ * X]egcdGIP mulrDr dvdGI_add // mulrCA dvdGI_mull //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite dvdGI_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite dvdGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mulGI_gcdl x y z : gcdGI y z * x %= gcdGI (y * x) (z * x).",
            "VernacStartTheoremProof",
            "f5ec3e4e84ea04c6b3308794c568c2827694b694"
        ],
        [
            "by rewrite ![_ * x]mulrC mulGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_lcm d1 d2 x : lcmGI d1 d2 %| x = (d1 %| x) && (d2 %| x).",
            "VernacStartTheoremProof",
            "15762b25c870ef0e1a898a950835a708b0e34f57"
        ],
        [
            "have [/eqP->|nZd1] := boolP (d1 == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite lcm0GI dvd0GI; case: eqP => //->; rewrite dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP->|nZd2] := boolP (d2 == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite lcmGI0 dvd0GI andbC; case: eqP=> //->; rewrite dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /dvdGI_mul2r<- : gcdGI d1 d2 != 0 by rewrite gcdGI_eq0 negb_and nZd1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulGI_lcm_gcd (eqGI_dvdr _ (mulGI_gcdr _ _ _)) dvdGI_gcd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite {1}mulrC !dvdGI_mul2r // andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section OrdinalGI.",
            "VernacBeginSection",
            "0f615a91606a1960703c055a442e673e4c7e07d4"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Inductive ordinalGI : predArgType := OrdinalGI x of ('N x < n)%N.",
            "VernacInductive",
            "3276d567563b617221a6106524f1966fbf329968"
        ],
        [
            "Coercion GI_of_ord i := let: OrdinalGI m _ := i in m.",
            "VernacDefinition",
            "798a3c478920c0c52ca7387f8db7f93559ee5beb"
        ],
        [
            "Canonical ordinalGI_subType := [subType for GI_of_ord].",
            "VernacDefinition",
            "48983106989a807d0e5e40bfbba9f8740b69a332"
        ],
        [
            "Definition ordinalGI_eqMixin := Eval hnf in [eqMixin of ordinalGI by <:].",
            "VernacDefinition",
            "e090efd2fc1f1beb956e490a77b02cafa2fd8d97"
        ],
        [
            "Canonical ordinalGI_eqType := Eval hnf in EqType ordinalGI ordinalGI_eqMixin.",
            "VernacDefinition",
            "0f427b2259eb91d6c35385eeca527c6aa39d37bf"
        ],
        [
            "Definition ordinalGI_choiceMixin := [choiceMixin of ordinalGI by <:].",
            "VernacDefinition",
            "763351e372f40dc88237a858333c5737201aef46"
        ],
        [
            "Canonical ordinalGI_choiceType := Eval hnf in ChoiceType ordinalGI ordinalGI_choiceMixin.",
            "VernacDefinition",
            "383ca83a85bb191e3e447803a17fba75a35a0940"
        ],
        [
            "Definition ordinalGI_countMixin := [countMixin of ordinalGI by <:].",
            "VernacDefinition",
            "9d7bc40fd8661d2d41a887635ed6b37cb8d70978"
        ],
        [
            "Canonical ordinalGI_countType := Eval hnf in CountType ordinalGI ordinalGI_countMixin.",
            "VernacDefinition",
            "c81882bbed6aca4b9b64a418a97c3bd3d1a6f903"
        ],
        [
            "Canonical ordinalGI_subCountType := [subCountType of ordinalGI].",
            "VernacDefinition",
            "b1fd5e0feec0fdea486082c66126ed06835885d8"
        ],
        [
            "Lemma ltn_ordGI (i : ordinalGI) : ('N i < n)%N.",
            "VernacStartTheoremProof",
            "21f3db13313887b9dd630361529a4a8c4335b503"
        ],
        [
            "exact: valP i.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ordGI_inj : injective GI_of_ord.",
            "VernacStartTheoremProof",
            "86cbefd802f4db8996ac4518e0923b3d3429ed59"
        ],
        [
            "exact: val_inj.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ordGI_enum : seq ordinalGI := pmap insub [seq (let: (n1, n2) := i in (((nat_of_ord n1))%:R - n%:R) + iGI * ((nat_of_ord n2)%:R - n%:R)) | i <- (enum [finType of ('I_n.*2 * 'I_n.*2)%type])].",
            "VernacDefinition",
            "f89fe11729f50dcad08d4656fa8767f55ed0c8ae"
        ],
        [
            "Lemma ordGI_enum_uniq : uniq ordGI_enum.",
            "VernacStartTheoremProof",
            "e89e268c467f5e461146ef3ab53386d842e29799"
        ],
        [
            "rewrite pmap_sub_uniq // map_inj_in_uniq ?enum_uniq //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move=> /= [x1 x2] [y1 y2] _ _ /val_eqP /eqP /= H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "congr (_ , _); apply/eqP.",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "have /eqP := congr1 (fun x => Re x) H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !Re_rect ?rpredB ?Creal_Cnat ?algGI_nat //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite - subr_eq0 opprB addrA subrK subr_eq0 eqC_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /eqP := congr1 (fun x => Im x) H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite !Im_rect ?rpredB ?Creal_Cnat ?algGI_nat //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite - subr_eq0 opprB addrA subrK subr_eq0 eqC_nat.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact int_norm_nat x y m : x \\in Cint -> y \\in Cint -> `|x| ^+ 2 + `|y| ^+ 2 < m%:R -> (x + m%:R \\in Cnat) && (x + m%:R < m.*2%:R).",
            "VernacStartTheoremProof",
            "738ea7ae685cd3c38982576790aa2ca0a6c7fd8d"
        ],
        [
            "move=> xCint yCint xyLem.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite CnatEint rpredD // ?Cint_Cnat //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have : `|x| ^+ 2 < (Posz m)%:~R ^+ 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: ltr_le_trans (_ : m%:R <= _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: ler_lt_trans xyLem.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite ler_addl -realEsqr Creal_Cnat // Cnat_norm_Cint.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -natrX ler_nat.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (m) => // m1; rewrite (leq_pexp2l _ (isT : (0 < 2)%N)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}(floorCK xCint) -intr_norm -!rmorphX /= ltr_int.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "pose nD := [numDomainType of algC].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "case: m{xyLem} => [|m] //.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -subr_gt0 subr_sqr pmulr_lgt0; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: ltr_le_trans (_ : Posz m.+1 + 0 <= _) => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: ler_add.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite subr_gt0 lter_norml -!(ltr_int nD) floorCK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -subr_gt0 rmorphN opprK => /andP[/ltrW].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -[x < _](ltr_add2r m.+1%:R) -natrD addnn => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_ordGI_enum x : x \\in ordGI_enum.",
            "VernacStartTheoremProof",
            "b7235e2deb91ca15a750ddcdb5074a8f5751db85"
        ],
        [
            "rewrite mem_pmap.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/mapP; exists (GI_of_ord x); last by rewrite valK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/mapP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "pose xr := truncC ('Re (algGI (GI_of_ord x)) + n%:R).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose yr := truncC ('Im (algGI (GI_of_ord x)) + n%:R).",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "pose nD := [numDomainType of algC].",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have := ltn_ordGI x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite normGIE -(ltr_nat nD) natrD !natrX !truncCK ?Cnat_norm_Cint //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move => HH.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have /andP[Hrx1 Lx1] := int_norm_nat (GIRe _) (GIIm _) HH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have F1 : (truncC ('Re (val (GI_of_ord x)) + n%:R) < n.*2)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(ltr_nat nD) truncCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite addrC in HH.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /andP[Hrx2 Lx2] := int_norm_nat (GIIm _) (GIRe _) HH.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have F2 : (truncC ('Im (val (GI_of_ord x)) + n%:R) < n.*2)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(ltr_nat nD) truncCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists (Ordinal F1, Ordinal F2); rewrite ?mem_enum //=.",
            "VernacExtend",
            "b86187367a846b5b52837ee5c3db78e65d4746aa"
        ],
        [
            "apply/val_eqP=> /=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite !algGI_nat !truncCK // !addrK -algCrect.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ordinalGI_finMixin := Eval hnf in UniqFinMixin ordGI_enum_uniq mem_ordGI_enum.",
            "VernacDefinition",
            "8f9b7ec9d7102ddd2b9df6ce177b0b3a918cf5d0"
        ],
        [
            "Canonical ordinalGI_finType := Eval hnf in FinType ordinalGI ordinalGI_finMixin.",
            "VernacDefinition",
            "598abd46fe1c7c081ab45c485c76c4177512de31"
        ],
        [
            "Canonical ordinalGI_subFinType := Eval hnf in [subFinType of ordinalGI].",
            "VernacDefinition",
            "90ba67175816556afa9647506e7aa9d84a74e02f"
        ],
        [
            "End OrdinalGI.",
            "VernacEndSegment",
            "a3b80901acf4efe9f1e00a134b4f0c7039e69493"
        ],
        [
            "Definition primeGI (x : GI) := (1 < 'N x)%N && [forall y : ordinalGI ('N x), (y %| x) ==> ('N y == 1%N)].",
            "VernacDefinition",
            "ae08be95e419ae4d6df15bd5f5d95869b144b3f5"
        ],
        [
            "Lemma nprimeGI0 : ~ primeGI 0.",
            "VernacStartTheoremProof",
            "c60208581f3da604019c7d9bbe4957bffed1238f"
        ],
        [
            "by case/andP; rewrite normGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primeGIP x : reflect ((1 < 'N x)%N /\\ forall y, ('N y < 'N x)%N -> (y %| x) -> 'N y = 1%N) (primeGI x).",
            "VernacStartTheoremProof",
            "6d94dd723aaf02b2d0e305558afb1ace79feb86a"
        ],
        [
            "apply: (iffP andP) => [[H1 /forallP H2]|[H1 H2]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split => // y yLx yDx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by have /implyP/(_ yDx)/eqP := H2 (OrdinalGI yLx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split => //; apply/forallP => y; apply/implyP => yDx; apply/eqP.",
            "VernacExtend",
            "ee7bd14546fd98182be12b780fbd666973d748ce"
        ],
        [
            "by apply: H2 => //; apply: ltn_ordGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primeGIPn x : reflect (('N x < 2)%N \\/ exists2 y, (1 < 'N y < 'N x)%N & (y %| x)) (~~ primeGI x).",
            "VernacStartTheoremProof",
            "72f0fb2a7aa2266a3fb553fa4f32fa3831a08cee"
        ],
        [
            "apply: (iffP idP)=> [|[H|[y /andP[H1 H2] H3]]]; last 2 first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply/negP=> /primeGIP[]; rewrite leqNgt H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/negP=> /primeGIP[H4 /(_ y H2 H3) H5].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by have := H1; rewrite H5.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: leqP => [H|H _]; last by left.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (boolP [exists z : ordinalGI ('N x), (1 < 'N z)%N && (z %| x)]).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move=> /existsP[z /andP[H1z H2z]]; right; exists z => //.",
            "VernacExtend",
            "31ddbc8a057365f5a2010361d01cdab9beb9deb6"
        ],
        [
            "by rewrite H1z ltn_ordGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite negb_exists => /forallP HH /negP[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite /primeGI H; apply/forallP => z.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have := HH z; case: (boolP (_ %| _)) => //.",
            "VernacExtend",
            "c6d2532ed4a224baf57de7930305ff767fdbd834"
        ],
        [
            "rewrite andbT -leqNgt leq_eqVlt ltnS leqn0 normGI_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [/eqP->|] := boolP (GI_of_ord z == 0); last by rewrite orbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite dvd0GI => /eqP HH1; have := H; rewrite HH1 normGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition primesGI (x : GI) := [seq i <- [seq GI_of_ord i| i : ordinalGI ('N x).+1] | primeGI i && (i %| x)].",
            "VernacDefinition",
            "6caac0ce2fd1fe5958d44be5f26f873e140f4f60"
        ],
        [
            "Lemma mem_primesGI (p x : GI) : (p \\in primesGI x) = [&& primeGI p, x != 0 & p %| x].",
            "VernacStartTheoremProof",
            "1ba7da211ce384f84c41dbd9a6c99fe9b11e1d3e"
        ],
        [
            "apply/idP/idP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite mem_filter => /andP[/andP[H1 H2]] /mapP[[y yL _ /= HH]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite H1 H2 andbT /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /primeGIP[] := H1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite HH => HH1 _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -normGI_eq0 -leqn0 -ltnNge -ltnS (leq_trans HH1) // ltnW.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> /andP[H1 /andP[H2 H3]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have HH : ('N p < ('N x).+1)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ltnS dvdGI_leq // -normGI_eq0; case: ('N _) H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite mem_filter H1 H3; apply/mapP; exists (OrdinalGI HH) => //.",
            "VernacExtend",
            "0288f65064e83af8559a49f90a2eba4421e03fd4"
        ],
        [
            "by rewrite mem_enum.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqGI_prime x y : x %= y -> primeGI x -> primeGI y.",
            "VernacStartTheoremProof",
            "808a456eaff4a63ec25c56969c9058871f953fb4"
        ],
        [
            "move=> xEy /primeGIP[H1 H2]; apply/primeGIP; split=> [|y1 Hy1 H1y1].",
            "VernacExtend",
            "b7d55d5cc9e609b184db748f6780e12224901e48"
        ],
        [
            "by rewrite -(eqGI_norm xEy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: H2; rewrite ?(eqGI_norm xEy, eqGI_dvdr _ xEy).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pdivGI x : GI := head 1 (primesGI x).",
            "VernacDefinition",
            "622f26466e59732d2db6a728944de057ed9e147d"
        ],
        [
            "Lemma pdivGI_prime x : (1 < 'N x)%N -> primeGI (pdivGI x).",
            "VernacStartTheoremProof",
            "ee180cdbd5ffba532b7378dad75097c6855839f7"
        ],
        [
            "move=> Nx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [y Py yDz] : exists2 y, primeGI y & (y %| x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: {x}S {-2}x (ltnSn ('N x)) Nx => // n IH x NxL ONx.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "have [Px|/primeGIPn] := boolP (primeGI x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by exists x; rewrite ?dvdGIxx //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite ltnNge ONx => [] [//|[y /andP[H1y H2y] H3y]].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: (IH _ _ H1y) => [|z Pz zDy]; first by apply: (leq_trans H2y _).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists z; rewrite ?(dvdGI_trans zDy) //.",
            "VernacExtend",
            "3f4da3fea53724fceb998284149567b1966b2df6"
        ],
        [
            "have yIp : y \\in primesGI x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mem_primesGI Py yDz -normGI_eq0; case: ('N _) Nx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff: pdivGI x \\in primesGI x by rewrite mem_primesGI => /andP[].",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite /pdivGI; case: primesGI yIp => //= a l _; rewrite in_cons eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdivGI_dvd x : pdivGI x %| x.",
            "VernacStartTheoremProof",
            "e435bebb4851e06237d3f468f82bbea53cd0a64e"
        ],
        [
            "have := sym_equal (mem_primesGI (pdivGI x) x).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /pdivGI; case: primesGI => [|a l]; first by rewrite dvd1GI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /= in_cons eqxx /= => /and3P[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdivGI_leq x : x != 0 -> ('N (pdivGI x) <= 'N x)%N.",
            "VernacStartTheoremProof",
            "913ab075ef52c9418af0457fe14619316edea415"
        ],
        [
            "by move=> /dvdGI_leq /(_ (pdivGI_dvd _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdivGI_neq0 x : pdivGI x != 0.",
            "VernacStartTheoremProof",
            "7f205b70bc3b83a19fd869b28fc03c74f332f7bd"
        ],
        [
            "apply/eqP=> H.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have := pdivGI_dvd x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite H dvd0GI => /eqP Zx.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have := fun x => mem_primesGI x 0; rewrite eqxx /=.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "have := H; rewrite Zx /pdivGI; case: primesGI => [/eqP/=| a l _ /(_ a)].",
            "VernacExtend",
            "3ce4f03148eef327ef1c0ea0b904dc833d71f154"
        ],
        [
            "by rewrite oner_eq0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite in_cons eqxx andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint logGI_rec p x n := if (p %| x) then if n is n1.+1 then (logGI_rec p (x %/ p) n1).+1 else 0%N else 0%N.",
            "VernacFixpoint",
            "bd59eee10f6b41857b9cc9ca305b7f68eb9fca62"
        ],
        [
            "Definition logGI p x := if primeGI p then logGI_rec p x ('N x) else 0%N.",
            "VernacDefinition",
            "908de0c57675f2151fc656a7598b1b897feb7c53"
        ],
        [
            "Lemma logGI_recE p x m1 m2 : primeGI p -> ('N x <= m1)%N -> ('N x <= m2)%N -> x != 0 -> logGI_rec p x m1 = logGI_rec p x m2.",
            "VernacStartTheoremProof",
            "ec3747914c331c85a9cd54befcda6fc7c3ae787e"
        ],
        [
            "move=> Pp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: m1 m2 x => [m2 x|m1 IH [|m2 /=] x].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite leqn0 normGI_eq0 => /eqP->; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite leqn0 normGI_eq0 => _ /eqP->; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> NxLm1 NxLm2 nZx.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [/dvdGIP[q Hq]|//] := boolP (_ %| _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nZp : p != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra nZx => /eqP HH; rewrite Hq HH mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nZq : q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra nZx => /eqP HH; rewrite Hq HH mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F : ('N (x %/ p)%GI < 'N x)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Hq divGIKl // normGIM -{1}['N q]muln1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltn_mul2l ltnNge leqn0 normGI_eq0 nZq; case/andP: Pp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (_.+1); apply: IH.",
            "VernacExtend",
            "385739dd8a4f73703d3828c61e1780a276bfaa31"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -ltnS (leq_trans F).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -ltnS (leq_trans F).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Hq divGIKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGIE p x : logGI p x = if [&& primeGI p, x != 0 & p %| x] then (logGI p (x %/ p)).+1 else 0%N.",
            "VernacStartTheoremProof",
            "15a9be4a47befb5287899992137d13b4c70593ad"
        ],
        [
            "rewrite /logGI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [Pp|//] := boolP (primeGI p).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -normGI_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case E : ('N x) => /= [|k].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/dvdGIP[q Hq]|//] := boolP (_ %| _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nZx : x != 0 by rewrite -normGI_eq0 E.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have nZp : p != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra nZx => /eqP HH; rewrite Hq HH mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nZq : q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra nZx => /eqP HH; rewrite Hq HH mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (_).+1.",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "apply: logGI_recE => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -ltnS -E Hq divGIKl // normGIM -{1}['N q]muln1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite ltn_mul2l ltnNge leqn0 normGI_eq0 nZq; case/andP: Pp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Hq divGIKl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGI_gt0 p x : (0 < logGI p x)%N = (p \\in primesGI x).",
            "VernacStartTheoremProof",
            "08224f8b3192a79f990ae5dd8601ab6623500024"
        ],
        [
            "by rewrite logGIE -mem_primesGI; case: (p \\in _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltn_log0 p x : ('N x < 'N p)%N -> logGI p x = 0%N.",
            "VernacStartTheoremProof",
            "6b2ce03d4ad64c061f9e416e6503f480fa8d6bcd"
        ],
        [
            "rewrite logGIE ltnNge.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [|nZx] := boolP (x == 0); first by rewrite andbF.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have [/(dvdGI_leq nZx)->|] /= := boolP (p %| x); last by rewrite andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGI0 p : logGI p 0 = 0%N.",
            "VernacStartTheoremProof",
            "4c8cffe77fdf383143b5eb719d1958ce7799120f"
        ],
        [
            "by rewrite /logGI normGI0 /= !if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGI1 p : logGI p 1 = 0%N.",
            "VernacStartTheoremProof",
            "881ffc439f3024e14ec6858d449eb58bf3e1613e"
        ],
        [
            "rewrite logGIE dvdGI1 /primeGI ltnNge leq_eqVlt negb_or.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ('N p == 1%N); rewrite ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactor_dvdGI p (n : nat) (x : GI) : primeGI p -> x != 0 -> (p ^+ n %| x) = (n <= logGI p x)%N.",
            "VernacStartTheoremProof",
            "a796c628180bf85ff0b1d4f72baec8de75f557f5"
        ],
        [
            "move=> Pp; elim: n x => [|n IHn] x nZx; first by rewrite dvd1GI.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite logGIE Pp nZx.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [/dvdGIP[q Hq]/=|nD] := boolP (p %| x); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply/dvdGIP=> [] [/= q qE].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by case/negP: nD; rewrite qE exprS mulrCA dvdGI_mulr // dvdGIxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nZp : p != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra nZx => /eqP HH; rewrite Hq HH mulr0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nZq : q != 0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra nZx => /eqP HH; rewrite Hq HH mul0r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite Hq exprSr dvdGI_mul2r // divGIKl // IHn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition coprimeGI (x y : GI) := 'N(gcdGI x y) == 1%N.",
            "VernacDefinition",
            "6e0f131acd1d4f9fcde0f163ba86bd9ca2e69ede"
        ],
        [
            "Lemma coprimeGI1 x : coprimeGI x 1.",
            "VernacStartTheoremProof",
            "e3f7bac0baab0dc85bcb2ee00290b6fb6228b0fa"
        ],
        [
            "by rewrite /coprimeGI gcdGI1 normGI1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprime1GI x : coprimeGI 1 x.",
            "VernacStartTheoremProof",
            "7dabbad2c03cff56dc05f616bace5222d3aa124f"
        ],
        [
            "rewrite /coprimeGI gcd1GIE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by have [//|] := boolP ('N x == 1%N); rewrite normGI1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGIE x y : coprimeGI x y = (gcdGI x y %= 1).",
            "VernacStartTheoremProof",
            "e7625a6d0243d61ee5a1488b6d4b5ae554afbe5e"
        ],
        [
            "by rewrite /coprimeGI /eqGI dvdGI1 dvd1GI andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_sym: commutative coprimeGI.",
            "VernacStartTheoremProof",
            "c4657e31de53c43fb6972bab6c061fea5132cbd6"
        ],
        [
            "move=> x y.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite !coprimeGIE; apply/idP/idP=> /(eqGI_trans _)->//; exact: gcdGIC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdGI (x y z : GI) : coprimeGI x y -> (x * y %| z) = (x %| z) && (y %| z).",
            "VernacStartTheoremProof",
            "87cf3fc8d175ebde09b2caa8971e1206e10413e8"
        ],
        [
            "have [/eqP-> _|nZx] := boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mul0r dvd0GI; case: eqP => //->; rewrite dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP-> _|nZy] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mulr0 dvd0GI andbC; case: eqP => //->; rewrite dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite coprimeGIE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /eqGI_mul2l<-: lcmGI x y != 0 by rewrite lcmGI_eq0 negb_or nZx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulr1 mulGI_lcm_gcd => /eqGI_dvdl->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite dvdGI_lcm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_nat m n : coprime m n -> coprimeGI (m%:R) (n%:R).",
            "VernacStartTheoremProof",
            "294f4e2f43e9ae89b162beb3aef6a0bc41eb6501"
        ],
        [
            "move=> Cmn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite coprimeGIE /eqGI dvd1GI andbT dvdGI1 -dvdn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have/eqP<-: coprime (m ^ 2) (n ^ 2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite coprime_expl // coprime_expr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite dvdn_gcd -!normGI_nat !dvdGI_norm // ?(dvdGI_gcdr,dvdGI_gcdl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdGIr (x y z : GI) : coprimeGI x y -> (x %| y * z) = (x %| z).",
            "VernacStartTheoremProof",
            "1c0497b1e62fa52eee6e57ac3c1b0c0f238e338b"
        ],
        [
            "have [/eqP->|/dvdGI_mul2r H Cxy] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /coprimeGI gcdGI0 mul0r dvdGI0 normGI_unit => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/sym_equal/idP/dvdGIP; exists (z * x^-1).",
            "VernacExtend",
            "6058448241b961fc774635902b9b0d34f87a9ee4"
        ],
        [
            "by rewrite -mulrA mulVr // mulr1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -[in RHS]H Gauss_dvdGI // mulrC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite [y %|_]dvdGI_mull ?dvdGIxx // andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_dvdGIl (x y z : GI) : coprimeGI x y -> (x %| z * y) = (x %| z).",
            "VernacStartTheoremProof",
            "343fcc4f3fe3a91db6e832debc3765ddd6a41927"
        ],
        [
            "by rewrite mulrC; exact: Gauss_dvdGIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_dvdl x y z : x %| y -> coprimeGI y z -> coprimeGI x z.",
            "VernacStartTheoremProof",
            "9f5f9739a66d16de6c53194258f77c785fd78b84"
        ],
        [
            "move=> /dvdGIP[q ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite !coprimeGIE egcdGIP => /eqGI_dvdr H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /eqGI dvd1GI andbT -H mulrA dvdGI_add // !dvdGI_mull ?(dvdGI_gcdl, dvdGI_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_dvdr x y z : x %| y -> coprimeGI z y -> coprimeGI z x.",
            "VernacStartTheoremProof",
            "65edb67ae7d1099429f0ef635868da33702748d6"
        ],
        [
            "move=> /dvdGIP[q ->].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite !coprimeGIE egcdGIP => /eqGI_dvdr H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /eqGI dvd1GI andbT -H mulrA dvdGI_add // !dvdGI_mull ?(dvdGI_gcdl, dvdGI_gcdr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_gcdGIr (x y z : GI) : coprimeGI z x -> gcdGI z (x * y) %= gcdGI z y.",
            "VernacStartTheoremProof",
            "03fdf243ecf937808c0c8ffe3806d4930dabd4b4"
        ],
        [
            "move=> Cxy; rewrite /eqGI !dvdGI_gcd dvdGI_mull ?(dvdGI_gcdl, dvdGI_gcdr) //.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite -(@Gauss_dvdGIr _ x) ?dvdGI_gcdr // (coprimeGI_dvdl _ Cxy) // dvdGI_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Gauss_gcdGIl x y z : coprimeGI z y -> gcdGI z (x * y) %= gcdGI z x.",
            "VernacStartTheoremProof",
            "381cd24a59b9b1d611e37aa40005ec30eae66d8d"
        ],
        [
            "by move=> u; rewrite mulrC; exact: Gauss_gcdGIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_mulr (x y z : GI) : coprimeGI x (y * z) = coprimeGI x y && coprimeGI x z.",
            "VernacStartTheoremProof",
            "5d0a13c2422c8c4322cc1bd21702e71fbb4a19c7"
        ],
        [
            "have [H|/= H] := boolP (coprimeGI x y).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite !coprimeGIE /eqGI !dvd1GI !andbT (eqGI_dvdl _ (Gauss_gcdGIr _ _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply/idP=> H1; case/negP: H; apply: coprimeGI_dvdr H1.",
            "VernacExtend",
            "40ad2988c35c6f4fb373c387df6d29ef7f0c7183"
        ],
        [
            "by apply: dvdGI_mulr (dvdGIxx _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_mull (x y z : GI) : coprimeGI (y * z) x = coprimeGI y x && coprimeGI z x.",
            "VernacStartTheoremProof",
            "d5b5a97f7f5274c865ffc6b42f267979d825aa72"
        ],
        [
            "by rewrite ![coprimeGI _ x]coprimeGI_sym -coprimeGI_mulr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primeGI_neq0 p : primeGI p -> p != 0.",
            "VernacStartTheoremProof",
            "e0f570a27924a424d5bec293178141056078dc01"
        ],
        [
            "by case/primeGIP; case: eqP => //->; rewrite normGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_pexpl k (x y : GI) : (0 < k)%N -> coprimeGI (x ^+ k) y = coprimeGI x y.",
            "VernacStartTheoremProof",
            "3921e582d06acb574514562a9a76c9575d6ee483"
        ],
        [
            "case: k => // k _; elim: k => [|k IHk]; first by rewrite expr1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS coprimeGI_mull -IHk andbb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_pexpr k (x y : GI) : (0 < k)%N -> coprimeGI x (y ^+ k) = coprimeGI x y.",
            "VernacStartTheoremProof",
            "2a5eda0e98444a3829327b32e15bb00b78970cf1"
        ],
        [
            "by move=> nZk; rewrite !(coprimeGI_sym x) coprimeGI_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_expl k (x y : GI) : coprimeGI x y -> coprimeGI (x ^+ k) y.",
            "VernacStartTheoremProof",
            "4c70080d4746ee0b1bff8056e98ec6b2857ac55a"
        ],
        [
            "by case: k => [|k] Cxy; rewrite ?coprime1GI // coprimeGI_pexpl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coprimeGI_expr k x y : coprimeGI x y -> coprimeGI x (y ^+ k).",
            "VernacStartTheoremProof",
            "56efe736da411d2c585ab6721c4ec11a5e4caedc"
        ],
        [
            "rewrite !(coprimeGI_sym x); exact: coprimeGI_expl.",
            "VernacExtend",
            "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primeGI_dvd p x : primeGI p -> (x %| p) = (x %= 1) || (x %= p).",
            "VernacStartTheoremProof",
            "f4a56fe9319ee1371b0440a626d66a93fd92c85c"
        ],
        [
            "move=> Pp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply/idP/orP=> [xDp|[|]/eqGI_dvdl->]; rewrite ?dvdGIxx ?dvd1GI //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "have nZp := primeGI_neq0 Pp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have := dvdGI_leq nZp xDp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite leq_eqVlt => /orP[]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/primeGIP: Pp => _ HH /HH /(_ xDp) /eqP.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite -dvdGI1 /eqGI dvd1GI => ->; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/dvdGIP: xDp => q ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /eqGI dvdGI_mull ?dvdGIxx // normGIM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [/eqP->|nZx]:= boolP (x == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mulr0 dvdGIxx; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -{1}['N x]mul1n eqn_mul2r normGI_eq0 (negPf nZx) eq_sym /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite normGI_unit => HH; right.",
            "VernacExtend",
            "8a38a210ebcdc33a3020acd0ff227061353a2b50"
        ],
        [
            "by apply/dvdGIP; exists q^-1; rewrite mulrA mulVr // mul1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma primeGI_coprime p x : primeGI p -> coprimeGI p x = ~~ (p %| x).",
            "VernacStartTheoremProof",
            "10e1b630815e288600ed7dece19ca3b75e71c41e"
        ],
        [
            "move=> Pp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nZp := primeGI_neq0 Pp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Np_neq1 : ('N p == 1)%N = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/primeGIP: Pp; case: ('N _) => // [[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have: gcdGI p x %| p by exact: dvdGI_gcdl.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite primeGI_dvd // => /orP[H|].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite coprimeGIE H; apply/sym_equal/negP => H1.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "have: p %|gcdGI p x by rewrite dvdGI_gcd dvdGIxx H1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eqGI_dvdr _ H) dvdGI1 Np_neq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqGI_sym => H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite (eqGI_dvdl _ H) dvdGI_gcdr /= coprimeGIE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/negP => /(eqGI_trans H).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /eqGI dvd1GI dvdGI1 Np_neq1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactor_coprimeGI (p x : GI) : primeGI p -> x != 0 -> {y | coprimeGI p y & x = y * p ^+ logGI p x}.",
            "VernacStartTheoremProof",
            "c165729759b42eb96dd436b4570c033535858fda"
        ],
        [
            "move=> Pp nZx; set k := logGI p x.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have Dk : p ^+ k %| x by rewrite pfactor_dvdGI.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "exists (x %/ p ^+ k); last by rewrite divGIK.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite primeGI_coprime // -(@dvdGI_mul2r (p ^+ k)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: expf_neq0 (primeGI_neq0 Pp).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -exprS divGIK // pfactor_dvdGI // ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dvdGI_leq_log (x y z : GI) : z != 0 -> y %| z -> (logGI x y <= logGI x z)%N.",
            "VernacStartTheoremProof",
            "66f9ca59bc21c849578efd5691de892cde047670"
        ],
        [
            "move=> nZz yDz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [/eqP Zy|nZy] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: yDz; rewrite Zy dvd0GI (negPf nZz).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [Px|nPx] := boolP (primeGI x); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /logGI (negPf nPx).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -pfactor_dvdGI // (dvdGI_trans _ yDz) // pfactor_dvdGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pfactorGIK p n : primeGI p -> logGI p (p ^+ n) = n.",
            "VernacStartTheoremProof",
            "c4e72c7007c43530a7c136d1ba63a6484cc247bd"
        ],
        [
            "move=> Pp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nZpn : p ^+ n != 0 by apply: expf_neq0 (primeGI_neq0 _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [y Cyp pnE]:= pfactor_coprimeGI Pp nZpn.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have yDpn : y %| p ^+ n by rewrite pnE dvdGI_mulr ?dvdGIxx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff: y %= 1.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite /eqGI dvd1GI dvdGI1 andbT => /eqP Ny.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have /eqP := congr1 normGI pnE; rewrite normGIM Ny mul1n.",
            "VernacExtend",
            "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
        ],
        [
            "rewrite !normGIX eqn_exp2l; last by case/primeGIP: Pp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/eqP<-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: (n) yDpn => [|n1 IH]; first by rewrite expr0 /eqGI dvd1GI andbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS Gauss_dvdGIr // coprimeGI_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pdivGI_pfactor p k : primeGI p -> pdivGI (p ^+ k.+1) %= p.",
            "VernacStartTheoremProof",
            "6bd548222be60cf9e3dfbb9fffd948ab18689455"
        ],
        [
            "move=> Pp.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nZpn : p ^+ k.+1 != 0 by apply: expf_neq0 (primeGI_neq0 _).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: p \\in primesGI (p ^+ k.+1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mem_primesGI Pp nZpn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/dvdGIP; exists (p ^+ k); rewrite -exprSr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /pdivGI.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: primesGI (fun x => mem_primesGI x (p ^+ k.+1)) => /= [|a l /(_ a)].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite in_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite in_cons eqxx => /= /(@sym_equal _ _ _) /and3P[Pa _ aDp] _.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [Cap|NCap]:= boolP (coprimeGI a p).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "elim: (k) aDp => [|k1 IHk1].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "by move: Cap; rewrite expr1 primeGI_coprime=> // /negP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite exprS Gauss_dvdGIr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : ~~ coprimeGI p a.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by apply: contra NCap; rewrite coprimeGI_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move: NCap; rewrite /eqGI !primeGI_coprime // !negbK => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGI_Gauss x y z : coprimeGI x y -> logGI x (y * z) = logGI x z.",
            "VernacStartTheoremProof",
            "36484fa9aa14f53c636c3a28eb595ff5d637ce68"
        ],
        [
            "move=> Cxy; have [Pp|PnP] := boolP (primeGI x); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite /logGI (negPf PnP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP-> | nZz] := boolP (z == 0); first by rewrite mulr0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [/eqP Zy | nZy] := boolP (y == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: Cxy; rewrite Zy primeGI_coprime // dvdGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have nZyz: y * z != 0 by rewrite mulf_eq0 (negPf nZy) (negPf nZz).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite eqn_leq andbC dvdGI_leq_log ?dvdGI_mull ?dvdGIxx //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "set k := logGI x _; have: x ^+ k %| y * z by rewrite pfactor_dvdGI.",
            "VernacExtend",
            "5a669f4ad2118b005921530a069ac8f03fd7f32b"
        ],
        [
            "by rewrite Gauss_dvdGIr ?coprimeGI_expl // -pfactor_dvdGI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGIM x y z : y != 0 -> z != 0 -> logGI x (y * z) = (logGI x y + logGI x z)%N.",
            "VernacStartTheoremProof",
            "081b46228c1488696911936fc145fcccce877bcb"
        ],
        [
            "move=> nZy nZz.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [Pp|/negPf PnP] := boolP (primeGI x); last by rewrite /logGI PnP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have xlp := pfactor_coprimeGI Pp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case/xlp : nZy => y1 Cxy1 yE.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/xlp : nZz => z1 Cxz1 zE.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite {1}yE {1}zE mulrCA -mulrA -exprD !logGI_Gauss // pfactorGIK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma logGIX p x n : logGI p (x ^+ n) = (n * logGI p x)%N.",
            "VernacStartTheoremProof",
            "b0d3bfe4677c39495236da9c6d7ed4ef6f013695"
        ],
        [
            "have [Pp|/negPf PnP] := boolP (primeGI p); last by rewrite /logGI PnP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "elim: n => [|n IHn]; first by rewrite logGI1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have [/eqP->|nZx] := boolP (x == 0); first by rewrite expr0n logGI0 muln0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite exprS logGIM ?IHn // expf_eq0 // negb_and nZx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdGI_mull_equiv (m n p q : GI) : coprimeGI m n -> m * n = p * q -> m %= gcdGI m p * gcdGI m q.",
            "VernacStartTheoremProof",
            "78e93a3df67c4b06dbdf5a7d9fe1966bb08a9fc8"
        ],
        [
            "elim: {m}_.+1 {-2}m (ltnSn ('N m)) p q => // k IH m.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "case: (leqP ('N m) 1%N).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite leq_eqVlt ltnS leqn0 normGI_eq0 => /orP[|/eqP-> _ p q _]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite mul0r !gcd0GI=> <-; exact: eqGIxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> H _ p q _ _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have G : m %= 1 by rewrite /eqGI dvd1GI dvdGI1 H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have G1 : gcdGI m p %= 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eqGI_trans (gcdGIC _ _)) // -(gcdGI1 p) eqGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have G2 : gcdGI m q %= 1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eqGI_trans (gcdGIC _ _)) // -(gcdGI1 q) eqGI_gcdr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: eqGI_trans (G) _; rewrite eqGI_sym.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "rewrite (eqGI_trans _ G1) // -[X in _ %= X]mulr1 eqGI_mul2l //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/eqP=> HH; move/eqGI_norm : G1; rewrite normGI1 HH normGI0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP-> Nx _ p q|nZn] := boolP (n == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite /coprimeGI gcdGI0; case: ('N _) Nx => // [[]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> OLNm MnL1 p q Cmn.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have nZm : m != 0 by rewrite -normGI_eq0; case: ('N _) OLNm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [/eqP->/eqP|nZp] := boolP (p == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mul0r mulf_eq0 (negPf nZm) (negPf nZn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP->/eqP|nZq] := boolP (q == 0).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite mulr0 mulf_eq0 (negPf nZm) (negPf nZn).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose v := pdivGI m.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have Pv : primeGI v := pdivGI_prime OLNm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=> mnE.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have logE : logGI v m = (logGI v p + logGI v q)%N.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -logGIM // -mnE mulrC logGI_Gauss //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite coprimeGI_sym (coprimeGI_dvdr (pdivGI_dvd _)) // coprimeGI_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: mnE MnL1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have [p1 Cp1dm1 ->] := pfactor_coprimeGI Pv nZp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have [q1 Cq1dm1 ->] := pfactor_coprimeGI Pv nZq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite mulrAC !mulrA -mulrA -exprD addnC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/eqP; move: OLNm Cmn.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "have [m1 Cpdm1 -> OLNm Cmn] := pfactor_coprimeGI Pv nZm.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -logE [_ * n]mulrAC -subr_eq0 -mulrBl mulf_eq0 subr_eq0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite expf_eq0 (negPf (primeGI_neq0 Pv)) andbF orbF => /eqP mnE mL.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite logE !exprD {2}[_ ^+ _ * _]mulrC !mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set u1 := _ ^+ _; set u2 := _ ^+ _.",
            "VernacExtend",
            "7405ffc63057f1493a790d3f39e251cc5fefe81f"
        ],
        [
            "have F1 : m1 %= gcdGI m1 p1 * gcdGI m1 q1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: IH => //; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: Cmn; rewrite coprimeGI_mull => /andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -ltnS (leq_trans _ mL) // ltnS normGIM normGIX.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -{1}['N m1]muln1 ltn_mul2l -{2}(expn0 ('N v)) ltn_exp2l //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite logGI_gt0 mem_primesGI Pv nZm pdivGI_dvd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: OLNm; rewrite normGIM; case: ('N _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case/primeGIP: Pv.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F2 : gcdGI (m1 * u2) p1 %= gcdGI m1 p1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eqGI_trans (gcdGIC _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: eqGI_trans (Gauss_gcdGIl _ _) _ => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite coprimeGI_expr // coprimeGI_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: gcdGIC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F3 : gcdGI (m1 * u1) q1 %= gcdGI m1 q1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eqGI_trans (gcdGIC _ _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: eqGI_trans (Gauss_gcdGIl _ _) _ => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite coprimeGI_expr // coprimeGI_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: gcdGIC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eqGI_trans (eqGI_mul F1 (eqGIxx _)) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite mulrCA !mulrA [u1 * _]mulrC -mulrA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eqGI_mul.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite eqGI_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eqGI_trans (eqGI_mul F2 (eqGIxx _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite eqGI_sym mulGI_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eqGI_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eqGI_trans (eqGI_mul F3 (eqGIxx _)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite eqGI_sym mulGI_gcdl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GaussIntegers.",
            "VernacEndSegment",
            "f625866a468bb7a0a1bda1ce75af9a1eab4d4e5b"
        ],
        [
            "Delimit Scope GI_scope with GI.",
            "VernacDelimiters",
            "31f010316a375b3cdd106b5a0b19ab3f75ec9aad"
        ],
        [
            "Notation \"'N x\" := (normGI x%R) (at level 10) : GI_scope.",
            "VernacNotation",
            "d23da3663e588cb9730629a6e32fe39b85833c95"
        ],
        [
            "Notation \" x %| y \" := (dvdGI x y) : GI_scope.",
            "VernacNotation",
            "185354154d0f1ff73fdd45ba50861b6057dfdc1d"
        ],
        [
            "Notation \" x %/ y \" := (divGI x y) : GI_scope.",
            "VernacNotation",
            "4488ab9a291d22590a7f871b2514c24dc61e9914"
        ],
        [
            "Notation \" x %% y \" := (modGI x y) : GI_scope.",
            "VernacNotation",
            "b559830d5946fc38da5a447a3db152e3de31b8f7"
        ],
        [
            "Notation \" x %= y \" := (eqGI x y) : GI_scope.",
            "VernacNotation",
            "f2f4177972d9c13af1140e9d6b4beea2c97ac533"
        ]
    ],
    "proofs": [
        {
            "name": "Cnat_mul_eq1",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "by move=> x y /CnatP [n ->] /CnatP [m ->]; rewrite -natrM !pnatr_eq1 muln_eq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cnat_add_eq1",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "move=> x y /CnatP [n ->] /CnatP [m ->]; rewrite -natrD !pnatr_eq1 ?pnatr_eq0.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move: n m => [|[|?]] [|[|?]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algReM",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "rewrite {1}[x]algCrect {1}[y]algCrect mulC_rect Re_rect //; by rewrite rpredD ?rpredN // rpredM // ?Creal_Re ?Creal_Im.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algImM",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "rewrite {1}[x]algCrect {1}[y]algCrect mulC_rect Im_rect //; by rewrite rpredD ?rpredN // rpredM // ?Creal_Re ?Creal_Im.",
                        "VernacExtend",
                        "f9e2aad1e70f1876566a77bd0af96f52b3b81520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algReV",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "have [|/mulfV H] := boolP (x^* == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite conjC_eq0 => /eqP->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite invr0 normr0 (Creal_ReP _ _) ?mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}[_ ^-1]mul1r -H -mulrA -invfM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}[x]algCrect conjC_rect ?Creal_Re ?Creal_Im //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have F : (x^* * x)^-1 \\is Creal.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredV CrealE rmorphM conjCK mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrBl -mulrN -['i * _ * _]mulrA Re_rect ?normCKC //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM ?Creal_Re.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrN rpredN rpredM // Creal_Im.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algImV",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "have [|/mulfV H] := boolP (x^* == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite conjC_eq0 => /eqP->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite invr0 normr0 (Creal_ImP _ _) ?mul0r ?oppr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}[_ ^-1]mul1r -H -mulrA -invfM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}[x]algCrect conjC_rect ?Creal_Re ?Creal_Im //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have F : (x^* * x)^-1 \\is Creal.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredV CrealE rmorphM conjCK mulrC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrBl -mulrN -['i * _ * _]mulrA Im_rect ?normCKC //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM ?Creal_Re.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrN rpredN rpredM // Creal_Im.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algRe_div",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by rewrite algReM algReV algImV mulrN opprK mulrA ['Im x * _]mulrA mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algIm_div",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "rewrite algImM algReV algImV addrC mulrN mulrA ['Re x * _]mulrA mulrBl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cdivz0",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by rewrite /cdivz eqxx divz0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cdiv0z",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "by rewrite /cdivz div0z mod0z mulr0 normr_ge0 orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cdivz1",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "by rewrite /cdivz oner_eq0 divz1 modz1 normr1 mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cdivzz",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "move=> xNz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /cdivz (negPf xNz) divzz xNz modzz mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cdivz_eq",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "by rewrite /cmodz addrC subrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmodz0",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(cdivz_eq x 0) mulr0 add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmod0z",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "by rewrite {2}(cdivz_eq 0 y) cdiv0z mul0r add0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmodz1",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "by rewrite /cmodz cdivz1 mulr1 subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmodzz",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|xNz] := boolP (x == 0); first by rewrite cmod0z.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /cmodz cdivzz // mul1r subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmodz_lt",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "move=> yNz; rewrite /cmodz /cdivz (negPf yNz) /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [mLe|eLm] := boolP (2%:R * (_ %% _)%Z <= `|_|).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}(divz_eq x y) [_ * _ + _]addrC addrK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [`|(_ %% _)%Z|]ger0_norm // modz_ge0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrDl opprD addrA {1}(divz_eq x y) [_ * _ + _]addrC addrK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have F := ltz_mod x yNz.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite -normrEsign ler0_norm; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite subr_le0; apply: ltrW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite mulrN mulrBr opprB lter_sub_addl (_ : 2%:R = 1 + 1) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrDl mul1r ler_add // ltrW // ltrNge.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cint_GI",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "move=> x_int; rewrite qualifE (Creal_ReP _ _) ?(Creal_ImP _ _) ?Creal_Cint //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite x_int rpred0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GI_subring",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "split => [|x y /andP[??] /andP[??]|x y /andP[??] /andP[??]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite Cint_GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE !raddfB /= ?rpredB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE algReM algImM rpredB ?rpredD // rpredM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GI_key",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GIRe",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "by have /andP [] := algGIP x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GIIm",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "by have /andP [] := algGIP x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulGIr",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "move=> x /andP [x_neq0 xVGI]; rewrite /invGI.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: val_inj; rewrite /= insubdK // mulVr ?unitfE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitGIP",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "rewrite /unitGI => /(congr1 val) /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [-> /eqP|x_neq0] := altP (x =P 0); first by rewrite mulr0 eq_sym oner_eq0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=> /(canRL (mulfK x_neq0)); rewrite mul1r => <- /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unitGI_out",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite inE /= -topredE /= /unitGI.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_and negbK => /predU1P [->|/negPf xGIF]; by apply: val_inj; rewrite /invGI ?val_insubd /= ?xGIF // invr0 if_same.",
                        "VernacExtend",
                        "7bd77ea96f784074e3b1d448260a45dd4191485f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGIE",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by rewrite ![_ \\is a _]qualifE Re_conj Im_conj rpredN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGI_subproof",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "by rewrite conjGIE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGI_sub",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "by move=> a b; apply/val_eqP; rewrite /= raddfB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGI_multiplicative",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "by split=> [a b|]; apply/val_eqP; rewrite /= ?(rmorphM,rmorph1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algGI_nat",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "by elim: n => //= n IH; rewrite -addn1 !natrD -IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGI_nat",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "by apply/val_eqP; rewrite /= algGI_nat conjC_nat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGIK",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "by move=> x; apply/val_eqP/eqP; exact: conjCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gaussNormE",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "by rewrite normCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gaussNormCnat",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "by rewrite /gaussNorm -normCK normC2_Re_Im rpredD // Cnat_exp_even.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gaussNorm0",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "by rewrite /gaussNorm mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI0",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "by rewrite /normGI gaussNorm0 (natCK 0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gaussNorm1",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "by rewrite /gaussNorm rmorph1 mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI1",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "by rewrite /normGI gaussNorm1 (natCK 1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gaussNormM",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /gaussNorm rmorphM mulrACA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGIM",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "by rewrite /normGI gaussNormM truncCM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGIX",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "elim: n => [|n IH].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite expr0 normGI1 expn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS normGIM IH expnS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gaussNorm_eq0",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "by rewrite gaussNormE sqrf_eq0 normr_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI_eq0",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "have /charf0P<- := Cchar.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite truncCK // gaussNorm_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI_gt0",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_neqAle andbT eq_sym normGI_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI_le",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "rewrite -!normGI_eq0 normGIM; case: ('N _) => // n _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_pmulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI_nat",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "by rewrite /normGI [val _]algGI_nat gaussNormE normr_nat truncCX // natCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGIE",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "rewrite /normGI gaussNormE normC2_Re_Im truncCD ?Cnat_exp_even //; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite qualifE Cnat_ge0 // Cnat_exp_even.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -!truncCX ?Cnat_norm_Cint // !Cint_normK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "truncC_Cint",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "by move=> xCint; rewrite {1}[x]CintEsign // truncCK // Cnat_norm_Cint.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "algC_eqE",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "apply/eqP/andP=> [->//|[/eqP H1 /eqP H2]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite [x]algCrect H1 H2 -algCrect.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normGI_unit",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "rewrite normGI_eq1 unitGIE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (@mem_unity_roots _ 4 (map id [:: 1; -1; 'i; -'i])) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /= !unity_rootE /= [(- 'i) ^+ _]exprNn expr1n -signr_odd ?expr0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[4]/(2 * 2)%N exprM sqrCi -signr_odd ?expr0 mulr1 !eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /= !in_cons !in_nil /= !negb_or -!andbA !andbT /= eqr_opp.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -addr_eq0 (eqC_nat 2 0) andTb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite algC_eqE (Creal_ImP _ _) // Im_i (eqC_nat 0 1) andbF andTb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite algC_eqE raddfN (Creal_ReP _ _) //= Re_i oppr0 (eqC_nat 1 0) andFb andTb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite algC_eqE !raddfN /= (Creal_ImP _ _) // Im_i oppr0 (eqC_nat 0 1) andbF andTb.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -addr_eq0 (@mulrn_eq0 _ 'i 2) negb_or neq0Ci.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GI_idomainAxiom",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "move=> /(congr1 (gaussNorm \\o val)) /= /eqP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite gaussNorm0 gaussNormM mulf_eq0 !gaussNorm_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGI_subproof",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE /= Re_rect ?Im_rect ?Creal_Cint ?Cint_int.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGI0",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "apply/val_eqP=> /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !raddf0 !(mul0r, mulr0, subrr, add0r, floorC0, normGI0, cdiv0z).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div0GI",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "apply/val_eqP=> /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !raddf0 !(mul0r, mulr0, subrr, add0r, floorC0, normGI0, cdiv0z).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGI1",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "apply/val_eqP=> /=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have /andP[CR CI] := algGIP x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite normGI1 !cdivz1 (Creal_ReP 1 _) ?(Creal_ImP 1 _) // !(mul1r, mulr1, mulr0, mul0r, addr0, add0r, subr0).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite 2?floorCK ?Creal_Cint // -algCrect.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modGI0",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "by apply/val_eqP; rewrite /= !raddf0 !mulr0 subr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modGI1",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "by rewrite /modGI divGI1 mulr1 subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGI_eq",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "by rewrite /modGI addrC subrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_modGIN0",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "by rewrite ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modGIxx",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|xNz] := boolP (x == 0); first by rewrite mod0GI.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /modGI divGIxx // mul1r subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGIKl",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "move=> xNz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eq_sym -subr_eq0.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have := xNz; rewrite -(ltn_modGI (y * x)).",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "have -> : ((y * x) %% x)%GI = (y - ((y * x) %/ x)%GI) * x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrBl {2}(divGI_eq (y * x) x) [_ + (_ %% _)%GI]addrC addrK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite normGIM -{2}['N x]mul1n ltn_mul2r ltnS leqn0 normGI_eq0 => /andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGIKr",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC; exact: divGIKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modGIKl",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|xNz] := boolP (x == 0); first by rewrite modGI0 mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /modGI divGIKl // subrr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modGIKr",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC modGIKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI0",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdGI mod0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGIP",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [/eqP xDy|[q ->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exists (y %/ x)%GI; first by rewrite {1}(divGI_eq y x) xDy addr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /dvdGI modGIKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd0GI",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "apply/dvdGIP/eqP => [[q ->]|->]; first by rewrite mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by exists 0; rewrite mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_mull",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "by move=> /dvdGIP[u ->]; apply/dvdGIP; exists (z * u); exact: mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_mulr",
            "line_nb": 449,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC; exact: dvdGI_mull.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGIxx",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "by rewrite /dvdGI modGIxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_norm",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "by move=> /dvdGIP[z ->]; rewrite normGIM dvdn_mull // dvdnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvd1GI",
            "line_nb": 458,
            "steps": [
                {
                    "command": [
                        "by apply/dvdGIP; exists x; rewrite mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divGIK",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|nZx /dvdGIP[q ->]] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvd0GI mulr0 => /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite divGIKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_add",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "move=> /dvdGIP[q1->] /dvdGIP[q2->]; apply/dvdGIP; exists (q1 + q2).",
                        "VernacExtend",
                        "fbafe6701d533800ec692c8144676386eb71a80b"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulrDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_nat_dvdz_Re",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "case/dvdGIP=> q /val_eqP/eqP /(congr1 (fun x => Re x)) /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: x => /= ax; rewrite qualifE => /andP[Rx Ix].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case: q => /= aq; rewrite qualifE => /andP[Rq Iq].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite [aq]algCrect mulrDl algGI_nat -['i * _ * _]mulrA Re_rect; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> /(congr1 Num.norm) /eqP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite [`|_* _%:R|]normrM -{1}(floorCK Rx) -{1}(floorCK Rq).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite normr_nat -!intr_norm -(intrM _ _ (Posz n)) eqr_int.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -2![`|_|]abszE -PoszM => /eqP[H].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdnP; exists (`|floorC ('Re aq)|)%N.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_nat_dvdz_Im",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "case/dvdGIP=> q /val_eqP/eqP/(congr1 (fun x => Im x)) /=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: x => /= ax; rewrite qualifE => /andP[Rx Ix].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case: q => /= aq; rewrite qualifE => /andP[Rq Iq].",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "rewrite [aq]algCrect mulrDl algGI_nat -['i * _ * _]mulrA Im_rect; last 2 first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite rpredM // Creal_Cint // Cint_Cnat.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> /(congr1 Num.norm) /eqP.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite [`|_* _%:R|]normrM -{1}(floorCK Ix) -{1}(floorCK Iq).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite normr_nat -!intr_norm -(intrM _ _ (Posz n)) eqr_int.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -2![`|_|]abszE -PoszM => /eqP[H].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdnP; exists (`|floorC ('Im aq)|)%N.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGI_dvd",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "case/dvdGIP=> q ->; apply/dvdGIP; exists (conjGI q).",
                        "VernacExtend",
                        "a39e135a3ff0f2f23e960b05678bfbcc7c5f6dc7"
                    ]
                },
                {
                    "command": [
                        "by rewrite rmorphM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iGI_proof",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "by rewrite qualifE Re_i Im_i Cint0 Cint1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd0GI",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite /gcdGI.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|xNz]:= boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnn eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite normGI0 normGI_gt0 xNz (negPf xNz).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have : 'N x != 0%N by rewrite normGI_eq0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case: ('N _) => [|[|v]]; rewrite //= !(mod0GI, modGI0) (negPf xNz) eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdGI0",
            "line_nb": 563,
            "steps": [
                {
                    "command": [
                        "move=> x; rewrite /gcdGI.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|xNz]:= boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltnn eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite normGI0 /= (negPf xNz).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ('N _) => [|[|v]] //= ; rewrite !(modGI0,mod0GI) (negPf xNz) ?eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdGI_recE",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "elim: m n x y => [|m Hrec] [|n] //= x1 y1.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 normGI_eq0 => /eqP=> -> _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite normGI0 normGI_gt0 modGI0 => /negPf-> /=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case: n => [|n]; rewrite /= mod0GI eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite leqn0 normGI_eq0 => _ /eqP=> -> _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite modGI0; case: (boolP (x1 == 0)) => // x1Nz.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by case: m {Hrec} =>[|m]; rewrite /= mod0GI eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: ifP => Epq Sm Sn Sq //; rewrite ?Epq //.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq y1 0) => [->|y1Nz].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: n m {Sm Sn Hrec} => [|m] [|n] //=; rewrite mod0GI eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: Hrec; last by rewrite ltn_modGI.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ Sm) // ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ Sn) // ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd1GIE",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "rewrite gcdGIE normGI1; case: leqP => [|H].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt; case: eqP => [/eqP|/= _].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite -dvdGI1 => /eqP->; rewrite gcd0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS leqn0 normGI_eq0 => /eqP->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite modGI0 gcdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite modGI1 gcd0GI.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move: H; rewrite ltnNge leq_eqVlt negb_or => /andP[/negPf->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd1GI_norm",
            "line_nb": 619,
            "steps": [
                {
                    "command": [
                        "by rewrite gcd1GIE; case: eqP; rewrite ?normGI1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdGI1",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "rewrite gcdGIE normGI1; case: leqP => [_|].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite modGI1 gcd0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS leqn0 normGI_eq0 => /eqP->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite modGI0 gcdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdGIxx",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite gcdGIE ltnn modGIxx gcd0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_mod",
            "line_nb": 631,
            "steps": [
                {
                    "command": [
                        "case: (altP (x =P 0)) => [-> | nZx]; first by rewrite modGI0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (altP (d =P 0)) => [-> | nZd /dvdGIP[q1 ->]].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvd0GI => /eqP->; rewrite modGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/dvdGIP/dvdGIP=> [] [q2 Hq2].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "rewrite /modGI Hq2 !mulrA -mulrBl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by set u := _ - _; exists u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (divGI_eq y (q1 * d)) Hq2 mulrA -mulrDl.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by set u := _ + _; exists u.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_gcdlr",
            "line_nb": 641,
            "steps": [
                {
                    "command": [
                        "elim: {x y}minn {-2}x {-2}y (leqnn (minn ('N y) ('N x))) => [x y|r IH x y].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite geq_min !leqn0 !normGI_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/pred2P=>->; rewrite (gcd0GI, gcdGI0) dvdGIxx ?andbT dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq x 0) => [-> _|nZx].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0GI dvdGIxx andbT dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq y 0) => [->|nZy].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcdGI0 dvdGIxx /= dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdGIE minnC /minn; case: ltnP => [lt_xy | le_xy] le_yr.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "suffices /IH/andP[E1 E2]: (minn ('N x) ('N (y %% x)%GI) <= r)%N.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite E2 (dvdGI_mod _ E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_yr) ?ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suffices /IH/andP[E1 E2] : (minn ('N y) ('N (x %% y)%GI) <= r)%N.",
                        "VernacExtend",
                        "290ed488b5562e885aa2cac56f3a69b4faa0eaa6"
                    ]
                },
                {
                    "command": [
                        "by rewrite E2 andbT (dvdGI_mod _ E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_yr) ?ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_gcdl",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "by case/andP: (dvdGI_gcdlr x y).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_gcdr",
            "line_nb": 660,
            "steps": [
                {
                    "command": [
                        "by case/andP: (dvdGI_gcdlr x y).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdGI_eq0",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|/eqP nZx] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite gcd0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have := dvdGI_gcdl x y.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case:eqP => //->; rewrite dvd0GI => /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_leq",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "move=> nZy /dvdGIP[q qE]; have := nZy.",
                        "VernacExtend",
                        "ccd83c252dcbae3d56f3d057fcb8217878b51901"
                    ]
                },
                {
                    "command": [
                        "rewrite qE -normGI_eq0 normGIM muln_eq0 negb_or => /andP[H1 H2].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite -[X in (X <= _)%N] mul1n leq_pmul2r lt0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_gcdGIl",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "by move=> nZx; apply: dvdGI_leq => //; exact: dvdGI_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leq_gcdGIr",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "by move=> nZy; move: (dvdGI_gcdr x y); apply: dvdGI_leq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_trans",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "move=> x y z /dvdGIP[qx -> /dvdGIP[qy ->]].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdGIP; exists (qy * qx); rewrite mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_gcd",
            "line_nb": 684,
            "steps": [
                {
                    "command": [
                        "apply/idP/andP=> [dv_xyz | [dv_xy dv_xz]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite ?(dvdGI_trans dv_xyz) ?dvdGI_gcdl ?dvdGI_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (leqnn (minn ('N z) ('N y))) dv_xy dv_xz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: {y z}minn {-2}y {-2}z => [|r IH] y z.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "rewrite geq_min !leqn0 !normGI_eq0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case/pred2P=> ->; rewrite ?(gcd0GI, gcdGI0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq y 0) => [-> _|nZy]; first by rewrite gcd0GI.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (eqVneq z 0) => [->|nZz]; first by rewrite gcdGI0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite gcdGIE minnC /minn; case: ltnP => Czy le_r dv_y dv_z.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "apply: IH => //; last by rewrite -(dvdGI_mod _ dv_y).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: IH => //; last by rewrite -(dvdGI_mod _ dv_z).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_min orbC -ltnS (leq_trans _ le_r) ?ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_mul2r",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "move=> nZp; apply/dvdGIP/dvdGIP=> [] [q Hq]; exists q.",
                        "VernacExtend",
                        "65dda251a6498009b58f054397e19016da95b086"
                    ]
                },
                {
                    "command": [
                        "by apply: (mulIf nZp); rewrite -mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hq mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_mul2l",
            "line_nb": 704,
            "steps": [
                {
                    "command": [
                        "by rewrite ![p *_]mulrC; exact: dvdGI_mul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulGI_lcm_gcd",
            "line_nb": 708,
            "steps": [
                {
                    "command": [
                        "by apply/eqP; rewrite divGIK // dvdGI_mull // dvdGI_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm0GI",
            "line_nb": 711,
            "steps": [
                {
                    "command": [
                        "by rewrite /lcmGI mul0r div0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmGI0",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "by rewrite /lcmGI mulr0 div0GI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcmGI_eq0",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|nZx] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite lcm0GI eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|nZy] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite lcmGI0 eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /lcmGI.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /dvdGIP[q Hq]: gcdGI x y %| x * y by rewrite dvdGI_mulr // dvdGI_gcdl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq divGIKl ?gcdGI_eq0 ?negb_and ?nZx //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: eqP Hq => // -> /eqP.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r mulf_eq0 (negPf nZx) (negPf nZy).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGIxx",
            "line_nb": 729,
            "steps": [
                {
                    "command": [
                        "by move=> x; rewrite /eqGI dvdGIxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_sym",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "by move=> x y; rewrite /eqGI andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_trans",
            "line_nb": 735,
            "steps": [
                {
                    "command": [
                        "move=> x y z /andP[U1 V1] /andP[U2 V2].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqGI (dvdGI_trans U1) // (dvdGI_trans V2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_eq0",
            "line_nb": 744,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqGI_sym eqGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|//] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqGI0 => /negP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_norm",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|nZx] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqGI_sym eqGI0 => /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|nZy] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite eqGI0 => /eqP->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/andP => /(dvdGI_leq nZy) H1 /(dvdGI_leq nZx) H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply/eqP; rewrite eqn_leq H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_eq_norm",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|nZx] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvd0GI => _ /eqP->; exact: eqGIxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> xNy xDy; rewrite /eqGI xDy /=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case/dvdGIP: xDy => q Hq.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "apply/dvdGIP; exists q^-1.",
                        "VernacExtend",
                        "2f47378aa7a4fe5fce43f56c11c04a7eab874245"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq mulrA mulVr ?mul1r // -normGI_unit.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /eqn_pmul2r<- : (0 < 'N x)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move: nZx; rewrite -normGI_eq0; case: ('N x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -normGIM -Hq xNy mul1n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGI_gcd",
            "line_nb": 773,
            "steps": [
                {
                    "command": [
                        "rewrite /eqGI dvdGI_gcd !conjGI_dvd //= ?(dvdGI_gcdr,dvdGI_gcdl) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -[X in X %|_]conjGIK.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite conjGI_dvd // dvdGI_gcd -{2}[x]conjGIK -{3}[y]conjGIK !conjGI_dvd // ?(dvdGI_gcdr,dvdGI_gcdl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conjGIM_norm",
            "line_nb": 778,
            "steps": [
                {
                    "command": [
                        "by apply/val_eqP; rewrite /= -normCK -gaussNormE algGI_nat truncCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdGIC",
            "line_nb": 792,
            "steps": [
                {
                    "command": [
                        "by rewrite /eqGI !(dvdGI_gcd, dvdGI_gcdl, dvdGI_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd1GI",
            "line_nb": 795,
            "steps": [
                {
                    "command": [
                        "rewrite /eqGI dvd1GI dvdGI1 gcd1GIE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (@eqP _ ('N y) 1%N) => [->|]; rewrite ?normGI1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_gcdr",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "move=> y1Ey2; rewrite /eqGI !(dvdGI_gcd, dvdGI_gcdl, dvdGI_gcdr).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqGI_dvdr _ y1Ey2) dvdGI_gcdr (eqGI_dvdr _ y1Ey2) dvdGI_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_mul2r",
            "line_nb": 817,
            "steps": [
                {
                    "command": [
                        "by move => nZr; rewrite /eqGI !dvdGI_mul2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_mul2l",
            "line_nb": 820,
            "steps": [
                {
                    "command": [
                        "by move => nZr; rewrite /eqGI !dvdGI_mul2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_mul",
            "line_nb": 823,
            "steps": [
                {
                    "command": [
                        "move=> /andP[E1 E2] /andP[F1 F2]; apply/andP; split.",
                        "VernacExtend",
                        "89e3928646f39f87d3d1ec5d5a9ade07748b7d90"
                    ]
                },
                {
                    "command": [
                        "have /dvdGIP[u1->] := E1; have /dvdGIP[v1->] := F1.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdGIP; exists (u1 * v1); rewrite mulrAC [p1 * _]mulrC !mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /dvdGIP[u1->] := E2; have /dvdGIP[v1->] := F2.",
                        "VernacExtend",
                        "6e9d14df7d32ea0bf863301df3f6cb2d4e1b8e96"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdGIP; exists (u1 * v1); rewrite mulrAC [q1 * _]mulrC !mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdGI_rec0r",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "by case: n => /= [|n]; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdGI0",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "by rewrite /egcdGI normGI0 egcdGI_rec0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcd0GI",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "by rewrite /egcdGI normGI0 -normGI_eq0 leqn0 egcdGI_rec0r => /negPf->/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdGI_recP",
            "line_nb": 841,
            "steps": [
                {
                    "command": [
                        "elim => [x y nZy|n /= IH x y nZy NyLn NyLNx].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by rewrite leqn0 normGI_eq0 (negPf nZy).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have NxP : (0 < 'N x)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: leq_trans NyLNx; rewrite ltnNge leqn0 normGI_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (negPf nZy).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [r0|nZr0] := eqVneq (x %% y) 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite r0 egcdGI_rec0r !mul0r subr0 add0r mul1r eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have NxyLn : ('N(x %% y)%GI <= n)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans _ NyLn) // ltn_modGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have NxyLNy : ('N (x %% y)%GI <= 'N y)%N by rewrite ltnW // ltn_modGI.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have := IH _ _ nZr0 NxyLn NxyLNy.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (egcdGI_rec _ _) => u v ->.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (negPf nZr0) /= /modGI mulrBr mulrBl addrCA mulrA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "egcdGIP",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "have [->|nZy] := eqVneq y 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite egcdGI0 gcdGI0 mul1r mulr0 addr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [->|nZx] := eqVneq x 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr0 add0r gcd0GI egcd0GI // mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /egcdGI /gcdGI.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: leqP => [H|H] /=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite (negPf nZy) addrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: egcdGI_recP; rewrite // ltnW.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (negPf nZx).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply: egcdGI_recP => //.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulGI_gcdr",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|nZx] := boolP (x == 0); first by rewrite !mul0r gcd0GI eqGIxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /eqGI dvdGI_gcd !dvdGI_mul2l // dvdGI_gcdl dvdGI_gcdr /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite [X in _%|_ * X]egcdGIP mulrDr dvdGI_add // mulrCA dvdGI_mull //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdGI_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdGI_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mulGI_gcdl",
            "line_nb": 875,
            "steps": [
                {
                    "command": [
                        "by rewrite ![_ * x]mulrC mulGI_gcdr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_lcm",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|nZd1] := boolP (d1 == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite lcm0GI dvd0GI; case: eqP => //->; rewrite dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|nZd2] := boolP (d2 == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite lcmGI0 dvd0GI andbC; case: eqP=> //->; rewrite dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have /dvdGI_mul2r<- : gcdGI d1 d2 != 0 by rewrite gcdGI_eq0 negb_and nZd1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulGI_lcm_gcd (eqGI_dvdr _ (mulGI_gcdr _ _ _)) dvdGI_gcd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}mulrC !dvdGI_mul2r // andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_ordGI",
            "line_nb": 899,
            "steps": [
                {
                    "command": [
                        "exact: valP i.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordGI_inj",
            "line_nb": 902,
            "steps": [
                {
                    "command": [
                        "exact: val_inj.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nprimeGI0",
            "line_nb": 962,
            "steps": [
                {
                    "command": [
                        "by case/andP; rewrite normGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqGI_prime",
            "line_nb": 1004,
            "steps": [
                {
                    "command": [
                        "move=> xEy /primeGIP[H1 H2]; apply/primeGIP; split=> [|y1 Hy1 H1y1].",
                        "VernacExtend",
                        "b7d55d5cc9e609b184db748f6780e12224901e48"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(eqGI_norm xEy).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: H2; rewrite ?(eqGI_norm xEy, eqGI_dvdr _ xEy).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdivGI_prime",
            "line_nb": 1010,
            "steps": [
                {
                    "command": [
                        "move=> Nx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [y Py yDz] : exists2 y, primeGI y & (y %| x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "elim: {x}S {-2}x (ltnSn ('N x)) Nx => // n IH x NxL ONx.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "have [Px|/primeGIPn] := boolP (primeGI x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by exists x; rewrite ?dvdGIxx //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnNge ONx => [] [//|[y /andP[H1y H2y] H3y]].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "case: (IH _ _ H1y) => [|z Pz zDy]; first by apply: (leq_trans H2y _).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exists z; rewrite ?(dvdGI_trans zDy) //.",
                        "VernacExtend",
                        "3f4da3fea53724fceb998284149567b1966b2df6"
                    ]
                },
                {
                    "command": [
                        "have yIp : y \\in primesGI x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_primesGI Py yDz -normGI_eq0; case: ('N _) Nx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff: pdivGI x \\in primesGI x by rewrite mem_primesGI => /andP[].",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite /pdivGI; case: primesGI yIp => //= a l _; rewrite in_cons eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdivGI_dvd",
            "line_nb": 1024,
            "steps": [
                {
                    "command": [
                        "have := sym_equal (mem_primesGI (pdivGI x) x).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /pdivGI; case: primesGI => [|a l]; first by rewrite dvd1GI.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /= in_cons eqxx /= => /and3P[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdivGI_leq",
            "line_nb": 1029,
            "steps": [
                {
                    "command": [
                        "by move=> /dvdGI_leq /(_ (pdivGI_dvd _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdivGI_neq0",
            "line_nb": 1032,
            "steps": [
                {
                    "command": [
                        "apply/eqP=> H.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have := pdivGI_dvd x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H dvd0GI => /eqP Zx.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have := fun x => mem_primesGI x 0; rewrite eqxx /=.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "have := H; rewrite Zx /pdivGI; case: primesGI => [/eqP/=| a l _ /(_ a)].",
                        "VernacExtend",
                        "3ce4f03148eef327ef1c0ea0b904dc833d71f154"
                    ]
                },
                {
                    "command": [
                        "by rewrite oner_eq0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite in_cons eqxx andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGI_recE",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "move=> Pp.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: m1 m2 x => [m2 x|m1 IH [|m2 /=] x].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite leqn0 normGI_eq0 => /eqP->; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite leqn0 normGI_eq0 => _ /eqP->; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> NxLm1 NxLm2 nZx.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [/dvdGIP[q Hq]|//] := boolP (_ %| _).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have nZp : p != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra nZx => /eqP HH; rewrite Hq HH mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nZq : q != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra nZx => /eqP HH; rewrite Hq HH mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have F : ('N (x %/ p)%GI < 'N x)%N.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq divGIKl // normGIM -{1}['N q]muln1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite ltn_mul2l ltnNge leqn0 normGI_eq0 nZq; case/andP: Pp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "congr (_.+1); apply: IH.",
                        "VernacExtend",
                        "385739dd8a4f73703d3828c61e1780a276bfaa31"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans F).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -ltnS (leq_trans F).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hq divGIKl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGI_gt0",
            "line_nb": 1084,
            "steps": [
                {
                    "command": [
                        "by rewrite logGIE -mem_primesGI; case: (p \\in _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltn_log0",
            "line_nb": 1087,
            "steps": [
                {
                    "command": [
                        "rewrite logGIE ltnNge.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [|nZx] := boolP (x == 0); first by rewrite andbF.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have [/(dvdGI_leq nZx)->|] /= := boolP (p %| x); last by rewrite andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGI0",
            "line_nb": 1092,
            "steps": [
                {
                    "command": [
                        "by rewrite /logGI normGI0 /= !if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGI1",
            "line_nb": 1095,
            "steps": [
                {
                    "command": [
                        "rewrite logGIE dvdGI1 /primeGI ltnNge leq_eqVlt negb_or.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ('N p == 1%N); rewrite ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactor_dvdGI",
            "line_nb": 1099,
            "steps": [
                {
                    "command": [
                        "move=> Pp; elim: n x => [|n IHn] x nZx; first by rewrite dvd1GI.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite logGIE Pp nZx.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [/dvdGIP[q Hq]/=|nD] := boolP (p %| x); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "apply/dvdGIP=> [] [/= q qE].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by case/negP: nD; rewrite qE exprS mulrCA dvdGI_mulr // dvdGIxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nZp : p != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra nZx => /eqP HH; rewrite Hq HH mulr0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nZq : q != 0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra nZx => /eqP HH; rewrite Hq HH mul0r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite Hq exprSr dvdGI_mul2r // divGIKl // IHn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI1",
            "line_nb": 1112,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprimeGI gcdGI1 normGI1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprime1GI",
            "line_nb": 1115,
            "steps": [
                {
                    "command": [
                        "rewrite /coprimeGI gcd1GIE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by have [//|] := boolP ('N x == 1%N); rewrite normGI1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGIE",
            "line_nb": 1119,
            "steps": [
                {
                    "command": [
                        "by rewrite /coprimeGI /eqGI dvdGI1 dvd1GI andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_sym",
            "line_nb": 1122,
            "steps": [
                {
                    "command": [
                        "move=> x y.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite !coprimeGIE; apply/idP/idP=> /(eqGI_trans _)->//; exact: gcdGIC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvdGI",
            "line_nb": 1126,
            "steps": [
                {
                    "command": [
                        "have [/eqP-> _|nZx] := boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mul0r dvd0GI; case: eqP => //->; rewrite dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/eqP-> _|nZy] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr0 dvd0GI andbC; case: eqP => //->; rewrite dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite coprimeGIE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have /eqGI_mul2l<-: lcmGI x y != 0 by rewrite lcmGI_eq0 negb_or nZx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mulr1 mulGI_lcm_gcd => /eqGI_dvdl->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdGI_lcm.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_nat",
            "line_nb": 1136,
            "steps": [
                {
                    "command": [
                        "move=> Cmn.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite coprimeGIE /eqGI dvd1GI andbT dvdGI1 -dvdn1.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have/eqP<-: coprime (m ^ 2) (n ^ 2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite coprime_expl // coprime_expr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dvdn_gcd -!normGI_nat !dvdGI_norm // ?(dvdGI_gcdr,dvdGI_gcdl).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvdGIr",
            "line_nb": 1143,
            "steps": [
                {
                    "command": [
                        "have [/eqP->|/dvdGI_mul2r H Cxy] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite /coprimeGI gcdGI0 mul0r dvdGI0 normGI_unit => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "apply/sym_equal/idP/dvdGIP; exists (z * x^-1).",
                        "VernacExtend",
                        "6058448241b961fc774635902b9b0d34f87a9ee4"
                    ]
                },
                {
                    "command": [
                        "by rewrite -mulrA mulVr // mulr1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -[in RHS]H Gauss_dvdGI // mulrC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite [y %|_]dvdGI_mull ?dvdGIxx // andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_dvdGIl",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "by rewrite mulrC; exact: Gauss_dvdGIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_dvdl",
            "line_nb": 1154,
            "steps": [
                {
                    "command": [
                        "move=> /dvdGIP[q ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite !coprimeGIE egcdGIP => /eqGI_dvdr H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqGI dvd1GI andbT -H mulrA dvdGI_add // !dvdGI_mull ?(dvdGI_gcdl, dvdGI_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_dvdr",
            "line_nb": 1159,
            "steps": [
                {
                    "command": [
                        "move=> /dvdGIP[q ->].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite !coprimeGIE egcdGIP => /eqGI_dvdr H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqGI dvd1GI andbT -H mulrA dvdGI_add // !dvdGI_mull ?(dvdGI_gcdl, dvdGI_gcdr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_gcdGIr",
            "line_nb": 1164,
            "steps": [
                {
                    "command": [
                        "move=> Cxy; rewrite /eqGI !dvdGI_gcd dvdGI_mull ?(dvdGI_gcdl, dvdGI_gcdr) //.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(@Gauss_dvdGIr _ x) ?dvdGI_gcdr // (coprimeGI_dvdl _ Cxy) // dvdGI_gcdl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Gauss_gcdGIl",
            "line_nb": 1168,
            "steps": [
                {
                    "command": [
                        "by move=> u; rewrite mulrC; exact: Gauss_gcdGIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_mulr",
            "line_nb": 1171,
            "steps": [
                {
                    "command": [
                        "have [H|/= H] := boolP (coprimeGI x y).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite !coprimeGIE /eqGI !dvd1GI !andbT (eqGI_dvdl _ (Gauss_gcdGIr _ _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply/idP=> H1; case/negP: H; apply: coprimeGI_dvdr H1.",
                        "VernacExtend",
                        "40ad2988c35c6f4fb373c387df6d29ef7f0c7183"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdGI_mulr (dvdGIxx _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_mull",
            "line_nb": 1177,
            "steps": [
                {
                    "command": [
                        "by rewrite ![coprimeGI _ x]coprimeGI_sym -coprimeGI_mulr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primeGI_neq0",
            "line_nb": 1180,
            "steps": [
                {
                    "command": [
                        "by case/primeGIP; case: eqP => //->; rewrite normGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_pexpl",
            "line_nb": 1183,
            "steps": [
                {
                    "command": [
                        "case: k => // k _; elim: k => [|k IHk]; first by rewrite expr1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS coprimeGI_mull -IHk andbb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_pexpr",
            "line_nb": 1187,
            "steps": [
                {
                    "command": [
                        "by move=> nZk; rewrite !(coprimeGI_sym x) coprimeGI_pexpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_expl",
            "line_nb": 1190,
            "steps": [
                {
                    "command": [
                        "by case: k => [|k] Cxy; rewrite ?coprime1GI // coprimeGI_pexpl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coprimeGI_expr",
            "line_nb": 1193,
            "steps": [
                {
                    "command": [
                        "rewrite !(coprimeGI_sym x); exact: coprimeGI_expl.",
                        "VernacExtend",
                        "fc36db30cc6b7c554eedf7f3ce8ac6dfc3633e80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primeGI_dvd",
            "line_nb": 1196,
            "steps": [
                {
                    "command": [
                        "move=> Pp.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply/idP/orP=> [xDp|[|]/eqGI_dvdl->]; rewrite ?dvdGIxx ?dvd1GI //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "have nZp := primeGI_neq0 Pp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have := dvdGI_leq nZp xDp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite leq_eqVlt => /orP[]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/primeGIP: Pp => _ HH /HH /(_ xDp) /eqP.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -dvdGI1 /eqGI dvd1GI => ->; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/dvdGIP: xDp => q ->.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite /eqGI dvdGI_mull ?dvdGIxx // normGIM.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|nZx]:= boolP (x == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite mulr0 dvdGIxx; right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -{1}['N x]mul1n eqn_mul2r normGI_eq0 (negPf nZx) eq_sym /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite normGI_unit => HH; right.",
                        "VernacExtend",
                        "8a38a210ebcdc33a3020acd0ff227061353a2b50"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdGIP; exists q^-1; rewrite mulrA mulVr // mul1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "primeGI_coprime",
            "line_nb": 1212,
            "steps": [
                {
                    "command": [
                        "move=> Pp.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have nZp := primeGI_neq0 Pp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have Np_neq1 : ('N p == 1)%N = false.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/primeGIP: Pp; case: ('N _) => // [[]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have: gcdGI p x %| p by exact: dvdGI_gcdl.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite primeGI_dvd // => /orP[H|].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite coprimeGIE H; apply/sym_equal/negP => H1.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "have: p %|gcdGI p x by rewrite dvdGI_gcd dvdGIxx H1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqGI_dvdr _ H) dvdGI1 Np_neq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eqGI_sym => H.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "rewrite (eqGI_dvdl _ H) dvdGI_gcdr /= coprimeGIE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/negP => /(eqGI_trans H).",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /eqGI dvd1GI dvdGI1 Np_neq1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactor_coprimeGI",
            "line_nb": 1227,
            "steps": [
                {
                    "command": [
                        "move=> Pp nZx; set k := logGI p x.",
                        "VernacExtend",
                        "fd0300d8899563f42d81dc09cab8269e61be7289"
                    ]
                },
                {
                    "command": [
                        "have Dk : p ^+ k %| x by rewrite pfactor_dvdGI.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "exists (x %/ p ^+ k); last by rewrite divGIK.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite primeGI_coprime // -(@dvdGI_mul2r (p ^+ k)); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: expf_neq0 (primeGI_neq0 Pp).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -exprS divGIK // pfactor_dvdGI // ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dvdGI_leq_log",
            "line_nb": 1235,
            "steps": [
                {
                    "command": [
                        "move=> nZz yDz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [/eqP Zy|nZy] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move: yDz; rewrite Zy dvd0GI (negPf nZz).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [Px|nPx] := boolP (primeGI x); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /logGI (negPf nPx).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -pfactor_dvdGI // (dvdGI_trans _ yDz) // pfactor_dvdGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pfactorGIK",
            "line_nb": 1243,
            "steps": [
                {
                    "command": [
                        "move=> Pp.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have nZpn : p ^+ n != 0 by apply: expf_neq0 (primeGI_neq0 _).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have [y Cyp pnE]:= pfactor_coprimeGI Pp nZpn.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have yDpn : y %| p ^+ n by rewrite pnE dvdGI_mulr ?dvdGIxx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "suff: y %= 1.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "rewrite /eqGI dvd1GI dvdGI1 andbT => /eqP Ny.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have /eqP := congr1 normGI pnE; rewrite normGIM Ny mul1n.",
                        "VernacExtend",
                        "aa9d5fbc682ed874cd64b2543ca6c859b978e924"
                    ]
                },
                {
                    "command": [
                        "rewrite !normGIX eqn_exp2l; last by case/primeGIP: Pp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/eqP<-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: (n) yDpn => [|n1 IH]; first by rewrite expr0 /eqGI dvd1GI andbT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS Gauss_dvdGIr // coprimeGI_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pdivGI_pfactor",
            "line_nb": 1256,
            "steps": [
                {
                    "command": [
                        "move=> Pp.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have nZpn : p ^+ k.+1 != 0 by apply: expf_neq0 (primeGI_neq0 _).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have: p \\in primesGI (p ^+ k.+1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_primesGI Pp nZpn.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdGIP; exists (p ^+ k); rewrite -exprSr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /pdivGI.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: primesGI (fun x => mem_primesGI x (p ^+ k.+1)) => /= [|a l /(_ a)].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite in_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite in_cons eqxx => /= /(@sym_equal _ _ _) /and3P[Pa _ aDp] _.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have [Cap|NCap]:= boolP (coprimeGI a p).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "elim: (k) aDp => [|k1 IHk1].",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "by move: Cap; rewrite expr1 primeGI_coprime=> // /negP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS Gauss_dvdGIr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have : ~~ coprimeGI p a.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by apply: contra NCap; rewrite coprimeGI_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move: NCap; rewrite /eqGI !primeGI_coprime // !negbK => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGI_Gauss",
            "line_nb": 1274,
            "steps": [
                {
                    "command": [
                        "move=> Cxy; have [Pp|PnP] := boolP (primeGI x); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /logGI (negPf PnP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have [/eqP-> | nZz] := boolP (z == 0); first by rewrite mulr0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [/eqP Zy | nZy] := boolP (y == 0).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move: Cxy; rewrite Zy primeGI_coprime // dvdGI0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have nZyz: y * z != 0 by rewrite mulf_eq0 (negPf nZy) (negPf nZz).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply/eqP; rewrite eqn_leq andbC dvdGI_leq_log ?dvdGI_mull ?dvdGIxx //.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "set k := logGI x _; have: x ^+ k %| y * z by rewrite pfactor_dvdGI.",
                        "VernacExtend",
                        "5a669f4ad2118b005921530a069ac8f03fd7f32b"
                    ]
                },
                {
                    "command": [
                        "by rewrite Gauss_dvdGIr ?coprimeGI_expl // -pfactor_dvdGI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGIM",
            "line_nb": 1285,
            "steps": [
                {
                    "command": [
                        "move=> nZy nZz.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have [Pp|/negPf PnP] := boolP (primeGI x); last by rewrite /logGI PnP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have xlp := pfactor_coprimeGI Pp.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case/xlp : nZy => y1 Cxy1 yE.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/xlp : nZz => z1 Cxz1 zE.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite {1}yE {1}zE mulrCA -mulrA -exprD !logGI_Gauss // pfactorGIK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "logGIX",
            "line_nb": 1293,
            "steps": [
                {
                    "command": [
                        "have [Pp|/negPf PnP] := boolP (primeGI p); last by rewrite /logGI PnP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "elim: n => [|n IHn]; first by rewrite logGI1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "have [/eqP->|nZx] := boolP (x == 0); first by rewrite expr0n logGI0 muln0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite exprS logGIM ?IHn // expf_eq0 // negb_and nZx orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}