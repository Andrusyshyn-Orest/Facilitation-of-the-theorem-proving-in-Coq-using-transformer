{
    "filename": "fermat2.v",
    "coq_project": "twoSquare",
    "vernac_cmds": [
        [
            "From mathcomp Require Import all_ssreflect all_algebra all_field.",
            "VernacRequire",
            "9ae2da43b8d56589c9d880278611ed428bd1a779"
        ],
        [
            "Require Import gauss_int.",
            "VernacRequire",
            "03000d06931b02d142e410cdd5f63c61ce607e84"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Import GRing.Theory Num.Theory UnityRootTheory.",
            "VernacImport",
            "e34b5fcb5dfb87b4ce98155046197a426a5ece4b"
        ],
        [
            "Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "22a30e2fa4fb58b685066c0106e0f666475aba7e"
        ],
        [
            "Definition sum_of_two_square := [qualify a x | [exists a : 'I_x.+1, exists b : 'I_x.+1, x == a ^ 2 + b ^ 2]].",
            "VernacDefinition",
            "9185fc64f8a769d089af844d1536fdfde253f4a3"
        ],
        [
            "Lemma sum2sP x : reflect (exists m, exists n, x = m ^ 2 + n ^ 2) (x \\is a sum_of_two_square).",
            "VernacStartTheoremProof",
            "0ad6ba6c29bf9d31217b09adada8454f4b1237c7"
        ],
        [
            "apply: (iffP existsP) => [[m /existsP[n /eqP->]]|[m [n ->]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by exists m; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F1 : m < (m ^ 2 + n ^ 2).+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ltnS (leq_trans _ (leq_addr _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: m => [|[|m]] //; rewrite (leq_exp2l 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F2 : n < (m ^ 2 + n ^ 2).+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite ltnS (leq_trans _ (leq_addl _ _)) //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (n) => [|[|n1]] //; rewrite (leq_exp2l 1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (Ordinal F1); apply/existsP; exists (Ordinal F2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact sum2s0 : 0 \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "b9f496db76ccf7dcb802231d2343461c6728ee06"
        ],
        [
            "by apply/sum2sP; exists 0; exists 0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact sum2s1 : 1 \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "200db9d55e04fd91905a5498d59f6524db721880"
        ],
        [
            "by apply/sum2sP; exists 0; exists 1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact sum2s2 : 2 \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "1f20ae33203c3d1787dde1abfa7f33e49390619d"
        ],
        [
            "by apply/sum2sP; exists 1; exists 1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact sum2sX_even x n : ~~ odd n -> x ^ n \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "cc80628ba2202a19b09fe852964f4a802ed67f25"
        ],
        [
            "move=> En; apply/sum2sP; exists (x ^ n./2); exists 0.",
            "VernacExtend",
            "34b4cd08ee288eb19dae28a2dae00ef2c42a8574"
        ],
        [
            "by rewrite addn0 -{1}[n]odd_double_half (negPf En) -expnM muln2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2sGP x : reflect (exists m : GI, x = normGI m) (x \\is a sum_of_two_square).",
            "VernacStartTheoremProof",
            "762a7ac3c815cd0a2b7ec8f33dd40846661299bf"
        ],
        [
            "apply: (iffP idP) => [/sum2sP[m [n ->]]|[x1->]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (m%:R + iGI * n%:R)%R.",
            "VernacExtend",
            "32d75bd0777e41a68b80df5b05e15f717e1cee2d"
        ],
        [
            "by rewrite normGIE /= !algGI_nat Re_rect ?Im_rect ?CrealE ?conjC_nat ?natCK // !normr_nat !natCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite normGIE; set m := truncC _; set n := truncC _.",
            "VernacExtend",
            "f45836f1382b287f5cb0d23d87b8ff8985cc615b"
        ],
        [
            "by apply/sum2sP; exists m; exists n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2sM x y : x \\is a sum_of_two_square -> y \\is a sum_of_two_square -> x * y \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "0424571f65509eb0a8788bfa320e87956a63c6ff"
        ],
        [
            "move=> /sum2sGP[x1->] /sum2sGP[y1->]; rewrite -normGIM.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/sum2sGP; exists (x1 * y1)%R.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2s_dvd_prime p a b : prime p -> coprime a b -> p %| a ^ 2 + b ^ 2 -> p \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "b1905ee0301513d30aca058f86ba4965c2f58ef2"
        ],
        [
            "move=> Pp Cab pDab.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have /dvdGI_norm := pdivGI_dvd (p%:R); set x := pdivGI _.",
            "VernacExtend",
            "81881a093b2294c76be3b432fbe83612064d7bc9"
        ],
        [
            "have Px : primeGI x.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: pdivGI_prime; rewrite normGI_nat.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by rewrite -{1}(expn0 p) ltn_exp2l // prime_gt1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (normGI_nat p)=> /(dvdn_pfactor _ _ Pp)=> [[[|[|[]]]]] _ //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=> H; case/andP: Px; rewrite H ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite expn1=> H; apply/sum2sGP; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -normGI_nat => H1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have PGIp : primeGI (p%:R).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: eqGI_prime Px.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply: dvdGI_eq_norm (pdivGI_dvd _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose z := (a%:R + iGI * b%:R)%R.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have F : ('N z)%GI = a ^ 2 + b ^ 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite normGIE /= !algGI_nat !(Re_rect, Im_rect) ?Creal_Cnat // !normr_nat !natCK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have F1 : (p%:R %| z * conjGI z)%GI%R.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite conjGIM_norm F.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/dvdnP: pDab => q1 ->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply/dvdGIP; exists (q1%:R); rewrite natrM.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have []: ~ (p %| gcdn a b).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (eqP Cab) Euclid_dvd1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite dvdn_gcd.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [F2|] := boolP (p%:R %| z)%GI.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have := dvdGI_nat_dvdz_Re F2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Re_rect /= algGI_nat ?Creal_Cnat //= (intCK (Posz a)) /= => ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have := dvdGI_nat_dvdz_Im F2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite Im_rect /= algGI_nat ?Creal_Cnat //= (intCK (Posz b)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -primeGI_coprime // => HH.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have F2 : (p%:R %| conjGI z)%GI.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -(Gauss_dvdGIr _ HH).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have := dvdGI_nat_dvdz_Re F2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Re_conj Re_rect /= algGI_nat ?Creal_Cnat //= (intCK (Posz a)) => ->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have := dvdGI_nat_dvdz_Im F2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite Im_conj Im_rect /= algGI_nat ?Creal_Cnat //=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite floorCN ?Cint_Cnat // abszN (intCK (Posz b)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2sX x n : x \\is a sum_of_two_square -> x ^ n \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "e10b89c9712c4616aec3d34411ba6c167811145e"
        ],
        [
            "move=>/sum2sGP[x1->]; rewrite -normGIX.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply/sum2sGP; exists (x1 ^+ n)%R.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2sX_prime x n : prime x -> odd n -> x ^ n \\is a sum_of_two_square -> x \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "88ed1d7438d1a44df8c1b93392d3157ee48f887b"
        ],
        [
            "move=> Px On /sum2sP[a [b adE]].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "pose u := gcdn a b.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have /(dvdn_pfactor _ _ Px)[m] : u ^ 2 %| x ^ n.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite adE dvdn_add // dvdn_exp2r ?(dvdn_gcdr, dvdn_gcdl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite leq_eqVlt => /orP[/eqP->|nLM] uE.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: On; have := congr1 (logn x) uE.",
            "VernacExtend",
            "ccd83c252dcbae3d56f3d057fcb8217878b51901"
        ],
        [
            "rewrite (pfactorK _ Px) lognX => <-.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite mul2n odd_double.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have /(sum2s_dvd_prime _ _)->//: x %| (a %/ u) ^ 2 + (b %/ u) ^ 2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/dvdnP; exists (x^(n-m).-1); apply/eqP.",
            "VernacExtend",
            "a9590531a27ab3b51ea51e35c72b8a00698c7dc6"
        ],
        [
            "rewrite -expnSr prednK ?subn_gt0 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have/eqn_pmul2r<- : (0 < x ^ m) by rewrite expn_gt0 prime_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite -{1}uE mulnDl -!expnMn -expnD subnK 1?ltnW // !divnK ?(adE, dvdn_gcdr, dvdn_gcdl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /coprime.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have/eqn_pmul2r<- : (0 < u).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have: (0 < u ^ 2) by rewrite uE expn_gt0 prime_gt0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: (u).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite muln_gcdl mul1n !divnK ?(adE, dvdn_gcdr, dvdn_gcdl).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2sM_coprime x y : coprime x y -> x * y \\is a sum_of_two_square -> x \\is a sum_of_two_square.",
            "VernacStartTheoremProof",
            "47b8dbfb64898a22046ff081fdf660bb6d6c61fe"
        ],
        [
            "move=> Cxy /sum2sGP[z Hz].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "pose t := gcdGI (x%:R) z.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "apply/sum2sGP; exists t.",
            "VernacExtend",
            "35dbd1da792943d938906148127926636bd47a3a"
        ],
        [
            "apply: eqGI_nat.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -conjGIM_norm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: eqGI_trans (_ : eqGI (t * gcdGI (x%:R) (conjGI z))%R _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: gcdGI_mull_equiv (coprimeGI_nat Cxy) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -natrM Hz conjGIM_norm.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: eqGI_mul (eqGIxx _) _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite -conjGI_nat eqGI_sym conjGI_gcd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma modn_prod I r (P : pred I) F d : \\prod_(i <- r | P i) (F i %% d) = \\prod_(i <- r | P i) F i %[mod d].",
            "VernacStartTheoremProof",
            "ac4d668a8b43c10938b5784c8cbb6aa1d5c80dd0"
        ],
        [
            "apply/eqP; elim/big_rec2: _ => // i m n _.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "by rewrite modnMml -modnMmr => /eqP->; rewrite modnMmr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2sprime p : odd p -> prime p -> p \\is a sum_of_two_square = (p %% 4 == 1).",
            "VernacStartTheoremProof",
            "a68c8ca9f639fd705a0aad5a84d61198148616dc"
        ],
        [
            "move=> Op Pp; apply/idP/idP=>[/sum2sP[a [b H]]|pM4].",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "have F c : (c ^ 2 %% 4 == 0) || (c ^ 2 %% 4 == 1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -modnXm expnS expn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: (c %% 4) (ltn_pmod c (isT: 0 < 4)); do 4 case => //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have : (p %% 4 == 1) || (p %% 4 == 3).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite -[p]odd_double_half Op -modnDmr -muln2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have /(_ _ 2)<- := muln_modl (isT: 0 < 2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move: (_ %% 2) (ltn_pmod p./2 (isT: 0 < 2)); do 2 case => //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite H -modnDm.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move: (F a) (F b) => /orP[] /eqP-> /orP[] /eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "pose k := p %/ 4.",
            "VernacExtend",
            "3c5f04de94609049d978298aa02ff35fb35ea7c7"
        ],
        [
            "have p_gt0 := prime_gt0 Pp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have p_gt1 := prime_gt1 Pp.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have : (p.-1)`!.+1 %% p == 0 by rewrite -[_ == 0]Wilson.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have : \\prod_(1 <= i < (k * 2).+1) (p - 1) = 1 %[mod p].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite prod_nat_const_nat !subn1 /= mulnC expnM.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -modnXm expnS expn1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[_ * _ %% _]modnDr -{3}[p]prednK -addn1 //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite addnA -mulnSr prednK // modnMDl modnXm exp1n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have pE : p = (k * 4).+1 by rewrite (divn_eq p 4) (eqP pM4) addn1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite pE => F.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have [/eqP-> _|] := boolP (k == 0); first exact: sum2s1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -leqn0 -ltnNge => Pk.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite fact_prod (big_cat_nat _ _ _ (_ : 1 <= (k * 2).+1)) //=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite ltnS leq_mul2l orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "set S1 := \\prod_(_ <= _ < _ ) _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite -addn1 -modnDml -modnMmr big_nat_rev /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[(k * 2).+1]add1n big_addn.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite subSn ?leq_pmul2l // -mulnBr /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set S2 := \\prod_(_ <= _ < _ ) _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "rewrite -[S2]muln1 -[S2 * 1 %% _]modnMmr -{}F.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [S2 * _ %% _]modnMmr.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[S2 * _]big_split /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set S3 := \\prod_(_ <= _ < _ ) _.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "suff ->: S3 = S1 %[mod (k * 4).+1].",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite modnMmr modnDml -{1}[S1]expn1 -expnSr -[S1]fact_prod.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -pE -{3}[1](exp1n 2) => /sum2s_dvd_prime-> //.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite coprimen1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -modn_prod -[in RHS]modn_prod.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite big_nat_cond [in RHS]big_nat_cond.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "congr (_ %% _).",
            "VernacExtend",
            "f3a9615ebe5fa15549c1ecd556f50efbdb2824d9"
        ],
        [
            "apply: eq_bigr => i /andP[/andP[H1 H2] _].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite add1n addnC -addnS [i + _]addnC subnDA addnK.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have H3 : i <= (k * 4).+1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite ltnW // (leq_trans H2) // ltnS leq_pmul2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -modnDr -{3}(subnK H3) addnA -mulnSr subn1 prednK //.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite modnMDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum2stest n : reflect (forall p, prime p -> odd p -> p %| n -> odd (logn p n) -> p %% 4 = 1) (n \\is a sum_of_two_square).",
            "VernacStartTheoremProof",
            "b2eb1eb2aa95747e74d2f78045d8d3e03b80c518"
        ],
        [
            "apply: (iffP idP) => [Hs p Pp Op Dp OL|HH].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pn : 0 < n by case: (n) OL; rewrite ?logn0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have /(pfactor_coprime Pp)[m Cmp mE] := (Pn).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply/eqP; rewrite -sum2sprime //.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "apply: sum2sX_prime OL _ => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite mE mulnC in Hs.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sum2sM_coprime Hs; rewrite coprime_pexpl // -pfactor_dvdn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have [/eqP->|] := boolP (n == 0); first by apply:sum2s0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite -leqn0 -ltnNge => /prod_prime_decomp->.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite big_seq_cond /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "elim/big_rec: _ => [|i x /andP[]].",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "exact: sum2s1.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "rewrite prime_decompE => /mapP[p].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "rewrite mem_primes => /and3P[Pp Pn pDn] -> _ xS /=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: sum2sM => //.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [OL|] := boolP (odd (logn p n)); last by exact: sum2sX_even.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: sum2sX.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have [Op|/prime_oddPn->//] := boolP (odd p); last by exact: sum2s2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite sum2sprime // HH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "sum2sP",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "apply: (iffP existsP) => [[m /existsP[n /eqP->]]|[m [n ->]]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by exists m; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have F1 : m < (m ^ 2 + n ^ 2).+1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS (leq_trans _ (leq_addr _ _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: m => [|[|m]] //; rewrite (leq_exp2l 1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have F2 : n < (m ^ 2 + n ^ 2).+1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite ltnS (leq_trans _ (leq_addl _ _)) //.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (n) => [|[|n1]] //; rewrite (leq_exp2l 1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists (Ordinal F1); apply/existsP; exists (Ordinal F2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2s0",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "by apply/sum2sP; exists 0; exists 0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2s1",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by apply/sum2sP; exists 0; exists 1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2s2",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by apply/sum2sP; exists 1; exists 1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2sX_even",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "move=> En; apply/sum2sP; exists (x ^ n./2); exists 0.",
                        "VernacExtend",
                        "34b4cd08ee288eb19dae28a2dae00ef2c42a8574"
                    ]
                },
                {
                    "command": [
                        "by rewrite addn0 -{1}[n]odd_double_half (negPf En) -expnM muln2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2sGP",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [/sum2sP[m [n ->]]|[x1->]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exists (m%:R + iGI * n%:R)%R.",
                        "VernacExtend",
                        "32d75bd0777e41a68b80df5b05e15f717e1cee2d"
                    ]
                },
                {
                    "command": [
                        "by rewrite normGIE /= !algGI_nat Re_rect ?Im_rect ?CrealE ?conjC_nat ?natCK // !normr_nat !natCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite normGIE; set m := truncC _; set n := truncC _.",
                        "VernacExtend",
                        "f45836f1382b287f5cb0d23d87b8ff8985cc615b"
                    ]
                },
                {
                    "command": [
                        "by apply/sum2sP; exists m; exists n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2sM",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "move=> /sum2sGP[x1->] /sum2sGP[y1->]; rewrite -normGIM.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/sum2sGP; exists (x1 * y1)%R.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2s_dvd_prime",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "move=> Pp Cab pDab.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have /dvdGI_norm := pdivGI_dvd (p%:R); set x := pdivGI _.",
                        "VernacExtend",
                        "81881a093b2294c76be3b432fbe83612064d7bc9"
                    ]
                },
                {
                    "command": [
                        "have Px : primeGI x.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: pdivGI_prime; rewrite normGI_nat.",
                        "VernacExtend",
                        "56c014161b39aecfb3c54301c2409dba4e8e1857"
                    ]
                },
                {
                    "command": [
                        "by rewrite -{1}(expn0 p) ltn_exp2l // prime_gt1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (normGI_nat p)=> /(dvdn_pfactor _ _ Pp)=> [[[|[|[]]]]] _ //.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=> H; case/andP: Px; rewrite H ltnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite expn1=> H; apply/sum2sGP; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -normGI_nat => H1.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have PGIp : primeGI (p%:R).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: eqGI_prime Px.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply: dvdGI_eq_norm (pdivGI_dvd _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "pose z := (a%:R + iGI * b%:R)%R.",
                        "VernacExtend",
                        "3c5f04de94609049d978298aa02ff35fb35ea7c7"
                    ]
                },
                {
                    "command": [
                        "have F : ('N z)%GI = a ^ 2 + b ^ 2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite normGIE /= !algGI_nat !(Re_rect, Im_rect) ?Creal_Cnat // !normr_nat !natCK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have F1 : (p%:R %| z * conjGI z)%GI%R.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite conjGIM_norm F.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/dvdnP: pDab => q1 ->.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply/dvdGIP; exists (q1%:R); rewrite natrM.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have []: ~ (p %| gcdn a b).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eqP Cab) Euclid_dvd1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite dvdn_gcd.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [F2|] := boolP (p%:R %| z)%GI.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have := dvdGI_nat_dvdz_Re F2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Re_rect /= algGI_nat ?Creal_Cnat //= (intCK (Posz a)) /= => ->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have := dvdGI_nat_dvdz_Im F2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite Im_rect /= algGI_nat ?Creal_Cnat //= (intCK (Posz b)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite -primeGI_coprime // => HH.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have F2 : (p%:R %| conjGI z)%GI.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(Gauss_dvdGIr _ HH).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have := dvdGI_nat_dvdz_Re F2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Re_conj Re_rect /= algGI_nat ?Creal_Cnat //= (intCK (Posz a)) => ->.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "have := dvdGI_nat_dvdz_Im F2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "rewrite Im_conj Im_rect /= algGI_nat ?Creal_Cnat //=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite floorCN ?Cint_Cnat // abszN (intCK (Posz b)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum2sX",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "move=>/sum2sGP[x1->]; rewrite -normGIX.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply/sum2sGP; exists (x1 ^+ n)%R.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "modn_prod",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "apply/eqP; elim/big_rec2: _ => // i m n _.",
                        "VernacExtend",
                        "470117b6920bbf0ab181fc70f91f03232cdae40b"
                    ]
                },
                {
                    "command": [
                        "by rewrite modnMml -modnMmr => /eqP->; rewrite modnMmr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}