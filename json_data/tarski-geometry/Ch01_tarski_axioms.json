{
    "filename": "Ch01_tarski_axioms.v",
    "coq_project": "tarski-geometry",
    "vernac_cmds": [
        [
            "Require Export general_tactics.",
            "VernacRequire",
            "97e3f39181ac8d0952b5e8a3f95b269cee25da8c"
        ],
        [
            "Parameter Point : Set.",
            "VernacAssumption",
            "53c1ce7287d790e30abd518f8214a34c6af0d33f"
        ],
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Parameter Cong : Point -> Point -> Point -> Point -> Prop.",
            "VernacAssumption",
            "568a814964e983cf12e1220255c6a5727ed29cca"
        ],
        [
            "Parameter Bet : Point -> Point -> Point -> Prop.",
            "VernacAssumption",
            "af4c93b2f4cfb900cac93ecd1f412370c52036be"
        ],
        [
            "Definition Col (A B C : Point) : Prop := Bet A B C \\/ Bet B C A \\/ Bet C A B.",
            "VernacDefinition",
            "9358b0aa8d0e7e0ade59926b53c307cb141ded81"
        ],
        [
            "Ltac cases_col A B C := elim (classic (Col A B C));intros.",
            "VernacExtend",
            "14321caae7e24aad3032bb8fb2e3dc98018150d8"
        ],
        [
            "Axiom between_identity : forall A B, Bet A B A -> A=B.",
            "VernacAssumption",
            "35551c1e514802420f55862b2c63a135449d96f4"
        ],
        [
            "Axiom cong_pseudo_reflexivity : forall A B : Point, Cong A B B A.",
            "VernacAssumption",
            "57e4691da88390b6d898a57240e2ce9a96e44109"
        ],
        [
            "Axiom cong_identity : forall A B C : Point, Cong A B C C -> A = B.",
            "VernacAssumption",
            "7fb742a94ffe265dc1d233e472f390b9d7fcb65a"
        ],
        [
            "Axiom cong_inner_transitivity : forall A B C D E F : Point, Cong A B C D -> Cong A B E F -> Cong C D E F.",
            "VernacAssumption",
            "ec9e2f434084cce0526e0ebcafa248ffd4c398e0"
        ],
        [
            "Axiom inner_pasch : forall A B C P Q : Point, Bet A P C -> Bet B Q C -> exists x, Bet P x B /\\ Bet Q x A.",
            "VernacAssumption",
            "9ab452b89cad03722126a9b18c26a6bdd6ab7f14"
        ],
        [
            "Axiom euclid : forall A B C D T : Point, Bet A D T -> Bet B D C -> A<>D -> exists x, exists y, Bet A B x /\\ Bet A C y /\\ Bet x T y.",
            "VernacAssumption",
            "ceb9a6022c3ba6bb0aa79b7608461bbd091dfd7f"
        ],
        [
            "Axiom five_segments : forall A A' B B' C C' D D' : Point, Cong A B A' B' -> Cong B C B' C' -> Cong A D A' D' -> Cong B D B' D' -> Bet A B C -> Bet A' B' C' -> A <> B -> Cong C D C' D'.",
            "VernacAssumption",
            "abf077d3a1367f12b420cd8cf661e4ad4cadc29f"
        ],
        [
            "Axiom segment_construction : forall A B C D : Point, exists E : Point, Bet A B E /\\ Cong B E C D.",
            "VernacAssumption",
            "a94ee2d3f090003694e8ba268424252c2fb72858"
        ],
        [
            "Axiom lower_dim : exists A, exists B, exists C, ~ Col A B C.",
            "VernacAssumption",
            "e140001a1d8150de8afdbbe40182e781e2ff77e5"
        ],
        [
            "Axiom upper_dim : forall A B C P Q : Point, P <> Q -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q -> Col A B C.",
            "VernacAssumption",
            "9c3ec6f8f7e52d4669f64369c01aca70208b2bd4"
        ],
        [
            "Axiom continuity : forall X Y : Point -> Prop, (exists A : Point, (forall x y : Point, X x -> Y y -> Bet A x y)) -> exists B : Point, (forall x y : Point, X x -> Y y -> Bet x B y).",
            "VernacAssumption",
            "9e298867f40e8a767feb6c293d910d5cbd4cd9e6"
        ],
        [
            "Hint Resolve segment_construction five_segments inner_pasch euclid : Tarski.",
            "VernacHints",
            "42f79d5ccf09ce32119dd202d780964224eb9713"
        ],
        [
            "Hint Resolve cong_pseudo_reflexivity cong_identity between_identity : Tarski.",
            "VernacHints",
            "93a985600d9e8c37397ae371e98d61582568970c"
        ],
        [
            "Hint Resolve cong_inner_transitivity : Tarski.",
            "VernacHints",
            "66b0b869bf6e845c4cc97654911f813831eb27bd"
        ],
        [
            "Ltac eTarski := eauto with Tarski.",
            "VernacExtend",
            "78a1d264848646b0eda9589f5e23e9c7631447d7"
        ],
        [
            "Ltac Tarski := auto with Tarski.",
            "VernacExtend",
            "df5d2ecc92cae3fe5c8c93accd29cea57a94aea7"
        ],
        [
            "Lemma eq_dec_points : forall A B:Point, A=B \\/ ~ A=B.",
            "VernacStartTheoremProof",
            "0f61a2cdcdc0bbc4a18971412c2871426c4f6ae2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply classic.",
            "VernacExtend",
            "1b2266ca37ff8ebb5c2e9f426bd31f7b454a9eaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac cases_equality A B := elim (eq_dec_points A B);intros.",
            "VernacExtend",
            "d7d1d2bbea826bc1b3abf8f57d066068057e5dbf"
        ]
    ],
    "proofs": [
        {
            "name": "eq_dec_points",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply classic.",
                        "VernacExtend",
                        "1b2266ca37ff8ebb5c2e9f426bd31f7b454a9eaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}