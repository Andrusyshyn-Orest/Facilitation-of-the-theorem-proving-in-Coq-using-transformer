{
    "filename": "Ch07_midpoint.v",
    "coq_project": "tarski-geometry",
    "vernac_cmds": [
        [
            "Require Export Ch06_out_lines.",
            "VernacRequire",
            "dc162cb29de58ca94bfad6eaced84e8e12e91d11"
        ],
        [
            "Unset Regular Subst Tactic.",
            "VernacUnsetOption",
            "44cf9e6ec08d411fdf7c83dfa839af9ae86a8185"
        ],
        [
            "Definition is_midpoint := fun M A B => Bet A M B /\\ Cong A M M B.",
            "VernacDefinition",
            "cda947d7cadace876b9b7b982e79a4fd1af9073a"
        ],
        [
            "Lemma l7_2 : forall M A B, is_midpoint M A B -> is_midpoint M B A.",
            "VernacStartTheoremProof",
            "4b5cdfc4ae75dff08a035a3ddb56e20e34864a86"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_3 : forall M A, is_midpoint M A A -> M=A.",
            "VernacStartTheoremProof",
            "a7372ba0c7166d3bc301a268fbe1a03a0e5025e6"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_3_2 : forall A, is_midpoint A A A.",
            "VernacStartTheoremProof",
            "6dfcb658f661be59ee7621e7756d80162aff0546"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve l7_2 l7_3 l7_3_2 : Midpoint.",
            "VernacHints",
            "753b4b93112b2a2a7ec7d6de404a15be1ecbff4c"
        ],
        [
            "Ltac Midpoint := eauto with Midpoint.",
            "VernacExtend",
            "d44ffeb4620c77a9e43ff488e8e934cdd9b9af8e"
        ],
        [
            "Lemma symmetric_point_construction : forall A P, exists P', is_midpoint P A P'.",
            "VernacStartTheoremProof",
            "fc5a8276da3057827af682b4a521bc51cdfa402e"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists E : Point, Bet A P E /\\ Cong P E A P)...",
            "VernacExtend",
            "fd8a995c4e768a2642115b654a90e08e5fea2137"
        ],
        [
            "DecompExAnd H E.",
            "VernacExtend",
            "544ba82c4e565bf21740fefd6aa184785d2c99d0"
        ],
        [
            "exists E.",
            "VernacExtend",
            "c73d01b1c43419f5d15b43f4417f5bebb5434a17"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve symmetric_point_construction : Midpoint.",
            "VernacHints",
            "10dd1eb07bd7a4f63dbb51d30094b426b8d50019"
        ],
        [
            "Lemma symmetric_point_unicity : forall A P P1 P2, is_midpoint P A P1 -> is_midpoint P A P2 -> P1=P2.",
            "VernacStartTheoremProof",
            "5c578fa2eab2caaf3a340975fa49ac9f38bedb5c"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "cases_equality A P.",
            "VernacExtend",
            "00a067398cb25bbf850f7ff41c9a2a45d577ecf2"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "eapply construction_unicity; try apply H0...",
            "VernacExtend",
            "bcc8ccfaba12eced767f8662fbc75274ddfa756f"
        ],
        [
            "esTarski.",
            "VernacExtend",
            "8d590d7c94ab42b108ae5f37debd778082982ccd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_9 : forall P Q A X, is_midpoint A P X -> is_midpoint A Q X -> P=Q.",
            "VernacStartTheoremProof",
            "b86c3a88ffaa2cd314593e9662650d0f8b447ee7"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros;intuition.",
            "VernacExtend",
            "a3a2f16741f98e9ea7379aabbbb836b12cae069c"
        ],
        [
            "cases_equality A X.",
            "VernacExtend",
            "f475ba612c09bcd8bd7d52deaac0e14d7986a083"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "eapply (construction_unicity X A X A P Q);Between;sTarski.",
            "VernacExtend",
            "ba70bfaf3a28c75ed31a1960a227bcb025d025d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_13 : forall A P Q P' Q', is_midpoint A P' P -> is_midpoint A Q' Q -> Cong P Q P' Q'.",
            "VernacStartTheoremProof",
            "700ab7e154616bb2e499d08cde964d4e4deed304"
        ],
        [
            "Proof with sTarski.",
            "VernacProof",
            "32d6df26eedfa8e49de13417f4a1c5dcef345519"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality P A.",
            "VernacExtend",
            "5273bc28c5f7f289452fe6024c1ab57dcc1b3eb8"
        ],
        [
            "unfold is_midpoint in *.",
            "VernacExtend",
            "71a46b0bbf68b1b6c5cc62e16e73e4bfd0cdea1a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "assert (exists X, Bet P' P X /\\ Cong P X Q A)...",
            "VernacExtend",
            "70c92780d64ef99a3e1ca7801834a204cd7ebc1e"
        ],
        [
            "DecompExAnd H2 X.",
            "VernacExtend",
            "9e36ef10894db82820b4cb72536cbb57f95dbc75"
        ],
        [
            "assert (exists X', Bet X P' X' /\\ Cong P' X' Q A)...",
            "VernacExtend",
            "1e1ad9bb8774a37339c094b530d861e49df39af1"
        ],
        [
            "DecompExAnd H2 X'.",
            "VernacExtend",
            "7173d770af79998a0e831b5320e7cdff12817a43"
        ],
        [
            "assert (exists Y, Bet Q' Q Y /\\ Cong Q Y P A)...",
            "VernacExtend",
            "778ec4a9296bcf90d1381fe75a5348dce474f949"
        ],
        [
            "DecompExAnd H2 Y.",
            "VernacExtend",
            "903804ca812647c071e40601e3e80fa625704b62"
        ],
        [
            "assert (exists Y', Bet Y Q' Y' /\\ Cong Q' Y' P A)...",
            "VernacExtend",
            "14b168b37b597b4d4dde57983edec9949c64a7b5"
        ],
        [
            "DecompExAnd H2 Y'.",
            "VernacExtend",
            "7eea22a5ff753b1c31c5d145290e8cb98a5f5eda"
        ],
        [
            "unfold is_midpoint in *;intuition.",
            "VernacExtend",
            "b37d8b6585877eff8b2a40bf15d738ea0b75dc69"
        ],
        [
            "assert (Cong A X Y A).",
            "VernacExtend",
            "8cecfa40b5a6e84c6c3d6c38c0d2871fe0a1efd4"
        ],
        [
            "apply (l2_11 A P X Y Q A);Between...",
            "VernacExtend",
            "4f2150332e0d1652f6b5c9df6e5653dac39f37d7"
        ],
        [
            "assert (Cong A Y' X' A).",
            "VernacExtend",
            "097ec4c86f90ac3f5e889dec7d08b6bc130f2536"
        ],
        [
            "apply (l2_11 A Q' Y' X' P' A);Between.",
            "VernacExtend",
            "e159a74ac158819a4675f293d24f6ec90f4adff3"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "eapply cong_transitivity;eauto...",
            "VernacExtend",
            "44c0d1c68c9bfa90bd5681779e3cc3b51b748d91"
        ],
        [
            "assert (Cong A Y A Y').",
            "VernacExtend",
            "4173d3692371e16456db614232f5cd66ba531fe2"
        ],
        [
            "apply (l2_11 A Q Y A Q' Y');Between;eauto...",
            "VernacExtend",
            "3db0d8578d9f19db081f9e332216372761d98c52"
        ],
        [
            "eapply cong_transitivity;eauto...",
            "VernacExtend",
            "44c0d1c68c9bfa90bd5681779e3cc3b51b748d91"
        ],
        [
            "assert (FSC X A X' Y' Y' A Y X).",
            "VernacExtend",
            "de5276b637910e4ea2da09ceb9513aa302f93972"
        ],
        [
            "unfold FSC;repeat split.",
            "VernacExtend",
            "991311aec9ab3c70a5f0cba65d40723838aaca0e"
        ],
        [
            "unfold Col;left;Between.",
            "VernacExtend",
            "cf87023128ffeed7fc7b935e4fa67054c781f479"
        ],
        [
            "eapply cong_transitivity with (C:=Y) (D:=A)...",
            "VernacExtend",
            "2a3860f2c128ed5acd017cf0610cc4b7c74d97f0"
        ],
        [
            "4:eapply cong_transitivity with (C:=Y) (D:=A)...",
            "VernacExtend",
            "dfe9b7691ae9e32061bf4c61f1c37b858e62c8d0"
        ],
        [
            "2:eapply cong_transitivity with (C:=Y') (D:=A)...",
            "VernacExtend",
            "ee65182f08343f256ac5a45c99ce5f07eb81b386"
        ],
        [
            "2:Tarski.",
            "VernacExtend",
            "bc9c6cc772a295c8f3af7fbd9257fb869c996b19"
        ],
        [
            "eapply (l2_11 X A X' Y' A Y);Between.",
            "VernacExtend",
            "bfb07d3505a4bae35dfad6e2024c080fb8c09997"
        ],
        [
            "eapply cong_transitivity with (C:=Y) (D:=A)...",
            "VernacExtend",
            "2a3860f2c128ed5acd017cf0610cc4b7c74d97f0"
        ],
        [
            "eapply cong_transitivity with (C:=Y') (D:=A)...",
            "VernacExtend",
            "581e9041a463f8c1c28836565932f65493f3bfe2"
        ],
        [
            "assert (X<>A).",
            "VernacExtend",
            "5d29e78a8b816f035da4d622be8aaae272844036"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "assert (Cong X' Y' Y X).",
            "VernacExtend",
            "6c993e150566bcbfded0e4845126b5ef7ca7953d"
        ],
        [
            "eapply l4_16.",
            "VernacExtend",
            "43cdb6881f761cbe00ac88b97efdbe2764d3fe1a"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (IFSC Y Q A X Y' Q' A X').",
            "VernacExtend",
            "f50e7485a170900031a3337e30120c0bb6298fb7"
        ],
        [
            "unfold IFSC,FSC in *;intuition;Between...",
            "VernacExtend",
            "a243d4deb1d9bb79634e98e08026822f14ebfc34"
        ],
        [
            "eapply cong_transitivity with (C:=Y') (D:=A)...",
            "VernacExtend",
            "581e9041a463f8c1c28836565932f65493f3bfe2"
        ],
        [
            "assert (Cong Q X Q' X').",
            "VernacExtend",
            "e0fc9ee52ee0350cf82e6ff6d89c0eae20aa1cb4"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "assert (IFSC X P A Q X' P' A Q').",
            "VernacExtend",
            "9b7becad9dd2f62ebd597165b4a1e1160b454598"
        ],
        [
            "unfold IFSC,FSC in *;intuition;Between...",
            "VernacExtend",
            "a243d4deb1d9bb79634e98e08026822f14ebfc34"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_15 : forall P Q R P' Q' R' A, is_midpoint A P P' -> is_midpoint A Q Q' -> is_midpoint A R R' -> Bet P Q R -> Bet P' Q' R'.",
            "VernacStartTheoremProof",
            "8c473f0fddf9f3ac2d98fb1fda20ccd9849089af"
        ],
        [
            "Proof with Midpoint.",
            "VernacProof",
            "291a7f4cd63117f4ac4c9adcda018337916f88fc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split;eapply l7_13...",
            "VernacExtend",
            "fe3943286fed03c8d763df4db5d9a96f8095f31a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_16 : forall P Q R S P' Q' R' S' A, is_midpoint A P P' -> is_midpoint A Q Q' -> is_midpoint A R R' -> is_midpoint A S S' -> Cong P Q R S -> Cong P' Q' R' S'.",
            "VernacStartTheoremProof",
            "40ae5264bbbaf679e59b5ff5948a76aaddb56349"
        ],
        [
            "Proof with Midpoint.",
            "VernacProof",
            "291a7f4cd63117f4ac4c9adcda018337916f88fc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cong P Q P' Q').",
            "VernacExtend",
            "0e626c9203c01c1f6193b444885782d2a68c6bea"
        ],
        [
            "eapply l7_13...",
            "VernacExtend",
            "76bfdf9a6105c9c09633b3d032500038e1be19bc"
        ],
        [
            "assert (Cong R S R' S').",
            "VernacExtend",
            "9a40e4e799ed966c8eb06de6f95eaf9707760ac8"
        ],
        [
            "eapply l7_13...",
            "VernacExtend",
            "76bfdf9a6105c9c09633b3d032500038e1be19bc"
        ],
        [
            "eapply cong_transitivity with (C:=P) (D:=Q);sTarski.",
            "VernacExtend",
            "6f9b85c4f55c932c53aa355d600079f63a5581b4"
        ],
        [
            "eapply cong_transitivity with (C:=R) (D:=S);sTarski.",
            "VernacExtend",
            "6c0f565dfda737d169a08a4d91f06e6dce1a0134"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma symmetry_preserves_midpoint : forall A B C D E F Z, is_midpoint Z A D -> is_midpoint Z B E -> is_midpoint Z C F -> is_midpoint B A C -> is_midpoint E D F.",
            "VernacStartTheoremProof",
            "c9b2df1792656229151bc81a110d01bdde93b3a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold is_midpoint in H2.",
            "VernacExtend",
            "e226a05d765fc213d5d497be7b77eb2f80dc0649"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l7_15;eauto.",
            "VernacExtend",
            "7083b53d71c16ef418bb93449e114a4dde854dff"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply l7_16;eauto.",
            "VernacExtend",
            "7806ac31864b818099c1f964d55382f2cc387746"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve symmetry_preserves_midpoint : Midpoint.",
            "VernacHints",
            "2bbf9f98e8cc22ed633e08a4c6f19bbb077a23aa"
        ],
        [
            "Lemma l7_17 : forall P P' A B, is_midpoint A P P' -> is_midpoint B P P' -> A=B.",
            "VernacStartTheoremProof",
            "a89fa411a3ece1630e439644d5735a6fcbdea8e2"
        ],
        [
            "Proof with Midpoint.",
            "VernacProof",
            "291a7f4cd63117f4ac4c9adcda018337916f88fc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cong P B P' B).",
            "VernacExtend",
            "43172f4d2558f57ad338c21f433fe9ff8f241a91"
        ],
        [
            "eapply l7_13...",
            "VernacExtend",
            "76bfdf9a6105c9c09633b3d032500038e1be19bc"
        ],
        [
            "assert (exists B', is_midpoint A B B')...",
            "VernacExtend",
            "d47f81ff1f182a0c8a997ecbc2e1c23c6139ac94"
        ],
        [
            "DecompEx H2 B'.",
            "VernacExtend",
            "e8488be3bdaa5c09a5babb5073edd86c07664acb"
        ],
        [
            "assert (Cong P' B P B').",
            "VernacExtend",
            "b1c636d5fe903f040329b8a680feaad0970400cf"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "assert (Cong P B P B').",
            "VernacExtend",
            "33480aae1a2c5fc47a2e22a52da42de0b4f89cb4"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "assert (Cong P B P' B').",
            "VernacExtend",
            "749c93ded0f82db01fe567de4b69ed188445e955"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "assert (Cong P' B P' B').",
            "VernacExtend",
            "78c4920568bf7bd99062faaea049b0fa6ae00d67"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "assert (Bet P B P').",
            "VernacExtend",
            "a278432744f78f0403c0396a5bc9a6bd2207d014"
        ],
        [
            "unfold is_midpoint in *;intuition.",
            "VernacExtend",
            "b37d8b6585877eff8b2a40bf15d738ea0b75dc69"
        ],
        [
            "assert (B=B').",
            "VernacExtend",
            "d3a55d0ac488886a0e73853ef44d198b97fefab6"
        ],
        [
            "eapply l4_19.",
            "VernacExtend",
            "0e18216bc44f765195261b97dac2f7da4e645ef1"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "eapply l7_3...",
            "VernacExtend",
            "c3c3b7d8a531e32a7f50d9fbc16aca0ce567b872"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_20 : forall M A B, Col A M B -> Cong M A M B -> A=B \\/ is_midpoint M A B.",
            "VernacStartTheoremProof",
            "79215d951e190ac3c3246c2fd58df9e1fd16171f"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col in *;intuition.",
            "VernacExtend",
            "41e30f3763aa14790ce34c2a394290ed593a58db"
        ],
        [
            "assert (Cong A B B B).",
            "VernacExtend",
            "429628e8831aafb4ac253fd39f43b5e691ce6fa5"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "apply between_symmetry;apply H.",
            "VernacExtend",
            "ae11a3edb49f78426adadd8cb73fd396ceedcce3"
        ],
        [
            "2:apply cong_commutativity;apply H0.",
            "VernacExtend",
            "7d9ff085725d22d2f75350c43cc9129d4f5c88a9"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "left;auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "assert (Cong B A A A).",
            "VernacExtend",
            "1a14738d3ca12d1637efba92ef6096662845a4e8"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "2:apply cong_commutativity;apply cong_symmetry;apply H0.",
            "VernacExtend",
            "78da7e3ac01a89bfd47791c84d748bcbae8a667c"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "left;auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_21 : forall A B C D P, ~ Col A B C -> B<>D -> Cong A B C D -> Cong B C D A -> Col A P C -> Col B P D -> is_midpoint P A C /\\ is_midpoint P B D.",
            "VernacStartTheoremProof",
            "a17c3bdb3f014c7ca7d11f0bc88a593f3450d080"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists P', Cong_3 B D P D B P').",
            "VernacExtend",
            "596e9d08983f661a761a7173baa32e0af3cc5f8a"
        ],
        [
            "apply l4_14;Col...",
            "VernacExtend",
            "82b7e8b3c316a70a70e23d0f25faff0a01ef20ce"
        ],
        [
            "DecompEx H5 P'.",
            "VernacExtend",
            "e3b6bd4a74621e5216f296d4d0bb3fc9a89dbb6b"
        ],
        [
            "assert (Col D B P').",
            "VernacExtend",
            "99f93505c23a7ab1ed4bc3daa5dc78796fc88fc6"
        ],
        [
            "eapply l4_13;try apply H6;Col...",
            "VernacExtend",
            "3b8a747502b7f312b0e7da171b0b6ca909352b02"
        ],
        [
            "assert (FSC B D P A D B P' C).",
            "VernacExtend",
            "8ecabf9f3669bafd52399087c9464cc6c2252bd3"
        ],
        [
            "unfold FSC;intuition...",
            "VernacExtend",
            "00bbfbebd04738c7c2e967af1d6301f79cca4093"
        ],
        [
            "assert (FSC B D P C D B P' A).",
            "VernacExtend",
            "00b716d06c4f718a760c83cf8341d7068d946036"
        ],
        [
            "unfold FSC;intuition...",
            "VernacExtend",
            "00bbfbebd04738c7c2e967af1d6301f79cca4093"
        ],
        [
            "assert (Cong P A P' C).",
            "VernacExtend",
            "43b6be71e614feabf5b51d035cb1989a6421fb94"
        ],
        [
            "eapply l4_16; try apply H7...",
            "VernacExtend",
            "8ba3fd1992e73f518a0240c61e077a779fed89f3"
        ],
        [
            "assert (Cong P C P' A).",
            "VernacExtend",
            "f420957e264cee258e1ebe6438a0ac2b1040e719"
        ],
        [
            "eapply l4_16; try apply H8...",
            "VernacExtend",
            "4e1626e608aae8d47c497d3baf8497d34615b42c"
        ],
        [
            "assert (Cong_3 A P C C P' A).",
            "VernacExtend",
            "c77b21a57482d13801906fcac817b9a06777e912"
        ],
        [
            "unfold Cong_3;intuition...",
            "VernacExtend",
            "d30e441c59f1369f34e78fddee1606441a5d9406"
        ],
        [
            "assert (Col C P' A).",
            "VernacExtend",
            "d52137bbb0bd3df1f9cdd12b9eddc62da06b0040"
        ],
        [
            "eapply l4_13;try apply H11...",
            "VernacExtend",
            "3a7002a407b2438cf09fdd6f5d06e03fd21b9372"
        ],
        [
            "assert (P=P').",
            "VernacExtend",
            "efb53ed951b39e00fb74ceeb97049153d5a35a41"
        ],
        [
            "unfold FSC in *;intuition.",
            "VernacExtend",
            "1c0017ab024f80d30ed11ffaef927c925379f1a9"
        ],
        [
            "eapply (l6_21 A C B D);Col...",
            "VernacExtend",
            "3ecdae265d48087762fa56fd49a125c2e016b787"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (C = A \\/ is_midpoint P C A).",
            "VernacExtend",
            "729232512222709b04bdd6b43a0d62fa2d7fadb5"
        ],
        [
            "eapply l7_20;Col...",
            "VernacExtend",
            "b34da244957c263cd26057612b087406f8ca8698"
        ],
        [
            "assert (B = D \\/ is_midpoint P B D).",
            "VernacExtend",
            "7a1821d4bdfc38b3f7f9e374bb9b7aa88e3f89e5"
        ],
        [
            "eapply l7_20;Col...",
            "VernacExtend",
            "b34da244957c263cd26057612b087406f8ca8698"
        ],
        [
            "unfold FSC,Cong_3 in *.",
            "VernacExtend",
            "4946d2d76e5e6500c54621316974449c5af291f4"
        ],
        [
            "intuition;sTarski...",
            "VernacExtend",
            "4fc5b722c7af557c9d8fe74f456ca4ec92ca6fd1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold is_midpoint,FSC,Cong_3 in *;intuition.",
            "VernacExtend",
            "6ec53ee89500fffd239d26dd1dcf0478fd6c09d5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "clear H13 H21 H26 H2 H4 H5 H6.",
            "VernacExtend",
            "644d5127bff1b99a3040d55a74ae7dc1e7d83f99"
        ],
        [
            "unfold Col in H.",
            "VernacExtend",
            "4ff59ad823bef04ef5effb01a66f0264e5dd36d6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Bet C C B)...",
            "VernacExtend",
            "abb922f2bf3382a11b58823d4c536b77214b3f0a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_22_aux : forall A1 A2 B1 B2 C M1 M2, Bet A1 C A2 -> Bet B1 C B2 -> Cong C A1 C B1 -> Cong C A2 C B2 -> is_midpoint M1 A1 B1 -> is_midpoint M2 A2 B2 -> le C A1 C A2 -> Bet M1 C M2.",
            "VernacStartTheoremProof",
            "70bd15e731ecb998e10ea157b947c3cafe7a093b"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality A2 C.",
            "VernacExtend",
            "bddfb8f20a0a11edfed772f5c6f1b453de06a4d1"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (M2=A2).",
            "VernacExtend",
            "859ac92c5ea6eb8c7f4388f4207bca98d00a62d1"
        ],
        [
            "apply l7_3...",
            "VernacExtend",
            "dd9f628398138734ea538409bcb1b117a1982a91"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "assert (exists A, is_midpoint C A2 A).",
            "VernacExtend",
            "f41c3464e891b93f210b204226eef3f20c5caa7e"
        ],
        [
            "eapply symmetric_point_construction.",
            "VernacExtend",
            "ca6f2d0255aca5a272ca4fd1f595aa2054561bb0"
        ],
        [
            "DecompEx H7 A.",
            "VernacExtend",
            "72c5f51424b7f4f156b51dd80921dce35e10ce97"
        ],
        [
            "assert (exists B, is_midpoint C B2 B).",
            "VernacExtend",
            "ccc12d641ee5d83434461a8b29dd8bbedb9d9e1c"
        ],
        [
            "eapply symmetric_point_construction.",
            "VernacExtend",
            "ca6f2d0255aca5a272ca4fd1f595aa2054561bb0"
        ],
        [
            "DecompEx H7 B.",
            "VernacExtend",
            "3eb445c89520821ac33bdbdffb06f200ae323993"
        ],
        [
            "assert (exists M, is_midpoint C M2 M).",
            "VernacExtend",
            "5a68958d45267cc55e8ae5751641dc2a5c1bffe9"
        ],
        [
            "eapply symmetric_point_construction.",
            "VernacExtend",
            "ca6f2d0255aca5a272ca4fd1f595aa2054561bb0"
        ],
        [
            "DecompEx H7 M.",
            "VernacExtend",
            "5903c698b076483f3fce4c8cda20603a8b681860"
        ],
        [
            "assert (is_midpoint M A B).",
            "VernacExtend",
            "de5dc66c046ac50f2da042ccbfba4447e0a344f5"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l7_15.",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold is_midpoint in H4;intuition...",
            "VernacExtend",
            "964e6888f15caa935b98bf0081fb5fc347b33640"
        ],
        [
            "eapply l7_16.",
            "VernacExtend",
            "6eaff32315bcf11730d79451b7c237bd5472b01a"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold is_midpoint in *;intuition...",
            "VernacExtend",
            "6b17bd2ec2d36f830dfc2853e32b71231940cfad"
        ],
        [
            "assert (le C A1 C A).",
            "VernacExtend",
            "b82e79dbb10fef54236eb7e6896e546fc2a58675"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "unfold is_midpoint in H8;intuition.",
            "VernacExtend",
            "1e2c9a895f1545171ffacb4b7005aeb6a69d7352"
        ],
        [
            "assert (Bet C A1 A).",
            "VernacExtend",
            "d401d6da3b0a3330d0470192449eaefd098e748d"
        ],
        [
            "cases_equality A1 C.",
            "VernacExtend",
            "41ea888305eac13029d441d9ddf54a77f0ff6bea"
        ],
        [
            "subst;Tarski.",
            "VernacExtend",
            "62db23969d34039380c8112f92a675f42f667a10"
        ],
        [
            "eapply l6_13_1.",
            "VernacExtend",
            "35cc9a48e715f79b63b843076b85c8d786f00f02"
        ],
        [
            "2:auto.",
            "VernacExtend",
            "39c1ddb0360c4672841c6c9a8ce0db8d5b584563"
        ],
        [
            "unfold out;repeat split;auto.",
            "VernacExtend",
            "e42102a7d8cb7cb2dd0a2aff738cd5cc7677b0a1"
        ],
        [
            "unfold not;intro;treat_equalities.",
            "VernacExtend",
            "19a36cb6abf3f6a301dac0137263903b9615053c"
        ],
        [
            "assert (A=A1).",
            "VernacExtend",
            "7d47b87f86bbe88a36d2a400df489a5346dba22f"
        ],
        [
            "eapply le_zero.",
            "VernacExtend",
            "f7b33ce0a055bc0bc5a997b468ac1cbe36819ae1"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (M1=A).",
            "VernacExtend",
            "04eb935494e97acb48245f65ad82ab104ff72059"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold is_midpoint in H8.",
            "VernacExtend",
            "3b6bb50c4d6085b29e09e53bdc5a644fa22a4c7c"
        ],
        [
            "decompose [and] H8;clear H8.",
            "VernacExtend",
            "ac1537975e6dbf261cad4fa2f11ab02151fb2d6e"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "3:apply H13.",
            "VernacExtend",
            "e37e9c12c3954fa0a55bb7b682a178741f0076e6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert (le C B1 C B).",
            "VernacExtend",
            "a4bd3162f12965b8ba2802ecd4b0bfa709a45c39"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "eapply cong_transitivity with (C:=C) (D:=A2).",
            "VernacExtend",
            "4a760cc2ff11e276a91c284fa62df15f8a157364"
        ],
        [
            "unfold is_midpoint in H8;intuition.",
            "VernacExtend",
            "1e2c9a895f1545171ffacb4b7005aeb6a69d7352"
        ],
        [
            "eapply cong_transitivity with (C:=C) (D:=B2).",
            "VernacExtend",
            "6e268fd736c54d68235bf272306e42dd3114d613"
        ],
        [
            "unfold is_midpoint in H8;intuition.",
            "VernacExtend",
            "1e2c9a895f1545171ffacb4b7005aeb6a69d7352"
        ],
        [
            "unfold is_midpoint in H9;intuition.",
            "VernacExtend",
            "069260e8e1a24fae37c8eaa8fce91633e5d1b602"
        ],
        [
            "assert (Bet C B1 B).",
            "VernacExtend",
            "3ed30a9850d92e5bb1a90a9242fd597574e46df4"
        ],
        [
            "cases_equality B1 C.",
            "VernacExtend",
            "94e23972306a463f62775a35682274b5a412a1ed"
        ],
        [
            "subst;Tarski.",
            "VernacExtend",
            "62db23969d34039380c8112f92a675f42f667a10"
        ],
        [
            "eapply l6_13_1.",
            "VernacExtend",
            "35cc9a48e715f79b63b843076b85c8d786f00f02"
        ],
        [
            "2:auto.",
            "VernacExtend",
            "39c1ddb0360c4672841c6c9a8ce0db8d5b584563"
        ],
        [
            "unfold out;repeat split;auto.",
            "VernacExtend",
            "e42102a7d8cb7cb2dd0a2aff738cd5cc7677b0a1"
        ],
        [
            "unfold not;intro;treat_equalities.",
            "VernacExtend",
            "19a36cb6abf3f6a301dac0137263903b9615053c"
        ],
        [
            "assert (B=B1).",
            "VernacExtend",
            "78ed658de16df505913837b155fda344f776f786"
        ],
        [
            "eapply le_zero.",
            "VernacExtend",
            "f7b33ce0a055bc0bc5a997b468ac1cbe36819ae1"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (M1=B).",
            "VernacExtend",
            "f7e763f4bc0076cc448614bdbddd501fce661835"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold is_midpoint in H9.",
            "VernacExtend",
            "8885468917a2fbb45c85b3d48054c9367b388eee"
        ],
        [
            "decompose [and] H9;clear H9.",
            "VernacExtend",
            "3693ca02d5d8f56a3f2e8a91c2295cf63ffdcc32"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "3:apply H15.",
            "VernacExtend",
            "6387246b0953e986ad996a2e795d7d82a856129b"
        ],
        [
            "2:Between.",
            "VernacExtend",
            "811d99815af95fd88a7c6f66fba3b19f4cd77ce4"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (exists Q, Bet M Q C /\\ Bet A1 Q B1).",
            "VernacExtend",
            "9289c7b08d41e640fe36046c63553b223f16cfa5"
        ],
        [
            "eapply l3_17.",
            "VernacExtend",
            "5a9204bf12e810952957de6ac76efe20e1c29988"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "unfold is_midpoint in H7;intuition.",
            "VernacExtend",
            "9590ee94dfbea329d5f1b65753df21b54fe2c3a8"
        ],
        [
            "DecompExAnd H15 Q.",
            "VernacExtend",
            "d8f6332ca44c892b4c59118e27b0d40545e6b4e4"
        ],
        [
            "assert (Bet Q C M2).",
            "VernacExtend",
            "4a209d3e6d0e791463f9e2847e5874dfae1c5d82"
        ],
        [
            "unfold is_midpoint in H10;intuition;Between.",
            "VernacExtend",
            "957eb9842d8664a5e7868c29f1fdf59f72cda8c5"
        ],
        [
            "cut (Q=M1).",
            "VernacExtend",
            "9975c747cc8c21c3632587dbad768a68749cfae7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M1;auto.",
            "VernacExtend",
            "bdc5f6f6b1c6a149cefee3f151b9f89d42cc2938"
        ],
        [
            "assert (IFSC A A1 C M B B1 C M).",
            "VernacExtend",
            "8d762a5a1effd1bfcd9602f8811a99f3348f05c8"
        ],
        [
            "unfold IFSC;unfold is_midpoint in *;intuition.",
            "VernacExtend",
            "ac8be8f089189705578d8bc047ee0d4676efa718"
        ],
        [
            "eapply cong_transitivity with (C:=C) (D:=A2).",
            "VernacExtend",
            "4a760cc2ff11e276a91c284fa62df15f8a157364"
        ],
        [
            "unfold is_midpoint in H8;intuition.",
            "VernacExtend",
            "1e2c9a895f1545171ffacb4b7005aeb6a69d7352"
        ],
        [
            "eapply cong_transitivity with (C:=C) (D:=B2).",
            "VernacExtend",
            "6e268fd736c54d68235bf272306e42dd3114d613"
        ],
        [
            "unfold is_midpoint in H8;intuition.",
            "VernacExtend",
            "1e2c9a895f1545171ffacb4b7005aeb6a69d7352"
        ],
        [
            "unfold is_midpoint in H9;intuition.",
            "VernacExtend",
            "069260e8e1a24fae37c8eaa8fce91633e5d1b602"
        ],
        [
            "assert (Cong A1 M B1 M).",
            "VernacExtend",
            "8057825ee5c3470020704b584d723154fb3bd7f2"
        ],
        [
            "eapply l4_2;eauto.",
            "VernacExtend",
            "dc3c0adee93e3f019b52f3a0ebed35b7fb331a8d"
        ],
        [
            "assert (Cong Q A1 Q B1).",
            "VernacExtend",
            "e7d24da0588d2107dec4658745909060731c0a92"
        ],
        [
            "cases_equality M C.",
            "VernacExtend",
            "b96202a524de659b6ce2ac581c5ddf36ae5827ad"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "eapply l4_17.",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (is_midpoint Q A1 B1).",
            "VernacExtend",
            "bb32a0ccc8a9d36c72c5dd53fe6897bf909b223f"
        ],
        [
            "unfold is_midpoint;intuition.",
            "VernacExtend",
            "a124e71d07263d62e64654ba56761ad9c774730c"
        ],
        [
            "eapply l7_17;eauto.",
            "VernacExtend",
            "e96460bb20bf71c2d76bfeb23be5d192d2075fd9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_22 : forall A1 A2 B1 B2 C M1 M2, Bet A1 C A2 -> Bet B1 C B2 -> Cong C A1 C B1 -> Cong C A2 C B2 -> is_midpoint M1 A1 B1 -> is_midpoint M2 A2 B2 -> Bet M1 C M2.",
            "VernacStartTheoremProof",
            "4376cb27c3326c6b80a28080575d91c4d630ccd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (le C A1 C A2 \\/ le C A2 C A1).",
            "VernacExtend",
            "cc9a9b8387f792b4a7a69c855b3af8a8da3fd6af"
        ],
        [
            "eapply le_cases.",
            "VernacExtend",
            "97f452554850955682efe2021fde2db07bca7ae8"
        ],
        [
            "elim H5;intro.",
            "VernacExtend",
            "29923dfc32add298aa4e01bbfee147f65e05faf2"
        ],
        [
            "eapply (l7_22_aux A1 A2 B1 B2 C M1 M2);auto.",
            "VernacExtend",
            "a592ad373e9cdeaed8f1c9a40ffb65dfe9012f3f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply (l7_22_aux A2 A1 B2 B1 C M2 M1);try assumption;Between.",
            "VernacExtend",
            "4209c3b0a2cc480723a595a8d1618f42869a6a35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_25 : forall A B C, Cong C A C B -> exists X, is_midpoint X A B.",
            "VernacStartTheoremProof",
            "15f17cd8904aa2f9e5e07e3947e8c006e590b5c7"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col A B C.",
            "VernacExtend",
            "89895fb360e422e58cd86d6bfdc183e368707d1b"
        ],
        [
            "assert (A = B \\/ is_midpoint C A B).",
            "VernacExtend",
            "814405fd76e7ced26d6132b1ec528a1f01b98b95"
        ],
        [
            "apply l7_20...",
            "VernacExtend",
            "78e09ed7170ba73e6bfc551057ca39a0c8330fa5"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists A;subst B;Midpoint.",
            "VernacExtend",
            "5141632ea4daa5bc11f0dac06faad9cbb68f0b58"
        ],
        [
            "exists C...",
            "VernacExtend",
            "8ad17a1a6ec44251315e19b943c56ccd95123c2b"
        ],
        [
            "assert (exists P, Bet C A P /\\ A<>P)...",
            "VernacExtend",
            "dc640df0f098bc179090df92d0ba9475692d7f8d"
        ],
        [
            "DecompExAnd H1 P.",
            "VernacExtend",
            "b64552421b13c5a91266471cf8be796831389593"
        ],
        [
            "assert (exists Q, Bet C B Q /\\ Cong B Q A P)...",
            "VernacExtend",
            "15f7c19acfe4e2b5620eaf74bf8477692a195a92"
        ],
        [
            "DecompExAnd H1 Q.",
            "VernacExtend",
            "9920c60368867d262a6dbdff454267064c95ec1f"
        ],
        [
            "assert (exists R, Bet A R Q /\\ Bet B R P).",
            "VernacExtend",
            "0f804bcd5f7d5160d8af3de15e072d3f700c212e"
        ],
        [
            "eapply inner_pasch;Between.",
            "VernacExtend",
            "63a940e42d260d489e34bc918256eb26e333bb53"
        ],
        [
            "DecompExAnd H1 R.",
            "VernacExtend",
            "7c4dc6bbfc060fcdca88a57ebc0d0205a0014712"
        ],
        [
            "assert (exists X, Bet A X B /\\ Bet R X C).",
            "VernacExtend",
            "6aa989a977408a88efe129716088b1cf041dbdba"
        ],
        [
            "eapply inner_pasch;Between.",
            "VernacExtend",
            "63a940e42d260d489e34bc918256eb26e333bb53"
        ],
        [
            "DecompExAnd H1 X.",
            "VernacExtend",
            "57d8f1f3e16667a13e3f55dc5ae9731e609d571c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold is_midpoint.",
            "VernacExtend",
            "686de3c7fdec190ded1d44c91d73c90f6189f60c"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "cut (Cong R A R B).",
            "VernacExtend",
            "30499968e37fe755f6198f9fd25514eeb343940d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply l4_17.",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "3:apply H1.",
            "VernacExtend",
            "4176e02a32f72349882e582837adf7508e99b80a"
        ],
        [
            "3:apply H.",
            "VernacExtend",
            "af9b3cdf5f3a1f87c8cdc1914e68b5f3bb3edca5"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (Col A B R);Col.",
            "VernacExtend",
            "64b86e88fae502208571da027ec4c28c8c95a00c"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (C<>A).",
            "VernacExtend",
            "1d8fcbc41f18d9025304394dcb66af0b899f9ecf"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "unfold Col in H0.",
            "VernacExtend",
            "05e20572842b5f6fa671fda6d87d6784bb278582"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (OFSC C A P B C B Q A).",
            "VernacExtend",
            "8bd5c092d031d74129e3161b89e64933b418cbc2"
        ],
        [
            "unfold OFSC,Cong_3;intuition.",
            "VernacExtend",
            "5b21fece76d97f745ea243cb1ba05f53f89fd602"
        ],
        [
            "assert (Cong P B Q A).",
            "VernacExtend",
            "06e1daf72b4cb5dd9679871c4b76778621ab4365"
        ],
        [
            "eapply five_segments_with_def.",
            "VernacExtend",
            "5ee2b6ab2f25fad89719dff8fae3ae9c5f762366"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assert (exists R', Bet A R' Q /\\ Cong_3 B R P A R' Q).",
            "VernacExtend",
            "6a36f14403ff64904876e271f91986228a250cfe"
        ],
        [
            "eapply l4_5...",
            "VernacExtend",
            "5079213dd19c92ecd0bd97437941486f2800fb8f"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "DecompExAnd H12 R'.",
            "VernacExtend",
            "fe504ba860ad59cfee86968ffa20012cd40bebd5"
        ],
        [
            "assert (IFSC B R P A A R' Q B).",
            "VernacExtend",
            "77d6344e4cc29524a2b3d1363dfeda42b6e2cd13"
        ],
        [
            "unfold IFSC,Cong_3 in*;intuition.",
            "VernacExtend",
            "9d9ad74a1b96ff3bebc8722bd9a640fbff585391"
        ],
        [
            "assert (IFSC B R P Q A R' Q P).",
            "VernacExtend",
            "0f15dc448c5f7aeb09be38329c98f16af32e612f"
        ],
        [
            "unfold IFSC,Cong_3 in*;intuition.",
            "VernacExtend",
            "9d9ad74a1b96ff3bebc8722bd9a640fbff585391"
        ],
        [
            "assert (Cong R A R' B).",
            "VernacExtend",
            "687a0f77ff00c152b5ad8838782e87fa10616db1"
        ],
        [
            "eapply l4_2;eauto.",
            "VernacExtend",
            "dc3c0adee93e3f019b52f3a0ebed35b7fb331a8d"
        ],
        [
            "assert (Cong R Q R' P).",
            "VernacExtend",
            "52c9515ceb4d3ec3d9c5a12bc2492493ad976ab0"
        ],
        [
            "eapply l4_2;eauto.",
            "VernacExtend",
            "dc3c0adee93e3f019b52f3a0ebed35b7fb331a8d"
        ],
        [
            "assert (Cong_3 A R Q B R' P).",
            "VernacExtend",
            "0b170df660752d3ffe0f5bd736228870dad21a55"
        ],
        [
            "unfold Cong_3;intuition.",
            "VernacExtend",
            "559e40ffc53ab06f26af96d7f9e831a9f0bc6bc4"
        ],
        [
            "assert (Col B R' P).",
            "VernacExtend",
            "aff70d6f64d37b857572475c69829ca635dd876d"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "2:apply H18.",
            "VernacExtend",
            "265560a9c02d6dea1d7e8fc012934e35c2f2e208"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "cut (R=R').",
            "VernacExtend",
            "50c77ba0f1e7f3b89e4ab80a0635a544c95d5abf"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (B<>P).",
            "VernacExtend",
            "071de7574839baf9590f111c5e6834c84589113e"
        ],
        [
            "unfold not;intro;treat_equalities...",
            "VernacExtend",
            "ac509de614cdc5640c99693d7d9ce058db9781b2"
        ],
        [
            "assert (A<>Q).",
            "VernacExtend",
            "d7bc2b8a7c98968dfaebb987c51a0a4bf2348967"
        ],
        [
            "unfold not;intro;treat_equalities...",
            "VernacExtend",
            "ac509de614cdc5640c99693d7d9ce058db9781b2"
        ],
        [
            "assert (B<>Q).",
            "VernacExtend",
            "f2d0296ec739e4ffa59c72cec7847db94d0d0d41"
        ],
        [
            "unfold not;intro;treat_equalities...",
            "VernacExtend",
            "ac509de614cdc5640c99693d7d9ce058db9781b2"
        ],
        [
            "eapply (l6_21 A Q B P R R' );Col.",
            "VernacExtend",
            "20e97fc4e252bc8d63e63280743758322bcec701"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (B<>R).",
            "VernacExtend",
            "d080aae81f744e330a70a14046d64a173dd34205"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "unfold OFSC,IFSC,Cong_3 in *.",
            "VernacExtend",
            "b41b7a4621658ad30110e529140c8c290982318d"
        ],
        [
            "decompose [and] H2;clear H2.",
            "VernacExtend",
            "f6d7aece6ec31e6a0cdc3e12ffa3944bd0a6ab9d"
        ],
        [
            "decompose [and] H15;clear H15.",
            "VernacExtend",
            "463e073097d7c10f2ea4b07bed2adcf9b53dd48e"
        ],
        [
            "decompose [and] H12;clear H12.",
            "VernacExtend",
            "93b3819bf82918a5b85c3890903e90c3999eba6c"
        ],
        [
            "decompose [and] H13;clear H13.",
            "VernacExtend",
            "361f148cac128f4c750bb2f1336a7aecaec4d640"
        ],
        [
            "decompose [and] H18;clear H18.",
            "VernacExtend",
            "ddfa69b8038cbe577324cc8830bcacab68b450e9"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "assert (Col B C A).",
            "VernacExtend",
            "4f429e27beb5da30e0515f28432c692b2271dad4"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A B C).",
            "VernacExtend",
            "82d0449f5d77661ea5f55e45336758296906e1ab"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col A R B).",
            "VernacExtend",
            "2e154ef253cbd0f4a787da1a93a9983a85c2b383"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col B P A).",
            "VernacExtend",
            "01f4f2df19ac1ee41bd4745ad88c8ee741b20539"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A B C).",
            "VernacExtend",
            "82d0449f5d77661ea5f55e45336758296906e1ab"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "symmetry_preserves_midpoint",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold is_midpoint in H2.",
                        "VernacExtend",
                        "e226a05d765fc213d5d497be7b77eb2f80dc0649"
                    ]
                },
                {
                    "command": [
                        "unfold is_midpoint.",
                        "VernacExtend",
                        "686de3c7fdec190ded1d44c91d73c90f6189f60c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply l7_15;eauto.",
                        "VernacExtend",
                        "7083b53d71c16ef418bb93449e114a4dde854dff"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "eapply l7_16;eauto.",
                        "VernacExtend",
                        "7806ac31864b818099c1f964d55382f2cc387746"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_22",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (le C A1 C A2 \\/ le C A2 C A1).",
                        "VernacExtend",
                        "cc9a9b8387f792b4a7a69c855b3af8a8da3fd6af"
                    ]
                },
                {
                    "command": [
                        "eapply le_cases.",
                        "VernacExtend",
                        "97f452554850955682efe2021fde2db07bca7ae8"
                    ]
                },
                {
                    "command": [
                        "elim H5;intro.",
                        "VernacExtend",
                        "29923dfc32add298aa4e01bbfee147f65e05faf2"
                    ]
                },
                {
                    "command": [
                        "eapply (l7_22_aux A1 A2 B1 B2 C M1 M2);auto.",
                        "VernacExtend",
                        "a592ad373e9cdeaed8f1c9a40ffb65dfe9012f3f"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "eapply (l7_22_aux A2 A1 B2 B1 C M2 M1);try assumption;Between.",
                        "VernacExtend",
                        "4209c3b0a2cc480723a595a8d1618f42869a6a35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}