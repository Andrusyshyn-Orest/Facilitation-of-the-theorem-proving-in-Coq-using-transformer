{
    "filename": "Ch08_orthogonality.v",
    "coq_project": "tarski-geometry",
    "vernac_cmds": [
        [
            "Require Export Ch07_midpoint.",
            "VernacRequire",
            "c2a026a8d357bc65ba85c3c548527df224f360e0"
        ],
        [
            "Unset Regular Subst Tactic.",
            "VernacUnsetOption",
            "44cf9e6ec08d411fdf7c83dfa839af9ae86a8185"
        ],
        [
            "Definition Per := fun A B C => exists C', is_midpoint B C C' /\\ Cong A C A C'.",
            "VernacDefinition",
            "2fc53689b85d3a266bdc8853710b997405149d02"
        ],
        [
            "Lemma l8_2 : forall A B C, Per A B C -> Per C B A.",
            "VernacStartTheoremProof",
            "591e66a374d16f427fc62ba45eeb4ce8a6d9b65b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in *.",
            "VernacExtend",
            "cb7b87362e910ccf5bf8015ae43a235e8db00d3d"
        ],
        [
            "DecompExAnd H C'.",
            "VernacExtend",
            "d41fd882c58f9c5ee99e30bbb3eb923a8ef8e188"
        ],
        [
            "assert (exists A', is_midpoint B A A').",
            "VernacExtend",
            "3f6d2b30a8a3a336d41b7cde175077c4c34df6f3"
        ],
        [
            "apply symmetric_point_construction.",
            "VernacExtend",
            "0e736e1cb621ad02a9cdd97f5d4140f372fe8c7e"
        ],
        [
            "DecompEx H A'.",
            "VernacExtend",
            "0c34aaaddc40fab48a2b942b4dd4182bfe37aead"
        ],
        [
            "assert (Cong C' A' C A).",
            "VernacExtend",
            "ca0750171f25c8f22add4bf9a684ac86de0efa76"
        ],
        [
            "eapply l7_13;eauto.",
            "VernacExtend",
            "235401e68fc3f27ffbfcb72549be277bc73ba788"
        ],
        [
            "assert (Cong A C' A' C).",
            "VernacExtend",
            "b1dc688895aa8945fc8461049b588e5f860f63e5"
        ],
        [
            "eapply l7_13;eauto.",
            "VernacExtend",
            "235401e68fc3f27ffbfcb72549be277bc73ba788"
        ],
        [
            "eapply l7_2.",
            "VernacExtend",
            "26f6438992aee2c1c749148ef57b8a0bdda90f82"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold is_midpoint in *;intuition.",
            "VernacExtend",
            "b37d8b6585877eff8b2a40bf15d738ea0b75dc69"
        ],
        [
            "eapply cong_transitivity with (C:=A) (D:=C').",
            "VernacExtend",
            "8f0453565a029f443ced906fb34ba3d518166297"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve l8_2 : Perp.",
            "VernacHints",
            "a616ce82d34a68d7a42f301d546fd926064892a7"
        ],
        [
            "Ltac Perp := eauto with Perp.",
            "VernacExtend",
            "dce52b76fd027376d19b29515ef2176954f385a0"
        ],
        [
            "Lemma l8_3 : forall A B C A', Per A B C -> A<>B -> Col B A A' -> Per A' B C.",
            "VernacStartTheoremProof",
            "993e16ebb3134dea90596aa78c44f07beb58c169"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "DecompExAnd H C'.",
            "VernacExtend",
            "d41fd882c58f9c5ee99e30bbb3eb923a8ef8e188"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply (l4_17).",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "unfold not;apply H0.",
            "VernacExtend",
            "461c48512846c3f2636f09aebc13e76100a11942"
        ],
        [
            "eauto with Col.",
            "VernacExtend",
            "727567e3b2ba105a415bb2dc87d26b06a75c838a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold is_midpoint in H3;intuition.",
            "VernacExtend",
            "fd48ba17f95df64e3ea477569af369d6f2c8d336"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_4 : forall A B C C', Per A B C -> is_midpoint B C C' -> Per A B C'.",
            "VernacStartTheoremProof",
            "ad20145edeb4d1b1fd0b216b21f2c5b1cc74869a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "DecompExAnd H C''.",
            "VernacExtend",
            "a890097e0bf7927b4c45e923600c9d3d64d1d3cb"
        ],
        [
            "assert (C' =C'').",
            "VernacExtend",
            "abda04dea222a65794dde7d4d32363023cd58a5d"
        ],
        [
            "eapply symmetric_point_unicity.",
            "VernacExtend",
            "6e140470247d39a5996dc5b80dbd804d822e6b44"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "smart_subst C''.",
            "VernacExtend",
            "a7890d56155b3fcb28510bc076d811b2b1b24e51"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_5 : forall A B, Per A B B.",
            "VernacStartTheoremProof",
            "9034c9227dec871cb029e515755eca491d97a57c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists B;intuition.",
            "VernacExtend",
            "2a37218f1806581ff3ae84eadc3cc6f222bd19ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve l8_5 : Perp.",
            "VernacHints",
            "49f852e160266c20acbe2600267d00c1d6491f2c"
        ],
        [
            "Lemma l8_6 : forall A B C A', Per A B C -> Per A' B C -> Bet A C A' -> B=C.",
            "VernacStartTheoremProof",
            "6d4afec1dddd88c9b3e9064000e8bda6c883f122"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in *.",
            "VernacExtend",
            "cb7b87362e910ccf5bf8015ae43a235e8db00d3d"
        ],
        [
            "DecompExAnd H C'.",
            "VernacExtend",
            "d41fd882c58f9c5ee99e30bbb3eb923a8ef8e188"
        ],
        [
            "suppose (Cong A' C A' C').",
            "VernacExtend",
            "2299a8f7e70ccc31cf209570de7f4a1e9d35cb4d"
        ],
        [
            "assert (C=C').",
            "VernacExtend",
            "6f881fd9064f417f3d389968190d3380a3fee797"
        ],
        [
            "eapply l4_19.",
            "VernacExtend",
            "0e18216bc44f765195261b97dac2f7da4e645ef1"
        ],
        [
            "2:apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "2:apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "eapply l7_3.",
            "VernacExtend",
            "bd75a67935a101945121156789ecf51e089fd933"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "DecompExAnd H0 C''.",
            "VernacExtend",
            "0560fbf8d503d1bceace68dccf95e7beeeff2cb7"
        ],
        [
            "assert (Cong C C C' C'').",
            "VernacExtend",
            "d6fa7a31bdd57395bf97f0c77dac35a618fe99a5"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac let_symmetric C P A := let id1:=fresh in (assert (id1:(exists A', is_midpoint P A A')); [apply symmetric_point_construction|DecompEx id1 C]).",
            "VernacExtend",
            "c1ac7eceb0609959a67a326e0d2deb6982b2ae3b"
        ],
        [
            "Lemma l8_7 : forall A B C, Per A B C -> Per A C B -> B=C.",
            "VernacStartTheoremProof",
            "dc78ae7bacdb7e584b6cd36173e5f7d78b012526"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "DecompExAnd H C'.",
            "VernacExtend",
            "d41fd882c58f9c5ee99e30bbb3eb923a8ef8e188"
        ],
        [
            "let_symmetric A' C A.",
            "VernacExtend",
            "3c7d4faa23531005e092843e5d8cfc534a161cef"
        ],
        [
            "cases_equality B C.",
            "VernacExtend",
            "4754af842025da598159812cfcb0c43af979a32f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Per C' C A).",
            "VernacExtend",
            "daee8892b4dedb40d074da16ba32112865c0b8bf"
        ],
        [
            "eapply (l8_3 ).",
            "VernacExtend",
            "f4f1adb8249f94b7110cd4629df20d6d56bd4ece"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold is_midpoint in H2;intuition;Col.",
            "VernacExtend",
            "f7302df6ab8ce458c3cd8c86ca3590ad9c92f10c"
        ],
        [
            "assert (Cong A C' A' C').",
            "VernacExtend",
            "7d8b520982eacdc1ab7c698f32a7db4cfd9cb292"
        ],
        [
            "unfold Per in H4.",
            "VernacExtend",
            "f2b135d5a713068a79dd73a1b1f096f0da149840"
        ],
        [
            "DecompExAnd H4 Z.",
            "VernacExtend",
            "74d33f74ec08490e899123f04de277f0452d02f7"
        ],
        [
            "assert (A'=Z).",
            "VernacExtend",
            "9019175f4b6ec742f5e3b74738a7634711a27558"
        ],
        [
            "eapply symmetric_point_unicity;eauto.",
            "VernacExtend",
            "e5a2f47ebdd70151ffd04c5fb4450928f34ef3c8"
        ],
        [
            "subst Z.",
            "VernacExtend",
            "175cfad89f3c163fd5ad63767fa7d8c442d6186d"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "unfold is_midpoint in *;intuition.",
            "VernacExtend",
            "b37d8b6585877eff8b2a40bf15d738ea0b75dc69"
        ],
        [
            "assert (Cong A' C A' C').",
            "VernacExtend",
            "964322bea8f4207adfc888c6c996e1413b1fdaa0"
        ],
        [
            "eapply cong_transitivity with (C:=A) (D:=C');sTarski.",
            "VernacExtend",
            "8e8d759dc1af852e627231cba2e57a18657637e1"
        ],
        [
            "eapply cong_transitivity with (C:=A) (D:=C);sTarski.",
            "VernacExtend",
            "1382dbfce8c360eeb24198bd1cde99a3dd54fd8d"
        ],
        [
            "assert (Per A' B C).",
            "VernacExtend",
            "b087e010a910eb8f854d301a96cb28f8077559bf"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "unfold is_midpoint;intuition.",
            "VernacExtend",
            "a124e71d07263d62e64654ba56761ad9c774730c"
        ],
        [
            "eapply l8_6.",
            "VernacExtend",
            "38a0e1c4d18c8128f55addd6f711722017ce70a6"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "unfold is_midpoint;intuition.",
            "VernacExtend",
            "a124e71d07263d62e64654ba56761ad9c774730c"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve l8_7 : Perp.",
            "VernacHints",
            "159f5a18977867053c8c39bc7649faf229c38be8"
        ],
        [
            "Lemma l8_8 : forall A B, Per A B A -> A=B.",
            "VernacStartTheoremProof",
            "68565b46ac7241912483b7320e71d18b2059404c"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l8_7...",
            "VernacExtend",
            "5b7f3afa080bb7a8b712e73e134c86f803310e3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_9 : forall A B C, Per A B C -> Col A B C -> A=B \\/ C=B.",
            "VernacStartTheoremProof",
            "6dac4f0661878b4ce7b153332c7bc4eb3ac93200"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "left;auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert (Per C B C).",
            "VernacExtend",
            "f47d2b5d4b9e5a769154157c508db2cf8901260b"
        ],
        [
            "eapply l8_3...",
            "VernacExtend",
            "ec6bbc88bcf9e7e15bc3fdcee581401dff3f541d"
        ],
        [
            "eauto with Col.",
            "VernacExtend",
            "727567e3b2ba105a415bb2dc87d26b06a75c838a"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_10 : forall A B C A' B' C', Per A B C -> Cong_3 A B C A' B' C' -> Per A' B' C'.",
            "VernacStartTheoremProof",
            "1dcc008a7e3390f68e9abcbcec5b6ab8974a4509"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality B C.",
            "VernacExtend",
            "4754af842025da598159812cfcb0c43af979a32f"
        ],
        [
            "unfold Cong_3 in H0;intuition.",
            "VernacExtend",
            "54081bd7e461fab5250b4fb370497a746288e8ee"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "assert (B'<>C').",
            "VernacExtend",
            "8c19760187a54a1296be1730f50c22ac3dc733af"
        ],
        [
            "unfold Cong_3 in H0;intuition.",
            "VernacExtend",
            "54081bd7e461fab5250b4fb370497a746288e8ee"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "DecompExAnd H D.",
            "VernacExtend",
            "10aed93d1c9e47bd4d71e3d3caa9b5f3279a5153"
        ],
        [
            "let_symmetric D' B' C'.",
            "VernacExtend",
            "251182d19081dcf233eef97f47cbd10c315f0463"
        ],
        [
            "assert (OFSC C B D A C' B' D' A').",
            "VernacExtend",
            "f9c188dc8b9415ea1fa79d11eeba08bde4db22bc"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;intuition.",
            "VernacExtend",
            "0df661d6b20d32ede0b6fe5eabc679785ee01418"
        ],
        [
            "eapply cong_transitivity with (C:=B) (D:=C);sTarski.",
            "VernacExtend",
            "b9948f092fa9957e759a9317594a8efb2e37239d"
        ],
        [
            "eapply cong_transitivity with (C:=B') (D:=C');sTarski.",
            "VernacExtend",
            "be8aa8627dfbe8a9034c947709c32261226595c6"
        ],
        [
            "assert (Cong D A D' A').",
            "VernacExtend",
            "b3804ba9fb0082f1425ac628f94cf236e74f0b85"
        ],
        [
            "eapply five_segments_with_def;eauto.",
            "VernacExtend",
            "8288636474c8d6aa10f2804873086d0b96bc06e7"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;intuition.",
            "VernacExtend",
            "0df661d6b20d32ede0b6fe5eabc679785ee01418"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "assert (Cong A' C' A' D').",
            "VernacExtend",
            "f62776d599e84949522f1b7764701091b74139e9"
        ],
        [
            "eapply cong_transitivity with (C:=A) (D:=C);sTarski.",
            "VernacExtend",
            "1382dbfce8c360eeb24198bd1cde99a3dd54fd8d"
        ],
        [
            "eapply cong_transitivity with (C:=A) (D:=D);sTarski.",
            "VernacExtend",
            "971ee0a2ed5c4a86ccb017061c4332172f4e18f6"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold is_midpoint...",
            "VernacExtend",
            "eb04ea887f703b8d47d2256a97a441c5d89b1240"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Perp_in := fun X A B C D => A<>B /\\ C<>D /\\ Col X A B /\\ Col X C D /\\ (forall U V, Col U A B -> Col V C D -> Per U X V).",
            "VernacDefinition",
            "a6bfae08c55452c84bb3fd7cf826929a8ce6a5c7"
        ],
        [
            "Definition Perp := fun A B C D => exists X, Perp_in X A B C D.",
            "VernacDefinition",
            "020c3fd89bf7ba081ce85f7d0f17a3b91100e35b"
        ],
        [
            "Lemma l8_12 : forall A B C D X, Perp_in X A B C D -> Perp_in X C D A B.",
            "VernacStartTheoremProof",
            "22ffcd1da2e4028b54a8685f96b218f1225881a3"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "intros;intuition.",
            "VernacExtend",
            "a3a2f16741f98e9ea7379aabbbb836b12cae069c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_13_2 : forall A B C D X, A <> B -> C <> D -> Col X A B -> Col X C D -> (exists U, exists V :Point, Col U A B /\\ Col V C D /\\ U<>X /\\ V<>X /\\ Per U X V) -> Perp_in X A B C D.",
            "VernacStartTheoremProof",
            "01345189fa3133c9ea8d5012984d1fe3a8d6e2b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompEx H3 U.",
            "VernacExtend",
            "97f95d8fa01b380c94614531270d83058942ffa6"
        ],
        [
            "DecompEx H4 V.",
            "VernacExtend",
            "ccdb5d3b9990f76f4bbf313d7526479409d01b83"
        ],
        [
            "decompose [and] H3;clear H3.",
            "VernacExtend",
            "cd2921edf4657af631a1c0c3b0adccd05dfabff8"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "repeat split;auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Per U0 X V).",
            "VernacExtend",
            "bdc4a550f3253787283c2825fe3e19337e8420f2"
        ],
        [
            "eapply l8_3; try apply H9;auto.",
            "VernacExtend",
            "f7036d1712af26a3b629c422d588a73a0dab951f"
        ],
        [
            "assert (Col A X U0).",
            "VernacExtend",
            "1552f678954b2d287527fd75671447ffb09c4c48"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col B U U0).",
            "VernacExtend",
            "1c642d7ef6bee1eb8f0e6637b44adc897e5df4dd"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col A U X).",
            "VernacExtend",
            "a7ad68472a824e78e957eb2d4f7eef649eef29d6"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col B U X).",
            "VernacExtend",
            "67c81dcfbc0c4ee09f32cc97034cabd579313bb4"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "cases_equality B U.",
            "VernacExtend",
            "294473aed31daf5bfdcd41daa2e9d01fb674c122"
        ],
        [
            "smart_subst U.",
            "VernacExtend",
            "d6d0fa5b39e68c0096327efe8f74a9287195b984"
        ],
        [
            "assert (Col B X U0).",
            "VernacExtend",
            "3b02fab70d7357cc2e4dcf8d70c8545b63b1adf0"
        ],
        [
            "eapply col_transitivity_2;Col.",
            "VernacExtend",
            "af9923bb66f3b5bb0882998e7f74a3257a0333ab"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col U U0 X).",
            "VernacExtend",
            "96247a88b757e052eccd2c4db5a45ecb208fe955"
        ],
        [
            "eapply col_transitivity_2;Col.",
            "VernacExtend",
            "af9923bb66f3b5bb0882998e7f74a3257a0333ab"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply l8_3.",
            "VernacExtend",
            "f4f1adb8249f94b7110cd4629df20d6d56bd4ece"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col D V V0).",
            "VernacExtend",
            "f2d1595a1d6cea31fc11c2274c654f157806ffd0"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col C V V0).",
            "VernacExtend",
            "d579a21240973a1bd4456a8cad7c4e8daf8e3824"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col C V X).",
            "VernacExtend",
            "3495a17eaf1204605d8de7009f125f694abad161"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col C V0 X).",
            "VernacExtend",
            "6ffce48e1a476a80475ffd4a0ce2a147a6a2e602"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "cases_equality C X.",
            "VernacExtend",
            "0fd60969df9f20a217f0f8669f6b6579f5362627"
        ],
        [
            "smart_subst X.",
            "VernacExtend",
            "329c254623ca8f41b3b970801d466395979414e0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition DistLn := fun A B C D => (exists X, Col X A B /\\ ~Col X C D) \\/ (exists X, ~ Col X A B /\\ Col X C D).",
            "VernacDefinition",
            "fa9b6b3a208d31dadfcc6e06d96a9cac9d5c7ea5"
        ],
        [
            "Lemma l8_14_1 : forall A B, ~ Perp A B A B.",
            "VernacStartTheoremProof",
            "5ee40e572f1a409e4e5c8a1f39bccf8c45ca790b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "unfold not;intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "unfold Perp_in in H0.",
            "VernacExtend",
            "56ae65c1af47d9a232eb8995b972f7409e68e061"
        ],
        [
            "decompose [and] H0;clear H0.",
            "VernacExtend",
            "991eee06718c696679a0e8d74d9391a6381adaf0"
        ],
        [
            "clear H3 H2.",
            "VernacExtend",
            "6640420ed37e9a3a541f563abc785b5d1764e97c"
        ],
        [
            "assert (Per A X A).",
            "VernacExtend",
            "4a37aab9529849f2815633a9a94bc6218b3a1b5c"
        ],
        [
            "apply H5;Tarski.",
            "VernacExtend",
            "1856b2f3e368e5c0f5c603cbedb78a109b2ae59e"
        ],
        [
            "assert (A=X);Perp.",
            "VernacExtend",
            "9eca4d74c3b7273a7db125e4079be9412287c53f"
        ],
        [
            "assert (Per B X B).",
            "VernacExtend",
            "5a71bd1eb1953622990cd24fbb5e9a6ed860ed8f"
        ],
        [
            "apply H5;Tarski.",
            "VernacExtend",
            "1856b2f3e368e5c0f5c603cbedb78a109b2ae59e"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert (B=A);Perp.",
            "VernacExtend",
            "0564b79360e37767d88584c704f3be01a2a3163b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve l8_14_1 : Perp.",
            "VernacHints",
            "63a4fa6e8a4347d6707402bd1c09b3835c037e04"
        ],
        [
            "Lemma l8_14_2_1a : forall X A B C D, Perp_in X A B C D -> Perp A B C D.",
            "VernacStartTheoremProof",
            "2f774a1f0cc695f0eb222ac3df629cb388ec2678"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_2_1b : forall X A B C D Y, Perp_in X A B C D -> Col Y A B -> Col Y C D -> X=Y.",
            "VernacStartTheoremProof",
            "a1e87f36bc14acaeaaf193f04af94e60634804a7"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_in in H.",
            "VernacExtend",
            "406ed2450ed5715162bac77a929f0a312e255c77"
        ],
        [
            "decompose [and] H;clear H.",
            "VernacExtend",
            "477e1526f1f7545aa8868364e6501e13c756ec6c"
        ],
        [
            "assert (Per Y X Y).",
            "VernacExtend",
            "1995ffad359ae21960df3c29310c37cd4e157df2"
        ],
        [
            "apply H7...",
            "VernacExtend",
            "2c5d28c92a72148eb16800217b28b792400006a7"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "eapply l8_8...",
            "VernacExtend",
            "232ba4e6365841517e3d310d0de034ecb8cb1e2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_2_1b_bis : forall A B C D X, Perp A B C D -> Col X A B -> Col X C D -> Perp_in X A B C D.",
            "VernacStartTheoremProof",
            "8e5cacff0ccd25ec37d81a1983febc8639d35cf3"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "DecompEx H Y.",
            "VernacExtend",
            "722f8c745fbe081f5e6e3fbd142ad99cc5773f36"
        ],
        [
            "assert (X=Y).",
            "VernacExtend",
            "2bc2a01f660c74a9206acf39902b6fc29e98bdd3"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "eapply l8_14_2_1b;eauto.",
            "VernacExtend",
            "0bd1edfa0e30ecac123f92dfd6ec58cdb68b78a7"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve l8_14_2_1b_bis : Perp.",
            "VernacHints",
            "802716054c6ad71c9b413e8cb9636e293a8a724e"
        ],
        [
            "Lemma l8_14_2_2 : forall X A B C D, Perp A B C D -> (forall Y, Col Y A B -> Col Y C D -> X=Y) -> Perp_in X A B C D.",
            "VernacStartTheoremProof",
            "c74fd8da918cbc8c93ba2e661dee1c4efabbbbdd"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "DecompEx H X0.",
            "VernacExtend",
            "1c43d505dc58f0b01bc3757b2bd0b0ddbd4b02f2"
        ],
        [
            "assert (X=X0).",
            "VernacExtend",
            "05aab7a29f1d167f2dd58a525f1307a102dd2db6"
        ],
        [
            "apply H0;unfold Perp_in in H1;intuition.",
            "VernacExtend",
            "4b1b072e806b82f26379d86856451f17322ff81c"
        ],
        [
            "subst...",
            "VernacExtend",
            "b907a93c53d5c34384373e3aac13eba90f0a4fdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_3 : forall A B C D X Y, Perp_in X A B C D -> Perp_in Y A B C D -> X=Y.",
            "VernacStartTheoremProof",
            "a76a4bbe0fa3041e42e5121e91bd3e8859f2da41"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "decompose [and] H;clear H.",
            "VernacExtend",
            "477e1526f1f7545aa8868364e6501e13c756ec6c"
        ],
        [
            "decompose [and] H0;clear H0.",
            "VernacExtend",
            "991eee06718c696679a0e8d74d9391a6381adaf0"
        ],
        [
            "eapply l8_8.",
            "VernacExtend",
            "8a241673ccc29d133744d21e1cc31e8d26c804fd"
        ],
        [
            "eapply H10;auto.",
            "VernacExtend",
            "96c10c04d9bbd03a1c3fe941a9adf9132bc3fe18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_15_1 : forall A B C X, A<>B -> Col A B X -> Perp A B C X -> Perp_in X A B C X.",
            "VernacStartTheoremProof",
            "160c474fcdaee2aa762e1bdbd700b4c7053ea52e"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H1.",
            "VernacExtend",
            "f2f2b092b1b63693ca047226f428b88523644740"
        ],
        [
            "DecompEx H1 X0.",
            "VernacExtend",
            "acbce9c1156ab69f99bc7cd72e3f37f66eb708b7"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Per X X0 X).",
            "VernacExtend",
            "42e9e873ed4295d5216b3fc3028c77edb3efd8a6"
        ],
        [
            "apply H6;Col;Tarski...",
            "VernacExtend",
            "108e5e4b3387278eb50e909db31d4db0f6f16823"
        ],
        [
            "assert (X =X0)...",
            "VernacExtend",
            "e2a9ff187b72ad6fa176fb1dc0ffe359b687806e"
        ],
        [
            "subst X0.",
            "VernacExtend",
            "88725a659f19321d0bc8b87913ed6852ea5ad645"
        ],
        [
            "apply H6...",
            "VernacExtend",
            "6f0044e2b318fa51815efa436c8ea35cec0c1d97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_15_2 : forall A B C X, A<>B -> Col A B X -> Perp_in X A B C X -> Perp A B C X.",
            "VernacStartTheoremProof",
            "26c0c52b7e4a91b4f451c9465651b9aca63c301f"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_16_1 : forall A B C U X, A<>B -> Col A B X -> Col A B U -> U<>X -> Perp A B C X -> ~ Col A B C /\\ Per C X U.",
            "VernacStartTheoremProof",
            "a7ffaeed3a8f72969503211e5c910df8230f22f3"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp_in X A B C X).",
            "VernacExtend",
            "8ef0a1d1b78d9a2b1c80aaa94a4fb29eb6496c91"
        ],
        [
            "eapply l8_15_1...",
            "VernacExtend",
            "b3e7f824518e8cdabb2e0a17cff80ad637fbf3a0"
        ],
        [
            "assert (Per C X U).",
            "VernacExtend",
            "e7c137eb4b0a1c99950e0d4ad146107314cec29d"
        ],
        [
            "unfold Perp, Perp_in in *.",
            "VernacExtend",
            "3c0977f686a09792cbee532da59ce6c3e34a31b3"
        ],
        [
            "DecompEx H3 X0.",
            "VernacExtend",
            "b410ac7e0ed653f9bc8741581be70380c91a73a0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert (C<>X).",
            "VernacExtend",
            "e94d4c6695334ec6355186d9706b42c748966f0d"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold Perp_in in H4;intuition.",
            "VernacExtend",
            "fbd9d3b4affc27331baf42b66ed6c9e3e9d6a3f9"
        ],
        [
            "assert (~ Col U C X).",
            "VernacExtend",
            "b46ce54065ae8af6c6519b4bbdc688c8fe773376"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (C=X \\/ U=X).",
            "VernacExtend",
            "fd98789d989f6324d8ef13e09c05c623c46a2003"
        ],
        [
            "eapply l8_9...",
            "VernacExtend",
            "7cb71889f900f0ec0c673b22131d6c7e7a7ec42b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col A X C).",
            "VernacExtend",
            "4a58935228b12643b7da84d3fbcdcb099e1a83d0"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (Col A C U).",
            "VernacExtend",
            "270c6a67fb1321535470587fa44612fcdcd8493f"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "assert (A<>C).",
            "VernacExtend",
            "6902c8d1b94940b2a9482cacf40e7731b9c07806"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "unfold Perp_in in *;intuition.",
            "VernacExtend",
            "a429b89c01fecd9cb10f37e8590bee0ab5926820"
        ],
        [
            "smart_subst C.",
            "VernacExtend",
            "c6f15288e0b636bb8b66abc8be2c5032a77065df"
        ],
        [
            "assert (A<>B);auto.",
            "VernacExtend",
            "fe8b595635fdbb36d33b8d571e6cc14eb752b940"
        ],
        [
            "assert (Col A X U).",
            "VernacExtend",
            "aa833f8bfc9a5ada0fdb6b85b43af6e32383f2f6"
        ],
        [
            "eapply col_transitivity_1;Col.",
            "VernacExtend",
            "154ab2fa91b665c1db6e279baf39ed5c09e25a25"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col C U X).",
            "VernacExtend",
            "53768db1e17e6cc0eb24cea4670a80f2fee39637"
        ],
        [
            "eapply col_transitivity_2;Col.",
            "VernacExtend",
            "af9923bb66f3b5bb0882998e7f74a3257a0333ab"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_16_2 : forall A B C U X, A<>B -> Col A B X -> Col A B U -> U<>X -> ~ Col A B C -> Per C X U ->Perp A B C X.",
            "VernacStartTheoremProof",
            "5894a58de0561c62c2377e267bec445ba96d1ac6"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (C<>X).",
            "VernacExtend",
            "e94d4c6695334ec6355186d9706b42c748966f0d"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "smart_subst X;auto.",
            "VernacExtend",
            "0acccee87269023e809cf1bd440289f398f5a9b2"
        ],
        [
            "assert (Perp_in X A B C X).",
            "VernacExtend",
            "8ef0a1d1b78d9a2b1c80aaa94a4fb29eb6496c91"
        ],
        [
            "eapply l8_13_2...",
            "VernacExtend",
            "b88c323f4bbafec06de52b98ec44ba24de2006f7"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "exists U.",
            "VernacExtend",
            "5fa927449745739df126de32a00d9a77c57aa9f7"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_18_unicity : forall A B C X Y, ~ Col A B C -> Col A B X -> Perp A B C X -> Col A B Y -> Perp A B C Y -> X=Y.",
            "VernacStartTheoremProof",
            "042f7499024369469630214cd947fa85db74d703"
        ],
        [
            "Proof with Perp.",
            "VernacProof",
            "a709719ee93c4725a79d4554d785adeb31ac8558"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp_in X A B C X).",
            "VernacExtend",
            "8ef0a1d1b78d9a2b1c80aaa94a4fb29eb6496c91"
        ],
        [
            "eapply l8_15_1.",
            "VernacExtend",
            "5d0964fc5f71c0282a7dfecb89864392d928132c"
        ],
        [
            "unfold not;intro;subst B;auto.",
            "VernacExtend",
            "32baa832aca55793841c711a55f5b0d0ef13a6ea"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Perp_in Y A B C Y).",
            "VernacExtend",
            "090f8e379d7c5ec473c2d4f4d74385b84dfdb280"
        ],
        [
            "eapply l8_15_1.",
            "VernacExtend",
            "5d0964fc5f71c0282a7dfecb89864392d928132c"
        ],
        [
            "unfold not;intro;subst B;auto.",
            "VernacExtend",
            "32baa832aca55793841c711a55f5b0d0ef13a6ea"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "decompose [and] H4;clear H4.",
            "VernacExtend",
            "1273df811edf485c6307081727910b880271f476"
        ],
        [
            "decompose [and] H5;clear H5.",
            "VernacExtend",
            "33431d96d3c0f27bd1773d30c186d9bf0702843a"
        ],
        [
            "eapply l8_7 with (A:=C).",
            "VernacExtend",
            "9e40874b5950c148d6a17eec91330d5d780c74b8"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac show_distinct X Y := assert (X<>Y);[unfold not;intro;treat_equalities|idtac].",
            "VernacExtend",
            "7d5fc94af9283ca3007f2b5fbee477eacd39e1f6"
        ],
        [
            "Lemma l8_18_existence : forall A B C, ~ Col A B C -> exists X, Col A B X /\\ Perp A B C X.",
            "VernacStartTheoremProof",
            "8ce783f4f5c61a8d17bb3c31de9b2817abed1403"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists Y, Bet B A Y /\\ Cong A Y A C)...",
            "VernacExtend",
            "a18f2aa1f788417fbc1ec619d65be664c9a2d689"
        ],
        [
            "DecompExAnd H0 Y.",
            "VernacExtend",
            "800c693d67896aff4b4dd5228f5dba31d5fae3ee"
        ],
        [
            "assert (exists P : Point, is_midpoint P C Y).",
            "VernacExtend",
            "19d28785abea778be38c6e47c2179f19656f79d4"
        ],
        [
            "eapply l7_25.",
            "VernacExtend",
            "7bbb896d42e104b07bab881e2b3d1c19d20857db"
        ],
        [
            "apply cong_symmetry;eauto.",
            "VernacExtend",
            "4cff4f36659ee4c544b9dfe2a10c25b2f1ff4847"
        ],
        [
            "DecompEx H0 P.",
            "VernacExtend",
            "83c4c9af0d92ab222ca16d7a86466169119aa57f"
        ],
        [
            "assert (Per A P Y).",
            "VernacExtend",
            "7b83a384e3a8f127088669580cd6305dc898a3d1"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C;intuition;Tarski.",
            "VernacExtend",
            "da5a9b319c57b4de30f1e3e98fdf846be066bf22"
        ],
        [
            "assert (exists Z, Bet A Y Z /\\ Cong Y Z Y P)...",
            "VernacExtend",
            "3089ea78e272ef7a9e60d469f3160b63e62da24a"
        ],
        [
            "DecompExAnd H4 Z.",
            "VernacExtend",
            "74d33f74ec08490e899123f04de277f0452d02f7"
        ],
        [
            "assert (exists Q, Bet P Y Q /\\ Cong Y Q Y A)...",
            "VernacExtend",
            "8a3a1d8026dd79f668cad1ec6295efa443166dd5"
        ],
        [
            "DecompExAnd H4 Q.",
            "VernacExtend",
            "da75e9c71e714371a72c41603a28eb5207ea9043"
        ],
        [
            "let_symmetric Q' Z Q.",
            "VernacExtend",
            "c7686ade994921c39b180afb9de8123f22e43058"
        ],
        [
            "assert (exists C', Bet Q' Y C' /\\ Cong Y C' Y C)...",
            "VernacExtend",
            "9ea097638e97f7da8c4b7b8b5878692170d43c58"
        ],
        [
            "DecompExAnd H4 C'.",
            "VernacExtend",
            "7055c07949b851ba59027d498a210c85fccfd039"
        ],
        [
            "assert (OFSC A Y Z Q Q Y P A).",
            "VernacExtend",
            "c13dc3bb58dcae6e81a938a7f68438b2bd15e5b7"
        ],
        [
            "unfold OFSC;intuition.",
            "VernacExtend",
            "115d7c250f676e9f8927a0fa1ac73f3f1aaba262"
        ],
        [
            "show_distinct A Y...",
            "VernacExtend",
            "64e7789b31fa709dbbeef2a2c781883a0b948d13"
        ],
        [
            "assert (Cong Z Q P A).",
            "VernacExtend",
            "252cb87dab0512f0977eae1f396831fc8f0df5e0"
        ],
        [
            "eapply five_segments_with_def;eauto.",
            "VernacExtend",
            "8288636474c8d6aa10f2804873086d0b96bc06e7"
        ],
        [
            "assert (Cong_3 A P Y Q Z Y).",
            "VernacExtend",
            "e60617cccb6dff393414e336245dccf77994875c"
        ],
        [
            "unfold Cong_3;intuition.",
            "VernacExtend",
            "559e40ffc53ab06f26af96d7f9e831a9f0bc6bc4"
        ],
        [
            "assert (Per Q Z Y).",
            "VernacExtend",
            "a531cae82ea2814447344a2a1626c4738e867f9c"
        ],
        [
            "eapply l8_10.",
            "VernacExtend",
            "1ee3d8217c9ac2206eea0fb7c7068e5e356cf7a6"
        ],
        [
            "2:apply H14.",
            "VernacExtend",
            "0b344bf4139ea8790644004e0fbc14e7e8c3dae0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Cong Y Q Y Q').",
            "VernacExtend",
            "5a17938bd86841637c30779c0275bcc12bef771f"
        ],
        [
            "assert (Per Y Z Q);Perp.",
            "VernacExtend",
            "bbb6f2c288e796001019db10115836e1bbdeee5a"
        ],
        [
            "unfold Per in H16;intuition.",
            "VernacExtend",
            "fe8ee777244d586da9c716f8cad381d79fc08d53"
        ],
        [
            "elim H16;intro Q'';intros.",
            "VernacExtend",
            "fa25fbf4522192f33d23fc9d0be79e3a2d5b89c1"
        ],
        [
            "decompose [and] H17.",
            "VernacExtend",
            "e80abca18b15872180dc9930527d82802db2b5a4"
        ],
        [
            "assert (Q''=Q').",
            "VernacExtend",
            "58592d05be3b7b4a39816f0fa823cd5f33e7b2bf"
        ],
        [
            "eapply symmetric_point_unicity.",
            "VernacExtend",
            "6e140470247d39a5996dc5b80dbd804d822e6b44"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst Q''.",
            "VernacExtend",
            "c4983dad1d951185bae4a685daa3372d0116e0b8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (exists X : Point, is_midpoint X C C').",
            "VernacExtend",
            "82aa169d95d23d69b85df5732e8a316effc8c69e"
        ],
        [
            "eapply l7_25.",
            "VernacExtend",
            "7bbb896d42e104b07bab881e2b3d1c19d20857db"
        ],
        [
            "apply cong_symmetry;eauto.",
            "VernacExtend",
            "4cff4f36659ee4c544b9dfe2a10c25b2f1ff4847"
        ],
        [
            "DecompEx H17 X.",
            "VernacExtend",
            "7f15a19450f8fdcc3a8b1abb54faaa6317261bca"
        ],
        [
            "assert (Per Y X C).",
            "VernacExtend",
            "31fb904efb8cca644a4d0f1dd0fa11f36a2dbc5f"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C';intuition.",
            "VernacExtend",
            "2b8341db712fce0d400c4fafd24248833919ca7e"
        ],
        [
            "show_distinct Q Y...",
            "VernacExtend",
            "564f7fde5c806352333c7fc186cf5e66898289f9"
        ],
        [
            "cases_equality C C'.",
            "VernacExtend",
            "5d38a8c6aad49481675e8e5683bd2570257c3dbd"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;DecompAndAll.",
            "VernacExtend",
            "d7d04e3a5ebd9444dc30800b22a666b11943f8f5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "show_distinct P Y...",
            "VernacExtend",
            "c529f806fa9764e56cab365d81cc4b6e5ec98fe7"
        ],
        [
            "assert (Col A B C)...",
            "VernacExtend",
            "6eb63cef0ad25b08d99fa06a441e2d7d713b06d4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "show_distinct A B...",
            "VernacExtend",
            "00f43656514517d9283782b8cd1055ec988aa86b"
        ],
        [
            "show_distinct A C...",
            "VernacExtend",
            "b0071e469657e72f861b1ca1596a834df6108390"
        ],
        [
            "show_distinct B C...",
            "VernacExtend",
            "58355ad934fddf3bb6bcc1525e252a714a2dcb93"
        ],
        [
            "show_distinct Y C...",
            "VernacExtend",
            "4057d31c2b2a81415ca92ba4e6f22641af472d2b"
        ],
        [
            "assert (Col P Y Q)...",
            "VernacExtend",
            "cc818de2115634f15541d0084c504415ed0d6cde"
        ],
        [
            "assert (Col P Y C)...",
            "VernacExtend",
            "7763c02888b69910174441138f83c7d8dffceda9"
        ],
        [
            "assert (Col P Q C).",
            "VernacExtend",
            "db96e59c59f9c2e675d90a381f4d1e513de4a979"
        ],
        [
            "eapply col_transitivity_1;try apply H1;auto.",
            "VernacExtend",
            "0e600999a1541aee884c7da3ff89d1b3364de078"
        ],
        [
            "assert (Col Y Q C).",
            "VernacExtend",
            "27d5779bec63314828315752671fafa914bede6d"
        ],
        [
            "eapply col_transitivity_2;try apply H1;auto.",
            "VernacExtend",
            "b69ec348500837b012e9b101bf392c764695411d"
        ],
        [
            "assert (Col Y Q' P).",
            "VernacExtend",
            "6f64417c2790f028ceb30752b2b29b95a45fd19f"
        ],
        [
            "eapply col_transitivity_1;try apply H21;auto.",
            "VernacExtend",
            "1da8b0de8be22a1c164e6d95691455aa7a870c37"
        ],
        [
            "assert (Col C Q' P).",
            "VernacExtend",
            "6ca40cd74069c582d216336384236a8b890d6cfe"
        ],
        [
            "eapply col_transitivity_2;try apply H21;auto.",
            "VernacExtend",
            "e3aef87103e3d853d2a69a415f88f4410b48784c"
        ],
        [
            "assert (Col A Y B)...",
            "VernacExtend",
            "ea5cf05c1b4cbcbcd0b6e6ee8f5fa17ed377f928"
        ],
        [
            "assert (Col A Y Z)...",
            "VernacExtend",
            "cb742a4e3caa8f0abb07a50ae9f80b9c8edd80f6"
        ],
        [
            "assert (Col A B Z).",
            "VernacExtend",
            "522f1384290dfa4c1037b28b8d27c0965320bc7c"
        ],
        [
            "eapply col_transitivity_1;try apply H10;auto.",
            "VernacExtend",
            "10d1a40833a8548715b6e1992ff91eb963faa336"
        ],
        [
            "assert (Col Y B Z).",
            "VernacExtend",
            "90e17ac276c1444270799a8772d2ecb9b9d1520d"
        ],
        [
            "eapply col_transitivity_2;try apply H10;auto.",
            "VernacExtend",
            "3ae274f4f83edbc92ebc370b22e2913a763772ef"
        ],
        [
            "assert (Col Q Y P)...",
            "VernacExtend",
            "bd90f4673ae4d5f0b1e979c75da81d29dcc5dab7"
        ],
        [
            "assert (Col Q' Y P).",
            "VernacExtend",
            "46facf9f08c98a3f8d71539bab7bba84bc89fed7"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col P Q Q').",
            "VernacExtend",
            "e30228ad079345038b7714766daf32f2419836b2"
        ],
        [
            "eapply col_transitivity_1;try apply H1;auto.",
            "VernacExtend",
            "0e600999a1541aee884c7da3ff89d1b3364de078"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col Y Q Q').",
            "VernacExtend",
            "6b1fb21987530e0abb59cbef3cd937bbd5dd6d0d"
        ],
        [
            "eapply col_transitivity_2;try apply H1;auto.",
            "VernacExtend",
            "b69ec348500837b012e9b101bf392c764695411d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col Z Q Q')...",
            "VernacExtend",
            "45f8af2617b0ca18c2a9dbf98651a1742227ebca"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "show_distinct Q' Q...",
            "VernacExtend",
            "bd2ad25196ec2bd4df7bcce4dd0df6d722263585"
        ],
        [
            "assert (Col P B C).",
            "VernacExtend",
            "a2636f3248066fdbcbed0a51cd7350a944ea5ddb"
        ],
        [
            "eapply col_transitivity_1;try apply H1;auto.",
            "VernacExtend",
            "0e600999a1541aee884c7da3ff89d1b3364de078"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col Q' P Y).",
            "VernacExtend",
            "eab041a05c4c8cb7e7662a90edc35bd8cbd4512d"
        ],
        [
            "eapply col_transitivity_1;try apply H42;Col.",
            "VernacExtend",
            "af1d6454000dbfa98b6703664135dd1b664ad58c"
        ],
        [
            "assert (Col Q' Z Y).",
            "VernacExtend",
            "2560f186210f6a54ca8ccca9426e9e4cc3b8ee02"
        ],
        [
            "eapply col_transitivity_1;try apply H42;Col.",
            "VernacExtend",
            "af1d6454000dbfa98b6703664135dd1b664ad58c"
        ],
        [
            "show_distinct Z Y...",
            "VernacExtend",
            "a09cc0eb8d2fac8b255d55d524d751e0ff626de6"
        ],
        [
            "assert (Col Z A Q').",
            "VernacExtend",
            "cfb3340f234366fed3b66603d84d2b4c81836a47"
        ],
        [
            "eapply col_transitivity_1;try apply H45;Col.",
            "VernacExtend",
            "413a2499f5b25694c9809f71ecb18bbf7cbe533e"
        ],
        [
            "assert (Col Y A Q').",
            "VernacExtend",
            "8857921d567dc61d2347dd447bc4e4657693e245"
        ],
        [
            "eapply col_transitivity_2;try apply H45;Col.",
            "VernacExtend",
            "2b865704395ae316838eb12721858cf7a245f8c4"
        ],
        [
            "show_distinct Z A...",
            "VernacExtend",
            "615dea8da6346e733457a889ea09f4b443cf0250"
        ],
        [
            "assert (Col Z B Q').",
            "VernacExtend",
            "d92e0bcb8714499b6490a642e10713d9d08545bd"
        ],
        [
            "eapply col_transitivity_1;try apply H48;Col.",
            "VernacExtend",
            "3d7596cfa2fbc7b184fecf4d44dae8cefb39d3d9"
        ],
        [
            "assert (Col A B Q').",
            "VernacExtend",
            "ba849d7fdda1fcfc12198fd84dd3b4f301655c72"
        ],
        [
            "eapply col_transitivity_2;try apply H48;Col.",
            "VernacExtend",
            "1d68a72dab16c06a70fcf409969a662f652acdb7"
        ],
        [
            "assert (Col B Y Q').",
            "VernacExtend",
            "4a53da604b2333134f287653bd7372532f43107f"
        ],
        [
            "eapply col_transitivity_2;try apply H12;Col.",
            "VernacExtend",
            "c9f57bbff69c0f35f393158192c81dd18b401de6"
        ],
        [
            "show_distinct Y Q'...",
            "VernacExtend",
            "1ea2cdc93053933eebbc57fd2c8b20d4e4732060"
        ],
        [
            "assert (Col Y Q B).",
            "VernacExtend",
            "b2dce765cc4e0e269248e1c2461e2485a2c24316"
        ],
        [
            "eapply col_transitivity_1;try apply H52;Col.",
            "VernacExtend",
            "ecaba59202c1da87dbd6250cca729f2600081463"
        ],
        [
            "show_distinct Y B...",
            "VernacExtend",
            "dfe16b8fbfbf56c1b64fed9debf42f0fc7bf27e2"
        ],
        [
            "assert (Col Y B C).",
            "VernacExtend",
            "da20b7cc3c3622fd7ff16c0bc028eb16bc8f14a4"
        ],
        [
            "eapply col_transitivity_1;try apply H52;Col.",
            "VernacExtend",
            "ecaba59202c1da87dbd6250cca729f2600081463"
        ],
        [
            "assert (B<>Y)...",
            "VernacExtend",
            "fa49c6941190d7046e73be25924a0e796fd53e4e"
        ],
        [
            "assert (Col B A C).",
            "VernacExtend",
            "3ecd681bcb9400ef96c73db1a4d5de37a6591cd3"
        ],
        [
            "eapply col_transitivity_1;try apply H56;Col.",
            "VernacExtend",
            "dc165f8f1416464935dbef051241fc7442f2cf7a"
        ],
        [
            "assert (Col A B C)...",
            "VernacExtend",
            "6eb63cef0ad25b08d99fa06a441e2d7d713b06d4"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "suppose (OFSC Q Y C Z Q' Y C' Z).",
            "VernacExtend",
            "563798dc64dd7d4fa30528bdae3b5b021ef058c5"
        ],
        [
            "assert (Cong C Z C' Z).",
            "VernacExtend",
            "b4ac2cd79bd1b7346206d3eb5b674b7bfe20c2bb"
        ],
        [
            "eapply five_segments_with_def;eauto.",
            "VernacExtend",
            "8288636474c8d6aa10f2804873086d0b96bc06e7"
        ],
        [
            "assert (Col Z Y X).",
            "VernacExtend",
            "63906a33a02cd4117a31657edf9be8b7b2a48300"
        ],
        [
            "eapply upper_dim.",
            "VernacExtend",
            "ac0318c456f4d92a37196849a4cfc6a2ce30147f"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "unfold is_midpoint in H18;intuition.",
            "VernacExtend",
            "8159f3c878caf33893994e53ccd227760acfab72"
        ],
        [
            "show_distinct Y Z.",
            "VernacExtend",
            "219b00964ee5885801dd635d5238a803e1fdfd71"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;DecompAndAll.",
            "VernacExtend",
            "d7d04e3a5ebd9444dc30800b22a666b11943f8f5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "show_distinct C X.",
            "VernacExtend",
            "d4059942c2af32cddcb58abdb50073e1a69f2562"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;DecompAndAll.",
            "VernacExtend",
            "d7d04e3a5ebd9444dc30800b22a666b11943f8f5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "show_distinct Y X.",
            "VernacExtend",
            "9e2928219db34dcd0aa3e37e8e523d5e7663e3b9"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;DecompAndAll.",
            "VernacExtend",
            "d7d04e3a5ebd9444dc30800b22a666b11943f8f5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clean_trivial_hyps.",
            "VernacExtend",
            "ac97f941a1a2a1c1aa41d983627aedf3348ee9a7"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "assert (Perp_in X Y Z C X).",
            "VernacExtend",
            "e077be5b5d3c50c25f8b5e307f11db14f0fc115a"
        ],
        [
            "eapply l8_13_2...",
            "VernacExtend",
            "b88c323f4bbafec06de52b98ec44ba24de2006f7"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split...",
            "VernacExtend",
            "0321435bc7cb77f3f3ae66f45e4ed580fdab4f58"
        ],
        [
            "assert (Col A B X).",
            "VernacExtend",
            "c73d4cb26e26a1cb63eff7d608c9e88fe09fc41f"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;DecompAndAll.",
            "VernacExtend",
            "d7d04e3a5ebd9444dc30800b22a666b11943f8f5"
        ],
        [
            "clean_trivial_hyps.",
            "VernacExtend",
            "ac97f941a1a2a1c1aa41d983627aedf3348ee9a7"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "assert (Col A Y B)...",
            "VernacExtend",
            "ea5cf05c1b4cbcbcd0b6e6ee8f5fa17ed377f928"
        ],
        [
            "assert (Col A Y Z)...",
            "VernacExtend",
            "cb742a4e3caa8f0abb07a50ae9f80b9c8edd80f6"
        ],
        [
            "assert (Col Y B Z).",
            "VernacExtend",
            "90e17ac276c1444270799a8772d2ecb9b9d1520d"
        ],
        [
            "eapply col_transitivity_2.",
            "VernacExtend",
            "34deee177766d8e8210e4b1ea50e01e28e4f6d6d"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col Y Z X)...",
            "VernacExtend",
            "363a7afedce07af9708b2da6022bfa32e74edc8c"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col Y B X).",
            "VernacExtend",
            "561e432e447d51164b87d74d88ee9427e2842676"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (X<>Y)...",
            "VernacExtend",
            "c2f4acd0b0fe4f7a3f3f411cccc7ae15f5e126d2"
        ],
        [
            "assert (Col X A B).",
            "VernacExtend",
            "c98a099f4b915e1547dd93e90bdf8a36ee733a4e"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H39.",
            "VernacExtend",
            "fbc71591654f498cde5d521250c0183ea3a4035a"
        ],
        [
            "assert (Col Y Z X)...",
            "VernacExtend",
            "363a7afedce07af9708b2da6022bfa32e74edc8c"
        ],
        [
            "assert (Col Y Z A)...",
            "VernacExtend",
            "486282761ee4487908a9656656bb8e9af52c3263"
        ],
        [
            "assert (Col Y X A).",
            "VernacExtend",
            "5cb13b4b65a35419cd63707df7b3a098f5ba2d37"
        ],
        [
            "eapply col_transitivity_1;try apply H24;auto.",
            "VernacExtend",
            "620e3bf08cf5f8e4f6ac019f039bc779fadce598"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold not;intro;subst B;intuition.",
            "VernacExtend",
            "3886005902d77ea0edb63d99da23234d0aed32cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "unfold Perp_in in H27.",
            "VernacExtend",
            "6e2e594becabd91a401342a2bf3646dee368b67d"
        ],
        [
            "decompose [and] H27;clear H27.",
            "VernacExtend",
            "e20d64ab40239aad9666df6b947f2210e3997924"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H34.",
            "VernacExtend",
            "62ec2e16a7d426f9dc6512daf474854ddf5a0c13"
        ],
        [
            "2:assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "unfold OFSC,Cong_3,is_midpoint in *;DecompAndAll.",
            "VernacExtend",
            "d7d04e3a5ebd9444dc30800b22a666b11943f8f5"
        ],
        [
            "assert (Col A Y Z)...",
            "VernacExtend",
            "cb742a4e3caa8f0abb07a50ae9f80b9c8edd80f6"
        ],
        [
            "assert (Col A B U)...",
            "VernacExtend",
            "1e0311b341ac8a651291177358c014454546524e"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A B Y).",
            "VernacExtend",
            "737f077d6652bbde735380f862b82a8cd4a2939d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A Y Z).",
            "VernacExtend",
            "a413098d7a5601fd80aa2cef02ffb384780e4ab6"
        ],
        [
            "assert (Col A U Y).",
            "VernacExtend",
            "39f318f71601860ae6cba6037d6c5f5e446c3a47"
        ],
        [
            "assert (A<>B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst B;intuition.",
            "VernacExtend",
            "e6955d54d99adf149716940ba98a1b3cd8cc2cbe"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H53.",
            "VernacExtend",
            "b310f97089c493277738edd22fbff9f78a5a2e30"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col Y U Z).",
            "VernacExtend",
            "01a475eae54d92c25e516ac2a4f6b1e0f840a254"
        ],
        [
            "assert (Y<>A)...",
            "VernacExtend",
            "6b400bd51dc33949ec299be5dd2de5bea3ed9cf0"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H54.",
            "VernacExtend",
            "46a0a7ee28c373aab576fd42fc5ffff13ae2c251"
        ],
        [
            "2:Col.",
            "VernacExtend",
            "19563b0377a8a357b8d049afa4a30fa6044e56f7"
        ],
        [
            "assert (Col A Y U).",
            "VernacExtend",
            "21313bd926b3add307a049c3ca4fa83046c7e2d2"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "assert (A<>B)...",
            "VernacExtend",
            "e7788e61c33619fd7ff0cea598a59cf485cd899f"
        ],
        [
            "unfold not;intro;subst B;intuition.",
            "VernacExtend",
            "3886005902d77ea0edb63d99da23234d0aed32cc"
        ],
        [
            "apply H55.",
            "VernacExtend",
            "d30cf86819c479b59995b13129b6a9f6afac9d6f"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "unfold OFSC;repeat split;sTarski...",
            "VernacExtend",
            "ee91bf0eb8bb21c9cb5bc008303123daa56dfdd0"
        ],
        [
            "2:unfold OFSC ,is_midpoint, Cong_3 in *;DecompAndAll.",
            "VernacExtend",
            "4ac1c1bb871e32d220ee37568b1f7d48e2dc352a"
        ],
        [
            "2:apply cong_right_commutativity.",
            "VernacExtend",
            "c795e97c4ea63024f297474fe05f033dcd86fcfa"
        ],
        [
            "2:assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "unfold is_midpoint in H1.",
            "VernacExtend",
            "17fd948f479eaf3146c93bb1785059234fd49c0b"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "show_distinct P Y...",
            "VernacExtend",
            "c529f806fa9764e56cab365d81cc4b6e5ec98fe7"
        ],
        [
            "clear H6 H2 H3 H7 H9 H5 H12 H13 H14 H15 H16 H18 H17 H22 H0 H.",
            "VernacExtend",
            "d8ca009c7d44b75626f84cea82f0f5ca740c5fda"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "show_distinct A B...",
            "VernacExtend",
            "00f43656514517d9283782b8cd1055ec988aa86b"
        ],
        [
            "show_distinct A C...",
            "VernacExtend",
            "b0071e469657e72f861b1ca1596a834df6108390"
        ],
        [
            "show_distinct B C...",
            "VernacExtend",
            "58355ad934fddf3bb6bcc1525e252a714a2dcb93"
        ],
        [
            "show_distinct Y C...",
            "VernacExtend",
            "4057d31c2b2a81415ca92ba4e6f22641af472d2b"
        ],
        [
            "show_distinct P Y...",
            "VernacExtend",
            "c529f806fa9764e56cab365d81cc4b6e5ec98fe7"
        ],
        [
            "show_distinct A Y...",
            "VernacExtend",
            "64e7789b31fa709dbbeef2a2c781883a0b948d13"
        ],
        [
            "show_distinct A Z...",
            "VernacExtend",
            "76ad89ba6880430baff4be3b400b231f1fbdbe9e"
        ],
        [
            "show_distinct Y B...",
            "VernacExtend",
            "dfe16b8fbfbf56c1b64fed9debf42f0fc7bf27e2"
        ],
        [
            "show_distinct Y Z...",
            "VernacExtend",
            "6202ce99ccc4808d3d517bf369c8a225c42e4425"
        ],
        [
            "show_distinct C' Y...",
            "VernacExtend",
            "972a5695d62e250d2e06c1a99c5ca5c65e67c0fa"
        ],
        [
            "show_distinct Q Q'...",
            "VernacExtend",
            "62db268f12c749cf1b799af44f50af64b7054410"
        ],
        [
            "assert (Col P B C).",
            "VernacExtend",
            "a2636f3248066fdbcbed0a51cd7350a944ea5ddb"
        ],
        [
            "eapply col_transitivity_1;try apply H32;Col.",
            "VernacExtend",
            "581945d3d49d91874293b04fa17dff6fbde3537e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "show_distinct Y Q...",
            "VernacExtend",
            "5471113c892865f14e30e6a198720012bc6ff182"
        ],
        [
            "clear H17 H0 H3 H7 H9 H12 H13 H15 H16 H22 H26 H27 H29 H30 H21 H33 H34 H38 H40.",
            "VernacExtend",
            "613a0c13a031707905bea8f7d328a0d73a8f24b3"
        ],
        [
            "assert (Col B A Y)...",
            "VernacExtend",
            "76aab151a05a1c46bfe36e45162cedb30203c6e2"
        ],
        [
            "assert (Col A Y Z)...",
            "VernacExtend",
            "cb742a4e3caa8f0abb07a50ae9f80b9c8edd80f6"
        ],
        [
            "assert (Col P Y Q)...",
            "VernacExtend",
            "cc818de2115634f15541d0084c504415ed0d6cde"
        ],
        [
            "assert (Col P Y C)...",
            "VernacExtend",
            "7763c02888b69910174441138f83c7d8dffceda9"
        ],
        [
            "assert (Col P Q C).",
            "VernacExtend",
            "db96e59c59f9c2e675d90a381f4d1e513de4a979"
        ],
        [
            "eapply col_transitivity_1;try apply H32;auto.",
            "VernacExtend",
            "ff3007e0e41f05a9de8e1c20e271b93404f9fe3f"
        ],
        [
            "assert (Col Y Q C).",
            "VernacExtend",
            "27d5779bec63314828315752671fafa914bede6d"
        ],
        [
            "eapply col_transitivity_2;try apply H32;auto.",
            "VernacExtend",
            "a247b83250021978895add626441fa3cba9530c6"
        ],
        [
            "assert (Col Q' Y C')...",
            "VernacExtend",
            "16b2b8a564344e083aee41dc0a753c1da8e5f862"
        ],
        [
            "assert (Col Q Z Q')...",
            "VernacExtend",
            "3621c1366e158a1e9e088f63d3776b85f08aaae2"
        ],
        [
            "assert (Col C Y C')...",
            "VernacExtend",
            "c59c2450dbcbcfd11df31ce59bb8baca0c279df1"
        ],
        [
            "clear H18 H23 H35 H4 H5 H11 H8 H2 H6.",
            "VernacExtend",
            "92fd87df0fdcb4ee9ecec8a0ebc976178f619aff"
        ],
        [
            "assert (Col A Z B).",
            "VernacExtend",
            "928589c6212dc3a208cd1dbd590f353e21bd8d20"
        ],
        [
            "eapply col_transitivity_1;try apply H36;Col.",
            "VernacExtend",
            "696f192fca21436dee255a50678ef150caf99cf9"
        ],
        [
            "assert (Col Y Z B).",
            "VernacExtend",
            "a457867ab27e541e3ba730f13db5b1b9d68ddd75"
        ],
        [
            "eapply col_transitivity_2;try apply H36;Col.",
            "VernacExtend",
            "b863f6bc727df77103f9a997e8adfd814f49f538"
        ],
        [
            "assert (Col C' C Q').",
            "VernacExtend",
            "2f6651f68c3151b53732295a740008b93ecb031e"
        ],
        [
            "eapply col_transitivity_1;try apply H42;Col.",
            "VernacExtend",
            "af1d6454000dbfa98b6703664135dd1b664ad58c"
        ],
        [
            "assert (Col Y C Q').",
            "VernacExtend",
            "51a186a7599c60f40626b434153c80b8d5fb7b97"
        ],
        [
            "eapply col_transitivity_2;try apply H42;Col.",
            "VernacExtend",
            "e1119cec2e9fe88c3fa8df5817c1f8590ecc3e0a"
        ],
        [
            "assert (Col C P Q').",
            "VernacExtend",
            "5394c55e749ce4fef5cb83b76febffb66a99ad6c"
        ],
        [
            "eapply col_transitivity_1;try apply H25;Col.",
            "VernacExtend",
            "9a137dffbcce0aa98067f4838126d61dfbeab238"
        ],
        [
            "assert (Col Y P Q').",
            "VernacExtend",
            "d194d0761355a00ef9b5040755597fcb1f9a0f83"
        ],
        [
            "eapply col_transitivity_2;try apply H25;Col.",
            "VernacExtend",
            "b4a74db050819d47d03b8a83c096b81d355dc276"
        ],
        [
            "assert (Col Y Q Q').",
            "VernacExtend",
            "6b1fb21987530e0abb59cbef3cd937bbd5dd6d0d"
        ],
        [
            "eapply col_transitivity_2;try apply H32;Col.",
            "VernacExtend",
            "0627ace8fc1359d75677e6fec497eed296f93f43"
        ],
        [
            "assert (Col P Q Q').",
            "VernacExtend",
            "e30228ad079345038b7714766daf32f2419836b2"
        ],
        [
            "eapply col_transitivity_2;try apply H32;Col.",
            "VernacExtend",
            "0627ace8fc1359d75677e6fec497eed296f93f43"
        ],
        [
            "assert (Col Q Z P).",
            "VernacExtend",
            "9f1d197b18fd82e626ca8c8e560156b539a753ae"
        ],
        [
            "eapply col_transitivity_1;try apply H43;Col.",
            "VernacExtend",
            "1ea5581b8621923fd08998ddf25e964a3c70f72a"
        ],
        [
            "assert (Col Q Z Y).",
            "VernacExtend",
            "0f59d556feeb70ad1a17fec454520f9fc5d06a80"
        ],
        [
            "eapply col_transitivity_1;try apply H43;Col.",
            "VernacExtend",
            "1ea5581b8621923fd08998ddf25e964a3c70f72a"
        ],
        [
            "assert (Col Q' Z P).",
            "VernacExtend",
            "72f865a1178f2db57babdc67e4d6eef72dab0972"
        ],
        [
            "eapply col_transitivity_2;try apply H43;Col.",
            "VernacExtend",
            "b78fa97d055a409f93c606741daf02ed1a3dbe0c"
        ],
        [
            "assert (Col Q' Z Y).",
            "VernacExtend",
            "2560f186210f6a54ca8ccca9426e9e4cc3b8ee02"
        ],
        [
            "eapply col_transitivity_2;try apply H43;Col.",
            "VernacExtend",
            "b78fa97d055a409f93c606741daf02ed1a3dbe0c"
        ],
        [
            "assert (Col Q' P Y).",
            "VernacExtend",
            "eab041a05c4c8cb7e7662a90edc35bd8cbd4512d"
        ],
        [
            "eapply col_transitivity_2;try apply H43;Col.",
            "VernacExtend",
            "b78fa97d055a409f93c606741daf02ed1a3dbe0c"
        ],
        [
            "assert (Col Y Z C).",
            "VernacExtend",
            "9f3618f97cbb7899d9c1bb16740762bbe3c0c0a2"
        ],
        [
            "eapply col_transitivity_1;try apply H43;Col.",
            "VernacExtend",
            "1ea5581b8621923fd08998ddf25e964a3c70f72a"
        ],
        [
            "assert (Col Y A C).",
            "VernacExtend",
            "a1a347b53327e361e382946fcab36021593de410"
        ],
        [
            "eapply col_transitivity_1;try apply H41;Col.",
            "VernacExtend",
            "aa1092e82bdc8a3e0a55a16bc3c45a501b331228"
        ],
        [
            "assert (Col A B C).",
            "VernacExtend",
            "82d0449f5d77661ea5f55e45336758296906e1ab"
        ],
        [
            "eapply col_transitivity_1;try apply H10;Col.",
            "VernacExtend",
            "83d5e7ce159f12cebd684be0ba3938db22b4f01a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_20_1 : forall A B C C' D P, Per A B C -> is_midpoint P C' D -> is_midpoint A C' C -> is_midpoint B D C -> Per B A P.",
            "VernacStartTheoremProof",
            "d2cbdaa6482d309a3bd5ea27fbf7132f541bd5f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "let_symmetric B' A B.",
            "VernacExtend",
            "3c6312267e3d4d8d632f76806351544dbc05539c"
        ],
        [
            "let_symmetric D' A D.",
            "VernacExtend",
            "c078d93d304c82c3654647db61ce6875903f6abb"
        ],
        [
            "let_symmetric P' A P.",
            "VernacExtend",
            "4579674e099158ec16cc523b3f96c6f662bbee89"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "assert (Per B' B C).",
            "VernacExtend",
            "9bd9db24953b91f5ea908feeb195afbbd791d6f9"
        ],
        [
            "eapply l8_3.",
            "VernacExtend",
            "f4f1adb8249f94b7110cd4629df20d6d56bd4ece"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold is_midpoint in H4;intuition;Col.",
            "VernacExtend",
            "514a100a855700089f209384fdb8b32fbcb21e7e"
        ],
        [
            "assert (Per B B' C').",
            "VernacExtend",
            "3ddcfd96e07b07bdfee7ead697ebe4b9eced790c"
        ],
        [
            "eapply l8_10.",
            "VernacExtend",
            "1ee3d8217c9ac2206eea0fb7c7068e5e356cf7a6"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "unfold Cong_3;repeat split;Tarski.",
            "VernacExtend",
            "554acc186e0dfbf4974462b7b2f4321b8b5ff163"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "eapply l7_2.",
            "VernacExtend",
            "26f6438992aee2c1c749148ef57b8a0bdda90f82"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "suppose (Cong B C' B D').",
            "VernacExtend",
            "ba77378228a886621921f6cf0665b3d99092df4a"
        ],
        [
            "suppose (IFSC C' P D B D' P' C B).",
            "VernacExtend",
            "4af74925dd7776ffa769df181db7df8db25a2461"
        ],
        [
            "assert (Cong P B P' B).",
            "VernacExtend",
            "43172f4d2558f57ad338c21f433fe9ff8f241a91"
        ],
        [
            "eapply l4_2;eauto.",
            "VernacExtend",
            "dc3c0adee93e3f019b52f3a0ebed35b7fb331a8d"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists P'.",
            "VernacExtend",
            "ce86f7cea0f712922d42bc3042708971484aee4f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold IFSC in *;repeat split.",
            "VernacExtend",
            "6b4e21136642fb857540d36efea22fd49ead3190"
        ],
        [
            "unfold is_midpoint in *;DecompAndAll;auto.",
            "VernacExtend",
            "714895f1bf1fa240a77eca4b09272ec25d57938c"
        ],
        [
            "Focus 5.",
            "VernacFocus",
            "5961ebb80157d6693af435552e5f3ba975263252"
        ],
        [
            "unfold is_midpoint in H2;DecompAndAll.",
            "VernacExtend",
            "f3b7d9de7ecb03533cfb89c7e75bb173ae32b07a"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "4:sTarski.",
            "VernacExtend",
            "444dd9cc2fafd85f630a6a1a02e1906f77dfbb2c"
        ],
        [
            "eapply (l7_15).",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold is_midpoint in H0;DecompAndAll;Between.",
            "VernacExtend",
            "98804ca264b18af992586032ae9de74f8821feb6"
        ],
        [
            "assert (Cong C D' C' D).",
            "VernacExtend",
            "3adcca099b7bc0fc38b01efbea140d40996f43bc"
        ],
        [
            "eapply (l7_13 A C D' C' D);Midpoint.",
            "VernacExtend",
            "4934a17a7b9234d3fede5018ce6be145ae5d4c3e"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (Cong P C' P' C).",
            "VernacExtend",
            "7f0d55f44061bc2fd5bc6108c2c6fd93dd38ab16"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply cong_transitivity with (C:=P) (D:=C').",
            "VernacExtend",
            "eab1835640b4d963a8a4f4d59a400ba0d97734d4"
        ],
        [
            "unfold is_midpoint in H0;DecompAndAll.",
            "VernacExtend",
            "dbe4b0ad5bdeb17b046ad8dd7fe4b12eb07f5947"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Per in H8.",
            "VernacExtend",
            "385ddb4a11aa7eba10eedce3a54d498fbc5266bc"
        ],
        [
            "DecompExAnd H8 D0.",
            "VernacExtend",
            "5afaa2dddb7047871275e1aac342845589c82d48"
        ],
        [
            "suppose (D0=D').",
            "VernacExtend",
            "51ef8ccbdf3ff41e537a66150e6d5d49fd9d9f8d"
        ],
        [
            "subst D0;auto.",
            "VernacExtend",
            "3a3cbf717c04b0279031c0e84d295b69a77ffe6c"
        ],
        [
            "assert (is_midpoint B' C' D').",
            "VernacExtend",
            "47195f00d8f594b4daadafeb19fd5b8b3b5497c7"
        ],
        [
            "unfold is_midpoint;split.",
            "VernacExtend",
            "192582dde55679c3867bf58d99ae90835c99f96b"
        ],
        [
            "eapply l7_15.",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "unfold is_midpoint in H2;decompose [and] H2;Between.",
            "VernacExtend",
            "c5a25cde7885104bde4847a976d5c6ef17d796e8"
        ],
        [
            "eapply l7_16.",
            "VernacExtend",
            "6eaff32315bcf11730d79451b7c237bd5472b01a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "unfold is_midpoint in H2;decompose [and] H2;sTarski.",
            "VernacExtend",
            "bbddcb97de4ffe43de4e70b15a2d33891c83fa5b"
        ],
        [
            "eapply symmetric_point_unicity;eauto.",
            "VernacExtend",
            "e5a2f47ebdd70151ffd04c5fb4450928f34ef3c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_20_2 : forall A B C C' D P, Per A B C -> is_midpoint P C' D -> is_midpoint A C' C -> is_midpoint B D C -> B<>C -> A<>P.",
            "VernacStartTheoremProof",
            "787fda835b0e147c763b2bc5e271e84c803e0be4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "assert (C=D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "eapply symmetric_point_unicity;try apply H1;eauto.",
            "VernacExtend",
            "f4906f91878a528ec333a23d1032b43534c25ae9"
        ],
        [
            "smart_subst D.",
            "VernacExtend",
            "d614e36181d88e5923f1068bd7b94a0c90f05a77"
        ],
        [
            "assert (B=C).",
            "VernacExtend",
            "515af9424534101738ca1cf1624c56084d9112ac"
        ],
        [
            "eapply l7_3;eauto.",
            "VernacExtend",
            "58a47e6c469c58c9411769701f8a6ccf41bf4a41"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_21_aux : forall A B C, A<> B -> ~ Col A B C -> exists P, exists T, Perp A B P A /\\ Col A B T /\\ Bet C T P.",
            "VernacStartTheoremProof",
            "628a8c4bc43cf3cd469f4cab2bad69b68b2ded38"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists X : Point, Col A B X /\\ Perp A B C X).",
            "VernacExtend",
            "f1605c7a8353c31875320f61f09ed717ca803dcf"
        ],
        [
            "eapply l8_18_existence...",
            "VernacExtend",
            "3b4278fdd5c3ea0faa98bea9cca1b5a79a5b182c"
        ],
        [
            "DecompExAnd H1 X.",
            "VernacExtend",
            "57d8f1f3e16667a13e3f55dc5ae9731e609d571c"
        ],
        [
            "assert (Per A X C).",
            "VernacExtend",
            "33249f2e72f955692f9cdc0afce70372b3f34336"
        ],
        [
            "assert (Perp_in X A B C X).",
            "VernacExtend",
            "8ef0a1d1b78d9a2b1c80aaa94a4fb29eb6496c91"
        ],
        [
            "eapply l8_15_1;auto.",
            "VernacExtend",
            "3798a2d1513114b9bce02d88f2dcaeb07489810c"
        ],
        [
            "unfold Perp_in in H1.",
            "VernacExtend",
            "252fb645014fc3842413d02af6aa6011dc16a8b4"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "apply H9;Tarski.",
            "VernacExtend",
            "c1e4b1c3f62c27476148d40d388dcc45c8b0858a"
        ],
        [
            "assert (HH:=H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "unfold Per in H1.",
            "VernacExtend",
            "59cf689935a884fc6e799a1d7b65ce7cf89e9cdd"
        ],
        [
            "DecompExAnd H1 C'.",
            "VernacExtend",
            "5472d8eb397b637f53011dd8e1f30a1b9249cf72"
        ],
        [
            "let_symmetric C'' A C.",
            "VernacExtend",
            "f70328be273dab20c01b1359d888e886838663c5"
        ],
        [
            "assert (exists P, is_midpoint P C' C'').",
            "VernacExtend",
            "8f1153cdf59aef295c139a8cec9a41e8b28aa340"
        ],
        [
            "eapply l7_25.",
            "VernacExtend",
            "7bbb896d42e104b07bab881e2b3d1c19d20857db"
        ],
        [
            "unfold is_midpoint in H2.",
            "VernacExtend",
            "e226a05d765fc213d5d497be7b77eb2f80dc0649"
        ],
        [
            "decompose [and] H2.",
            "VernacExtend",
            "14e483725a3acdf3d1c92a3dd51940ed3c8270c6"
        ],
        [
            "eapply cong_transitivity with (C:=C) (D:=A).",
            "VernacExtend",
            "34e6ad7b92898d0cabc67dc033bcf436f6549036"
        ],
        [
            "2:apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "DecompEx H1 P.",
            "VernacExtend",
            "53868bd94b0b921c044f4ce274e7c30b742202a2"
        ],
        [
            "assert (Per X A P).",
            "VernacExtend",
            "32e6e1b49afbba3ac6666ce2cb1d79d241bcfa60"
        ],
        [
            "eapply l8_20_1.",
            "VernacExtend",
            "66b12269ed6fffdfa3df5c648d9fa0130244a212"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "show_distinct X C.",
            "VernacExtend",
            "a7c60b4b06ba2c81389ed6c5788bcdc696b8093f"
        ],
        [
            "unfold is_midpoint in*;DecompAndAll.",
            "VernacExtend",
            "074eea3fae60ab7098daeea4ad2cc04e0da8c982"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (A<>P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "eapply l8_20_2.",
            "VernacExtend",
            "f4a079f7f88d59cb3688c5bd04093473660f4039"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (exists T, Bet P T C /\\ Bet A T X).",
            "VernacExtend",
            "24d6555591b7ce72f421084074b8a0c454d72d9b"
        ],
        [
            "eapply l3_17 with (A:=C'') (A':=C');unfold is_midpoint in *;intuition.",
            "VernacExtend",
            "9a34ba10d43b2a6c7626aa7d4193c9db922b4a8f"
        ],
        [
            "DecompExAnd H10 T.",
            "VernacExtend",
            "561559da00cf44306a3a72b6440ae51bbfb3efd0"
        ],
        [
            "cases_equality A X.",
            "VernacExtend",
            "f475ba612c09bcd8bd7d52deaac0e14d7986a083"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "repeat split;Tarski;Between.",
            "VernacExtend",
            "1c06b6218c63dedb3729090fbb419b1bb3587daa"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "assert (Perp_in A A B C A).",
            "VernacExtend",
            "5bd76282f608c1773c4d4951f799eed3ae1740b7"
        ],
        [
            "eapply l8_15_1;auto.",
            "VernacExtend",
            "3798a2d1513114b9bce02d88f2dcaeb07489810c"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "unfold Perp_in in H3.",
            "VernacExtend",
            "81b1848137f837329c762c2fb0967e68252ff277"
        ],
        [
            "decompose [and] H3;clear H3.",
            "VernacExtend",
            "cd2921edf4657af631a1c0c3b0adccd05dfabff8"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "unfold Perp_in;repeat split;Tarski;auto.",
            "VernacExtend",
            "a6b37b14ffb9f38480f9a8e4840b6619e9bbce21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply H16;auto.",
            "VernacExtend",
            "1e9cfcaa9c3a1f56c1470d2071a3abed09a18dc6"
        ],
        [
            "assert (Col A P C).",
            "VernacExtend",
            "67f05c9096bce8c1aefe2b23f95ad9330520da5b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A P V).",
            "VernacExtend",
            "b1b4b74f61123f82d94d1931c6f7646f5882cd5c"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A C V).",
            "VernacExtend",
            "81db43beee90d12ec37614b1fadc17639745b70a"
        ],
        [
            "eapply col_transitivity_1;try apply H9;auto.",
            "VernacExtend",
            "5cf92b69dca253c74feeb712b86418622da23a47"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Col A B T).",
            "VernacExtend",
            "ef9a53e2f59052dd6fdf51f6c4960b1999190009"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "unfold is_midpoint;intuition.",
            "VernacExtend",
            "a124e71d07263d62e64654ba56761ad9c774730c"
        ],
        [
            "unfold is_midpoint;intuition.",
            "VernacExtend",
            "a124e71d07263d62e64654ba56761ad9c774730c"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "repeat split;Between.",
            "VernacExtend",
            "a5522eac2768700235e29bd7dcd33e025ecc25d2"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "eapply l8_13_2;auto.",
            "VernacExtend",
            "6abfd02ff0daae01cf2356314f8b4582325ede53"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_21 : forall A B C, A<> B -> exists P, exists T, Perp A B P A /\\ Col A B T /\\ Bet C T P.",
            "VernacStartTheoremProof",
            "b237883c837a9e754f07db875a41637dcf097e12"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col A B C.",
            "VernacExtend",
            "89895fb360e422e58cd86d6bfdc183e368707d1b"
        ],
        [
            "assert (exists C', ~ Col A B C').",
            "VernacExtend",
            "5e60754837258670e9555dc9db2f6e62eb10522c"
        ],
        [
            "eapply l6_25...",
            "VernacExtend",
            "ff207fe522430e2cd25aba69e044ae5dcf406c52"
        ],
        [
            "DecompEx H1 C'.",
            "VernacExtend",
            "4891dca11d3566f4d95b89857d76bcd6671fdaa1"
        ],
        [
            "assert ( exists P : Point, (exists T : Point, Perp A B P A /\\ Col A B T /\\ Bet C' T P)).",
            "VernacExtend",
            "b1f21727a292293bc05be7b852104343408a7093"
        ],
        [
            "apply (l8_21_aux A B C');auto.",
            "VernacExtend",
            "99c3957974dcace7a976ec68c6ac4ccea294aa51"
        ],
        [
            "DecompEx H1 P.",
            "VernacExtend",
            "53868bd94b0b921c044f4ce274e7c30b742202a2"
        ],
        [
            "DecompEx H3 T.",
            "VernacExtend",
            "74732cf877e55527bf60bb97b743de76beacc951"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply l8_21_aux;auto.",
            "VernacExtend",
            "6fd39a02b671818e22751fcc0b11e7a43251100f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_symmetry : forall A B C D, Perp A B C D -> Perp C D A B.",
            "VernacStartTheoremProof",
            "d373558a127e9b03437314cfcc9f2d13f363bc8b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_commutativity : forall A B C D, Perp A B C D -> Perp B A D C.",
            "VernacStartTheoremProof",
            "19759b46dcf212db444bbe836b5a08403b8e70ed"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_left_commutativity : forall A B C D, Perp A B C D -> Perp B A C D.",
            "VernacStartTheoremProof",
            "8c424399be35172c6f0b755ca2142d792bfc0b70"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_right_commutativity : forall A B C D, Perp A B C D -> Perp A B D C.",
            "VernacStartTheoremProof",
            "044e2a58144062f0f0a9ccff293c8fac5830d406"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_in in *.",
            "VernacExtend",
            "dd80aea9b2a3717dd74b7e12c812facd14804a80"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_left_commutativity : forall A B C D X, Perp_in X A B C D -> Perp_in X B A C D.",
            "VernacStartTheoremProof",
            "58a9d757ab5bb9c7a001bc480b09d59686772174"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_right_commutativity : forall A B C D X, Perp_in X A B C D -> Perp_in X A B D C.",
            "VernacStartTheoremProof",
            "5e6365473ba6648f4affcc527e40c7dfa097e460"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_commutativity : forall A B C D X, Perp_in X A B C D -> Perp_in X B A D C.",
            "VernacStartTheoremProof",
            "f003774a17173cbc0b346211a6cc4bc24fa22a3a"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_symmetry : forall A B C D X, Perp_in X A B C D -> Perp_in X C D A B.",
            "VernacStartTheoremProof",
            "52e78f122f92096bf0999c10641ccb2733037db8"
        ],
        [
            "unfold Perp_in.",
            "VernacExtend",
            "bcb0402edc653393825ac3c42c72032392462df2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve perp_symmetry perp_commutativity perp_left_commutativity perp_right_commutativity : sPerp.",
            "VernacHints",
            "a2084652bd1b79412cc374605f93477499bb1443"
        ],
        [
            "Hint Resolve perp_in_symmetry perp_in_commutativity perp_in_left_commutativity perp_in_right_commutativity : sPerp.",
            "VernacHints",
            "e68d17631992b55effbfe8a26aa83539ace0b6ce"
        ],
        [
            "Ltac sPerp := eauto with sPerp.",
            "VernacExtend",
            "73f0bb62605d2c27ea48f4befe47299a1dc18dbe"
        ],
        [
            "Lemma perp_per_1 : forall A B C, A<>B -> Perp A B C A -> Per B A C.",
            "VernacStartTheoremProof",
            "e6c4fda1ace77d6da8625f77471ee2836917f2ef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp_in A A B C A).",
            "VernacExtend",
            "5bd76282f608c1773c4d4951f799eed3ae1740b7"
        ],
        [
            "eapply l8_15_1;auto.",
            "VernacExtend",
            "3798a2d1513114b9bce02d88f2dcaeb07489810c"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "unfold Perp_in in H1.",
            "VernacExtend",
            "252fb645014fc3842413d02af6aa6011dc16a8b4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_per_2 : forall A B C, A<>B -> Perp A B A C -> Per B A C.",
            "VernacStartTheoremProof",
            "e5fb4e70475cf329bcbce7a8d90d8f21ef39c2dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp A B C A);eauto with sPerp.",
            "VernacExtend",
            "5587c7d9a6c914402f5261f287e61e6fc25cea91"
        ],
        [
            "apply perp_per_1;auto.",
            "VernacExtend",
            "ab41a784695be3bdb5373292a6707ab942d76fb5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve perp_per_1 perp_per_2 : Perp.",
            "VernacHints",
            "d9ea2345b241adbda5730ed32edc0827fe6c023d"
        ],
        [
            "Lemma perp_col : forall A B C D E, A<>E -> Perp A B C D -> Col A B E -> Perp A E C D.",
            "VernacStartTheoremProof",
            "a4dabb5f639928e3a66f6288d6ec3f9b9cb1ab68"
        ],
        [
            "Proof with Col.",
            "VernacProof",
            "278e3f5e190d043cd58c89570f211c77466db514"
        ],
        [
            "unfold Perp,Perp_in.",
            "VernacExtend",
            "85cb39cd5b73b9b42e2abe105e7358286e032213"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompExAnd H0 X.",
            "VernacExtend",
            "f4d52e4e54d8b6f6856ec1d5bda5d1bfb40b7b4e"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "repeat split;auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "assert (Col A E X).",
            "VernacExtend",
            "1e34c3f187fa560b7045da0a66e12d3dd2dddc4d"
        ],
        [
            "eapply col_transitivity_1;try apply H3...",
            "VernacExtend",
            "5944098314a09773fc8c1cc07d174b28c3b84d60"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assert (Col A B U).",
            "VernacExtend",
            "326e04433600aeccb8d65a488be3bea8f48b43c0"
        ],
        [
            "eapply col_transitivity_1;try apply H...",
            "VernacExtend",
            "508351157dec7472e8a19781bccf770e72043248"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve perp_col : Perp.",
            "VernacHints",
            "dd82043d172fe62c64912f82b24b8589e970634e"
        ],
        [
            "Lemma perp_not_eq_1 : forall A B C D, Perp A B C D -> A<>B.",
            "VernacStartTheoremProof",
            "a818147bdcf6a3798a5bf0501686559a857c4eb9"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "unfold Perp_in in H0.",
            "VernacExtend",
            "56ae65c1af47d9a232eb8995b972f7409e68e061"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_not_eq_2 : forall A B C D, Perp A B C D -> C<>D.",
            "VernacStartTheoremProof",
            "fdc3b9276fc98881ece4012f76d20c554ae60245"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp C D A B);sPerp.",
            "VernacExtend",
            "57c4b9fb32d90d5cfe2b5e5f33c1928dbadfe878"
        ],
        [
            "eapply perp_not_eq_1;eauto.",
            "VernacExtend",
            "b9ad341dc411e3271ed7b76ed3c0279c2ae9996b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve perp_not_eq_1 perp_not_eq_2 : Perp.",
            "VernacHints",
            "cb1bdd583b0be15126d2dce1b475b24e8ea8432d"
        ],
        [
            "Lemma perp_perp_in : forall A B C, Perp A B C A -> Perp_in A A B C A.",
            "VernacStartTheoremProof",
            "3f24d4b905e0cffb27b992d6d6e0cbbe20284436"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l8_15_1;Perp.",
            "VernacExtend",
            "f7b82df7d2df9ec488fad3750e8f744a176bf806"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve perp_perp_in : Perp.",
            "VernacHints",
            "1561f70770399fe81bd5d991ea3503612da8156e"
        ]
    ],
    "proofs": [
        {
            "name": "l8_2",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Per in *.",
                        "VernacExtend",
                        "cb7b87362e910ccf5bf8015ae43a235e8db00d3d"
                    ]
                },
                {
                    "command": [
                        "DecompExAnd H C'.",
                        "VernacExtend",
                        "d41fd882c58f9c5ee99e30bbb3eb923a8ef8e188"
                    ]
                },
                {
                    "command": [
                        "assert (exists A', is_midpoint B A A').",
                        "VernacExtend",
                        "3f6d2b30a8a3a336d41b7cde175077c4c34df6f3"
                    ]
                },
                {
                    "command": [
                        "apply symmetric_point_construction.",
                        "VernacExtend",
                        "0e736e1cb621ad02a9cdd97f5d4140f372fe8c7e"
                    ]
                },
                {
                    "command": [
                        "DecompEx H A'.",
                        "VernacExtend",
                        "0c34aaaddc40fab48a2b942b4dd4182bfe37aead"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C' A' C A).",
                        "VernacExtend",
                        "ca0750171f25c8f22add4bf9a684ac86de0efa76"
                    ]
                },
                {
                    "command": [
                        "eapply l7_13;eauto.",
                        "VernacExtend",
                        "235401e68fc3f27ffbfcb72549be277bc73ba788"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A C' A' C).",
                        "VernacExtend",
                        "b1dc688895aa8945fc8461049b588e5f860f63e5"
                    ]
                },
                {
                    "command": [
                        "eapply l7_13;eauto.",
                        "VernacExtend",
                        "235401e68fc3f27ffbfcb72549be277bc73ba788"
                    ]
                },
                {
                    "command": [
                        "eapply l7_2.",
                        "VernacExtend",
                        "26f6438992aee2c1c749148ef57b8a0bdda90f82"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold is_midpoint in *;intuition.",
                        "VernacExtend",
                        "b37d8b6585877eff8b2a40bf15d738ea0b75dc69"
                    ]
                },
                {
                    "command": [
                        "eapply cong_transitivity with (C:=A) (D:=C').",
                        "VernacExtend",
                        "8f0453565a029f443ced906fb34ba3d518166297"
                    ]
                },
                {
                    "command": [
                        "sTarski.",
                        "VernacExtend",
                        "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
                    ]
                },
                {
                    "command": [
                        "sTarski.",
                        "VernacExtend",
                        "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_5",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Per.",
                        "VernacExtend",
                        "37c5e182af51240a790620af38dd30226754701e"
                    ]
                },
                {
                    "command": [
                        "exists B;intuition.",
                        "VernacExtend",
                        "2a37218f1806581ff3ae84eadc3cc6f222bd19ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_14_1",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "unfold not;intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "DecompEx H X.",
                        "VernacExtend",
                        "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in H0.",
                        "VernacExtend",
                        "56ae65c1af47d9a232eb8995b972f7409e68e061"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H0;clear H0.",
                        "VernacExtend",
                        "991eee06718c696679a0e8d74d9391a6381adaf0"
                    ]
                },
                {
                    "command": [
                        "clear H3 H2.",
                        "VernacExtend",
                        "6640420ed37e9a3a541f563abc785b5d1764e97c"
                    ]
                },
                {
                    "command": [
                        "assert (Per A X A).",
                        "VernacExtend",
                        "4a37aab9529849f2815633a9a94bc6218b3a1b5c"
                    ]
                },
                {
                    "command": [
                        "apply H5;Tarski.",
                        "VernacExtend",
                        "1856b2f3e368e5c0f5c603cbedb78a109b2ae59e"
                    ]
                },
                {
                    "command": [
                        "assert (A=X);Perp.",
                        "VernacExtend",
                        "9eca4d74c3b7273a7db125e4079be9412287c53f"
                    ]
                },
                {
                    "command": [
                        "assert (Per B X B).",
                        "VernacExtend",
                        "5a71bd1eb1953622990cd24fbb5e9a6ed860ed8f"
                    ]
                },
                {
                    "command": [
                        "apply H5;Tarski.",
                        "VernacExtend",
                        "1856b2f3e368e5c0f5c603cbedb78a109b2ae59e"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "assert (B=A);Perp.",
                        "VernacExtend",
                        "0564b79360e37767d88584c704f3be01a2a3163b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_20_2",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "subst P.",
                        "VernacExtend",
                        "37a29b451de870ca30fc70b22763d18c31140568"
                    ]
                },
                {
                    "command": [
                        "assert (C=D).",
                        "VernacExtend",
                        "4d7d671c2feb3545c987f482b7c460f6171544d4"
                    ]
                },
                {
                    "command": [
                        "eapply symmetric_point_unicity;try apply H1;eauto.",
                        "VernacExtend",
                        "f4906f91878a528ec333a23d1032b43534c25ae9"
                    ]
                },
                {
                    "command": [
                        "smart_subst D.",
                        "VernacExtend",
                        "d614e36181d88e5923f1068bd7b94a0c90f05a77"
                    ]
                },
                {
                    "command": [
                        "assert (B=C).",
                        "VernacExtend",
                        "515af9424534101738ca1cf1624c56084d9112ac"
                    ]
                },
                {
                    "command": [
                        "eapply l7_3;eauto.",
                        "VernacExtend",
                        "58a47e6c469c58c9411769701f8a6ccf41bf4a41"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_symmetry",
            "line_nb": 866,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "DecompEx H X.",
                        "VernacExtend",
                        "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in *.",
                        "VernacExtend",
                        "dd80aea9b2a3717dd74b7e12c812facd14804a80"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_commutativity",
            "line_nb": 874,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "DecompEx H X.",
                        "VernacExtend",
                        "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in *.",
                        "VernacExtend",
                        "dd80aea9b2a3717dd74b7e12c812facd14804a80"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_left_commutativity",
            "line_nb": 882,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "DecompEx H X.",
                        "VernacExtend",
                        "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in *.",
                        "VernacExtend",
                        "dd80aea9b2a3717dd74b7e12c812facd14804a80"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_right_commutativity",
            "line_nb": 890,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "DecompEx H X.",
                        "VernacExtend",
                        "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in *.",
                        "VernacExtend",
                        "dd80aea9b2a3717dd74b7e12c812facd14804a80"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_left_commutativity",
            "line_nb": 898,
            "steps": [
                {
                    "command": [
                        "unfold Perp_in.",
                        "VernacExtend",
                        "bcb0402edc653393825ac3c42c72032392462df2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_right_commutativity",
            "line_nb": 903,
            "steps": [
                {
                    "command": [
                        "unfold Perp_in.",
                        "VernacExtend",
                        "bcb0402edc653393825ac3c42c72032392462df2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_commutativity",
            "line_nb": 908,
            "steps": [
                {
                    "command": [
                        "unfold Perp_in.",
                        "VernacExtend",
                        "bcb0402edc653393825ac3c42c72032392462df2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_symmetry",
            "line_nb": 913,
            "steps": [
                {
                    "command": [
                        "unfold Perp_in.",
                        "VernacExtend",
                        "bcb0402edc653393825ac3c42c72032392462df2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_per_1",
            "line_nb": 921,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Perp_in A A B C A).",
                        "VernacExtend",
                        "5bd76282f608c1773c4d4951f799eed3ae1740b7"
                    ]
                },
                {
                    "command": [
                        "eapply l8_15_1;auto.",
                        "VernacExtend",
                        "3798a2d1513114b9bce02d88f2dcaeb07489810c"
                    ]
                },
                {
                    "command": [
                        "Tarski.",
                        "VernacExtend",
                        "eb55766773b17f46fc762bc4b1bc99580674a56b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in H1.",
                        "VernacExtend",
                        "252fb645014fc3842413d02af6aa6011dc16a8b4"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_per_2",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Perp A B C A);eauto with sPerp.",
                        "VernacExtend",
                        "5587c7d9a6c914402f5261f287e61e6fc25cea91"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1;auto.",
                        "VernacExtend",
                        "ab41a784695be3bdb5373292a6707ab942d76fb5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_not_eq_1",
            "line_nb": 953,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "DecompEx H X.",
                        "VernacExtend",
                        "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_in in H0.",
                        "VernacExtend",
                        "56ae65c1af47d9a232eb8995b972f7409e68e061"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_not_eq_2",
            "line_nb": 960,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Perp C D A B);sPerp.",
                        "VernacExtend",
                        "57c4b9fb32d90d5cfe2b5e5f33c1928dbadfe878"
                    ]
                },
                {
                    "command": [
                        "eapply perp_not_eq_1;eauto.",
                        "VernacExtend",
                        "b9ad341dc411e3271ed7b76ed3c0279c2ae9996b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_perp_in",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l8_15_1;Perp.",
                        "VernacExtend",
                        "f7b82df7d2df9ec488fad3750e8f744a176bf806"
                    ]
                },
                {
                    "command": [
                        "Tarski.",
                        "VernacExtend",
                        "eb55766773b17f46fc762bc4b1bc99580674a56b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}