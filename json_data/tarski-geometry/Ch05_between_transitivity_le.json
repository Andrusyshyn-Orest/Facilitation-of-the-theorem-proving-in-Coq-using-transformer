{
    "filename": "Ch05_between_transitivity_le.v",
    "coq_project": "tarski-geometry",
    "vernac_cmds": [
        [
            "Require Export Ch04_congruence_between_properties.",
            "VernacRequire",
            "e83203b9f766d60883577898805646b0737439ea"
        ],
        [
            "Lemma l5_1 : forall A B C D, A<>B -> Bet A B C -> Bet A B D -> Bet A C D \\/ Bet A D C.",
            "VernacStartTheoremProof",
            "b4c58d3893a3dd770247f883df96e7fb56dc468e"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists C', Bet A D C' /\\ Cong D C' C D)...",
            "VernacExtend",
            "36f2a8cc5cca367575de301ceb76dc74473212c9"
        ],
        [
            "DecompExAnd H2 C'.",
            "VernacExtend",
            "ebfe81599c169294cb9a68057e464cddc0438ed7"
        ],
        [
            "assert (exists D', Bet A C D' /\\ Cong C D' C D)...",
            "VernacExtend",
            "ddb4bc726dd073c12cb89ec49f7f80a0b69ccc40"
        ],
        [
            "DecompExAnd H2 D'.",
            "VernacExtend",
            "62ea8ffa4b988dadd907f9ddfada954fa15130dd"
        ],
        [
            "assert (exists B', Bet A C' B' /\\ Cong C' B' C B)...",
            "VernacExtend",
            "4d7a7e29162b3965c6c125e48221a0f7270b3368"
        ],
        [
            "DecompExAnd H2 B'.",
            "VernacExtend",
            "d24a27fd8241c7499185012765b02f41deba0fc4"
        ],
        [
            "assert (exists B'', Bet A D' B'' /\\ Cong D' B'' D B)...",
            "VernacExtend",
            "4b8fb1ea5036fe06955e670faa62845d6dcac77a"
        ],
        [
            "DecompExAnd H2 B''.",
            "VernacExtend",
            "d052f33e07d441fc4cc5bb8a417882b9210f3880"
        ],
        [
            "assert (Cong B C' B'' C).",
            "VernacExtend",
            "8cac1c4219bc2e34b9a0986d19a8633dff788e37"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "3:apply cong_commutativity.",
            "VernacExtend",
            "d37a21df7d1e91510cf30a3953ef770fddba12a7"
        ],
        [
            "3:apply cong_symmetry.",
            "VernacExtend",
            "561ca29eef35e152a6601e17d7a5bf411d002884"
        ],
        [
            "3:apply H11.",
            "VernacExtend",
            "a719567dd8fcaafb5708f034d567dc2d9ca8392f"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "esTarski.",
            "VernacExtend",
            "8d590d7c94ab42b108ae5f37debd778082982ccd"
        ],
        [
            "assert (Cong B B' B'' B).",
            "VernacExtend",
            "5139935fc383f981ce3c50de5d2980e2edfbdd0f"
        ],
        [
            "eapply l2_11;try apply H2;Between.",
            "VernacExtend",
            "24ad4b23a02b929370e5ed8420d33a5d9ae6e48d"
        ],
        [
            "assert (B''=B').",
            "VernacExtend",
            "e969ad95abc69b7563623e6e1ff7732486f2b660"
        ],
        [
            "apply construction_unicity with (Q:=A) (A:=B) (B:=B'') (C:=B) (x:=B'') (y:=B');Between...",
            "VernacExtend",
            "206009cde929937e5d1c426e9d4fec61521f9556"
        ],
        [
            "smart_subst B''.",
            "VernacExtend",
            "3f790bd7cc80830945f37dbfbfa37e00471338dd"
        ],
        [
            "assert (FSC B C D' C' B' C' D C).",
            "VernacExtend",
            "6d54c8027d3afe4143253d72ef6ad9039bb25255"
        ],
        [
            "unfold FSC;repeat split;unfold Col;Between;sTarski.",
            "VernacExtend",
            "97c28f3c6cc6ec3d9e02dbaa5e6849f05ce70cf1"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "apply l2_11 with (A:=B) (B:=C) (C:=D') (A':=B') (B':=C') (C':=D); Between;sTarski;esTarski.",
            "VernacExtend",
            "954cb9121b6a2b894e6bf2a5741b421c5e232a14"
        ],
        [
            "assert (Cong C' D' C D).",
            "VernacExtend",
            "eb6a5345fd818b8e213424f90c986a07df29bb63"
        ],
        [
            "cases_equality B C.",
            "VernacExtend",
            "4754af842025da598159812cfcb0c43af979a32f"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_16;try apply H3...",
            "VernacExtend",
            "10652bd596c026435a308c21a4c03064e5226930"
        ],
        [
            "assert (exists E, Bet C E C' /\\ Bet D E D').",
            "VernacExtend",
            "cc51be518dd141b4850763b4a4f5c2a72c117c01"
        ],
        [
            "eapply inner_pasch;Between.",
            "VernacExtend",
            "63a940e42d260d489e34bc918256eb26e333bb53"
        ],
        [
            "DecompExAnd H13 E.",
            "VernacExtend",
            "d201d0ea033dbccf8e374159178ccfb23587ac12"
        ],
        [
            "assert (IFSC D E D' C D E D' C').",
            "VernacExtend",
            "4e923f6a2dea06f003c036da4b2d3dd53c748874"
        ],
        [
            "unfold IFSC;repeat split;Between;sTarski.",
            "VernacExtend",
            "85c54b9c70799d79023e6c1c5a45156549841238"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (IFSC C E C' D C E C' D').",
            "VernacExtend",
            "4b2ac6904a3c3160e05166e070692211a575b64c"
        ],
        [
            "unfold IFSC;repeat split;Between;sTarski.",
            "VernacExtend",
            "85c54b9c70799d79023e6c1c5a45156549841238"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (Cong E C E C').",
            "VernacExtend",
            "3057e49d37701e73d89e239dc5104c5adf9a2f1d"
        ],
        [
            "eapply l4_2;eauto.",
            "VernacExtend",
            "dc3c0adee93e3f019b52f3a0ebed35b7fb331a8d"
        ],
        [
            "assert (Cong E D E D').",
            "VernacExtend",
            "6ca6ef93a92146c81d747a63879ead2185edba7a"
        ],
        [
            "eapply l4_2;eauto.",
            "VernacExtend",
            "dc3c0adee93e3f019b52f3a0ebed35b7fb331a8d"
        ],
        [
            "cases_equality C C'.",
            "VernacExtend",
            "5d38a8c6aad49481675e8e5683bd2570257c3dbd"
        ],
        [
            "smart_subst C'.",
            "VernacExtend",
            "3efa7476f64c3fedcb4417b66bb79186b73888bb"
        ],
        [
            "assert (E=C).",
            "VernacExtend",
            "c4da81c1def584e67d56f6e44ee9645070f81109"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "smart_subst E.",
            "VernacExtend",
            "c3f08b9e5cf7a38ceaca239f522541f5a064c7e3"
        ],
        [
            "unfold IFSC, FSC,Cong_3 in *;intuition.",
            "VernacExtend",
            "e2a02177117365628f611fe90ecb1b47c6cee810"
        ],
        [
            "assert (C<>D').",
            "VernacExtend",
            "6334bf352d52bdd9bf8130f1f52fd8ac797d7ada"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "assert (exists P, Bet C' C P /\\ Cong C P C D')...",
            "VernacExtend",
            "708605216613bd7e249a835031bf3ed34f7ab6bf"
        ],
        [
            "DecompExAnd H21 P.",
            "VernacExtend",
            "6ee8167614be16d87ac20cd6ba60186f7804105e"
        ],
        [
            "assert (exists R, Bet D' C R /\\ Cong C R C E)...",
            "VernacExtend",
            "29796f56c9d3e2c6b8a28036c3ac8fad814857fd"
        ],
        [
            "DecompExAnd H21 R.",
            "VernacExtend",
            "54a39da28789e220a1283cc7809ca0f27bb27be7"
        ],
        [
            "assert (exists Q, Bet P R Q /\\ Cong R Q R P)...",
            "VernacExtend",
            "28f42b117d8eb25b2a3f4b810002b00a23b4d8bb"
        ],
        [
            "DecompExAnd H21 Q.",
            "VernacExtend",
            "dfb74976d70d134df9fdbddec22f1ddd4c647e64"
        ],
        [
            "assert (FSC D' C R P P C E D').",
            "VernacExtend",
            "16761978a1191717fa0a01b5cfe9144475531ef0"
        ],
        [
            "unfold FSC;unfold Cong_3;intuition...",
            "VernacExtend",
            "007be75c09214543043a1b1be45551a5b6270d4e"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "3:apply H26.",
            "VernacExtend",
            "0f934bedd1c14b3a99c446bfb27c2b97597b4db0"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (Cong R P E D').",
            "VernacExtend",
            "85fa295238754b4d9bcbffa51522fb7a286498b3"
        ],
        [
            "eapply l4_16.",
            "VernacExtend",
            "43cdb6881f761cbe00ac88b97efdbe2764d3fe1a"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Cong R Q E D).",
            "VernacExtend",
            "852aa3ef2b4eb98f2395b798c83d09c10b8d2579"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H28.",
            "VernacExtend",
            "6b8732fef2923d01547eff572e1cbd48552d1a2b"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (FSC D' E D C P R Q C).",
            "VernacExtend",
            "128fbe6c5f0a9a83f8cfaaa34fa7b8d12644428d"
        ],
        [
            "unfold FSC;unfold Cong_3;intuition...",
            "VernacExtend",
            "007be75c09214543043a1b1be45551a5b6270d4e"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "3:eapply cong_commutativity.",
            "VernacExtend",
            "764cee7e7aa9465f28fff361892c886bc9239025"
        ],
        [
            "3:eapply cong_symmetry.",
            "VernacExtend",
            "27aab7131b3958bee1c48b83a1b566c61b5dad41"
        ],
        [
            "3:apply H22.",
            "VernacExtend",
            "76e0c49e1c2d8f0df242ce8cfb757a71d06ead8a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (Cong D C Q C).",
            "VernacExtend",
            "e8c071403cd18ae9f7035abbf6f9ce011fcfc742"
        ],
        [
            "cases_equality D' E.",
            "VernacExtend",
            "9c0ea5e833f10b1f4e06611310fea917af5bdb76"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "eapply l4_16;eauto.",
            "VernacExtend",
            "ec450aba60fa4bf0156457fe9a75c227b11c4e53"
        ],
        [
            "assert (Cong C P C Q).",
            "VernacExtend",
            "42c588e05d7755b838d1f75607a0ddb539c7b43f"
        ],
        [
            "unfold FSC in *;unfold Cong_3 in *;intuition.",
            "VernacExtend",
            "d4f5b0cfe9c2c4c68e442eb37e6d61f9389103bd"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "2:apply cong_commutativity.",
            "VernacExtend",
            "9f40ea964ee3fefa9f76e3285771f88a890618eb"
        ],
        [
            "2:apply H31.",
            "VernacExtend",
            "fc9d2535c8b04411da043ae80b481e408bc7d0f2"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "2:apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (R<>C).",
            "VernacExtend",
            "591116d09a8da81720a0647028a45060db4c185a"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities...",
            "VernacExtend",
            "ff732a212b483b6d7a795b076107eb87a881a08f"
        ],
        [
            "assert (Cong D' P D' Q).",
            "VernacExtend",
            "2205810419bde8c3e7d51f6101382bbb67e8d048"
        ],
        [
            "apply l4_17 with (A:=R) (B:=C) (C:=D').",
            "VernacExtend",
            "4aae7ae5ae7acd47fa87bce0b8f83c3b72292a41"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "3:apply H32.",
            "VernacExtend",
            "92035d242098853b0c58f60d1c909e3bf78a807f"
        ],
        [
            "unfold Col;left;Between.",
            "VernacExtend",
            "cf87023128ffeed7fc7b935e4fa67054c781f479"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "assert (Cong B P B Q).",
            "VernacExtend",
            "35931cf0ff60021b28d47ff0810f20ae3efb9894"
        ],
        [
            "eapply l4_17; try apply H20;auto.",
            "VernacExtend",
            "3e4d9fe094b499128ab76bb649c735c83d45b3ec"
        ],
        [
            "unfold Col;right;right;Between.",
            "VernacExtend",
            "89d559c2094dfa36151b1698f299b1a102652f2e"
        ],
        [
            "assert (Cong B' P B' Q).",
            "VernacExtend",
            "36cc73d12e9ce76c41af8c6188614590f3d0e713"
        ],
        [
            "eapply l4_17 with (C:=B').",
            "VernacExtend",
            "adf0909b4cbfae913421b962595a8a8e477f81e4"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong C' P C' Q).",
            "VernacExtend",
            "be9b9ff0b9b565e8bd1dacc06c10c18274019bd7"
        ],
        [
            "cases_equality B B'.",
            "VernacExtend",
            "e42895c4a3b15f2a891dd2a08e636f51b8b8ea0f"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "eapply l4_17.",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "apply H37.",
            "VernacExtend",
            "a27e03502368c6421a89533a01e0c89981b355e4"
        ],
        [
            "unfold Col;right;left;Between.",
            "VernacExtend",
            "538938d4c333f74c2c0b0bf89c9480de698c27d6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "unfold IFSC,FSC, Cong_3 in *;intuition.",
            "VernacExtend",
            "e2a02177117365628f611fe90ecb1b47c6cee810"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "clean_trivial_hyps.",
            "VernacExtend",
            "ac97f941a1a2a1c1aa41d983627aedf3348ee9a7"
        ],
        [
            "Focus 2.",
            "VernacFocus",
            "485d4f15aaf5c71ed130bd270976f9fc4e12a61f"
        ],
        [
            "assert (Cong P P P Q).",
            "VernacExtend",
            "f17fe0fecb9146e50226b387d142fe63ad3e5784"
        ],
        [
            "eapply l4_17.",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "unfold Col;right;right;Between.",
            "VernacExtend",
            "89d559c2094dfa36151b1698f299b1a102652f2e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (P=Q).",
            "VernacExtend",
            "ff338c1091d614d3cbfbf08ace14b1e08d3e37c4"
        ],
        [
            "eapply cong_identity.",
            "VernacExtend",
            "7fe683d1133ca408f417cc952748161dc8b161bc"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H38.",
            "VernacExtend",
            "b00ff2f088f09de5f69eb08c534ab93978c7e305"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "assert (D=D').",
            "VernacExtend",
            "1f3e843e3bdc4e40334b8f4064308da963d43408"
        ],
        [
            "eapply cong_identity with (A:=D) (B:=D') (C:=P).",
            "VernacExtend",
            "dd9621ca3e96e9c068a3da6515e361324dfd46a9"
        ],
        [
            "unfold IFSC,FSC, Cong_3 in *;intuition.",
            "VernacExtend",
            "e2a02177117365628f611fe90ecb1b47c6cee810"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "assert (E=D).",
            "VernacExtend",
            "5535ab6b29d94b8cf9374846c636ec22eeca0d5f"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "unfold IFSC,FSC, Cong_3 in *;intuition.",
            "VernacExtend",
            "e2a02177117365628f611fe90ecb1b47c6cee810"
        ],
        [
            "assert (Bet A B D').",
            "VernacExtend",
            "5ac3a5321c6416e06f80e697017726a70a09ab7d"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert (B=D').",
            "VernacExtend",
            "6df0485c10f3d97f248a02bbb4623967c5a167e9"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "Tarski.",
            "VernacExtend",
            "eb55766773b17f46fc762bc4b1bc99580674a56b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l5_2 : forall A B C D, A<>B -> Bet A B C -> Bet A B D -> Bet B C D \\/ Bet B D C.",
            "VernacStartTheoremProof",
            "f91e6333cba7c43fe17b744db1da6d545a5c1d18"
        ],
        [
            "Proof with Between.",
            "VernacProof",
            "08190a351f1e6ddb229dc76b428ef5ca7a5a4e43"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Bet A C D \\/ Bet A D C).",
            "VernacExtend",
            "6967fb4d3be0c7ab8381372bd0b6c8aa4d67646a"
        ],
        [
            "eapply l5_1;try apply H...",
            "VernacExtend",
            "bb601df17832dff05a898453e863ae8ef9c0a2a5"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l5_3 : forall A B C D, Bet A B D -> Bet A C D -> Bet A B C \\/ Bet A C B.",
            "VernacStartTheoremProof",
            "e48a9e5b515274dbe1a6950ad9b49b00db221fc3"
        ],
        [
            "Proof with Between.",
            "VernacProof",
            "08190a351f1e6ddb229dc76b428ef5ca7a5a4e43"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists P, Bet D A P /\\ A<>P);Tarski.",
            "VernacExtend",
            "202cf632e180bd98f30785ea4dce4dbafd2475a5"
        ],
        [
            "DecompExAnd H1 P.",
            "VernacExtend",
            "b64552421b13c5a91266471cf8be796831389593"
        ],
        [
            "apply l5_2 with (A:=P)...",
            "VernacExtend",
            "9cbc53251a5b2d8138ebb8890ba995f8768c1234"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition le := fun A B C D => exists y, Bet C y D /\\ Cong A B C y.",
            "VernacDefinition",
            "ec146fae2d1fd46297f5805a0776189ded048b37"
        ],
        [
            "Definition ge := fun A B C D => le C D A B.",
            "VernacDefinition",
            "400c787c9762d8db1f69aa1766ebb1d26f7496b6"
        ],
        [
            "Lemma l5_5_1 : forall A B C D, le A B C D -> exists x, Bet A B x /\\ Cong A x C D.",
            "VernacStartTheoremProof",
            "5fed6c39975b8deefb87b04d1b6363db1dee4207"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold le in H.",
            "VernacExtend",
            "08c44c8e7950ec6a431acdef9eb4348eb28216c2"
        ],
        [
            "DecompExAnd H Y.",
            "VernacExtend",
            "b983c8ac3cb660c85d80be9304ea6a8cf58ae577"
        ],
        [
            "assert (exists C' : Point, Cong_3 C Y D A B C').",
            "VernacExtend",
            "f48c96f48d5604c29c9a9184c1bcee913ce6a8ba"
        ],
        [
            "eapply l4_14;unfold Col;sTarski.",
            "VernacExtend",
            "01590542395b6ddedb66f487517dd9c9f527e0f6"
        ],
        [
            "DecompEx H X.",
            "VernacExtend",
            "c4493b9d179a639d6dfe3e4899e51529ea4553a4"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Cong_3 in H0;intuition;sTarski.",
            "VernacExtend",
            "ad7c0ef83b169676339d93febe9c4353e46688c8"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold Cong_3;intuition;sTarski.",
            "VernacExtend",
            "d22951893271c5d5f66ea35c3dd2bafb41242b60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l5_5_2 : forall A B C D, (exists x, Bet A B x /\\ Cong A x C D) -> le A B C D.",
            "VernacStartTheoremProof",
            "f12b4a81c50d815e789605b9b42c1e423e1e3fc8"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompExAnd H X.",
            "VernacExtend",
            "d8c0be27a76a19762b59dc005d110253432133b7"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "assert (exists B' : Point, Bet C B' D /\\ Cong_3 A B X C B' D)...",
            "VernacExtend",
            "2ecb6aaae90069f1f8fc5d05100367e88af274a7"
        ],
        [
            "DecompExAnd H Y.",
            "VernacExtend",
            "b983c8ac3cb660c85d80be9304ea6a8cf58ae577"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold Cong_3 in H4;intuition;sTarski.",
            "VernacExtend",
            "3f3ed36dafbe5adf7f7782a146c9ef253de5b83e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l5_6 : forall A B C D A' B' C' D', le A B C D /\\ Cong A B A' B' /\\ Cong C D C' D' -> le A' B' C' D'.",
            "VernacStartTheoremProof",
            "8dca8aa771c38752dcf01a3b57549078cacd729b"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "DecompExAnd H0 Y.",
            "VernacExtend",
            "800c693d67896aff4b4dd5228f5dba31d5fae3ee"
        ],
        [
            "assert (exists B' : Point, Bet C' B' D' /\\ Cong_3 C Y D C' B' D').",
            "VernacExtend",
            "cc1725577878e92c8fa0dde69ebe8a3c1f704cfb"
        ],
        [
            "eapply l4_5;eauto.",
            "VernacExtend",
            "da8878f6245a3f8f4a48de7c78fc46b307a60edb"
        ],
        [
            "DecompExAnd H0 Z.",
            "VernacExtend",
            "2d8545353ac7f91ebf6aad5cac3999299a7f62d3"
        ],
        [
            "exists Z.",
            "VernacExtend",
            "2ce49cdddf646c981dab911583c765abafac3e53"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold Cong_3 in H6;intuition.",
            "VernacExtend",
            "241952f5d5e0568f75168849bab815d021f9d84a"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_reflexivity : forall A B, le A B A B.",
            "VernacStartTheoremProof",
            "115be11e26cf8330b816ac9b6de2fee0284b5dbd"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "exists B...",
            "VernacExtend",
            "b26756c3393ad42bf4964370b51fc3c55f8bbe57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_transitivity : forall A B C D E F, le A B C D -> le C D E F -> le A B E F .",
            "VernacStartTheoremProof",
            "734e1a9799b044005629eb9638cc77cf02ba00cc"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompExAnd H Y.",
            "VernacExtend",
            "b983c8ac3cb660c85d80be9304ea6a8cf58ae577"
        ],
        [
            "DecompExAnd H0 Z.",
            "VernacExtend",
            "2d8545353ac7f91ebf6aad5cac3999299a7f62d3"
        ],
        [
            "assert (exists B' : Point, Bet E B' Z /\\ Cong_3 C Y D E B' Z)...",
            "VernacExtend",
            "674d1d3aec7ff4a3e0548beaa8f477868f316082"
        ],
        [
            "DecompExAnd H T.",
            "VernacExtend",
            "213e5622b6a707c7206ea2bf7d2c632e79ec6b4b"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split;Between.",
            "VernacExtend",
            "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
        ],
        [
            "unfold Cong_3 in H6;intuition.",
            "VernacExtend",
            "241952f5d5e0568f75168849bab815d021f9d84a"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_cong : forall A B C, Bet A C B -> Cong A C A B -> C=B.",
            "VernacStartTheoremProof",
            "7a1fcfbc0a6badaef3c7df5198194b025e0cc36a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Cong_3;repeat split;sTarski.",
            "VernacExtend",
            "ddc9d740437a10f4b5a9102fdbc9a7bb02191bcf"
        ],
        [
            "esTarski.",
            "VernacExtend",
            "8d590d7c94ab42b108ae5f37debd778082982ccd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_cong_2 : forall A B D E, Bet A D B -> Bet A E B -> Cong A D A E -> D = E.",
            "VernacStartTheoremProof",
            "5462b8c09d9c7f5c61ea90d0de1018c4e1f0540f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Bet A D E \\/ Bet A E D).",
            "VernacExtend",
            "08588bbb0b52ba81aecf945fb61f6cb67684943b"
        ],
        [
            "eapply l5_3;eauto.",
            "VernacExtend",
            "0798728beadbccfc41c85a58cdcd3196019901b0"
        ],
        [
            "elim H2;intro;clear H2.",
            "VernacExtend",
            "66ab791eabfa4cb382c23aa5bf809c9e1197aca9"
        ],
        [
            "eapply between_cong;eauto.",
            "VernacExtend",
            "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "eapply between_cong;eauto.",
            "VernacExtend",
            "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_anti_symmetry : forall A B C D, le A B C D -> le C D A B -> Cong A B C D.",
            "VernacStartTheoremProof",
            "87775b4e1627fefb0920e27e6b6295894cc2421f"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists T, Bet C D T /\\ Cong C T A B).",
            "VernacExtend",
            "839731b72b3e7f0ee2a42dfb79a76cf121b25fc3"
        ],
        [
            "apply l5_5_1...",
            "VernacExtend",
            "957712b2608e082396e99ca2a418b45c0302a4f7"
        ],
        [
            "unfold le in H.",
            "VernacExtend",
            "08c44c8e7950ec6a431acdef9eb4348eb28216c2"
        ],
        [
            "DecompExAnd H Y.",
            "VernacExtend",
            "b983c8ac3cb660c85d80be9304ea6a8cf58ae577"
        ],
        [
            "DecompExAnd H1 T.",
            "VernacExtend",
            "b678ba51bee064bd7b6f1f82a41f580c87f6e04b"
        ],
        [
            "assert (Cong C Y C T).",
            "VernacExtend",
            "d683cf7e1b6ae084dcfeced6fdc0fa143fed10ec"
        ],
        [
            "eapply cong_transitivity with (C:=A) (D:=B);sTarski.",
            "VernacExtend",
            "99a740d094c627e66fd11ce3a253ab80d139df98"
        ],
        [
            "assert (Bet C Y T).",
            "VernacExtend",
            "ad6ec6525c2a492db1a97f94e984e63b35cdbae7"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert (Y=T).",
            "VernacExtend",
            "6f76f7e7f5efc2bf29e8afacb7d0724ac2d9055b"
        ],
        [
            "eapply between_cong;eauto.",
            "VernacExtend",
            "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
        ],
        [
            "smart_subst Y.",
            "VernacExtend",
            "df846d9d462d2e723fe47fb652e3789b2737ca2b"
        ],
        [
            "assert (T=D).",
            "VernacExtend",
            "e32de6e472bca943db5c551cd92202e6af50dd3d"
        ],
        [
            "eTarski.",
            "VernacExtend",
            "c3041215ba3ca821cd5339923ec62b0cbea58589"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma segment_construction_2 : forall A Q B C, A<>Q -> exists X, (Bet Q A X \\/ Bet Q X A) /\\ Cong Q X B C.",
            "VernacStartTheoremProof",
            "73651501d43234b050fd7fc949f51b499be56cb7"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists A', Bet A Q A' /\\ Cong Q A' A Q)...",
            "VernacExtend",
            "e5949bd18b6fdf3037947ade2212871bed5dbb52"
        ],
        [
            "DecompExAnd H0 A'.",
            "VernacExtend",
            "4d1b805d5a3d8bf6c33099916c61e74bac6356a0"
        ],
        [
            "assert (exists X, Bet A' Q X /\\ Cong Q X B C)...",
            "VernacExtend",
            "b0d945ef6b20b67327548ae8928871294ec8a1f3"
        ],
        [
            "DecompExAnd H0 X.",
            "VernacExtend",
            "f4d52e4e54d8b6f6856ec1d5bda5d1bfb40b7b4e"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "cut (A'<>Q).",
            "VernacExtend",
            "040372b21fbb5e2166c319dd4fc673b331361dbe"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_trivial : forall A C D, le A A C D .",
            "VernacStartTheoremProof",
            "4298ecfbefe018e3d3f783e6f9acd40be9e5cacd"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split;eTarski.",
            "VernacExtend",
            "81f6392cdf6f53eed03df3091cfc3badb3120c0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_cases : forall A B C D, le A B C D \\/ le C D A B.",
            "VernacStartTheoremProof",
            "3d22fd3ac518e8d24dee3f99016ba0a8bf27ba03"
        ],
        [
            "Proof with Tarski.",
            "VernacProof",
            "587b0b20da03a4a3ef25c42e584a5d0e2671c134"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply le_trivial.",
            "VernacExtend",
            "9bf3fdcd39c75a6768f00d7c91ff1afdc4fe23db"
        ],
        [
            "assert (exists X : Point, (Bet A B X \\/ Bet A X B) /\\ Cong A X C D).",
            "VernacExtend",
            "b4493fd9c699be8322bb41f76858583be200d5b1"
        ],
        [
            "eapply (segment_construction_2 B A C D).",
            "VernacExtend",
            "dafdf8eb12f03aab775fffae0c440a5d4add102b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "DecompExAnd H0 X.",
            "VernacExtend",
            "f4d52e4e54d8b6f6856ec1d5bda5d1bfb40b7b4e"
        ],
        [
            "elim H2;intro.",
            "VernacExtend",
            "939c927788b9492b13127156d1f300437fdf7754"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply l5_5_2.",
            "VernacExtend",
            "19673faba38de2fe2a956ff0381b653d65231dd8"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "sTarski.",
            "VernacExtend",
            "ac4b020aa1d7d54c2de2c769ee503a6249d4ebe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_zero : forall A B C, le A B C C -> A=B.",
            "VernacStartTheoremProof",
            "b733abf7507094cd3d3226c19147bd3617f61ab1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (le C C A B).",
            "VernacExtend",
            "0035118e2eceff04c328477777ccf0cd98ce9502"
        ],
        [
            "eapply le_trivial.",
            "VernacExtend",
            "b5bfbf26ac9680c308b381a89294ba5b6b0f6808"
        ],
        [
            "assert (Cong A B C C).",
            "VernacExtend",
            "e9b18117840213c16a45c9f2db9afb786cf58273"
        ],
        [
            "eapply le_anti_symmetry;auto.",
            "VernacExtend",
            "fcafd7e25062fa96cf58dba7c53bd82afa80f794"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lt := fun A B C D => le A B C D /\\ ~ Cong A B C D.",
            "VernacDefinition",
            "350399f280da1391ac0c6bc2458c8f70d8fba0b6"
        ],
        [
            "Definition gt := fun A B C D => lt C D A B.",
            "VernacDefinition",
            "6486998e553a9065f93779b438c3bda85973a42f"
        ]
    ],
    "proofs": [
        {
            "name": "between_cong_2",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Bet A D E \\/ Bet A E D).",
                        "VernacExtend",
                        "08588bbb0b52ba81aecf945fb61f6cb67684943b"
                    ]
                },
                {
                    "command": [
                        "eapply l5_3;eauto.",
                        "VernacExtend",
                        "0798728beadbccfc41c85a58cdcd3196019901b0"
                    ]
                },
                {
                    "command": [
                        "elim H2;intro;clear H2.",
                        "VernacExtend",
                        "66ab791eabfa4cb382c23aa5bf809c9e1197aca9"
                    ]
                },
                {
                    "command": [
                        "eapply between_cong;eauto.",
                        "VernacExtend",
                        "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "eapply between_cong;eauto.",
                        "VernacExtend",
                        "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
                    ]
                },
                {
                    "command": [
                        "eTarski.",
                        "VernacExtend",
                        "c3041215ba3ca821cd5339923ec62b0cbea58589"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_zero",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (le C C A B).",
                        "VernacExtend",
                        "0035118e2eceff04c328477777ccf0cd98ce9502"
                    ]
                },
                {
                    "command": [
                        "eapply le_trivial.",
                        "VernacExtend",
                        "b5bfbf26ac9680c308b381a89294ba5b6b0f6808"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B C C).",
                        "VernacExtend",
                        "e9b18117840213c16a45c9f2db9afb786cf58273"
                    ]
                },
                {
                    "command": [
                        "eapply le_anti_symmetry;auto.",
                        "VernacExtend",
                        "fcafd7e25062fa96cf58dba7c53bd82afa80f794"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}