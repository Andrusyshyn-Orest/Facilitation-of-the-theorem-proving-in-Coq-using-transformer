{
    "filename": "Sqrt2/Reals.v",
    "coq_project": "qarith",
    "vernac_cmds": [
        [
            "Require Export Max.",
            "VernacRequire",
            "89dd9cbeb12820c28fec06970676b39e02e0ecc7"
        ],
        [
            "Require Export Zpower.",
            "VernacRequire",
            "537aa94c31bf143e44528d650312e4f8f5968c4d"
        ],
        [
            "Require Export Zlogarithm.",
            "VernacRequire",
            "8ce784ed6fa54b92fc4ea3a2721b591c83ccf893"
        ],
        [
            "Require Export QArith.",
            "VernacRequire",
            "424ad429b03636b7d4db6dae11ad827d9efab698"
        ],
        [
            "Require Export Qpower.",
            "VernacRequire",
            "1e7c1718a3efb2cb8ec885452c2e666bc595968b"
        ],
        [
            "Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5d5d2991d98cf1203a824951a099efb9d105702f"
        ],
        [
            "Open Scope Q_scope.",
            "VernacOpenCloseScope",
            "4c58f8ce180e6a49a4cec92f1732987d3249bb54"
        ],
        [
            "Require Extraction.",
            "VernacRequire",
            "a069c64e62ed08461c719459a8307243d23db2df"
        ],
        [
            "Coercion inject_Z : Z >-> Q.",
            "VernacCoercion",
            "5833bd7f57f7a1c944deecc53a92514bc6411d93"
        ],
        [
            "Local Coercion Z_of_nat : nat >-> Z.",
            "VernacCoercion",
            "3ad005e1555baf45e6d912fdb3e717465d4b592e"
        ],
        [
            "Ltac QpowerSimpl := (repeat rewrite inj_S; unfold Zsucc; repeat rewrite Qpower_plus; try discriminate; simpl).",
            "VernacExtend",
            "0d7c22cbfb428f29523398f616caeeb036e1c661"
        ],
        [
            "Ltac get_hd := match goal with |- ?H -> _ => H end.",
            "VernacExtend",
            "2ba221b81b1222228b817fc91cf7440d95fdd594"
        ],
        [
            "Ltac get_gl := match goal with |- ?H => H end.",
            "VernacExtend",
            "2f254fb57314eb6fc5647c10bc9e044a39fb9a3f"
        ],
        [
            "Ltac lhs H := match H with | ?a <= _ => a | ?a < _ => a | ?a == _ => a end.",
            "VernacExtend",
            "1ffdc94abeffbf685c31ebda1162189585b191ec"
        ],
        [
            "Ltac rhs H := match H with | _ <= ?a => a | _ < ?a => a | _ == ?a => a end.",
            "VernacExtend",
            "51cce762c3290bbeb01cebe79cb8e2b972ead6e8"
        ],
        [
            "Ltac step_left t := let H := get_gl in let a := lhs H in setoid_replace a with t by (QpowerSimpl;ring).",
            "VernacExtend",
            "17eb32babbadfca76c75826f2cc816d7bf3a6a04"
        ],
        [
            "Ltac step_right t := let H := get_gl in let a := rhs H in setoid_replace a with t by (QpowerSimpl;ring).",
            "VernacExtend",
            "e1d586edb039204d399b3059960c97202b431f07"
        ],
        [
            "Ltac step_left_hd t := let H := get_hd in let a := lhs H in setoid_replace a with t by (QpowerSimpl;ring).",
            "VernacExtend",
            "ac46a1a365980d488c668fa55a018c10be5e2ce5"
        ],
        [
            "Ltac step_right_hd t := let H := get_hd in let a := rhs H in setoid_replace a with t by (QpowerSimpl;ring).",
            "VernacExtend",
            "57695e9f7149ab2f4e219d4299be9e74bda6d0e1"
        ],
        [
            "Ltac step t := let a := lhs t in step_left a; let b := rhs t in step_right b.",
            "VernacExtend",
            "f81d2861671cd552c5cb1efeeb5aee268e71d2b0"
        ],
        [
            "Ltac step_hd t := let a := lhs t in step_left_hd a; let b := rhs t in step_right_hd b.",
            "VernacExtend",
            "5545fce1a862f8294136e941cd9d865cf2bb4e4b"
        ],
        [
            "Local Notation \" ' x \" := (Zpos x) (at level 20, no associativity) : Z_scope.",
            "VernacNotation",
            "9cb135fa21827bfb12eca60d405831f20f8e13c5"
        ],
        [
            "Definition Is_Cauchy (f : nat -> Q) (mo : nat -> nat) := forall k m n, (mo k <= m)%nat -> (mo k <= n)%nat -> -(1#2)^k <= f m - f n <= (1#2)^k.",
            "VernacDefinition",
            "40b0146b12792ec451b2c4a609ea03adffeeb868"
        ],
        [
            "Record R : Set := { cauchy : nat -> Q; modulus : nat -> nat; is_cauchy : Is_Cauchy cauchy modulus }.",
            "VernacInductive",
            "0e40eb50946dd60cbbc86451ff8efa0f9507fd24"
        ],
        [
            "Definition inject_Q : Q -> R.",
            "VernacDefinition",
            "5659650fcba98f07c9692f23408a05efb7900185"
        ],
        [
            "intros q.",
            "VernacExtend",
            "ff9d121cdb516bd63ace418a2de73c7fb0f8ba3e"
        ],
        [
            "apply (Build_R (fun _ => q) (fun _ => O)).",
            "VernacExtend",
            "936776d2d1a7038e1cf51359c80c074faf416043"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (H1: q-q == 0) by ring.",
            "VernacExtend",
            "31b05683c360a4ed5c6efe6c0b247ceeef7726a8"
        ],
        [
            "rewrite H1; clear H1.",
            "VernacExtend",
            "00d5f4aac5a8b3519e323a55e4be18868171cc4f"
        ],
        [
            "assert (0 <= (1#2)^k).",
            "VernacExtend",
            "b7143a1ac1e9ed9b7294a380ef2f9d339d43c10d"
        ],
        [
            "apply Qpower_pos.",
            "VernacExtend",
            "98058148823dd1b60a28842ca064a86e87a7ac14"
        ],
        [
            "compute; intro; discriminate.",
            "VernacExtend",
            "3df13ab91c05c185c539e49388a3dfb30b304b9e"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "replace 0 with (-0) by auto.",
            "VernacExtend",
            "08aadaaa21d315f1d0ace834f2150a9f0f85af39"
        ],
        [
            "apply Qopp_le_compat; auto.",
            "VernacExtend",
            "afc23b6603fb0bd07d0f8149cbe2ed0465ffba7a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Req : R -> R -> Prop:= fun x y : R => forall k, let M := modulus x (S k) in let N := modulus y (S k) in -(1#2)^k <= cauchy x M - cauchy y N <= (1#2)^k.",
            "VernacDefinition",
            "e337a3564fbe8c74e3d0d8187590e03c6f299068"
        ],
        [
            "Definition Rpos_k : nat -> R -> Prop := fun k x => (1#2)^k <= cauchy x (modulus x (S k)).",
            "VernacDefinition",
            "00522f6cf99c43f5e22ae9ce45a9b0b92b439fbb"
        ],
        [
            "Definition Rpos : R -> Set := fun x => { k:nat | Rpos_k k x }.",
            "VernacDefinition",
            "fa25c10ea195b646273432fba03612e4825fcf48"
        ],
        [
            "Definition Rnonneg : R -> Prop := fun x => forall k:nat, -(1#2)^k <= cauchy x (modulus x k).",
            "VernacDefinition",
            "e9c6b20c69d2778cfedb4f889141d85aa2cd10dd"
        ],
        [
            "Axiom Falsum: False.",
            "VernacAssumption",
            "b3516427d360466c071479db289ccbb1b75b344e"
        ],
        [
            "Ltac fedup := elim Falsum.",
            "VernacExtend",
            "b27c549ab167e2c358cb276c7cff3f698f78a35a"
        ],
        [
            "Definition test : R -> R -> R.",
            "VernacDefinition",
            "8af412ff00975fe9e5546df052dcf0fc0a50ff8b"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_le : forall a b c, le (max a b) c -> le a c /\\ le b c.",
            "VernacStartTheoremProof",
            "f5bc9900f8befc2771a19cb17f8fd0654c044290"
        ],
        [
            "eauto with arith.",
            "VernacExtend",
            "15b190967181ece61dbbf5a691d414798413c204"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qeq_Qle : forall a b:Q, a==b -> a<=b.",
            "VernacStartTheoremProof",
            "79ab38a7b6624c2def5da302d2d7b8a21f63ceab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "setoid_replace a with b by auto.",
            "VernacExtend",
            "1849890c1cd52eadaf3107186d76fd9c9c2dad73"
        ],
        [
            "apply Qle_refl.",
            "VernacExtend",
            "2b37ca692ce0754c98268708708768a93878ed44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rplus : R -> R -> R.",
            "VernacDefinition",
            "8431c9440ff7ec8e84ee9c5bb320a99b332426e5"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply (Build_R (fun n => cauchy x n + cauchy y n) (fun k => max (modulus x (S k)) (modulus y (S k)))).",
            "VernacExtend",
            "c0357c215a93368309760d06279436ca2582cf4e"
        ],
        [
            "unfold Is_Cauchy; intros.",
            "VernacExtend",
            "ab570150a98c600b044f55db43e060c79b066399"
        ],
        [
            "set (N := modulus x (S k)) in *.",
            "VernacExtend",
            "1ec859272d1e00553c7c6314fc4fefb98c2b0551"
        ],
        [
            "set (M := modulus y (S k)) in *.",
            "VernacExtend",
            "175ae4774399cd3211d8ba2533012a4b14d4d2e8"
        ],
        [
            "elim (max_le N M m H); elim (max_le N M n H0); intros.",
            "VernacExtend",
            "c10b69237c3c1c1226ec8fc02de0ea442244fc67"
        ],
        [
            "assert (H5 := is_cauchy x (S k) m n H3 H1).",
            "VernacExtend",
            "aed5865528da18fc6a949c816a41d7da0f4ee45c"
        ],
        [
            "assert (H6 := is_cauchy y (S k) m n H4 H2).",
            "VernacExtend",
            "791d12bae9975a26c369866f152e937dfc058288"
        ],
        [
            "clear N M H H0 H1 H2 H3 H4.",
            "VernacExtend",
            "ed85bbff295fed2ddc7806d808a971485437ac30"
        ],
        [
            "set (Xn := cauchy x n) in *; set (Xm := cauchy x m) in *; set (Yn := cauchy y n) in *; set (Ym := cauchy y m) in *.",
            "VernacExtend",
            "240ee5b6f33fe8a25f53391937ab676a1b11fe6a"
        ],
        [
            "destruct H5; destruct H6.",
            "VernacExtend",
            "5d00d1a72d8fb6772c4e821252d73b5e03391868"
        ],
        [
            "setoid_replace (Xm+Ym-(Xn+Yn)) with ((Xm-Xn) +(Ym-Yn)) by ring.",
            "VernacExtend",
            "f292c6ec598ad6357a887c1b51d1090e16412c81"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "step_left (-(1#2)^(S k)+-(1#2)^(S k)).",
            "VernacExtend",
            "fb6f580b9321dc6bd70c801dee501048ad035bb9"
        ],
        [
            "apply Qplus_le_compat; auto.",
            "VernacExtend",
            "4461f149b605540f9c93748e461b63d20b97be04"
        ],
        [
            "step_right ((1#2)^(S k)+(1#2)^(S k)).",
            "VernacExtend",
            "19dec88c63b6e4e4312ccd2cb84eefc458a23d98"
        ],
        [
            "apply Qplus_le_compat; auto.",
            "VernacExtend",
            "4461f149b605540f9c93748e461b63d20b97be04"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Ropp : R -> R.",
            "VernacDefinition",
            "0bd3e986355831d13046fb8318f9c4a495eef40a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply (Build_R (fun n => -(cauchy x n)) (fun k => modulus x k)).",
            "VernacExtend",
            "48ae303c7f28d14a1e31f14b28612a24a869c6f6"
        ],
        [
            "unfold Is_Cauchy; intros.",
            "VernacExtend",
            "ab570150a98c600b044f55db43e060c79b066399"
        ],
        [
            "unfold Qminus.",
            "VernacExtend",
            "1b1ec2310f1235b830a0ef3187a0d03c8562af3c"
        ],
        [
            "rewrite (Qopp_opp (cauchy x n)).",
            "VernacExtend",
            "c39db6143b4be38deae8acd3076bfb61a594be3d"
        ],
        [
            "rewrite (Qplus_comm (-(cauchy x m)) (cauchy x n)).",
            "VernacExtend",
            "292982c5c9512faa21a9be7d2856e0ce61f4a837"
        ],
        [
            "apply (is_cauchy x k n m); auto.",
            "VernacExtend",
            "f387ac9a9c5ce5a5e2ffb27f2be6c1cba8e523fe"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Rminus : R -> R -> R := fun x y => Rplus x (Ropp y).",
            "VernacDefinition",
            "f413a5d62968e76b0be32bd9b37823a5e5d40c9e"
        ],
        [
            "Definition Rlt : R -> R -> Set := fun x y => Rpos (Rminus y x).",
            "VernacDefinition",
            "85a57b9c1341ee1b253b3e020cd59b9dbfee50d7"
        ],
        [
            "Definition Rle : R -> R -> Prop := fun x y => Rnonneg (Rminus y x).",
            "VernacDefinition",
            "800b5bdf19d5dffedd566aea089b6722a83fb5bb"
        ],
        [
            "Definition Rpos_alt (x:R) := {l:nat & { p:nat | forall n, (p<=n)%nat -> (1#2)^l <= cauchy x n}}.",
            "VernacDefinition",
            "4919c8456c2d0bcac9b51382463d2009714aab08"
        ],
        [
            "Lemma Rpos_alt_1 : forall x:R, Rpos x -> Rpos_alt x.",
            "VernacStartTheoremProof",
            "15e666c6b636b561692fd5102d80a92780ff1d7d"
        ],
        [
            "unfold Rpos, Rpos_k, Rpos_alt.",
            "VernacExtend",
            "b1a63adb3ab42c1d93af28dd47ffead9dd881ccc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H; intros k Hk; clear H.",
            "VernacExtend",
            "92e5c295b487c46d01955308999c19dcf66bab43"
        ],
        [
            "exists (S k).",
            "VernacExtend",
            "01f3cbf582735176c47dee25e58785bc7c8a82a0"
        ],
        [
            "exists (modulus x (S k)).",
            "VernacExtend",
            "ccf6df8b648b08000ac00afd0311218558229368"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (x.(is_cauchy) (S k) n (modulus x (S k))) as (Hx,_); auto.",
            "VernacExtend",
            "81ee9e313747d3dbf774c470b180c7937b6ba227"
        ],
        [
            "generalize (Qplus_le_compat _ _ _ _ Hk Hx).",
            "VernacExtend",
            "1cb2ab8b9a6a538d39033bf1bf07240dbcf6901e"
        ],
        [
            "step_hd ((1#2)^(S k)<=cauchy x n); auto.",
            "VernacExtend",
            "f3a2bdce533d10f3b12e43d6510db98f4612ea8f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Rpos_alt_2 : forall x, Rpos_alt x -> Rpos x.",
            "VernacStartTheoremProof",
            "cca9b31debd86803b5c5fa5a2ab707d2b78cc673"
        ],
        [
            "unfold Rpos, Rpos_k, Rpos_alt.",
            "VernacExtend",
            "b1a63adb3ab42c1d93af28dd47ffead9dd881ccc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H; intros l Hl; elim Hl; intros p Hp; clear H Hl.",
            "VernacExtend",
            "a083b6113dd55595c2672760d78cb3d66649fa6d"
        ],
        [
            "exists (S l).",
            "VernacExtend",
            "257c26c36ac90db95d3f826b8e4e288ec2a44b60"
        ],
        [
            "set (M:=modulus x (S (S l))).",
            "VernacExtend",
            "5d2c0534b3c9841d6f9b8e296314d01f8efcfb72"
        ],
        [
            "set (N:=max p M).",
            "VernacExtend",
            "940be667981e5bb0339d8e1a317232bc9bf9d235"
        ],
        [
            "destruct (x.(is_cauchy) (S (S l)) M N) as (Hx,_); auto.",
            "VernacExtend",
            "8c14bbbd0260896643bfe7f3726bba4ced16581e"
        ],
        [
            "unfold N, M; auto with arith.",
            "VernacExtend",
            "e1899d276ea96bb6bda725dbba082ea5854c58d6"
        ],
        [
            "apply Qle_trans with ((1#2)^l+(-(1#2)^(S (S l)))).",
            "VernacExtend",
            "260b047e2ed89add4cc1eed83efe063602fe59e0"
        ],
        [
            "step ((1#2)*(1#2)^l<=(3#4)*(1#2)^l).",
            "VernacExtend",
            "a6e7f358969cb402ef4813a2a6dbb7575e9b73cf"
        ],
        [
            "apply Qmult_le_compat_r; [|apply Qpower_pos]; compute; intro; discriminate.",
            "VernacExtend",
            "8aa9732f8dadb6a740e78cafa67b45b8ddc584fa"
        ],
        [
            "step_right (cauchy x N +(cauchy x M - cauchy x N)).",
            "VernacExtend",
            "e3219c97fb459036da8e6fe3e84571c3b7e7ebd1"
        ],
        [
            "apply Qplus_le_compat; auto.",
            "VernacExtend",
            "4461f149b605540f9c93748e461b63d20b97be04"
        ],
        [
            "apply Hp; unfold N; auto with arith.",
            "VernacExtend",
            "0cb0b1475e802b694bb1b7d8609cf3555fc0a80e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Rcompare : forall x y, Rlt x y -> forall z, Rlt x z + Rlt z y.",
            "VernacDefinition",
            "e9156ccaef3417c629ac40753bd9db28c01e14ec"
        ],
        [
            "unfold Rlt; intros.",
            "VernacExtend",
            "78706cdfe1761e81068a365ebc43a9d1ff61a98b"
        ],
        [
            "destruct (Rpos_alt_1 _ H) as (k,(p,Hp)); clear H.",
            "VernacExtend",
            "86cd66f9b520529e346ba2436184531387f89386"
        ],
        [
            "set (k' := S (S k)).",
            "VernacExtend",
            "d46a5e25a38bc46fbaaf35c0113335cd62e0bfcf"
        ],
        [
            "set (k'' := S (S k')).",
            "VernacExtend",
            "1c72534e49dde7413165c92a38c13333a5467bcb"
        ],
        [
            "set (q := max (modulus x k'') (max (modulus y k'') (max (modulus z k'') p))).",
            "VernacExtend",
            "04d8580f2d1c50730a00d0b23be1ec6e4716f857"
        ],
        [
            "destruct (Qlt_le_dec (cauchy z q - cauchy x q) ((1#2)^(S k))); [right|left]; exists k'.",
            "VernacExtend",
            "b95ced30616289d7fc406ce42a1efac0ad2cf37c"
        ],
        [
            "red; simpl cauchy; simpl cauchy in Hp.",
            "VernacExtend",
            "99c737fb7a430985fedfac0e4d91684312c02b63"
        ],
        [
            "set (q' := max (modulus y (S (S k'))) (modulus z (S (S k')))).",
            "VernacExtend",
            "97b4c01970c1fb4b61ec1da4515e53c2b0629e47"
        ],
        [
            "destruct (z.(is_cauchy) k'' q q') as (Hz,_); auto.",
            "VernacExtend",
            "c180f229f2f9c8d055493acfb1462678eea26a0c"
        ],
        [
            "unfold q, k''; eauto with arith.",
            "VernacExtend",
            "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
        ],
        [
            "unfold q', k''; auto with arith.",
            "VernacExtend",
            "7447e4d56ce715d8550a74a63ba3afc70905670d"
        ],
        [
            "destruct (y.(is_cauchy) k'' q' q) as (Hy,_); auto.",
            "VernacExtend",
            "20ccc02db22ed3ae48c72148f4e74f5507d21c8e"
        ],
        [
            "unfold q', k''; auto with arith.",
            "VernacExtend",
            "7447e4d56ce715d8550a74a63ba3afc70905670d"
        ],
        [
            "unfold q, k''; eauto with arith.",
            "VernacExtend",
            "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
        ],
        [
            "assert (p <= q)%nat by (unfold q; eauto with arith).",
            "VernacExtend",
            "38430671b6e6278de1fe6f868a350e0ceabc0b05"
        ],
        [
            "assert (H0:=Hp q H); clear Hp H.",
            "VernacExtend",
            "c9a0f23542ae8c34a8a839b06a76f18c601bb5fb"
        ],
        [
            "assert (H1:=Qopp_le_compat _ _ (Qlt_le_weak _ _ q0)); clear q0.",
            "VernacExtend",
            "93b919eae44e0aa1c2a991175622c987c9b8f252"
        ],
        [
            "set (Yq' := cauchy y q') in *; set (Yq := cauchy y q) in *; set (Zq' := cauchy z q') in *; set (Zq := cauchy z q) in *; set (Xq := cauchy x q) in *; clearbody q q' Yq Yq' Zq Zq' Xq.",
            "VernacExtend",
            "f06fa7c9005d8d58cddb4c0a2bdeb2de7a3359a1"
        ],
        [
            "generalize (Qplus_le_compat _ _ _ _ Hy (Qplus_le_compat _ _ _ _ H0 (Qplus_le_compat _ _ _ _ H1 Hz))).",
            "VernacExtend",
            "c9908521e7521c7d663a286c51ca16dea842e691"
        ],
        [
            "unfold k'', k'.",
            "VernacExtend",
            "be24c26acfe0ca4e642c5aaaeda175033bc75835"
        ],
        [
            "step_hd ((3#8)*(1#2)^k <= Yq'+-Zq').",
            "VernacExtend",
            "6eb85e7753398dcc77327ce65f407cdea48c2335"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "step_left ((1#4)*(1#2)^k).",
            "VernacExtend",
            "5f6d50828ad8dc636a9812a8de5b4851f66f0b8e"
        ],
        [
            "apply Qle_trans with ((3#8)*(1#2)^k); auto.",
            "VernacExtend",
            "f859237003dc34fce8b61d74b0e7daa322b4dccd"
        ],
        [
            "apply Qmult_le_compat_r; [|apply Qpower_pos]; compute; intro; discriminate.",
            "VernacExtend",
            "8aa9732f8dadb6a740e78cafa67b45b8ddc584fa"
        ],
        [
            "red; simpl cauchy; simpl cauchy in Hp.",
            "VernacExtend",
            "99c737fb7a430985fedfac0e4d91684312c02b63"
        ],
        [
            "set (q' := max (modulus z (S (S k'))) (modulus x (S (S k')))).",
            "VernacExtend",
            "87da06f40a2b1b684b87ec2b89338279c192d4e5"
        ],
        [
            "destruct (z.(is_cauchy) k'' q' q) as (Hz,_); auto.",
            "VernacExtend",
            "a8cf7614488c1792dfbed15d135870ed4c6a8ba4"
        ],
        [
            "unfold q', k''; auto with arith.",
            "VernacExtend",
            "7447e4d56ce715d8550a74a63ba3afc70905670d"
        ],
        [
            "unfold q, k''; eauto with arith.",
            "VernacExtend",
            "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
        ],
        [
            "destruct (x.(is_cauchy) k'' q q') as (Hx,_); auto.",
            "VernacExtend",
            "58d112582b7586c9dbcf108d821c4f150a7ad2f8"
        ],
        [
            "unfold q, k''; eauto with arith.",
            "VernacExtend",
            "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
        ],
        [
            "unfold q', k''; auto with arith.",
            "VernacExtend",
            "7447e4d56ce715d8550a74a63ba3afc70905670d"
        ],
        [
            "clear Hp.",
            "VernacExtend",
            "6c64d06ec9f7fe8ce31fe96377dfb041752729b0"
        ],
        [
            "set (Xq' := cauchy x q') in *; set (Xq := cauchy x q) in *; set (Zq' := cauchy z q') in *; set (Zq := cauchy z q) in *; clearbody q q' Xq Xq' Zq Zq'.",
            "VernacExtend",
            "f306ea3ec0b7778854a93d0c9dc0111043155ff7"
        ],
        [
            "generalize (Qplus_le_compat _ _ _ _ Hz (Qplus_le_compat _ _ _ _ q0 Hx)).",
            "VernacExtend",
            "0b67cab2a39247f2524775200c6c377e4b394bb3"
        ],
        [
            "unfold k'', k'.",
            "VernacExtend",
            "be24c26acfe0ca4e642c5aaaeda175033bc75835"
        ],
        [
            "step_hd ((3#8)*(1#2)^k <= Zq'+-Xq').",
            "VernacExtend",
            "2fb8f3529cc3a2b5bc18d8c4a75c7cb5e57232da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "step_left ((1#4)*(1#2)^k).",
            "VernacExtend",
            "5f6d50828ad8dc636a9812a8de5b4851f66f0b8e"
        ],
        [
            "apply Qle_trans with ((3#8)*(1#2)^k); auto.",
            "VernacExtend",
            "f859237003dc34fce8b61d74b0e7daa322b4dccd"
        ],
        [
            "apply Qmult_le_compat_r; [|apply Qpower_pos]; compute; intro; discriminate.",
            "VernacExtend",
            "8aa9732f8dadb6a740e78cafa67b45b8ddc584fa"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition sqr2 := fun a => (a * a)+(-2).",
            "VernacDefinition",
            "720de74682e547c26e8587580154d1b782363880"
        ],
        [
            "Definition sqr2_h := fun a (_:nat) => sqr2 a.",
            "VernacDefinition",
            "8b60a753ec4e3dc79695df888f8f29f18472ae66"
        ],
        [
            "Definition sqr2_alpha := fun (_:nat) => O.",
            "VernacDefinition",
            "2dfd4a7c6621fb04a12babae472fce2061312586"
        ],
        [
            "Definition sqr2_w := fun k => S (S (S k)).",
            "VernacDefinition",
            "fab0b90756e3c972941064efa6963880f0e410bf"
        ],
        [
            "Definition sqr2_apply : R -> R.",
            "VernacDefinition",
            "a2c5fc1c392ced54f68e73e7e6aa5b113803947b"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply (Build_R (fun n => sqr2_h (cauchy x n) n) (fun k => max (sqr2_alpha (S (S k))) (modulus x (pred (sqr2_w (S k)))))).",
            "VernacExtend",
            "4d4a1ff6dfc7c038b026902d063a9cde78a5739d"
        ],
        [
            "generalize x.(is_cauchy).",
            "VernacExtend",
            "634deefa8eed67b8281c2e167fc4912b451af588"
        ],
        [
            "unfold Is_Cauchy, sqr2_h, sqr2_alpha, sqr2_w, sqr2; simpl; intros.",
            "VernacExtend",
            "a7f9c9ad41e637f60ff809c3de357db42e4c8c44"
        ],
        [
            "generalize (H _ _ _ H0 H1); clear H H0 H1; intro H.",
            "VernacExtend",
            "db7e9200a229970fd7009d8ce1f223a782061d36"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "unfold cauchy; simpl.",
            "VernacExtend",
            "7d3e0a6209da4422b85b420583acdbf0893677ea"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition sqr2_incr : forall x y, Rle (inject_Q 1) x -> Rle (inject_Q 1) y -> Rlt x y -> Rlt (sqr2_apply x) (sqr2_apply y).",
            "VernacDefinition",
            "5f0c6c458040342147cc1065c6f85ae27cabcf86"
        ],
        [
            "unfold Rlt; intros.",
            "VernacExtend",
            "78706cdfe1761e81068a365ebc43a9d1ff61a98b"
        ],
        [
            "apply Rpos_alt_2.",
            "VernacExtend",
            "bee7266924d27db4e3f1e5edcbe8d94e82de26e7"
        ],
        [
            "generalize (Rpos_alt_1 _ H1); clear H1.",
            "VernacExtend",
            "a614ff64f789b8c23ebdc07b6f80c4c395c623f8"
        ],
        [
            "unfold Rpos_alt, Rminus, Ropp, Rplus; simpl; unfold sqr2_h; simpl.",
            "VernacExtend",
            "a4a627977a128c82f96c6c3cb00716afae21c64e"
        ],
        [
            "intro H1; elim H1; intros k Hk; elim Hk; intros p Hp; clear H Hk.",
            "VernacExtend",
            "dc5cc636a7fb73a45c56dfb36902f29af48b424f"
        ],
        [
            "exists (pred k).",
            "VernacExtend",
            "ef90c93be7d2a32ddb46c46685b8a66841392b87"
        ],
        [
            "exists p.",
            "VernacExtend",
            "cb4eaff811cdb91cdb614614b7df264de4996b62"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Hp _ H); clear Hp; intros.",
            "VernacExtend",
            "96ea186979253f9c4829ff3ca1e059b94d1a68f6"
        ],
        [
            "unfold sqr2.",
            "VernacExtend",
            "7e5d73c5b7aae1f143057d38b471ae8e3d63b999"
        ],
        [
            "step_right ((cauchy y n +-cauchy x n)*(cauchy y n + cauchy x n)).",
            "VernacExtend",
            "92bafaf5aff38c44f363e22bb9755d740d32d262"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma One_lt_Two : Rlt (inject_Q 1) (inject_Q 2).",
            "VernacStartTheoremProof",
            "6a756586323d9ef07989071b6bd45ef72c2ec163"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "unfold Rpos_k.",
            "VernacExtend",
            "8771ce88b1ed1a260d840f78f9a0d7bcc6eeb6d5"
        ],
        [
            "unfold inject_Q; simpl; auto.",
            "VernacExtend",
            "bec53ebb776dd874f4e7efd7eec9c368dbad49ee"
        ],
        [
            "unfold Qle; simpl; auto with zarith.",
            "VernacExtend",
            "fa2c27ffa65546f4a549c4e9364a539bb779ce13"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Require Import nat_log.",
            "VernacRequire",
            "fc2aae6278f57888d1e4b6bcb61145891eef35fc"
        ],
        [
            "Lemma two_p_correct : forall (n:nat), 2^n == two_p n.",
            "VernacStartTheoremProof",
            "cfaa42876739cfd310898eaef3f201fd245b2491"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "QpowerSimpl.",
            "VernacExtend",
            "4c46f974df2a21a625702ef1902b08711444e15b"
        ],
        [
            "rewrite IHn; clear IHn.",
            "VernacExtend",
            "4aa256348cf16f1955e2da1ab9a20d96d478a5cc"
        ],
        [
            "unfold Z_of_nat, two_p.",
            "VernacExtend",
            "8bdbe4c495f092cc9bba211336c0682b1c5f4184"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "set (p:=P_of_succ_nat n).",
            "VernacExtend",
            "53bc0efa61a1c712cd591dc33618b7256de007f8"
        ],
        [
            "unfold two_power_pos.",
            "VernacExtend",
            "ba54a26f7eadd7123d89b6ea1bbad376c9999efa"
        ],
        [
            "do 2 rewrite shift_pos_nat; unfold shift_nat.",
            "VernacExtend",
            "8d3cd82bad6d10b8c0877048437c7d1517a1d6eb"
        ],
        [
            "rewrite <- Pplus_one_succ_r.",
            "VernacExtend",
            "3ec941a5fea5e89ec056fa8002a683507128cb6f"
        ],
        [
            "rewrite nat_of_P_succ_morphism.",
            "VernacExtend",
            "abfd3b10c8fac59b3015f2bace3c32e537e2da41"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Qeq.",
            "VernacExtend",
            "a57c5e70ba3e25a05585bbda1aa65198cd8cf7f6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Pmult_assoc.",
            "VernacExtend",
            "a4bd1d1616d0c5fb48fa8be2e66c92158d611c71"
        ],
        [
            "rewrite (Pmult_comm 2).",
            "VernacExtend",
            "03517d69353474afef83ee476ea0672513d66b62"
        ],
        [
            "rewrite Pmult_assoc.",
            "VernacExtend",
            "ce044ecab68aea7a419b4fd7914153f3520beeee"
        ],
        [
            "rewrite Pmult_comm.",
            "VernacExtend",
            "de0418f28f742eb206cb673ba5083668e23dd83c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_Rlt : forall a b, a<b -> Rlt (inject_Q a) (inject_Q b).",
            "VernacStartTheoremProof",
            "537df5b59178b409e7218120134a9f72591e668c"
        ],
        [
            "intros a b; exists (nat_log_sup ((Qden b)*(Qden a))).",
            "VernacExtend",
            "b2a95b3324444ebe109d1b8b00a7d19866ae7109"
        ],
        [
            "unfold Rpos_k.",
            "VernacExtend",
            "8771ce88b1ed1a260d840f78f9a0d7bcc6eeb6d5"
        ],
        [
            "unfold inject_Q; simpl; auto.",
            "VernacExtend",
            "bec53ebb776dd874f4e7efd7eec9c368dbad49ee"
        ],
        [
            "rewrite Qinv_power_n.",
            "VernacExtend",
            "ff212a8451bda9160861989ebb74f14ede86d919"
        ],
        [
            "rewrite two_p_correct.",
            "VernacExtend",
            "a5e46455beee735fc6ca9e95222ad58f9515ad4f"
        ],
        [
            "rewrite log_sup_log_sup.",
            "VernacExtend",
            "b55b890f72d0e071b7af2b7f55c8debf8591ee6e"
        ],
        [
            "set (ab := (Qden b * Qden a)%positive) in *.",
            "VernacExtend",
            "7e27a3e35901e959f0fd2cdd64297d8ad47d0dea"
        ],
        [
            "assert ('ab <= two_p (log_sup ab)).",
            "VernacExtend",
            "328a6e0421179bb0765992a905451c3904f53e7a"
        ],
        [
            "red; simpl; simpl_mult; destruct (log_sup_correct2 ab) as (_,H0); omega.",
            "VernacExtend",
            "cc54d59ad2ea46882e619fe80144b4ce19a99046"
        ],
        [
            "apply Qmult_lt_0_le_reg_r with (two_p (log_sup ab)).",
            "VernacExtend",
            "c2096841518408032eb298f39a6a766a744efae8"
        ],
        [
            "apply Qlt_le_trans with ('ab); [compute|]; auto.",
            "VernacExtend",
            "7e132542a966d7ce87cc7afad407ee8feccd0397"
        ],
        [
            "rewrite Qmult_comm.",
            "VernacExtend",
            "6ad09e37302daa53591f6f999325cf2e086a7df6"
        ],
        [
            "rewrite Qmult_inv_r by (intro H1; rewrite H1 in H0; auto).",
            "VernacExtend",
            "8e0452fcf1e99af72d78181e0cb87599a62e983d"
        ],
        [
            "rewrite Qmult_comm.",
            "VernacExtend",
            "6ad09e37302daa53591f6f999325cf2e086a7df6"
        ],
        [
            "apply Qle_trans with ('ab*(b+-a)); [| apply Qmult_le_compat_r; auto; rewrite <- Qle_minus_iff; apply Qlt_le_weak; auto].",
            "VernacExtend",
            "24ee5d43cda7b95f157d3eab2bae970c24596259"
        ],
        [
            "unfold ab; red; simpl.",
            "VernacExtend",
            "a9f6f8f863b533a9ca06903391d462f1fd6dc035"
        ],
        [
            "set (baab := ((Qnum b)*'(Qden a)+-(Qnum a)*'(Qden b))%Z).",
            "VernacExtend",
            "573cb9354064892605b59a3bf1059b0cedf0848c"
        ],
        [
            "assert (1 <= baab)%Z.",
            "VernacExtend",
            "a2e8444f93475d03886d297bef8c496b590878cf"
        ],
        [
            "unfold baab; rewrite <- Zopp_mult_distr_l; red in H; omega.",
            "VernacExtend",
            "4502805dbd634be40294903f87fec75f8148d238"
        ],
        [
            "destruct baab.",
            "VernacExtend",
            "f315a3340fe14591b05f0ec3abc2a2edba5e4429"
        ],
        [
            "elim H1; auto.",
            "VernacExtend",
            "d50026b5dc31929f05ffbd310861b147378ba238"
        ],
        [
            "simpl_mult.",
            "VernacExtend",
            "8729ced2e11f022689ae4b1bd579a0858666ef7d"
        ],
        [
            "rewrite Zmult_1_r.",
            "VernacExtend",
            "417376d82024400c741f6570f03b2437a77ee661"
        ],
        [
            "assert (H2:=Zmult_le_compat (' Qden b * ' Qden a) 1 (' Qden b * ' Qden a) ('p)).",
            "VernacExtend",
            "c71e0216d402f4e6983481b32bf0a6206f54e924"
        ],
        [
            "rewrite Zmult_1_r in H2.",
            "VernacExtend",
            "2478ea0b94903cb971d089c5b56558f2de06d389"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "apply Zle_refl.",
            "VernacExtend",
            "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
        ],
        [
            "compute; intro; discriminate.",
            "VernacExtend",
            "3df13ab91c05c185c539e49388a3dfb30b304b9e"
        ],
        [
            "compute; intro; discriminate.",
            "VernacExtend",
            "3df13ab91c05c185c539e49388a3dfb30b304b9e"
        ],
        [
            "elim H1; auto.",
            "VernacExtend",
            "d50026b5dc31929f05ffbd310861b147378ba238"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Record itvl : Set := { lft : Q ; rht : Q ; lft_rht : lft<rht}.",
            "VernacInductive",
            "b4e0005aa834c61f19b49a477e5b76475c702286"
        ],
        [
            "Definition two_three: itvl.",
            "VernacDefinition",
            "11ac3a6a7c312a1602950e62239f49e53bbbfcd8"
        ],
        [
            "apply (Build_itvl 2 3).",
            "VernacExtend",
            "8112ae060992d7cd97814f5a3de737cac274779e"
        ],
        [
            "unfold Qlt; simpl; auto with zarith.",
            "VernacExtend",
            "5c6377020ef948c7e200a7bf37dc1f2345e67c45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Record itvl2: Set:= {lft1:Q; rht1:Q; lft2:Q; rht2:Q; lft1_rht1: lft1<rht1; lft2_rht2: lft2<rht2}.",
            "VernacInductive",
            "21a1c9732f0dbca94b944dccea3eda920c11ba28"
        ],
        [
            "Definition in_itvl := fun i x => lft i <= x <= rht i.",
            "VernacDefinition",
            "d0b6797f49c20f24f91e1cf76acdc381d7e792ec"
        ],
        [
            "Definition in_itvl2 := fun i x => lft1 i<=x<=rht1 i /\\ lft2 i<=x<=rht2 i.",
            "VernacDefinition",
            "c367b0365dcdc64943e49b18c9ec982f3c08a81a"
        ],
        [
            "Record continuous (i:itvl) : Set := { cont_h : Q -> nat -> Q; cont_alpha : nat -> nat; cont_w : nat -> nat; cont_cauchy: forall a, Is_Cauchy (cont_h a) cont_alpha; cont_unif : forall a b n k, le n (cont_alpha k) -> in_itvl i a -> in_itvl i b -> -(1#2)^(pred (cont_w k)) <= a-b <= (1#2)^(pred (cont_w k)) -> -(1#2)^k <= cont_h a n - cont_h b n <= (1#2)^k }.",
            "VernacInductive",
            "6ae6bd248ddb16aa79e1a90ddb4ec16f400f81f0"
        ],
        [
            "Definition one_two : itvl.",
            "VernacDefinition",
            "a2c04ee3b229b2d2adf7b9c91c9d12ada21e94f3"
        ],
        [
            "apply (Build_itvl 1 2).",
            "VernacExtend",
            "db064de4a8f14f89bbfd9aaf0ac2f2bdb1767cb7"
        ],
        [
            "unfold Qlt; simpl; auto with zarith.",
            "VernacExtend",
            "5c6377020ef948c7e200a7bf37dc1f2345e67c45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sqr2_cont : continuous one_two.",
            "VernacDefinition",
            "c8d5a30755c3f32f04263afd744d2b7d2dd7073a"
        ],
        [
            "apply (Build_continuous one_two sqr2_h sqr2_alpha sqr2_w).",
            "VernacExtend",
            "9a2f7647c534d770c0cf877b9b762cb256afc7e3"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Zcomplements.",
            "VernacRequire",
            "13456ccf23bc1dd22cc1f6bc0568868548e9a484"
        ],
        [
            "Definition sqrt2_approx : nat -> itvl.",
            "VernacDefinition",
            "55176163d1856817d4008fbdf348a7add283f1dd"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "apply (Build_itvl 1 2); unfold Qlt; simpl; omega.",
            "VernacExtend",
            "82408f08c7fa6645c2946f5428ae155a38e9e97f"
        ],
        [
            "elim IHnat; intros a b ab.",
            "VernacExtend",
            "d5225cbec2d2f28f8ca4f69f60cfa117c434f649"
        ],
        [
            "set (c:= (Qred ((2#3)*a+(1#3)*b))).",
            "VernacExtend",
            "36185c54b337e10caabca65226d61330df8beb7c"
        ],
        [
            "set (d:= (Qred ((1#3)*a+(2#3)*b))).",
            "VernacExtend",
            "b93b9455991ab10b65ed0c14c14f4e6ac086ae4f"
        ],
        [
            "assert (cd : c<d).",
            "VernacExtend",
            "51d40483859dfeb3f487f0bcf4388efa7d39e6a2"
        ],
        [
            "unfold c, d.",
            "VernacExtend",
            "e401c4cd980be2391faf663e91d9ad35e8efdc36"
        ],
        [
            "rewrite Qlt_minus_iff in ab |- *.",
            "VernacExtend",
            "174d08abf1081fae1f3eca5d81880e9f7600de56"
        ],
        [
            "rewrite (Qred_correct ((2#3)*a+(1#3)*b)).",
            "VernacExtend",
            "28f3e2644a882f0485008461b6a6677fe091b9d4"
        ],
        [
            "rewrite (Qred_correct ((1#3)*a+(2#3)*b)).",
            "VernacExtend",
            "a2983bc9768034ebde2b399e3a3a9e1ffa3d2632"
        ],
        [
            "step (0*(1#3) <= (b+-a)*(1#3)).",
            "VernacExtend",
            "03bb197d66d082d3e020cc64db9bcab1a7766861"
        ],
        [
            "apply Qmult_lt_compat_r; [compute|]; auto.",
            "VernacExtend",
            "b5ca2995954b2330ebee4a3b6a8a0de4e5a66c6e"
        ],
        [
            "set (fc := sqr2_apply (inject_Q c)).",
            "VernacExtend",
            "1f4b969649286dfb62f839a87ffa0c5d12929e4f"
        ],
        [
            "set (fd := sqr2_apply (inject_Q d)).",
            "VernacExtend",
            "b2add36dcc3de8a098df7dfe12d2ee1f45abc047"
        ],
        [
            "assert (fcfd : Rlt fc fd).",
            "VernacExtend",
            "ac8c7787df630975794f7c6310bec1ca63731b16"
        ],
        [
            "unfold fc, fd; apply sqr2_incr.",
            "VernacExtend",
            "c97cf8f2324fbf2071eace02185050556966b219"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "apply Qlt_Rlt; auto.",
            "VernacExtend",
            "2a5bcb3237bbdedeb3771a14f74a1012ff2270ea"
        ],
        [
            "case (Rcompare fc fd fcfd (inject_Q 0)); intros.",
            "VernacExtend",
            "769544f50e09a83f2ea6b55b2337f229348aa33f"
        ],
        [
            "apply (Build_itvl c b).",
            "VernacExtend",
            "87ff206e1f8c66484e7ace9d6ebcdfb0d96d5a36"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "apply (Build_itvl a d).",
            "VernacExtend",
            "4860b0ee41024b6cd9ef8b198bc3d9daa45cee3e"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition sqrt2: R.",
            "VernacDefinition",
            "3ff1a5520ac822a0f675383acbabc46430316d43"
        ],
        [
            "apply (Build_R (fun n => lft (sqrt2_approx n)) (fun k => plus k k)).",
            "VernacExtend",
            "0f8f631966b11f49a716e8b97e227aa5bfc57088"
        ],
        [
            "fedup.",
            "VernacExtend",
            "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Extraction Inline Zcompare_rec Z_lt_rec.",
            "VernacExtend",
            "51e97375dd9109dcbe8cea4538dd2cbcf952752a"
        ],
        [
            "Extraction \"sqrt2.ml\" sqrt2.",
            "VernacExtend",
            "be94f8fa8835a1fcb6844385fb6952e26bb3e213"
        ]
    ],
    "proofs": [
        {
            "name": "inject_Q",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros q.",
                        "VernacExtend",
                        "ff9d121cdb516bd63ace418a2de73c7fb0f8ba3e"
                    ]
                },
                {
                    "command": [
                        "apply (Build_R (fun _ => q) (fun _ => O)).",
                        "VernacExtend",
                        "936776d2d1a7038e1cf51359c80c074faf416043"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (H1: q-q == 0) by ring.",
                        "VernacExtend",
                        "31b05683c360a4ed5c6efe6c0b247ceeef7726a8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; clear H1.",
                        "VernacExtend",
                        "00d5f4aac5a8b3519e323a55e4be18868171cc4f"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= (1#2)^k).",
                        "VernacExtend",
                        "b7143a1ac1e9ed9b7294a380ef2f9d339d43c10d"
                    ]
                },
                {
                    "command": [
                        "apply Qpower_pos.",
                        "VernacExtend",
                        "98058148823dd1b60a28842ca064a86e87a7ac14"
                    ]
                },
                {
                    "command": [
                        "compute; intro; discriminate.",
                        "VernacExtend",
                        "3df13ab91c05c185c539e49388a3dfb30b304b9e"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (-0) by auto.",
                        "VernacExtend",
                        "08aadaaa21d315f1d0ace834f2150a9f0f85af39"
                    ]
                },
                {
                    "command": [
                        "apply Qopp_le_compat; auto.",
                        "VernacExtend",
                        "afc23b6603fb0bd07d0f8149cbe2ed0465ffba7a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "test",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_le",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "eauto with arith.",
                        "VernacExtend",
                        "15b190967181ece61dbbf5a691d414798413c204"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qeq_Qle",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with b by auto.",
                        "VernacExtend",
                        "1849890c1cd52eadaf3107186d76fd9c9c2dad73"
                    ]
                },
                {
                    "command": [
                        "apply Qle_refl.",
                        "VernacExtend",
                        "2b37ca692ce0754c98268708708768a93878ed44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rplus",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply (Build_R (fun n => cauchy x n + cauchy y n) (fun k => max (modulus x (S k)) (modulus y (S k)))).",
                        "VernacExtend",
                        "c0357c215a93368309760d06279436ca2582cf4e"
                    ]
                },
                {
                    "command": [
                        "unfold Is_Cauchy; intros.",
                        "VernacExtend",
                        "ab570150a98c600b044f55db43e060c79b066399"
                    ]
                },
                {
                    "command": [
                        "set (N := modulus x (S k)) in *.",
                        "VernacExtend",
                        "1ec859272d1e00553c7c6314fc4fefb98c2b0551"
                    ]
                },
                {
                    "command": [
                        "set (M := modulus y (S k)) in *.",
                        "VernacExtend",
                        "175ae4774399cd3211d8ba2533012a4b14d4d2e8"
                    ]
                },
                {
                    "command": [
                        "elim (max_le N M m H); elim (max_le N M n H0); intros.",
                        "VernacExtend",
                        "c10b69237c3c1c1226ec8fc02de0ea442244fc67"
                    ]
                },
                {
                    "command": [
                        "assert (H5 := is_cauchy x (S k) m n H3 H1).",
                        "VernacExtend",
                        "aed5865528da18fc6a949c816a41d7da0f4ee45c"
                    ]
                },
                {
                    "command": [
                        "assert (H6 := is_cauchy y (S k) m n H4 H2).",
                        "VernacExtend",
                        "791d12bae9975a26c369866f152e937dfc058288"
                    ]
                },
                {
                    "command": [
                        "clear N M H H0 H1 H2 H3 H4.",
                        "VernacExtend",
                        "ed85bbff295fed2ddc7806d808a971485437ac30"
                    ]
                },
                {
                    "command": [
                        "set (Xn := cauchy x n) in *; set (Xm := cauchy x m) in *; set (Yn := cauchy y n) in *; set (Ym := cauchy y m) in *.",
                        "VernacExtend",
                        "240ee5b6f33fe8a25f53391937ab676a1b11fe6a"
                    ]
                },
                {
                    "command": [
                        "destruct H5; destruct H6.",
                        "VernacExtend",
                        "5d00d1a72d8fb6772c4e821252d73b5e03391868"
                    ]
                },
                {
                    "command": [
                        "setoid_replace (Xm+Ym-(Xn+Yn)) with ((Xm-Xn) +(Ym-Yn)) by ring.",
                        "VernacExtend",
                        "f292c6ec598ad6357a887c1b51d1090e16412c81"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "step_left (-(1#2)^(S k)+-(1#2)^(S k)).",
                        "VernacExtend",
                        "fb6f580b9321dc6bd70c801dee501048ad035bb9"
                    ]
                },
                {
                    "command": [
                        "apply Qplus_le_compat; auto.",
                        "VernacExtend",
                        "4461f149b605540f9c93748e461b63d20b97be04"
                    ]
                },
                {
                    "command": [
                        "step_right ((1#2)^(S k)+(1#2)^(S k)).",
                        "VernacExtend",
                        "19dec88c63b6e4e4312ccd2cb84eefc458a23d98"
                    ]
                },
                {
                    "command": [
                        "apply Qplus_le_compat; auto.",
                        "VernacExtend",
                        "4461f149b605540f9c93748e461b63d20b97be04"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Ropp",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply (Build_R (fun n => -(cauchy x n)) (fun k => modulus x k)).",
                        "VernacExtend",
                        "48ae303c7f28d14a1e31f14b28612a24a869c6f6"
                    ]
                },
                {
                    "command": [
                        "unfold Is_Cauchy; intros.",
                        "VernacExtend",
                        "ab570150a98c600b044f55db43e060c79b066399"
                    ]
                },
                {
                    "command": [
                        "unfold Qminus.",
                        "VernacExtend",
                        "1b1ec2310f1235b830a0ef3187a0d03c8562af3c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qopp_opp (cauchy x n)).",
                        "VernacExtend",
                        "c39db6143b4be38deae8acd3076bfb61a594be3d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qplus_comm (-(cauchy x m)) (cauchy x n)).",
                        "VernacExtend",
                        "292982c5c9512faa21a9be7d2856e0ce61f4a837"
                    ]
                },
                {
                    "command": [
                        "apply (is_cauchy x k n m); auto.",
                        "VernacExtend",
                        "f387ac9a9c5ce5a5e2ffb27f2be6c1cba8e523fe"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Rpos_alt_1",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "unfold Rpos, Rpos_k, Rpos_alt.",
                        "VernacExtend",
                        "b1a63adb3ab42c1d93af28dd47ffead9dd881ccc"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H; intros k Hk; clear H.",
                        "VernacExtend",
                        "92e5c295b487c46d01955308999c19dcf66bab43"
                    ]
                },
                {
                    "command": [
                        "exists (S k).",
                        "VernacExtend",
                        "01f3cbf582735176c47dee25e58785bc7c8a82a0"
                    ]
                },
                {
                    "command": [
                        "exists (modulus x (S k)).",
                        "VernacExtend",
                        "ccf6df8b648b08000ac00afd0311218558229368"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (x.(is_cauchy) (S k) n (modulus x (S k))) as (Hx,_); auto.",
                        "VernacExtend",
                        "81ee9e313747d3dbf774c470b180c7937b6ba227"
                    ]
                },
                {
                    "command": [
                        "generalize (Qplus_le_compat _ _ _ _ Hk Hx).",
                        "VernacExtend",
                        "1cb2ab8b9a6a538d39033bf1bf07240dbcf6901e"
                    ]
                },
                {
                    "command": [
                        "step_hd ((1#2)^(S k)<=cauchy x n); auto.",
                        "VernacExtend",
                        "f3a2bdce533d10f3b12e43d6510db98f4612ea8f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Rpos_alt_2",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "unfold Rpos, Rpos_k, Rpos_alt.",
                        "VernacExtend",
                        "b1a63adb3ab42c1d93af28dd47ffead9dd881ccc"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H; intros l Hl; elim Hl; intros p Hp; clear H Hl.",
                        "VernacExtend",
                        "a083b6113dd55595c2672760d78cb3d66649fa6d"
                    ]
                },
                {
                    "command": [
                        "exists (S l).",
                        "VernacExtend",
                        "257c26c36ac90db95d3f826b8e4e288ec2a44b60"
                    ]
                },
                {
                    "command": [
                        "set (M:=modulus x (S (S l))).",
                        "VernacExtend",
                        "5d2c0534b3c9841d6f9b8e296314d01f8efcfb72"
                    ]
                },
                {
                    "command": [
                        "set (N:=max p M).",
                        "VernacExtend",
                        "940be667981e5bb0339d8e1a317232bc9bf9d235"
                    ]
                },
                {
                    "command": [
                        "destruct (x.(is_cauchy) (S (S l)) M N) as (Hx,_); auto.",
                        "VernacExtend",
                        "8c14bbbd0260896643bfe7f3726bba4ced16581e"
                    ]
                },
                {
                    "command": [
                        "unfold N, M; auto with arith.",
                        "VernacExtend",
                        "e1899d276ea96bb6bda725dbba082ea5854c58d6"
                    ]
                },
                {
                    "command": [
                        "apply Qle_trans with ((1#2)^l+(-(1#2)^(S (S l)))).",
                        "VernacExtend",
                        "260b047e2ed89add4cc1eed83efe063602fe59e0"
                    ]
                },
                {
                    "command": [
                        "step ((1#2)*(1#2)^l<=(3#4)*(1#2)^l).",
                        "VernacExtend",
                        "a6e7f358969cb402ef4813a2a6dbb7575e9b73cf"
                    ]
                },
                {
                    "command": [
                        "apply Qmult_le_compat_r; [|apply Qpower_pos]; compute; intro; discriminate.",
                        "VernacExtend",
                        "8aa9732f8dadb6a740e78cafa67b45b8ddc584fa"
                    ]
                },
                {
                    "command": [
                        "step_right (cauchy x N +(cauchy x M - cauchy x N)).",
                        "VernacExtend",
                        "e3219c97fb459036da8e6fe3e84571c3b7e7ebd1"
                    ]
                },
                {
                    "command": [
                        "apply Qplus_le_compat; auto.",
                        "VernacExtend",
                        "4461f149b605540f9c93748e461b63d20b97be04"
                    ]
                },
                {
                    "command": [
                        "apply Hp; unfold N; auto with arith.",
                        "VernacExtend",
                        "0cb0b1475e802b694bb1b7d8609cf3555fc0a80e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Rcompare",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "unfold Rlt; intros.",
                        "VernacExtend",
                        "78706cdfe1761e81068a365ebc43a9d1ff61a98b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rpos_alt_1 _ H) as (k,(p,Hp)); clear H.",
                        "VernacExtend",
                        "86cd66f9b520529e346ba2436184531387f89386"
                    ]
                },
                {
                    "command": [
                        "set (k' := S (S k)).",
                        "VernacExtend",
                        "d46a5e25a38bc46fbaaf35c0113335cd62e0bfcf"
                    ]
                },
                {
                    "command": [
                        "set (k'' := S (S k')).",
                        "VernacExtend",
                        "1c72534e49dde7413165c92a38c13333a5467bcb"
                    ]
                },
                {
                    "command": [
                        "set (q := max (modulus x k'') (max (modulus y k'') (max (modulus z k'') p))).",
                        "VernacExtend",
                        "04d8580f2d1c50730a00d0b23be1ec6e4716f857"
                    ]
                },
                {
                    "command": [
                        "destruct (Qlt_le_dec (cauchy z q - cauchy x q) ((1#2)^(S k))); [right|left]; exists k'.",
                        "VernacExtend",
                        "b95ced30616289d7fc406ce42a1efac0ad2cf37c"
                    ]
                },
                {
                    "command": [
                        "red; simpl cauchy; simpl cauchy in Hp.",
                        "VernacExtend",
                        "99c737fb7a430985fedfac0e4d91684312c02b63"
                    ]
                },
                {
                    "command": [
                        "set (q' := max (modulus y (S (S k'))) (modulus z (S (S k')))).",
                        "VernacExtend",
                        "97b4c01970c1fb4b61ec1da4515e53c2b0629e47"
                    ]
                },
                {
                    "command": [
                        "destruct (z.(is_cauchy) k'' q q') as (Hz,_); auto.",
                        "VernacExtend",
                        "c180f229f2f9c8d055493acfb1462678eea26a0c"
                    ]
                },
                {
                    "command": [
                        "unfold q, k''; eauto with arith.",
                        "VernacExtend",
                        "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
                    ]
                },
                {
                    "command": [
                        "unfold q', k''; auto with arith.",
                        "VernacExtend",
                        "7447e4d56ce715d8550a74a63ba3afc70905670d"
                    ]
                },
                {
                    "command": [
                        "destruct (y.(is_cauchy) k'' q' q) as (Hy,_); auto.",
                        "VernacExtend",
                        "20ccc02db22ed3ae48c72148f4e74f5507d21c8e"
                    ]
                },
                {
                    "command": [
                        "unfold q', k''; auto with arith.",
                        "VernacExtend",
                        "7447e4d56ce715d8550a74a63ba3afc70905670d"
                    ]
                },
                {
                    "command": [
                        "unfold q, k''; eauto with arith.",
                        "VernacExtend",
                        "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
                    ]
                },
                {
                    "command": [
                        "assert (p <= q)%nat by (unfold q; eauto with arith).",
                        "VernacExtend",
                        "38430671b6e6278de1fe6f868a350e0ceabc0b05"
                    ]
                },
                {
                    "command": [
                        "assert (H0:=Hp q H); clear Hp H.",
                        "VernacExtend",
                        "c9a0f23542ae8c34a8a839b06a76f18c601bb5fb"
                    ]
                },
                {
                    "command": [
                        "assert (H1:=Qopp_le_compat _ _ (Qlt_le_weak _ _ q0)); clear q0.",
                        "VernacExtend",
                        "93b919eae44e0aa1c2a991175622c987c9b8f252"
                    ]
                },
                {
                    "command": [
                        "set (Yq' := cauchy y q') in *; set (Yq := cauchy y q) in *; set (Zq' := cauchy z q') in *; set (Zq := cauchy z q) in *; set (Xq := cauchy x q) in *; clearbody q q' Yq Yq' Zq Zq' Xq.",
                        "VernacExtend",
                        "f06fa7c9005d8d58cddb4c0a2bdeb2de7a3359a1"
                    ]
                },
                {
                    "command": [
                        "generalize (Qplus_le_compat _ _ _ _ Hy (Qplus_le_compat _ _ _ _ H0 (Qplus_le_compat _ _ _ _ H1 Hz))).",
                        "VernacExtend",
                        "c9908521e7521c7d663a286c51ca16dea842e691"
                    ]
                },
                {
                    "command": [
                        "unfold k'', k'.",
                        "VernacExtend",
                        "be24c26acfe0ca4e642c5aaaeda175033bc75835"
                    ]
                },
                {
                    "command": [
                        "step_hd ((3#8)*(1#2)^k <= Yq'+-Zq').",
                        "VernacExtend",
                        "6eb85e7753398dcc77327ce65f407cdea48c2335"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "step_left ((1#4)*(1#2)^k).",
                        "VernacExtend",
                        "5f6d50828ad8dc636a9812a8de5b4851f66f0b8e"
                    ]
                },
                {
                    "command": [
                        "apply Qle_trans with ((3#8)*(1#2)^k); auto.",
                        "VernacExtend",
                        "f859237003dc34fce8b61d74b0e7daa322b4dccd"
                    ]
                },
                {
                    "command": [
                        "apply Qmult_le_compat_r; [|apply Qpower_pos]; compute; intro; discriminate.",
                        "VernacExtend",
                        "8aa9732f8dadb6a740e78cafa67b45b8ddc584fa"
                    ]
                },
                {
                    "command": [
                        "red; simpl cauchy; simpl cauchy in Hp.",
                        "VernacExtend",
                        "99c737fb7a430985fedfac0e4d91684312c02b63"
                    ]
                },
                {
                    "command": [
                        "set (q' := max (modulus z (S (S k'))) (modulus x (S (S k')))).",
                        "VernacExtend",
                        "87da06f40a2b1b684b87ec2b89338279c192d4e5"
                    ]
                },
                {
                    "command": [
                        "destruct (z.(is_cauchy) k'' q' q) as (Hz,_); auto.",
                        "VernacExtend",
                        "a8cf7614488c1792dfbed15d135870ed4c6a8ba4"
                    ]
                },
                {
                    "command": [
                        "unfold q', k''; auto with arith.",
                        "VernacExtend",
                        "7447e4d56ce715d8550a74a63ba3afc70905670d"
                    ]
                },
                {
                    "command": [
                        "unfold q, k''; eauto with arith.",
                        "VernacExtend",
                        "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
                    ]
                },
                {
                    "command": [
                        "destruct (x.(is_cauchy) k'' q q') as (Hx,_); auto.",
                        "VernacExtend",
                        "58d112582b7586c9dbcf108d821c4f150a7ad2f8"
                    ]
                },
                {
                    "command": [
                        "unfold q, k''; eauto with arith.",
                        "VernacExtend",
                        "9fb745c95ce7efcd3f77334e2faa54fea1d3e25a"
                    ]
                },
                {
                    "command": [
                        "unfold q', k''; auto with arith.",
                        "VernacExtend",
                        "7447e4d56ce715d8550a74a63ba3afc70905670d"
                    ]
                },
                {
                    "command": [
                        "clear Hp.",
                        "VernacExtend",
                        "6c64d06ec9f7fe8ce31fe96377dfb041752729b0"
                    ]
                },
                {
                    "command": [
                        "set (Xq' := cauchy x q') in *; set (Xq := cauchy x q) in *; set (Zq' := cauchy z q') in *; set (Zq := cauchy z q) in *; clearbody q q' Xq Xq' Zq Zq'.",
                        "VernacExtend",
                        "f306ea3ec0b7778854a93d0c9dc0111043155ff7"
                    ]
                },
                {
                    "command": [
                        "generalize (Qplus_le_compat _ _ _ _ Hz (Qplus_le_compat _ _ _ _ q0 Hx)).",
                        "VernacExtend",
                        "0b67cab2a39247f2524775200c6c377e4b394bb3"
                    ]
                },
                {
                    "command": [
                        "unfold k'', k'.",
                        "VernacExtend",
                        "be24c26acfe0ca4e642c5aaaeda175033bc75835"
                    ]
                },
                {
                    "command": [
                        "step_hd ((3#8)*(1#2)^k <= Zq'+-Xq').",
                        "VernacExtend",
                        "2fb8f3529cc3a2b5bc18d8c4a75c7cb5e57232da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "step_left ((1#4)*(1#2)^k).",
                        "VernacExtend",
                        "5f6d50828ad8dc636a9812a8de5b4851f66f0b8e"
                    ]
                },
                {
                    "command": [
                        "apply Qle_trans with ((3#8)*(1#2)^k); auto.",
                        "VernacExtend",
                        "f859237003dc34fce8b61d74b0e7daa322b4dccd"
                    ]
                },
                {
                    "command": [
                        "apply Qmult_le_compat_r; [|apply Qpower_pos]; compute; intro; discriminate.",
                        "VernacExtend",
                        "8aa9732f8dadb6a740e78cafa67b45b8ddc584fa"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sqr2_apply",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply (Build_R (fun n => sqr2_h (cauchy x n) n) (fun k => max (sqr2_alpha (S (S k))) (modulus x (pred (sqr2_w (S k)))))).",
                        "VernacExtend",
                        "4d4a1ff6dfc7c038b026902d063a9cde78a5739d"
                    ]
                },
                {
                    "command": [
                        "generalize x.(is_cauchy).",
                        "VernacExtend",
                        "634deefa8eed67b8281c2e167fc4912b451af588"
                    ]
                },
                {
                    "command": [
                        "unfold Is_Cauchy, sqr2_h, sqr2_alpha, sqr2_w, sqr2; simpl; intros.",
                        "VernacExtend",
                        "a7f9c9ad41e637f60ff809c3de357db42e4c8c44"
                    ]
                },
                {
                    "command": [
                        "generalize (H _ _ _ H0 H1); clear H H0 H1; intro H.",
                        "VernacExtend",
                        "db7e9200a229970fd7009d8ce1f223a782061d36"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "unfold cauchy; simpl.",
                        "VernacExtend",
                        "7d3e0a6209da4422b85b420583acdbf0893677ea"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sqr2_incr",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "unfold Rlt; intros.",
                        "VernacExtend",
                        "78706cdfe1761e81068a365ebc43a9d1ff61a98b"
                    ]
                },
                {
                    "command": [
                        "apply Rpos_alt_2.",
                        "VernacExtend",
                        "bee7266924d27db4e3f1e5edcbe8d94e82de26e7"
                    ]
                },
                {
                    "command": [
                        "generalize (Rpos_alt_1 _ H1); clear H1.",
                        "VernacExtend",
                        "a614ff64f789b8c23ebdc07b6f80c4c395c623f8"
                    ]
                },
                {
                    "command": [
                        "unfold Rpos_alt, Rminus, Ropp, Rplus; simpl; unfold sqr2_h; simpl.",
                        "VernacExtend",
                        "a4a627977a128c82f96c6c3cb00716afae21c64e"
                    ]
                },
                {
                    "command": [
                        "intro H1; elim H1; intros k Hk; elim Hk; intros p Hp; clear H Hk.",
                        "VernacExtend",
                        "dc5cc636a7fb73a45c56dfb36902f29af48b424f"
                    ]
                },
                {
                    "command": [
                        "exists (pred k).",
                        "VernacExtend",
                        "ef90c93be7d2a32ddb46c46685b8a66841392b87"
                    ]
                },
                {
                    "command": [
                        "exists p.",
                        "VernacExtend",
                        "cb4eaff811cdb91cdb614614b7df264de4996b62"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Hp _ H); clear Hp; intros.",
                        "VernacExtend",
                        "96ea186979253f9c4829ff3ca1e059b94d1a68f6"
                    ]
                },
                {
                    "command": [
                        "unfold sqr2.",
                        "VernacExtend",
                        "7e5d73c5b7aae1f143057d38b471ae8e3d63b999"
                    ]
                },
                {
                    "command": [
                        "step_right ((cauchy y n +-cauchy x n)*(cauchy y n + cauchy x n)).",
                        "VernacExtend",
                        "92bafaf5aff38c44f363e22bb9755d740d32d262"
                    ]
                },
                {
                    "command": [
                        "red in H0.",
                        "VernacExtend",
                        "3e33e4fdada8386783e8311d1d4116d148279cb2"
                    ]
                },
                {
                    "command": [
                        "red in H0.",
                        "VernacExtend",
                        "3e33e4fdada8386783e8311d1d4116d148279cb2"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "One_lt_Two",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "exists O.",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "unfold Rpos_k.",
                        "VernacExtend",
                        "8771ce88b1ed1a260d840f78f9a0d7bcc6eeb6d5"
                    ]
                },
                {
                    "command": [
                        "unfold inject_Q; simpl; auto.",
                        "VernacExtend",
                        "bec53ebb776dd874f4e7efd7eec9c368dbad49ee"
                    ]
                },
                {
                    "command": [
                        "unfold Qle; simpl; auto with zarith.",
                        "VernacExtend",
                        "fa2c27ffa65546f4a549c4e9364a539bb779ce13"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "two_p_correct",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "QpowerSimpl.",
                        "VernacExtend",
                        "4c46f974df2a21a625702ef1902b08711444e15b"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; clear IHn.",
                        "VernacExtend",
                        "4aa256348cf16f1955e2da1ab9a20d96d478a5cc"
                    ]
                },
                {
                    "command": [
                        "unfold Z_of_nat, two_p.",
                        "VernacExtend",
                        "8bdbe4c495f092cc9bba211336c0682b1c5f4184"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "set (p:=P_of_succ_nat n).",
                        "VernacExtend",
                        "53bc0efa61a1c712cd591dc33618b7256de007f8"
                    ]
                },
                {
                    "command": [
                        "unfold two_power_pos.",
                        "VernacExtend",
                        "ba54a26f7eadd7123d89b6ea1bbad376c9999efa"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite shift_pos_nat; unfold shift_nat.",
                        "VernacExtend",
                        "8d3cd82bad6d10b8c0877048437c7d1517a1d6eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pplus_one_succ_r.",
                        "VernacExtend",
                        "3ec941a5fea5e89ec056fa8002a683507128cb6f"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_succ_morphism.",
                        "VernacExtend",
                        "abfd3b10c8fac59b3015f2bace3c32e537e2da41"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Qeq.",
                        "VernacExtend",
                        "a57c5e70ba3e25a05585bbda1aa65198cd8cf7f6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pmult_assoc.",
                        "VernacExtend",
                        "a4bd1d1616d0c5fb48fa8be2e66c92158d611c71"
                    ]
                },
                {
                    "command": [
                        "rewrite (Pmult_comm 2).",
                        "VernacExtend",
                        "03517d69353474afef83ee476ea0672513d66b62"
                    ]
                },
                {
                    "command": [
                        "rewrite Pmult_assoc.",
                        "VernacExtend",
                        "ce044ecab68aea7a419b4fd7914153f3520beeee"
                    ]
                },
                {
                    "command": [
                        "rewrite Pmult_comm.",
                        "VernacExtend",
                        "de0418f28f742eb206cb673ba5083668e23dd83c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_Rlt",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "intros a b; exists (nat_log_sup ((Qden b)*(Qden a))).",
                        "VernacExtend",
                        "b2a95b3324444ebe109d1b8b00a7d19866ae7109"
                    ]
                },
                {
                    "command": [
                        "unfold Rpos_k.",
                        "VernacExtend",
                        "8771ce88b1ed1a260d840f78f9a0d7bcc6eeb6d5"
                    ]
                },
                {
                    "command": [
                        "unfold inject_Q; simpl; auto.",
                        "VernacExtend",
                        "bec53ebb776dd874f4e7efd7eec9c368dbad49ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Qinv_power_n.",
                        "VernacExtend",
                        "ff212a8451bda9160861989ebb74f14ede86d919"
                    ]
                },
                {
                    "command": [
                        "rewrite two_p_correct.",
                        "VernacExtend",
                        "a5e46455beee735fc6ca9e95222ad58f9515ad4f"
                    ]
                },
                {
                    "command": [
                        "rewrite log_sup_log_sup.",
                        "VernacExtend",
                        "b55b890f72d0e071b7af2b7f55c8debf8591ee6e"
                    ]
                },
                {
                    "command": [
                        "set (ab := (Qden b * Qden a)%positive) in *.",
                        "VernacExtend",
                        "7e27a3e35901e959f0fd2cdd64297d8ad47d0dea"
                    ]
                },
                {
                    "command": [
                        "assert ('ab <= two_p (log_sup ab)).",
                        "VernacExtend",
                        "328a6e0421179bb0765992a905451c3904f53e7a"
                    ]
                },
                {
                    "command": [
                        "red; simpl; simpl_mult; destruct (log_sup_correct2 ab) as (_,H0); omega.",
                        "VernacExtend",
                        "cc54d59ad2ea46882e619fe80144b4ce19a99046"
                    ]
                },
                {
                    "command": [
                        "apply Qmult_lt_0_le_reg_r with (two_p (log_sup ab)).",
                        "VernacExtend",
                        "c2096841518408032eb298f39a6a766a744efae8"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_le_trans with ('ab); [compute|]; auto.",
                        "VernacExtend",
                        "7e132542a966d7ce87cc7afad407ee8feccd0397"
                    ]
                },
                {
                    "command": [
                        "rewrite Qmult_comm.",
                        "VernacExtend",
                        "6ad09e37302daa53591f6f999325cf2e086a7df6"
                    ]
                },
                {
                    "command": [
                        "rewrite Qmult_inv_r by (intro H1; rewrite H1 in H0; auto).",
                        "VernacExtend",
                        "8e0452fcf1e99af72d78181e0cb87599a62e983d"
                    ]
                },
                {
                    "command": [
                        "rewrite Qmult_comm.",
                        "VernacExtend",
                        "6ad09e37302daa53591f6f999325cf2e086a7df6"
                    ]
                },
                {
                    "command": [
                        "apply Qle_trans with ('ab*(b+-a)); [| apply Qmult_le_compat_r; auto; rewrite <- Qle_minus_iff; apply Qlt_le_weak; auto].",
                        "VernacExtend",
                        "24ee5d43cda7b95f157d3eab2bae970c24596259"
                    ]
                },
                {
                    "command": [
                        "unfold ab; red; simpl.",
                        "VernacExtend",
                        "a9f6f8f863b533a9ca06903391d462f1fd6dc035"
                    ]
                },
                {
                    "command": [
                        "set (baab := ((Qnum b)*'(Qden a)+-(Qnum a)*'(Qden b))%Z).",
                        "VernacExtend",
                        "573cb9354064892605b59a3bf1059b0cedf0848c"
                    ]
                },
                {
                    "command": [
                        "assert (1 <= baab)%Z.",
                        "VernacExtend",
                        "a2e8444f93475d03886d297bef8c496b590878cf"
                    ]
                },
                {
                    "command": [
                        "unfold baab; rewrite <- Zopp_mult_distr_l; red in H; omega.",
                        "VernacExtend",
                        "4502805dbd634be40294903f87fec75f8148d238"
                    ]
                },
                {
                    "command": [
                        "destruct baab.",
                        "VernacExtend",
                        "f315a3340fe14591b05f0ec3abc2a2edba5e4429"
                    ]
                },
                {
                    "command": [
                        "elim H1; auto.",
                        "VernacExtend",
                        "d50026b5dc31929f05ffbd310861b147378ba238"
                    ]
                },
                {
                    "command": [
                        "simpl_mult.",
                        "VernacExtend",
                        "8729ced2e11f022689ae4b1bd579a0858666ef7d"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_1_r.",
                        "VernacExtend",
                        "417376d82024400c741f6570f03b2437a77ee661"
                    ]
                },
                {
                    "command": [
                        "assert (H2:=Zmult_le_compat (' Qden b * ' Qden a) 1 (' Qden b * ' Qden a) ('p)).",
                        "VernacExtend",
                        "c71e0216d402f4e6983481b32bf0a6206f54e924"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_1_r in H2.",
                        "VernacExtend",
                        "2478ea0b94903cb971d089c5b56558f2de06d389"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "apply Zle_refl.",
                        "VernacExtend",
                        "68a57d6389c7dd3f2c16b824eb0734986d9ff207"
                    ]
                },
                {
                    "command": [
                        "compute; intro; discriminate.",
                        "VernacExtend",
                        "3df13ab91c05c185c539e49388a3dfb30b304b9e"
                    ]
                },
                {
                    "command": [
                        "compute; intro; discriminate.",
                        "VernacExtend",
                        "3df13ab91c05c185c539e49388a3dfb30b304b9e"
                    ]
                },
                {
                    "command": [
                        "elim H1; auto.",
                        "VernacExtend",
                        "d50026b5dc31929f05ffbd310861b147378ba238"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "two_three",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "apply (Build_itvl 2 3).",
                        "VernacExtend",
                        "8112ae060992d7cd97814f5a3de737cac274779e"
                    ]
                },
                {
                    "command": [
                        "unfold Qlt; simpl; auto with zarith.",
                        "VernacExtend",
                        "5c6377020ef948c7e200a7bf37dc1f2345e67c45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_two",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "apply (Build_itvl 1 2).",
                        "VernacExtend",
                        "db064de4a8f14f89bbfd9aaf0ac2f2bdb1767cb7"
                    ]
                },
                {
                    "command": [
                        "unfold Qlt; simpl; auto with zarith.",
                        "VernacExtend",
                        "5c6377020ef948c7e200a7bf37dc1f2345e67c45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqr2_cont",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "apply (Build_continuous one_two sqr2_h sqr2_alpha sqr2_w).",
                        "VernacExtend",
                        "9a2f7647c534d770c0cf877b9b762cb256afc7e3"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt2_approx",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "apply (Build_itvl 1 2); unfold Qlt; simpl; omega.",
                        "VernacExtend",
                        "82408f08c7fa6645c2946f5428ae155a38e9e97f"
                    ]
                },
                {
                    "command": [
                        "elim IHnat; intros a b ab.",
                        "VernacExtend",
                        "d5225cbec2d2f28f8ca4f69f60cfa117c434f649"
                    ]
                },
                {
                    "command": [
                        "set (c:= (Qred ((2#3)*a+(1#3)*b))).",
                        "VernacExtend",
                        "36185c54b337e10caabca65226d61330df8beb7c"
                    ]
                },
                {
                    "command": [
                        "set (d:= (Qred ((1#3)*a+(2#3)*b))).",
                        "VernacExtend",
                        "b93b9455991ab10b65ed0c14c14f4e6ac086ae4f"
                    ]
                },
                {
                    "command": [
                        "assert (cd : c<d).",
                        "VernacExtend",
                        "51d40483859dfeb3f487f0bcf4388efa7d39e6a2"
                    ]
                },
                {
                    "command": [
                        "unfold c, d.",
                        "VernacExtend",
                        "e401c4cd980be2391faf663e91d9ad35e8efdc36"
                    ]
                },
                {
                    "command": [
                        "rewrite Qlt_minus_iff in ab |- *.",
                        "VernacExtend",
                        "174d08abf1081fae1f3eca5d81880e9f7600de56"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qred_correct ((2#3)*a+(1#3)*b)).",
                        "VernacExtend",
                        "28f3e2644a882f0485008461b6a6677fe091b9d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Qred_correct ((1#3)*a+(2#3)*b)).",
                        "VernacExtend",
                        "a2983bc9768034ebde2b399e3a3a9e1ffa3d2632"
                    ]
                },
                {
                    "command": [
                        "step (0*(1#3) <= (b+-a)*(1#3)).",
                        "VernacExtend",
                        "03bb197d66d082d3e020cc64db9bcab1a7766861"
                    ]
                },
                {
                    "command": [
                        "apply Qmult_lt_compat_r; [compute|]; auto.",
                        "VernacExtend",
                        "b5ca2995954b2330ebee4a3b6a8a0de4e5a66c6e"
                    ]
                },
                {
                    "command": [
                        "set (fc := sqr2_apply (inject_Q c)).",
                        "VernacExtend",
                        "1f4b969649286dfb62f839a87ffa0c5d12929e4f"
                    ]
                },
                {
                    "command": [
                        "set (fd := sqr2_apply (inject_Q d)).",
                        "VernacExtend",
                        "b2add36dcc3de8a098df7dfe12d2ee1f45abc047"
                    ]
                },
                {
                    "command": [
                        "assert (fcfd : Rlt fc fd).",
                        "VernacExtend",
                        "ac8c7787df630975794f7c6310bec1ca63731b16"
                    ]
                },
                {
                    "command": [
                        "unfold fc, fd; apply sqr2_incr.",
                        "VernacExtend",
                        "c97cf8f2324fbf2071eace02185050556966b219"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "apply Qlt_Rlt; auto.",
                        "VernacExtend",
                        "2a5bcb3237bbdedeb3771a14f74a1012ff2270ea"
                    ]
                },
                {
                    "command": [
                        "case (Rcompare fc fd fcfd (inject_Q 0)); intros.",
                        "VernacExtend",
                        "769544f50e09a83f2ea6b55b2337f229348aa33f"
                    ]
                },
                {
                    "command": [
                        "apply (Build_itvl c b).",
                        "VernacExtend",
                        "87ff206e1f8c66484e7ace9d6ebcdfb0d96d5a36"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "apply (Build_itvl a d).",
                        "VernacExtend",
                        "4860b0ee41024b6cd9ef8b198bc3d9daa45cee3e"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sqrt2",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "apply (Build_R (fun n => lft (sqrt2_approx n)) (fun k => plus k k)).",
                        "VernacExtend",
                        "0f8f631966b11f49a716e8b97e227aa5bfc57088"
                    ]
                },
                {
                    "command": [
                        "fedup.",
                        "VernacExtend",
                        "1927c1a9d2fbcf7767c22c653b4e44b8dcfcd440"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}