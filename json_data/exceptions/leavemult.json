{
    "filename": "leavemult.v",
    "coq_project": "exceptions",
    "vernac_cmds": [
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Section Domain.",
            "VernacBeginSection",
            "d40cc7069bf0a4ece6964ff95be999b55d4bec03"
        ],
        [
            "Variable Dom : Set.",
            "VernacAssumption",
            "003e5bea76bc2a7ce9fe2c64f9690ce554e9cff9"
        ],
        [
            "Inductive tree : Set := | leaf : Dom -> tree | cons : tree -> tree -> tree.",
            "VernacInductive",
            "f86be8764d5fab9e428180702ea268b6607e65b0"
        ],
        [
            "End Domain.",
            "VernacEndSegment",
            "ffc2464ae7c550614f499a66a001d9e90da05a85"
        ],
        [
            "Definition nat_tree := tree nat.",
            "VernacDefinition",
            "99eb7f3a9159f4e76cd3accd94f6e196805303b2"
        ],
        [
            "Definition nat_cons := cons nat.",
            "VernacDefinition",
            "a710a97dd6c79bf90ab07b01ea34be714708b1ad"
        ],
        [
            "Definition nat_leaf := leaf nat.",
            "VernacDefinition",
            "9fa7327bf0976a82e4210a527d477f7a8838ef74"
        ],
        [
            "Fixpoint leavemult (t : nat_tree) : nat := match t return nat with | leaf n1 => n1 | cons t1 t2 => leavemult t1 * leavemult t2 end.",
            "VernacFixpoint",
            "d925dc3344b023a82ed5505b01a97aa1630b3d5c"
        ],
        [
            "Definition SPECIF (t : nat_tree) := {n : nat | n = leavemult t}.",
            "VernacDefinition",
            "ceca902fee82001cdec736fb0e776ffd98abb379"
        ],
        [
            "Theorem trivialalgo : forall t : nat_tree, SPECIF t.",
            "VernacStartTheoremProof",
            "bd970aa6da7c2881f570a9bd36930d3dc8799a52"
        ],
        [
            "intro t.",
            "VernacExtend",
            "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
        ],
        [
            "unfold SPECIF in |- *.",
            "VernacExtend",
            "68084a7de1f74c829b511fa9e472d0a8b5b8c91c"
        ],
        [
            "apply exist with (leavemult t); auto.",
            "VernacExtend",
            "5a49bf88b6d5eb99393bc522bffee954103c5e1f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint Has_Zero (t : nat_tree) : Prop := match t return Prop with | leaf n1 => n1 = 0 | cons t1 t2 => Has_Zero t1 \\/ Has_Zero t2 end.",
            "VernacFixpoint",
            "afac072de16e51b5f91e5b8ecd6db426e3426fed"
        ],
        [
            "Lemma zero_occ : forall t : nat_tree, Has_Zero t -> leavemult t = 0.",
            "VernacStartTheoremProof",
            "009bbb2dd9ebb7aa5556bcfdbce6a3df843453f8"
        ],
        [
            "simple induction t.",
            "VernacExtend",
            "ed99ea08a11cb71b621c4562818ea87e52158a3d"
        ],
        [
            "simple induction d; simpl in |- *; auto.",
            "VernacExtend",
            "13cf9e6bfe1e30a81f482af72b3b6321c0b0656c"
        ],
        [
            "intros t1 H1 t2 H2 H.",
            "VernacExtend",
            "7d57e1c734b026974576940943098a5e5a965719"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim H; intro H0.",
            "VernacExtend",
            "620bfbd3736f09b844efadd3823724a3c0fce6a8"
        ],
        [
            "cut (leavemult t1 = 0).",
            "VernacExtend",
            "18a01c66b1b59b779bea7d2495dfbac8013ca207"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "rewrite H3; simpl in |- *; auto.",
            "VernacExtend",
            "81020eb7a909ad01c6175068cbda124bc79f7b23"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "cut (leavemult t2 = 0).",
            "VernacExtend",
            "c5f855af04e7ae6c1035d801df543d6baf2f92f5"
        ],
        [
            "intro H3.",
            "VernacExtend",
            "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
        ],
        [
            "rewrite H3; simpl in |- *.",
            "VernacExtend",
            "62c32e5aaac17ae288647d177e514b6acac0afb1"
        ],
        [
            "symmetry in |- *; apply mult_n_O.",
            "VernacExtend",
            "9414c1de2610c0a7bfdcc91044abe8e9060354bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let subtree_ersatz (t' t : nat_tree) := Has_Zero t' -> Has_Zero t.",
            "VernacDefinition",
            "a14efd8480d786ab0a1c3379005460363bbf4879"
        ],
        [
            "Let kappa (t t' : nat_tree) := forall n' : nat, n' = leavemult t' -> SPECIF t.",
            "VernacDefinition",
            "7f0b6c01fae664e20862bad55f072f6eaaa0e092"
        ],
        [
            "Theorem cpsalgo : forall t : nat_tree, SPECIF t.",
            "VernacStartTheoremProof",
            "a277287a809c97919b0249dc58f26595bb55277c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (Has_Zero t -> SPECIF t).",
            "VernacExtend",
            "76ae6f3f413d62703ed639c9bb290192931bca5c"
        ],
        [
            "intro ESCAPE_O.",
            "VernacExtend",
            "85d527b1c689673a602b31fa83a4bf3b48a7bb56"
        ],
        [
            "2: intro.",
            "VernacExtend",
            "42cbbbabefb39285a3714b5bb79658272513daac"
        ],
        [
            "2: unfold SPECIF in |- *.",
            "VernacExtend",
            "40b4b3726ecffc8c3cd4f82b74d8df869e0cd55b"
        ],
        [
            "2: apply exist with 0.",
            "VernacExtend",
            "cd6f59bd1092d6a6e59f2b1ea0028cdccb3bb01c"
        ],
        [
            "2: symmetry in |- *.",
            "VernacExtend",
            "84add881d9b6cf0d4766859c0bf9def3d78ae623"
        ],
        [
            "2: apply zero_occ.",
            "VernacExtend",
            "737631bd3ed29b0f1414b6a87a9e37256f6d634a"
        ],
        [
            "2: auto.",
            "VernacExtend",
            "39c1ddb0360c4672841c6c9a8ce0db8d5b584563"
        ],
        [
            "Hint Unfold subtree_ersatz.",
            "VernacHints",
            "e4c578c333379cc61ac14a7c79a9262dbcdb183d"
        ],
        [
            "Hint Unfold kappa.",
            "VernacHints",
            "0aac3d0a60044c2fb5ddb610a86889d19498479f"
        ],
        [
            "cut (forall t' : nat_tree, subtree_ersatz t' t -> kappa t t' -> SPECIF t).",
            "VernacExtend",
            "be7e6bac6b7b0b233e03d90a60dfafc89fb93991"
        ],
        [
            "Hint Unfold SPECIF.",
            "VernacHints",
            "8e0e1a1f3e614ec294ed117c0e33e2d90270e0a2"
        ],
        [
            "intro AUX.",
            "VernacExtend",
            "68b40309c2724440a161042729ed5a924e552fd3"
        ],
        [
            "apply AUX with t.",
            "VernacExtend",
            "4e75d40542714d87264cc2198010c9b862d6a28f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold kappa in |- *.",
            "VernacExtend",
            "cf3b988619846c6156c8b41229bc9b81400592c4"
        ],
        [
            "intros n H.",
            "VernacExtend",
            "348ce37d2f619b733a523bd998a06fecedcf3fc4"
        ],
        [
            "unfold SPECIF in |- *; apply exist with n; auto.",
            "VernacExtend",
            "fd8b5235b01448219a7fcf385f1ced98f175fb84"
        ],
        [
            "simple induction t'.",
            "VernacExtend",
            "270426bd0a2a7d51ab463f4507988d998281be92"
        ],
        [
            "simple induction d.",
            "VernacExtend",
            "84dec7a169d93a11fb6ad980bb57884f11258229"
        ],
        [
            "intros H H0.",
            "VernacExtend",
            "90bdfc30bf7350754c3a8a5cfe1259219564aa47"
        ],
        [
            "apply ESCAPE_O.",
            "VernacExtend",
            "355bcf64a62b33c4b62c58dc78bd0c7d69df703d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros y H1 H2 H3.",
            "VernacExtend",
            "add1ceff348565973903e4e44b360995928bb83a"
        ],
        [
            "unfold kappa in H3.",
            "VernacExtend",
            "cb56060d84036d4574a3b9067a27e5dc85225ffb"
        ],
        [
            "apply H3 with (S y).",
            "VernacExtend",
            "37a8124d9c50edf1517701250b6eaf4a390b55dd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro t1.",
            "VernacExtend",
            "61b94decadc571096fcc1845a3a05f985637c893"
        ],
        [
            "intro ind1.",
            "VernacExtend",
            "a9e9675cbb5c72bff788e1a1c02ac96111f86238"
        ],
        [
            "intro t2.",
            "VernacExtend",
            "7b2015c1c01d87ae6c796b9556fffe7473d3c0ae"
        ],
        [
            "intro ind2.",
            "VernacExtend",
            "e772dd539e76af3e0175470e0e0a140e7849d548"
        ],
        [
            "intros H H0.",
            "VernacExtend",
            "90bdfc30bf7350754c3a8a5cfe1259219564aa47"
        ],
        [
            "apply ind2.",
            "VernacExtend",
            "bfe19a3bd17ba2cf9de70282130c2e6e223e788b"
        ],
        [
            "intro H1.",
            "VernacExtend",
            "d2fcc9516b33dbca4f189b9ddbee105efc1235d1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Has_Zero in |- *.",
            "VernacExtend",
            "67a026040c078d6a6ecf6840ae04f1d0c51a3c62"
        ],
        [
            "unfold Has_Zero in H1.",
            "VernacExtend",
            "8681955a3b4a964b4ff8bae714f8d4f5d99f11fe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold kappa in |- *.",
            "VernacExtend",
            "cf3b988619846c6156c8b41229bc9b81400592c4"
        ],
        [
            "unfold kappa in H0.",
            "VernacExtend",
            "e407a845033913d32ce55190ad935fdd3b21b4ed"
        ],
        [
            "intros n2 eg2.",
            "VernacExtend",
            "07d7034462171733777fee16d601d32bf434db33"
        ],
        [
            "apply ind1.",
            "VernacExtend",
            "819dac537b1bbcbc324f789ddfb6a048af2e8a2d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "unfold kappa in |- *.",
            "VernacExtend",
            "cf3b988619846c6156c8b41229bc9b81400592c4"
        ],
        [
            "intros n1 eg1.",
            "VernacExtend",
            "de316838a72af15a9b68268ca557b8e5d4a71dd1"
        ],
        [
            "apply H0 with (n1 * n2).",
            "VernacExtend",
            "aeea8649d89c92a86ee099850ffe8b4fb3001ddb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite eg2; rewrite eg1.",
            "VernacExtend",
            "7192c31674c3cb6a19f40922e99c419b0ceb1831"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Require Extraction.",
            "VernacRequire",
            "a069c64e62ed08461c719459a8307243d23db2df"
        ],
        [
            "Extraction \"leavemult.ml\" SPECIF kappa trivialalgo cpsalgo.",
            "VernacExtend",
            "33bcaa40e5fa04c36fce9f1d116ebd390a957b9d"
        ]
    ],
    "proofs": [
        {
            "name": "trivialalgo",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intro t.",
                        "VernacExtend",
                        "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
                    ]
                },
                {
                    "command": [
                        "unfold SPECIF in |- *.",
                        "VernacExtend",
                        "68084a7de1f74c829b511fa9e472d0a8b5b8c91c"
                    ]
                },
                {
                    "command": [
                        "apply exist with (leavemult t); auto.",
                        "VernacExtend",
                        "5a49bf88b6d5eb99393bc522bffee954103c5e1f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "zero_occ",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "simple induction t.",
                        "VernacExtend",
                        "ed99ea08a11cb71b621c4562818ea87e52158a3d"
                    ]
                },
                {
                    "command": [
                        "simple induction d; simpl in |- *; auto.",
                        "VernacExtend",
                        "13cf9e6bfe1e30a81f482af72b3b6321c0b0656c"
                    ]
                },
                {
                    "command": [
                        "intros t1 H1 t2 H2 H.",
                        "VernacExtend",
                        "7d57e1c734b026974576940943098a5e5a965719"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim H; intro H0.",
                        "VernacExtend",
                        "620bfbd3736f09b844efadd3823724a3c0fce6a8"
                    ]
                },
                {
                    "command": [
                        "cut (leavemult t1 = 0).",
                        "VernacExtend",
                        "18a01c66b1b59b779bea7d2495dfbac8013ca207"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; simpl in |- *; auto.",
                        "VernacExtend",
                        "81020eb7a909ad01c6175068cbda124bc79f7b23"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "cut (leavemult t2 = 0).",
                        "VernacExtend",
                        "c5f855af04e7ae6c1035d801df543d6baf2f92f5"
                    ]
                },
                {
                    "command": [
                        "intro H3.",
                        "VernacExtend",
                        "c6ea07328dd3b3e09514a6b250aa3ceeb1e62693"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; simpl in |- *.",
                        "VernacExtend",
                        "62c32e5aaac17ae288647d177e514b6acac0afb1"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *; apply mult_n_O.",
                        "VernacExtend",
                        "9414c1de2610c0a7bfdcc91044abe8e9060354bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}