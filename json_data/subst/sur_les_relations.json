{
    "filename": "sur_les_relations.v",
    "coq_project": "subst",
    "vernac_cmds": [
        [
            "Section Rels.",
            "VernacBeginSection",
            "50792543986f9171a69170d86aea4a472cbf25e3"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Inductive explicit_star (R : A -> A -> Prop) : A -> A -> Prop := | star_refl : forall x : A, explicit_star R x x | star_trans1 : forall x y z : A, R x y -> explicit_star R y z -> explicit_star R x z.",
            "VernacInductive",
            "379a0b0982289c3758dad9e3e5d93a4ab2351835"
        ],
        [
            "Inductive explicit_comp_rel (R1 R2 : A -> A -> Prop) : A -> A -> Prop := comp_2rel : forall x y z : A, R1 x y -> R2 y z -> explicit_comp_rel R1 R2 x z.",
            "VernacInductive",
            "b7892b8023fb79a7c7e2b4d66bc56ad0afb1bb9f"
        ],
        [
            "Inductive explicit_rel_plus (R : A -> A -> Prop) : A -> A -> Prop := | relplus_1step : forall x y : A, R x y -> explicit_rel_plus R x y | relplus_trans1 : forall x y z : A, R x y -> explicit_rel_plus R y z -> explicit_rel_plus R x z.",
            "VernacInductive",
            "29ef79c66b8e6f08bac410acabd920d6c555e07e"
        ],
        [
            "End Rels.",
            "VernacEndSegment",
            "d49aa6becc1ac66b5caad5badc41df8c8bd5a267"
        ],
        [
            "Hint Resolve star_refl.",
            "VernacHints",
            "782d5b45884f221933f3c649a45d2241ff2db863"
        ],
        [
            "Hint Resolve relplus_1step.",
            "VernacHints",
            "0dee9935d1d6c6969545bf61753ca79ed058e13a"
        ],
        [
            "Notation star := (explicit_star _) (only parsing).",
            "VernacSyntacticDefinition",
            "d4277fac182ed70d578582a55c54de2780e4beda"
        ],
        [
            "Notation comp_rel := (explicit_comp_rel _) (only parsing).",
            "VernacSyntacticDefinition",
            "03e1b36c22f4e459197a83b35cc2c7d6406d35f8"
        ],
        [
            "Notation rel_plus := (explicit_rel_plus _) (only parsing).",
            "VernacSyntacticDefinition",
            "f4873e4b0a082d8b4a5bb56852fe41f853a6cd45"
        ],
        [
            "Section rels_prop.",
            "VernacBeginSection",
            "a0e139cf53327ef36e80018b2adb99e886e6a908"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable R : A -> A -> Prop.",
            "VernacAssumption",
            "0d2b4236b120d599ff44dbf895c951c0abab01e8"
        ],
        [
            "Definition confluence_en (x : A) := forall y z : A, explicit_star _ R x y -> explicit_star _ R x z -> exists u : A, explicit_star _ R y u /\\ explicit_star _ R z u.",
            "VernacDefinition",
            "13f1aa5679278a7879aef1244f3e880ee48ca869"
        ],
        [
            "Definition explicit_confluence := forall x : A, confluence_en x.",
            "VernacDefinition",
            "41af94c2c0291b959b1642259551174a7754f0fc"
        ],
        [
            "Definition local_confluence_en (x : A) := forall y z : A, R x y -> R x z -> exists u : A, explicit_star _ R y u /\\ explicit_star _ R z u.",
            "VernacDefinition",
            "ae404fd928f811574633adf948af58ada51fbac3"
        ],
        [
            "Definition explicit_local_confluence := forall x : A, local_confluence_en x.",
            "VernacDefinition",
            "525f3f514aa785f64bd9c7e5d55c6dff34746c32"
        ],
        [
            "Definition strong_confluence_en (x : A) := forall y z : A, R x y -> R x z -> exists u : A, R y u /\\ R z u.",
            "VernacDefinition",
            "c49c8ec9b8adafb054618bb52236dc5d836232a8"
        ],
        [
            "Definition explicit_strong_confluence := forall x : A, strong_confluence_en x.",
            "VernacDefinition",
            "29948abec0d31389f1bb50ddeb33b9711d1a99cf"
        ],
        [
            "End rels_prop.",
            "VernacEndSegment",
            "32a8f13cd32bab59456259365d11d1b82a9b8ef6"
        ],
        [
            "Notation confluence := (explicit_confluence _) (only parsing).",
            "VernacSyntacticDefinition",
            "37f68959c62f42e107c5f29f41cbab7876de2e60"
        ],
        [
            "Notation local_confluence := (explicit_local_confluence _) (only parsing).",
            "VernacSyntacticDefinition",
            "b472a4f6a8e6b09363b4df5d4747435b3524a3db"
        ],
        [
            "Notation strong_confluence := (explicit_strong_confluence _) (only parsing).",
            "VernacSyntacticDefinition",
            "6d2d7a0af8bde214de2aa6032206487e2d2d1f09"
        ],
        [
            "Definition explicit_inclus (A : Set) (R1 R2 : A -> A -> Prop) := forall x y : A, R1 x y -> R2 x y.",
            "VernacDefinition",
            "a478464b4a356f928a5777f9eee0b58756c997d5"
        ],
        [
            "Notation inclus := (explicit_inclus _) (only parsing).",
            "VernacSyntacticDefinition",
            "8229f3a675aae4d1243a0f6366d60671e3e2d860"
        ],
        [
            "Section relations_noetherian.",
            "VernacBeginSection",
            "4851a68b3be8d06d5b9967c956a17239f0ecbb3f"
        ],
        [
            "Variable U : Set.",
            "VernacAssumption",
            "0de3c9525ad8a0559325650e6d0e931685a038ea"
        ],
        [
            "Variable R : U -> U -> Prop.",
            "VernacAssumption",
            "5e332796069f807f14b972e8a6457b01ed9e2e0e"
        ],
        [
            "Definition a_set := U -> Prop.",
            "VernacDefinition",
            "f4173f9565d889ff8cb218a78992498d9df12139"
        ],
        [
            "Definition sub (A B : a_set) := forall x : U, A x -> B x.",
            "VernacDefinition",
            "85f1a9b284627432d1655d5ae331dea349d812ec"
        ],
        [
            "Definition universal (A : a_set) := forall x : U, A x.",
            "VernacDefinition",
            "6eab7ecb32e723cc4ad0f2f315561a0cc2f5c48c"
        ],
        [
            "Definition adjoint (A : a_set) : a_set := fun x : U => sub (R x) A.",
            "VernacDefinition",
            "95f586853465d28aba9db785376c580fad6045e4"
        ],
        [
            "Definition hereditary (A : a_set) := sub (adjoint A) A.",
            "VernacDefinition",
            "3de8abb6c55a01f3338a880fc955cb8f665a17d1"
        ],
        [
            "Definition explicit_noetherian := forall A : a_set, hereditary A -> universal A.",
            "VernacDefinition",
            "0f38c58ef367cb97d2bab763a3bff0163aea0b7e"
        ],
        [
            "End relations_noetherian.",
            "VernacEndSegment",
            "c7342d95ec049a0154d3593723eeb015545e01b4"
        ],
        [
            "Notation noetherian := (explicit_noetherian _) (only parsing).",
            "VernacSyntacticDefinition",
            "4ea88742819c8ef148bc3fe8ee7d25bf2e3fe0fd"
        ],
        [
            "Goal forall (A : Set) (P Q : A -> Prop), (exists u : A, P u /\\ Q u) -> exists u : A, Q u /\\ P u.",
            "VernacDefinition",
            "4090f014576e97fc864d487484ec900d1f66b9e2"
        ],
        [
            "simple induction 1; intros u1 H1.",
            "VernacExtend",
            "882d74dafe490bac3f3ec05a0f5803d184f124b1"
        ],
        [
            "elim H1; intros H2 H3.",
            "VernacExtend",
            "90039f7e856c6f8d7c687de7842dad62810356dc"
        ],
        [
            "exists u1; split; assumption.",
            "VernacExtend",
            "c5b4650bc532c2666342fabb94e3a059bdef4276"
        ],
        [
            "Save Ex_PQ.",
            "VernacEndProof",
            "74006d6aac3030ef038dc5b465f2bc03ccf38366"
        ],
        [
            "Hint Resolve Ex_PQ.",
            "VernacHints",
            "39166ee7eb984ec79182b4215c91abb9806c7945"
        ],
        [
            "Lemma star_trans : forall (A : Set) (R : A -> A -> Prop) (x y z : A), explicit_star _ R x y -> explicit_star _ R y z -> explicit_star _ R x z.",
            "VernacStartTheoremProof",
            "5d1871387c0a0f07cab5a1ae41d5b030b0152b90"
        ],
        [
            "intros A R x y z H; elim H.",
            "VernacExtend",
            "5c62c4da1c80be30ba338dda21484e9fad3d7a76"
        ],
        [
            "intros x0 H1; assumption.",
            "VernacExtend",
            "2c5ce0a222c991358d247f834b2f90f0e43357dc"
        ],
        [
            "intros x0 y0 z0 H1 H2 H3 H4; apply star_trans1 with y0.",
            "VernacExtend",
            "5dd673c74531116ee2e28d2a425da98b90d1a68e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exact (H3 H4).",
            "VernacExtend",
            "684cea50448ed4b7f3fb27eeec19782bc0b52c88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop) (x y : A), R x y -> explicit_star _ R x y.",
            "VernacDefinition",
            "e55ca0f62d407b663ac29b4803d2cff0488dfe08"
        ],
        [
            "intros; apply star_trans1 with y.",
            "VernacExtend",
            "1c04e40083b28c82569bbba16191a0b37ac44abd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply star_refl.",
            "VernacExtend",
            "8488e5b2807fef16c5056ba3f303e3256adf3a28"
        ],
        [
            "Save star_step1.",
            "VernacEndProof",
            "cc3e6637fde17d3955b8a3b491ab946c5fa9a213"
        ],
        [
            "Hint Resolve star_step1.",
            "VernacHints",
            "a90eafde9651dbaab83dae194ae191521693dce0"
        ],
        [
            "Goal forall (A : Set) (R1 R2 : A -> A -> Prop) (M N : A), explicit_comp_rel _ R1 R2 M N -> exists u : A, R1 M u /\\ R2 u N.",
            "VernacDefinition",
            "cbeabd4b74b2e2af88905128761d4b4851c4276e"
        ],
        [
            "intros A R1 R2 M N H; elim H.",
            "VernacExtend",
            "58dcdca09b800919db0aa7852451bd30132e1fe8"
        ],
        [
            "intros x y z H1 H2; exists y; split; assumption.",
            "VernacExtend",
            "b29138f5cca1496a07231af70707e33806ab7a3c"
        ],
        [
            "Save comp_case.",
            "VernacEndProof",
            "46eaa784f137456b220acc96fa97bba1ad65ffb6"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop) (x y : A), explicit_comp_rel _ R (explicit_star _ R) x y -> explicit_rel_plus _ R x y.",
            "VernacDefinition",
            "1335d953b916efb97aae8f19ccfba74bc4c078a7"
        ],
        [
            "intros A R x y H; elim H.",
            "VernacExtend",
            "a166d9aa2fbebd9667f3fe09f55f9f4c7c9dad14"
        ],
        [
            "intros a b c H1 H2; generalize H1; generalize a.",
            "VernacExtend",
            "a3bdc797a54429d7039fe698a820e3881a8be27a"
        ],
        [
            "elim H2.",
            "VernacExtend",
            "b5361db8e79787430270ea77170dc29bbb9de7b4"
        ],
        [
            "intros; apply relplus_1step; assumption.",
            "VernacExtend",
            "82bbf80769b48c744a47150066e5666fb8ff2bb6"
        ],
        [
            "intros x0 y0 z H3 H4 H5 a0 H6; apply relplus_trans1 with x0.",
            "VernacExtend",
            "7f709e7acfe88cd80adeda2be9aa6497c29456fd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H5; assumption.",
            "VernacExtend",
            "8f860832491462a0a9db7bd7c081da8cdc789cad"
        ],
        [
            "Save comp_relplus.",
            "VernacEndProof",
            "397c9cb452b25cf2b1e0eb6c903ae85431353c51"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop) (M N : A), explicit_star _ R M N -> M = N \\/ (exists u : A, R M u /\\ explicit_star _ R u N).",
            "VernacDefinition",
            "d78d0b2c3d7b77339b7cce9de6a14e7c7c547fce"
        ],
        [
            "intros A R M N H; elim H.",
            "VernacExtend",
            "ae2ef954806939a048b3da1ff86db8fccd07daf3"
        ],
        [
            "intros x; left; trivial.",
            "VernacExtend",
            "53b06bedc85bfc0f6e41ddc092daa921c143c5b9"
        ],
        [
            "intros x y z H1 H2 H3; right; exists y; split; trivial.",
            "VernacExtend",
            "55411d24285610251c8b354b6f99937bc880f447"
        ],
        [
            "Save star_case.",
            "VernacEndProof",
            "393af3f1f0fb9db4664628e8847924ff069f8287"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop) (x y z : A), explicit_rel_plus _ R x y -> explicit_rel_plus _ R y z -> explicit_rel_plus _ R x z.",
            "VernacDefinition",
            "21c1f3b9b6b53f2ef53b9475ae554225a3b5af1e"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "intros; apply relplus_trans1 with y0; trivial.",
            "VernacExtend",
            "0ba03c64f4c57e4976592e3ac70cd3f0ecd23c65"
        ],
        [
            "intros; apply relplus_trans1 with y0; auto.",
            "VernacExtend",
            "ec2ca94af551b46f6bf9eac55489b9835dd428ca"
        ],
        [
            "Save Rplus_transitive.",
            "VernacEndProof",
            "fd3912ee15f2297d9ee71175d16d421237104b6e"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop) (x y : A), explicit_rel_plus _ R x y -> explicit_star _ R x y.",
            "VernacDefinition",
            "d1eb2320e0065dab9e4a8ed2fc965827aecfdb2e"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply star_trans1 with y0; auto.",
            "VernacExtend",
            "d7463cd077c7497998d42648912f63d756648181"
        ],
        [
            "Save Rplus_Rstar.",
            "VernacEndProof",
            "38f4f356637361897ce379c0fab109d078f91cd7"
        ],
        [
            "Hint Resolve Rplus_Rstar.",
            "VernacHints",
            "156c247fceadf6d4ee2917217adc26845c5f1052"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop) (x y z : A), explicit_star _ R x y -> explicit_rel_plus _ R y z -> exists u : A, R x u /\\ explicit_star _ R u z.",
            "VernacDefinition",
            "e4fcbd5d79848d4b468a9c6c5980fd18ed46e102"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "elim H0; intros.",
            "VernacExtend",
            "6b83f392a470a8cdaa118e532bc445a009dec854"
        ],
        [
            "exists y0; auto.",
            "VernacExtend",
            "fdd161c9b8d36c397f6bb98bf8f446027e092ee4"
        ],
        [
            "exists y0; auto.",
            "VernacExtend",
            "fdd161c9b8d36c397f6bb98bf8f446027e092ee4"
        ],
        [
            "exists y0; split; trivial.",
            "VernacExtend",
            "a119aa12dc69d68c3e9bde02b2f1e04f8fab0cd5"
        ],
        [
            "apply star_trans with z0; auto.",
            "VernacExtend",
            "ade858dba0bf8be84700d7c9bece175c37bd1600"
        ],
        [
            "Save Rstar_Rplus_R.",
            "VernacEndProof",
            "1be9c3c22a3f7fa20337be0eb38761de79a69276"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop), explicit_noetherian _ R -> forall A1 : a_set A, hereditary A (explicit_rel_plus _ R) A1 -> universal A (adjoint A (explicit_star _ R) A1).",
            "VernacDefinition",
            "80b07a7d76765a96e4da79a8f01f038481f247e7"
        ],
        [
            "unfold explicit_noetherian in |- *; unfold hereditary in |- *; unfold universal in |- *; unfold sub in |- *; intros A R N A1 H x.",
            "VernacExtend",
            "7a4e8fea85ded338af00b91eb237c9b64d2183a0"
        ],
        [
            "apply (N (adjoint A (explicit_star _ R) A1)).",
            "VernacExtend",
            "908d6eedf66ed7891d74e7de1c9e235245be3b52"
        ],
        [
            "unfold adjoint in |- *; unfold sub in |- *; intros.",
            "VernacExtend",
            "33cf28c9e79a3df9283bdf520fb1f2800854c8a0"
        ],
        [
            "apply H; unfold adjoint in |- *; unfold sub in |- *; intros.",
            "VernacExtend",
            "e11b4f206449623136f9de3fd0278543f4cefcfc"
        ],
        [
            "elim Rstar_Rplus_R with A R x0 x1 x2; trivial.",
            "VernacExtend",
            "726e1053db7e50f6b77b870703aae27c1162ba89"
        ],
        [
            "intro z; simple induction 1; intros C1 C2; apply H0 with z; trivial.",
            "VernacExtend",
            "bb2a95c0a662e1ea5f6068b5e7d8efeb98d2bc4e"
        ],
        [
            "Save noetherian_course_of_values.",
            "VernacEndProof",
            "65775d465b309d58052717492c7cc6899baabdf3"
        ],
        [
            "Lemma plus_preserves_noetherian : forall (A : Set) (R : A -> A -> Prop), explicit_noetherian _ R -> explicit_noetherian _ (explicit_rel_plus _ R).",
            "VernacStartTheoremProof",
            "ee7295b29e08bcc3f285a3770d2c820d751b53b6"
        ],
        [
            "generalize noetherian_course_of_values.",
            "VernacExtend",
            "fa79dcabcfd34c11c97863484c05584387a9b147"
        ],
        [
            "unfold adjoint in |- *; unfold universal in |- *; unfold sub in |- *; intros.",
            "VernacExtend",
            "911c46e8662a94de5d2f64c6d096349b07ab9d82"
        ],
        [
            "unfold explicit_noetherian in |- *; unfold universal in |- *; unfold sub in |- *; intros.",
            "VernacExtend",
            "b1195972c0c9cd8e5d41c195f5232d9455613e75"
        ],
        [
            "apply (H A R H0 A0 H1 x x).",
            "VernacExtend",
            "177ed3902d196edde12db65c0a6017d45be5a407"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma noetherian_induction1 : forall (A : Set) (R : A -> A -> Prop), explicit_noetherian _ R -> forall (x : A) (P : A -> Prop), (forall y : A, (forall z : A, R y z -> P z) -> P y) -> P x.",
            "VernacStartTheoremProof",
            "8a83d91f788df04d55a2c349f3a9784c1b7b2a93"
        ],
        [
            "unfold explicit_noetherian in |- *; unfold universal in |- *; unfold hereditary in |- *; unfold adjoint in |- *; unfold sub in |- *; unfold a_set in |- *; intros.",
            "VernacExtend",
            "c4f064d6007461a016ac492f05b87a9bc7b0c202"
        ],
        [
            "pattern x in |- *; apply H; exact H0.",
            "VernacExtend",
            "2466fdf78e910c21b4b311509ffee5ca1ac2bcd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma noetherian_induction : forall (A : Set) (R : A -> A -> Prop), explicit_noetherian _ R -> forall (x : A) (P : A -> Prop), (forall y : A, (forall z : A, explicit_rel_plus _ R y z -> P z) -> P y) -> P x.",
            "VernacStartTheoremProof",
            "1026648c5cb3471e7889caf08df143a3dca3713a"
        ],
        [
            "intros; pattern x in |- *; apply noetherian_induction1 with A (explicit_rel_plus _ R).",
            "VernacExtend",
            "9bff948f60d974b2e7b32773c585ca7115152935"
        ],
        [
            "apply plus_preserves_noetherian; assumption.",
            "VernacExtend",
            "c84d82d3b399e6d391d9df2c793c38e8669f2565"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma noether_inclus : forall (A : Set) (R R' : A -> A -> Prop), explicit_noetherian _ R -> (forall x y : A, R' x y -> R x y) -> explicit_noetherian _ R'.",
            "VernacStartTheoremProof",
            "c9ae3fadc6f8e8851fee260010e442a722b2951e"
        ],
        [
            "intros; unfold explicit_noetherian in |- *; unfold universal in |- *; unfold hereditary in |- *; unfold adjoint in |- *; unfold sub in |- *; unfold a_set in |- *; intros.",
            "VernacExtend",
            "30eb4b913aae77df636ce9acc569a488370f1f90"
        ],
        [
            "pattern x in |- *; apply (noetherian_induction1 A R H); auto.",
            "VernacExtend",
            "fd6959eef43a96a1d632be52b12a5ccab4eadc78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall (A : Set) (R S : A -> A -> Prop), explicit_inclus _ R (explicit_star _ S) -> explicit_inclus _ (explicit_star _ R) (explicit_star _ S).",
            "VernacDefinition",
            "287ea9ec4dbf40d4199238182463662cedb0157b"
        ],
        [
            "intros A R S H; red in |- *; simple induction 1.",
            "VernacExtend",
            "3cd27108d7634453a4eb2942ca6cabf7da7e7d93"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x0 y0 z H1 H2 H3; apply star_trans with y0; auto.",
            "VernacExtend",
            "885f01de4046661f4214d6e2796f5471cab3598d"
        ],
        [
            "Save inclus_star.",
            "VernacEndProof",
            "55dbffa78a832c3c536e6402946e85fd50dbf35f"
        ],
        [
            "Goal forall (A : Set) (R S : A -> A -> Prop), explicit_inclus _ R S -> explicit_inclus _ (explicit_star _ R) (explicit_star _ S).",
            "VernacDefinition",
            "73f99c1ff7977d68b74450adb3bdedef70ead0a1"
        ],
        [
            "unfold explicit_inclus in |- *; simple induction 2.",
            "VernacExtend",
            "8458e99aee9296576d40baba9019301a1356cb76"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x0 y0 z H1 H2 H3; apply star_trans1 with y0.",
            "VernacExtend",
            "8384c6784551bb9d6fbc121b7c56e2f9d68e0d63"
        ],
        [
            "apply (H x0 y0 H1).",
            "VernacExtend",
            "313e533314e339c76b97d26b9694561cb1cacbf6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Save inclus_reg_star.",
            "VernacEndProof",
            "82412287371e874ef6202b933ddc7310a319d7d9"
        ],
        [
            "Hint Resolve inclus_reg_star.",
            "VernacHints",
            "92464183d671670fdaf609c23b640f4ca990eea2"
        ],
        [
            "Goal forall (A : Set) (R1 R2 S : A -> A -> Prop), explicit_inclus _ R1 S -> explicit_inclus _ R2 S -> (forall x y z : A, S x y -> S y z -> S x z) -> explicit_inclus _ (explicit_comp_rel _ R1 R2) S.",
            "VernacDefinition",
            "96cbdc970466469ba1f65b1cb5c7ad6eb1527555"
        ],
        [
            "intros A R1 R2 S H H0 H1; red in |- *; simple induction 1.",
            "VernacExtend",
            "ee47b75a0fd09b9118c08c20d8a6fea1590f4ceb"
        ],
        [
            "intros x0 y0 z H3 H4; apply H1 with y0; auto.",
            "VernacExtend",
            "913d831a0cb6cfc5ed0b89d8ef9dfd4f3bae4517"
        ],
        [
            "Save inclus_comp.",
            "VernacEndProof",
            "2443cb095de38bb4776d868188d3890ca1c1b041"
        ],
        [
            "Hint Resolve inclus_comp.",
            "VernacHints",
            "c233410f29ae3461830d473d00701a8be284504d"
        ],
        [
            "Goal forall (A : Set) (R : A -> A -> Prop), explicit_strong_confluence _ R -> explicit_confluence _ R.",
            "VernacDefinition",
            "88573ced28b593e83e0bc9fcf7e9819e0a713d01"
        ],
        [
            "intros A R H; red in |- *; red in |- *.",
            "VernacExtend",
            "a5e98a6344814ad27f58190a527416678998d82b"
        ],
        [
            "intros x y z H1; generalize z; elim H1.",
            "VernacExtend",
            "8797d750a1c6e7fc358d17fff2ba83f07467f31b"
        ],
        [
            "intros x0 z0 H2; exists z0; split; auto.",
            "VernacExtend",
            "af8426d22f34ed0b6bc2e088d540a7942c1221bd"
        ],
        [
            "intros x0 y0 y1 H2 H3 H4 z0 H5.",
            "VernacExtend",
            "7dd6282d8d6a9112116e34682102c4f03b2f35ff"
        ],
        [
            "cut (exists u : A, explicit_star _ R y0 u /\\ R z0 u).",
            "VernacExtend",
            "a6ad482941e5bf6de9f5fb71d04fcc5cbcb05a99"
        ],
        [
            "intro H6; elim H6; intros z1 H7; elim H7; intros H8 H9.",
            "VernacExtend",
            "27cbe37158e20d94626e22b183851821d82460b4"
        ],
        [
            "elim (H4 z1 H8); intros u H10; elim H10; intros H11 H12.",
            "VernacExtend",
            "620c733c8a0148b26c7ba95a7bbb1adbdecf6ccd"
        ],
        [
            "exists u; split.",
            "VernacExtend",
            "d9616d4c57330d01a2fcccffa9992ea6c49edf20"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply star_trans1 with z1; assumption.",
            "VernacExtend",
            "a96ccd46954a92ed3f41b566ce367beafaf683e2"
        ],
        [
            "generalize H2; generalize y0; elim H5.",
            "VernacExtend",
            "4590b0efd3fb0291045abf50f0c840579ba959ca"
        ],
        [
            "intros x1 y2 H6; exists y2; split; auto.",
            "VernacExtend",
            "bb04cc2e6e646fd3b5e3b0b2851fe6567fdfbd02"
        ],
        [
            "intros x1 y2 z1 H6 H7 H8 y3 H9; elim (H x1 y3 y2).",
            "VernacExtend",
            "3c553d27913866d98cf650d49b83cae754cd01cc"
        ],
        [
            "intros x2 H10; elim H10; intros H11 H12.",
            "VernacExtend",
            "e36280b2398e30ca9694618473f9c8cc3d0cf896"
        ],
        [
            "elim (H8 x2 H12); intros u H13; elim H13; intros H14 H15.",
            "VernacExtend",
            "83aa8a248ff834614e9a40f9d38440515761e384"
        ],
        [
            "exists u; split; [ apply star_trans1 with x2; assumption | assumption ]; trivial.",
            "VernacExtend",
            "575530622adf493bab6775299002b2863f5f22ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Save strong_conf_conf.",
            "VernacEndProof",
            "bdebe6315ed4fbe5034563de1a4cf96e427c2878"
        ],
        [
            "Goal forall (A : Set) (R S : A -> A -> Prop), explicit_inclus _ R S -> explicit_inclus _ S (explicit_star _ R) -> explicit_confluence _ S -> explicit_confluence _ R.",
            "VernacDefinition",
            "8f48157bceabc36ef3070dc4f71d8c67a11a4dda"
        ],
        [
            "red in |- *; red in |- *; intros A R S H H0 H1 x y z H2 H3.",
            "VernacExtend",
            "2796154ded1ba21d35b8ac5116cb038f74b1a868"
        ],
        [
            "cut (explicit_inclus _ (explicit_star _ R) (explicit_star _ S)).",
            "VernacExtend",
            "045a8ec564ddbac8dcb5b500128c223cb643b725"
        ],
        [
            "2: auto.",
            "VernacExtend",
            "39c1ddb0360c4672841c6c9a8ce0db8d5b584563"
        ],
        [
            "intro H4; elim (H1 x y z (H4 x y H2) (H4 x z H3)).",
            "VernacExtend",
            "9209636150809167be2499f6ea5b35bdaaa7d4c1"
        ],
        [
            "intros x' H5; elim H5; intros H6 H7.",
            "VernacExtend",
            "a5a586d176f7bdc65fb3ae56d42a3bbd5578db6f"
        ],
        [
            "exists x'; split.",
            "VernacExtend",
            "140e0d24b2426885961844199b4e20314cedcdf5"
        ],
        [
            "exact (inclus_star A S R H0 y x' H6).",
            "VernacExtend",
            "151efa7b3a305e333a04787efc78013b4d59de97"
        ],
        [
            "exact (inclus_star A S R H0 z x' H7).",
            "VernacExtend",
            "857e79bdeda62d0861915d713fc07e1542f66b33"
        ],
        [
            "Save inclus_conf.",
            "VernacEndProof",
            "946f2e735fc77a09aac220bd533571d396b03792"
        ]
    ],
    "proofs": [
        {
            "name": "Ex_PQ",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros u1 H1.",
                        "VernacExtend",
                        "882d74dafe490bac3f3ec05a0f5803d184f124b1"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros H2 H3.",
                        "VernacExtend",
                        "90039f7e856c6f8d7c687de7842dad62810356dc"
                    ]
                },
                {
                    "command": [
                        "exists u1; split; assumption.",
                        "VernacExtend",
                        "c5b4650bc532c2666342fabb94e3a059bdef4276"
                    ]
                },
                {
                    "command": [
                        "Save Ex_PQ.",
                        "VernacEndProof",
                        "74006d6aac3030ef038dc5b465f2bc03ccf38366"
                    ]
                }
            ]
        },
        {
            "name": "star_trans",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros A R x y z H; elim H.",
                        "VernacExtend",
                        "5c62c4da1c80be30ba338dda21484e9fad3d7a76"
                    ]
                },
                {
                    "command": [
                        "intros x0 H1; assumption.",
                        "VernacExtend",
                        "2c5ce0a222c991358d247f834b2f90f0e43357dc"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 z0 H1 H2 H3 H4; apply star_trans1 with y0.",
                        "VernacExtend",
                        "5dd673c74531116ee2e28d2a425da98b90d1a68e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exact (H3 H4).",
                        "VernacExtend",
                        "684cea50448ed4b7f3fb27eeec19782bc0b52c88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "star_step1",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros; apply star_trans1 with y.",
                        "VernacExtend",
                        "1c04e40083b28c82569bbba16191a0b37ac44abd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply star_refl.",
                        "VernacExtend",
                        "8488e5b2807fef16c5056ba3f303e3256adf3a28"
                    ]
                },
                {
                    "command": [
                        "Save star_step1.",
                        "VernacEndProof",
                        "cc3e6637fde17d3955b8a3b491ab946c5fa9a213"
                    ]
                }
            ]
        },
        {
            "name": "comp_case",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros A R1 R2 M N H; elim H.",
                        "VernacExtend",
                        "58dcdca09b800919db0aa7852451bd30132e1fe8"
                    ]
                },
                {
                    "command": [
                        "intros x y z H1 H2; exists y; split; assumption.",
                        "VernacExtend",
                        "b29138f5cca1496a07231af70707e33806ab7a3c"
                    ]
                },
                {
                    "command": [
                        "Save comp_case.",
                        "VernacEndProof",
                        "46eaa784f137456b220acc96fa97bba1ad65ffb6"
                    ]
                }
            ]
        },
        {
            "name": "comp_relplus",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros A R x y H; elim H.",
                        "VernacExtend",
                        "a166d9aa2fbebd9667f3fe09f55f9f4c7c9dad14"
                    ]
                },
                {
                    "command": [
                        "intros a b c H1 H2; generalize H1; generalize a.",
                        "VernacExtend",
                        "a3bdc797a54429d7039fe698a820e3881a8be27a"
                    ]
                },
                {
                    "command": [
                        "elim H2.",
                        "VernacExtend",
                        "b5361db8e79787430270ea77170dc29bbb9de7b4"
                    ]
                },
                {
                    "command": [
                        "intros; apply relplus_1step; assumption.",
                        "VernacExtend",
                        "82bbf80769b48c744a47150066e5666fb8ff2bb6"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 z H3 H4 H5 a0 H6; apply relplus_trans1 with x0.",
                        "VernacExtend",
                        "7f709e7acfe88cd80adeda2be9aa6497c29456fd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H5; assumption.",
                        "VernacExtend",
                        "8f860832491462a0a9db7bd7c081da8cdc789cad"
                    ]
                },
                {
                    "command": [
                        "Save comp_relplus.",
                        "VernacEndProof",
                        "397c9cb452b25cf2b1e0eb6c903ae85431353c51"
                    ]
                }
            ]
        },
        {
            "name": "star_case",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros A R M N H; elim H.",
                        "VernacExtend",
                        "ae2ef954806939a048b3da1ff86db8fccd07daf3"
                    ]
                },
                {
                    "command": [
                        "intros x; left; trivial.",
                        "VernacExtend",
                        "53b06bedc85bfc0f6e41ddc092daa921c143c5b9"
                    ]
                },
                {
                    "command": [
                        "intros x y z H1 H2 H3; right; exists y; split; trivial.",
                        "VernacExtend",
                        "55411d24285610251c8b354b6f99937bc880f447"
                    ]
                },
                {
                    "command": [
                        "Save star_case.",
                        "VernacEndProof",
                        "393af3f1f0fb9db4664628e8847924ff069f8287"
                    ]
                }
            ]
        },
        {
            "name": "Rplus_transitive",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "intros; apply relplus_trans1 with y0; trivial.",
                        "VernacExtend",
                        "0ba03c64f4c57e4976592e3ac70cd3f0ecd23c65"
                    ]
                },
                {
                    "command": [
                        "intros; apply relplus_trans1 with y0; auto.",
                        "VernacExtend",
                        "ec2ca94af551b46f6bf9eac55489b9835dd428ca"
                    ]
                },
                {
                    "command": [
                        "Save Rplus_transitive.",
                        "VernacEndProof",
                        "fd3912ee15f2297d9ee71175d16d421237104b6e"
                    ]
                }
            ]
        },
        {
            "name": "Rplus_Rstar",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply star_trans1 with y0; auto.",
                        "VernacExtend",
                        "d7463cd077c7497998d42648912f63d756648181"
                    ]
                },
                {
                    "command": [
                        "Save Rplus_Rstar.",
                        "VernacEndProof",
                        "38f4f356637361897ce379c0fab109d078f91cd7"
                    ]
                }
            ]
        },
        {
            "name": "Rstar_Rplus_R",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros.",
                        "VernacExtend",
                        "6b83f392a470a8cdaa118e532bc445a009dec854"
                    ]
                },
                {
                    "command": [
                        "exists y0; auto.",
                        "VernacExtend",
                        "fdd161c9b8d36c397f6bb98bf8f446027e092ee4"
                    ]
                },
                {
                    "command": [
                        "exists y0; auto.",
                        "VernacExtend",
                        "fdd161c9b8d36c397f6bb98bf8f446027e092ee4"
                    ]
                },
                {
                    "command": [
                        "exists y0; split; trivial.",
                        "VernacExtend",
                        "a119aa12dc69d68c3e9bde02b2f1e04f8fab0cd5"
                    ]
                },
                {
                    "command": [
                        "apply star_trans with z0; auto.",
                        "VernacExtend",
                        "ade858dba0bf8be84700d7c9bece175c37bd1600"
                    ]
                },
                {
                    "command": [
                        "Save Rstar_Rplus_R.",
                        "VernacEndProof",
                        "1be9c3c22a3f7fa20337be0eb38761de79a69276"
                    ]
                }
            ]
        },
        {
            "name": "noetherian_course_of_values",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "unfold explicit_noetherian in |- *; unfold hereditary in |- *; unfold universal in |- *; unfold sub in |- *; intros A R N A1 H x.",
                        "VernacExtend",
                        "7a4e8fea85ded338af00b91eb237c9b64d2183a0"
                    ]
                },
                {
                    "command": [
                        "apply (N (adjoint A (explicit_star _ R) A1)).",
                        "VernacExtend",
                        "908d6eedf66ed7891d74e7de1c9e235245be3b52"
                    ]
                },
                {
                    "command": [
                        "unfold adjoint in |- *; unfold sub in |- *; intros.",
                        "VernacExtend",
                        "33cf28c9e79a3df9283bdf520fb1f2800854c8a0"
                    ]
                },
                {
                    "command": [
                        "apply H; unfold adjoint in |- *; unfold sub in |- *; intros.",
                        "VernacExtend",
                        "e11b4f206449623136f9de3fd0278543f4cefcfc"
                    ]
                },
                {
                    "command": [
                        "elim Rstar_Rplus_R with A R x0 x1 x2; trivial.",
                        "VernacExtend",
                        "726e1053db7e50f6b77b870703aae27c1162ba89"
                    ]
                },
                {
                    "command": [
                        "intro z; simple induction 1; intros C1 C2; apply H0 with z; trivial.",
                        "VernacExtend",
                        "bb2a95c0a662e1ea5f6068b5e7d8efeb98d2bc4e"
                    ]
                },
                {
                    "command": [
                        "Save noetherian_course_of_values.",
                        "VernacEndProof",
                        "65775d465b309d58052717492c7cc6899baabdf3"
                    ]
                }
            ]
        },
        {
            "name": "plus_preserves_noetherian",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "generalize noetherian_course_of_values.",
                        "VernacExtend",
                        "fa79dcabcfd34c11c97863484c05584387a9b147"
                    ]
                },
                {
                    "command": [
                        "unfold adjoint in |- *; unfold universal in |- *; unfold sub in |- *; intros.",
                        "VernacExtend",
                        "911c46e8662a94de5d2f64c6d096349b07ab9d82"
                    ]
                },
                {
                    "command": [
                        "unfold explicit_noetherian in |- *; unfold universal in |- *; unfold sub in |- *; intros.",
                        "VernacExtend",
                        "b1195972c0c9cd8e5d41c195f5232d9455613e75"
                    ]
                },
                {
                    "command": [
                        "apply (H A R H0 A0 H1 x x).",
                        "VernacExtend",
                        "177ed3902d196edde12db65c0a6017d45be5a407"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noetherian_induction1",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "unfold explicit_noetherian in |- *; unfold universal in |- *; unfold hereditary in |- *; unfold adjoint in |- *; unfold sub in |- *; unfold a_set in |- *; intros.",
                        "VernacExtend",
                        "c4f064d6007461a016ac492f05b87a9bc7b0c202"
                    ]
                },
                {
                    "command": [
                        "pattern x in |- *; apply H; exact H0.",
                        "VernacExtend",
                        "2466fdf78e910c21b4b311509ffee5ca1ac2bcd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noetherian_induction",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros; pattern x in |- *; apply noetherian_induction1 with A (explicit_rel_plus _ R).",
                        "VernacExtend",
                        "9bff948f60d974b2e7b32773c585ca7115152935"
                    ]
                },
                {
                    "command": [
                        "apply plus_preserves_noetherian; assumption.",
                        "VernacExtend",
                        "c84d82d3b399e6d391d9df2c793c38e8669f2565"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "noether_inclus",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros; unfold explicit_noetherian in |- *; unfold universal in |- *; unfold hereditary in |- *; unfold adjoint in |- *; unfold sub in |- *; unfold a_set in |- *; intros.",
                        "VernacExtend",
                        "30eb4b913aae77df636ce9acc569a488370f1f90"
                    ]
                },
                {
                    "command": [
                        "pattern x in |- *; apply (noetherian_induction1 A R H); auto.",
                        "VernacExtend",
                        "fd6959eef43a96a1d632be52b12a5ccab4eadc78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inclus_star",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros A R S H; red in |- *; simple induction 1.",
                        "VernacExtend",
                        "3cd27108d7634453a4eb2942ca6cabf7da7e7d93"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 z H1 H2 H3; apply star_trans with y0; auto.",
                        "VernacExtend",
                        "885f01de4046661f4214d6e2796f5471cab3598d"
                    ]
                },
                {
                    "command": [
                        "Save inclus_star.",
                        "VernacEndProof",
                        "55dbffa78a832c3c536e6402946e85fd50dbf35f"
                    ]
                }
            ]
        },
        {
            "name": "inclus_reg_star",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "unfold explicit_inclus in |- *; simple induction 2.",
                        "VernacExtend",
                        "8458e99aee9296576d40baba9019301a1356cb76"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 z H1 H2 H3; apply star_trans1 with y0.",
                        "VernacExtend",
                        "8384c6784551bb9d6fbc121b7c56e2f9d68e0d63"
                    ]
                },
                {
                    "command": [
                        "apply (H x0 y0 H1).",
                        "VernacExtend",
                        "313e533314e339c76b97d26b9694561cb1cacbf6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Save inclus_reg_star.",
                        "VernacEndProof",
                        "82412287371e874ef6202b933ddc7310a319d7d9"
                    ]
                }
            ]
        },
        {
            "name": "inclus_comp",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros A R1 R2 S H H0 H1; red in |- *; simple induction 1.",
                        "VernacExtend",
                        "ee47b75a0fd09b9118c08c20d8a6fea1590f4ceb"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 z H3 H4; apply H1 with y0; auto.",
                        "VernacExtend",
                        "913d831a0cb6cfc5ed0b89d8ef9dfd4f3bae4517"
                    ]
                },
                {
                    "command": [
                        "Save inclus_comp.",
                        "VernacEndProof",
                        "2443cb095de38bb4776d868188d3890ca1c1b041"
                    ]
                }
            ]
        },
        {
            "name": "strong_conf_conf",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros A R H; red in |- *; red in |- *.",
                        "VernacExtend",
                        "a5e98a6344814ad27f58190a527416678998d82b"
                    ]
                },
                {
                    "command": [
                        "intros x y z H1; generalize z; elim H1.",
                        "VernacExtend",
                        "8797d750a1c6e7fc358d17fff2ba83f07467f31b"
                    ]
                },
                {
                    "command": [
                        "intros x0 z0 H2; exists z0; split; auto.",
                        "VernacExtend",
                        "af8426d22f34ed0b6bc2e088d540a7942c1221bd"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 y1 H2 H3 H4 z0 H5.",
                        "VernacExtend",
                        "7dd6282d8d6a9112116e34682102c4f03b2f35ff"
                    ]
                },
                {
                    "command": [
                        "cut (exists u : A, explicit_star _ R y0 u /\\ R z0 u).",
                        "VernacExtend",
                        "a6ad482941e5bf6de9f5fb71d04fcc5cbcb05a99"
                    ]
                },
                {
                    "command": [
                        "intro H6; elim H6; intros z1 H7; elim H7; intros H8 H9.",
                        "VernacExtend",
                        "27cbe37158e20d94626e22b183851821d82460b4"
                    ]
                },
                {
                    "command": [
                        "elim (H4 z1 H8); intros u H10; elim H10; intros H11 H12.",
                        "VernacExtend",
                        "620c733c8a0148b26c7ba95a7bbb1adbdecf6ccd"
                    ]
                },
                {
                    "command": [
                        "exists u; split.",
                        "VernacExtend",
                        "d9616d4c57330d01a2fcccffa9992ea6c49edf20"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply star_trans1 with z1; assumption.",
                        "VernacExtend",
                        "a96ccd46954a92ed3f41b566ce367beafaf683e2"
                    ]
                },
                {
                    "command": [
                        "generalize H2; generalize y0; elim H5.",
                        "VernacExtend",
                        "4590b0efd3fb0291045abf50f0c840579ba959ca"
                    ]
                },
                {
                    "command": [
                        "intros x1 y2 H6; exists y2; split; auto.",
                        "VernacExtend",
                        "bb04cc2e6e646fd3b5e3b0b2851fe6567fdfbd02"
                    ]
                },
                {
                    "command": [
                        "intros x1 y2 z1 H6 H7 H8 y3 H9; elim (H x1 y3 y2).",
                        "VernacExtend",
                        "3c553d27913866d98cf650d49b83cae754cd01cc"
                    ]
                },
                {
                    "command": [
                        "intros x2 H10; elim H10; intros H11 H12.",
                        "VernacExtend",
                        "e36280b2398e30ca9694618473f9c8cc3d0cf896"
                    ]
                },
                {
                    "command": [
                        "elim (H8 x2 H12); intros u H13; elim H13; intros H14 H15.",
                        "VernacExtend",
                        "83aa8a248ff834614e9a40f9d38440515761e384"
                    ]
                },
                {
                    "command": [
                        "exists u; split; [ apply star_trans1 with x2; assumption | assumption ]; trivial.",
                        "VernacExtend",
                        "575530622adf493bab6775299002b2863f5f22ec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Save strong_conf_conf.",
                        "VernacEndProof",
                        "bdebe6315ed4fbe5034563de1a4cf96e427c2878"
                    ]
                }
            ]
        }
    ]
}