{
    "filename": "e_sequent_calculus.v",
    "coq_project": "propcalc",
    "vernac_cmds": [
        [
            "Require Export c_completeness.",
            "VernacRequire",
            "023ec42a4f0a9a6daee9c5f617053cdd0bef54b5"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Module Type sequent_mod (B: base_mod) (S: sound_mod B) (C: complete_mod B S).",
            "VernacDeclareModuleType",
            "9bcc4f15663d3e51cb9164b3e6a6aa49a0bde5af"
        ],
        [
            "Import B S C.",
            "VernacImport",
            "d7bdc9377df92636ebddc4e1595f69cacc332f23"
        ],
        [
            "Reserved Notation \"\u0393 \u2283 A\" (at level 80).",
            "VernacSyntaxExtension",
            "37115a155fb20a09aafcb9fb49a060343d173e4d"
        ],
        [
            "Inductive G : list PropF->list PropF->Prop := | Gax : forall A \u0393 \u0394 , In A \u0393 -> In A \u0394 -> \u0393 \u2283 \u0394 | GBot : forall \u0393 \u0394 , In \u22a5 \u0393 -> \u0393 \u2283 \u0394 | AndL : forall A B \u03931 \u03932 \u0394, \u03931++A::B::\u03932 \u2283 \u0394 -> \u03931++A\u2227B::\u03932 \u2283 \u0394 | AndR : forall A B \u0393 \u03941 \u03942, \u0393 \u2283 \u03941++A::\u03942 -> \u0393 \u2283 \u03941++B::\u03942 -> \u0393 \u2283 \u03941++A\u2227B::\u03942 | OrL : forall A B \u03931 \u03932 \u0394, \u03931++A::\u03932 \u2283 \u0394 -> \u03931++B::\u03932 \u2283 \u0394 -> \u03931++A\u2228B::\u03932 \u2283 \u0394 | OrR : forall A B \u0393 \u03941 \u03942, \u0393 \u2283 \u03941++A::B::\u03942 -> \u0393 \u2283 \u03941++A\u2228B::\u03942 | ImpL : forall A B \u03931 \u03932 \u0394, \u03931++B::\u03932 \u2283 \u0394 -> \u03931++\u03932 \u2283 A::\u0394 -> \u03931++A\u2192B::\u03932 \u2283 \u0394 | ImpR : forall A B \u0393 \u03941 \u03942, A::\u0393 \u2283 \u03941++B::\u03942 -> \u0393 \u2283 \u03941++A\u2192B::\u03942 | Cut : forall A \u0393 \u0394 , \u0393 \u2283 A::\u0394 -> A::\u0393 \u2283 \u0394 -> \u0393 \u2283 \u0394 where \"\u0393 \u2283 \u0394\" := (G \u0393 \u0394) : My_scope.",
            "VernacInductive",
            "106b15979821073369ea8cdb3ddbeaacf59fda81"
        ],
        [
            "Definition BigOr := fold_right Disj \u22a5.",
            "VernacDefinition",
            "2e2ea668b39b417b880a611a3e1302d5445a9336"
        ],
        [
            "Notation \"\u22c1 \u0394\" := (BigOr \u0394) (at level 19).",
            "VernacNotation",
            "411d0479b6601670fdfc505220f53c2d25b5a628"
        ],
        [
            "Definition Ncl \u0393 := map_fold_right (Nc \u0393) and True.",
            "VernacDefinition",
            "72f3048bea4708d71855466b644936d689abcaee"
        ],
        [
            "Notation \"\u0393 \u22a2\u22a2 \u0394\" := (Ncl \u0393 \u0394) (at level 80).",
            "VernacNotation",
            "882fdd2f8228cb3ca68e18b0d39924bcdfbccd0c"
        ],
        [
            "Notation \"\u00acl \u0393\" := (map Neg \u0393) (at level 40).",
            "VernacNotation",
            "c38ed337a55b0e77e7eb13a82b17405b41796fd5"
        ],
        [
            "Lemma NegAnd_impl_OrNeg : forall \u0393 A B, \u0393 \u22a2 \u00ac(A\u2227B) -> \u0393 \u22a2 \u00acA\u2228\u00acB.",
            "VernacStartTheoremProof",
            "1f3f7d1452c17655a8152934172d7ddf495bde45"
        ],
        [
            "do 3 intro;apply prov_impl.",
            "VernacExtend",
            "937abc02b1c9ebf79b64a0e7ab0de1db5dde6b07"
        ],
        [
            "apply ImpI;apply BotC;apply ImpE with (A \u2227 B); [is_ass|apply AndI;apply BotC;(apply ImpE with (\u00acA \u2228 \u00acB);[is_ass|])].",
            "VernacExtend",
            "185ace7e679a88b8f4033fdbe77908675677d2d1"
        ],
        [
            "apply OrI1;is_ass.",
            "VernacExtend",
            "fc55c983bdfdec1b57c743007f9a91e666cf868c"
        ],
        [
            "apply OrI2;is_ass.",
            "VernacExtend",
            "e4720ae1733043da9b70e7e48c8b905197fa7444"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nc_list_weakening : forall \u03931 \u03932 \u0394, (forall B, In B \u03931 -> In B \u03932) -> \u03931 \u22a2\u22a2 \u0394 -> \u03932 \u22a2\u22a2 \u0394.",
            "VernacStartTheoremProof",
            "770d74d7757b101c4edb153f3738ab6f64dbc0b7"
        ],
        [
            "intros;induction \u0394.",
            "VernacExtend",
            "a17b770d257672bf8a997bc83b871cd62e7fde10"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct H0;split.",
            "VernacExtend",
            "654b6e9c3fef6f766120138d8915ee6d578f01d4"
        ],
        [
            "eapply weakening2;eassumption.",
            "VernacExtend",
            "916c8ca5510c9144333040b5b717dc24e3a7009e"
        ],
        [
            "apply IH\u0394;apply H1.",
            "VernacExtend",
            "0511f96ea4bf4ea5c75dc57241b74617373f0b2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nc_list_impl : forall \u0393 A, \u0393 \u22a2 A ->forall \u0394, \u0394 \u22a2\u22a2 \u0393 -> \u0394 \u22a2 A.",
            "VernacStartTheoremProof",
            "e5dfebd1725f9bd002e24953156de6068d359f18"
        ],
        [
            "induction 1;intros;[induction \u0393;destruct H;[subst;apply H0|apply IH\u0393;[assumption|apply H0]] |constructor 2|econstructor 3|constructor 4|constructor 5|econstructor 6 |econstructor 7|constructor 8|constructor 9|econstructor 10];try eauto; [apply IHNc..|apply IHNc2|try apply IHNc3]; (split;[is_ass|eapply Nc_list_weakening;[|eassumption];in_solve]).",
            "VernacExtend",
            "c78eb9d17003ce2f45127fa4e24800389aa30c8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nc_list_contained : forall \u0393 \u0394, (forall B, In B \u0394 -> In B \u0393) -> \u0393 \u22a2\u22a2 \u0394.",
            "VernacStartTheoremProof",
            "e9eb05fd86b5b7eae75785d995b72bac4629b32a"
        ],
        [
            "intros;induction \u0394.",
            "VernacExtend",
            "a17b770d257672bf8a997bc83b871cd62e7fde10"
        ],
        [
            "exact I.",
            "VernacExtend",
            "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor;apply H;in_solve.",
            "VernacExtend",
            "10932040c34dab7a0454a4d22970c2ed805672cd"
        ],
        [
            "apply IH\u0394;intros;apply H;in_solve.",
            "VernacExtend",
            "a4d774a379e2d4d6abb2e0924d85fe6e62a723df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nc_list_app : forall \u0393 \u03941 \u03942, \u0393 \u22a2\u22a2 \u03941 -> \u0393 \u22a2\u22a2 \u03942 -> \u0393 \u22a2\u22a2 \u03941++\u03942.",
            "VernacStartTheoremProof",
            "5c205e898d3fd2261573f113cef976bfeae7083b"
        ],
        [
            "intros;induction \u03941.",
            "VernacExtend",
            "9941846ddf55e1dd2f397dfa285b42613b63567a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H;split.",
            "VernacExtend",
            "690d93431edb4dd806300f61101a406a31101661"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply IH\u03941;apply H1.",
            "VernacExtend",
            "9148efb8d599b03f43fa5023b924acf43580acb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac Ncl_solve := repeat match goal with | |- _ \u22a2 _ => idtac | |- _ \u22a2\u22a2 _::_ => split;[eassumption||(try (is_ass;fail))|] | |- _ \u22a2\u22a2 _++_ => apply Nc_list_app | |- map_fold_right (Nc ?\u0393) and True _ => change (map_fold_right (Nc \u0393) and True) with (Ncl \u0393) | _ => eassumption||(apply Nc_list_contained;in_solve) end.",
            "VernacExtend",
            "7d5d73200ce64e0d2d89d78ac0e0875073c35d01"
        ],
        [
            "Lemma G_to_Nc_Neg : forall \u0393 \u0394, \u0393 \u2283 \u0394 -> \u0393++\u00acl \u0394 \u22a2 \u22a5.",
            "VernacStartTheoremProof",
            "79f3d4cf2314a4b3ae7e8094d68822db18b77021"
        ],
        [
            "induction 1;try rewrite map_app in *;simpl in *.",
            "VernacExtend",
            "33ea4de012cecb4ad0500861f50602a553f8828d"
        ],
        [
            "mp;[|is_ass].",
            "VernacExtend",
            "e104806a6f05b172dc8fdfd6f2ff5a7594f68c78"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply in_app_iff;right.",
            "VernacExtend",
            "e5959534d4408229cd30447827570ca7bd3e0a48"
        ],
        [
            "change (A \u2192 \u22a5) with (\u00acA).",
            "VernacExtend",
            "e5ef1a3ba3a592d6af40579357711fae82cab36b"
        ],
        [
            "apply in_map;assumption.",
            "VernacExtend",
            "a0d92f5dd696ecfd356e1ae3116c8433dce3b03f"
        ],
        [
            "is_ass.",
            "VernacExtend",
            "cdfdb1788b91eab5b20bcf4175a7dbaff7c9310a"
        ],
        [
            "eapply Nc_list_impl;[eassumption|].",
            "VernacExtend",
            "d166d3c8e9a77d46c1dde5281a3828acd8a2aa3f"
        ],
        [
            "Ncl_solve.",
            "VernacExtend",
            "1788bf43f41b013ef2de00349a8b7d0ce14df2d7"
        ],
        [
            "eapply AndE1;is_ass.",
            "VernacExtend",
            "1c701e9f244afe1685da366df146a27974bc68f9"
        ],
        [
            "eapply AndE2;is_ass.",
            "VernacExtend",
            "5eaed77d6fcfa024894392fae21cf0a67ec4b53d"
        ],
        [
            "eapply OrE;[apply NegAnd_impl_OrNeg;is_ass|eapply Nc_list_impl..]; [apply IHG1| |apply IHG2|];Ncl_solve.",
            "VernacExtend",
            "e5eb052cdd95d565226c79416087a71ec11dc424"
        ],
        [
            "eapply OrE;[is_ass|eapply Nc_list_impl..];[apply IHG1| |apply IHG2|];Ncl_solve.",
            "VernacExtend",
            "8c70d2832bf77575eeda14fc6d6abdfd74a45e66"
        ],
        [
            "eapply Nc_list_impl;[eassumption|].",
            "VernacExtend",
            "d166d3c8e9a77d46c1dde5281a3828acd8a2aa3f"
        ],
        [
            "Ncl_solve;(apply ImpI;mp;[is_ass|]).",
            "VernacExtend",
            "031ef24b2626781ddd1e8e40016f8ebd602531a5"
        ],
        [
            "eapply OrI1;is_ass.",
            "VernacExtend",
            "65fb2c9457c15d86c54377c31c94a1d4fefa8eaa"
        ],
        [
            "eapply OrI2;is_ass.",
            "VernacExtend",
            "3a1104b5b6cac87b094c193549ffb29c34490e98"
        ],
        [
            "eapply OrE;[apply Excluded_Middle|eapply Nc_list_impl..]; [apply IHG1| |apply IHG2|Ncl_solve];Ncl_solve;mp;is_ass.",
            "VernacExtend",
            "8388b5cb579b92083c9543305826a87cb39a2db2"
        ],
        [
            "eapply Nc_list_impl;[eassumption|].",
            "VernacExtend",
            "d166d3c8e9a77d46c1dde5281a3828acd8a2aa3f"
        ],
        [
            "Ncl_solve.",
            "VernacExtend",
            "1788bf43f41b013ef2de00349a8b7d0ce14df2d7"
        ],
        [
            "apply BotC;mp;[|apply ImpI;apply BotC;apply ImpE with A];is_ass.",
            "VernacExtend",
            "12db8ac4d591cd771e06cf727fdd2a6850b3cd5c"
        ],
        [
            "apply ImpI;mp;[|apply ImpI];is_ass.",
            "VernacExtend",
            "feb18cfc0d8fc05e9b9cb45b0e8bd0b88924ff09"
        ],
        [
            "eapply OrE;[apply Excluded_Middle|eapply Nc_list_impl..]; [apply IHG2| |apply IHG1|];Ncl_solve.",
            "VernacExtend",
            "9fb91973477b2633630e831bf6db4ef7e17fa42c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ConjNeg_Disj : forall \u0394 \u0393, \u0393 ++ \u00acl \u0394 \u22a2 \u22a5 -> \u0393 \u22a2 \u22c1\u0394.",
            "VernacStartTheoremProof",
            "a9d489ab0914a77eb982910ab6886e47869a2805"
        ],
        [
            "induction \u0394;simpl;intros.",
            "VernacExtend",
            "8d7c1fcd77ac5d9352253c270ddb69a7d7eef418"
        ],
        [
            "rewrite app_nil_r in H;trivial.",
            "VernacExtend",
            "ddd1be82854e344ecff7486f668d851e54247d1b"
        ],
        [
            "eapply OrE.",
            "VernacExtend",
            "bbc73aa5967c977b1c3a926c0fc7460d5af8ea6f"
        ],
        [
            "apply Excluded_Middle.",
            "VernacExtend",
            "23255070ea43060b41b0dd6d00b161681515da6e"
        ],
        [
            "apply OrI1;is_ass.",
            "VernacExtend",
            "fc55c983bdfdec1b57c743007f9a91e666cf868c"
        ],
        [
            "apply OrI2;apply IH\u0394;eapply Nc_list_impl;[eassumption|Ncl_solve].",
            "VernacExtend",
            "9c24bd9dd8431b82b839c649be70d8b4ddb81e82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem G_to_Nc : forall \u0393 \u0394, \u0393 \u2283 \u0394 -> \u0393 \u22a2 \u22c1\u0394.",
            "VernacStartTheoremProof",
            "94128a1f145c75be2437ddf68d4f5642b67c1592"
        ],
        [
            "intros;apply ConjNeg_Disj;apply G_to_Nc_Neg;assumption.",
            "VernacExtend",
            "0f5527928906c1c1bc7319d9b54a1964a1dcba4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Ltac temp1 := econstructor;split;reflexivity||(rewrite app_comm_cons;reflexivity).",
            "VernacExtend",
            "1ca72253225a2d7da0621ff720fd5571cabd5e89"
        ],
        [
            "Lemma in_split_app : forall A (a:A) l2 l4 l1 l3, l1++a::l2=l3++l4 -> ((exists l,l3=l1++a::l/\\l2=l++l4)\\/ (exists l,l4=l++a::l2/\\l1=l3++l)).",
            "VernacStartTheoremProof",
            "0b00fc82a43704c95143d599c59693bf77473e0d"
        ],
        [
            "induction l1;intros; (destruct l3;[destruct l4|];discriminate||(injection H;intros;subst)).",
            "VernacExtend",
            "af2ff6c801d4803ce1d3010d428fb556a5a6fff1"
        ],
        [
            "right;exists [];split;reflexivity.",
            "VernacExtend",
            "0081df2555d089223b56cff216d0a501dd88f15b"
        ],
        [
            "left;temp1.",
            "VernacExtend",
            "05df501298586aff27f145b7e6594374b3b7dd73"
        ],
        [
            "right;temp1.",
            "VernacExtend",
            "314cb8337e6d293756352ac625df7cbce0d8c5d4"
        ],
        [
            "destruct (IHl1 _ H0) as [(?&?&?)|(?&?&?)];subst.",
            "VernacExtend",
            "13f64d9a8813a797591dc9e97fa117530e435f02"
        ],
        [
            "left;temp1.",
            "VernacExtend",
            "05df501298586aff27f145b7e6594374b3b7dd73"
        ],
        [
            "right;temp1.",
            "VernacExtend",
            "314cb8337e6d293756352ac625df7cbce0d8c5d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_in_split_app : forall A (a:A) b l2 l4 l1 l3, l1++a::l2=l3++b::l4 -> (exists l,l3=l1++a::l/\\l2=l++b::l4)\\/ (exists l,l4=l++a::l2/\\l1=l3++b::l)\\/ (a=b/\\l1=l3/\\l2=l4).",
            "VernacStartTheoremProof",
            "b51292b0040520f6b5586b43f2fd5a26b923e19b"
        ],
        [
            "intros;apply in_split_app in H as [(?&?&?)|(?&?&?)];subst.",
            "VernacExtend",
            "fb21ad7a7b11f433c8691115d0178a965eebeb20"
        ],
        [
            "left;econstructor;split;reflexivity.",
            "VernacExtend",
            "d20077c19c617148bcd2f3fdfefaea6581ba14e9"
        ],
        [
            "destruct x;injection H;intros;subst.",
            "VernacExtend",
            "3627b7fdce24e966be10c61c138213fd641692fc"
        ],
        [
            "repeat (right||split||rewrite app_nil_r||reflexivity).",
            "VernacExtend",
            "3611775f1e5a2855302de8d9859e0fc00f3e3be0"
        ],
        [
            "right;left;econstructor;split;reflexivity.",
            "VernacExtend",
            "b0aa6d62a60e0bfc4cf1840d8215ac0047e67d27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac rew1 := repeat rewrite <- app_assoc;repeat rewrite <- app_comm_cons.",
            "VernacExtend",
            "9e7681784fcf96c93e0116239d54c7b9e89764d6"
        ],
        [
            "Ltac rew2 := repeat rewrite app_comm_cons;try rewrite app_assoc.",
            "VernacExtend",
            "6c259d0623b0419729db325451f7dbb0d6c5de18"
        ],
        [
            "Ltac constr := constructor 3||constructor 4||constructor 5||constructor 6||constructor 7||constructor 8.",
            "VernacExtend",
            "8b815dc8a67ec546778f51a28818e49d26c593f8"
        ],
        [
            "Local Ltac temp2 X Y Z := (rew1;constr;rew2;eapply X;rew1;reflexivity)|| (rew2;constr;rew1;eapply X;rew2;reflexivity)|| (rew1;constr;rew2;[eapply Y|eapply Z];rew1;reflexivity)|| (rew2;constr;rew1;[eapply Y|eapply Z];rew2;reflexivity).",
            "VernacExtend",
            "693c39a591c2062ee28775dbed1917fa151e11a1"
        ],
        [
            "Local Ltac temp3 H IHG IHG1 IHG2 Heql A0 := induction H;intros;subst; try apply in_split_app in Heql as [(?&?&?)|(?&?&?)]; subst;try (temp2 IHG IHG1 IHG2;fail);[is_ass|constructor 2;in_solve| apply Cut with A0;[try rewrite app_comm_cons|rew2];auto..].",
            "VernacExtend",
            "eb5bbe07551a6031a8f1d97c698ea4389199b2cc"
        ],
        [
            "Lemma WeakL : forall \u03931 \u03932 \u0394 A, \u03931++\u03932 \u2283 \u0394 -> \u03931++A::\u03932 \u2283 \u0394.",
            "VernacStartTheoremProof",
            "b87dee39e803205fc067035755805cf717d3d35c"
        ],
        [
            "intros;remember (\u03931++\u03932);revert \u03931 \u03932 Heql;temp3 H IHG IHG1 IHG2 Heql A0.",
            "VernacExtend",
            "d271ccbcbd688e63f65b51691bbfbc5bc791a86b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma WeakR : forall \u0393 \u03941 \u03942 A, \u0393 \u2283 \u03941++\u03942 -> \u0393 \u2283 \u03941++A::\u03942.",
            "VernacStartTheoremProof",
            "106d4a63b23a9ff8800d0cb69319c5bddedc9cf2"
        ],
        [
            "intros;remember (\u03941++\u03942);revert \u03941 \u03942 Heql;temp3 H IHG IHG1 IHG2 Heql A0.",
            "VernacExtend",
            "2ba55bc6ad5e439ad6ae2a57a7b7d2c131f7fc52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Nc_to_G : forall \u0393 A, \u0393 \u22a2 A -> \u0393 \u2283 [A].",
            "VernacStartTheoremProof",
            "797dfcae60a2430f93a1a90bb057283b30cf0b96"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "is_ass.",
            "VernacExtend",
            "cdfdb1788b91eab5b20bcf4175a7dbaff7c9310a"
        ],
        [
            "apply ImpR with (\u03941:=[]);assumption.",
            "VernacExtend",
            "215203901d3ea8a44cd24240d4fa90efea55b553"
        ],
        [
            "apply Cut with (A\u2192B).",
            "VernacExtend",
            "06e2956ef78ad050bb590916e1d6b910a8a237de"
        ],
        [
            "apply WeakR with (\u03941:=[_]);assumption.",
            "VernacExtend",
            "1e35e5ba67feabd32e91ab19402754aedd0d418b"
        ],
        [
            "apply ImpL with (\u03931:=[]).",
            "VernacExtend",
            "4a61ceb29ee4b6640d5cf1fee88e8b20a0c8323f"
        ],
        [
            "is_ass.",
            "VernacExtend",
            "cdfdb1788b91eab5b20bcf4175a7dbaff7c9310a"
        ],
        [
            "apply WeakR with (\u03941:=[_]);assumption.",
            "VernacExtend",
            "1e35e5ba67feabd32e91ab19402754aedd0d418b"
        ],
        [
            "apply Cut with (\u00acA).",
            "VernacExtend",
            "3fee25ede767aac9df44f95ce79ffff6dc240b60"
        ],
        [
            "apply ImpR with (\u03941:=[]);is_ass.",
            "VernacExtend",
            "51493788a8186d70e752cbd2ebcfb5b619b4c6ce"
        ],
        [
            "eapply Cut.",
            "VernacExtend",
            "23ca5e0f19abaefe4b6e23b517118915faf0b9ac"
        ],
        [
            "apply WeakR with (\u03941:=[\u22a5]);assumption.",
            "VernacExtend",
            "7b6bebd95f74fc5f16720ab71d7286ac6bfff295"
        ],
        [
            "apply GBot;in_solve.",
            "VernacExtend",
            "5ca42e9c50bda6e372a297ab11618d30d9b8621c"
        ],
        [
            "apply AndR with (\u03941:=[]);assumption.",
            "VernacExtend",
            "8071ea30b6edb74a63cd6f98750fe0aa8cd56cec"
        ],
        [
            "apply Cut with (A \u2227 B).",
            "VernacExtend",
            "d8453b208facb2669a6836ee1b371a9f1086d043"
        ],
        [
            "apply WeakR with (\u03941:=[_]);assumption.",
            "VernacExtend",
            "1e35e5ba67feabd32e91ab19402754aedd0d418b"
        ],
        [
            "apply AndL with (\u03931:=[]);is_ass.",
            "VernacExtend",
            "61a01d499fa617e5a5e1bb3f35bec8db993d04cc"
        ],
        [
            "apply Cut with (A \u2227 B).",
            "VernacExtend",
            "d8453b208facb2669a6836ee1b371a9f1086d043"
        ],
        [
            "apply WeakR with (\u03941:=[_]);assumption.",
            "VernacExtend",
            "1e35e5ba67feabd32e91ab19402754aedd0d418b"
        ],
        [
            "apply AndL with (\u03931:=[]);constructor 1 with B;in_solve.",
            "VernacExtend",
            "b4be6a66b22dd15d8b11cc7efd0935f0cfb5294a"
        ],
        [
            "apply OrR with (\u03941:=[]);apply WeakR with (\u03941:=[_]);assumption.",
            "VernacExtend",
            "481758a483c32b74db10d1db700b72c490bc05f9"
        ],
        [
            "apply OrR with (\u03941:=[]);apply WeakR;assumption.",
            "VernacExtend",
            "f851ec55da9d487584715ba2184322739438d221"
        ],
        [
            "apply Cut with (A \u2228 B).",
            "VernacExtend",
            "7169b88a0854622527a4fc346a22bd262add9149"
        ],
        [
            "apply WeakR with (\u03941:=[_]);assumption.",
            "VernacExtend",
            "1e35e5ba67feabd32e91ab19402754aedd0d418b"
        ],
        [
            "apply OrL with (\u03931:=[]);assumption.",
            "VernacExtend",
            "f92c947718722c7eac913eb915b4fc2359bb745c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End sequent_mod.",
            "VernacEndSegment",
            "0d6b2dec3958e3f2d4ca22d740be4d88fdc00222"
        ]
    ],
    "proofs": [
        {
            "name": "NegAnd_impl_OrNeg",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "do 3 intro;apply prov_impl.",
                        "VernacExtend",
                        "937abc02b1c9ebf79b64a0e7ab0de1db5dde6b07"
                    ]
                },
                {
                    "command": [
                        "apply ImpI;apply BotC;apply ImpE with (A \u2227 B); [is_ass|apply AndI;apply BotC;(apply ImpE with (\u00acA \u2228 \u00acB);[is_ass|])].",
                        "VernacExtend",
                        "185ace7e679a88b8f4033fdbe77908675677d2d1"
                    ]
                },
                {
                    "command": [
                        "apply OrI1;is_ass.",
                        "VernacExtend",
                        "fc55c983bdfdec1b57c743007f9a91e666cf868c"
                    ]
                },
                {
                    "command": [
                        "apply OrI2;is_ass.",
                        "VernacExtend",
                        "e4720ae1733043da9b70e7e48c8b905197fa7444"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nc_list_weakening",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros;induction \u0394.",
                        "VernacExtend",
                        "a17b770d257672bf8a997bc83b871cd62e7fde10"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct H0;split.",
                        "VernacExtend",
                        "654b6e9c3fef6f766120138d8915ee6d578f01d4"
                    ]
                },
                {
                    "command": [
                        "eapply weakening2;eassumption.",
                        "VernacExtend",
                        "916c8ca5510c9144333040b5b717dc24e3a7009e"
                    ]
                },
                {
                    "command": [
                        "apply IH\u0394;apply H1.",
                        "VernacExtend",
                        "0511f96ea4bf4ea5c75dc57241b74617373f0b2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nc_list_impl",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "induction 1;intros;[induction \u0393;destruct H;[subst;apply H0|apply IH\u0393;[assumption|apply H0]] |constructor 2|econstructor 3|constructor 4|constructor 5|econstructor 6 |econstructor 7|constructor 8|constructor 9|econstructor 10];try eauto; [apply IHNc..|apply IHNc2|try apply IHNc3]; (split;[is_ass|eapply Nc_list_weakening;[|eassumption];in_solve]).",
                        "VernacExtend",
                        "c78eb9d17003ce2f45127fa4e24800389aa30c8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nc_list_contained",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros;induction \u0394.",
                        "VernacExtend",
                        "a17b770d257672bf8a997bc83b871cd62e7fde10"
                    ]
                },
                {
                    "command": [
                        "exact I.",
                        "VernacExtend",
                        "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "constructor;apply H;in_solve.",
                        "VernacExtend",
                        "10932040c34dab7a0454a4d22970c2ed805672cd"
                    ]
                },
                {
                    "command": [
                        "apply IH\u0394;intros;apply H;in_solve.",
                        "VernacExtend",
                        "a4d774a379e2d4d6abb2e0924d85fe6e62a723df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nc_list_app",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros;induction \u03941.",
                        "VernacExtend",
                        "9941846ddf55e1dd2f397dfa285b42613b63567a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H;split.",
                        "VernacExtend",
                        "690d93431edb4dd806300f61101a406a31101661"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply IH\u03941;apply H1.",
                        "VernacExtend",
                        "9148efb8d599b03f43fa5023b924acf43580acb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "G_to_Nc_Neg",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "induction 1;try rewrite map_app in *;simpl in *.",
                        "VernacExtend",
                        "33ea4de012cecb4ad0500861f50602a553f8828d"
                    ]
                },
                {
                    "command": [
                        "mp;[|is_ass].",
                        "VernacExtend",
                        "e104806a6f05b172dc8fdfd6f2ff5a7594f68c78"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply in_app_iff;right.",
                        "VernacExtend",
                        "e5959534d4408229cd30447827570ca7bd3e0a48"
                    ]
                },
                {
                    "command": [
                        "change (A \u2192 \u22a5) with (\u00acA).",
                        "VernacExtend",
                        "e5ef1a3ba3a592d6af40579357711fae82cab36b"
                    ]
                },
                {
                    "command": [
                        "apply in_map;assumption.",
                        "VernacExtend",
                        "a0d92f5dd696ecfd356e1ae3116c8433dce3b03f"
                    ]
                },
                {
                    "command": [
                        "is_ass.",
                        "VernacExtend",
                        "cdfdb1788b91eab5b20bcf4175a7dbaff7c9310a"
                    ]
                },
                {
                    "command": [
                        "eapply Nc_list_impl;[eassumption|].",
                        "VernacExtend",
                        "d166d3c8e9a77d46c1dde5281a3828acd8a2aa3f"
                    ]
                },
                {
                    "command": [
                        "Ncl_solve.",
                        "VernacExtend",
                        "1788bf43f41b013ef2de00349a8b7d0ce14df2d7"
                    ]
                },
                {
                    "command": [
                        "eapply AndE1;is_ass.",
                        "VernacExtend",
                        "1c701e9f244afe1685da366df146a27974bc68f9"
                    ]
                },
                {
                    "command": [
                        "eapply AndE2;is_ass.",
                        "VernacExtend",
                        "5eaed77d6fcfa024894392fae21cf0a67ec4b53d"
                    ]
                },
                {
                    "command": [
                        "eapply OrE;[apply NegAnd_impl_OrNeg;is_ass|eapply Nc_list_impl..]; [apply IHG1| |apply IHG2|];Ncl_solve.",
                        "VernacExtend",
                        "e5eb052cdd95d565226c79416087a71ec11dc424"
                    ]
                },
                {
                    "command": [
                        "eapply OrE;[is_ass|eapply Nc_list_impl..];[apply IHG1| |apply IHG2|];Ncl_solve.",
                        "VernacExtend",
                        "8c70d2832bf77575eeda14fc6d6abdfd74a45e66"
                    ]
                },
                {
                    "command": [
                        "eapply Nc_list_impl;[eassumption|].",
                        "VernacExtend",
                        "d166d3c8e9a77d46c1dde5281a3828acd8a2aa3f"
                    ]
                },
                {
                    "command": [
                        "Ncl_solve;(apply ImpI;mp;[is_ass|]).",
                        "VernacExtend",
                        "031ef24b2626781ddd1e8e40016f8ebd602531a5"
                    ]
                },
                {
                    "command": [
                        "eapply OrI1;is_ass.",
                        "VernacExtend",
                        "65fb2c9457c15d86c54377c31c94a1d4fefa8eaa"
                    ]
                },
                {
                    "command": [
                        "eapply OrI2;is_ass.",
                        "VernacExtend",
                        "3a1104b5b6cac87b094c193549ffb29c34490e98"
                    ]
                },
                {
                    "command": [
                        "eapply OrE;[apply Excluded_Middle|eapply Nc_list_impl..]; [apply IHG1| |apply IHG2|Ncl_solve];Ncl_solve;mp;is_ass.",
                        "VernacExtend",
                        "8388b5cb579b92083c9543305826a87cb39a2db2"
                    ]
                },
                {
                    "command": [
                        "eapply Nc_list_impl;[eassumption|].",
                        "VernacExtend",
                        "d166d3c8e9a77d46c1dde5281a3828acd8a2aa3f"
                    ]
                },
                {
                    "command": [
                        "Ncl_solve.",
                        "VernacExtend",
                        "1788bf43f41b013ef2de00349a8b7d0ce14df2d7"
                    ]
                },
                {
                    "command": [
                        "apply BotC;mp;[|apply ImpI;apply BotC;apply ImpE with A];is_ass.",
                        "VernacExtend",
                        "12db8ac4d591cd771e06cf727fdd2a6850b3cd5c"
                    ]
                },
                {
                    "command": [
                        "apply ImpI;mp;[|apply ImpI];is_ass.",
                        "VernacExtend",
                        "feb18cfc0d8fc05e9b9cb45b0e8bd0b88924ff09"
                    ]
                },
                {
                    "command": [
                        "eapply OrE;[apply Excluded_Middle|eapply Nc_list_impl..]; [apply IHG2| |apply IHG1|];Ncl_solve.",
                        "VernacExtend",
                        "9fb91973477b2633630e831bf6db4ef7e17fa42c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "G_to_Nc",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros;apply ConjNeg_Disj;apply G_to_Nc_Neg;assumption.",
                        "VernacExtend",
                        "0f5527928906c1c1bc7319d9b54a1964a1dcba4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_split_app",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "induction l1;intros; (destruct l3;[destruct l4|];discriminate||(injection H;intros;subst)).",
                        "VernacExtend",
                        "af2ff6c801d4803ce1d3010d428fb556a5a6fff1"
                    ]
                },
                {
                    "command": [
                        "right;exists [];split;reflexivity.",
                        "VernacExtend",
                        "0081df2555d089223b56cff216d0a501dd88f15b"
                    ]
                },
                {
                    "command": [
                        "left;temp1.",
                        "VernacExtend",
                        "05df501298586aff27f145b7e6594374b3b7dd73"
                    ]
                },
                {
                    "command": [
                        "right;temp1.",
                        "VernacExtend",
                        "314cb8337e6d293756352ac625df7cbce0d8c5d4"
                    ]
                },
                {
                    "command": [
                        "destruct (IHl1 _ H0) as [(?&?&?)|(?&?&?)];subst.",
                        "VernacExtend",
                        "13f64d9a8813a797591dc9e97fa117530e435f02"
                    ]
                },
                {
                    "command": [
                        "left;temp1.",
                        "VernacExtend",
                        "05df501298586aff27f145b7e6594374b3b7dd73"
                    ]
                },
                {
                    "command": [
                        "right;temp1.",
                        "VernacExtend",
                        "314cb8337e6d293756352ac625df7cbce0d8c5d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_in_split_app",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros;apply in_split_app in H as [(?&?&?)|(?&?&?)];subst.",
                        "VernacExtend",
                        "fb21ad7a7b11f433c8691115d0178a965eebeb20"
                    ]
                },
                {
                    "command": [
                        "left;econstructor;split;reflexivity.",
                        "VernacExtend",
                        "d20077c19c617148bcd2f3fdfefaea6581ba14e9"
                    ]
                },
                {
                    "command": [
                        "destruct x;injection H;intros;subst.",
                        "VernacExtend",
                        "3627b7fdce24e966be10c61c138213fd641692fc"
                    ]
                },
                {
                    "command": [
                        "repeat (right||split||rewrite app_nil_r||reflexivity).",
                        "VernacExtend",
                        "3611775f1e5a2855302de8d9859e0fc00f3e3be0"
                    ]
                },
                {
                    "command": [
                        "right;left;econstructor;split;reflexivity.",
                        "VernacExtend",
                        "b0aa6d62a60e0bfc4cf1840d8215ac0047e67d27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "WeakL",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros;remember (\u03931++\u03932);revert \u03931 \u03932 Heql;temp3 H IHG IHG1 IHG2 Heql A0.",
                        "VernacExtend",
                        "d271ccbcbd688e63f65b51691bbfbc5bc791a86b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "WeakR",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros;remember (\u03941++\u03942);revert \u03941 \u03942 Heql;temp3 H IHG IHG1 IHG2 Heql A0.",
                        "VernacExtend",
                        "2ba55bc6ad5e439ad6ae2a57a7b7d2c131f7fc52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}