{
    "filename": "b_soundness.v",
    "coq_project": "propcalc",
    "vernac_cmds": [
        [
            "Require Export a_base Bool.",
            "VernacRequire",
            "35b333460c6b77d3375677c835ae1588598d1383"
        ],
        [
            "Export ListNotations.",
            "VernacImport",
            "00c95fe57e7ccc1d2086257523eea6835ba57682"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Module Type sound_mod (X: base_mod).",
            "VernacDeclareModuleType",
            "ba1f0442a78cb3969d0d30f1d362d437daef3fad"
        ],
        [
            "Import X.",
            "VernacImport",
            "12c13d78f948982652e2293e9356e7f310bf615e"
        ],
        [
            "Inductive PropF : Set := | Var : PropVars -> PropF | Bot : PropF | Conj : PropF -> PropF -> PropF | Disj : PropF -> PropF -> PropF | Impl : PropF -> PropF -> PropF .",
            "VernacInductive",
            "0a4cf48e83829bf81d4ccf398ee8c04c844c8d77"
        ],
        [
            "Notation \"# P\" := (Var P) (at level 1) : My_scope.",
            "VernacNotation",
            "12a22f624bb0cf7ef65ca44dda6a498b050e3902"
        ],
        [
            "Notation \"A \u2228 B\" := (Disj A B) (at level 15, right associativity) : My_scope.",
            "VernacNotation",
            "95b3e7129f75464e2044a80e0456969e9b008e44"
        ],
        [
            "Notation \"A \u2227 B\" := (Conj A B) (at level 15, right associativity) : My_scope.",
            "VernacNotation",
            "6ccfcdc0d1455b105f5cf3de3dd9ed5c707b2ffc"
        ],
        [
            "Notation \"A \u2192 B\" := (Impl A B) (at level 16, right associativity) : My_scope.",
            "VernacNotation",
            "89085d0e190edcf74e6defe9fe39090a08a1cdf9"
        ],
        [
            "Notation \"\u22a5\" := Bot (at level 0) : My_scope.",
            "VernacNotation",
            "6ba484ac3960ada72f479796c3485f2ee2800eda"
        ],
        [
            "Definition Neg A := A \u2192 \u22a5.",
            "VernacDefinition",
            "d16fd0c115228c67a3ad73b0b7a9b3d1b9cbf851"
        ],
        [
            "Notation \"\u00ac A\" := (Neg A) (at level 5) : My_scope.",
            "VernacNotation",
            "ddd7e1ef90e2cf5af45f9ee7c77f1587503090fd"
        ],
        [
            "Definition Top := \u00ac\u22a5.",
            "VernacDefinition",
            "47b60b1639be83fdcad9ee274d28f36757a40987"
        ],
        [
            "Notation \"\u22a4\" := Top (at level 0) : My_scope.",
            "VernacNotation",
            "44c628a6e1352b6f4932c004c116404eea3d57ea"
        ],
        [
            "Definition BiImpl A B := (A\u2192B)\u2227(B\u2192A).",
            "VernacDefinition",
            "27e1c9a798e2ae777496f292280214d7083f16f6"
        ],
        [
            "Notation \"A \u2194 B\" := (BiImpl A B) (at level 17, right associativity) : My_scope.",
            "VernacNotation",
            "9a7758f8a4aec8ca79384b810699c6856ce97d94"
        ],
        [
            "Fixpoint TrueQ v A : bool := match A with | # P => v P | \u22a5 => false | B \u2228 C => (TrueQ v B) || (TrueQ v C) | B \u2227 C => (TrueQ v B) && (TrueQ v C) | B \u2192 C => (negb (TrueQ v B)) || (TrueQ v C) end.",
            "VernacFixpoint",
            "80d792e583ddbcd19cfe57fd778d3951999317f1"
        ],
        [
            "Definition Satisfies v \u0393 := forall A, In A \u0393 -> Is_true (TrueQ v A).",
            "VernacDefinition",
            "7fb20927a836ef2d9ec75d681c21f805defdee7e"
        ],
        [
            "Definition Models \u0393 A := forall v,Satisfies v \u0393->Is_true (TrueQ v A).",
            "VernacDefinition",
            "7f6fcfbd2aaa4e391a3679263b2b09bdea945855"
        ],
        [
            "Notation \"\u0393 \u22a8 A\" := (Models \u0393 A) (at level 80).",
            "VernacNotation",
            "bb8073bd019d82bd96ce3252ca6e40e24d4a5607"
        ],
        [
            "Definition Valid A := [] \u22a8 A.",
            "VernacDefinition",
            "932479ae78c78af83572e3f9abb940647fe3be8b"
        ],
        [
            "Reserved Notation \"\u0393 \u22a2 A\" (at level 80).",
            "VernacSyntaxExtension",
            "524734ffe85f6deaadcd06b4b254086e0b32cc1c"
        ],
        [
            "Inductive Nc : list PropF-> PropF->Prop := | Nax : forall \u0393 A , In A \u0393 -> \u0393 \u22a2 A | ImpI : forall \u0393 A B, A::\u0393 \u22a2 B -> \u0393 \u22a2 A \u2192 B | ImpE : forall \u0393 A B, \u0393 \u22a2 A \u2192 B -> \u0393 \u22a2 A -> \u0393 \u22a2 B | BotC : forall \u0393 A , \u00acA::\u0393 \u22a2 \u22a5 -> \u0393 \u22a2 A | AndI : forall \u0393 A B, \u0393 \u22a2 A -> \u0393 \u22a2 B -> \u0393 \u22a2 A\u2227B | AndE1 : forall \u0393 A B, \u0393 \u22a2 A\u2227B -> \u0393 \u22a2 A | AndE2 : forall \u0393 A B, \u0393 \u22a2 A\u2227B -> \u0393 \u22a2 B | OrI1 : forall \u0393 A B, \u0393 \u22a2 A -> \u0393 \u22a2 A\u2228B | OrI2 : forall \u0393 A B, \u0393 \u22a2 B -> \u0393 \u22a2 A\u2228B | OrE : forall \u0393 A B C, \u0393 \u22a2 A\u2228B -> A::\u0393 \u22a2 C -> B::\u0393 \u22a2 C -> \u0393 \u22a2 C where \"\u0393 \u22a2 A\" := (Nc \u0393 A) : My_scope.",
            "VernacInductive",
            "9d294b4958b8656ce9a067a842ece9119e458768"
        ],
        [
            "Definition Provable A := [] \u22a2 A.",
            "VernacDefinition",
            "140ee578d3b684f3c56a61aa6e9b7a961cdc6be8"
        ],
        [
            "Definition Prop_Soundness := forall A,Provable A->Valid A.",
            "VernacDefinition",
            "560a5047caeb2d7d4ca107ecd369d0a754523b5c"
        ],
        [
            "Definition Prop_Completeness := forall A,Valid A->Provable A.",
            "VernacDefinition",
            "11409fbeda40ff91cf303c375b2a3079dc0b517e"
        ],
        [
            "Ltac mp := eapply ImpE.",
            "VernacExtend",
            "d43e96d7db7271164fe35df10bc0bd23383b217a"
        ],
        [
            "Ltac AddnilL := match goal with | |- _ ?\u0393 _ => change \u0393 with ([]++\u0393) end.",
            "VernacExtend",
            "05798cce64dbca2a6fb5e59f1ff70c53b46d3380"
        ],
        [
            "Ltac in_solve := intros;repeat (eassumption ||match goal with | H:In _ (_::_) |- _ => destruct H;[subst;try discriminate|] | H:In _ (_++_) |- _ => apply in_app_iff in H as [];subst | |- In _ (_++_) => apply in_app_iff;(left;in_solve;fail)||(right;in_solve;fail) end ||(once constructor;reflexivity) ||constructor 2).",
            "VernacExtend",
            "7a25686fd0fa8a85598551357159975f744a4838"
        ],
        [
            "Ltac is_ass := once econstructor;in_solve.",
            "VernacExtend",
            "bc0f8ce6bd7bb1ad810347f5db2d9df12341c086"
        ],
        [
            "Ltac case_bool v A := let HA := fresh \"H\" in (case_eq (TrueQ v A);intro HA;try rewrite HA in *;simpl in *;try trivial;try contradiction).",
            "VernacExtend",
            "2a5f5f78e2407b73dfd316c8eec72ade34444f9f"
        ],
        [
            "Local Ltac prove_satisfaction := intros ? K;destruct K;[subst;simpl; match goal with | [ H : TrueQ _ _ = _ |- _ ] => rewrite H end;exact I|auto].",
            "VernacExtend",
            "30e42f70c1a3dc5dc2f0ab7d22135db939351b4c"
        ],
        [
            "Lemma PropFeq_dec : forall (x y : PropF), {x = y}+{x <> y}.",
            "VernacStartTheoremProof",
            "5f9636f3c239199d16c35362074e9f7577712a1d"
        ],
        [
            "induction x;destruct y;try (right;discriminate); try (destruct (IHx1 y1);[destruct (IHx2 y2);[left;f_equal;assumption|]|]; right;injection;intros;contradiction).",
            "VernacExtend",
            "e734c6f7e2deab28509fcda84748e738b00a37fb"
        ],
        [
            "destruct (Varseq_dec p p0).",
            "VernacExtend",
            "b01d7a7ac2966d1a18c57f76d3d6056cb8a4b9a3"
        ],
        [
            "left;f_equal;assumption.",
            "VernacExtend",
            "b7e171cacdc079ce4cbd2abb3984b2745b28ba71"
        ],
        [
            "right;injection;intro;contradiction.",
            "VernacExtend",
            "d1dd76725988bf29a8c16f780f29289ff56f5231"
        ],
        [
            "left;reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Excluded_Middle : forall \u0393 A, \u0393 \u22a2 A\u2228\u00acA.",
            "VernacStartTheoremProof",
            "fbb5b4cbac9379c965a5f8af85e9f49c2a9ed9d5"
        ],
        [
            "intros;apply BotC;mp;[is_ass|apply OrI2;apply ImpI;mp;[is_ass|apply OrI1;is_ass]].",
            "VernacExtend",
            "d4ed6a6449e273582306f7782749ae9ed9dc7b35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weakening2 : forall \u0393 A, \u0393 \u22a2 A -> forall \u0394, (forall B, In B \u0393 -> In B \u0394) -> \u0394 \u22a2 A.",
            "VernacStartTheoremProof",
            "493bc3ab02ff03d1b0df4d7f88d27e8c1e412a36"
        ],
        [
            "induction 1;[constructor|constructor 2|econstructor 3|constructor 4|constructor 5|econstructor 6 |econstructor 7|constructor 8|constructor 9|econstructor 10];try eauto; [apply IHNc..|apply IHNc2|try apply IHNc3];intros;in_solve;eauto.",
            "VernacExtend",
            "dbf824535e5e2f78a33298f83edcb0a4adaca4e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weakening : forall \u0393 \u0394 A, \u0393 \u22a2 A -> \u0393++\u0394 \u22a2 A.",
            "VernacStartTheoremProof",
            "e989036bb6b4f1023a232286b9bfe4342f935326"
        ],
        [
            "intros;eapply weakening2;[eassumption|in_solve].",
            "VernacExtend",
            "469540df3cbe6bc0f090235ede16242851e52f60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma deduction : forall \u0393 A B, \u0393 \u22a2 A \u2192 B -> A::\u0393 \u22a2 B.",
            "VernacStartTheoremProof",
            "ef295bb75a327cec9a73ffaafebc00d4e89232e4"
        ],
        [
            "intros;eapply ImpE with A;[eapply weakening2;[eassumption|in_solve]|is_ass].",
            "VernacExtend",
            "fe3c52cdff93e520ddc035357a001154b099680b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prov_impl : forall A B, Provable (A \u2192 B)->forall \u0393, \u0393 \u22a2 A -> \u0393 \u22a2 B.",
            "VernacStartTheoremProof",
            "5f30ae0bea3f9dde72424c57e8a0fc67e585ccbc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "mp.",
            "VernacExtend",
            "2a1b5b04a9a1f20a40eeed23fcc52e57a2a2499e"
        ],
        [
            "AddnilL;apply weakening.",
            "VernacExtend",
            "0569d5a8f984824135d56031d515c66d177a0161"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac prov_impl_in IH := let H := fresh \"K\" in try (remember (prov_impl IH) as H eqn:HeqH;clear IH HeqH).",
            "VernacExtend",
            "de75d67331dbd37877c00a49089c1c19f0c8a72d"
        ],
        [
            "Theorem Soundness_general : forall A \u0393, \u0393 \u22a2 A -> \u0393 \u22a8 A.",
            "VernacStartTheoremProof",
            "a082df41eefe2e614ae824ab10f39dcdad1222e3"
        ],
        [
            "intros A \u0393 H0 v;induction H0;simpl;intros;auto; try simpl in IHNc;try simpl in IHNc1;try simpl in IHNc2; case_bool v A;try (case_bool v B;fail); try (apply IHNc||apply IHNc2;prove_satisfaction); case_bool v B;apply IHNc3;prove_satisfaction.",
            "VernacExtend",
            "7b0320af7811721a537bef68ce2265d5ab4e13ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Soundness : Prop_Soundness.",
            "VernacStartTheoremProof",
            "2effbb0130a0e3fad2636ed5fca79ea80f541a17"
        ],
        [
            "intros ? ? ? ?;eapply Soundness_general;eassumption.",
            "VernacExtend",
            "01c1ef8faa9757cf21476b791ff44d3d7ed17390"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End sound_mod.",
            "VernacEndSegment",
            "57bde719a7592f842c458ab57fff89a3c9c82c57"
        ]
    ],
    "proofs": [
        {
            "name": "PropFeq_dec",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "induction x;destruct y;try (right;discriminate); try (destruct (IHx1 y1);[destruct (IHx2 y2);[left;f_equal;assumption|]|]; right;injection;intros;contradiction).",
                        "VernacExtend",
                        "e734c6f7e2deab28509fcda84748e738b00a37fb"
                    ]
                },
                {
                    "command": [
                        "destruct (Varseq_dec p p0).",
                        "VernacExtend",
                        "b01d7a7ac2966d1a18c57f76d3d6056cb8a4b9a3"
                    ]
                },
                {
                    "command": [
                        "left;f_equal;assumption.",
                        "VernacExtend",
                        "b7e171cacdc079ce4cbd2abb3984b2745b28ba71"
                    ]
                },
                {
                    "command": [
                        "right;injection;intro;contradiction.",
                        "VernacExtend",
                        "d1dd76725988bf29a8c16f780f29289ff56f5231"
                    ]
                },
                {
                    "command": [
                        "left;reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Excluded_Middle",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros;apply BotC;mp;[is_ass|apply OrI2;apply ImpI;mp;[is_ass|apply OrI1;is_ass]].",
                        "VernacExtend",
                        "d4ed6a6449e273582306f7782749ae9ed9dc7b35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weakening2",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "induction 1;[constructor|constructor 2|econstructor 3|constructor 4|constructor 5|econstructor 6 |econstructor 7|constructor 8|constructor 9|econstructor 10];try eauto; [apply IHNc..|apply IHNc2|try apply IHNc3];intros;in_solve;eauto.",
                        "VernacExtend",
                        "dbf824535e5e2f78a33298f83edcb0a4adaca4e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weakening",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros;eapply weakening2;[eassumption|in_solve].",
                        "VernacExtend",
                        "469540df3cbe6bc0f090235ede16242851e52f60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "deduction",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros;eapply ImpE with A;[eapply weakening2;[eassumption|in_solve]|is_ass].",
                        "VernacExtend",
                        "fe3c52cdff93e520ddc035357a001154b099680b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Soundness_general",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros A \u0393 H0 v;induction H0;simpl;intros;auto; try simpl in IHNc;try simpl in IHNc1;try simpl in IHNc2; case_bool v A;try (case_bool v B;fail); try (apply IHNc||apply IHNc2;prove_satisfaction); case_bool v B;apply IHNc3;prove_satisfaction.",
                        "VernacExtend",
                        "7b0320af7811721a537bef68ce2265d5ab4e13ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Soundness",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ?;eapply Soundness_general;eassumption.",
                        "VernacExtend",
                        "01c1ef8faa9757cf21476b791ff44d3d7ed17390"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}