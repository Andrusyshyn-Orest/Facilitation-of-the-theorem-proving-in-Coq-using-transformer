{
    "filename": "Cantor_Bernstein.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Parts2.",
            "VernacRequire",
            "a83f2a70b5bd814cb1789cfdf7e823ee92ad387a"
        ],
        [
            "Comments \"We prove that if there is an injection from A to B, and an injection from B to A\".",
            "VernacComments",
            "6c7c42fdb348dd9cd24abe6f65ce85d713fc8936"
        ],
        [
            "Comments \"then there is a bijection between A and B.\".",
            "VernacComments",
            "72df6a6cbf62b0855650bb63c193032ca784352a"
        ],
        [
            "Section Cantor_Bernstein.",
            "VernacBeginSection",
            "51d26092c6a095d5795b07e88e286c1f4617e0fe"
        ],
        [
            "Variable E F : Setoid.",
            "VernacAssumption",
            "755ec368a0a5e097d35a6ccfa11e3d9467037cc1"
        ],
        [
            "Variable f : MAP E F.",
            "VernacAssumption",
            "0ec81e8c49c9e3f9b380a4396344354dec499939"
        ],
        [
            "Variable g : MAP F E.",
            "VernacAssumption",
            "3fa1ec3ff19cab254f5a5c0febfbdf7de2c128e1"
        ],
        [
            "Hypothesis finj : injective f.",
            "VernacAssumption",
            "fc1c6015e588385293e1e8b65d8d0b33f4ec0cd5"
        ],
        [
            "Hypothesis ginj : injective g.",
            "VernacAssumption",
            "e982167ba6747a72282f001cbb2f337bb9c2c93e"
        ],
        [
            "Let h (X : part_set E) := compl (image g (compl (image f X))).",
            "VernacDefinition",
            "36a282f3516fc24884b42f21e7e3fd8665bb4020"
        ],
        [
            "Let h_incr : forall A B : part_set E, included A B -> included (h A) (h B).",
            "VernacDefinition",
            "f3e6b94a2e29e12cdfe567f682007dff3c34a890"
        ],
        [
            "unfold h in |- *.",
            "VernacExtend",
            "7c00b91fd2810f4ab655485683b5fa84338bdde5"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve h_incr: algebra.",
            "VernacHints",
            "dfd3e6c67183a542d7ffa394a0eddc8c641aaa8a"
        ],
        [
            "Let PX : part_set (part_set E).",
            "VernacDefinition",
            "91c122a5a48237e0a204aa69e0a86335f0202bff"
        ],
        [
            "apply (Build_Predicate (Pred_fun:=fun A : part_set E => included A (h A))).",
            "VernacExtend",
            "55e308a7748f3ddef43bc169baa1df4b3ae0f8e5"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "apply included_comp with x (h x); auto with algebra.",
            "VernacExtend",
            "73eca11c532c29c691f6f3e48e3e5367c4656e1b"
        ],
        [
            "unfold h in |- *.",
            "VernacExtend",
            "7c00b91fd2810f4ab655485683b5fa84338bdde5"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Let X := union_part PX.",
            "VernacDefinition",
            "35c0c491f5fcb766e43b79f189206a7baf71fb4e"
        ],
        [
            "Let XhX : included X (h X).",
            "VernacDefinition",
            "89b8aa33f5fe3001071cea5c23b1520299bf9aea"
        ],
        [
            "unfold X in |- *.",
            "VernacExtend",
            "c78419a47346ebcf47d37e322df77d31130e80f7"
        ],
        [
            "apply union_part_upper_bound.",
            "VernacExtend",
            "a1bc59f1384f5944a5fb21f387ce8e7d2c88b85f"
        ],
        [
            "intros A H'; try assumption.",
            "VernacExtend",
            "720ae1f49449b60e47d9a65a03bb739117c3fea6"
        ],
        [
            "apply included_trans with (h A); auto with algebra.",
            "VernacExtend",
            "ccbe688db59d474dfe5a8887e602f6d8a50a09a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let hXX : included (h X) X.",
            "VernacDefinition",
            "04d1a87b4809e05a001114fb9d744558369bd95a"
        ],
        [
            "unfold X in |- *.",
            "VernacExtend",
            "c78419a47346ebcf47d37e322df77d31130e80f7"
        ],
        [
            "apply union_part_included.",
            "VernacExtend",
            "fe8b002d370714cbdce272b8eea1cc3f38cb0067"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply h_incr.",
            "VernacExtend",
            "0d34aa67ebd2bfc800a6f6d4b70b8b3a1ba9ff3c"
        ],
        [
            "exact XhX.",
            "VernacExtend",
            "38718b68fa68c5019f06a61aadb8b0a281105de4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let PXeq : Equal (h X) X.",
            "VernacDefinition",
            "3cc5c3fe686b41129b5d70d8a4c327d42041bf69"
        ],
        [
            "apply included_antisym.",
            "VernacExtend",
            "5aaad01710549d176b548cb33143330f6a33c27f"
        ],
        [
            "exact hXX.",
            "VernacExtend",
            "6a072836950abeaed6e86d9d50e6f874145c2888"
        ],
        [
            "exact XhX.",
            "VernacExtend",
            "38718b68fa68c5019f06a61aadb8b0a281105de4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve PXeq hXX XhX: algebra.",
            "VernacHints",
            "1f8d4a10edae953f384be101083ad614019ad1b7"
        ],
        [
            "Let img : Equal (image g (compl (image f X))) (compl X).",
            "VernacDefinition",
            "0fa4fdf0cece88f2826fba323751696b0ff80f58"
        ],
        [
            "apply Trans with (compl (h X)); auto with algebra.",
            "VernacExtend",
            "4835969c282cedc03d95f0a7beafbbee12388a41"
        ],
        [
            "unfold h in |- *; auto with algebra.",
            "VernacExtend",
            "e97458ff34a1a177b5d29c0a4cb49fe42a1bf841"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve img: algebra.",
            "VernacHints",
            "51d34e62ae24466d9b7c83fba00257163f609c3b"
        ],
        [
            "Hypothesis partial_section : forall (E F : Setoid) (f : MAP E F), injective f -> exists g : MAP F E, Equal (comp_map_map g f) (Id E).",
            "VernacAssumption",
            "fa296d28e9407246839990cff3a4c7d9b22b4cfa"
        ],
        [
            "Hypothesis map_extend : forall (E F : Setoid) (f g : MAP E F) (A : part_set E), exists b : MAP E F, (forall x : E, in_part x A -> Equal (b x) (f x)) /\\ (forall x : E, ~ in_part x A -> Equal (b x) (g x)).",
            "VernacAssumption",
            "6636fb6bf7f3172689ca2628a870b650bfeb90bb"
        ],
        [
            "Theorem Cantor_Berstein : exists b : MAP E F, bijective b.",
            "VernacStartTheoremProof",
            "a082f45209cb21cb72ec32357700b97ecda94e6d"
        ],
        [
            "case (partial_section ginj).",
            "VernacExtend",
            "7eed620ef5ed1dbb4537636a68e1a6a86a143bec"
        ],
        [
            "intros g1 H'; try assumption.",
            "VernacExtend",
            "bae140d654e88bf4d5520fd892a83a7af5509fba"
        ],
        [
            "case (map_extend f g1 X).",
            "VernacExtend",
            "de9cefc1299bf1739778c1f5849efb001d7fd000"
        ],
        [
            "intros b H'1; try assumption.",
            "VernacExtend",
            "113cf6c4a394eaa2625eae1bcaa30090643d765e"
        ],
        [
            "exists b; try assumption.",
            "VernacExtend",
            "ef2c81c655e7d1c6f62cc3d768e7fc3fad42b07d"
        ],
        [
            "elim H'1; intros H'2 H'3; try exact H'2; clear H'1.",
            "VernacExtend",
            "83205607ef2e90fb6fd0bf1b7b65c0716bbe633b"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y H'0; try assumption.",
            "VernacExtend",
            "66bf4c409c1f828951ac1d0a512867253499b3c8"
        ],
        [
            "case (compl_not_compl X x); intros.",
            "VernacExtend",
            "788c31579c0f8f0020346a9a66b75f708de16494"
        ],
        [
            "case (compl_not_compl X y); intros.",
            "VernacExtend",
            "3387b1cd743e27bf40decfe6dd01b806e384d312"
        ],
        [
            "apply finj.",
            "VernacExtend",
            "4b7b5c5a750ef3d793b6bf7fdd855dbfc23cf8bf"
        ],
        [
            "apply Trans with (b y); auto with algebra.",
            "VernacExtend",
            "d0e66c6dd3275b80430f4afa14008f987c058d7d"
        ],
        [
            "apply Trans with (b x); auto with algebra.",
            "VernacExtend",
            "1f310b1d490ba81c9558db6719a6fe7e6ee240dd"
        ],
        [
            "apply Sym; auto with algebra.",
            "VernacExtend",
            "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
        ],
        [
            "cut (in_part y (image g (compl (image f X)))).",
            "VernacExtend",
            "9960b50018e1b69f3f0dd12b1961984839071499"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "generalize (image_in H'1).",
            "VernacExtend",
            "0bcabdc28586ef52cd2517f0a11f98b8dbb1bfa4"
        ],
        [
            "intros H'4; try assumption.",
            "VernacExtend",
            "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
        ],
        [
            "elim H'4; intros x0 E0; try exact E0; clear H'4.",
            "VernacExtend",
            "9de0839aa2cee9e40a877e0257f7a46f2f7c7894"
        ],
        [
            "elim E0; intros H'4 H'5; try exact H'5; clear E0.",
            "VernacExtend",
            "cdecc6854f660471af7850948d2e1bccfe3d461c"
        ],
        [
            "absurd (in_part x0 (compl (image f X))); auto with algebra.",
            "VernacExtend",
            "4a087f4e6257448947e2c539177a59d44394adc0"
        ],
        [
            "apply not_in_comp_l with (Ap (Id F) x0); auto with algebra.",
            "VernacExtend",
            "1312ea8dba90f48b4f742d7f9f7acc165eeadc5f"
        ],
        [
            "apply not_in_comp_l with (Ap (comp_map_map g1 g) x0); auto with algebra.",
            "VernacExtend",
            "20a91fdcb0928a1cf0b5c21f4a93097056180f33"
        ],
        [
            "apply not_in_comp_l with (Ap g1 (Ap g x0)); auto with algebra.",
            "VernacExtend",
            "14a0a38520008781cfc2d4f5c78499869aafa90c"
        ],
        [
            "apply not_in_comp_l with (Ap g1 y); auto with algebra.",
            "VernacExtend",
            "0718e58423b893c68f305f872370d8038fcbcfc1"
        ],
        [
            "apply not_in_comp_l with (Ap b y); auto with algebra.",
            "VernacExtend",
            "dbd4d34c074db772061c8d3aea02c48f83166b50"
        ],
        [
            "apply not_in_comp_l with (Ap b x); auto with algebra.",
            "VernacExtend",
            "9044ba9e264bd3c17a2d643c695d1807cb982f26"
        ],
        [
            "apply not_in_comp_l with (Ap f x); auto with algebra.",
            "VernacExtend",
            "c00d97a44434361fa71d9ce11a643f4ed04d4edc"
        ],
        [
            "apply Sym; auto with algebra.",
            "VernacExtend",
            "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
        ],
        [
            "apply in_part_comp_r with (compl X); auto with algebra.",
            "VernacExtend",
            "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
        ],
        [
            "case (compl_not_compl X y); intros.",
            "VernacExtend",
            "3387b1cd743e27bf40decfe6dd01b806e384d312"
        ],
        [
            "cut (in_part x (image g (compl (image f X)))).",
            "VernacExtend",
            "f4cbfa7fa999625eb139eacab4750a19e54f9403"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "generalize (image_in H'1).",
            "VernacExtend",
            "0bcabdc28586ef52cd2517f0a11f98b8dbb1bfa4"
        ],
        [
            "intros H'4; try assumption.",
            "VernacExtend",
            "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
        ],
        [
            "elim H'4; intros x0 E0; try exact E0; clear H'4.",
            "VernacExtend",
            "9de0839aa2cee9e40a877e0257f7a46f2f7c7894"
        ],
        [
            "elim E0; intros H'4 H'5; try exact H'5; clear E0.",
            "VernacExtend",
            "cdecc6854f660471af7850948d2e1bccfe3d461c"
        ],
        [
            "absurd (in_part x0 (compl (image f X))); auto with algebra.",
            "VernacExtend",
            "4a087f4e6257448947e2c539177a59d44394adc0"
        ],
        [
            "apply not_in_comp_l with (Ap (Id F) x0); auto with algebra.",
            "VernacExtend",
            "1312ea8dba90f48b4f742d7f9f7acc165eeadc5f"
        ],
        [
            "apply not_in_comp_l with (Ap (comp_map_map g1 g) x0); auto with algebra.",
            "VernacExtend",
            "20a91fdcb0928a1cf0b5c21f4a93097056180f33"
        ],
        [
            "apply not_in_comp_l with (Ap g1 (Ap g x0)); auto with algebra.",
            "VernacExtend",
            "14a0a38520008781cfc2d4f5c78499869aafa90c"
        ],
        [
            "apply not_in_comp_l with (Ap g1 x); auto with algebra.",
            "VernacExtend",
            "6cb79cf71af29cbea627f07f1673d4768c97ca5e"
        ],
        [
            "apply not_in_comp_l with (Ap b x); auto with algebra.",
            "VernacExtend",
            "9044ba9e264bd3c17a2d643c695d1807cb982f26"
        ],
        [
            "apply not_in_comp_l with (Ap b y); auto with algebra.",
            "VernacExtend",
            "dbd4d34c074db772061c8d3aea02c48f83166b50"
        ],
        [
            "apply not_in_comp_l with (Ap f y); auto with algebra.",
            "VernacExtend",
            "6df7543662428cc852d5120302ab2b27dca4937a"
        ],
        [
            "apply Sym; auto with algebra.",
            "VernacExtend",
            "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
        ],
        [
            "apply in_part_comp_r with (compl X); auto with algebra.",
            "VernacExtend",
            "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
        ],
        [
            "cut (in_part x (image g (compl (image f X)))).",
            "VernacExtend",
            "f4cbfa7fa999625eb139eacab4750a19e54f9403"
        ],
        [
            "cut (in_part y (image g (compl (image f X)))).",
            "VernacExtend",
            "9960b50018e1b69f3f0dd12b1961984839071499"
        ],
        [
            "intros H'1 H'4; try assumption.",
            "VernacExtend",
            "fbdb900d6576ca1306b04801208e3ddc368d418d"
        ],
        [
            "generalize (image_in H'1).",
            "VernacExtend",
            "0bcabdc28586ef52cd2517f0a11f98b8dbb1bfa4"
        ],
        [
            "generalize (image_in H'4).",
            "VernacExtend",
            "97b09c429d535bccc3444e42fd4354505d5dbe4e"
        ],
        [
            "intros H'5 H'6; try assumption.",
            "VernacExtend",
            "430e865867d45069d1a54ea85eda323d56be9ba3"
        ],
        [
            "elim H'6; intros x0 E0; elim E0; intros H'7 H'8; try exact H'7; clear E0 H'6.",
            "VernacExtend",
            "ee85caa690e82e49a97f880b435d58959c214f02"
        ],
        [
            "elim H'5; intros x1 E0; elim E0; intros H'6 H'9; try exact H'6; clear E0 H'5.",
            "VernacExtend",
            "da0002196c46dc05e72b91ee5c27663fda6a3e25"
        ],
        [
            "apply Trans with (Ap g x1); auto with algebra.",
            "VernacExtend",
            "964d8b257a74490aaa1108d3b7ad29690efd1a37"
        ],
        [
            "apply Trans with (Ap g x0); auto with algebra.",
            "VernacExtend",
            "9ad686b03e5bf8f57a23af57e4d3ff0d89d8a1f5"
        ],
        [
            "cut (Equal x1 x0).",
            "VernacExtend",
            "4fbcea5352a7af67f92dc9c9faaf37d31cf5e2a6"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "cut (Equal (Ap (Id F) x1) (Ap (Id F) x0)).",
            "VernacExtend",
            "66b5b6ef47c6561718fc5a6932df833bc7778153"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "cut (Equal (Ap (comp_map_map g1 g) x1) (Ap (comp_map_map g1 g) x0)).",
            "VernacExtend",
            "a11dd1521290fef287d0a2cc4122393ef5473d98"
        ],
        [
            "intros H'5; try assumption.",
            "VernacExtend",
            "2df87240997c336de9008de60a45c0f383e7de08"
        ],
        [
            "apply Trans with (Ap (comp_map_map g1 g) x0); auto with algebra.",
            "VernacExtend",
            "5706b1fdddb88de22a84e071af842f16695418d8"
        ],
        [
            "apply Trans with (Ap (comp_map_map g1 g) x1); auto with algebra.",
            "VernacExtend",
            "25a5de0e0bfbf69d7eb01e7b81a5e54eea22609a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold comp_map_fun in |- *.",
            "VernacExtend",
            "bf09c747c7184fd7f9e6e096f3a9853a912f8318"
        ],
        [
            "apply Trans with (Ap g1 x); auto with algebra.",
            "VernacExtend",
            "9372d97dfedd99ad1a75b4ff95710f25daee6383"
        ],
        [
            "apply Trans with (Ap g1 y); auto with algebra.",
            "VernacExtend",
            "6c5c35dc41451e50e3615d6e1030edb5c8778ec8"
        ],
        [
            "apply Trans with (Ap b x); auto with algebra.",
            "VernacExtend",
            "80aa9b028463230201da9269cb3c317a3aeec673"
        ],
        [
            "apply Sym; auto with algebra.",
            "VernacExtend",
            "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
        ],
        [
            "apply Trans with (Ap b y); auto with algebra.",
            "VernacExtend",
            "501c81122525b0aa80c91104b25dcf7aba861a61"
        ],
        [
            "apply in_part_comp_r with (compl X); auto with algebra.",
            "VernacExtend",
            "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
        ],
        [
            "apply in_part_comp_r with (compl X); auto with algebra.",
            "VernacExtend",
            "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros y; try assumption.",
            "VernacExtend",
            "e11f23bfb85db8a037ca5ace63604a931ae2752a"
        ],
        [
            "case (compl_not_compl (image f X) y); intros.",
            "VernacExtend",
            "09b9839e174b2dc02d07c3e25abf184e28c0848b"
        ],
        [
            "generalize (image_in H).",
            "VernacExtend",
            "7192970259ee55168c58dcf0d123cbd19fd0eb9c"
        ],
        [
            "intros H'0; try assumption.",
            "VernacExtend",
            "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
        ],
        [
            "elim H'0; intros x E0; elim E0; intros H'1 H'4; try exact H'1; clear E0 H'0.",
            "VernacExtend",
            "d4eed5f001ed4fc793dd85862b8aa7a6d9b55531"
        ],
        [
            "exists x; try assumption.",
            "VernacExtend",
            "a251c410f0ab72130a5a312ded511c093841a93c"
        ],
        [
            "apply Trans with (Ap f x); auto with algebra.",
            "VernacExtend",
            "02cf64c07de1d12d18c6ab7e1c90a6d51a38d8e8"
        ],
        [
            "apply Sym; auto with algebra.",
            "VernacExtend",
            "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
        ],
        [
            "exists (g y); try assumption.",
            "VernacExtend",
            "910ba078525be3a677f2ef0a799ffc9c46500838"
        ],
        [
            "apply Trans with (Ap g1 (Ap g y)); auto with algebra.",
            "VernacExtend",
            "e920077da50a0aef984806edadd2f8019f6c451b"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply Trans with (Ap (Id F) y); auto with algebra.",
            "VernacExtend",
            "21ebe6f11119f5d9ae6651a58dacbb0ad13a9f42"
        ],
        [
            "apply Trans with (Ap (comp_map_map g1 g) y); auto with algebra.",
            "VernacExtend",
            "b7dcbba9e52f93bf6d0183d771c517d4c75799c4"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply H'3.",
            "VernacExtend",
            "157087ee27cbbeee4a92c1b9743341d04271c1bb"
        ],
        [
            "cut (in_part (Ap g y) (compl X)).",
            "VernacExtend",
            "cf540244a2d0e66ac3ac31ade404ef6a324ac852"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply in_part_comp_r with (image g (compl (image f X))); auto with algebra.",
            "VernacExtend",
            "03a6f1b0f5d2693a94f8672ebcc6bd22c1a2df17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Cantor_Bernstein.",
            "VernacEndSegment",
            "7a863b4bde40dbb50d08c9886fee6294a21fcca6"
        ]
    ],
    "proofs": [
        {
            "name": "h_incr",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold h in |- *.",
                        "VernacExtend",
                        "7c00b91fd2810f4ab655485683b5fa84338bdde5"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PX",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "apply (Build_Predicate (Pred_fun:=fun A : part_set E => included A (h A))).",
                        "VernacExtend",
                        "55e308a7748f3ddef43bc169baa1df4b3ae0f8e5"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "apply included_comp with x (h x); auto with algebra.",
                        "VernacExtend",
                        "73eca11c532c29c691f6f3e48e3e5367c4656e1b"
                    ]
                },
                {
                    "command": [
                        "unfold h in |- *.",
                        "VernacExtend",
                        "7c00b91fd2810f4ab655485683b5fa84338bdde5"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "XhX",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold X in |- *.",
                        "VernacExtend",
                        "c78419a47346ebcf47d37e322df77d31130e80f7"
                    ]
                },
                {
                    "command": [
                        "apply union_part_upper_bound.",
                        "VernacExtend",
                        "a1bc59f1384f5944a5fb21f387ce8e7d2c88b85f"
                    ]
                },
                {
                    "command": [
                        "intros A H'; try assumption.",
                        "VernacExtend",
                        "720ae1f49449b60e47d9a65a03bb739117c3fea6"
                    ]
                },
                {
                    "command": [
                        "apply included_trans with (h A); auto with algebra.",
                        "VernacExtend",
                        "ccbe688db59d474dfe5a8887e602f6d8a50a09a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hXX",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "unfold X in |- *.",
                        "VernacExtend",
                        "c78419a47346ebcf47d37e322df77d31130e80f7"
                    ]
                },
                {
                    "command": [
                        "apply union_part_included.",
                        "VernacExtend",
                        "fe8b002d370714cbdce272b8eea1cc3f38cb0067"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply h_incr.",
                        "VernacExtend",
                        "0d34aa67ebd2bfc800a6f6d4b70b8b3a1ba9ff3c"
                    ]
                },
                {
                    "command": [
                        "exact XhX.",
                        "VernacExtend",
                        "38718b68fa68c5019f06a61aadb8b0a281105de4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PXeq",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "apply included_antisym.",
                        "VernacExtend",
                        "5aaad01710549d176b548cb33143330f6a33c27f"
                    ]
                },
                {
                    "command": [
                        "exact hXX.",
                        "VernacExtend",
                        "6a072836950abeaed6e86d9d50e6f874145c2888"
                    ]
                },
                {
                    "command": [
                        "exact XhX.",
                        "VernacExtend",
                        "38718b68fa68c5019f06a61aadb8b0a281105de4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "img",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "apply Trans with (compl (h X)); auto with algebra.",
                        "VernacExtend",
                        "4835969c282cedc03d95f0a7beafbbee12388a41"
                    ]
                },
                {
                    "command": [
                        "unfold h in |- *; auto with algebra.",
                        "VernacExtend",
                        "e97458ff34a1a177b5d29c0a4cb49fe42a1bf841"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cantor_Berstein",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "case (partial_section ginj).",
                        "VernacExtend",
                        "7eed620ef5ed1dbb4537636a68e1a6a86a143bec"
                    ]
                },
                {
                    "command": [
                        "intros g1 H'; try assumption.",
                        "VernacExtend",
                        "bae140d654e88bf4d5520fd892a83a7af5509fba"
                    ]
                },
                {
                    "command": [
                        "case (map_extend f g1 X).",
                        "VernacExtend",
                        "de9cefc1299bf1739778c1f5849efb001d7fd000"
                    ]
                },
                {
                    "command": [
                        "intros b H'1; try assumption.",
                        "VernacExtend",
                        "113cf6c4a394eaa2625eae1bcaa30090643d765e"
                    ]
                },
                {
                    "command": [
                        "exists b; try assumption.",
                        "VernacExtend",
                        "ef2c81c655e7d1c6f62cc3d768e7fc3fad42b07d"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros H'2 H'3; try exact H'2; clear H'1.",
                        "VernacExtend",
                        "83205607ef2e90fb6fd0bf1b7b65c0716bbe633b"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y H'0; try assumption.",
                        "VernacExtend",
                        "66bf4c409c1f828951ac1d0a512867253499b3c8"
                    ]
                },
                {
                    "command": [
                        "case (compl_not_compl X x); intros.",
                        "VernacExtend",
                        "788c31579c0f8f0020346a9a66b75f708de16494"
                    ]
                },
                {
                    "command": [
                        "case (compl_not_compl X y); intros.",
                        "VernacExtend",
                        "3387b1cd743e27bf40decfe6dd01b806e384d312"
                    ]
                },
                {
                    "command": [
                        "apply finj.",
                        "VernacExtend",
                        "4b7b5c5a750ef3d793b6bf7fdd855dbfc23cf8bf"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (b y); auto with algebra.",
                        "VernacExtend",
                        "d0e66c6dd3275b80430f4afa14008f987c058d7d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (b x); auto with algebra.",
                        "VernacExtend",
                        "1f310b1d490ba81c9558db6719a6fe7e6ee240dd"
                    ]
                },
                {
                    "command": [
                        "apply Sym; auto with algebra.",
                        "VernacExtend",
                        "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
                    ]
                },
                {
                    "command": [
                        "cut (in_part y (image g (compl (image f X)))).",
                        "VernacExtend",
                        "9960b50018e1b69f3f0dd12b1961984839071499"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "generalize (image_in H'1).",
                        "VernacExtend",
                        "0bcabdc28586ef52cd2517f0a11f98b8dbb1bfa4"
                    ]
                },
                {
                    "command": [
                        "intros H'4; try assumption.",
                        "VernacExtend",
                        "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
                    ]
                },
                {
                    "command": [
                        "elim H'4; intros x0 E0; try exact E0; clear H'4.",
                        "VernacExtend",
                        "9de0839aa2cee9e40a877e0257f7a46f2f7c7894"
                    ]
                },
                {
                    "command": [
                        "elim E0; intros H'4 H'5; try exact H'5; clear E0.",
                        "VernacExtend",
                        "cdecc6854f660471af7850948d2e1bccfe3d461c"
                    ]
                },
                {
                    "command": [
                        "absurd (in_part x0 (compl (image f X))); auto with algebra.",
                        "VernacExtend",
                        "4a087f4e6257448947e2c539177a59d44394adc0"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap (Id F) x0); auto with algebra.",
                        "VernacExtend",
                        "1312ea8dba90f48b4f742d7f9f7acc165eeadc5f"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap (comp_map_map g1 g) x0); auto with algebra.",
                        "VernacExtend",
                        "20a91fdcb0928a1cf0b5c21f4a93097056180f33"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap g1 (Ap g x0)); auto with algebra.",
                        "VernacExtend",
                        "14a0a38520008781cfc2d4f5c78499869aafa90c"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap g1 y); auto with algebra.",
                        "VernacExtend",
                        "0718e58423b893c68f305f872370d8038fcbcfc1"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap b y); auto with algebra.",
                        "VernacExtend",
                        "dbd4d34c074db772061c8d3aea02c48f83166b50"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap b x); auto with algebra.",
                        "VernacExtend",
                        "9044ba9e264bd3c17a2d643c695d1807cb982f26"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap f x); auto with algebra.",
                        "VernacExtend",
                        "c00d97a44434361fa71d9ce11a643f4ed04d4edc"
                    ]
                },
                {
                    "command": [
                        "apply Sym; auto with algebra.",
                        "VernacExtend",
                        "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (compl X); auto with algebra.",
                        "VernacExtend",
                        "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
                    ]
                },
                {
                    "command": [
                        "case (compl_not_compl X y); intros.",
                        "VernacExtend",
                        "3387b1cd743e27bf40decfe6dd01b806e384d312"
                    ]
                },
                {
                    "command": [
                        "cut (in_part x (image g (compl (image f X)))).",
                        "VernacExtend",
                        "f4cbfa7fa999625eb139eacab4750a19e54f9403"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "generalize (image_in H'1).",
                        "VernacExtend",
                        "0bcabdc28586ef52cd2517f0a11f98b8dbb1bfa4"
                    ]
                },
                {
                    "command": [
                        "intros H'4; try assumption.",
                        "VernacExtend",
                        "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
                    ]
                },
                {
                    "command": [
                        "elim H'4; intros x0 E0; try exact E0; clear H'4.",
                        "VernacExtend",
                        "9de0839aa2cee9e40a877e0257f7a46f2f7c7894"
                    ]
                },
                {
                    "command": [
                        "elim E0; intros H'4 H'5; try exact H'5; clear E0.",
                        "VernacExtend",
                        "cdecc6854f660471af7850948d2e1bccfe3d461c"
                    ]
                },
                {
                    "command": [
                        "absurd (in_part x0 (compl (image f X))); auto with algebra.",
                        "VernacExtend",
                        "4a087f4e6257448947e2c539177a59d44394adc0"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap (Id F) x0); auto with algebra.",
                        "VernacExtend",
                        "1312ea8dba90f48b4f742d7f9f7acc165eeadc5f"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap (comp_map_map g1 g) x0); auto with algebra.",
                        "VernacExtend",
                        "20a91fdcb0928a1cf0b5c21f4a93097056180f33"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap g1 (Ap g x0)); auto with algebra.",
                        "VernacExtend",
                        "14a0a38520008781cfc2d4f5c78499869aafa90c"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap g1 x); auto with algebra.",
                        "VernacExtend",
                        "6cb79cf71af29cbea627f07f1673d4768c97ca5e"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap b x); auto with algebra.",
                        "VernacExtend",
                        "9044ba9e264bd3c17a2d643c695d1807cb982f26"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap b y); auto with algebra.",
                        "VernacExtend",
                        "dbd4d34c074db772061c8d3aea02c48f83166b50"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with (Ap f y); auto with algebra.",
                        "VernacExtend",
                        "6df7543662428cc852d5120302ab2b27dca4937a"
                    ]
                },
                {
                    "command": [
                        "apply Sym; auto with algebra.",
                        "VernacExtend",
                        "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (compl X); auto with algebra.",
                        "VernacExtend",
                        "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
                    ]
                },
                {
                    "command": [
                        "cut (in_part x (image g (compl (image f X)))).",
                        "VernacExtend",
                        "f4cbfa7fa999625eb139eacab4750a19e54f9403"
                    ]
                },
                {
                    "command": [
                        "cut (in_part y (image g (compl (image f X)))).",
                        "VernacExtend",
                        "9960b50018e1b69f3f0dd12b1961984839071499"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'4; try assumption.",
                        "VernacExtend",
                        "fbdb900d6576ca1306b04801208e3ddc368d418d"
                    ]
                },
                {
                    "command": [
                        "generalize (image_in H'1).",
                        "VernacExtend",
                        "0bcabdc28586ef52cd2517f0a11f98b8dbb1bfa4"
                    ]
                },
                {
                    "command": [
                        "generalize (image_in H'4).",
                        "VernacExtend",
                        "97b09c429d535bccc3444e42fd4354505d5dbe4e"
                    ]
                },
                {
                    "command": [
                        "intros H'5 H'6; try assumption.",
                        "VernacExtend",
                        "430e865867d45069d1a54ea85eda323d56be9ba3"
                    ]
                },
                {
                    "command": [
                        "elim H'6; intros x0 E0; elim E0; intros H'7 H'8; try exact H'7; clear E0 H'6.",
                        "VernacExtend",
                        "ee85caa690e82e49a97f880b435d58959c214f02"
                    ]
                },
                {
                    "command": [
                        "elim H'5; intros x1 E0; elim E0; intros H'6 H'9; try exact H'6; clear E0 H'5.",
                        "VernacExtend",
                        "da0002196c46dc05e72b91ee5c27663fda6a3e25"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap g x1); auto with algebra.",
                        "VernacExtend",
                        "964d8b257a74490aaa1108d3b7ad29690efd1a37"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap g x0); auto with algebra.",
                        "VernacExtend",
                        "9ad686b03e5bf8f57a23af57e4d3ff0d89d8a1f5"
                    ]
                },
                {
                    "command": [
                        "cut (Equal x1 x0).",
                        "VernacExtend",
                        "4fbcea5352a7af67f92dc9c9faaf37d31cf5e2a6"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (Ap (Id F) x1) (Ap (Id F) x0)).",
                        "VernacExtend",
                        "66b5b6ef47c6561718fc5a6932df833bc7778153"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (Ap (comp_map_map g1 g) x1) (Ap (comp_map_map g1 g) x0)).",
                        "VernacExtend",
                        "a11dd1521290fef287d0a2cc4122393ef5473d98"
                    ]
                },
                {
                    "command": [
                        "intros H'5; try assumption.",
                        "VernacExtend",
                        "2df87240997c336de9008de60a45c0f383e7de08"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap (comp_map_map g1 g) x0); auto with algebra.",
                        "VernacExtend",
                        "5706b1fdddb88de22a84e071af842f16695418d8"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap (comp_map_map g1 g) x1); auto with algebra.",
                        "VernacExtend",
                        "25a5de0e0bfbf69d7eb01e7b81a5e54eea22609a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold comp_map_fun in |- *.",
                        "VernacExtend",
                        "bf09c747c7184fd7f9e6e096f3a9853a912f8318"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap g1 x); auto with algebra.",
                        "VernacExtend",
                        "9372d97dfedd99ad1a75b4ff95710f25daee6383"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap g1 y); auto with algebra.",
                        "VernacExtend",
                        "6c5c35dc41451e50e3615d6e1030edb5c8778ec8"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap b x); auto with algebra.",
                        "VernacExtend",
                        "80aa9b028463230201da9269cb3c317a3aeec673"
                    ]
                },
                {
                    "command": [
                        "apply Sym; auto with algebra.",
                        "VernacExtend",
                        "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap b y); auto with algebra.",
                        "VernacExtend",
                        "501c81122525b0aa80c91104b25dcf7aba861a61"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (compl X); auto with algebra.",
                        "VernacExtend",
                        "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (compl X); auto with algebra.",
                        "VernacExtend",
                        "3981627837b5f814da9c2c70c6d8dd18bc8b00dc"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros y; try assumption.",
                        "VernacExtend",
                        "e11f23bfb85db8a037ca5ace63604a931ae2752a"
                    ]
                },
                {
                    "command": [
                        "case (compl_not_compl (image f X) y); intros.",
                        "VernacExtend",
                        "09b9839e174b2dc02d07c3e25abf184e28c0848b"
                    ]
                },
                {
                    "command": [
                        "generalize (image_in H).",
                        "VernacExtend",
                        "7192970259ee55168c58dcf0d123cbd19fd0eb9c"
                    ]
                },
                {
                    "command": [
                        "intros H'0; try assumption.",
                        "VernacExtend",
                        "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros x E0; elim E0; intros H'1 H'4; try exact H'1; clear E0 H'0.",
                        "VernacExtend",
                        "d4eed5f001ed4fc793dd85862b8aa7a6d9b55531"
                    ]
                },
                {
                    "command": [
                        "exists x; try assumption.",
                        "VernacExtend",
                        "a251c410f0ab72130a5a312ded511c093841a93c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap f x); auto with algebra.",
                        "VernacExtend",
                        "02cf64c07de1d12d18c6ab7e1c90a6d51a38d8e8"
                    ]
                },
                {
                    "command": [
                        "apply Sym; auto with algebra.",
                        "VernacExtend",
                        "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
                    ]
                },
                {
                    "command": [
                        "exists (g y); try assumption.",
                        "VernacExtend",
                        "910ba078525be3a677f2ef0a799ffc9c46500838"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap g1 (Ap g y)); auto with algebra.",
                        "VernacExtend",
                        "e920077da50a0aef984806edadd2f8019f6c451b"
                    ]
                },
                {
                    "command": [
                        "apply Sym.",
                        "VernacExtend",
                        "b91ee1c3035127bafc790ce54633c93301d2dbb0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap (Id F) y); auto with algebra.",
                        "VernacExtend",
                        "21ebe6f11119f5d9ae6651a58dacbb0ad13a9f42"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap (comp_map_map g1 g) y); auto with algebra.",
                        "VernacExtend",
                        "b7dcbba9e52f93bf6d0183d771c517d4c75799c4"
                    ]
                },
                {
                    "command": [
                        "apply Sym.",
                        "VernacExtend",
                        "b91ee1c3035127bafc790ce54633c93301d2dbb0"
                    ]
                },
                {
                    "command": [
                        "apply H'3.",
                        "VernacExtend",
                        "157087ee27cbbeee4a92c1b9743341d04271c1bb"
                    ]
                },
                {
                    "command": [
                        "cut (in_part (Ap g y) (compl X)).",
                        "VernacExtend",
                        "cf540244a2d0e66ac3ac31ade404ef6a324ac852"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (image g (compl (image f X))); auto with algebra.",
                        "VernacExtend",
                        "03a6f1b0f5d2693a94f8672ebcc6bd22c1a2df17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}