{
    "filename": "Tiroirs.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Fpart2.",
            "VernacRequire",
            "1c8dadbb91359c6764667a749e6ad14e4e3b2f1a"
        ],
        [
            "Section tiroirs_def.",
            "VernacBeginSection",
            "124ce07c62bcdfd7ceee915aa137157bfa743d6d"
        ],
        [
            "Variable E F : Setoid.",
            "VernacAssumption",
            "755ec368a0a5e097d35a6ccfa11e3d9467037cc1"
        ],
        [
            "Variable f : MAP E F.",
            "VernacAssumption",
            "0ec81e8c49c9e3f9b380a4396344354dec499939"
        ],
        [
            "Lemma diff_add_part2 : forall (E : Setoid) (A : part_set E) (x : E), in_part x A -> Equal A (add_part (diff A (single x)) x).",
            "VernacStartTheoremProof",
            "2d934c92a0c733f4b63e4bf52d9e4d2e22e3fa71"
        ],
        [
            "intros E0 A x H'; try assumption.",
            "VernacExtend",
            "29d296f15329e0d2fd44e1b30272c09def2b64a1"
        ],
        [
            "apply in_eq_part.",
            "VernacExtend",
            "caa64aff313fd38b9caad40cd46a5f729aae8ccb"
        ],
        [
            "intros x0 H'0; try assumption.",
            "VernacExtend",
            "a1fca524ae8ac7aceeac28ce713c7547de55485b"
        ],
        [
            "elim (classic (Equal x x0)); intros.",
            "VernacExtend",
            "558b4bf976e914c080d78da15e4d758cfa223a6f"
        ],
        [
            "apply in_part_trans_eq with x; auto with *.",
            "VernacExtend",
            "eaac99e470974b7973314e2af0fc593e510945e9"
        ],
        [
            "cut (in_part x0 (diff A (single x))).",
            "VernacExtend",
            "5ccc31ffe18abb18dceb81a5d45e7feb426fcecd"
        ],
        [
            "unfold add_part in |- *; auto with *.",
            "VernacExtend",
            "266607867a5dd48325e9b0ec85ec2f361b12e5bb"
        ],
        [
            "apply in_diff; auto with *.",
            "VernacExtend",
            "ec315deec0bc893e32c0681098e152e733256995"
        ],
        [
            "intros x0 H'0; try assumption.",
            "VernacExtend",
            "a1fca524ae8ac7aceeac28ce713c7547de55485b"
        ],
        [
            "elim (classic (Equal x x0)); intros.",
            "VernacExtend",
            "558b4bf976e914c080d78da15e4d758cfa223a6f"
        ],
        [
            "apply in_part_trans_eq with x; auto with *.",
            "VernacExtend",
            "eaac99e470974b7973314e2af0fc593e510945e9"
        ],
        [
            "cut (in_part x0 (diff A (single x))).",
            "VernacExtend",
            "5ccc31ffe18abb18dceb81a5d45e7feb426fcecd"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "apply diff_in_l with (single x).",
            "VernacExtend",
            "bcbd7e77d57de4a75c70e33d5c18cd7f75ddce72"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "unfold add_part in H'0.",
            "VernacExtend",
            "296eba9227b2fad90bc1c1554b72aa8b926c9832"
        ],
        [
            "elim (in_part_union H'0); intros.",
            "VernacExtend",
            "d81aee569d0c6a09f514014bb19b40faf8eb7f29"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "absurd (Equal x x0); auto with *.",
            "VernacExtend",
            "b9f3fabc18c7560259efc317bdff4ba594eff7a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve diff_add_part2: algebra.",
            "VernacHints",
            "97740d454760d25d8eed8248f0054b78d54ad0ac"
        ],
        [
            "Lemma cardinal_minus_part : forall (B : part_set F) (x : F) (n : nat), cardinal B (S n) -> in_part x B -> cardinal (diff B (single x)) n.",
            "VernacStartTheoremProof",
            "112451b2e7af85cbd0b0cbf7b588579ca95023bb"
        ],
        [
            "intros B x n H' H'0; try assumption.",
            "VernacExtend",
            "eec6c5f00e25e0b1a2a2fd5fef1c236448847462"
        ],
        [
            "apply cardinal_S with B x; auto with *.",
            "VernacExtend",
            "3a5020ec6f3b63355aafe3ff18929970c3f0dd05"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "cut (~ in_part x (single x)).",
            "VernacExtend",
            "67732d468e7a55e09f9a85db9fe3d0aff774378e"
        ],
        [
            "unfold not in |- *; auto with *.",
            "VernacExtend",
            "0d804c7176ccff0ead4d61643922e7f19f86e6d1"
        ],
        [
            "apply diff_in_r with B; auto with *.",
            "VernacExtend",
            "9c25982b5f5e9ff846120c92921003a88a983df8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve cardinal_minus_part: algebra.",
            "VernacHints",
            "fa6794d163ed4ec6ce155df5a61ae05ea4bd7cb7"
        ],
        [
            "Lemma tiroirs : forall (n : nat) (Chaussettes : part_set E), cardinal Chaussettes n -> forall (m : nat) (Tiroirs : part_set F), cardinal Tiroirs m -> m < n -> (forall x : E, in_part x Chaussettes -> in_part (f x) Tiroirs) -> exists x : E, (exists y : E, ~ Equal x y /\\ Equal (f x) (f y)).",
            "VernacStartTheoremProof",
            "8a1a3d8d31ec2c02b22175a6944dd9aaadbf3643"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros Chaussettes H' m Tiroirs H'0 H'1; try assumption.",
            "VernacExtend",
            "26ec33c31fc40ea79b7b8711bcdd55d66678f16a"
        ],
        [
            "inversion H'1.",
            "VernacExtend",
            "a8b53f8e618502c5ee5bd0b00a395bac12592b86"
        ],
        [
            "intros n0 H' Chaussettes H'0 m Tiroirs H'1 H'2 H'3; try assumption.",
            "VernacExtend",
            "2737344c572319d2427dec16e337692352eba556"
        ],
        [
            "inversion H'0.",
            "VernacExtend",
            "00e0ad3eaaed6a837c55aecf644d04a72455e588"
        ],
        [
            "elim (classic (ex (fun y : E => ~ Equal x y /\\ Equal (Ap f x) (Ap f y)))); intros.",
            "VernacExtend",
            "c038abecc9e13ef1da4b00a339d76b738e758fc2"
        ],
        [
            "exists x; try assumption.",
            "VernacExtend",
            "a251c410f0ab72130a5a312ded511c093841a93c"
        ],
        [
            "cut (exists m0 : nat, m = S m0).",
            "VernacExtend",
            "f0b5daca0129cec9243e170bfdff645beff505f5"
        ],
        [
            "intros H'4; try assumption.",
            "VernacExtend",
            "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
        ],
        [
            "case H'4; clear H'4; intros.",
            "VernacExtend",
            "f06d394a6723977ce644fe8f604b3bb19fe877e7"
        ],
        [
            "apply H' with (diff Chaussettes (single x)) x0 (diff Tiroirs (single (f x))).",
            "VernacExtend",
            "1a57475079cdcff8ba6903c1135681cd2066d323"
        ],
        [
            "apply cardinal_S with Chaussettes x.",
            "VernacExtend",
            "36d59c306a72366055f8baba8f9ab11779f1abe9"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "absurd (~ in_part x (single x)); auto with *.",
            "VernacExtend",
            "e6096fc0cfa30d4b03cf70087e43e3701f469104"
        ],
        [
            "apply diff_in_r with Chaussettes; auto with *.",
            "VernacExtend",
            "a06f95f76bbf190e1cbdba30735d9392d35cf65e"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "apply diff_add_part2.",
            "VernacExtend",
            "4ea49d8608fce51b7438156d4ee447a4a2bf314d"
        ],
        [
            "apply in_part_comp_r with (add_part B x); auto with *.",
            "VernacExtend",
            "cb78ede92328e121cdd2941cdc068d56dcf6b826"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "apply cardinal_minus_part.",
            "VernacExtend",
            "a9829ca3eb8484ab6794a55c7b1a4b622f958a07"
        ],
        [
            "rewrite <- H5; auto with *.",
            "VernacExtend",
            "546a89802cd76cac8ffb7945ea159f00b4029d87"
        ],
        [
            "apply H'3; auto with *.",
            "VernacExtend",
            "ed5b1dd5d8c1008daaf25bea1804d8c4375a4a54"
        ],
        [
            "apply in_part_comp_r with (add_part B x).",
            "VernacExtend",
            "145821c11f11c1b4cf46409caf0d84c654c2f2d9"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "rewrite H5 in H'2; auto with *.",
            "VernacExtend",
            "f73903ddf18ffea020afe9cd0fac93496570d0d1"
        ],
        [
            "intros x1 H'4; try assumption.",
            "VernacExtend",
            "743ceef047c8098d91fbb1e5dacd28430687a479"
        ],
        [
            "apply in_diff.",
            "VernacExtend",
            "a2b25a5cda2ebf5792e48e3f1fcf23925c4ce8a3"
        ],
        [
            "apply H'3; auto with *.",
            "VernacExtend",
            "ed5b1dd5d8c1008daaf25bea1804d8c4375a4a54"
        ],
        [
            "apply diff_in_l with (single x); auto with *.",
            "VernacExtend",
            "9ca2386258ff3aefc1923a058e2a84e963ff82ad"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "unfold not in H4.",
            "VernacExtend",
            "0f4c16010c622a54a7bfd0f538de1cba2466ae9c"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "exists x1; try assumption.",
            "VernacExtend",
            "d1c848d86a36c8177cf43ec6ed03b9bacb5ce3a0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros H'5; try assumption.",
            "VernacExtend",
            "2df87240997c336de9008de60a45c0f383e7de08"
        ],
        [
            "cut (~ in_part x1 (single x)).",
            "VernacExtend",
            "696e713bc2562192a0022dfcb56f30f890ec02ba"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply in_part_trans_eq with x; auto with *.",
            "VernacExtend",
            "eaac99e470974b7973314e2af0fc593e510945e9"
        ],
        [
            "apply diff_in_r with Chaussettes; auto with *.",
            "VernacExtend",
            "a06f95f76bbf190e1cbdba30735d9392d35cf65e"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "inversion H'1.",
            "VernacExtend",
            "a8b53f8e618502c5ee5bd0b00a395bac12592b86"
        ],
        [
            "cut (in_part (f x) Tiroirs).",
            "VernacExtend",
            "9d425c59a922de6dcf67ab493170d3e2d9de6370"
        ],
        [
            "intros H'4; try assumption.",
            "VernacExtend",
            "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
        ],
        [
            "absurd (in_part (f x) (empty F)); auto with *.",
            "VernacExtend",
            "6a4eb22d2678dc4a02bad4e6cb4bbd796e44f6a9"
        ],
        [
            "apply in_part_comp_r with Tiroirs; auto with *.",
            "VernacExtend",
            "c6e2dfa9c62682c03123454908adf5d278045f2e"
        ],
        [
            "apply H'3.",
            "VernacExtend",
            "157087ee27cbbeee4a92c1b9743341d04271c1bb"
        ],
        [
            "apply in_part_comp_r with (add_part B x); auto with *.",
            "VernacExtend",
            "cb78ede92328e121cdd2941cdc068d56dcf6b826"
        ],
        [
            "exists n2; try assumption.",
            "VernacExtend",
            "2dfe25e00797c51b29eca043c3c5d33cd14f5699"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End tiroirs_def.",
            "VernacEndSegment",
            "eb2041e9bb784f26ab2949d1c274d444b23317ca"
        ]
    ],
    "proofs": [
        {
            "name": "diff_add_part2",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros E0 A x H'; try assumption.",
                        "VernacExtend",
                        "29d296f15329e0d2fd44e1b30272c09def2b64a1"
                    ]
                },
                {
                    "command": [
                        "apply in_eq_part.",
                        "VernacExtend",
                        "caa64aff313fd38b9caad40cd46a5f729aae8ccb"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; try assumption.",
                        "VernacExtend",
                        "a1fca524ae8ac7aceeac28ce713c7547de55485b"
                    ]
                },
                {
                    "command": [
                        "elim (classic (Equal x x0)); intros.",
                        "VernacExtend",
                        "558b4bf976e914c080d78da15e4d758cfa223a6f"
                    ]
                },
                {
                    "command": [
                        "apply in_part_trans_eq with x; auto with *.",
                        "VernacExtend",
                        "eaac99e470974b7973314e2af0fc593e510945e9"
                    ]
                },
                {
                    "command": [
                        "cut (in_part x0 (diff A (single x))).",
                        "VernacExtend",
                        "5ccc31ffe18abb18dceb81a5d45e7feb426fcecd"
                    ]
                },
                {
                    "command": [
                        "unfold add_part in |- *; auto with *.",
                        "VernacExtend",
                        "266607867a5dd48325e9b0ec85ec2f361b12e5bb"
                    ]
                },
                {
                    "command": [
                        "apply in_diff; auto with *.",
                        "VernacExtend",
                        "ec315deec0bc893e32c0681098e152e733256995"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; try assumption.",
                        "VernacExtend",
                        "a1fca524ae8ac7aceeac28ce713c7547de55485b"
                    ]
                },
                {
                    "command": [
                        "elim (classic (Equal x x0)); intros.",
                        "VernacExtend",
                        "558b4bf976e914c080d78da15e4d758cfa223a6f"
                    ]
                },
                {
                    "command": [
                        "apply in_part_trans_eq with x; auto with *.",
                        "VernacExtend",
                        "eaac99e470974b7973314e2af0fc593e510945e9"
                    ]
                },
                {
                    "command": [
                        "cut (in_part x0 (diff A (single x))).",
                        "VernacExtend",
                        "5ccc31ffe18abb18dceb81a5d45e7feb426fcecd"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "apply diff_in_l with (single x).",
                        "VernacExtend",
                        "bcbd7e77d57de4a75c70e33d5c18cd7f75ddce72"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "unfold add_part in H'0.",
                        "VernacExtend",
                        "296eba9227b2fad90bc1c1554b72aa8b926c9832"
                    ]
                },
                {
                    "command": [
                        "elim (in_part_union H'0); intros.",
                        "VernacExtend",
                        "d81aee569d0c6a09f514014bb19b40faf8eb7f29"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal x x0); auto with *.",
                        "VernacExtend",
                        "b9f3fabc18c7560259efc317bdff4ba594eff7a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_minus_part",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros B x n H' H'0; try assumption.",
                        "VernacExtend",
                        "eec6c5f00e25e0b1a2a2fd5fef1c236448847462"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_S with B x; auto with *.",
                        "VernacExtend",
                        "3a5020ec6f3b63355aafe3ff18929970c3f0dd05"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "cut (~ in_part x (single x)).",
                        "VernacExtend",
                        "67732d468e7a55e09f9a85db9fe3d0aff774378e"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; auto with *.",
                        "VernacExtend",
                        "0d804c7176ccff0ead4d61643922e7f19f86e6d1"
                    ]
                },
                {
                    "command": [
                        "apply diff_in_r with B; auto with *.",
                        "VernacExtend",
                        "9c25982b5f5e9ff846120c92921003a88a983df8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tiroirs",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros Chaussettes H' m Tiroirs H'0 H'1; try assumption.",
                        "VernacExtend",
                        "26ec33c31fc40ea79b7b8711bcdd55d66678f16a"
                    ]
                },
                {
                    "command": [
                        "inversion H'1.",
                        "VernacExtend",
                        "a8b53f8e618502c5ee5bd0b00a395bac12592b86"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' Chaussettes H'0 m Tiroirs H'1 H'2 H'3; try assumption.",
                        "VernacExtend",
                        "2737344c572319d2427dec16e337692352eba556"
                    ]
                },
                {
                    "command": [
                        "inversion H'0.",
                        "VernacExtend",
                        "00e0ad3eaaed6a837c55aecf644d04a72455e588"
                    ]
                },
                {
                    "command": [
                        "elim (classic (ex (fun y : E => ~ Equal x y /\\ Equal (Ap f x) (Ap f y)))); intros.",
                        "VernacExtend",
                        "c038abecc9e13ef1da4b00a339d76b738e758fc2"
                    ]
                },
                {
                    "command": [
                        "exists x; try assumption.",
                        "VernacExtend",
                        "a251c410f0ab72130a5a312ded511c093841a93c"
                    ]
                },
                {
                    "command": [
                        "cut (exists m0 : nat, m = S m0).",
                        "VernacExtend",
                        "f0b5daca0129cec9243e170bfdff645beff505f5"
                    ]
                },
                {
                    "command": [
                        "intros H'4; try assumption.",
                        "VernacExtend",
                        "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
                    ]
                },
                {
                    "command": [
                        "case H'4; clear H'4; intros.",
                        "VernacExtend",
                        "f06d394a6723977ce644fe8f604b3bb19fe877e7"
                    ]
                },
                {
                    "command": [
                        "apply H' with (diff Chaussettes (single x)) x0 (diff Tiroirs (single (f x))).",
                        "VernacExtend",
                        "1a57475079cdcff8ba6903c1135681cd2066d323"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_S with Chaussettes x.",
                        "VernacExtend",
                        "36d59c306a72366055f8baba8f9ab11779f1abe9"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "absurd (~ in_part x (single x)); auto with *.",
                        "VernacExtend",
                        "e6096fc0cfa30d4b03cf70087e43e3701f469104"
                    ]
                },
                {
                    "command": [
                        "apply diff_in_r with Chaussettes; auto with *.",
                        "VernacExtend",
                        "a06f95f76bbf190e1cbdba30735d9392d35cf65e"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "apply diff_add_part2.",
                        "VernacExtend",
                        "4ea49d8608fce51b7438156d4ee447a4a2bf314d"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (add_part B x); auto with *.",
                        "VernacExtend",
                        "cb78ede92328e121cdd2941cdc068d56dcf6b826"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_minus_part.",
                        "VernacExtend",
                        "a9829ca3eb8484ab6794a55c7b1a4b622f958a07"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5; auto with *.",
                        "VernacExtend",
                        "546a89802cd76cac8ffb7945ea159f00b4029d87"
                    ]
                },
                {
                    "command": [
                        "apply H'3; auto with *.",
                        "VernacExtend",
                        "ed5b1dd5d8c1008daaf25bea1804d8c4375a4a54"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (add_part B x).",
                        "VernacExtend",
                        "145821c11f11c1b4cf46409caf0d84c654c2f2d9"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H'2; auto with *.",
                        "VernacExtend",
                        "f73903ddf18ffea020afe9cd0fac93496570d0d1"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'4; try assumption.",
                        "VernacExtend",
                        "743ceef047c8098d91fbb1e5dacd28430687a479"
                    ]
                },
                {
                    "command": [
                        "apply in_diff.",
                        "VernacExtend",
                        "a2b25a5cda2ebf5792e48e3f1fcf23925c4ce8a3"
                    ]
                },
                {
                    "command": [
                        "apply H'3; auto with *.",
                        "VernacExtend",
                        "ed5b1dd5d8c1008daaf25bea1804d8c4375a4a54"
                    ]
                },
                {
                    "command": [
                        "apply diff_in_l with (single x); auto with *.",
                        "VernacExtend",
                        "9ca2386258ff3aefc1923a058e2a84e963ff82ad"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "unfold not in H4.",
                        "VernacExtend",
                        "0f4c16010c622a54a7bfd0f538de1cba2466ae9c"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "exists x1; try assumption.",
                        "VernacExtend",
                        "d1c848d86a36c8177cf43ec6ed03b9bacb5ce3a0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros H'5; try assumption.",
                        "VernacExtend",
                        "2df87240997c336de9008de60a45c0f383e7de08"
                    ]
                },
                {
                    "command": [
                        "cut (~ in_part x1 (single x)).",
                        "VernacExtend",
                        "696e713bc2562192a0022dfcb56f30f890ec02ba"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply in_part_trans_eq with x; auto with *.",
                        "VernacExtend",
                        "eaac99e470974b7973314e2af0fc593e510945e9"
                    ]
                },
                {
                    "command": [
                        "apply diff_in_r with Chaussettes; auto with *.",
                        "VernacExtend",
                        "a06f95f76bbf190e1cbdba30735d9392d35cf65e"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "inversion H'1.",
                        "VernacExtend",
                        "a8b53f8e618502c5ee5bd0b00a395bac12592b86"
                    ]
                },
                {
                    "command": [
                        "cut (in_part (f x) Tiroirs).",
                        "VernacExtend",
                        "9d425c59a922de6dcf67ab493170d3e2d9de6370"
                    ]
                },
                {
                    "command": [
                        "intros H'4; try assumption.",
                        "VernacExtend",
                        "2d5ac118a4bfa6ddc755a22bf0ae21340bea747e"
                    ]
                },
                {
                    "command": [
                        "absurd (in_part (f x) (empty F)); auto with *.",
                        "VernacExtend",
                        "6a4eb22d2678dc4a02bad4e6cb4bbd796e44f6a9"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with Tiroirs; auto with *.",
                        "VernacExtend",
                        "c6e2dfa9c62682c03123454908adf5d278045f2e"
                    ]
                },
                {
                    "command": [
                        "apply H'3.",
                        "VernacExtend",
                        "157087ee27cbbeee4a92c1b9743341d04271c1bb"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with (add_part B x); auto with *.",
                        "VernacExtend",
                        "cb78ede92328e121cdd2941cdc068d56dcf6b826"
                    ]
                },
                {
                    "command": [
                        "exists n2; try assumption.",
                        "VernacExtend",
                        "2dfe25e00797c51b29eca043c3c5d33cd14f5699"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}