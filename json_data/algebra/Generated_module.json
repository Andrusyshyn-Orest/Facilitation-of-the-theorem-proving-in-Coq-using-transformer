{
    "filename": "Generated_module.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Module_kernel.",
            "VernacRequire",
            "4eeaf70a77e3d632a9b797ac1f45c9ee51d3c389"
        ],
        [
            "Require Export Free_module.",
            "VernacRequire",
            "18b959012924d68803ec83119390edc198ab7512"
        ],
        [
            "Section Generated_module_def.",
            "VernacBeginSection",
            "9eb64b7cbf0300d18b380cea49ceba642e2314ae"
        ],
        [
            "Variable R : RING.",
            "VernacAssumption",
            "d0eb88f51e93c9f8be4fd6395fc21fc15a70dea3"
        ],
        [
            "Variable Mod : MODULE R.",
            "VernacAssumption",
            "e1b55680b5c49dad304a26f4808913a56a663658"
        ],
        [
            "Variable A : part_set Mod.",
            "VernacAssumption",
            "854afed8458661d683c7334c18d0365dcc256418"
        ],
        [
            "Definition generated_module : submodule Mod := coKer (FMd_lift (inj_part A)).",
            "VernacDefinition",
            "bb5e83e3971c2bbdfde6ba5ebae2317846b3dff7"
        ],
        [
            "End Generated_module_def.",
            "VernacEndSegment",
            "9a3c9e0dffc275e1290dc690d39849c67c65d6be"
        ],
        [
            "Lemma generated_module_minimal : forall (R : RING) (Mod : MODULE R) (A : part_set Mod) (H : submodule Mod), included A H -> included (generated_module A) H.",
            "VernacStartTheoremProof",
            "8f24c1e0920cd52d1408211f44b1524155e17972"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros R Mod A H H' x H'0; try assumption.",
            "VernacExtend",
            "280c2c350dde23c29660aef612dc3ea1ff169c15"
        ],
        [
            "elim H'0; intros x0; clear H'0.",
            "VernacExtend",
            "a8c4c17923dd4f6d4b74b8bb29e490c53e497c7f"
        ],
        [
            "generalize x; clear x.",
            "VernacExtend",
            "3a730666dcffe77922ab24fe4249a5512fcfd603"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "intros c; try assumption.",
            "VernacExtend",
            "8b3d69310539aa4cc67e225e861c19a1822a8a1c"
        ],
        [
            "elim c.",
            "VernacExtend",
            "971990f3c17a330620f8173652263542ab376292"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros y subtype_prf x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
            "VernacExtend",
            "3247b513c70907b3b458971f1aa3d997c30fa9a9"
        ],
        [
            "apply in_part_comp_l with y; auto with algebra.",
            "VernacExtend",
            "a96ecfe6d4f87e02909cce250c1293c1a4089f55"
        ],
        [
            "intros f H'0 f0 H'1 x H'2; elim H'2; intros H'3 H'4; try exact H'4; clear H'2.",
            "VernacExtend",
            "ad5a972c86ee11baac1117beec383ff45bcce388"
        ],
        [
            "simpl in H'4.",
            "VernacExtend",
            "5cb40b109024d2f0cafeb9067e282f649f21f905"
        ],
        [
            "apply in_part_comp_l with (sgroup_law Mod (FMd_lift_fun (inj_part A) f) (FMd_lift_fun (inj_part A) f0)); auto with algebra.",
            "VernacExtend",
            "59183b8c3d83eb8e4b5a35a401359ad147e03fc6"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
            "VernacExtend",
            "257fb14bfa84a809dca947228611ae53c2805d48"
        ],
        [
            "apply in_part_comp_l with (monoid_unit Mod); auto with algebra.",
            "VernacExtend",
            "c6c3615f90c86a696e733a1b4cd7765a15c26555"
        ],
        [
            "intros f H'0 x H'1; try assumption.",
            "VernacExtend",
            "a504495d3114b3abfbe33ceb44e5fe6208c66247"
        ],
        [
            "elim H'1; intros H'2 H'3; simpl in H'3; clear H'1.",
            "VernacExtend",
            "16fe943e7c31ad34937c1624572d7710fdfdbc63"
        ],
        [
            "apply in_part_comp_l with (group_inverse Mod (FMd_lift_fun (inj_part A) f)); auto with algebra.",
            "VernacExtend",
            "96b575cd4adedbb39def438cbbdfdb802c858cdf"
        ],
        [
            "intros c f H'0 x H'1; try assumption.",
            "VernacExtend",
            "70742737a6e751fbc7b10acbe419cd4f4536216b"
        ],
        [
            "simpl in H'1.",
            "VernacExtend",
            "232c573971dc190fb80ec389c88642c1d6814a9a"
        ],
        [
            "elim H'1; intros H'2 H'3; try exact H'3; clear H'1.",
            "VernacExtend",
            "d8be1e3a9b62753ba2cd920315a1eb5f29875b0f"
        ],
        [
            "apply in_part_comp_l with (module_mult c (FMd_lift_fun (inj_part A) f)); auto with algebra.",
            "VernacExtend",
            "b37caabdc8d5c65cd5ee4b23e8f9a9bd84978793"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_module_prop_included : forall (R : RING) (Mod : MODULE R) (A : part_set Mod), included A (generated_module A).",
            "VernacStartTheoremProof",
            "6cba1ff77285e50cda9c8ddaa1fdb967b97de939"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros R Mod A x H'; try assumption.",
            "VernacExtend",
            "b8ee4d98afcec4c8f875bfe5da4bb5c040b42112"
        ],
        [
            "exists (Var R (V:=A) (Build_subtype (E:=Mod) (P:=A) (subtype_elt:=x) H')); split; [ idtac | try assumption ].",
            "VernacExtend",
            "e6968739a41e071264a48148974ccce95e2cd97c"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_module_prop : forall (R : RING) (Mod : MODULE R) (A : part_set Mod) (y : Mod), in_part y (generated_module A) -> exists x : FMd R A, Equal y (FMd_lift (inj_part A) x).",
            "VernacStartTheoremProof",
            "fde026313dd4fb2509d013dcfa07d31eda9c58b9"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros R Mod A y H'; try assumption.",
            "VernacExtend",
            "c2b9f8ed449a38e19e127c8729ba3e5bab3c029b"
        ],
        [
            "elim H'; intros x E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
            "VernacExtend",
            "78c6776f3c6ba50defdaa65b65099fc2c90f101d"
        ],
        [
            "exists x; try assumption.",
            "VernacExtend",
            "a251c410f0ab72130a5a312ded511c093841a93c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_module_prop_rev : forall (R : RING) (Mod : MODULE R) (A : part_set Mod) (y : Mod), (exists x : FMd R A, Equal y (FMd_lift (inj_part A) x)) -> in_part y (generated_module A).",
            "VernacStartTheoremProof",
            "695e1763937a76a9c3b91cd2c94d63edb8a8884e"
        ],
        [
            "intros R Mod A y H'; try assumption.",
            "VernacExtend",
            "c2b9f8ed449a38e19e127c8729ba3e5bab3c029b"
        ],
        [
            "elim H'; intros x E; try exact E; clear H'.",
            "VernacExtend",
            "8a1f4131612f73c2a8e90cc93567b552b04480d0"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "exists x; split; [ idtac | try assumption ].",
            "VernacExtend",
            "b2241ce412f87da77af163fc5b4c1b26840552cd"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve generated_module_minimal generated_module_prop_included generated_module_prop_rev: algebra.",
            "VernacHints",
            "d37470ae09e8cc7b54c59c310253f5c8ea7ca63c"
        ]
    ],
    "proofs": [
        {
            "name": "generated_module_minimal",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros R Mod A H H' x H'0; try assumption.",
                        "VernacExtend",
                        "280c2c350dde23c29660aef612dc3ea1ff169c15"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros x0; clear H'0.",
                        "VernacExtend",
                        "a8c4c17923dd4f6d4b74b8bb29e490c53e497c7f"
                    ]
                },
                {
                    "command": [
                        "generalize x; clear x.",
                        "VernacExtend",
                        "3a730666dcffe77922ab24fe4249a5512fcfd603"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "intros c; try assumption.",
                        "VernacExtend",
                        "8b3d69310539aa4cc67e225e861c19a1822a8a1c"
                    ]
                },
                {
                    "command": [
                        "elim c.",
                        "VernacExtend",
                        "971990f3c17a330620f8173652263542ab376292"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros y subtype_prf x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
                        "VernacExtend",
                        "3247b513c70907b3b458971f1aa3d997c30fa9a9"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with y; auto with algebra.",
                        "VernacExtend",
                        "a96ecfe6d4f87e02909cce250c1293c1a4089f55"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 f0 H'1 x H'2; elim H'2; intros H'3 H'4; try exact H'4; clear H'2.",
                        "VernacExtend",
                        "ad5a972c86ee11baac1117beec383ff45bcce388"
                    ]
                },
                {
                    "command": [
                        "simpl in H'4.",
                        "VernacExtend",
                        "5cb40b109024d2f0cafeb9067e282f649f21f905"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law Mod (FMd_lift_fun (inj_part A) f) (FMd_lift_fun (inj_part A) f0)); auto with algebra.",
                        "VernacExtend",
                        "59183b8c3d83eb8e4b5a35a401359ad147e03fc6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
                        "VernacExtend",
                        "257fb14bfa84a809dca947228611ae53c2805d48"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit Mod); auto with algebra.",
                        "VernacExtend",
                        "c6c3615f90c86a696e733a1b4cd7765a15c26555"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 x H'1; try assumption.",
                        "VernacExtend",
                        "a504495d3114b3abfbe33ceb44e5fe6208c66247"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros H'2 H'3; simpl in H'3; clear H'1.",
                        "VernacExtend",
                        "16fe943e7c31ad34937c1624572d7710fdfdbc63"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (group_inverse Mod (FMd_lift_fun (inj_part A) f)); auto with algebra.",
                        "VernacExtend",
                        "96b575cd4adedbb39def438cbbdfdb802c858cdf"
                    ]
                },
                {
                    "command": [
                        "intros c f H'0 x H'1; try assumption.",
                        "VernacExtend",
                        "70742737a6e751fbc7b10acbe419cd4f4536216b"
                    ]
                },
                {
                    "command": [
                        "simpl in H'1.",
                        "VernacExtend",
                        "232c573971dc190fb80ec389c88642c1d6814a9a"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros H'2 H'3; try exact H'3; clear H'1.",
                        "VernacExtend",
                        "d8be1e3a9b62753ba2cd920315a1eb5f29875b0f"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (module_mult c (FMd_lift_fun (inj_part A) f)); auto with algebra.",
                        "VernacExtend",
                        "b37caabdc8d5c65cd5ee4b23e8f9a9bd84978793"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_module_prop_included",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros R Mod A x H'; try assumption.",
                        "VernacExtend",
                        "b8ee4d98afcec4c8f875bfe5da4bb5c040b42112"
                    ]
                },
                {
                    "command": [
                        "exists (Var R (V:=A) (Build_subtype (E:=Mod) (P:=A) (subtype_elt:=x) H')); split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "e6968739a41e071264a48148974ccce95e2cd97c"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_module_prop",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros R Mod A y H'; try assumption.",
                        "VernacExtend",
                        "c2b9f8ed449a38e19e127c8729ba3e5bab3c029b"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
                        "VernacExtend",
                        "78c6776f3c6ba50defdaa65b65099fc2c90f101d"
                    ]
                },
                {
                    "command": [
                        "exists x; try assumption.",
                        "VernacExtend",
                        "a251c410f0ab72130a5a312ded511c093841a93c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_module_prop_rev",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros R Mod A y H'; try assumption.",
                        "VernacExtend",
                        "c2b9f8ed449a38e19e127c8729ba3e5bab3c029b"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x E; try exact E; clear H'.",
                        "VernacExtend",
                        "8a1f4131612f73c2a8e90cc93567b552b04480d0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "b2241ce412f87da77af163fc5b4c1b26840552cd"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}