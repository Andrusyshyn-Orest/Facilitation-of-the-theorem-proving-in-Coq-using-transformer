{
    "filename": "Group_util.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Sub_group.",
            "VernacRequire",
            "4bc14c795e9622489e646abe87367a34990a1ba0"
        ],
        [
            "Require Export Abelian_group_cat.",
            "VernacRequire",
            "4bc26e85fa26da0209724e7985b7e9bc02c88103"
        ],
        [
            "Section Group.",
            "VernacBeginSection",
            "12260b3932ed32a7bb1da8b857f3d2fb6d458665"
        ],
        [
            "Variable E : Setoid.",
            "VernacAssumption",
            "cafb1870f48a7785473ed62f8eb64582fbbe308d"
        ],
        [
            "Variable genlaw : E -> E -> E.",
            "VernacAssumption",
            "e323767168bad52d262c4bf5d3fc7cc33d96262c"
        ],
        [
            "Variable e : E.",
            "VernacAssumption",
            "486daf1bf899da830c12273f91b96ae38720d716"
        ],
        [
            "Variable geninv : E -> E.",
            "VernacAssumption",
            "a9c91d0c679c74c491386c52b50d6781e4113143"
        ],
        [
            "Hypothesis fcomp : forall x x' y y' : E, Equal x x' -> Equal y y' -> Equal (genlaw x y) (genlaw x' y').",
            "VernacAssumption",
            "75754aa8bf54b16465f09ec1f205980d5467f942"
        ],
        [
            "Hypothesis genlawassoc : forall x y z : E, Equal (genlaw (genlaw x y) z) (genlaw x (genlaw y z)).",
            "VernacAssumption",
            "6620c16a38bbdbab40181ad5b6370dda535817fd"
        ],
        [
            "Hypothesis eunitgenlawr : forall x : E, Equal (genlaw x e) x.",
            "VernacAssumption",
            "d6ab20227be8b451df0f3ea26bffaeaf232cc1d4"
        ],
        [
            "Hypothesis invcomp : forall x y : E, Equal x y -> Equal (geninv x) (geninv y).",
            "VernacAssumption",
            "22fd77fbfde3e02cd4cc663510b9e08001cb5e4a"
        ],
        [
            "Hypothesis geninvr : forall x : E, Equal (genlaw x (geninv x)) e.",
            "VernacAssumption",
            "403423eb9de2cf6a24c469cc7d20115acbd12c76"
        ],
        [
            "Lemma geninvl : forall x : E, Equal (genlaw (geninv x) x) e.",
            "VernacStartTheoremProof",
            "1ed913537dc38c0ff5286a4166fd3d018d84d46a"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "apply Trans with (genlaw (genlaw (geninv x) x) e); auto with algebra.",
            "VernacExtend",
            "f7f4ae324cad432a2d1ae1b4b28c0e5f907d4aa2"
        ],
        [
            "apply Trans with (genlaw (genlaw (geninv x) x) (genlaw (geninv x) (geninv (geninv x)))); auto with algebra.",
            "VernacExtend",
            "df547ec35827dbc8e1499ac1137d0ed0d07efd06"
        ],
        [
            "apply Trans with (genlaw (geninv x) (genlaw x (genlaw (geninv x) (geninv (geninv x))))); auto with algebra.",
            "VernacExtend",
            "406f513895eeee1bfe8bc7d2291e1e48c3b3c618"
        ],
        [
            "apply Trans with (genlaw (geninv x) (genlaw (genlaw x (geninv x)) (geninv (geninv x)))); auto with algebra.",
            "VernacExtend",
            "6f4ada4a7f6e2bdeb071a6bb4818834378e265e8"
        ],
        [
            "apply Trans with (genlaw (geninv x) (genlaw e (geninv (geninv x)))); auto with algebra.",
            "VernacExtend",
            "45f161c3b23af553c91e0ac74e6b262f3aa81bf9"
        ],
        [
            "apply Trans with (genlaw (genlaw (geninv x) e) (geninv (geninv x))); auto with algebra.",
            "VernacExtend",
            "da7bcd8153eb102f6bf20337c955af113fc1fd8d"
        ],
        [
            "apply Trans with (genlaw (geninv x) (geninv (geninv x))); auto with algebra.",
            "VernacExtend",
            "3e159eb73cec5ba9be2b3106c288f47e786a1fd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve geninvl: algebra.",
            "VernacHints",
            "b6f7cfed79adb9ab89b4031764ef9abc3c5d8678"
        ],
        [
            "Lemma eunitgenlawl : forall x : E, Equal (genlaw e x) x.",
            "VernacStartTheoremProof",
            "6eaf8af47922b32cf95735fe198b79b4ade5fdca"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "apply Trans with (genlaw (genlaw x (geninv x)) x); auto with algebra.",
            "VernacExtend",
            "57e439d24e12b94ddc9e41fa960790ba882caa29"
        ],
        [
            "apply Trans with (genlaw x (genlaw (geninv x) x)); auto with algebra.",
            "VernacExtend",
            "4a139e36304dbdceefca13aa55f7cb59aff118de"
        ],
        [
            "apply Trans with (genlaw x e); auto with algebra.",
            "VernacExtend",
            "4800ac9aada4968c560771edc71e48a7d3b93b5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eunitgenlawl: algebra.",
            "VernacHints",
            "f0968b1a9fe0ee76ffe72e98d0dc1f4210f223fb"
        ],
        [
            "Definition f := uncurry fcomp.",
            "VernacDefinition",
            "a1f10a2de7c452755a93aa8368ed1f8c377644e3"
        ],
        [
            "Lemma fassoc : associative f.",
            "VernacStartTheoremProof",
            "84984a4441f280e9c4c3da4050c21b6984c3e2fc"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eunitr : unit_r f e.",
            "VernacStartTheoremProof",
            "9f065772ee502b337d5933fc771e5caf43259b78"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eunitl : unit_l f e.",
            "VernacStartTheoremProof",
            "5e42fa9b991b9aaa644f2c6dfd5e799a2c47e21f"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inv := Build_Map (Ap:=geninv) invcomp.",
            "VernacDefinition",
            "89773755fd3bbfbd9804a6704c5f3abdc8d94064"
        ],
        [
            "Lemma invr : inverse_r f e inv.",
            "VernacStartTheoremProof",
            "c279bb538d784c2b9337a9963bb350d1ccbe1336"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma invl : inverse_l f e inv.",
            "VernacStartTheoremProof",
            "41c242d45e55ca56369ec91c740dca0b84801065"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sg := Build_sgroup (Build_sgroup_on fassoc).",
            "VernacDefinition",
            "11457a4b52a7b59b48bc9ee9dfe01b4f38a97a07"
        ],
        [
            "Definition m := Build_monoid (Build_monoid_on (A:=sg) (monoid_unit:=e) eunitr eunitl).",
            "VernacDefinition",
            "a1c4e28159faa4544f9f8eb5cb3e9210d0ee7fbe"
        ],
        [
            "Definition BUILD_GROUP : GROUP := Build_group (Build_group_on (G:=m) (group_inverse_map:=inv) invr invl).",
            "VernacDefinition",
            "fb7f9e526c489b1f621b3ba6b7b24d28799b723e"
        ],
        [
            "End Group.",
            "VernacEndSegment",
            "1866e1d5ee278a3d48b864546003fd16db477faf"
        ],
        [
            "Section Abelian_group.",
            "VernacBeginSection",
            "0e1dfcc237d2b30434ae41b74406334bbaead90c"
        ],
        [
            "Variable E : Setoid.",
            "VernacAssumption",
            "cafb1870f48a7785473ed62f8eb64582fbbe308d"
        ],
        [
            "Variable genlaw : E -> E -> E.",
            "VernacAssumption",
            "e323767168bad52d262c4bf5d3fc7cc33d96262c"
        ],
        [
            "Variable e : E.",
            "VernacAssumption",
            "486daf1bf899da830c12273f91b96ae38720d716"
        ],
        [
            "Variable geninv : E -> E.",
            "VernacAssumption",
            "a9c91d0c679c74c491386c52b50d6781e4113143"
        ],
        [
            "Hypothesis fcomp : forall x x' y y' : E, Equal x x' -> Equal y y' -> Equal (genlaw x y) (genlaw x' y').",
            "VernacAssumption",
            "75754aa8bf54b16465f09ec1f205980d5467f942"
        ],
        [
            "Hypothesis genlawassoc : forall x y z : E, Equal (genlaw (genlaw x y) z) (genlaw x (genlaw y z)).",
            "VernacAssumption",
            "6620c16a38bbdbab40181ad5b6370dda535817fd"
        ],
        [
            "Hypothesis eunitgenlawr : forall x : E, Equal (genlaw x e) x.",
            "VernacAssumption",
            "d6ab20227be8b451df0f3ea26bffaeaf232cc1d4"
        ],
        [
            "Hypothesis invcomp : forall x y : E, Equal x y -> Equal (geninv x) (geninv y).",
            "VernacAssumption",
            "22fd77fbfde3e02cd4cc663510b9e08001cb5e4a"
        ],
        [
            "Hypothesis geninvr : forall x : E, Equal (genlaw x (geninv x)) e.",
            "VernacAssumption",
            "403423eb9de2cf6a24c469cc7d20115acbd12c76"
        ],
        [
            "Hypothesis fcom : forall x y : E, Equal (genlaw x y) (genlaw y x).",
            "VernacAssumption",
            "28df19a774f0b2278d87f637e0394572807469d6"
        ],
        [
            "Definition G := BUILD_GROUP fcomp genlawassoc eunitgenlawr invcomp geninvr.",
            "VernacDefinition",
            "abdd4db733f1c7faeaa251dd6ac9447fab2266b8"
        ],
        [
            "Definition asg : abelian_sgroup.",
            "VernacDefinition",
            "03f44b3a449474d016498e3c6385f798d6892881"
        ],
        [
            "apply (Build_abelian_sgroup (abelian_sgroup_sgroup:=G)).",
            "VernacExtend",
            "960a4e35105520e651e24e90260bf1184de231ae"
        ],
        [
            "apply (Build_abelian_sgroup_on (A:=G)).",
            "VernacExtend",
            "f996f4f892b6a82697d47ca28c9e1f9c8cbfc084"
        ],
        [
            "abstract (red in |- *; simpl in |- *; auto with algebra).",
            "VernacExtend",
            "4b637219bd6dfedc2747d6a96d81608a5041ab92"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition BUILD_ABELIAN_GROUP : ABELIAN_GROUP := Build_abelian_group (Build_abelian_group_on (G:=G) (Build_abelian_monoid (Build_abelian_monoid_on (M:=G) asg))).",
            "VernacDefinition",
            "009e4f78bea9317162354aa96ead52a3db3be299"
        ],
        [
            "End Abelian_group.",
            "VernacEndSegment",
            "781df1b01e212be6fafb38c866f664831c8a65a4"
        ],
        [
            "Section Hom.",
            "VernacBeginSection",
            "a9f226bbfd2d74d779eb92c4ae4f70b35e08ec3f"
        ],
        [
            "Variable G G' : GROUP.",
            "VernacAssumption",
            "825a01d959f231d776c96ccb2041a4d77d170766"
        ],
        [
            "Variable ff : G -> G'.",
            "VernacAssumption",
            "89708377c8d19d346b3f631a9ef2ef7941f7395e"
        ],
        [
            "Hypothesis ffcomp : forall x y : G, Equal x y -> Equal (ff x) (ff y).",
            "VernacAssumption",
            "b498f4ff3815967addc097f79dc77be153cb55f3"
        ],
        [
            "Hypothesis fflaw : forall x y : G, Equal (ff (sgroup_law _ x y)) (sgroup_law _ (ff x) (ff y)).",
            "VernacAssumption",
            "120ac2dcc8a03029bc5546efbd3fa1768ab27abb"
        ],
        [
            "Hypothesis ffunit : Equal (ff (monoid_unit G)) (monoid_unit G').",
            "VernacAssumption",
            "a58e92c007246753f2435d103ad36eded1ec4aa8"
        ],
        [
            "Definition f2 := Build_Map ffcomp.",
            "VernacDefinition",
            "37c159d37d5cf8c5cd8132083fb2d71d1e3693a9"
        ],
        [
            "Definition fhomsg := Build_sgroup_hom (sgroup_map:=f2) fflaw.",
            "VernacDefinition",
            "a57f28e3b0b3ecf5682feebe67ab11a2626b1272"
        ],
        [
            "Definition BUILD_HOM_GROUP : Hom G G' := Build_monoid_hom (monoid_sgroup_hom:=fhomsg) ffunit.",
            "VernacDefinition",
            "bed377a2830968ba7af9e9dc0bc8ab4ac3600afb"
        ],
        [
            "End Hom.",
            "VernacEndSegment",
            "416d5654c7f3e72b253a9e7625b8dfdbf6abb7e5"
        ],
        [
            "Section Build_sub_group.",
            "VernacBeginSection",
            "b5fab9ef1a4bf5c5056676e39697121206be82d4"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Variable H : part_set G.",
            "VernacAssumption",
            "eb7a2f68cbc8d325ec51ae15e2355910b7a18d4f"
        ],
        [
            "Hypothesis Hlaw : forall x y : G, in_part x H -> in_part y H -> in_part (sgroup_law _ x y) H.",
            "VernacAssumption",
            "716fcb500e933eda03baa88694ebec6d5bcb9098"
        ],
        [
            "Hypothesis Hunit : in_part (monoid_unit G) H.",
            "VernacAssumption",
            "e752d4d424f7d438c16c3963576888d7d2080ab5"
        ],
        [
            "Hypothesis Hinv : forall x : G, in_part x H -> in_part (group_inverse _ x) H.",
            "VernacAssumption",
            "2a4234466fa3dc567aa58c2261998add4f05fa1c"
        ],
        [
            "Definition BUILD_SUB_GROUP : subgroup G := Build_subgroup (G:=G) (subgroup_submonoid:=Build_submonoid (G:=G) (submonoid_subsgroup:=Build_subsgroup Hlaw) Hunit) Hinv.",
            "VernacDefinition",
            "7e964866de26bd2ae508363a7c691215f5a639c1"
        ],
        [
            "End Build_sub_group.",
            "VernacEndSegment",
            "7ce3d89a56a84be410a8cc5af606a47a7f2ef6d6"
        ]
    ],
    "proofs": [
        {
            "name": "geninvl",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (genlaw (geninv x) x) e); auto with algebra.",
                        "VernacExtend",
                        "f7f4ae324cad432a2d1ae1b4b28c0e5f907d4aa2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (genlaw (geninv x) x) (genlaw (geninv x) (geninv (geninv x)))); auto with algebra.",
                        "VernacExtend",
                        "df547ec35827dbc8e1499ac1137d0ed0d07efd06"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (geninv x) (genlaw x (genlaw (geninv x) (geninv (geninv x))))); auto with algebra.",
                        "VernacExtend",
                        "406f513895eeee1bfe8bc7d2291e1e48c3b3c618"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (geninv x) (genlaw (genlaw x (geninv x)) (geninv (geninv x)))); auto with algebra.",
                        "VernacExtend",
                        "6f4ada4a7f6e2bdeb071a6bb4818834378e265e8"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (geninv x) (genlaw e (geninv (geninv x)))); auto with algebra.",
                        "VernacExtend",
                        "45f161c3b23af553c91e0ac74e6b262f3aa81bf9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (genlaw (geninv x) e) (geninv (geninv x))); auto with algebra.",
                        "VernacExtend",
                        "da7bcd8153eb102f6bf20337c955af113fc1fd8d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (geninv x) (geninv (geninv x))); auto with algebra.",
                        "VernacExtend",
                        "3e159eb73cec5ba9be2b3106c288f47e786a1fd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eunitgenlawl",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw (genlaw x (geninv x)) x); auto with algebra.",
                        "VernacExtend",
                        "57e439d24e12b94ddc9e41fa960790ba882caa29"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw x (genlaw (geninv x) x)); auto with algebra.",
                        "VernacExtend",
                        "4a139e36304dbdceefca13aa55f7cb59aff118de"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (genlaw x e); auto with algebra.",
                        "VernacExtend",
                        "4800ac9aada4968c560771edc71e48a7d3b93b5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fassoc",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eunitr",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eunitl",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invr",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invl",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "asg",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "apply (Build_abelian_sgroup (abelian_sgroup_sgroup:=G)).",
                        "VernacExtend",
                        "960a4e35105520e651e24e90260bf1184de231ae"
                    ]
                },
                {
                    "command": [
                        "apply (Build_abelian_sgroup_on (A:=G)).",
                        "VernacExtend",
                        "f996f4f892b6a82697d47ca28c9e1f9c8cbfc084"
                    ]
                },
                {
                    "command": [
                        "abstract (red in |- *; simpl in |- *; auto with algebra).",
                        "VernacExtend",
                        "4b637219bd6dfedc2747d6a96d81608a5041ab92"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}