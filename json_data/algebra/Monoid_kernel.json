{
    "filename": "Monoid_kernel.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Monoid_util.",
            "VernacRequire",
            "60abc3f2b1c5cee32a0073f23c845d231cca02b5"
        ],
        [
            "Require Export Parts2.",
            "VernacRequire",
            "a83f2a70b5bd814cb1789cfdf7e823ee92ad387a"
        ],
        [
            "Section Image_hom.",
            "VernacBeginSection",
            "e072cdd096216a87da4db533bcd0976bb9b37a8e"
        ],
        [
            "Variable M M' : MONOID.",
            "VernacAssumption",
            "575648306543f4d401bdd3834a95390ab7861c55"
        ],
        [
            "Variable f : Hom M M'.",
            "VernacAssumption",
            "027b2b34d9c5ee60f15d4e47d3420c1d614d13eb"
        ],
        [
            "Definition image_monoid_hom : submonoid M'.",
            "VernacDefinition",
            "3fa37beb204c161fd34206e90bcdc842a4ecb82f"
        ],
        [
            "apply (BUILD_SUB_MONOID (G:=M') (H:=image_map f)).",
            "VernacExtend",
            "72ad5df9aba8e3a6d86b4acc68cf9861d4991fbc"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "elim H'0; intros x0 E; elim E; intros H'1 H'2; try exact H'1; clear E H'0.",
            "VernacExtend",
            "c589c95b4e2e048ddaac5faa7132b309cc18d8d3"
        ],
        [
            "elim H'; intros x1 E; elim E; intros H'0 H'3; try exact H'0; clear E H'.",
            "VernacExtend",
            "db9c716a51a32188f08f02afdcc26222462cef0f"
        ],
        [
            "exists (sgroup_law M x1 x0); split; [ try assumption | idtac ].",
            "VernacExtend",
            "74d4f44e7fd164bf06f01e6c83bd79ca16f80b27"
        ],
        [
            "apply Trans with (sgroup_law M' (Ap (sgroup_map (monoid_sgroup_hom f)) x1) (Ap (sgroup_map (monoid_sgroup_hom f)) x0)); auto with algebra.",
            "VernacExtend",
            "e18766b98c921029d49de00620a47333e55c49eb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists (monoid_unit M); split; [ try assumption | idtac ].",
            "VernacExtend",
            "f14c348f2f1ed86bdaae66e0f633a13f44e2d987"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma image_monoid_prop : forall x : M, in_part (f x) image_monoid_hom.",
            "VernacStartTheoremProof",
            "0c63b33f2db2ba6efae4c1aa37515742a841a202"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x; exists x; split; [ try assumption | idtac ]; auto with algebra.",
            "VernacExtend",
            "13e0db3acf031af1fb20e609d2ec5c3931f85a3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_monoid_prop_rev : forall y : M', in_part y image_monoid_hom -> exists x : M, Equal y (f x).",
            "VernacStartTheoremProof",
            "51b764c7530639394b7195e5dee5d22b0bc0b7e9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros y H'; try assumption.",
            "VernacExtend",
            "65f4462208cdd39424c4ce42d25ceb08c439d05c"
        ],
        [
            "elim H'; intros x E; elim E; intros H'0 H'1; try exact H'0; clear E H'.",
            "VernacExtend",
            "d18fccf23aeeef1d067e19c54de63585ea36b7fa"
        ],
        [
            "exists x; try assumption.",
            "VernacExtend",
            "a251c410f0ab72130a5a312ded511c093841a93c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Image_hom.",
            "VernacEndSegment",
            "7e0eaa2e09cc0fb83b4afab02c29a9aee58d571a"
        ],
        [
            "Hint Resolve image_monoid_prop image_monoid_prop: algebra.",
            "VernacHints",
            "15bcf8d51909620c5228ab55f5d967008e752740"
        ]
    ],
    "proofs": [
        {
            "name": "image_monoid_hom",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_SUB_MONOID (G:=M') (H:=image_map f)).",
                        "VernacExtend",
                        "72ad5df9aba8e3a6d86b4acc68cf9861d4991fbc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros x0 E; elim E; intros H'1 H'2; try exact H'1; clear E H'0.",
                        "VernacExtend",
                        "c589c95b4e2e048ddaac5faa7132b309cc18d8d3"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x1 E; elim E; intros H'0 H'3; try exact H'0; clear E H'.",
                        "VernacExtend",
                        "db9c716a51a32188f08f02afdcc26222462cef0f"
                    ]
                },
                {
                    "command": [
                        "exists (sgroup_law M x1 x0); split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "74d4f44e7fd164bf06f01e6c83bd79ca16f80b27"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law M' (Ap (sgroup_map (monoid_sgroup_hom f)) x1) (Ap (sgroup_map (monoid_sgroup_hom f)) x0)); auto with algebra.",
                        "VernacExtend",
                        "e18766b98c921029d49de00620a47333e55c49eb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists (monoid_unit M); split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "f14c348f2f1ed86bdaae66e0f633a13f44e2d987"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "image_monoid_prop",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x; exists x; split; [ try assumption | idtac ]; auto with algebra.",
                        "VernacExtend",
                        "13e0db3acf031af1fb20e609d2ec5c3931f85a3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_monoid_prop_rev",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros y H'; try assumption.",
                        "VernacExtend",
                        "65f4462208cdd39424c4ce42d25ceb08c439d05c"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x E; elim E; intros H'0 H'1; try exact H'0; clear E H'.",
                        "VernacExtend",
                        "d18fccf23aeeef1d067e19c54de63585ea36b7fa"
                    ]
                },
                {
                    "command": [
                        "exists x; try assumption.",
                        "VernacExtend",
                        "a251c410f0ab72130a5a312ded511c093841a93c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}