{
    "filename": "Free_abelian_group.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Group_util.",
            "VernacRequire",
            "f24aad8fbb275f0ceaac7b195333eb7b08e1abaf"
        ],
        [
            "Require Export Abelian_group_facts.",
            "VernacRequire",
            "d4fc3152a7ca7d05c3514ce6e7cc90a0d863e75f"
        ],
        [
            "Section Free_abelian_group_def.",
            "VernacBeginSection",
            "fff193c5804a52c19a15b9f71c92e5eacd0d7959"
        ],
        [
            "Variable V : SET.",
            "VernacAssumption",
            "623995d81d700336ed924e40c07374bb439aac70"
        ],
        [
            "Inductive FaG : Type := | Var : V -> FaG | Law : FaG -> FaG -> FaG | Unit : FaG | Inv : FaG -> FaG.",
            "VernacInductive",
            "e23126cafe8b1813cad93e93c9e8933d371454c5"
        ],
        [
            "Inductive eqFaG : FaG -> FaG -> Prop := | eqFaG_Var : forall x y : V, Equal x y -> (eqFaG (Var x) (Var y):Prop) | eqFaG_law : forall x x' y y' : FaG, eqFaG x x' -> eqFaG y y' -> (eqFaG (Law x y) (Law x' y'):Prop) | eqFaG_law_assoc : forall x y z : FaG, eqFaG (Law (Law x y) z) (Law x (Law y z)):Prop | eqFaG_law0r : forall x : FaG, eqFaG (Law x Unit) x:Prop | eqFaG_inv : forall x y : FaG, eqFaG x y -> eqFaG (Inv x) (Inv y) | eqFaG_invr : forall x : FaG, eqFaG (Law x (Inv x)) Unit | eqFaG_refl : forall x : FaG, eqFaG x x:Prop | eqFaG_sym : forall x y : FaG, eqFaG x y -> (eqFaG y x:Prop) | eqFaG_trans : forall x y z : FaG, eqFaG x y -> eqFaG y z -> (eqFaG x z:Prop) | eqFaG_com : forall x y : FaG, eqFaG (Law x y) (Law y x).",
            "VernacInductive",
            "f99a1ac7d1c5cec37404b6f87090a94a309a0c44"
        ],
        [
            "Hint Resolve eqFaG_Var eqFaG_law eqFaG_law_assoc eqFaG_law0r eqFaG_invr eqFaG_refl eqFaG_com: algebra.",
            "VernacHints",
            "f4e65b39ec81b1ddb9e267fbb586d2bb04085918"
        ],
        [
            "Hint Immediate eqFaG_sym: algebra.",
            "VernacHints",
            "b95354ef464aeb5aa0a08dc173fe91b0dac51ef6"
        ],
        [
            "Lemma eqFaG_Equiv : equivalence eqFaG.",
            "VernacStartTheoremProof",
            "5a59bbb6b420f3f0fd84aed55c369903f64c0b73"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "exact eqFaG_refl.",
            "VernacExtend",
            "9b79be15c3a5d044b3c64f4f2f535c097dc54b27"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "exact eqFaG_trans.",
            "VernacExtend",
            "8ed20c83a08f54b573641e938a9878124268398f"
        ],
        [
            "exact eqFaG_sym.",
            "VernacExtend",
            "976f9e043a316fc1ef3fe9b9c49f39e9a6c47661"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition FaG_set := Build_Setoid eqFaG_Equiv.",
            "VernacDefinition",
            "3b0cff71750ef0cd5ca71941b514972dc80ee7d4"
        ],
        [
            "Definition FreeAbelianGroup : ABELIAN_GROUP.",
            "VernacDefinition",
            "7f1d114ef83e30d1b1b39a3f3e12cd5a82e5b7a6"
        ],
        [
            "apply (BUILD_ABELIAN_GROUP (E:=FaG_set) (genlaw:=Law) (e:=Unit) (geninv:=Inv)).",
            "VernacExtend",
            "441e96c815846979a941f2ef4a43155184b4ec1c"
        ],
        [
            "exact eqFaG_law.",
            "VernacExtend",
            "6b51bcd36306528a41dc9311550800dfe2679d44"
        ],
        [
            "exact eqFaG_law_assoc.",
            "VernacExtend",
            "9cf8c22cddf7520302fbefba6b92dba133f58a8e"
        ],
        [
            "exact eqFaG_law0r.",
            "VernacExtend",
            "4ff70ab566bd01a454e7ae891d188bbf4c339264"
        ],
        [
            "exact eqFaG_inv.",
            "VernacExtend",
            "85cd2c1fff1cd435847ff524714d047a1a89a484"
        ],
        [
            "exact eqFaG_invr.",
            "VernacExtend",
            "bfdf94f82dcf958ae489f83855959a1821986bcd"
        ],
        [
            "exact eqFaG_com.",
            "VernacExtend",
            "a5dbc0c125cd14732a6aeb83cd5d6380f990e6be"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Section Universal_prop.",
            "VernacBeginSection",
            "2d4293d5dbda1a6dac91f6f478722f042c4ebadb"
        ],
        [
            "Variable G : ABELIAN_GROUP.",
            "VernacAssumption",
            "fbc85a65180bb99b315933d299e22f3800a91a3d"
        ],
        [
            "Variable f : Hom V G.",
            "VernacAssumption",
            "a95812385cf003f4352061de571f193815dbd178"
        ],
        [
            "Fixpoint FaG_lift_fun (p : FreeAbelianGroup) : G := match p with | Var v => f v | Law p1 p2 => sgroup_law _ (FaG_lift_fun p1) (FaG_lift_fun p2) | Unit => monoid_unit G | Inv p1 => group_inverse G (FaG_lift_fun p1) end.",
            "VernacFixpoint",
            "6c1069fea2cf62ca7fe3240fc9820241cecda709"
        ],
        [
            "Definition FaG_lift : Hom FreeAbelianGroup G.",
            "VernacDefinition",
            "e545a3df0935fa49dbbb365387a931e698f9be99"
        ],
        [
            "apply (BUILD_HOM_GROUP (G:=FreeAbelianGroup) (G':=G) (ff:=FaG_lift_fun)).",
            "VernacExtend",
            "f1f779b938629e961d0a4b85d61272efea30f552"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "elim H'; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "1e5808ab5b8c1b19ab471905f5d104c65848c433"
        ],
        [
            "intros x0 y0 z H'0 H'1 H'2 H'3; try assumption.",
            "VernacExtend",
            "7dd03be77febafb463e3707d94e3e2deb06b77f8"
        ],
        [
            "apply Trans with (FaG_lift_fun y0); auto with algebra.",
            "VernacExtend",
            "7ead97a388af9c7f280fac4b35c036e2ce605bcd"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition FaG_var : Hom V FreeAbelianGroup.",
            "VernacDefinition",
            "a80dddde994996a8f8357b05d66ba436c356326d"
        ],
        [
            "apply (Build_Map (A:=V) (B:=FreeAbelianGroup) (Ap:=Var)).",
            "VernacExtend",
            "cc77282567fe5aa5156d7c6f922d02b273244568"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma FaG_comp_prop : Equal f (comp_hom (FaG_lift:Hom (FreeAbelianGroup:SET) G) FaG_var).",
            "VernacStartTheoremProof",
            "f6245ef256fc9c70303e847fa914e4aad8ab45b2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Universal_prop.",
            "VernacEndSegment",
            "248c780c6eda46a66c38a5aafee4318d2645aefb"
        ],
        [
            "End Free_abelian_group_def.",
            "VernacEndSegment",
            "ca6ccb7910c736898d27b2d743fa94484b65d229"
        ],
        [
            "Hint Resolve FaG_comp_prop: algebra.",
            "VernacHints",
            "7b9a42c415716543fef49bb0b5a9d25d6504af5e"
        ]
    ],
    "proofs": [
        {
            "name": "eqFaG_Equiv",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_refl.",
                        "VernacExtend",
                        "9b79be15c3a5d044b3c64f4f2f535c097dc54b27"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_trans.",
                        "VernacExtend",
                        "8ed20c83a08f54b573641e938a9878124268398f"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_sym.",
                        "VernacExtend",
                        "976f9e043a316fc1ef3fe9b9c49f39e9a6c47661"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FreeAbelianGroup",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_ABELIAN_GROUP (E:=FaG_set) (genlaw:=Law) (e:=Unit) (geninv:=Inv)).",
                        "VernacExtend",
                        "441e96c815846979a941f2ef4a43155184b4ec1c"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_law.",
                        "VernacExtend",
                        "6b51bcd36306528a41dc9311550800dfe2679d44"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_law_assoc.",
                        "VernacExtend",
                        "9cf8c22cddf7520302fbefba6b92dba133f58a8e"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_law0r.",
                        "VernacExtend",
                        "4ff70ab566bd01a454e7ae891d188bbf4c339264"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_inv.",
                        "VernacExtend",
                        "85cd2c1fff1cd435847ff524714d047a1a89a484"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_invr.",
                        "VernacExtend",
                        "bfdf94f82dcf958ae489f83855959a1821986bcd"
                    ]
                },
                {
                    "command": [
                        "exact eqFaG_com.",
                        "VernacExtend",
                        "a5dbc0c125cd14732a6aeb83cd5d6380f990e6be"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "FaG_lift",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_HOM_GROUP (G:=FreeAbelianGroup) (G':=G) (ff:=FaG_lift_fun)).",
                        "VernacExtend",
                        "f1f779b938629e961d0a4b85d61272efea30f552"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "elim H'; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "1e5808ab5b8c1b19ab471905f5d104c65848c433"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0 z H'0 H'1 H'2 H'3; try assumption.",
                        "VernacExtend",
                        "7dd03be77febafb463e3707d94e3e2deb06b77f8"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FaG_lift_fun y0); auto with algebra.",
                        "VernacExtend",
                        "7ead97a388af9c7f280fac4b35c036e2ce605bcd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "FaG_var",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "apply (Build_Map (A:=V) (B:=FreeAbelianGroup) (Ap:=Var)).",
                        "VernacExtend",
                        "cc77282567fe5aa5156d7c6f922d02b273244568"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "FaG_comp_prop",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}