{
    "filename": "Fraction_field.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Automatic Coercions Import.",
            "VernacSetOption",
            "12f2b52fb77cee7f2419b939e5a1046afa341e27"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Integral_domain_facts.",
            "VernacRequire",
            "5e6c9f5bae161dfce631fefb7447e10902cca5b1"
        ],
        [
            "Require Export Cfield_cat.",
            "VernacRequire",
            "7d2a6e5c6f103cba758678304cdf27bf1f7087bd"
        ],
        [
            "Require Export Abelian_group_facts.",
            "VernacRequire",
            "d4fc3152a7ca7d05c3514ce6e7cc90a0d863e75f"
        ],
        [
            "Require Export Ring_util.",
            "VernacRequire",
            "046c18f9cb14bf59ef0a3a10a8661e276c392c8c"
        ],
        [
            "Section Def.",
            "VernacBeginSection",
            "891f679f68bab7ae72311468953cd39d353d2080"
        ],
        [
            "Variable R : INTEGRAL_DOMAIN.",
            "VernacAssumption",
            "e920da5cd59041e8cbc221e64d87d2e5941d3ecf"
        ],
        [
            "Variable diff10 : ~ Equal (ring_unit R) (monoid_unit R).",
            "VernacAssumption",
            "04c6cc1ec8158689b2dc534f130bd90718c046af"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Record fraction : Type := {num : R; den : R; den_prf : ~ Equal den (monoid_unit R)}.",
            "VernacInductive",
            "14a9d06095732c45cff267e6dfd91eb1d4a16266"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Hint Resolve den_prf: algebra.",
            "VernacHints",
            "bd7480123a214fbfb050ba9fba5576fb07fe784b"
        ],
        [
            "Definition eqfraction (x y : fraction) := Equal (ring_mult (num x) (den y)) (ring_mult (num y) (den x)).",
            "VernacDefinition",
            "f3807f1cac2bdae33107a383dab38710687d33b5"
        ],
        [
            "Lemma eqfraction_refl : reflexive eqfraction.",
            "VernacStartTheoremProof",
            "9eb9e1c66356ecc6a263d97e37009fcdbf6a4eab"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x; red in |- *.",
            "VernacExtend",
            "34b2893ccb48513c3991f110cf6dfcdedf3f0880"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fraction0 := Build_fraction (monoid_unit R) (ring_unit R) diff10.",
            "VernacDefinition",
            "5c9e0d969feabf7f33483ad9ab87227b03061776"
        ],
        [
            "Lemma eqfraction0 : forall x : fraction, eqfraction x fraction0 -> Equal (num x) (monoid_unit R).",
            "VernacStartTheoremProof",
            "7463171b8b193114e6eefe00cc6c94d5cac8d4ca"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "case x; unfold eqfraction, fraction0 in |- *; simpl in |- *.",
            "VernacExtend",
            "ca6dae799ab5e8d480ccdbedba0934de4dbdd571"
        ],
        [
            "intros numer denom H' H'0; try assumption.",
            "VernacExtend",
            "aa0910871bc13bc5729f164b197214c29cae22a6"
        ],
        [
            "apply Trans with (ring_mult numer (ring_unit R)); auto with algebra.",
            "VernacExtend",
            "6eb35151fcffe497ad3e351700ea50ffeb43a4d2"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) denom); auto with algebra.",
            "VernacExtend",
            "af7cb1129c0aee6ee7080c2207e87f45262d3723"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqfraction_num0 : forall x : fraction, Equal (num x) (monoid_unit R) -> eqfraction x fraction0.",
            "VernacStartTheoremProof",
            "408553e51677994659b24d1921f39cf79d412630"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "case x; unfold eqfraction, fraction0 in |- *; simpl in |- *.",
            "VernacExtend",
            "ca6dae799ab5e8d480ccdbedba0934de4dbdd571"
        ],
        [
            "intros numer denom H' H'0; try assumption.",
            "VernacExtend",
            "aa0910871bc13bc5729f164b197214c29cae22a6"
        ],
        [
            "apply Trans with numer; auto with algebra.",
            "VernacExtend",
            "0519f6910a63ada78b551b5a91867650c9bb8200"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqfraction_sym : symmetric eqfraction.",
            "VernacStartTheoremProof",
            "20480f7cc076b38626d8e12724f7f5f82e0c991a"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold app_rel, eqfraction in |- *; auto with algebra.",
            "VernacExtend",
            "543e3fe17da09e9a8cefcb3a428c889aa70a0008"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqfraction_trans : transitive eqfraction.",
            "VernacStartTheoremProof",
            "dc841987ac1fbd7fb259c3fe31fffd6a7735b084"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold app_rel, eqfraction in |- *.",
            "VernacExtend",
            "2e6193bbce2f21c4b53d54334afe496959aae0a1"
        ],
        [
            "intros x y z H' H'0; try assumption.",
            "VernacExtend",
            "92486dfbaec6209765e08194fc2670eff8aef754"
        ],
        [
            "apply INTEGRAL_DOMAIN_simpl_l with (den y).",
            "VernacExtend",
            "3f88d91194db861a8fa7ce0f6bc23c4a2c272bb7"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (den y) (num x)) (den z)).",
            "VernacExtend",
            "0dab4107049f5fd4dfe231e834c63b901511c484"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num x) (den y)) (den z)).",
            "VernacExtend",
            "6f28593ddce0dba65e056b0c63a2a630bb0e65b7"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num y) (den x)) (den z)).",
            "VernacExtend",
            "2988dcd9b015a3055332eacf4ba33ec209ca7eb8"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (den x) (num y)) (den z)).",
            "VernacExtend",
            "3d9940ff0818e2559fb48d4923bbd2dbc570653d"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (den x) (ring_mult (num y) (den z))).",
            "VernacExtend",
            "53de65760fd2fb7d654df1b5825aa3e1970bcc91"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (den x) (ring_mult (num z) (den y))).",
            "VernacExtend",
            "91eff7d36fe51ed53dbc2718a6161ed8e13ff8e2"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (den x) (num z)) (den y)).",
            "VernacExtend",
            "fbea02f932700c8a3738bbbc3868a86f2ee9dd19"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num z) (den x)) (den y)); auto with algebra.",
            "VernacExtend",
            "cbf9cfac2daa21f21f57a3d99dfb2670f4bdf2e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fraction_set : SET.",
            "VernacDefinition",
            "3874d956a8a6d8564119f42ca59c854fd815a97b"
        ],
        [
            "apply (Build_Setoid (Carrier:=fraction) (Equal:=eqfraction)).",
            "VernacExtend",
            "7d9bb87950c3c089e8cbf1e5fdeeee7f816441a0"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "exact eqfraction_refl.",
            "VernacExtend",
            "fa2871aa3f90c4bf3c22c28661831a68d3254d06"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "exact eqfraction_trans.",
            "VernacExtend",
            "b94ce6f4201d5559f43f538fb3c08b318d0ddfc7"
        ],
        [
            "exact eqfraction_sym.",
            "VernacExtend",
            "edc2599ad7579cad8a87ef0e691b0c757f95b44f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition addfraction_fun (x y : fraction_set) : fraction_set := Build_fraction (sgroup_law R (ring_mult (num x) (den y)) (ring_mult (num y) (den x))) (ring_mult (den x) (den y)) (INTEGRAL_DOMAIN_prop_rev (den_prf x) (den_prf y)).",
            "VernacDefinition",
            "bd95945eeb8182034c60b1b1858e4fab762037d4"
        ],
        [
            "Definition opfraction_fun (x : fraction_set) : fraction_set := Build_fraction (group_inverse R (num x)) (den x) (den_prf x).",
            "VernacDefinition",
            "0791438ff01fdfcf566869676a25f5e2fcad9d65"
        ],
        [
            "Definition multfraction_fun (x y : fraction_set) : fraction_set := Build_fraction (ring_mult (num x) (num y)) (ring_mult (den x) (den y)) (INTEGRAL_DOMAIN_prop_rev (den_prf x) (den_prf y)).",
            "VernacDefinition",
            "f66b2351fcb8b069f504d21e82a6b72cfe781b87"
        ],
        [
            "Definition fraction1 : fraction_set := Build_fraction (ring_unit R) (ring_unit R) diff10.",
            "VernacDefinition",
            "b1b33ee87f3cfd2187d931c37bc661c44d037eed"
        ],
        [
            "Lemma addfraction_law_l : forall x x' y : fraction_set, Equal x x' -> Equal (addfraction_fun x y) (addfraction_fun x' y).",
            "VernacStartTheoremProof",
            "7133eca0120cf12b7fdf9118065ea401a9d4b304"
        ],
        [
            "unfold addfraction_fun in |- *; simpl in |- *.",
            "VernacExtend",
            "3f571e6893423ecf26aa04aed629795d42ed208a"
        ],
        [
            "unfold eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7af4c0405b03c9a8e11e7a6296701b9c2b544552"
        ],
        [
            "intros x x' y H'; try assumption.",
            "VernacExtend",
            "bcfc37d06b0d6e192e2c893a5c73f2261dc3d7fc"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (sgroup_law R (ring_mult (num x) (den y)) (ring_mult (num y) (den x))) (den x')) (den y)).",
            "VernacExtend",
            "568a42ed73cb6ed0c1450be784f98ae60333af4d"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (sgroup_law R (ring_mult (num x') (den y)) (ring_mult (num y) (den x'))) (den x)) (den y)).",
            "VernacExtend",
            "e4959e5eec9378c0715917faa2ee72818b75f0a4"
        ],
        [
            "apply RING_comp.",
            "VernacExtend",
            "8f518ff1cf76d7411db6b013b78d4ee8b1dd07c9"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x) (den y)) (den x')) (ring_mult (ring_mult (num y) (den x)) (den x'))).",
            "VernacExtend",
            "935d64ae4568eeb9e1f530fee59d0f1232425b00"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x') (den y)) (den x)) (ring_mult (ring_mult (num y) (den x')) (den x))).",
            "VernacExtend",
            "2ed73fd036cbae5673ba24229b68557fc35f7503"
        ],
        [
            "apply SGROUP_comp.",
            "VernacExtend",
            "19f16fec14285fe48601c960c87cb677b9ae46a6"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (den y) (num x)) (den x')).",
            "VernacExtend",
            "83a7b59b84d98109a596250e9166e7d35a089432"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (den y) (num x')) (den x)).",
            "VernacExtend",
            "ce88709fcb21a11404432fc4153936c53cdceb01"
        ],
        [
            "apply Trans with (ring_mult (den y) (ring_mult (num x) (den x'))).",
            "VernacExtend",
            "e2bcc460f2fea3aded48bde4db75934607af116b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (den y) (ring_mult (num x') (den x))).",
            "VernacExtend",
            "4d918b44281ceab6814e22d0fd5bb1b2ccbf8f1b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (num y) (ring_mult (den x) (den x'))).",
            "VernacExtend",
            "976a0943b4139cf11d1a80d8375b7c77dff28d05"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (num y) (ring_mult (den x') (den x))).",
            "VernacExtend",
            "ecf243992d447dca118c55fd8bb64ee48036c8e1"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addfraction_fun_com : forall x y : fraction_set, Equal (addfraction_fun x y) (addfraction_fun y x).",
            "VernacStartTheoremProof",
            "cee5cec68143e1167e4fa0221866cc160536958d"
        ],
        [
            "unfold addfraction_fun in |- *; simpl in |- *.",
            "VernacExtend",
            "3f571e6893423ecf26aa04aed629795d42ed208a"
        ],
        [
            "unfold eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7af4c0405b03c9a8e11e7a6296701b9c2b544552"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "apply RING_comp; auto with algebra.",
            "VernacExtend",
            "c1417d827dd874753c1874c12fe0f3b15a32d6e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addfraction_law_r : forall x y y' : fraction_set, Equal y y' -> Equal (addfraction_fun x y) (addfraction_fun x y').",
            "VernacStartTheoremProof",
            "10e41a1a9487b8e4a740e32ea6de82df9766fd95"
        ],
        [
            "intros x y y' H'; try assumption.",
            "VernacExtend",
            "1870a0556805b3f946c7538fdfec789edec6a18f"
        ],
        [
            "apply Trans with (addfraction_fun y x).",
            "VernacExtend",
            "ae1cd8ee3b96c968df2cc7c2a39d9d58acc21933"
        ],
        [
            "apply addfraction_fun_com.",
            "VernacExtend",
            "bd3a1d84e0487cfb99aacf18138de4d46b25a4ac"
        ],
        [
            "apply Trans with (addfraction_fun y' x).",
            "VernacExtend",
            "9b59e0e892ee240d1077b606b148d196561943a8"
        ],
        [
            "apply addfraction_law_l; auto with algebra.",
            "VernacExtend",
            "790e9c4ac2597d04b2bc23a8fe31c8b37f7a7b57"
        ],
        [
            "apply addfraction_fun_com.",
            "VernacExtend",
            "bd3a1d84e0487cfb99aacf18138de4d46b25a4ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addfraction_law : fun2_compatible addfraction_fun.",
            "VernacStartTheoremProof",
            "c0d1daa9da031aa6e076c2e72f6cafcac0d887f6"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x x' y y' H' H'0; try assumption.",
            "VernacExtend",
            "a768092cb6d13bcbf8895ce3f66d1b23178e8ac3"
        ],
        [
            "apply Trans with (addfraction_fun x' y).",
            "VernacExtend",
            "0b3b78e803c2c0a0b5742c0ce6a4a244c280df57"
        ],
        [
            "apply addfraction_law_l; auto with algebra.",
            "VernacExtend",
            "790e9c4ac2597d04b2bc23a8fe31c8b37f7a7b57"
        ],
        [
            "apply addfraction_law_r; auto with algebra.",
            "VernacExtend",
            "c81193ef35a8054b15babb47f73f34d3d0260ebf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multfraction_dist_l : forall x y z : fraction_set, Equal (multfraction_fun x (addfraction_fun y z)) (addfraction_fun (multfraction_fun x y) (multfraction_fun x z)).",
            "VernacStartTheoremProof",
            "3ea9bab4db3a85c1a9291701e61c704670a42d1b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7703dd6e080b1632786ba7300e4b0d555f00df0b"
        ],
        [
            "intros x y z; try assumption.",
            "VernacExtend",
            "80c83086f31221d7caf381e8fc065da8630ae3de"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num x) (sgroup_law R (ring_mult (num y) (den z)) (ring_mult (num z) (den y)))) (ring_mult (den x) (ring_mult (den y) (ring_mult (den x) (den z))))).",
            "VernacExtend",
            "511e2d0b47d35f6a90df4a52f96942a6750b7645"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (ring_mult (num x) (sgroup_law R (ring_mult (num y) (den z)) (ring_mult (num z) (den y)))) (den x)) (ring_mult (den y) (ring_mult (den x) (den z)))).",
            "VernacExtend",
            "76679e91274000193cf00455c2aabb572a883ca0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply RING_comp.",
            "VernacExtend",
            "8f518ff1cf76d7411db6b013b78d4ee8b1dd07c9"
        ],
        [
            "apply Trans with (ring_mult (sgroup_law R (ring_mult (num x) (ring_mult (num y) (den z))) (ring_mult (num x) (ring_mult (num z) (den y)))) (den x)).",
            "VernacExtend",
            "7799cfbbf27bd0deeabeae61aded54136d22b6c8"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x) (ring_mult (num y) (den z))) (den x)) (ring_mult (ring_mult (num x) (ring_mult (num z) (den y))) (den x))).",
            "VernacExtend",
            "e77b4356514c10faab2d85d871a0322df5072083"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply SGROUP_comp.",
            "VernacExtend",
            "19f16fec14285fe48601c960c87cb677b9ae46a6"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (ring_mult (num x) (num y)) (den z)) (den x)).",
            "VernacExtend",
            "993f4472b193f5908b798b20402a11f911cf1548"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num x) (num y)) (ring_mult (den z) (den x))); auto with algebra.",
            "VernacExtend",
            "f5e05b1a808a81b54c2ea4e9fa4108d9d4c71988"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (ring_mult (num x) (num z)) (den y)) (den x)).",
            "VernacExtend",
            "85fe0cf2c306a0b73308804c91f87e12b78922e1"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num x) (num z)) (ring_mult (den y) (den x))); auto with algebra.",
            "VernacExtend",
            "d5ae67d23b70edda15a84143a44a811279280e2d"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multfraction_com : forall x y : fraction_set, Equal (multfraction_fun x y) (multfraction_fun y x).",
            "VernacStartTheoremProof",
            "bb6e4f135c3607644c6960cf51cc5fb61ec2c18d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "71d368c930dc4905688ad38d31f7a05819c67498"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fract_field_ring_aux : RING.",
            "VernacDefinition",
            "952c57528763a8eece1fa1161079dd6f9a7cbb76"
        ],
        [
            "apply (BUILD_RING (E:=fraction_set) (ringplus:=addfraction_fun) (ringmult:=multfraction_fun) (zero:=fraction0) (un:=fraction1) (ringopp:=opfraction_fun)).",
            "VernacExtend",
            "31d5ce606135e8a8c0656afb1d09265d0d87e212"
        ],
        [
            "exact addfraction_law.",
            "VernacExtend",
            "3329ae9cd7d48e8575f101cb5e803f498f1298d7"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold addfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "3cd08a2ee0284665e7f7872bb728c2f4c2dd3778"
        ],
        [
            "intros x y z; try assumption.",
            "VernacExtend",
            "80c83086f31221d7caf381e8fc065da8630ae3de"
        ],
        [
            "apply Trans with (ring_mult (sgroup_law R (ring_mult (sgroup_law R (ring_mult (num x) (den y)) (ring_mult (num y) (den x))) (den z)) (ring_mult (num z) (ring_mult (den x) (den y)))) (ring_mult (ring_mult (den x) (den y)) (den z))).",
            "VernacExtend",
            "1919b322c817ed819339185c2551aff51af2a16b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply RING_comp.",
            "VernacExtend",
            "8f518ff1cf76d7411db6b013b78d4ee8b1dd07c9"
        ],
        [
            "apply Trans with (sgroup_law R (sgroup_law R (ring_mult (ring_mult (num x) (den y)) (den z)) (ring_mult (ring_mult (num y) (den x)) (den z))) (ring_mult (num z) (ring_mult (den x) (den y)))).",
            "VernacExtend",
            "3095f87bb388ffb1e82284a73de14687bf708e5b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x) (den y)) (den z)) (sgroup_law R (ring_mult (ring_mult (num y) (den x)) (den z)) (ring_mult (num z) (ring_mult (den x) (den y))))).",
            "VernacExtend",
            "3f12b8c10a765c9ad3b3207efa560411d5fc302a"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply SGROUP_comp.",
            "VernacExtend",
            "19f16fec14285fe48601c960c87cb677b9ae46a6"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult (ring_mult (num y) (den z)) (den x)) (ring_mult (ring_mult (num z) (den y)) (den x))).",
            "VernacExtend",
            "7bc127a5c1a34e83e60b435557f4035af8d17fa7"
        ],
        [
            "apply SGROUP_comp.",
            "VernacExtend",
            "19f16fec14285fe48601c960c87cb677b9ae46a6"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (ring_mult (num z) (ring_mult (den y) (den x))); auto with algebra.",
            "VernacExtend",
            "4a202cd4ee4b4dcc1f1b5af1628dddf64d396c67"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold addfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "3cd08a2ee0284665e7f7872bb728c2f4c2dd3778"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "apply Trans with (ring_mult (sgroup_law R (num x) (monoid_unit R)) (den x)); auto with algebra.",
            "VernacExtend",
            "414bdcb632f66cb224d82a61b2c2df87679ef7c4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold opfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "3409edbc4e48163a967dc4b3c762a9b02112ea13"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "apply Trans with (group_inverse R (ring_mult (num x) (den y))); auto with algebra.",
            "VernacExtend",
            "93fde9b7b5637f5daaa4eec9ad7ed39b45189fad"
        ],
        [
            "apply Trans with (group_inverse R (ring_mult (num y) (den x))); auto with algebra.",
            "VernacExtend",
            "e5513121389858cf8eae0a75122c509fd5402079"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold addfraction_fun, opfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "662f997b154dd2739f3473ea808174a57266b586"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult (num x) (den x)) (ring_mult (group_inverse R (num x)) (den x))); auto with algebra.",
            "VernacExtend",
            "33c3533c070ae8ff30aafe77b9d0163d4e4699de"
        ],
        [
            "apply Trans with (ring_mult (sgroup_law R (num x) (group_inverse R (num x))) (den x)); auto with algebra.",
            "VernacExtend",
            "103aac2c15ca05d66e29dea2818706f1f429233f"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) (den x)); auto with algebra.",
            "VernacExtend",
            "9e66be54c3dcebbfe1fe27b8ec7356ca77cb4c8e"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "exact addfraction_fun_com.",
            "VernacExtend",
            "ff6c0a6e1012d687f9c6f63546d0f5fefcddc412"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7703dd6e080b1632786ba7300e4b0d555f00df0b"
        ],
        [
            "intros x x' y y' H' H'0; try assumption.",
            "VernacExtend",
            "a768092cb6d13bcbf8895ce3f66d1b23178e8ac3"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num x) (den x')) (ring_mult (num y) (den y'))); auto with algebra.",
            "VernacExtend",
            "8ebf7b800bb91c3c2a13514c76c49fae63a33d76"
        ],
        [
            "apply Trans with (ring_mult (ring_mult (num x') (den x)) (ring_mult (num y') (den y))); auto with algebra.",
            "VernacExtend",
            "0394978972e5b80f11f8fe22c099e206aadb25d7"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7703dd6e080b1632786ba7300e4b0d555f00df0b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7703dd6e080b1632786ba7300e4b0d555f00df0b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "apply Trans with (multfraction_fun x fraction1); auto with algebra.",
            "VernacExtend",
            "ae3cfd6f5503c3e2f4b15b0e14ee1fd2498a5b5a"
        ],
        [
            "apply multfraction_com.",
            "VernacExtend",
            "0e296d92979c542fabaaad59b245697d9701fbef"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7703dd6e080b1632786ba7300e4b0d555f00df0b"
        ],
        [
            "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7703dd6e080b1632786ba7300e4b0d555f00df0b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "exact multfraction_dist_l.",
            "VernacExtend",
            "e6f982d6a34ae6274b8a6b57301a0a657fdf652d"
        ],
        [
            "intros x y z; try assumption.",
            "VernacExtend",
            "80c83086f31221d7caf381e8fc065da8630ae3de"
        ],
        [
            "apply Trans with (multfraction_fun z (addfraction_fun x y)); auto with algebra.",
            "VernacExtend",
            "dabee6f05ecf7533ec093ad1d590bf1866d38d40"
        ],
        [
            "apply multfraction_com.",
            "VernacExtend",
            "0e296d92979c542fabaaad59b245697d9701fbef"
        ],
        [
            "apply Trans with (addfraction_fun (multfraction_fun z x) (multfraction_fun z y)); auto with algebra.",
            "VernacExtend",
            "a9ffa7729880ee2069fb2c56fec43f8c8bb97634"
        ],
        [
            "apply multfraction_dist_l.",
            "VernacExtend",
            "81b2f9a861d4734de8b6aa88776883461ddc2915"
        ],
        [
            "apply addfraction_law.",
            "VernacExtend",
            "52105f9e056987a7bd7ed4ed8b450baf3a1dc7f2"
        ],
        [
            "apply multfraction_com.",
            "VernacExtend",
            "0e296d92979c542fabaaad59b245697d9701fbef"
        ],
        [
            "apply multfraction_com.",
            "VernacExtend",
            "0e296d92979c542fabaaad59b245697d9701fbef"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition fract_field_ring : CRING.",
            "VernacDefinition",
            "350059cd2457ea1a0ba273654ea64368d16c98e0"
        ],
        [
            "apply (Build_cring (cring_ring:=fract_field_ring_aux)).",
            "VernacExtend",
            "5d24865f5d73939e6516ce77c9e40523798bb877"
        ],
        [
            "apply (Build_cring_on (R:=fract_field_ring_aux)).",
            "VernacExtend",
            "78fafededef019161635bb502b393212aa918721"
        ],
        [
            "exact multfraction_com.",
            "VernacExtend",
            "242064ab6c3fd09fdce56e805824dd6f8ca416aa"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Variable zero_dec : forall x : R, {Equal x (monoid_unit R)} + {~ Equal x (monoid_unit R)}.",
            "VernacAssumption",
            "add2d1249e789616b8ef42c317c03d5a34acdc8f"
        ],
        [
            "Definition invfraction_fun : fract_field_ring -> fract_field_ring := fun x : fraction_set => match zero_dec (num x) with | left _ => x | right n => Build_fraction (den x) (num x) n end.",
            "VernacDefinition",
            "1cbb09bcda2fd88ee7e797f991380e6bbb73eab6"
        ],
        [
            "Definition invfraction : MAP fract_field_ring fract_field_ring.",
            "VernacDefinition",
            "aba1a57eea1c8ed8c8396596c42ddedb8481ca86"
        ],
        [
            "apply (Build_Map (A:=fract_field_ring) (B:=fract_field_ring) (Ap:=invfraction_fun)).",
            "VernacExtend",
            "b2e85637467141cfdff5f4f08b83de2875e96013"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold invfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "5676f85349b74a49509bdecbe1206e812e119706"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "case (zero_dec (num x)); intros.",
            "VernacExtend",
            "25f4d698bb540a63965716063b610e00b16a469c"
        ],
        [
            "case (zero_dec (num y)); intros.",
            "VernacExtend",
            "4977eb35c7b825f9b9e14c7c34dc5367ad95adcd"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (Equal (den x) (monoid_unit R)).",
            "VernacExtend",
            "48e93417d87167823d05d411c6dc6bd66e9045fa"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) (num y)).",
            "VernacExtend",
            "f02f20be6c96fc2ded56ad9a997c2c50a9440794"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply Trans with (ring_mult (den y) (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "22f6a57d95dce0196e252175a2c2977fc57dd02f"
        ],
        [
            "apply INTEGRAL_DOMAIN_mult_n0_l with (num y); auto with algebra.",
            "VernacExtend",
            "e4088a253cd26069a42f508286dc058a93f112f5"
        ],
        [
            "apply Trans with (ring_mult (num x) (den y)); auto with algebra.",
            "VernacExtend",
            "f70aff5ef4deafff463ac6e7e5be8a9750856198"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) (den y)); auto with algebra.",
            "VernacExtend",
            "871b9750384b542e995e30c0e1567ef9a2e4133b"
        ],
        [
            "case (zero_dec (num y)); intros.",
            "VernacExtend",
            "4977eb35c7b825f9b9e14c7c34dc5367ad95adcd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (Equal (den y) (monoid_unit R)).",
            "VernacExtend",
            "f414554d31a771da962538e51a0001e9d4293b87"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) (num x)).",
            "VernacExtend",
            "1dfbd70da7bc809b93516c2ebd8c4c3362d8e31d"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply Trans with (ring_mult (den x) (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "f30499faefbc2dbb258b09855c5735ba085e1dda"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply INTEGRAL_DOMAIN_mult_n0_l with (num x); auto with algebra.",
            "VernacExtend",
            "4c3b635728c15621145542d882bc4c81ce951212"
        ],
        [
            "apply Trans with (ring_mult (num y) (den x)); auto with algebra.",
            "VernacExtend",
            "186da55ca62339a424e7f313c05ceb51588b349d"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) (den x)); auto with algebra.",
            "VernacExtend",
            "9e66be54c3dcebbfe1fe27b8ec7356ca77cb4c8e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Trans with (ring_mult (num y) (den x)); auto with algebra.",
            "VernacExtend",
            "186da55ca62339a424e7f313c05ceb51588b349d"
        ],
        [
            "apply Trans with (ring_mult (num x) (den y)); auto with algebra.",
            "VernacExtend",
            "f70aff5ef4deafff463ac6e7e5be8a9750856198"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Let ff_inr_r : forall x : fract_field_ring, ~ Equal x (monoid_unit fract_field_ring) -> Equal (ring_mult x (Ap invfraction x)) (ring_unit fract_field_ring).",
            "VernacDefinition",
            "2a06ca6746ce8b4cbdb6435c1edaab751512e9de"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold invfraction_fun, eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "5676f85349b74a49509bdecbe1206e812e119706"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "case (zero_dec (num x)); simpl in |- *; intros.",
            "VernacExtend",
            "6f5934d289940bdb7905e1c08b0b699b80dbc7c0"
        ],
        [
            "absurd (Equal (num x) (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "bca3b4bdb997808491e609de6c6fc5c0d25d9248"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Trans with (num x); auto with algebra.",
            "VernacExtend",
            "6f3ace234bef93a125850555e7ae9dd9e9c8ebbb"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply Trans with (ring_mult (num x) (den x)); auto with algebra.",
            "VernacExtend",
            "fde4fac785bd1abe50c6b6ae0e9b9902777cbd43"
        ],
        [
            "apply Trans with (ring_mult (den x) (num x)); auto with algebra.",
            "VernacExtend",
            "ccc5b8ccd205ae80cf824d0345569bde6df9023f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ff_inr_r: algebra.",
            "VernacHints",
            "21f7e5705ded99a45e4252cb305dc053e3698e62"
        ],
        [
            "Let ff_field_on : field_on fract_field_ring.",
            "VernacDefinition",
            "b392d7ee757060c7c03e76604cda251b8ab05f56"
        ],
        [
            "apply (Build_field_on (R:=fract_field_ring) (field_inverse_map:=invfraction)).",
            "VernacExtend",
            "e176359550d37eef21d1d7888446b1589ddc5063"
        ],
        [
            "exact ff_inr_r.",
            "VernacExtend",
            "8caa65868f002a7d993f9ba35f675f969bb65260"
        ],
        [
            "intros x H'; try assumption.",
            "VernacExtend",
            "58e256260d8e1308b78670caf8fd802cbcefd3be"
        ],
        [
            "apply Trans with (ring_mult x (Ap invfraction x)); auto with algebra.",
            "VernacExtend",
            "da48d294d7ab771131ba5bbf9aa622af89f283bb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold eqfraction in |- *; simpl in |- *.",
            "VernacExtend",
            "7af4c0405b03c9a8e11e7a6296701b9c2b544552"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "absurd (Equal (ring_unit R:R) (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "ef5ca8ac30f253cae5f0ce4d77bd57fedaa4b9e0"
        ],
        [
            "apply Trans with (ring_mult (ring_unit R) (ring_unit R)); auto with algebra.",
            "VernacExtend",
            "ecdc50641b6215062a1e133c3b40e88c0d5b731e"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) (ring_unit R)); auto with algebra.",
            "VernacExtend",
            "bbb68ef7f979fb9ce1ffd4f0cc6ba7674ea1f429"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition fraction_cfield := Build_cfield ff_field_on.",
            "VernacDefinition",
            "4ad8b61d703b4e9fadf3fd2575b4b0e933eceb8a"
        ],
        [
            "End Def.",
            "VernacEndSegment",
            "616ad5692568c74f61a9df3a82ac03d2b7ebac01"
        ]
    ],
    "proofs": [
        {
            "name": "eqfraction_refl",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x; red in |- *.",
                        "VernacExtend",
                        "34b2893ccb48513c3991f110cf6dfcdedf3f0880"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqfraction0",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "case x; unfold eqfraction, fraction0 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ca6dae799ab5e8d480ccdbedba0934de4dbdd571"
                    ]
                },
                {
                    "command": [
                        "intros numer denom H' H'0; try assumption.",
                        "VernacExtend",
                        "aa0910871bc13bc5729f164b197214c29cae22a6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult numer (ring_unit R)); auto with algebra.",
                        "VernacExtend",
                        "6eb35151fcffe497ad3e351700ea50ffeb43a4d2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) denom); auto with algebra.",
                        "VernacExtend",
                        "af7cb1129c0aee6ee7080c2207e87f45262d3723"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqfraction_num0",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "case x; unfold eqfraction, fraction0 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ca6dae799ab5e8d480ccdbedba0934de4dbdd571"
                    ]
                },
                {
                    "command": [
                        "intros numer denom H' H'0; try assumption.",
                        "VernacExtend",
                        "aa0910871bc13bc5729f164b197214c29cae22a6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with numer; auto with algebra.",
                        "VernacExtend",
                        "0519f6910a63ada78b551b5a91867650c9bb8200"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqfraction_sym",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, eqfraction in |- *; auto with algebra.",
                        "VernacExtend",
                        "543e3fe17da09e9a8cefcb3a428c889aa70a0008"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqfraction_trans",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, eqfraction in |- *.",
                        "VernacExtend",
                        "2e6193bbce2f21c4b53d54334afe496959aae0a1"
                    ]
                },
                {
                    "command": [
                        "intros x y z H' H'0; try assumption.",
                        "VernacExtend",
                        "92486dfbaec6209765e08194fc2670eff8aef754"
                    ]
                },
                {
                    "command": [
                        "apply INTEGRAL_DOMAIN_simpl_l with (den y).",
                        "VernacExtend",
                        "3f88d91194db861a8fa7ce0f6bc23c4a2c272bb7"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (den y) (num x)) (den z)).",
                        "VernacExtend",
                        "0dab4107049f5fd4dfe231e834c63b901511c484"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num x) (den y)) (den z)).",
                        "VernacExtend",
                        "6f28593ddce0dba65e056b0c63a2a630bb0e65b7"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num y) (den x)) (den z)).",
                        "VernacExtend",
                        "2988dcd9b015a3055332eacf4ba33ec209ca7eb8"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (den x) (num y)) (den z)).",
                        "VernacExtend",
                        "3d9940ff0818e2559fb48d4923bbd2dbc570653d"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den x) (ring_mult (num y) (den z))).",
                        "VernacExtend",
                        "53de65760fd2fb7d654df1b5825aa3e1970bcc91"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den x) (ring_mult (num z) (den y))).",
                        "VernacExtend",
                        "91eff7d36fe51ed53dbc2718a6161ed8e13ff8e2"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (den x) (num z)) (den y)).",
                        "VernacExtend",
                        "fbea02f932700c8a3738bbbc3868a86f2ee9dd19"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num z) (den x)) (den y)); auto with algebra.",
                        "VernacExtend",
                        "cbf9cfac2daa21f21f57a3d99dfb2670f4bdf2e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fraction_set",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "apply (Build_Setoid (Carrier:=fraction) (Equal:=eqfraction)).",
                        "VernacExtend",
                        "7d9bb87950c3c089e8cbf1e5fdeeee7f816441a0"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "exact eqfraction_refl.",
                        "VernacExtend",
                        "fa2871aa3f90c4bf3c22c28661831a68d3254d06"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "exact eqfraction_trans.",
                        "VernacExtend",
                        "b94ce6f4201d5559f43f538fb3c08b318d0ddfc7"
                    ]
                },
                {
                    "command": [
                        "exact eqfraction_sym.",
                        "VernacExtend",
                        "edc2599ad7579cad8a87ef0e691b0c757f95b44f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "addfraction_law_l",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "unfold addfraction_fun in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3f571e6893423ecf26aa04aed629795d42ed208a"
                    ]
                },
                {
                    "command": [
                        "unfold eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7af4c0405b03c9a8e11e7a6296701b9c2b544552"
                    ]
                },
                {
                    "command": [
                        "intros x x' y H'; try assumption.",
                        "VernacExtend",
                        "bcfc37d06b0d6e192e2c893a5c73f2261dc3d7fc"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (sgroup_law R (ring_mult (num x) (den y)) (ring_mult (num y) (den x))) (den x')) (den y)).",
                        "VernacExtend",
                        "568a42ed73cb6ed0c1450be784f98ae60333af4d"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (sgroup_law R (ring_mult (num x') (den y)) (ring_mult (num y) (den x'))) (den x)) (den y)).",
                        "VernacExtend",
                        "e4959e5eec9378c0715917faa2ee72818b75f0a4"
                    ]
                },
                {
                    "command": [
                        "apply RING_comp.",
                        "VernacExtend",
                        "8f518ff1cf76d7411db6b013b78d4ee8b1dd07c9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x) (den y)) (den x')) (ring_mult (ring_mult (num y) (den x)) (den x'))).",
                        "VernacExtend",
                        "935d64ae4568eeb9e1f530fee59d0f1232425b00"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x') (den y)) (den x)) (ring_mult (ring_mult (num y) (den x')) (den x))).",
                        "VernacExtend",
                        "2ed73fd036cbae5673ba24229b68557fc35f7503"
                    ]
                },
                {
                    "command": [
                        "apply SGROUP_comp.",
                        "VernacExtend",
                        "19f16fec14285fe48601c960c87cb677b9ae46a6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (den y) (num x)) (den x')).",
                        "VernacExtend",
                        "83a7b59b84d98109a596250e9166e7d35a089432"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (den y) (num x')) (den x)).",
                        "VernacExtend",
                        "ce88709fcb21a11404432fc4153936c53cdceb01"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den y) (ring_mult (num x) (den x'))).",
                        "VernacExtend",
                        "e2bcc460f2fea3aded48bde4db75934607af116b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den y) (ring_mult (num x') (den x))).",
                        "VernacExtend",
                        "4d918b44281ceab6814e22d0fd5bb1b2ccbf8f1b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num y) (ring_mult (den x) (den x'))).",
                        "VernacExtend",
                        "976a0943b4139cf11d1a80d8375b7c77dff28d05"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num y) (ring_mult (den x') (den x))).",
                        "VernacExtend",
                        "ecf243992d447dca118c55fd8bb64ee48036c8e1"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addfraction_fun_com",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "unfold addfraction_fun in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3f571e6893423ecf26aa04aed629795d42ed208a"
                    ]
                },
                {
                    "command": [
                        "unfold eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7af4c0405b03c9a8e11e7a6296701b9c2b544552"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "apply RING_comp; auto with algebra.",
                        "VernacExtend",
                        "c1417d827dd874753c1874c12fe0f3b15a32d6e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addfraction_law_r",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros x y y' H'; try assumption.",
                        "VernacExtend",
                        "1870a0556805b3f946c7538fdfec789edec6a18f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (addfraction_fun y x).",
                        "VernacExtend",
                        "ae1cd8ee3b96c968df2cc7c2a39d9d58acc21933"
                    ]
                },
                {
                    "command": [
                        "apply addfraction_fun_com.",
                        "VernacExtend",
                        "bd3a1d84e0487cfb99aacf18138de4d46b25a4ac"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (addfraction_fun y' x).",
                        "VernacExtend",
                        "9b59e0e892ee240d1077b606b148d196561943a8"
                    ]
                },
                {
                    "command": [
                        "apply addfraction_law_l; auto with algebra.",
                        "VernacExtend",
                        "790e9c4ac2597d04b2bc23a8fe31c8b37f7a7b57"
                    ]
                },
                {
                    "command": [
                        "apply addfraction_fun_com.",
                        "VernacExtend",
                        "bd3a1d84e0487cfb99aacf18138de4d46b25a4ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addfraction_law",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x x' y y' H' H'0; try assumption.",
                        "VernacExtend",
                        "a768092cb6d13bcbf8895ce3f66d1b23178e8ac3"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (addfraction_fun x' y).",
                        "VernacExtend",
                        "0b3b78e803c2c0a0b5742c0ce6a4a244c280df57"
                    ]
                },
                {
                    "command": [
                        "apply addfraction_law_l; auto with algebra.",
                        "VernacExtend",
                        "790e9c4ac2597d04b2bc23a8fe31c8b37f7a7b57"
                    ]
                },
                {
                    "command": [
                        "apply addfraction_law_r; auto with algebra.",
                        "VernacExtend",
                        "c81193ef35a8054b15babb47f73f34d3d0260ebf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multfraction_dist_l",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7703dd6e080b1632786ba7300e4b0d555f00df0b"
                    ]
                },
                {
                    "command": [
                        "intros x y z; try assumption.",
                        "VernacExtend",
                        "80c83086f31221d7caf381e8fc065da8630ae3de"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num x) (sgroup_law R (ring_mult (num y) (den z)) (ring_mult (num z) (den y)))) (ring_mult (den x) (ring_mult (den y) (ring_mult (den x) (den z))))).",
                        "VernacExtend",
                        "511e2d0b47d35f6a90df4a52f96942a6750b7645"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (ring_mult (num x) (sgroup_law R (ring_mult (num y) (den z)) (ring_mult (num z) (den y)))) (den x)) (ring_mult (den y) (ring_mult (den x) (den z)))).",
                        "VernacExtend",
                        "76679e91274000193cf00455c2aabb572a883ca0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply RING_comp.",
                        "VernacExtend",
                        "8f518ff1cf76d7411db6b013b78d4ee8b1dd07c9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (sgroup_law R (ring_mult (num x) (ring_mult (num y) (den z))) (ring_mult (num x) (ring_mult (num z) (den y)))) (den x)).",
                        "VernacExtend",
                        "7799cfbbf27bd0deeabeae61aded54136d22b6c8"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x) (ring_mult (num y) (den z))) (den x)) (ring_mult (ring_mult (num x) (ring_mult (num z) (den y))) (den x))).",
                        "VernacExtend",
                        "e77b4356514c10faab2d85d871a0322df5072083"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply SGROUP_comp.",
                        "VernacExtend",
                        "19f16fec14285fe48601c960c87cb677b9ae46a6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (ring_mult (num x) (num y)) (den z)) (den x)).",
                        "VernacExtend",
                        "993f4472b193f5908b798b20402a11f911cf1548"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num x) (num y)) (ring_mult (den z) (den x))); auto with algebra.",
                        "VernacExtend",
                        "f5e05b1a808a81b54c2ea4e9fa4108d9d4c71988"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (ring_mult (num x) (num z)) (den y)) (den x)).",
                        "VernacExtend",
                        "85fe0cf2c306a0b73308804c91f87e12b78922e1"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num x) (num z)) (ring_mult (den y) (den x))); auto with algebra.",
                        "VernacExtend",
                        "d5ae67d23b70edda15a84143a44a811279280e2d"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multfraction_com",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "71d368c930dc4905688ad38d31f7a05819c67498"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fract_field_ring_aux",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_RING (E:=fraction_set) (ringplus:=addfraction_fun) (ringmult:=multfraction_fun) (zero:=fraction0) (un:=fraction1) (ringopp:=opfraction_fun)).",
                        "VernacExtend",
                        "31d5ce606135e8a8c0656afb1d09265d0d87e212"
                    ]
                },
                {
                    "command": [
                        "exact addfraction_law.",
                        "VernacExtend",
                        "3329ae9cd7d48e8575f101cb5e803f498f1298d7"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold addfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3cd08a2ee0284665e7f7872bb728c2f4c2dd3778"
                    ]
                },
                {
                    "command": [
                        "intros x y z; try assumption.",
                        "VernacExtend",
                        "80c83086f31221d7caf381e8fc065da8630ae3de"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (sgroup_law R (ring_mult (sgroup_law R (ring_mult (num x) (den y)) (ring_mult (num y) (den x))) (den z)) (ring_mult (num z) (ring_mult (den x) (den y)))) (ring_mult (ring_mult (den x) (den y)) (den z))).",
                        "VernacExtend",
                        "1919b322c817ed819339185c2551aff51af2a16b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply RING_comp.",
                        "VernacExtend",
                        "8f518ff1cf76d7411db6b013b78d4ee8b1dd07c9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (sgroup_law R (ring_mult (ring_mult (num x) (den y)) (den z)) (ring_mult (ring_mult (num y) (den x)) (den z))) (ring_mult (num z) (ring_mult (den x) (den y)))).",
                        "VernacExtend",
                        "3095f87bb388ffb1e82284a73de14687bf708e5b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult (ring_mult (num x) (den y)) (den z)) (sgroup_law R (ring_mult (ring_mult (num y) (den x)) (den z)) (ring_mult (num z) (ring_mult (den x) (den y))))).",
                        "VernacExtend",
                        "3f12b8c10a765c9ad3b3207efa560411d5fc302a"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply SGROUP_comp.",
                        "VernacExtend",
                        "19f16fec14285fe48601c960c87cb677b9ae46a6"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult (ring_mult (num y) (den z)) (den x)) (ring_mult (ring_mult (num z) (den y)) (den x))).",
                        "VernacExtend",
                        "7bc127a5c1a34e83e60b435557f4035af8d17fa7"
                    ]
                },
                {
                    "command": [
                        "apply SGROUP_comp.",
                        "VernacExtend",
                        "19f16fec14285fe48601c960c87cb677b9ae46a6"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num z) (ring_mult (den y) (den x))); auto with algebra.",
                        "VernacExtend",
                        "4a202cd4ee4b4dcc1f1b5af1628dddf64d396c67"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold addfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3cd08a2ee0284665e7f7872bb728c2f4c2dd3778"
                    ]
                },
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (sgroup_law R (num x) (monoid_unit R)) (den x)); auto with algebra.",
                        "VernacExtend",
                        "414bdcb632f66cb224d82a61b2c2df87679ef7c4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold opfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3409edbc4e48163a967dc4b3c762a9b02112ea13"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse R (ring_mult (num x) (den y))); auto with algebra.",
                        "VernacExtend",
                        "93fde9b7b5637f5daaa4eec9ad7ed39b45189fad"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse R (ring_mult (num y) (den x))); auto with algebra.",
                        "VernacExtend",
                        "e5513121389858cf8eae0a75122c509fd5402079"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold addfraction_fun, opfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "662f997b154dd2739f3473ea808174a57266b586"
                    ]
                },
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult (num x) (den x)) (ring_mult (group_inverse R (num x)) (den x))); auto with algebra.",
                        "VernacExtend",
                        "33c3533c070ae8ff30aafe77b9d0163d4e4699de"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (sgroup_law R (num x) (group_inverse R (num x))) (den x)); auto with algebra.",
                        "VernacExtend",
                        "103aac2c15ca05d66e29dea2818706f1f429233f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) (den x)); auto with algebra.",
                        "VernacExtend",
                        "9e66be54c3dcebbfe1fe27b8ec7356ca77cb4c8e"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "exact addfraction_fun_com.",
                        "VernacExtend",
                        "ff6c0a6e1012d687f9c6f63546d0f5fefcddc412"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7703dd6e080b1632786ba7300e4b0d555f00df0b"
                    ]
                },
                {
                    "command": [
                        "intros x x' y y' H' H'0; try assumption.",
                        "VernacExtend",
                        "a768092cb6d13bcbf8895ce3f66d1b23178e8ac3"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num x) (den x')) (ring_mult (num y) (den y'))); auto with algebra.",
                        "VernacExtend",
                        "8ebf7b800bb91c3c2a13514c76c49fae63a33d76"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_mult (num x') (den x)) (ring_mult (num y') (den y))); auto with algebra.",
                        "VernacExtend",
                        "0394978972e5b80f11f8fe22c099e206aadb25d7"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7703dd6e080b1632786ba7300e4b0d555f00df0b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7703dd6e080b1632786ba7300e4b0d555f00df0b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (multfraction_fun x fraction1); auto with algebra.",
                        "VernacExtend",
                        "ae3cfd6f5503c3e2f4b15b0e14ee1fd2498a5b5a"
                    ]
                },
                {
                    "command": [
                        "apply multfraction_com.",
                        "VernacExtend",
                        "0e296d92979c542fabaaad59b245697d9701fbef"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7703dd6e080b1632786ba7300e4b0d555f00df0b"
                    ]
                },
                {
                    "command": [
                        "unfold multfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7703dd6e080b1632786ba7300e4b0d555f00df0b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "exact multfraction_dist_l.",
                        "VernacExtend",
                        "e6f982d6a34ae6274b8a6b57301a0a657fdf652d"
                    ]
                },
                {
                    "command": [
                        "intros x y z; try assumption.",
                        "VernacExtend",
                        "80c83086f31221d7caf381e8fc065da8630ae3de"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (multfraction_fun z (addfraction_fun x y)); auto with algebra.",
                        "VernacExtend",
                        "dabee6f05ecf7533ec093ad1d590bf1866d38d40"
                    ]
                },
                {
                    "command": [
                        "apply multfraction_com.",
                        "VernacExtend",
                        "0e296d92979c542fabaaad59b245697d9701fbef"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (addfraction_fun (multfraction_fun z x) (multfraction_fun z y)); auto with algebra.",
                        "VernacExtend",
                        "a9ffa7729880ee2069fb2c56fec43f8c8bb97634"
                    ]
                },
                {
                    "command": [
                        "apply multfraction_dist_l.",
                        "VernacExtend",
                        "81b2f9a861d4734de8b6aa88776883461ddc2915"
                    ]
                },
                {
                    "command": [
                        "apply addfraction_law.",
                        "VernacExtend",
                        "52105f9e056987a7bd7ed4ed8b450baf3a1dc7f2"
                    ]
                },
                {
                    "command": [
                        "apply multfraction_com.",
                        "VernacExtend",
                        "0e296d92979c542fabaaad59b245697d9701fbef"
                    ]
                },
                {
                    "command": [
                        "apply multfraction_com.",
                        "VernacExtend",
                        "0e296d92979c542fabaaad59b245697d9701fbef"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "fract_field_ring",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "apply (Build_cring (cring_ring:=fract_field_ring_aux)).",
                        "VernacExtend",
                        "5d24865f5d73939e6516ce77c9e40523798bb877"
                    ]
                },
                {
                    "command": [
                        "apply (Build_cring_on (R:=fract_field_ring_aux)).",
                        "VernacExtend",
                        "78fafededef019161635bb502b393212aa918721"
                    ]
                },
                {
                    "command": [
                        "exact multfraction_com.",
                        "VernacExtend",
                        "242064ab6c3fd09fdce56e805824dd6f8ca416aa"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "invfraction",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "apply (Build_Map (A:=fract_field_ring) (B:=fract_field_ring) (Ap:=invfraction_fun)).",
                        "VernacExtend",
                        "b2e85637467141cfdff5f4f08b83de2875e96013"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold invfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5676f85349b74a49509bdecbe1206e812e119706"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "case (zero_dec (num x)); intros.",
                        "VernacExtend",
                        "25f4d698bb540a63965716063b610e00b16a469c"
                    ]
                },
                {
                    "command": [
                        "case (zero_dec (num y)); intros.",
                        "VernacExtend",
                        "4977eb35c7b825f9b9e14c7c34dc5367ad95adcd"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (den x) (monoid_unit R)).",
                        "VernacExtend",
                        "48e93417d87167823d05d411c6dc6bd66e9045fa"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) (num y)).",
                        "VernacExtend",
                        "f02f20be6c96fc2ded56ad9a997c2c50a9440794"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den y) (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "22f6a57d95dce0196e252175a2c2977fc57dd02f"
                    ]
                },
                {
                    "command": [
                        "apply INTEGRAL_DOMAIN_mult_n0_l with (num y); auto with algebra.",
                        "VernacExtend",
                        "e4088a253cd26069a42f508286dc058a93f112f5"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num x) (den y)); auto with algebra.",
                        "VernacExtend",
                        "f70aff5ef4deafff463ac6e7e5be8a9750856198"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) (den y)); auto with algebra.",
                        "VernacExtend",
                        "871b9750384b542e995e30c0e1567ef9a2e4133b"
                    ]
                },
                {
                    "command": [
                        "case (zero_dec (num y)); intros.",
                        "VernacExtend",
                        "4977eb35c7b825f9b9e14c7c34dc5367ad95adcd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (den y) (monoid_unit R)).",
                        "VernacExtend",
                        "f414554d31a771da962538e51a0001e9d4293b87"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) (num x)).",
                        "VernacExtend",
                        "1dfbd70da7bc809b93516c2ebd8c4c3362d8e31d"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den x) (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "f30499faefbc2dbb258b09855c5735ba085e1dda"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply INTEGRAL_DOMAIN_mult_n0_l with (num x); auto with algebra.",
                        "VernacExtend",
                        "4c3b635728c15621145542d882bc4c81ce951212"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num y) (den x)); auto with algebra.",
                        "VernacExtend",
                        "186da55ca62339a424e7f313c05ceb51588b349d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) (den x)); auto with algebra.",
                        "VernacExtend",
                        "9e66be54c3dcebbfe1fe27b8ec7356ca77cb4c8e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num y) (den x)); auto with algebra.",
                        "VernacExtend",
                        "186da55ca62339a424e7f313c05ceb51588b349d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num x) (den y)); auto with algebra.",
                        "VernacExtend",
                        "f70aff5ef4deafff463ac6e7e5be8a9750856198"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ff_inr_r",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold invfraction_fun, eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5676f85349b74a49509bdecbe1206e812e119706"
                    ]
                },
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "case (zero_dec (num x)); simpl in |- *; intros.",
                        "VernacExtend",
                        "6f5934d289940bdb7905e1c08b0b699b80dbc7c0"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal (num x) (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "bca3b4bdb997808491e609de6c6fc5c0d25d9248"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (num x); auto with algebra.",
                        "VernacExtend",
                        "6f3ace234bef93a125850555e7ae9dd9e9c8ebbb"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (num x) (den x)); auto with algebra.",
                        "VernacExtend",
                        "fde4fac785bd1abe50c6b6ae0e9b9902777cbd43"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (den x) (num x)); auto with algebra.",
                        "VernacExtend",
                        "ccc5b8ccd205ae80cf824d0345569bde6df9023f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ff_field_on",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "apply (Build_field_on (R:=fract_field_ring) (field_inverse_map:=invfraction)).",
                        "VernacExtend",
                        "e176359550d37eef21d1d7888446b1589ddc5063"
                    ]
                },
                {
                    "command": [
                        "exact ff_inr_r.",
                        "VernacExtend",
                        "8caa65868f002a7d993f9ba35f675f969bb65260"
                    ]
                },
                {
                    "command": [
                        "intros x H'; try assumption.",
                        "VernacExtend",
                        "58e256260d8e1308b78670caf8fd802cbcefd3be"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult x (Ap invfraction x)); auto with algebra.",
                        "VernacExtend",
                        "da48d294d7ab771131ba5bbf9aa622af89f283bb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold eqfraction in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7af4c0405b03c9a8e11e7a6296701b9c2b544552"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal (ring_unit R:R) (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "ef5ca8ac30f253cae5f0ce4d77bd57fedaa4b9e0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (ring_unit R) (ring_unit R)); auto with algebra.",
                        "VernacExtend",
                        "ecdc50641b6215062a1e133c3b40e88c0d5b731e"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) (ring_unit R)); auto with algebra.",
                        "VernacExtend",
                        "bbb68ef7f979fb9ce1ffd4f0cc6ba7674ea1f429"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}