{
    "filename": "Group_quotient.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Sub_group.",
            "VernacRequire",
            "4bc14c795e9622489e646abe87367a34990a1ba0"
        ],
        [
            "Require Export Group_util.",
            "VernacRequire",
            "f24aad8fbb275f0ceaac7b195333eb7b08e1abaf"
        ],
        [
            "Section Def.",
            "VernacBeginSection",
            "891f679f68bab7ae72311468953cd39d353d2080"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Variable H : subgroup G.",
            "VernacAssumption",
            "784d57625dd7d48979e0b40cf9a93552d3fd5cc3"
        ],
        [
            "Definition normal := forall x y : G, in_part y H -> in_part (sgroup_law _ x (sgroup_law _ y (group_inverse _ x))) H.",
            "VernacDefinition",
            "135222073c7403671b5373020a25c0c233c1f925"
        ],
        [
            "Hypothesis Hnormal : normal.",
            "VernacAssumption",
            "404364e80c50d549d0bafa4dd0d981ab0ca774a6"
        ],
        [
            "Definition group_quo_eq (x y : G) := in_part (sgroup_law _ x (group_inverse _ y)) H.",
            "VernacDefinition",
            "55d77761ff02f997f6e133fa352f99e5ce0899e9"
        ],
        [
            "Definition group_quo_eqrel : Relation G.",
            "VernacDefinition",
            "a6f10f09b1db98b6d8405b071d3a9ca7290a75c8"
        ],
        [
            "apply (Build_Relation (E:=G) (Rel_fun:=group_quo_eq)).",
            "VernacExtend",
            "f6adac63dc3ed36f67c0bfce784d832c4f9655a1"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold app_rel, group_quo_eq in |- *.",
            "VernacExtend",
            "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
        ],
        [
            "intros x x' y y' H' H'0 H'1; try assumption.",
            "VernacExtend",
            "87bcd091db9043c26752ebcbb13d79b662ea10bd"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (group_inverse G y)); auto with algebra.",
            "VernacExtend",
            "8684ded180e366d493fb71772a0c338e1d0c6ef6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma group_quo_eqrel_equiv : equivalence group_quo_eqrel.",
            "VernacStartTheoremProof",
            "2b752c7c056f22da2d1fbb03009ce9439f30d7af"
        ],
        [
            "red in Hnormal.",
            "VernacExtend",
            "56bc1b2684cc551cfc98a0cbb0821fa796d28220"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x; red in |- *.",
            "VernacExtend",
            "34b2893ccb48513c3991f110cf6dfcdedf3f0880"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold app_rel, group_quo_eq in |- *.",
            "VernacExtend",
            "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G (monoid_unit G) (group_inverse G x))); auto with algebra.",
            "VernacExtend",
            "0facd62e64c245816c6a320900a0d19162de6c36"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold app_rel, group_quo_eq in |- *.",
            "VernacExtend",
            "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
        ],
        [
            "intros x y z H' H'0; try assumption.",
            "VernacExtend",
            "92486dfbaec6209765e08194fc2670eff8aef754"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G x (group_inverse G y)) (sgroup_law G y (group_inverse G z))); auto with algebra.",
            "VernacExtend",
            "d64a19056cb77c001c2dbda7b7b54c484fcb6e97"
        ],
        [
            "apply Trans with (sgroup_law G x (sgroup_law G (group_inverse G y) (sgroup_law G y (group_inverse G z)))); auto with algebra.",
            "VernacExtend",
            "c1b579ad99ec9fb7d41d488e6b783003a14c0fa2"
        ],
        [
            "apply Trans with (sgroup_law G x (sgroup_law G (sgroup_law G (group_inverse G y) y) (group_inverse G z))); auto with algebra.",
            "VernacExtend",
            "fcd97d0fc27b272c76804dc42eaed9ebb356af66"
        ],
        [
            "apply Trans with (sgroup_law G x (sgroup_law G (monoid_unit G) (group_inverse G z))); auto with algebra.",
            "VernacExtend",
            "e1f7c88c5e96598f81a5adb8dbebbdf6524585ab"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold app_rel, group_quo_eq in |- *.",
            "VernacExtend",
            "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "apply in_part_comp_l with (group_inverse G (sgroup_law G x (group_inverse G y))); auto with algebra.",
            "VernacExtend",
            "6ffa7bf76f1a457324dab5fe7476c1a8cfd9823d"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G (group_inverse G y)) (group_inverse G x)); auto with algebra.",
            "VernacExtend",
            "b7e8d4d00ace208bb95e22086874cd0accdf9d78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition group_quo_set := quotient G group_quo_eqrel group_quo_eqrel_equiv.",
            "VernacDefinition",
            "a1f7bad466152f224157c15ce3256f701d51d0ce"
        ],
        [
            "Lemma normal_com_in : forall x y : G, in_part (sgroup_law _ x y) H -> in_part (sgroup_law _ y x) H.",
            "VernacStartTheoremProof",
            "f5db003701f32ca9d3af3abbfdf22b4282f74fa3"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G y (sgroup_law G (sgroup_law G x y) (group_inverse G y))); auto with algebra.",
            "VernacExtend",
            "9443e5bec8f54321c4fed2086fa88959167ed043"
        ],
        [
            "apply SGROUP_comp; auto with algebra.",
            "VernacExtend",
            "1228d5420c7112d12f13dd08022ffbf79385f944"
        ],
        [
            "apply Trans with (sgroup_law G x (sgroup_law G y (group_inverse G y))); auto with algebra.",
            "VernacExtend",
            "a63a66ce9d51054d71af9ff6aa123acbc97c7164"
        ],
        [
            "apply Trans with (sgroup_law G x (monoid_unit G)); auto with algebra.",
            "VernacExtend",
            "304887a266f2bb350585502cc924a982045deb22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate normal_com_in: algebra.",
            "VernacHints",
            "148e9859f4c18fe55bf8eee0366cbd06c3df5a11"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Definition group_quo : group.",
            "VernacDefinition",
            "c873db04cbc658b000ea7b7ed5b3ba172c3d6c1e"
        ],
        [
            "apply (BUILD_GROUP (E:=group_quo_set) (genlaw:=fun x y : G => sgroup_law _ x y) (e:=monoid_unit G) (geninv:=fun x : G => group_inverse _ x)).",
            "VernacExtend",
            "ddc369b86a8242b4ce6696e2c597823a4a9a19f6"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold app_rel, group_quo_eq in |- *.",
            "VernacExtend",
            "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
        ],
        [
            "intros x x' y y' H' H'0; try assumption.",
            "VernacExtend",
            "a768092cb6d13bcbf8895ce3f66d1b23178e8ac3"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (group_inverse G (sgroup_law G x' y')))); auto with algebra.",
            "VernacExtend",
            "cd3ea97bbfdb731e561a1f982826a51f717c7fa4"
        ],
        [
            "apply normal_com_in.",
            "VernacExtend",
            "e66b25b3ae40804bedf8f69bf57b6c7589aa0cd2"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G y (sgroup_law G (group_inverse G y') (group_inverse G x'))) x); auto with algebra.",
            "VernacExtend",
            "f181764cd8e86417d59f7ed5250178d0a2dec333"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G (sgroup_law G y (group_inverse G y')) (group_inverse G x')) x); auto with algebra.",
            "VernacExtend",
            "f34bb0d9e010bb1b8b66c9f22723feb5e77ec46d"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G y (group_inverse G y')) (sgroup_law G (group_inverse G x') x)); auto with algebra.",
            "VernacExtend",
            "571210ad9bf19427c8f56185e2688624aae8c4fe"
        ],
        [
            "intros x y z; try assumption.",
            "VernacExtend",
            "80c83086f31221d7caf381e8fc065da8630ae3de"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold app_rel, group_quo_eq in |- *.",
            "VernacExtend",
            "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G (sgroup_law G x y) z) (sgroup_law G (group_inverse G (sgroup_law G y z)) (group_inverse G x))); auto with algebra.",
            "VernacExtend",
            "792b1f72f965ecbda7abcd01a32b5a1c2de091de"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G (sgroup_law G x y) z) (sgroup_law G (sgroup_law G (group_inverse G z) (group_inverse G y)) (group_inverse G x))); auto with algebra.",
            "VernacExtend",
            "8a26bf985147677cf4f745c72ef7a7063c12ff15"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G x (sgroup_law G y z)) (sgroup_law G (group_inverse G z) (sgroup_law G (group_inverse G y) (group_inverse G x)))); auto with algebra.",
            "VernacExtend",
            "cdbf5f9e7c20c52f32c26ba5186602bb3d0fe344"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G (sgroup_law G y z) (sgroup_law G (group_inverse G z) (sgroup_law G (group_inverse G y) (group_inverse G x))))); auto with algebra.",
            "VernacExtend",
            "b69f52827766b901942047427f73f8c1a3e502ee"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G z (sgroup_law G (group_inverse G z) (sgroup_law G (group_inverse G y) (group_inverse G x)))))); auto with algebra.",
            "VernacExtend",
            "05a616dfa25231a38f110a709e22ce832f211876"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G (sgroup_law G z (group_inverse G z)) (sgroup_law G (group_inverse G y) (group_inverse G x))))); auto with algebra.",
            "VernacExtend",
            "bf6af1e6b7512b86e9ae6ccf3bc446f9ff412fae"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G (monoid_unit G) (sgroup_law G (group_inverse G y) (group_inverse G x))))); auto with algebra.",
            "VernacExtend",
            "c928915907c0747808b9ca3e79783c8555f63cc4"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G (group_inverse G y) (group_inverse G x)))); auto with algebra.",
            "VernacExtend",
            "43505896868ad581e9e1f501cfc1f21f2df9cc7e"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G x y) (sgroup_law G (group_inverse G y) (group_inverse G x))); auto with algebra.",
            "VernacExtend",
            "256a9384e92dee059cbe7d09969a7dcd40bd760c"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G x y) (group_inverse G (sgroup_law G x y))); auto with algebra.",
            "VernacExtend",
            "679d450c374cd223e5bc7e43f81a886068999bbd"
        ],
        [
            "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold cart_eq, group_quo_eq in |- *.",
            "VernacExtend",
            "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (group_inverse G x)); auto with algebra.",
            "VernacExtend",
            "2399fab45cc9dac661edc89555fbb2b02ca7b0dd"
        ],
        [
            "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold cart_eq, group_quo_eq in |- *.",
            "VernacExtend",
            "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "apply normal_com_in.",
            "VernacExtend",
            "e66b25b3ae40804bedf8f69bf57b6c7589aa0cd2"
        ],
        [
            "apply in_part_comp_l with (group_inverse G (sgroup_law G x (group_inverse G y))); auto with algebra.",
            "VernacExtend",
            "6ffa7bf76f1a457324dab5fe7476c1a8cfd9823d"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold cart_eq, group_quo_eq in |- *.",
            "VernacExtend",
            "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (sgroup_law G x (group_inverse G x)) (monoid_unit G)); auto with algebra.",
            "VernacExtend",
            "d3be46def373a5cc1383c2f81afd47eaace7788a"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (group_inverse G x)); auto with algebra.",
            "VernacExtend",
            "2399fab45cc9dac661edc89555fbb2b02ca7b0dd"
        ],
        [
            "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition group_quo_surj : Hom G group_quo.",
            "VernacDefinition",
            "421e88a697e32eb05816ffcd160f84e6aa438333"
        ],
        [
            "apply (BUILD_HOM_GROUP (G:=G) (G':=group_quo) (ff:=fun x : G => x)).",
            "VernacExtend",
            "719fafb91712c866143112a295fae45dbda7ba37"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold cart_eq, group_quo_eq in |- *.",
            "VernacExtend",
            "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G x (group_inverse G x)); auto with algebra.",
            "VernacExtend",
            "2399fab45cc9dac661edc89555fbb2b02ca7b0dd"
        ],
        [
            "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Def.",
            "VernacEndSegment",
            "616ad5692568c74f61a9df3a82ac03d2b7ebac01"
        ],
        [
            "Hint Immediate normal_com_in: algebra.",
            "VernacHints",
            "148e9859f4c18fe55bf8eee0366cbd06c3df5a11"
        ]
    ],
    "proofs": [
        {
            "name": "group_quo_eqrel",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "apply (Build_Relation (E:=G) (Rel_fun:=group_quo_eq)).",
                        "VernacExtend",
                        "f6adac63dc3ed36f67c0bfce784d832c4f9655a1"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, group_quo_eq in |- *.",
                        "VernacExtend",
                        "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
                    ]
                },
                {
                    "command": [
                        "intros x x' y y' H' H'0 H'1; try assumption.",
                        "VernacExtend",
                        "87bcd091db9043c26752ebcbb13d79b662ea10bd"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (group_inverse G y)); auto with algebra.",
                        "VernacExtend",
                        "8684ded180e366d493fb71772a0c338e1d0c6ef6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "group_quo_eqrel_equiv",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "red in Hnormal.",
                        "VernacExtend",
                        "56bc1b2684cc551cfc98a0cbb0821fa796d28220"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x; red in |- *.",
                        "VernacExtend",
                        "34b2893ccb48513c3991f110cf6dfcdedf3f0880"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, group_quo_eq in |- *.",
                        "VernacExtend",
                        "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G (monoid_unit G) (group_inverse G x))); auto with algebra.",
                        "VernacExtend",
                        "0facd62e64c245816c6a320900a0d19162de6c36"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, group_quo_eq in |- *.",
                        "VernacExtend",
                        "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
                    ]
                },
                {
                    "command": [
                        "intros x y z H' H'0; try assumption.",
                        "VernacExtend",
                        "92486dfbaec6209765e08194fc2670eff8aef754"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G x (group_inverse G y)) (sgroup_law G y (group_inverse G z))); auto with algebra.",
                        "VernacExtend",
                        "d64a19056cb77c001c2dbda7b7b54c484fcb6e97"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G x (sgroup_law G (group_inverse G y) (sgroup_law G y (group_inverse G z)))); auto with algebra.",
                        "VernacExtend",
                        "c1b579ad99ec9fb7d41d488e6b783003a14c0fa2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G x (sgroup_law G (sgroup_law G (group_inverse G y) y) (group_inverse G z))); auto with algebra.",
                        "VernacExtend",
                        "fcd97d0fc27b272c76804dc42eaed9ebb356af66"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G x (sgroup_law G (monoid_unit G) (group_inverse G z))); auto with algebra.",
                        "VernacExtend",
                        "e1f7c88c5e96598f81a5adb8dbebbdf6524585ab"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, group_quo_eq in |- *.",
                        "VernacExtend",
                        "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (group_inverse G (sgroup_law G x (group_inverse G y))); auto with algebra.",
                        "VernacExtend",
                        "6ffa7bf76f1a457324dab5fe7476c1a8cfd9823d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G (group_inverse G y)) (group_inverse G x)); auto with algebra.",
                        "VernacExtend",
                        "b7e8d4d00ace208bb95e22086874cd0accdf9d78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_com_in",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G y (sgroup_law G (sgroup_law G x y) (group_inverse G y))); auto with algebra.",
                        "VernacExtend",
                        "9443e5bec8f54321c4fed2086fa88959167ed043"
                    ]
                },
                {
                    "command": [
                        "apply SGROUP_comp; auto with algebra.",
                        "VernacExtend",
                        "1228d5420c7112d12f13dd08022ffbf79385f944"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G x (sgroup_law G y (group_inverse G y))); auto with algebra.",
                        "VernacExtend",
                        "a63a66ce9d51054d71af9ff6aa123acbc97c7164"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G x (monoid_unit G)); auto with algebra.",
                        "VernacExtend",
                        "304887a266f2bb350585502cc924a982045deb22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_quo",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_GROUP (E:=group_quo_set) (genlaw:=fun x y : G => sgroup_law _ x y) (e:=monoid_unit G) (geninv:=fun x : G => group_inverse _ x)).",
                        "VernacExtend",
                        "ddc369b86a8242b4ce6696e2c597823a4a9a19f6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, group_quo_eq in |- *.",
                        "VernacExtend",
                        "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
                    ]
                },
                {
                    "command": [
                        "intros x x' y y' H' H'0; try assumption.",
                        "VernacExtend",
                        "a768092cb6d13bcbf8895ce3f66d1b23178e8ac3"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (group_inverse G (sgroup_law G x' y')))); auto with algebra.",
                        "VernacExtend",
                        "cd3ea97bbfdb731e561a1f982826a51f717c7fa4"
                    ]
                },
                {
                    "command": [
                        "apply normal_com_in.",
                        "VernacExtend",
                        "e66b25b3ae40804bedf8f69bf57b6c7589aa0cd2"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G y (sgroup_law G (group_inverse G y') (group_inverse G x'))) x); auto with algebra.",
                        "VernacExtend",
                        "f181764cd8e86417d59f7ed5250178d0a2dec333"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G (sgroup_law G y (group_inverse G y')) (group_inverse G x')) x); auto with algebra.",
                        "VernacExtend",
                        "f34bb0d9e010bb1b8b66c9f22723feb5e77ec46d"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G y (group_inverse G y')) (sgroup_law G (group_inverse G x') x)); auto with algebra.",
                        "VernacExtend",
                        "571210ad9bf19427c8f56185e2688624aae8c4fe"
                    ]
                },
                {
                    "command": [
                        "intros x y z; try assumption.",
                        "VernacExtend",
                        "80c83086f31221d7caf381e8fc065da8630ae3de"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold app_rel, group_quo_eq in |- *.",
                        "VernacExtend",
                        "4d8b6276ecb3014668fdfa7c5d4b6044394f6860"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G (sgroup_law G x y) z) (sgroup_law G (group_inverse G (sgroup_law G y z)) (group_inverse G x))); auto with algebra.",
                        "VernacExtend",
                        "792b1f72f965ecbda7abcd01a32b5a1c2de091de"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G (sgroup_law G x y) z) (sgroup_law G (sgroup_law G (group_inverse G z) (group_inverse G y)) (group_inverse G x))); auto with algebra.",
                        "VernacExtend",
                        "8a26bf985147677cf4f745c72ef7a7063c12ff15"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G x (sgroup_law G y z)) (sgroup_law G (group_inverse G z) (sgroup_law G (group_inverse G y) (group_inverse G x)))); auto with algebra.",
                        "VernacExtend",
                        "cdbf5f9e7c20c52f32c26ba5186602bb3d0fe344"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G (sgroup_law G y z) (sgroup_law G (group_inverse G z) (sgroup_law G (group_inverse G y) (group_inverse G x))))); auto with algebra.",
                        "VernacExtend",
                        "b69f52827766b901942047427f73f8c1a3e502ee"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G z (sgroup_law G (group_inverse G z) (sgroup_law G (group_inverse G y) (group_inverse G x)))))); auto with algebra.",
                        "VernacExtend",
                        "05a616dfa25231a38f110a709e22ce832f211876"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G (sgroup_law G z (group_inverse G z)) (sgroup_law G (group_inverse G y) (group_inverse G x))))); auto with algebra.",
                        "VernacExtend",
                        "bf6af1e6b7512b86e9ae6ccf3bc446f9ff412fae"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G (monoid_unit G) (sgroup_law G (group_inverse G y) (group_inverse G x))))); auto with algebra.",
                        "VernacExtend",
                        "c928915907c0747808b9ca3e79783c8555f63cc4"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (sgroup_law G y (sgroup_law G (group_inverse G y) (group_inverse G x)))); auto with algebra.",
                        "VernacExtend",
                        "43505896868ad581e9e1f501cfc1f21f2df9cc7e"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G x y) (sgroup_law G (group_inverse G y) (group_inverse G x))); auto with algebra.",
                        "VernacExtend",
                        "256a9384e92dee059cbe7d09969a7dcd40bd760c"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G x y) (group_inverse G (sgroup_law G x y))); auto with algebra.",
                        "VernacExtend",
                        "679d450c374cd223e5bc7e43f81a886068999bbd"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold cart_eq, group_quo_eq in |- *.",
                        "VernacExtend",
                        "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
                    ]
                },
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (group_inverse G x)); auto with algebra.",
                        "VernacExtend",
                        "2399fab45cc9dac661edc89555fbb2b02ca7b0dd"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold cart_eq, group_quo_eq in |- *.",
                        "VernacExtend",
                        "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "apply normal_com_in.",
                        "VernacExtend",
                        "e66b25b3ae40804bedf8f69bf57b6c7589aa0cd2"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (group_inverse G (sgroup_law G x (group_inverse G y))); auto with algebra.",
                        "VernacExtend",
                        "6ffa7bf76f1a457324dab5fe7476c1a8cfd9823d"
                    ]
                },
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold cart_eq, group_quo_eq in |- *.",
                        "VernacExtend",
                        "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (sgroup_law G x (group_inverse G x)) (monoid_unit G)); auto with algebra.",
                        "VernacExtend",
                        "d3be46def373a5cc1383c2f81afd47eaace7788a"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (group_inverse G x)); auto with algebra.",
                        "VernacExtend",
                        "2399fab45cc9dac661edc89555fbb2b02ca7b0dd"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "group_quo_surj",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_HOM_GROUP (G:=G) (G':=group_quo) (ff:=fun x : G => x)).",
                        "VernacExtend",
                        "719fafb91712c866143112a295fae45dbda7ba37"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold cart_eq, group_quo_eq in |- *.",
                        "VernacExtend",
                        "89d9ef8a9dabe2f8a82ba622461e1ce2380fcb42"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G x (group_inverse G x)); auto with algebra.",
                        "VernacExtend",
                        "2399fab45cc9dac661edc89555fbb2b02ca7b0dd"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}