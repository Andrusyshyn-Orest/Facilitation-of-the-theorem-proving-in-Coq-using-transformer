{
    "filename": "Parts2.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Classical_Prop.",
            "VernacRequire",
            "6611664b7a3cccb612f3d55b3ec011d072dd6a54"
        ],
        [
            "Require Export Parts.",
            "VernacRequire",
            "535a8673b0f8ec74d32f83dd6ddb45ca3ae921a1"
        ],
        [
            "Comments \"We define here complement of a part, image of a part by a map.\".",
            "VernacComments",
            "30090f9f67f58dce85310a33f8e2d089e3d02c27"
        ],
        [
            "Section Complement1.",
            "VernacBeginSection",
            "bda32774df304de613c4808f65cb6095b3c08a3a"
        ],
        [
            "Variable E : Setoid.",
            "VernacAssumption",
            "cafb1870f48a7785473ed62f8eb64582fbbe308d"
        ],
        [
            "Lemma not_in_comp_l : forall (E : Setoid) (A : part_set E) (x y : E), ~ in_part x A -> Equal y x -> ~ in_part y A.",
            "VernacStartTheoremProof",
            "c3be39d09c5d127cd6db383b153c258e29d3e91b"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros E0 A x y H' H'0 H'1; try assumption.",
            "VernacExtend",
            "cb5380e8c4b7a75e8c878fb4b0ea305bb0dd2090"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "apply in_part_comp_l with y; auto with algebra.",
            "VernacExtend",
            "a96ecfe6d4f87e02909cce250c1293c1a4089f55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_in_comp_r : forall (E : Setoid) (A B : part_set E) (x : E), ~ in_part x A -> Equal A B -> ~ in_part x B.",
            "VernacStartTheoremProof",
            "29c918555d7090b6dbf660531180b079de59315d"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros E0 A B x H' H'0 H'1; try assumption.",
            "VernacExtend",
            "8d8be5803cb213450aa415013801fb1ed84f1f67"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "apply in_part_comp_r with B; auto with algebra.",
            "VernacExtend",
            "f5dc8497ce4a8d0c37336cc5ccdb0fb1d1df6288"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition compl : part_set E -> part_set E.",
            "VernacDefinition",
            "3a3a66bd3265dd2a4166a80b8f78948bc113c676"
        ],
        [
            "intros A.",
            "VernacExtend",
            "1e674201f6164f095fcb9efa159981a648ffff11"
        ],
        [
            "apply (Build_Predicate (Pred_fun:=fun x : E => ~ in_part x A)).",
            "VernacExtend",
            "3c97452525024a741104c257dbc6750be50fc64a"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "apply not_in_comp_l with x; auto with algebra.",
            "VernacExtend",
            "68571f677f057908e7ba84752b9f5a49a1bde9aa"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma compl_in : forall (A : part_set E) (x : E), ~ in_part x A -> in_part x (compl A).",
            "VernacStartTheoremProof",
            "912b20d10fb3f60516a00482a50df351e71529a9"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve compl_in: algebra.",
            "VernacHints",
            "beeb046d73cd61d5df252c96f1194c3bca39b6dd"
        ],
        [
            "Lemma in_compl : forall (A : part_set E) (x : E), in_part x (compl A) -> ~ in_part x A.",
            "VernacStartTheoremProof",
            "f9e41635518490d7cc991275da3ce0c0161dbb61"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compl_comp : forall A B : part_set E, Equal A B -> Equal (compl A) (compl B).",
            "VernacStartTheoremProof",
            "ecfd3a965fdbbf2b59ed3b8e46b1b59250f5cedf"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold eq_part in |- *; auto with algebra.",
            "VernacExtend",
            "5a21f5b826686332668f80a1fe37076634c4cbc0"
        ],
        [
            "intros A B H' x; try assumption.",
            "VernacExtend",
            "f09237650aea043f57482140b06b6cf2a220c031"
        ],
        [
            "elim (H' x).",
            "VernacExtend",
            "615609ecbb75c51ce4dd8613bf3a00976ba28676"
        ],
        [
            "simpl in |- *; unfold not in |- *.",
            "VernacExtend",
            "e8b060111cd845618c80c08f18158ea6fa2ea61d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve compl_comp: algebra.",
            "VernacHints",
            "88c3119c004123bd2cfbd35ffbe574b9d28983da"
        ],
        [
            "Lemma compl_comp_rev : forall A B : part_set E, Equal (compl A) (compl B) -> Equal A B.",
            "VernacStartTheoremProof",
            "f68e0755d15263f6db0aab391cf52b37c1dc3045"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold eq_part in |- *; auto with algebra.",
            "VernacExtend",
            "5a21f5b826686332668f80a1fe37076634c4cbc0"
        ],
        [
            "simpl in |- *; unfold not in |- *.",
            "VernacExtend",
            "e8b060111cd845618c80c08f18158ea6fa2ea61d"
        ],
        [
            "intros A B H' x; try assumption.",
            "VernacExtend",
            "f09237650aea043f57482140b06b6cf2a220c031"
        ],
        [
            "elim (H' x).",
            "VernacExtend",
            "615609ecbb75c51ce4dd8613bf3a00976ba28676"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compl_compl : forall A : part_set E, Equal (compl (compl A)) A.",
            "VernacStartTheoremProof",
            "22ef25fdf606dac6795898c148c23b8abf81bcee"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "unfold eq_part in |- *; auto with algebra.",
            "VernacExtend",
            "5a21f5b826686332668f80a1fe37076634c4cbc0"
        ],
        [
            "simpl in |- *; unfold not in |- *.",
            "VernacExtend",
            "e8b060111cd845618c80c08f18158ea6fa2ea61d"
        ],
        [
            "intros A x; try assumption.",
            "VernacExtend",
            "c9949761fd051773854fb58fde0f415d17814cf8"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve compl_compl: algebra.",
            "VernacHints",
            "c7aa0d5af078a8f7463d182320e6817e3f01454f"
        ],
        [
            "Lemma compl_not_in : forall (A : part_set E) (x : E), in_part x A -> ~ in_part x (compl A).",
            "VernacStartTheoremProof",
            "c8294be3123003d4b7db4734de779fe9573ef196"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve compl_not_in: algebra.",
            "VernacHints",
            "306ab4d7f7dc25617e1b053eb396514c8bb4df7d"
        ],
        [
            "Lemma not_in_compl : forall (A : part_set E) (x : E), in_part x (compl A) -> ~ in_part x A.",
            "VernacStartTheoremProof",
            "6f55ab67f3effce28c876c9cae8723b7e224b9d2"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compl_included : forall A B : part_set E, included A B -> included (compl B) (compl A).",
            "VernacStartTheoremProof",
            "1d0908a662a1cbc9be4c080d4197aab44a8b5f9d"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compl_not_compl : forall (A : part_set E) (x : E), in_part x A \\/ in_part x (compl A).",
            "VernacStartTheoremProof",
            "9a35257ec5b8c55cee9187bdeb50e6b53ecb358d"
        ],
        [
            "intros A x; try assumption.",
            "VernacExtend",
            "c9949761fd051773854fb58fde0f415d17814cf8"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "apply NNPP; intuition.",
            "VernacExtend",
            "82aed2082f969593c2b652b3337c3d663049d2c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Complement1.",
            "VernacEndSegment",
            "d54a18af31732162bb40ab90f190419760a9ca1b"
        ],
        [
            "Hint Resolve compl_included compl_not_in compl_compl compl_comp compl_in: algebra.",
            "VernacHints",
            "cb64dedfe5e4092cd70dc0fa19c4d08a3acaf3c9"
        ],
        [
            "Section Images1.",
            "VernacBeginSection",
            "e33b9ea0f32cbae71c1651fbd6a23ffebc650c1e"
        ],
        [
            "Variable E F : Setoid.",
            "VernacAssumption",
            "755ec368a0a5e097d35a6ccfa11e3d9467037cc1"
        ],
        [
            "Variable f : MAP E F.",
            "VernacAssumption",
            "0ec81e8c49c9e3f9b380a4396344354dec499939"
        ],
        [
            "Definition image : part_set E -> part_set F.",
            "VernacDefinition",
            "37cc9501557dc02e30ea2b52237e53276f2690f8"
        ],
        [
            "intros A.",
            "VernacExtend",
            "1e674201f6164f095fcb9efa159981a648ffff11"
        ],
        [
            "apply (Build_Predicate (Pred_fun:=fun y : F => exists x : E, in_part x A /\\ Equal y (f x))).",
            "VernacExtend",
            "5d32ff837d7360f9f0674887e7782b73ce139701"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros y y' H' H'0; try assumption.",
            "VernacExtend",
            "d2da7f16358b78726978a652e7d11827f9aa9043"
        ],
        [
            "elim H'; intros x E0; elim E0; intros H'1 H'2; try exact H'1; clear E0 H'.",
            "VernacExtend",
            "36f2ef5dd3c89373ca564207cf9d42f000468596"
        ],
        [
            "exists x; split; [ try assumption | idtac ].",
            "VernacExtend",
            "11252310a314b25929ab26e7f8d4bceda8e7c9d0"
        ],
        [
            "apply Trans with y; auto with algebra.",
            "VernacExtend",
            "7818beb4ed8d373446032f5fe69ca73992cfab6b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma image_in : forall (A : part_set E) (y : F), in_part y (image A) -> exists x : E, in_part x A /\\ Equal y (f x).",
            "VernacStartTheoremProof",
            "c5aead18b09d630d269cbb7a3b4464a3828fb89b"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_image : forall (A : part_set E) (x : E) (y : F), in_part x A -> Equal y (f x) -> in_part y (image A).",
            "VernacStartTheoremProof",
            "621206573005fc8dd7bb4330f31771fb92156dd6"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros A x y H' H'0; try assumption.",
            "VernacExtend",
            "06eef47307282a3e3e7dece86bc974ed02025a49"
        ],
        [
            "exists x; split; [ try assumption | idtac ]; auto with algebra.",
            "VernacExtend",
            "2f8136da66e604ef575a9a2a684539fcbbfaf958"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve in_image: algebra.",
            "VernacHints",
            "48e0c59bcc3f5acb85c3cf4983cc8a6c1195f2ca"
        ],
        [
            "Lemma image_included : forall A B : part_set E, included A B -> included (image A) (image B).",
            "VernacStartTheoremProof",
            "c7adbc2fb08e8485d79d5ae34e76ea707f1c00b3"
        ],
        [
            "intros A B H'; try assumption.",
            "VernacExtend",
            "b0d24c04ee6ba3793e97e5957c9079ce89ebcf6b"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "intros x H'0; try assumption.",
            "VernacExtend",
            "142ba9849fedfb8416225009a0c996a95166d453"
        ],
        [
            "elim H'0.",
            "VernacExtend",
            "18ed276c915a3d073f203332aa6c39da8c5934bf"
        ],
        [
            "intros x0 H'1; try assumption.",
            "VernacExtend",
            "cdba11e48ea90bb9b116ec20425a1740b6e87fb3"
        ],
        [
            "apply in_image with (x := x0); auto with algebra.",
            "VernacExtend",
            "7bfa6a8814807aeaad0245d1f68ad973cba1457e"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "elim H'1.",
            "VernacExtend",
            "adde82f993f35778617a2db796b0637a05aa745b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "elim H'1; auto with algebra.",
            "VernacExtend",
            "7ef56321776e194d29f8a91fce790f39101f51d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve image_included: algebra.",
            "VernacHints",
            "b3e2d7f8517ad8c8e5315d7dee5aa94402b4921e"
        ],
        [
            "Lemma image_comp : forall A B : part_set E, Equal A B -> Equal (image A) (image B).",
            "VernacStartTheoremProof",
            "17274e8960eb8e78cfd6beef0441d36e484f082a"
        ],
        [
            "intros A B H'; try assumption.",
            "VernacExtend",
            "b0d24c04ee6ba3793e97e5957c9079ce89ebcf6b"
        ],
        [
            "apply included_antisym; auto with algebra.",
            "VernacExtend",
            "332d41666779aaecadae1e3e1de6838217bea7ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve image_comp: algebra.",
            "VernacHints",
            "7dc19647404975576f7df61752e6b6a1d28ed316"
        ],
        [
            "Lemma image_in_image : forall (A : part_set E) (x : E), in_part x A -> in_part (f x) (image A).",
            "VernacStartTheoremProof",
            "4ab19be0f21caef234f347238f0fc04bfec356a8"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros A x H'; try assumption.",
            "VernacExtend",
            "7f7984dcbd939f98b5a9ac07676455be7a194352"
        ],
        [
            "exists x; split; [ try assumption | idtac ]; auto with algebra.",
            "VernacExtend",
            "2f8136da66e604ef575a9a2a684539fcbbfaf958"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve image_in_image: algebra.",
            "VernacHints",
            "0a0d077d5d32d8b2ec4959437ff8703550f3e592"
        ],
        [
            "Definition image_map := image (full E).",
            "VernacDefinition",
            "e7a85faeb3ad898c423653f3ef888b81240911bd"
        ],
        [
            "Let surj_set_image_fun : E -> image_map.",
            "VernacDefinition",
            "6d8c942540062d694a04278cd2ea076dc5bb29e7"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "unfold image_map in |- *.",
            "VernacExtend",
            "87f976bbb37e0040a8f3284d670276e1687f12c2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (in_part (f x) (image (full E))).",
            "VernacExtend",
            "a58ed18466ab4ca37aeff47633af68332ce423d2"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "apply (Build_subtype (P:=image (full E)) (subtype_elt:=f x) H').",
            "VernacExtend",
            "41c270f12467c95cd79f7f04784b8f32d29fbb98"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition surj_set_image : MAP E image_map.",
            "VernacDefinition",
            "2f2e4fad6b00a0945fa0e3202813da3c7ed2e88e"
        ],
        [
            "apply (Build_Map (Ap:=surj_set_image_fun)).",
            "VernacExtend",
            "b0bb1c10cbaa9687f69fca28f7dfb2f48b754d0c"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold subtype_image_equal in |- *.",
            "VernacExtend",
            "204d58c15e16840a85d42d6a5c22d86194cbc8f3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma surj_set_image_surjective : surjective surj_set_image.",
            "VernacStartTheoremProof",
            "7b00f861cd7b8dfff5a20de019e5a28d6fedcd0f"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold subtype_image_equal in |- *.",
            "VernacExtend",
            "204d58c15e16840a85d42d6a5c22d86194cbc8f3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold image_map in |- *.",
            "VernacExtend",
            "87f976bbb37e0040a8f3284d670276e1687f12c2"
        ],
        [
            "intros y; try assumption.",
            "VernacExtend",
            "e11f23bfb85db8a037ca5ace63604a931ae2752a"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "intros x' subtype_prf; try assumption.",
            "VernacExtend",
            "09031d6fd39beb615a2ed9469ee7f280e316704a"
        ],
        [
            "elim subtype_prf.",
            "VernacExtend",
            "91cf57d09f2f8a216ffe58f30572e232d793fada"
        ],
        [
            "intros x H'; try assumption.",
            "VernacExtend",
            "58e256260d8e1308b78670caf8fd802cbcefd3be"
        ],
        [
            "exists x; try assumption.",
            "VernacExtend",
            "a251c410f0ab72130a5a312ded511c093841a93c"
        ],
        [
            "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
            "VernacExtend",
            "f3457e3ad18cb678f929f379185da1fd26a5caef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let surj_part_image_fun : forall A : part_set E, A -> image A.",
            "VernacDefinition",
            "51c34198c453aae3436f9b84f02a11174225a5ec"
        ],
        [
            "intros A x; try assumption.",
            "VernacExtend",
            "c9949761fd051773854fb58fde0f415d17814cf8"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "intros x' H'; try assumption.",
            "VernacExtend",
            "3aad8f854e6fbc8b1c3e029c5f8af8e5ba182f38"
        ],
        [
            "cut (in_part (f x') (image A)).",
            "VernacExtend",
            "5797abcf2cca25d6fa8e49ae66ebbf1fc29ab009"
        ],
        [
            "intros H'0; try assumption.",
            "VernacExtend",
            "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (Build_subtype (P:=image A) (subtype_elt:=f x') H'0).",
            "VernacExtend",
            "2c7ce8ff376c3439f39dfd462b8c48d83595f457"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition surj_part_image : forall A : part_set E, MAP A (image A).",
            "VernacDefinition",
            "2d549551fc6adfb6f995aa1f00f5d25e4f9005b9"
        ],
        [
            "intros A; try assumption.",
            "VernacExtend",
            "bee08795c86464c42c0359ec8226a130c5f630d4"
        ],
        [
            "apply (Build_Map (Ap:=surj_part_image_fun (A:=A))).",
            "VernacExtend",
            "954f9c9fc602c4bfb96fc13e1a7294a502d2be1a"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold subtype_image_equal in |- *.",
            "VernacExtend",
            "204d58c15e16840a85d42d6a5c22d86194cbc8f3"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma surj_part_image_surjective : forall A : part_set E, surjective (surj_part_image A).",
            "VernacStartTheoremProof",
            "fdba03fe7db656718db631c28d35be6f923f144f"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros A y; try assumption.",
            "VernacExtend",
            "ede2e3c5eba108a60a1dc883cac116924d553811"
        ],
        [
            "case (image_in (subtype_prf y)).",
            "VernacExtend",
            "1ff65c5e8c7c0286d11ca6b23035cc20b3d9a27e"
        ],
        [
            "intros x H'; try assumption.",
            "VernacExtend",
            "58e256260d8e1308b78670caf8fd802cbcefd3be"
        ],
        [
            "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
            "VernacExtend",
            "f3457e3ad18cb678f929f379185da1fd26a5caef"
        ],
        [
            "exists (Build_subtype H'0); try assumption.",
            "VernacExtend",
            "772635882546ceb181110214980eefff47604cbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Images1.",
            "VernacEndSegment",
            "5d53ab6073a2163b11d1b11201c60ec78503b1e8"
        ],
        [
            "Hint Resolve in_image image_included image_comp image_in_image surj_set_image_surjective surj_part_image_surjective: algebra.",
            "VernacHints",
            "009c679a34d391f20999fb2311965c86639d9d15"
        ]
    ],
    "proofs": [
        {
            "name": "not_in_comp_l",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros E0 A x y H' H'0 H'1; try assumption.",
                        "VernacExtend",
                        "cb5380e8c4b7a75e8c878fb4b0ea305bb0dd2090"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with y; auto with algebra.",
                        "VernacExtend",
                        "a96ecfe6d4f87e02909cce250c1293c1a4089f55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_in_comp_r",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros E0 A B x H' H'0 H'1; try assumption.",
                        "VernacExtend",
                        "8d8be5803cb213450aa415013801fb1ed84f1f67"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_r with B; auto with algebra.",
                        "VernacExtend",
                        "f5dc8497ce4a8d0c37336cc5ccdb0fb1d1df6288"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros A.",
                        "VernacExtend",
                        "1e674201f6164f095fcb9efa159981a648ffff11"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Predicate (Pred_fun:=fun x : E => ~ in_part x A)).",
                        "VernacExtend",
                        "3c97452525024a741104c257dbc6750be50fc64a"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "apply not_in_comp_l with x; auto with algebra.",
                        "VernacExtend",
                        "68571f677f057908e7ba84752b9f5a49a1bde9aa"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "compl_in",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_compl",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl_comp",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold eq_part in |- *; auto with algebra.",
                        "VernacExtend",
                        "5a21f5b826686332668f80a1fe37076634c4cbc0"
                    ]
                },
                {
                    "command": [
                        "intros A B H' x; try assumption.",
                        "VernacExtend",
                        "f09237650aea043f57482140b06b6cf2a220c031"
                    ]
                },
                {
                    "command": [
                        "elim (H' x).",
                        "VernacExtend",
                        "615609ecbb75c51ce4dd8613bf3a00976ba28676"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; unfold not in |- *.",
                        "VernacExtend",
                        "e8b060111cd845618c80c08f18158ea6fa2ea61d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl_comp_rev",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold eq_part in |- *; auto with algebra.",
                        "VernacExtend",
                        "5a21f5b826686332668f80a1fe37076634c4cbc0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; unfold not in |- *.",
                        "VernacExtend",
                        "e8b060111cd845618c80c08f18158ea6fa2ea61d"
                    ]
                },
                {
                    "command": [
                        "intros A B H' x; try assumption.",
                        "VernacExtend",
                        "f09237650aea043f57482140b06b6cf2a220c031"
                    ]
                },
                {
                    "command": [
                        "elim (H' x).",
                        "VernacExtend",
                        "615609ecbb75c51ce4dd8613bf3a00976ba28676"
                    ]
                },
                {
                    "command": [
                        "apply NNPP.",
                        "VernacExtend",
                        "c972af1947412f7363e48b809906d3283d0fb638"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl_compl",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "unfold eq_part in |- *; auto with algebra.",
                        "VernacExtend",
                        "5a21f5b826686332668f80a1fe37076634c4cbc0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; unfold not in |- *.",
                        "VernacExtend",
                        "e8b060111cd845618c80c08f18158ea6fa2ea61d"
                    ]
                },
                {
                    "command": [
                        "intros A x; try assumption.",
                        "VernacExtend",
                        "c9949761fd051773854fb58fde0f415d17814cf8"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "apply NNPP.",
                        "VernacExtend",
                        "c972af1947412f7363e48b809906d3283d0fb638"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl_not_in",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_in_compl",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl_included",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compl_not_compl",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros A x; try assumption.",
                        "VernacExtend",
                        "c9949761fd051773854fb58fde0f415d17814cf8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; intuition.",
                        "VernacExtend",
                        "82aed2082f969593c2b652b3337c3d663049d2c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros A.",
                        "VernacExtend",
                        "1e674201f6164f095fcb9efa159981a648ffff11"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Predicate (Pred_fun:=fun y : F => exists x : E, in_part x A /\\ Equal y (f x))).",
                        "VernacExtend",
                        "5d32ff837d7360f9f0674887e7782b73ce139701"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros y y' H' H'0; try assumption.",
                        "VernacExtend",
                        "d2da7f16358b78726978a652e7d11827f9aa9043"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x E0; elim E0; intros H'1 H'2; try exact H'1; clear E0 H'.",
                        "VernacExtend",
                        "36f2ef5dd3c89373ca564207cf9d42f000468596"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "11252310a314b25929ab26e7f8d4bceda8e7c9d0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with y; auto with algebra.",
                        "VernacExtend",
                        "7818beb4ed8d373446032f5fe69ca73992cfab6b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "image_in",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_image",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros A x y H' H'0; try assumption.",
                        "VernacExtend",
                        "06eef47307282a3e3e7dece86bc974ed02025a49"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [ try assumption | idtac ]; auto with algebra.",
                        "VernacExtend",
                        "2f8136da66e604ef575a9a2a684539fcbbfaf958"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_included",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros A B H'; try assumption.",
                        "VernacExtend",
                        "b0d24c04ee6ba3793e97e5957c9079ce89ebcf6b"
                    ]
                },
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; try assumption.",
                        "VernacExtend",
                        "142ba9849fedfb8416225009a0c996a95166d453"
                    ]
                },
                {
                    "command": [
                        "elim H'0.",
                        "VernacExtend",
                        "18ed276c915a3d073f203332aa6c39da8c5934bf"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'1; try assumption.",
                        "VernacExtend",
                        "cdba11e48ea90bb9b116ec20425a1740b6e87fb3"
                    ]
                },
                {
                    "command": [
                        "apply in_image with (x := x0); auto with algebra.",
                        "VernacExtend",
                        "7bfa6a8814807aeaad0245d1f68ad973cba1457e"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "elim H'1.",
                        "VernacExtend",
                        "adde82f993f35778617a2db796b0637a05aa745b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "elim H'1; auto with algebra.",
                        "VernacExtend",
                        "7ef56321776e194d29f8a91fce790f39101f51d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_comp",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros A B H'; try assumption.",
                        "VernacExtend",
                        "b0d24c04ee6ba3793e97e5957c9079ce89ebcf6b"
                    ]
                },
                {
                    "command": [
                        "apply included_antisym; auto with algebra.",
                        "VernacExtend",
                        "332d41666779aaecadae1e3e1de6838217bea7ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_in_image",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros A x H'; try assumption.",
                        "VernacExtend",
                        "7f7984dcbd939f98b5a9ac07676455be7a194352"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [ try assumption | idtac ]; auto with algebra.",
                        "VernacExtend",
                        "2f8136da66e604ef575a9a2a684539fcbbfaf958"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "surj_set_image_fun",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "unfold image_map in |- *.",
                        "VernacExtend",
                        "87f976bbb37e0040a8f3284d670276e1687f12c2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (in_part (f x) (image (full E))).",
                        "VernacExtend",
                        "a58ed18466ab4ca37aeff47633af68332ce423d2"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "apply (Build_subtype (P:=image (full E)) (subtype_elt:=f x) H').",
                        "VernacExtend",
                        "41c270f12467c95cd79f7f04784b8f32d29fbb98"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "surj_set_image",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "apply (Build_Map (Ap:=surj_set_image_fun)).",
                        "VernacExtend",
                        "b0bb1c10cbaa9687f69fca28f7dfb2f48b754d0c"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold subtype_image_equal in |- *.",
                        "VernacExtend",
                        "204d58c15e16840a85d42d6a5c22d86194cbc8f3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "surj_set_image_surjective",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold subtype_image_equal in |- *.",
                        "VernacExtend",
                        "204d58c15e16840a85d42d6a5c22d86194cbc8f3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold image_map in |- *.",
                        "VernacExtend",
                        "87f976bbb37e0040a8f3284d670276e1687f12c2"
                    ]
                },
                {
                    "command": [
                        "intros y; try assumption.",
                        "VernacExtend",
                        "e11f23bfb85db8a037ca5ace63604a931ae2752a"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "intros x' subtype_prf; try assumption.",
                        "VernacExtend",
                        "09031d6fd39beb615a2ed9469ee7f280e316704a"
                    ]
                },
                {
                    "command": [
                        "elim subtype_prf.",
                        "VernacExtend",
                        "91cf57d09f2f8a216ffe58f30572e232d793fada"
                    ]
                },
                {
                    "command": [
                        "intros x H'; try assumption.",
                        "VernacExtend",
                        "58e256260d8e1308b78670caf8fd802cbcefd3be"
                    ]
                },
                {
                    "command": [
                        "exists x; try assumption.",
                        "VernacExtend",
                        "a251c410f0ab72130a5a312ded511c093841a93c"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
                        "VernacExtend",
                        "f3457e3ad18cb678f929f379185da1fd26a5caef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "surj_part_image_fun",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "intros A x; try assumption.",
                        "VernacExtend",
                        "c9949761fd051773854fb58fde0f415d17814cf8"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "intros x' H'; try assumption.",
                        "VernacExtend",
                        "3aad8f854e6fbc8b1c3e029c5f8af8e5ba182f38"
                    ]
                },
                {
                    "command": [
                        "cut (in_part (f x') (image A)).",
                        "VernacExtend",
                        "5797abcf2cca25d6fa8e49ae66ebbf1fc29ab009"
                    ]
                },
                {
                    "command": [
                        "intros H'0; try assumption.",
                        "VernacExtend",
                        "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (Build_subtype (P:=image A) (subtype_elt:=f x') H'0).",
                        "VernacExtend",
                        "2c7ce8ff376c3439f39dfd462b8c48d83595f457"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "surj_part_image",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros A; try assumption.",
                        "VernacExtend",
                        "bee08795c86464c42c0359ec8226a130c5f630d4"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Map (Ap:=surj_part_image_fun (A:=A))).",
                        "VernacExtend",
                        "954f9c9fc602c4bfb96fc13e1a7294a502d2be1a"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold subtype_image_equal in |- *.",
                        "VernacExtend",
                        "204d58c15e16840a85d42d6a5c22d86194cbc8f3"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "surj_part_image_surjective",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros A y; try assumption.",
                        "VernacExtend",
                        "ede2e3c5eba108a60a1dc883cac116924d553811"
                    ]
                },
                {
                    "command": [
                        "case (image_in (subtype_prf y)).",
                        "VernacExtend",
                        "1ff65c5e8c7c0286d11ca6b23035cc20b3d9a27e"
                    ]
                },
                {
                    "command": [
                        "intros x H'; try assumption.",
                        "VernacExtend",
                        "58e256260d8e1308b78670caf8fd802cbcefd3be"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
                        "VernacExtend",
                        "f3457e3ad18cb678f929f379185da1fd26a5caef"
                    ]
                },
                {
                    "command": [
                        "exists (Build_subtype H'0); try assumption.",
                        "VernacExtend",
                        "772635882546ceb181110214980eefff47604cbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}