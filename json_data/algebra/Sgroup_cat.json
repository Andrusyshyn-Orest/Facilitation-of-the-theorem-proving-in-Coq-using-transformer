{
    "filename": "Sgroup_cat.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Subcat.",
            "VernacRequire",
            "b97c079587309bce5c86ecf6f3a15b0f10c4fee5"
        ],
        [
            "Require Export Set_cat.",
            "VernacRequire",
            "91a0fdd70eb54ff9d3cc2afeccfaabc2046087a0"
        ],
        [
            "Definition law_of_composition (E : SET) := Hom (cart E E:SET) E.",
            "VernacDefinition",
            "aa1c81a6656268b10d49ad6a9032392809e25026"
        ],
        [
            "Definition associative (E : SET) (f : law_of_composition E) := forall x y z : E, Equal (f (couple (f (couple x y)) z)) (f (couple x (f (couple y z)))).",
            "VernacDefinition",
            "d2642845333d76a060567b15b4902e0bfcc338c1"
        ],
        [
            "Record sgroup_on (E : SET) : Type := {sgroup_law_map : law_of_composition E; sgroup_assoc_prf : associative sgroup_law_map}.",
            "VernacInductive",
            "1d6a8cb0ee0b547762f7e25f12f8818e78f0250c"
        ],
        [
            "Record sgroup : Type := {sgroup_set :> Setoid; sgroup_on_def :> sgroup_on sgroup_set}.",
            "VernacInductive",
            "d833e332bb252935d23e007746919284bda722e2"
        ],
        [
            "Coercion Build_sgroup : sgroup_on >-> sgroup.",
            "VernacCoercion",
            "a05c70acf7c214e310c98a6ab09334a6444789fa"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Definition sgroup_law (E : sgroup) : E -> E -> E := fun x y : E:Setoid => sgroup_law_map E (couple x y).",
            "VernacDefinition",
            "854cde81b853fb1c6581869e8656be3da383757b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section Hom.",
            "VernacBeginSection",
            "a9f226bbfd2d74d779eb92c4ae4f70b35e08ec3f"
        ],
        [
            "Variable E F : sgroup.",
            "VernacAssumption",
            "76f3698c905748af49125669ca1448b430fbcf1c"
        ],
        [
            "Definition sgroup_hom_prop (f : Hom (E:SET) F) := forall x y : E, Equal (f (sgroup_law _ x y)) (sgroup_law _ (f x) (f y)).",
            "VernacDefinition",
            "c0f4dc2bb3fdc54234e54bcbb1b69ebcb34d3102"
        ],
        [
            "Record sgroup_hom : Type := {sgroup_map :> Map E F; sgroup_hom_prf : sgroup_hom_prop sgroup_map}.",
            "VernacInductive",
            "d1c1a1c97afb00c1b0616b2a9afdd79bb6f21078"
        ],
        [
            "End Hom.",
            "VernacEndSegment",
            "416d5654c7f3e72b253a9e7625b8dfdbf6abb7e5"
        ],
        [
            "Definition sgroup_hom_comp : forall E F G : sgroup, sgroup_hom F G -> sgroup_hom E F -> sgroup_hom E G.",
            "VernacDefinition",
            "e9573abd304441ed2a4ce25f5395b2dae9aee2ad"
        ],
        [
            "intros E F G g f; try assumption.",
            "VernacExtend",
            "86f7f18bf2c03a654f7dd7b0fc3b7d3afd5a6e92"
        ],
        [
            "apply (Build_sgroup_hom (sgroup_map:=comp_map_map g f)).",
            "VernacExtend",
            "6936eea1868fd17cf4015fa081e63bf08b81f5bb"
        ],
        [
            "unfold sgroup_hom_prop in |- *; auto with algebra.",
            "VernacExtend",
            "b8beef7e3c78a8902e4b7c130b60ab2b7d4052f8"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold comp_map_fun in |- *.",
            "VernacExtend",
            "bf09c747c7184fd7f9e6e096f3a9853a912f8318"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "apply Trans with (Ap (sgroup_map g) (sgroup_law _ (Ap (sgroup_map f) x) (Ap (sgroup_map f) y))); auto with algebra.",
            "VernacExtend",
            "9927598151c4d8809011eb61840b82e2e0ecef3e"
        ],
        [
            "cut (Equal (Ap (sgroup_map f) (sgroup_law _ x y)) (sgroup_law _ (Ap (sgroup_map f) x) (Ap (sgroup_map f) y))).",
            "VernacExtend",
            "2c1696208548a0e45c362053942280b912f13da2"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply (sgroup_hom_prf f).",
            "VernacExtend",
            "4a3b662c28f4cb4feccdf3323deb95a5aee19be1"
        ],
        [
            "apply (sgroup_hom_prf g).",
            "VernacExtend",
            "1af9fe0e0995d3bab2156fe3807f59f79a5ccd00"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition sgroup_id : forall E : sgroup, sgroup_hom E E.",
            "VernacDefinition",
            "7f5780777bd99bd95bac7734624990fcff055141"
        ],
        [
            "intros E; try assumption.",
            "VernacExtend",
            "e478e84a6462d0df5eb4d5537ab1a669dc68053f"
        ],
        [
            "apply (Build_sgroup_hom (sgroup_map:=Id E)).",
            "VernacExtend",
            "59f52bc88d9ea443e5227aba64cc86fdc5082bc2"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition SGROUP : category.",
            "VernacDefinition",
            "6eeeed3f04edd8cd132fe937d50de7977f1835a9"
        ],
        [
            "apply (subcat (C:=SET) (C':=sgroup) (i:=sgroup_set) (homC':=fun E F : sgroup => Build_subtype_image (E:=MAP E F) (subtype_image_carrier:=sgroup_hom E F) (sgroup_map (E:=E) (F:=F))) (CompC':=sgroup_hom_comp) (idC':=sgroup_id)).",
            "VernacExtend",
            "bc60dc70f5b663201012341cc521864259ef9dd6"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros a; try assumption.",
            "VernacExtend",
            "ce5e79ff69b9a4890a65e94be476c396641e9efd"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros a b c g f; try assumption.",
            "VernacExtend",
            "d526c4e54747dc563727ee2cb39c129c2a78201b"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "sgroup_hom_comp",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros E F G g f; try assumption.",
                        "VernacExtend",
                        "86f7f18bf2c03a654f7dd7b0fc3b7d3afd5a6e92"
                    ]
                },
                {
                    "command": [
                        "apply (Build_sgroup_hom (sgroup_map:=comp_map_map g f)).",
                        "VernacExtend",
                        "6936eea1868fd17cf4015fa081e63bf08b81f5bb"
                    ]
                },
                {
                    "command": [
                        "unfold sgroup_hom_prop in |- *; auto with algebra.",
                        "VernacExtend",
                        "b8beef7e3c78a8902e4b7c130b60ab2b7d4052f8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold comp_map_fun in |- *.",
                        "VernacExtend",
                        "bf09c747c7184fd7f9e6e096f3a9853a912f8318"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap (sgroup_map g) (sgroup_law _ (Ap (sgroup_map f) x) (Ap (sgroup_map f) y))); auto with algebra.",
                        "VernacExtend",
                        "9927598151c4d8809011eb61840b82e2e0ecef3e"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (Ap (sgroup_map f) (sgroup_law _ x y)) (sgroup_law _ (Ap (sgroup_map f) x) (Ap (sgroup_map f) y))).",
                        "VernacExtend",
                        "2c1696208548a0e45c362053942280b912f13da2"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply (sgroup_hom_prf f).",
                        "VernacExtend",
                        "4a3b662c28f4cb4feccdf3323deb95a5aee19be1"
                    ]
                },
                {
                    "command": [
                        "apply (sgroup_hom_prf g).",
                        "VernacExtend",
                        "1af9fe0e0995d3bab2156fe3807f59f79a5ccd00"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sgroup_id",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros E; try assumption.",
                        "VernacExtend",
                        "e478e84a6462d0df5eb4d5537ab1a669dc68053f"
                    ]
                },
                {
                    "command": [
                        "apply (Build_sgroup_hom (sgroup_map:=Id E)).",
                        "VernacExtend",
                        "59f52bc88d9ea443e5227aba64cc86fdc5082bc2"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "SGROUP",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "apply (subcat (C:=SET) (C':=sgroup) (i:=sgroup_set) (homC':=fun E F : sgroup => Build_subtype_image (E:=MAP E F) (subtype_image_carrier:=sgroup_hom E F) (sgroup_map (E:=E) (F:=F))) (CompC':=sgroup_hom_comp) (idC':=sgroup_id)).",
                        "VernacExtend",
                        "bc60dc70f5b663201012341cc521864259ef9dd6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros a; try assumption.",
                        "VernacExtend",
                        "ce5e79ff69b9a4890a65e94be476c396641e9efd"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros a b c g f; try assumption.",
                        "VernacExtend",
                        "d526c4e54747dc563727ee2cb39c129c2a78201b"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}