{
    "filename": "Z_group.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Automatic Coercions Import.",
            "VernacSetOption",
            "12f2b52fb77cee7f2419b939e5a1046afa341e27"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Require Export Zring.",
            "VernacRequire",
            "11ef54f22ab0f4af666cc66b6dcc35bf53fe97de"
        ],
        [
            "Require Export Group_kernel.",
            "VernacRequire",
            "15f8d859978ac0ff4eccf3f62866a7a6cd603749"
        ],
        [
            "Section Int_power.",
            "VernacBeginSection",
            "a09c3715d8b83df22401a95a06b3e7771d65db8d"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Definition group_square (x : G) : G := sgroup_law G x x.",
            "VernacDefinition",
            "6e41ee8e496385c3cebbafde61ff69d6b5985d3d"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "End Int_power.",
            "VernacEndSegment",
            "e822296b6aea707360aa3ff6441c98ff5a75b672"
        ],
        [
            "Section Zup1.",
            "VernacBeginSection",
            "122acbaf97e4a9e71992906684f32bd71d6e54d7"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Variable r : G.",
            "VernacAssumption",
            "1937366a4ffcb96fbe2fcbba1eb8f9ec1e8986d5"
        ],
        [
            "Fixpoint nat_to_group (n : nat) : G := match n with | O => monoid_unit G | S n' => sgroup_law G (nat_to_group n') r end.",
            "VernacFixpoint",
            "b93a2cb0cc9975db1482d3f1558a364535781831"
        ],
        [
            "Definition pos_abs : forall x : Z, (x > 0)%Z -> positive.",
            "VernacDefinition",
            "1ead1f163f9f55ee93117422a315b42be2951ec7"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "case x.",
            "VernacExtend",
            "ff73d135d2805abb527daeb7acd470185a7b2435"
        ],
        [
            "intros H'; red in H'.",
            "VernacExtend",
            "5628143996864dae4052e86719a5f6654c3edf8b"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "intros p H'.",
            "VernacExtend",
            "bb6abbd0a5bb134f5276d7928176425ceae09e54"
        ],
        [
            "exact p.",
            "VernacExtend",
            "b7c0f461e0cb1db77f2037d1297f3ab1056e59d7"
        ],
        [
            "intros p H'; red in H'.",
            "VernacExtend",
            "179e6119d53b628a347eb03236fb720c6d6e5a00"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma pos_abs_ok : forall (x : Z) (px : (x > 0)%Z), x = Zpos (pos_abs px).",
            "VernacStartTheoremProof",
            "f41a88b32867b2afab0cd3a5f0bc9e5371cfbff7"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "intros px; red in px.",
            "VernacExtend",
            "128edac1a334e0cb0e9d5fb8fae6f9d55bc2778c"
        ],
        [
            "simpl in px.",
            "VernacExtend",
            "42ff988a98cf976b07d214b3eda78954f9e33d28"
        ],
        [
            "inversion px.",
            "VernacExtend",
            "e8da1bb539fe2642b2d29aba042a9f89eb80f043"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "intros p px; red in px.",
            "VernacExtend",
            "ffe99bf91b03f5f5ec070fbe3a1ca4cc5f5ac423"
        ],
        [
            "simpl in px.",
            "VernacExtend",
            "42ff988a98cf976b07d214b3eda78954f9e33d28"
        ],
        [
            "inversion px.",
            "VernacExtend",
            "e8da1bb539fe2642b2d29aba042a9f89eb80f043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlt_reg_l : forall a b c : Z, (a < b)%Z -> (c + a < c + b)%Z.",
            "VernacStartTheoremProof",
            "658b4fdba2c148583eaddf7aca29e78e3296ff29"
        ],
        [
            "intros a b c; try assumption.",
            "VernacExtend",
            "36efab19a09b0251730c7cc39aaacd2054f572ef"
        ],
        [
            "unfold Zlt, not in |- *.",
            "VernacExtend",
            "601670d6afc62c9cc6aaf9cac985aa823daf3cbc"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "rewrite <- H'.",
            "VernacExtend",
            "6015ddb26a544f622429ee9ca3769cdf838b7d8a"
        ],
        [
            "apply Zcompare_plus_compat; assumption.",
            "VernacExtend",
            "153835bfcfce8bfe272c1c2857a1a5142a316b23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlemma1 : forall x : Z, (x < 0)%Z -> (- x > 0)%Z.",
            "VernacStartTheoremProof",
            "e30a644f6809e51bb925d25b8914db2de65f93dc"
        ],
        [
            "intros x H'; try assumption.",
            "VernacExtend",
            "58e256260d8e1308b78670caf8fd802cbcefd3be"
        ],
        [
            "apply Zlt_gt.",
            "VernacExtend",
            "0c9f5f2fbabcb44c83f236e290499e43cbae87ee"
        ],
        [
            "replace (- x)%Z with (- x + 0)%Z.",
            "VernacExtend",
            "1ee4338c63637186f88267743bc184f93c1ecfa7"
        ],
        [
            "pattern 0%Z at 1 in |- *.",
            "VernacExtend",
            "b927436efa2600185ae97f68ae897076294b1e04"
        ],
        [
            "replace 0%Z with (- x + x)%Z.",
            "VernacExtend",
            "c7211ec882c5b19ac9d0487b953dd2bde268b7ab"
        ],
        [
            "apply Zlt_reg_l.",
            "VernacExtend",
            "e40e4d41fc4ecbaf67f955b341676f4059669874"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "apply Zplus_opp_l.",
            "VernacExtend",
            "198ec52382c79fc01fff4efd57d5b59fc844a830"
        ],
        [
            "apply Zplus_0_r.",
            "VernacExtend",
            "f9a7f46d03ba3c667dd65e310a2cc065af341a95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Comments \"The powers of\" r \".\".",
            "VernacComments",
            "b8efa978e68a09fda26754e0c57185b6754180a8"
        ],
        [
            "Definition Z_to_group_nat_fun : ZZ -> G.",
            "VernacDefinition",
            "03f0cc2c3be554d74bf33feb2391e5fa7e1b7adb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "case (Z_gt_le_dec x 0); intros z.",
            "VernacExtend",
            "5418d97a5fb19c3728c56820dd84a7429c9bcb10"
        ],
        [
            "exact (nat_to_group (nat_of_P (pos_abs z))).",
            "VernacExtend",
            "f1d7387c72ce4e7d951b7f1d33df7a6a31638e79"
        ],
        [
            "case (Z_le_lt_eq_dec _ _ z); intros.",
            "VernacExtend",
            "afd77f8583369cd4fbc9fcc9aa1acf23154aa905"
        ],
        [
            "cut (- x > 0)%Z.",
            "VernacExtend",
            "9b6c3935be8a508f2dce05bdbd53d7bdcb8b6fa4"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "exact (group_inverse G (nat_to_group (nat_of_P (pos_abs H')))).",
            "VernacExtend",
            "d129338d46c2f1c2cdbd836d9854ebf61422f557"
        ],
        [
            "apply Zlemma1.",
            "VernacExtend",
            "af25f746828559893ee4168049676bac57926c26"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "exact (monoid_unit G).",
            "VernacExtend",
            "7fe20f2ce84236ddd56a6ed1a1bd2eb9cf68d664"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma nat_to_group_com : forall n : nat, Equal (sgroup_law G (nat_to_group n) r) (sgroup_law G r (nat_to_group n)).",
            "VernacStartTheoremProof",
            "38dc76162b38fa5004df9c8c489d62b93cd5ba25"
        ],
        [
            "simple induction n; simpl in |- *; auto with *.",
            "VernacExtend",
            "bd419c525d61df867e1aab62045f978d9c53d280"
        ],
        [
            "apply Trans with r; auto with *.",
            "VernacExtend",
            "1fa8d1b145c4ffe43db6d87785267daf2b9ea8c4"
        ],
        [
            "intros n0 H'; try assumption.",
            "VernacExtend",
            "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G r (nat_to_group n0)) r); auto with *.",
            "VernacExtend",
            "0e107f388c0cd7e61da1165878188ab641eb5209"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_com: algebra.",
            "VernacHints",
            "0586fa0c00ba8f36db68f4355ca691674430eb65"
        ],
        [
            "Lemma nat_to_group_add : forall n m : nat, Equal (nat_to_group (n + m)) (sgroup_law G (nat_to_group n) (nat_to_group m)).",
            "VernacStartTheoremProof",
            "3577cd1291cd4d05e2a0762903cc4e0d9787d97d"
        ],
        [
            "simple induction n; simpl in |- *.",
            "VernacExtend",
            "b67a775f86f34dcfd676a405ed09e661896dfc35"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "intros n0 H' m; try assumption.",
            "VernacExtend",
            "30cc54367c3f7e17feb7acf00f8a1d189b9fd778"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G r (nat_to_group m))); auto with *.",
            "VernacExtend",
            "0f231d9f8b65e8bd10b00e60c62d0ef55104eb28"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G (nat_to_group m) r)); auto with *.",
            "VernacExtend",
            "da37a12b7871616b1131abdbd46f1ab21df0ace4"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group n0) (nat_to_group m)) r); auto with *.",
            "VernacExtend",
            "623d0151e1cba91fb3e5f5e07de906b7c61aa22a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_add: algebra.",
            "VernacHints",
            "f417e74c16215d42255bc2e2fb3628bd820baa32"
        ],
        [
            "Lemma ax1 : ~ (0 > 0)%Z.",
            "VernacStartTheoremProof",
            "5be9dbca3d850b6adcb0521ec36263edfd4febbe"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ax1: algebra.",
            "VernacHints",
            "8cb6311fe2fe939a4682603dc85118c36c2ac9ed"
        ],
        [
            "Lemma ax2 : ~ (0 < 0)%Z.",
            "VernacStartTheoremProof",
            "86808ed685f6b76e55d9318e7bfdf72084f4563d"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ax2: algebra.",
            "VernacHints",
            "f52bd671bbbbb2843055676cadfe88db1a706b79"
        ],
        [
            "Lemma Zl1 : Equal (Z_to_group_nat_fun 0%Z) (monoid_unit G).",
            "VernacStartTheoremProof",
            "b0acd52f4edbaedcee881aeff4eb498fef41dc7d"
        ],
        [
            "unfold Z_to_group_nat_fun in |- *.",
            "VernacExtend",
            "34cfdb058fff77fca2b764664cea207d57f11d36"
        ],
        [
            "case (Z_gt_le_dec 0 0).",
            "VernacExtend",
            "4f58cabccf05b66cb7aa92c13ef1a974bae03fc2"
        ],
        [
            "intros z; try assumption.",
            "VernacExtend",
            "3d633f0170dfe964b100d9817e73d22d71b8d296"
        ],
        [
            "absurd (0 > 0)%Z; auto with *.",
            "VernacExtend",
            "1ca65206baff3b8d92ed587b3ef1a2b7a714369c"
        ],
        [
            "intros z; try assumption.",
            "VernacExtend",
            "3d633f0170dfe964b100d9817e73d22d71b8d296"
        ],
        [
            "case (Z_le_lt_eq_dec 0 0 z).",
            "VernacExtend",
            "4fe8762f64da58c9c056a93337a51dd2b572f973"
        ],
        [
            "intros z0; try assumption.",
            "VernacExtend",
            "04331760c4798a612a90e72aab3ee8a0829749c5"
        ],
        [
            "absurd (0 < 0)%Z; auto with *.",
            "VernacExtend",
            "4a0eddf13843e69d40292f7b7f813a0083c70f44"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zl1: algebra.",
            "VernacHints",
            "e1a37535a59a44e92db5e830b9e961ea10c41b3d"
        ],
        [
            "Lemma ax3 : forall p : positive, (Zpos p > 0)%Z.",
            "VernacStartTheoremProof",
            "d542f94514a2c934462de1f5a911a4fd7c663540"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ax3: algebra.",
            "VernacHints",
            "e5f15150c03de8359c41451ff4df71fed59154a6"
        ],
        [
            "Lemma Zl2 : forall p : positive, Equal (Z_to_group_nat_fun (Zpos p)) (nat_to_group (nat_of_P (pos_abs (ax3 p)))).",
            "VernacStartTheoremProof",
            "d1f3d78e9232a236180a0237a97a7a65fe3bc41a"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "unfold Z_to_group_nat_fun in |- *.",
            "VernacExtend",
            "34cfdb058fff77fca2b764664cea207d57f11d36"
        ],
        [
            "case (Z_gt_le_dec (Zpos p) 0); intros z.",
            "VernacExtend",
            "610e8da819a45dab07636f54da4facc0b13d00e9"
        ],
        [
            "simpl in |- *; auto with *.",
            "VernacExtend",
            "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
        ],
        [
            "case (Z_le_lt_eq_dec (Zpos p) 0 z); intros.",
            "VernacExtend",
            "5e952ad59f83d481dc7b284a32d7c87594302789"
        ],
        [
            "absurd (Zpos p < 0)%Z; auto with *.",
            "VernacExtend",
            "f383903a8f14aa60e833ef0d5f71ec5cae690df7"
        ],
        [
            "inversion e.",
            "VernacExtend",
            "840aa02714fbdee765768ec48e93d69bb3830c14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zl2: algebra.",
            "VernacHints",
            "54c7630cc4648e66252c9addc2f65cd8e5253629"
        ],
        [
            "Lemma ax4 : forall p : positive, ~ (Zneg p > 0)%Z.",
            "VernacStartTheoremProof",
            "44cf1cc6cab332c71521cb54bc678f41a4660a9f"
        ],
        [
            "intros p; red in |- *.",
            "VernacExtend",
            "9812bc48bc561d6d00ce55699afd394edc2b0067"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ax4: algebra.",
            "VernacHints",
            "6e9148eb57798d097a8e014f6694ad466c98a180"
        ],
        [
            "Lemma Zl3 : forall p : positive, Equal (Z_to_group_nat_fun (Zneg p)) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p))))).",
            "VernacStartTheoremProof",
            "3f547f02bcb95a0bb0f68753e37e066764395d0e"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "unfold Z_to_group_nat_fun in |- *.",
            "VernacExtend",
            "34cfdb058fff77fca2b764664cea207d57f11d36"
        ],
        [
            "case (Z_gt_le_dec (Zneg p) 0); intros z.",
            "VernacExtend",
            "ce648990829a08d82bd77b04dd08cff65717ce8b"
        ],
        [
            "absurd (Zneg p > 0)%Z; auto with *.",
            "VernacExtend",
            "d8b6927dc3e41bf91fc6955abf68e81ad11e746d"
        ],
        [
            "case (Z_le_lt_eq_dec (Zneg p) 0 z); intros.",
            "VernacExtend",
            "557a4f86f2565ed8074cd7d212ff2d294f5b18e9"
        ],
        [
            "simpl in |- *; auto with *.",
            "VernacExtend",
            "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
        ],
        [
            "inversion e.",
            "VernacExtend",
            "840aa02714fbdee765768ec48e93d69bb3830c14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zl3: algebra.",
            "VernacHints",
            "6fdd0b0ba9affacb80eaa59540146a46e22ddd68"
        ],
        [
            "Lemma ax5 : forall p q : positive, (Zpos p > Zpos q)%Z -> (Zpos p + Zneg q)%Z = Zpos (p - q).",
            "VernacStartTheoremProof",
            "0b4146711a162930c8428feaaec97a7426c8d3f3"
        ],
        [
            "intros p q H'; red in H'.",
            "VernacExtend",
            "e4ca3862cea05b05b2ae000b4b0d54b526a1f72c"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.pos_sub_spec.",
            "VernacExtend",
            "ad39ea5e69a6135dd31841448750ef09af08dff9"
        ],
        [
            "rewrite H'.",
            "VernacExtend",
            "232d4714354910d49fdbf1140eac1d26da075d17"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ax6 : forall p q : positive, (Zpos p < Zpos q)%Z -> (Zpos p + Zneg q)%Z = Zneg (q - p).",
            "VernacStartTheoremProof",
            "6e12acefc9308b2ca36598a996613db52e690649"
        ],
        [
            "intros p q H'; red in H'.",
            "VernacExtend",
            "e4ca3862cea05b05b2ae000b4b0d54b526a1f72c"
        ],
        [
            "simpl in H'.",
            "VernacExtend",
            "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.pos_sub_spec.",
            "VernacExtend",
            "ad39ea5e69a6135dd31841448750ef09af08dff9"
        ],
        [
            "rewrite H'.",
            "VernacExtend",
            "232d4714354910d49fdbf1140eac1d26da075d17"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ax7 : forall p : positive, (Zpos p + Zneg p)%Z = 0%Z.",
            "VernacStartTheoremProof",
            "1e59f53ac1e640fd1354175af5e848d97bd3b30d"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "replace (Pcompare p p Datatypes.Eq) with Datatypes.Eq.",
            "VernacExtend",
            "a140da813c0bf5f74d4e8ef1d1547dea5652b049"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "elim p.",
            "VernacExtend",
            "6c779b9e37b157f8482c780f6aa47ea385660887"
        ],
        [
            "intros p0; simpl in |- *.",
            "VernacExtend",
            "defc9f8a0385e253211d67006fb5ca7d8bf9b1f7"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "intros p0; simpl in |- *.",
            "VernacExtend",
            "defc9f8a0385e253211d67006fb5ca7d8bf9b1f7"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ax7 ax6 ax5: algebra.",
            "VernacHints",
            "08b567d138e53be84e6a5f0b994d311fb3dd2d3b"
        ],
        [
            "Lemma nat_to_group_com2 : forall n m : nat, Equal (sgroup_law G (nat_to_group n) (nat_to_group m)) (sgroup_law G (nat_to_group m) (nat_to_group n)).",
            "VernacStartTheoremProof",
            "8b8ec025aa364d940d537e5b9448a89d569afb56"
        ],
        [
            "simple induction n; simpl in |- *; auto with *.",
            "VernacExtend",
            "bd419c525d61df867e1aab62045f978d9c53d280"
        ],
        [
            "intros m; try assumption.",
            "VernacExtend",
            "dfc0fa473d4106a0502316651151325f08b199c0"
        ],
        [
            "apply Trans with (nat_to_group m); auto with *.",
            "VernacExtend",
            "980229b1626e4da9d31a9f226d65063a3b71ab70"
        ],
        [
            "intros n0 H' m; try assumption.",
            "VernacExtend",
            "30cc54367c3f7e17feb7acf00f8a1d189b9fd778"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G r (nat_to_group m))); auto with *.",
            "VernacExtend",
            "0f231d9f8b65e8bd10b00e60c62d0ef55104eb28"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G (nat_to_group m) r)); auto with *.",
            "VernacExtend",
            "da37a12b7871616b1131abdbd46f1ab21df0ace4"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group n0) (nat_to_group m)) r); auto with *.",
            "VernacExtend",
            "623d0151e1cba91fb3e5f5e07de906b7c61aa22a"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group n0)) r); auto with *.",
            "VernacExtend",
            "6e91a86d1e713eabbae64c7150b48849e5b920ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_com2: algebra.",
            "VernacHints",
            "4c27a07f8e1fcf60a540bc282570df72586455e3"
        ],
        [
            "Lemma nat_to_group_minus : forall n m : nat, n > m -> Equal (nat_to_group (n - m)) (sgroup_law G (nat_to_group n) (group_inverse G (nat_to_group m))).",
            "VernacStartTheoremProof",
            "ef3ac7b9d31a1c33d8554801fa6e02039777c90a"
        ],
        [
            "intros n m H'; try assumption.",
            "VernacExtend",
            "25dbd129d5bc1087724c9ff6771b4b641cbd7ae4"
        ],
        [
            "replace n with (m + (n - m)).",
            "VernacExtend",
            "faca29eece793f025b9ce9f66da475b717ae9ec5"
        ],
        [
            "rewrite minus_plus.",
            "VernacExtend",
            "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group (n - m))) (group_inverse G (nat_to_group m))); auto with *.",
            "VernacExtend",
            "cca37fb086df26c255edb8d50b262722b3b18c86"
        ],
        [
            "apply GROUP_reg_right with (nat_to_group m); auto with *.",
            "VernacExtend",
            "6a7f104b18b77a5ce56e663bef4d3f3ce31443a5"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group (n - m))) (sgroup_law G (group_inverse G (nat_to_group m)) (nat_to_group m))); auto with *.",
            "VernacExtend",
            "edbdad70266addf6336f738ad98795fbbcde08e2"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group (n - m))) (monoid_unit G)); auto with *.",
            "VernacExtend",
            "6b27dbf226b52fa827065334f8ca64eef9176448"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group m) (nat_to_group (n - m))); auto with *.",
            "VernacExtend",
            "ed7623c9d97c95fec0fb4445829c68f19879874a"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_minus: algebra.",
            "VernacHints",
            "e9f145fd943eb63daccafbe1eb9c59a530e87794"
        ],
        [
            "Lemma ax8 : forall p q : positive, Pcompare p q Datatypes.Eq = Datatypes.Lt -> Pcompare q p Datatypes.Eq = Datatypes.Gt.",
            "VernacStartTheoremProof",
            "fef5230b0031e00b0e59d22450fd446ae534c06c"
        ],
        [
            "intros p q H'; try assumption.",
            "VernacExtend",
            "7e91a4eff32ed0e8aaff321efad25448038d8cd4"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism.",
            "VernacExtend",
            "280c7de0c4b83357947055390228d774db0c344d"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "apply nat_of_P_lt_Lt_compare_morphism; auto with *.",
            "VernacExtend",
            "916c5b985be1bef737861b2b6387734775648ca0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ax8: algebra.",
            "VernacHints",
            "81c22c7a9e2554d3cae2d134a37bd2781d8b3f61"
        ],
        [
            "Lemma Zl4 : forall p p0 : positive, Equal (Z_to_group_nat_fun (Zpos p + Zneg p0)%Z) (sgroup_law G (nat_to_group (nat_of_P p)) (group_inverse G (nat_to_group (nat_of_P p0)))).",
            "VernacStartTheoremProof",
            "73aa0d92108711e6dad2e966085afc93d3af702d"
        ],
        [
            "intros p p0; try assumption.",
            "VernacExtend",
            "9ac5d4da282ef526817ab7d1d924d199078b2485"
        ],
        [
            "case (Z_gt_le_dec (Zpos p) (Zpos p0)); intros z.",
            "VernacExtend",
            "b6a65a61e05076a7c727b9e597a029efc880686d"
        ],
        [
            "rewrite ax5; auto with *.",
            "VernacExtend",
            "ddd24d304e7168a4940f0bac04726e2fad3b900e"
        ],
        [
            "apply Trans with (nat_to_group (nat_of_P (pos_abs (ax3 (p - p0))))); auto with *.",
            "VernacExtend",
            "c530e118218a1af41f8e219e87b171886a2446a8"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite nat_of_P_minus_morphism; auto with *.",
            "VernacExtend",
            "1321ebb2c67c7ff1320d5cb9c7367061c50a173c"
        ],
        [
            "apply nat_to_group_minus.",
            "VernacExtend",
            "445d8b79ef03b42d40aeeadf2d9c65c9527898b3"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_morphism.",
            "VernacExtend",
            "e716769c334726ff2487d33c8ebd61394c613116"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "case (Z_le_lt_eq_dec _ _ z); intros.",
            "VernacExtend",
            "afd77f8583369cd4fbc9fcc9aa1acf23154aa905"
        ],
        [
            "rewrite ax6; auto with *.",
            "VernacExtend",
            "7d7fa6ebca3e20690c3f67b1a5ad75261f8c5391"
        ],
        [
            "apply Trans with (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 (p0 - p)))))); auto with *.",
            "VernacExtend",
            "7c6beaa93c8737eea6abd0f118063b599c48327c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite nat_of_P_minus_morphism; auto with *.",
            "VernacExtend",
            "1321ebb2c67c7ff1320d5cb9c7367061c50a173c"
        ],
        [
            "apply Trans with (group_inverse G (sgroup_law G (nat_to_group (nat_of_P p0)) (group_inverse G (nat_to_group (nat_of_P p))))); auto with *.",
            "VernacExtend",
            "9b58e78f2889519968295125b2041197f225a004"
        ],
        [
            "apply GROUP_comp.",
            "VernacExtend",
            "304a0574b799b5cb609f7bb59a58b1b934bb8d8a"
        ],
        [
            "apply nat_to_group_minus.",
            "VernacExtend",
            "445d8b79ef03b42d40aeeadf2d9c65c9527898b3"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_morphism.",
            "VernacExtend",
            "e716769c334726ff2487d33c8ebd61394c613116"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G (group_inverse G (nat_to_group (nat_of_P p)))) (group_inverse G (nat_to_group (nat_of_P p0)))); auto with *.",
            "VernacExtend",
            "0a31d197432c74d82043ccffcc1cb712da1ef0ed"
        ],
        [
            "injection e.",
            "VernacExtend",
            "cf626cd0773aba2024ccc3777f2dc35cfa2cad6f"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "rewrite <- H'.",
            "VernacExtend",
            "6015ddb26a544f622429ee9ca3769cdf838b7d8a"
        ],
        [
            "rewrite ax7.",
            "VernacExtend",
            "7e7f28a4085d56e0202f52d9e3f0ed020b969ac0"
        ],
        [
            "apply Trans with (monoid_unit G); auto with *.",
            "VernacExtend",
            "167c011a08dd1589bbda37e8c203839d1bb63c09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zl4: algebra.",
            "VernacHints",
            "83024bf2928ce8d2423842f21ec8ca637cf8224a"
        ],
        [
            "Lemma nat_to_group_com3 : forall n : nat, Equal (sgroup_law G (nat_to_group n) (group_inverse G r)) (sgroup_law G (group_inverse G r) (nat_to_group n)).",
            "VernacStartTheoremProof",
            "2d305f27ff8cf87162f9a40f836858d49787c7a7"
        ],
        [
            "simple induction n; simpl in |- *; auto with *.",
            "VernacExtend",
            "bd419c525d61df867e1aab62045f978d9c53d280"
        ],
        [
            "apply Trans with (group_inverse G r); auto with *.",
            "VernacExtend",
            "1f871e08eb8a066dfb568bb6f9ed923df550aa10"
        ],
        [
            "intros n0 H'; try assumption.",
            "VernacExtend",
            "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G r (group_inverse G r))); auto with *.",
            "VernacExtend",
            "89765514a7e08c9c8823a2bf0550ca19fcb5f033"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group n0) (monoid_unit G)); auto with *.",
            "VernacExtend",
            "99ff2489b9d4e344033c8e1f42994ddcf446c1eb"
        ],
        [
            "apply Trans with (nat_to_group n0); auto with *.",
            "VernacExtend",
            "afdb89fa5aca13a2c7ceba5b60828b91eb230c0f"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G r) (sgroup_law G r (nat_to_group n0))); auto with *.",
            "VernacExtend",
            "ce8c8cfa126def11e350aedde9850bfaf53d3d94"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (group_inverse G r) r) (nat_to_group n0)); auto with *.",
            "VernacExtend",
            "014087a582f86f4aaed473d8e7758b310ee0376a"
        ],
        [
            "apply Trans with (sgroup_law G (monoid_unit G) (nat_to_group n0)); auto with *.",
            "VernacExtend",
            "b26dc05186b35632defc6d8c44740e0b75457d8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_com3: algebra.",
            "VernacHints",
            "769e1f84b1a510bbda200c138c44e8cd323ac3cd"
        ],
        [
            "Lemma Zl5 : Equal (Z_to_group_nat_fun (ring_unit ZZ)) r.",
            "VernacStartTheoremProof",
            "8ed9713524a5529ac2334ea3e91f6ca653c5da42"
        ],
        [
            "unfold Z_to_group_nat_fun in |- *.",
            "VernacExtend",
            "34cfdb058fff77fca2b764664cea207d57f11d36"
        ],
        [
            "case (Z_gt_le_dec (ring_unit ZZ) 0).",
            "VernacExtend",
            "0758349303100566ebdf81df1f57124f20deaf40"
        ],
        [
            "intros z; try assumption.",
            "VernacExtend",
            "3d633f0170dfe964b100d9817e73d22d71b8d296"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "intros z; try assumption.",
            "VernacExtend",
            "3d633f0170dfe964b100d9817e73d22d71b8d296"
        ],
        [
            "case (Z_le_lt_eq_dec (ring_unit ZZ) 0 z).",
            "VernacExtend",
            "66bbb7dc21d64d4cf30bc105bb03e982acc32e13"
        ],
        [
            "intros z0; try assumption.",
            "VernacExtend",
            "04331760c4798a612a90e72aab3ee8a0829749c5"
        ],
        [
            "absurd (ring_unit ZZ < 0)%Z; auto with *.",
            "VernacExtend",
            "038947923dd2c659d500ea698ab1dcc788073716"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zl5: algebra.",
            "VernacHints",
            "a112c22d7f6458f371508139a11b9fcab59052bc"
        ],
        [
            "Lemma nat_to_group_com4 : forall n m : nat, Equal (sgroup_law G (nat_to_group m) (group_inverse G (nat_to_group n))) (sgroup_law G (group_inverse G (nat_to_group n)) (nat_to_group m)).",
            "VernacStartTheoremProof",
            "832107409ee13c1e8a13fdbdf807bc23ee22a342"
        ],
        [
            "simple induction n; simpl in |- *; auto with *.",
            "VernacExtend",
            "bd419c525d61df867e1aab62045f978d9c53d280"
        ],
        [
            "intros m; try assumption.",
            "VernacExtend",
            "dfc0fa473d4106a0502316651151325f08b199c0"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group m) (monoid_unit G)); auto with *.",
            "VernacExtend",
            "d9e31368ed7698d08565a2de30f3aef7effc2574"
        ],
        [
            "apply Trans with (nat_to_group m); auto with *.",
            "VernacExtend",
            "980229b1626e4da9d31a9f226d65063a3b71ab70"
        ],
        [
            "apply Trans with (sgroup_law G (monoid_unit G) (nat_to_group m)); auto with *.",
            "VernacExtend",
            "24b52d8535bf4e21c28a0ead33dbb473ca540b62"
        ],
        [
            "intros n0 H' m; try assumption.",
            "VernacExtend",
            "30cc54367c3f7e17feb7acf00f8a1d189b9fd778"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group m) (sgroup_law G (group_inverse G r) (group_inverse G (nat_to_group n0)))); auto with *.",
            "VernacExtend",
            "3b76dc8a67f92f5443ec43deca82f9e3a666a787"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (group_inverse G r)) (group_inverse G (nat_to_group n0))); auto with *.",
            "VernacExtend",
            "960742d87e0e3c05f2431607cda7323f2bd3b341"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (group_inverse G r) (nat_to_group m)) (group_inverse G (nat_to_group n0))); auto with *.",
            "VernacExtend",
            "5a94d8cd75ee97171a2cd5e7b9bd2f7a1ceaf00a"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G r) (sgroup_law G (nat_to_group m) (group_inverse G (nat_to_group n0)))); auto with *.",
            "VernacExtend",
            "ca02169eea02fa31e033363289e3fc133185d408"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G r) (sgroup_law G (group_inverse G (nat_to_group n0)) (nat_to_group m))); auto with *.",
            "VernacExtend",
            "21141a0c0fb9e2ced5c8766914a573dde9a66d83"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (group_inverse G r) (group_inverse G (nat_to_group n0))) (nat_to_group m)); auto with *.",
            "VernacExtend",
            "518cfc21b7ed5db6e1093373ef9f43378c1886dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_com4: algebra.",
            "VernacHints",
            "588e176e499e726fb8a5a5ea34d1ea26bcfa800f"
        ],
        [
            "Comments \"The group morphism from the integers to an arbitrary group.\".",
            "VernacComments",
            "c09c5fe1be13a73df5573027265181634e01f33f"
        ],
        [
            "Definition Z_to_group_nat : Hom (ZZ:GROUP) G.",
            "VernacDefinition",
            "af34b9c77876b3551b977f2dbe7886655ee13f3a"
        ],
        [
            "apply (BUILD_HOM_GROUP (G:=ZZ:GROUP) (G':=G) (ff:=Z_to_group_nat_fun)).",
            "VernacExtend",
            "ea34148db34afab7807b90dadd8ca581f976e8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "rewrite H'; auto with *.",
            "VernacExtend",
            "9d63211866f706c3c9f7dbe7ec9c7439538ee92f"
        ],
        [
            "simple induction x; simple induction y; simpl in |- *.",
            "VernacExtend",
            "69145a6cd9529172484f6057bd3f38490d4703cb"
        ],
        [
            "unfold sgroup_law at 1 in |- *; simpl in |- *.",
            "VernacExtend",
            "639df56c26aedc32e199494d5ce40c27dd81da12"
        ],
        [
            "apply Trans with (sgroup_law G (Z_to_group_nat_fun 0%Z) (monoid_unit G)); auto with *.",
            "VernacExtend",
            "5b1243381450222b2388fa66880f45a3dbed0244"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "rewrite Zplus_0_l.",
            "VernacExtend",
            "a6f3b1fd68915bd2e903eafd4cc1e5ae6c27386a"
        ],
        [
            "apply Trans with (sgroup_law G (monoid_unit G) (Z_to_group_nat_fun (Zpos p))); auto with *.",
            "VernacExtend",
            "3738d23ce5187e726302a7e9b89cb9f87155dd3b"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "rewrite Zplus_0_l.",
            "VernacExtend",
            "a6f3b1fd68915bd2e903eafd4cc1e5ae6c27386a"
        ],
        [
            "apply Trans with (sgroup_law G (monoid_unit G) (Z_to_group_nat_fun (Zneg p))); auto with *.",
            "VernacExtend",
            "688151509c965ecfdca4dd671e86da4b382de572"
        ],
        [
            "rewrite Zplus_0_r.",
            "VernacExtend",
            "40685e5e9aecf0ea026e1a665e83d962ad02d467"
        ],
        [
            "apply Trans with (sgroup_law G (Z_to_group_nat_fun (Zpos p)) (monoid_unit G)); auto with *.",
            "VernacExtend",
            "2875764df41837df9c8843b9e2bc70f82791dca1"
        ],
        [
            "unfold sgroup_law at 1 in |- *; simpl in |- *.",
            "VernacExtend",
            "639df56c26aedc32e199494d5ce40c27dd81da12"
        ],
        [
            "intros p0; try assumption.",
            "VernacExtend",
            "a418f9edbaa835a10b3bf994d677ad27e07a8682"
        ],
        [
            "apply Trans with (nat_to_group (nat_of_P (pos_abs (ax3 (p + p0))))); auto with *.",
            "VernacExtend",
            "c1f02f9d956bc48a56f0dba42c18712f4509ae53"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group (nat_of_P (pos_abs (ax3 p)))) (nat_to_group (nat_of_P (pos_abs (ax3 p0))))); auto with *.",
            "VernacExtend",
            "dc30612d976dcb6ae05b5a544c93305a5d0a66c2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite nat_of_P_plus_morphism.",
            "VernacExtend",
            "da63fa329e69a98f7f26a43e61590478c2110ce3"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "intros p0; try assumption.",
            "VernacExtend",
            "a418f9edbaa835a10b3bf994d677ad27e07a8682"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group (nat_of_P (pos_abs (ax3 p)))) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p0)))))); auto with *.",
            "VernacExtend",
            "d69f2dc89b4958c47c2f3376be9352fd0e47fa65"
        ],
        [
            "apply Trans with (sgroup_law G (Z_to_group_nat_fun (Zneg p)) (monoid_unit G)); auto with *.",
            "VernacExtend",
            "3ef24d8b54df12c3f0ba6fa7ba203bd93271d3a3"
        ],
        [
            "intros p0; try assumption.",
            "VernacExtend",
            "a418f9edbaa835a10b3bf994d677ad27e07a8682"
        ],
        [
            "rewrite Zplus_comm.",
            "VernacExtend",
            "2bb66f559ff90bf1a631140b359f483f39c79431"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p))))) (nat_to_group (nat_of_P (pos_abs (ax3 p0))))); auto with *.",
            "VernacExtend",
            "7d6ebd29a8de3211b960a84cf7a74f53542339ca"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group (nat_of_P (pos_abs (ax3 p0)))) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p)))))); auto with *.",
            "VernacExtend",
            "94dc101d333e23a12995114f65a8bcddda1e7ec6"
        ],
        [
            "unfold sgroup_law at 1 in |- *; simpl in |- *.",
            "VernacExtend",
            "639df56c26aedc32e199494d5ce40c27dd81da12"
        ],
        [
            "simpl in |- *; auto with *.",
            "VernacExtend",
            "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
        ],
        [
            "intros p0; try assumption.",
            "VernacExtend",
            "a418f9edbaa835a10b3bf994d677ad27e07a8682"
        ],
        [
            "apply Trans with (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 (p + p0)))))); auto with *.",
            "VernacExtend",
            "76c5cabfe0d6a886489069fae8ddd187546a9d38"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p))))) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p0)))))); auto with *.",
            "VernacExtend",
            "b1cd2a61b5d833dcfe4c1681416c70749f64f4a4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite nat_of_P_plus_morphism.",
            "VernacExtend",
            "da63fa329e69a98f7f26a43e61590478c2110ce3"
        ],
        [
            "apply Trans with (group_inverse G (sgroup_law G (nat_to_group (nat_of_P p)) (nat_to_group (nat_of_P p0)))); auto with *.",
            "VernacExtend",
            "ff76146bda05b79b9dce22d477300528098439ca"
        ],
        [
            "apply Trans with (group_inverse G (sgroup_law G (nat_to_group (nat_of_P p0)) (nat_to_group (nat_of_P p)))); auto with *.",
            "VernacExtend",
            "9a5582bb04ac7492050ec0dbe13161096d3d9a31"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Zup1.",
            "VernacEndSegment",
            "20f894ddfd7a863ff2c35b378d0ba5eae439dc8a"
        ],
        [
            "Hint Resolve nat_to_group_com nat_to_group_add nat_to_group_com2 nat_to_group_minus nat_to_group_com3 nat_to_group_com4: algebra.",
            "VernacHints",
            "c5ba963ac6eaa269d7fd4a0ad4b9615cc83f32c5"
        ],
        [
            "Section Zup2.",
            "VernacBeginSection",
            "f4b5e8d6baf721af8b640ae4afd23f9335ed3e5e"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Section pos_def.",
            "VernacBeginSection",
            "58cd919c1149117150eca1232bc14c8271fad3b4"
        ],
        [
            "Variable r : G.",
            "VernacAssumption",
            "1937366a4ffcb96fbe2fcbba1eb8f9ec1e8986d5"
        ],
        [
            "Fixpoint pos_to_group (p : positive) : G := match p with | xH => r | xO p' => group_square G (pos_to_group p') | xI p' => sgroup_law G (group_square G (pos_to_group p')) r end.",
            "VernacFixpoint",
            "0045b179c37fe5604c778c278f5ae22c73f5abbf"
        ],
        [
            "Lemma pos_nat_group : forall p : positive, Equal (pos_to_group p) (nat_to_group r (nat_of_P p)).",
            "VernacStartTheoremProof",
            "de0165c64db6356614c5615623d43fc6383486e7"
        ],
        [
            "simple induction p; simpl in |- *.",
            "VernacExtend",
            "6d0e50365a6591395f7116f43b0a270be5006bda"
        ],
        [
            "intros p0 H'; try assumption.",
            "VernacExtend",
            "d6cba7cd5e8454a4118c6175ff5507467df5e56c"
        ],
        [
            "rewrite ZL6.",
            "VernacExtend",
            "de7a610f888c22651fe638ebfde6e863c2bf13ce"
        ],
        [
            "unfold group_square in |- *.",
            "VernacExtend",
            "89f304699e1e17d0adb33aff8bd0ffae6ea593ba"
        ],
        [
            "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group r (nat_of_P p0)) (nat_to_group r (nat_of_P p0))) r); auto with *.",
            "VernacExtend",
            "14ca8d3ce75d288b98357b95883deba223d2b88a"
        ],
        [
            "unfold group_square in |- *.",
            "VernacExtend",
            "89f304699e1e17d0adb33aff8bd0ffae6ea593ba"
        ],
        [
            "intros p0 H'; try assumption.",
            "VernacExtend",
            "d6cba7cd5e8454a4118c6175ff5507467df5e56c"
        ],
        [
            "unfold nat_of_P in |- *.",
            "VernacExtend",
            "f68faededed4ef41de4764b5664a919d50c7132d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite ZL6.",
            "VernacExtend",
            "de7a610f888c22651fe638ebfde6e863c2bf13ce"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group r (nat_of_P p0)) (nat_to_group r (nat_of_P p0))); auto with *.",
            "VernacExtend",
            "68f56542f6cb652cbedc1c5e20429b3f1fb58ff6"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End pos_def.",
            "VernacEndSegment",
            "96f2a9f5c1829574e397e30f77764e211a11fdc9"
        ],
        [
            "Hint Resolve pos_nat_group: algebra.",
            "VernacHints",
            "b9d44f4e50b53ec18c5ab44e23a86dd997a70595"
        ],
        [
            "Variable r : G.",
            "VernacAssumption",
            "1937366a4ffcb96fbe2fcbba1eb8f9ec1e8986d5"
        ],
        [
            "Definition Z_to_group_fun : ZZ -> G.",
            "VernacDefinition",
            "1bd26736b82b54ceab76360b36c673b7cd42f61b"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "case (Z_gt_le_dec x 0); intros z.",
            "VernacExtend",
            "5418d97a5fb19c3728c56820dd84a7429c9bcb10"
        ],
        [
            "exact (pos_to_group r (pos_abs z)).",
            "VernacExtend",
            "c70572cb33f3178abec04c7c874c42008bca0d90"
        ],
        [
            "case (Z_le_lt_eq_dec _ _ z); intros.",
            "VernacExtend",
            "afd77f8583369cd4fbc9fcc9aa1acf23154aa905"
        ],
        [
            "cut (- x > 0)%Z.",
            "VernacExtend",
            "9b6c3935be8a508f2dce05bdbd53d7bdcb8b6fa4"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "exact (pos_to_group (group_inverse G r) (pos_abs H')).",
            "VernacExtend",
            "01863f80a4ac9500ad9c9cad78a8c65ea3482161"
        ],
        [
            "apply Zlemma1.",
            "VernacExtend",
            "af25f746828559893ee4168049676bac57926c26"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "exact (monoid_unit G).",
            "VernacExtend",
            "7fe20f2ce84236ddd56a6ed1a1bd2eb9cf68d664"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma nat_to_group_inverse : forall (n : nat) (r : G), Equal (group_inverse G (nat_to_group r n)) (nat_to_group (group_inverse G r) n).",
            "VernacStartTheoremProof",
            "2f4f1bec1f4ecf10b04f8d68653e75dca0773573"
        ],
        [
            "simple induction n; simpl in |- *; auto with *.",
            "VernacExtend",
            "bd419c525d61df867e1aab62045f978d9c53d280"
        ],
        [
            "intros n0 H' r0; try assumption.",
            "VernacExtend",
            "eba03f168623d39dc0838f599395c13397f53d72"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G r0) (group_inverse G (nat_to_group r0 n0))); auto with *.",
            "VernacExtend",
            "cb4e4290c956506c2a9a1aed47c7f8295075c63a"
        ],
        [
            "apply Trans with (sgroup_law G (group_inverse G r0) (nat_to_group (group_inverse G r0) n0)); auto with *.",
            "VernacExtend",
            "b49f672c28b3cd8fcb3928db9c0195d669e07fbe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_inverse: algebra.",
            "VernacHints",
            "a62edbb5681f6c5bb606edfd39caccf67df54ce3"
        ],
        [
            "Lemma Z_to_group_fun_eq : forall z : ZZ, Equal (Z_to_group_fun z) (Z_to_group_nat r z).",
            "VernacStartTheoremProof",
            "f5adf1729228e15be9f25673fbd65106dee11da3"
        ],
        [
            "intros z; simpl in |- *.",
            "VernacExtend",
            "189ce9347e7ebca81eb2245d3ea303ccada8db39"
        ],
        [
            "unfold Z_to_group_fun in |- *.",
            "VernacExtend",
            "2858a6fb11c7820bb7e5d12ace62c17975bc97bf"
        ],
        [
            "unfold Z_to_group_nat_fun in |- *.",
            "VernacExtend",
            "34cfdb058fff77fca2b764664cea207d57f11d36"
        ],
        [
            "case (Z_gt_le_dec z 0); intros z0.",
            "VernacExtend",
            "65855deb3e1436a60dfa8cd320487a7bb4cec3be"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "case (Z_le_lt_eq_dec z 0 z0); intros z1.",
            "VernacExtend",
            "8b1d6a4cfd08dda82182ee836d31091e40c84482"
        ],
        [
            "apply Trans with (nat_to_group (group_inverse G r) (nat_of_P (pos_abs (Zlemma1 z1)))); auto with *.",
            "VernacExtend",
            "48063423864b41eadd0c0b34abce3b8f1261b99b"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_to_group_fun_eq: algebra.",
            "VernacHints",
            "454532c263e0304cd849aeb93825eccd13ee8838"
        ],
        [
            "Definition Z_to_group : Hom (ZZ:GROUP) G.",
            "VernacDefinition",
            "db5d6f65bdb475fb4784b99238db0bec1c9511af"
        ],
        [
            "apply (BUILD_HOM_GROUP (G:=ZZ:GROUP) (G':=G) (ff:=Z_to_group_fun)).",
            "VernacExtend",
            "3dcb36c2ec38e38c2243013b89bc9e5b5d1a9efc"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "apply Trans with (Z_to_group_nat r x); auto with *.",
            "VernacExtend",
            "6f5b022f3036d1e8461fb2a7b40b363f60729076"
        ],
        [
            "apply Trans with (Z_to_group_nat r y); auto with *.",
            "VernacExtend",
            "b6d891342b72404436021854d9b8f976a071c363"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "apply Trans with (Z_to_group_nat r (sgroup_law ZZ x y)); auto with *.",
            "VernacExtend",
            "7011a350bd9fc4bac739112c56357017f998651d"
        ],
        [
            "apply Trans with (sgroup_law G (Z_to_group_nat r x) (Z_to_group_nat r y)); auto with *.",
            "VernacExtend",
            "d16b2b1598192d3182f4519fb726c8cc3d074994"
        ],
        [
            "apply Trans with (Z_to_group_nat r (monoid_unit ZZ)); auto with *.",
            "VernacExtend",
            "ee02d76079663bb89983ab48c56ad85ddea59da3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Zup2.",
            "VernacEndSegment",
            "67f2a4e0ccd56e38432825de8a8421e35e7297a2"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Definition group_power (G : GROUP) (x : G) (n : ZZ) := Z_to_group x n.",
            "VernacDefinition",
            "b92b353ee1dfeff04c41e4fa998bfa77d29df435"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition sgroup_powers (G : GROUP) (g : G) := coKer (Z_to_group g).",
            "VernacDefinition",
            "7f1f9a0c8dc667c4a3ba8194d43160bb046aeb7c"
        ],
        [
            "Lemma sgroup_powers_prop : forall (G : GROUP) (g x : G), in_part x (sgroup_powers g) -> exists n : ZZ, Equal x (group_power G g n).",
            "VernacStartTheoremProof",
            "7ba90404d141cd74517c5abd11b1f407a2517ba6"
        ],
        [
            "intros G g x H'; try assumption.",
            "VernacExtend",
            "7276eba52ee62a358e7713538b13492f1c6896a9"
        ],
        [
            "elim H'.",
            "VernacExtend",
            "1cae423a267f3a1a6990051e754342f63add38fd"
        ],
        [
            "intros x0 H'0; try assumption.",
            "VernacExtend",
            "a1fca524ae8ac7aceeac28ce713c7547de55485b"
        ],
        [
            "elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
            "VernacExtend",
            "a04b97037e45e8b2f38a354c439106b450b90add"
        ],
        [
            "exists x0; try assumption.",
            "VernacExtend",
            "7a1f2e9655d25118997464c8f16515cc70a2e7f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgroup_powers_rev : forall (G : GROUP) (g : G) (n : ZZ), in_part (group_power G g n) (sgroup_powers g).",
            "VernacStartTheoremProof",
            "d0cdd5befd40594beed770cf0b030029a0aab3c8"
        ],
        [
            "intros G g n; try assumption.",
            "VernacExtend",
            "45011c3220ca1626208d6f42f753dbd0c06919d2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists n; split; [ idtac | try assumption ].",
            "VernacExtend",
            "099675268a1b62b0318a7a1e138eab9072f0ae7b"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "unfold group_power in |- *; auto with *.",
            "VernacExtend",
            "4c94d5cf4cea922d581ad0b0e7a1c49e6704966a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve sgroup_powers_prop sgroup_powers_rev: algebra.",
            "VernacHints",
            "3418f343504007300b90e322683de3514267973a"
        ]
    ],
    "proofs": [
        {
            "name": "pos_abs",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "case x.",
                        "VernacExtend",
                        "ff73d135d2805abb527daeb7acd470185a7b2435"
                    ]
                },
                {
                    "command": [
                        "intros H'; red in H'.",
                        "VernacExtend",
                        "5628143996864dae4052e86719a5f6654c3edf8b"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "intros p H'.",
                        "VernacExtend",
                        "bb6abbd0a5bb134f5276d7928176425ceae09e54"
                    ]
                },
                {
                    "command": [
                        "exact p.",
                        "VernacExtend",
                        "b7c0f461e0cb1db77f2037d1297f3ab1056e59d7"
                    ]
                },
                {
                    "command": [
                        "intros p H'; red in H'.",
                        "VernacExtend",
                        "179e6119d53b628a347eb03236fb720c6d6e5a00"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "pos_abs_ok",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "intros px; red in px.",
                        "VernacExtend",
                        "128edac1a334e0cb0e9d5fb8fae6f9d55bc2778c"
                    ]
                },
                {
                    "command": [
                        "simpl in px.",
                        "VernacExtend",
                        "42ff988a98cf976b07d214b3eda78954f9e33d28"
                    ]
                },
                {
                    "command": [
                        "inversion px.",
                        "VernacExtend",
                        "e8da1bb539fe2642b2d29aba042a9f89eb80f043"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "intros p px; red in px.",
                        "VernacExtend",
                        "ffe99bf91b03f5f5ec070fbe3a1ca4cc5f5ac423"
                    ]
                },
                {
                    "command": [
                        "simpl in px.",
                        "VernacExtend",
                        "42ff988a98cf976b07d214b3eda78954f9e33d28"
                    ]
                },
                {
                    "command": [
                        "inversion px.",
                        "VernacExtend",
                        "e8da1bb539fe2642b2d29aba042a9f89eb80f043"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_reg_l",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros a b c; try assumption.",
                        "VernacExtend",
                        "36efab19a09b0251730c7cc39aaacd2054f572ef"
                    ]
                },
                {
                    "command": [
                        "unfold Zlt, not in |- *.",
                        "VernacExtend",
                        "601670d6afc62c9cc6aaf9cac985aa823daf3cbc"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'.",
                        "VernacExtend",
                        "6015ddb26a544f622429ee9ca3769cdf838b7d8a"
                    ]
                },
                {
                    "command": [
                        "apply Zcompare_plus_compat; assumption.",
                        "VernacExtend",
                        "153835bfcfce8bfe272c1c2857a1a5142a316b23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlemma1",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros x H'; try assumption.",
                        "VernacExtend",
                        "58e256260d8e1308b78670caf8fd802cbcefd3be"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt.",
                        "VernacExtend",
                        "0c9f5f2fbabcb44c83f236e290499e43cbae87ee"
                    ]
                },
                {
                    "command": [
                        "replace (- x)%Z with (- x + 0)%Z.",
                        "VernacExtend",
                        "1ee4338c63637186f88267743bc184f93c1ecfa7"
                    ]
                },
                {
                    "command": [
                        "pattern 0%Z at 1 in |- *.",
                        "VernacExtend",
                        "b927436efa2600185ae97f68ae897076294b1e04"
                    ]
                },
                {
                    "command": [
                        "replace 0%Z with (- x + x)%Z.",
                        "VernacExtend",
                        "c7211ec882c5b19ac9d0487b953dd2bde268b7ab"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_reg_l.",
                        "VernacExtend",
                        "e40e4d41fc4ecbaf67f955b341676f4059669874"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_opp_l.",
                        "VernacExtend",
                        "198ec52382c79fc01fff4efd57d5b59fc844a830"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_0_r.",
                        "VernacExtend",
                        "f9a7f46d03ba3c667dd65e310a2cc065af341a95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_nat_fun",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec x 0); intros z.",
                        "VernacExtend",
                        "5418d97a5fb19c3728c56820dd84a7429c9bcb10"
                    ]
                },
                {
                    "command": [
                        "exact (nat_to_group (nat_of_P (pos_abs z))).",
                        "VernacExtend",
                        "f1d7387c72ce4e7d951b7f1d33df7a6a31638e79"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec _ _ z); intros.",
                        "VernacExtend",
                        "afd77f8583369cd4fbc9fcc9aa1acf23154aa905"
                    ]
                },
                {
                    "command": [
                        "cut (- x > 0)%Z.",
                        "VernacExtend",
                        "9b6c3935be8a508f2dce05bdbd53d7bdcb8b6fa4"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "exact (group_inverse G (nat_to_group (nat_of_P (pos_abs H')))).",
                        "VernacExtend",
                        "d129338d46c2f1c2cdbd836d9854ebf61422f557"
                    ]
                },
                {
                    "command": [
                        "apply Zlemma1.",
                        "VernacExtend",
                        "af25f746828559893ee4168049676bac57926c26"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "exact (monoid_unit G).",
                        "VernacExtend",
                        "7fe20f2ce84236ddd56a6ed1a1bd2eb9cf68d664"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_com",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with *.",
                        "VernacExtend",
                        "bd419c525d61df867e1aab62045f978d9c53d280"
                    ]
                },
                {
                    "command": [
                        "apply Trans with r; auto with *.",
                        "VernacExtend",
                        "1fa8d1b145c4ffe43db6d87785267daf2b9ea8c4"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'; try assumption.",
                        "VernacExtend",
                        "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G r (nat_to_group n0)) r); auto with *.",
                        "VernacExtend",
                        "0e107f388c0cd7e61da1165878188ab641eb5209"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_add",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *.",
                        "VernacExtend",
                        "b67a775f86f34dcfd676a405ed09e661896dfc35"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m; try assumption.",
                        "VernacExtend",
                        "30cc54367c3f7e17feb7acf00f8a1d189b9fd778"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G r (nat_to_group m))); auto with *.",
                        "VernacExtend",
                        "0f231d9f8b65e8bd10b00e60c62d0ef55104eb28"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G (nat_to_group m) r)); auto with *.",
                        "VernacExtend",
                        "da37a12b7871616b1131abdbd46f1ab21df0ace4"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group n0) (nat_to_group m)) r); auto with *.",
                        "VernacExtend",
                        "623d0151e1cba91fb3e5f5e07de906b7c61aa22a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax1",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax2",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zl1",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "unfold Z_to_group_nat_fun in |- *.",
                        "VernacExtend",
                        "34cfdb058fff77fca2b764664cea207d57f11d36"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec 0 0).",
                        "VernacExtend",
                        "4f58cabccf05b66cb7aa92c13ef1a974bae03fc2"
                    ]
                },
                {
                    "command": [
                        "intros z; try assumption.",
                        "VernacExtend",
                        "3d633f0170dfe964b100d9817e73d22d71b8d296"
                    ]
                },
                {
                    "command": [
                        "absurd (0 > 0)%Z; auto with *.",
                        "VernacExtend",
                        "1ca65206baff3b8d92ed587b3ef1a2b7a714369c"
                    ]
                },
                {
                    "command": [
                        "intros z; try assumption.",
                        "VernacExtend",
                        "3d633f0170dfe964b100d9817e73d22d71b8d296"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec 0 0 z).",
                        "VernacExtend",
                        "4fe8762f64da58c9c056a93337a51dd2b572f973"
                    ]
                },
                {
                    "command": [
                        "intros z0; try assumption.",
                        "VernacExtend",
                        "04331760c4798a612a90e72aab3ee8a0829749c5"
                    ]
                },
                {
                    "command": [
                        "absurd (0 < 0)%Z; auto with *.",
                        "VernacExtend",
                        "4a0eddf13843e69d40292f7b7f813a0083c70f44"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax3",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zl2",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_group_nat_fun in |- *.",
                        "VernacExtend",
                        "34cfdb058fff77fca2b764664cea207d57f11d36"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec (Zpos p) 0); intros z.",
                        "VernacExtend",
                        "610e8da819a45dab07636f54da4facc0b13d00e9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with *.",
                        "VernacExtend",
                        "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec (Zpos p) 0 z); intros.",
                        "VernacExtend",
                        "5e952ad59f83d481dc7b284a32d7c87594302789"
                    ]
                },
                {
                    "command": [
                        "absurd (Zpos p < 0)%Z; auto with *.",
                        "VernacExtend",
                        "f383903a8f14aa60e833ef0d5f71ec5cae690df7"
                    ]
                },
                {
                    "command": [
                        "inversion e.",
                        "VernacExtend",
                        "840aa02714fbdee765768ec48e93d69bb3830c14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax4",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros p; red in |- *.",
                        "VernacExtend",
                        "9812bc48bc561d6d00ce55699afd394edc2b0067"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zl3",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_group_nat_fun in |- *.",
                        "VernacExtend",
                        "34cfdb058fff77fca2b764664cea207d57f11d36"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec (Zneg p) 0); intros z.",
                        "VernacExtend",
                        "ce648990829a08d82bd77b04dd08cff65717ce8b"
                    ]
                },
                {
                    "command": [
                        "absurd (Zneg p > 0)%Z; auto with *.",
                        "VernacExtend",
                        "d8b6927dc3e41bf91fc6955abf68e81ad11e746d"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec (Zneg p) 0 z); intros.",
                        "VernacExtend",
                        "557a4f86f2565ed8074cd7d212ff2d294f5b18e9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with *.",
                        "VernacExtend",
                        "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
                    ]
                },
                {
                    "command": [
                        "inversion e.",
                        "VernacExtend",
                        "840aa02714fbdee765768ec48e93d69bb3830c14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax5",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros p q H'; red in H'.",
                        "VernacExtend",
                        "e4ca3862cea05b05b2ae000b4b0d54b526a1f72c"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pos_sub_spec.",
                        "VernacExtend",
                        "ad39ea5e69a6135dd31841448750ef09af08dff9"
                    ]
                },
                {
                    "command": [
                        "rewrite H'.",
                        "VernacExtend",
                        "232d4714354910d49fdbf1140eac1d26da075d17"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax6",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros p q H'; red in H'.",
                        "VernacExtend",
                        "e4ca3862cea05b05b2ae000b4b0d54b526a1f72c"
                    ]
                },
                {
                    "command": [
                        "simpl in H'.",
                        "VernacExtend",
                        "d943243015ae7f9d4452dfc70846f2ccdf57c2f4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pos_sub_spec.",
                        "VernacExtend",
                        "ad39ea5e69a6135dd31841448750ef09af08dff9"
                    ]
                },
                {
                    "command": [
                        "rewrite H'.",
                        "VernacExtend",
                        "232d4714354910d49fdbf1140eac1d26da075d17"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax7",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pos_sub_spec; unfold Pos.compare.",
                        "VernacExtend",
                        "1de587056006d16f5e9c25c8ddbdda0829b85b70"
                    ]
                },
                {
                    "command": [
                        "replace (Pcompare p p Datatypes.Eq) with Datatypes.Eq.",
                        "VernacExtend",
                        "a140da813c0bf5f74d4e8ef1d1547dea5652b049"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "elim p.",
                        "VernacExtend",
                        "6c779b9e37b157f8482c780f6aa47ea385660887"
                    ]
                },
                {
                    "command": [
                        "intros p0; simpl in |- *.",
                        "VernacExtend",
                        "defc9f8a0385e253211d67006fb5ca7d8bf9b1f7"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "intros p0; simpl in |- *.",
                        "VernacExtend",
                        "defc9f8a0385e253211d67006fb5ca7d8bf9b1f7"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_com2",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with *.",
                        "VernacExtend",
                        "bd419c525d61df867e1aab62045f978d9c53d280"
                    ]
                },
                {
                    "command": [
                        "intros m; try assumption.",
                        "VernacExtend",
                        "dfc0fa473d4106a0502316651151325f08b199c0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group m); auto with *.",
                        "VernacExtend",
                        "980229b1626e4da9d31a9f226d65063a3b71ab70"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m; try assumption.",
                        "VernacExtend",
                        "30cc54367c3f7e17feb7acf00f8a1d189b9fd778"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G r (nat_to_group m))); auto with *.",
                        "VernacExtend",
                        "0f231d9f8b65e8bd10b00e60c62d0ef55104eb28"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G (nat_to_group m) r)); auto with *.",
                        "VernacExtend",
                        "da37a12b7871616b1131abdbd46f1ab21df0ace4"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group n0) (nat_to_group m)) r); auto with *.",
                        "VernacExtend",
                        "623d0151e1cba91fb3e5f5e07de906b7c61aa22a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group n0)) r); auto with *.",
                        "VernacExtend",
                        "6e91a86d1e713eabbae64c7150b48849e5b920ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_minus",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros n m H'; try assumption.",
                        "VernacExtend",
                        "25dbd129d5bc1087724c9ff6771b4b641cbd7ae4"
                    ]
                },
                {
                    "command": [
                        "replace n with (m + (n - m)).",
                        "VernacExtend",
                        "faca29eece793f025b9ce9f66da475b717ae9ec5"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus.",
                        "VernacExtend",
                        "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group (n - m))) (group_inverse G (nat_to_group m))); auto with *.",
                        "VernacExtend",
                        "cca37fb086df26c255edb8d50b262722b3b18c86"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_reg_right with (nat_to_group m); auto with *.",
                        "VernacExtend",
                        "6a7f104b18b77a5ce56e663bef4d3f3ce31443a5"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group (n - m))) (sgroup_law G (group_inverse G (nat_to_group m)) (nat_to_group m))); auto with *.",
                        "VernacExtend",
                        "edbdad70266addf6336f738ad98795fbbcde08e2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (nat_to_group (n - m))) (monoid_unit G)); auto with *.",
                        "VernacExtend",
                        "6b27dbf226b52fa827065334f8ca64eef9176448"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group m) (nat_to_group (n - m))); auto with *.",
                        "VernacExtend",
                        "ed7623c9d97c95fec0fb4445829c68f19879874a"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ax8",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros p q H'; try assumption.",
                        "VernacExtend",
                        "7e91a4eff32ed0e8aaff321efad25448038d8cd4"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism.",
                        "VernacExtend",
                        "280c7de0c4b83357947055390228d774db0c344d"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_lt_Lt_compare_morphism; auto with *.",
                        "VernacExtend",
                        "916c5b985be1bef737861b2b6387734775648ca0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zl4",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros p p0; try assumption.",
                        "VernacExtend",
                        "9ac5d4da282ef526817ab7d1d924d199078b2485"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec (Zpos p) (Zpos p0)); intros z.",
                        "VernacExtend",
                        "b6a65a61e05076a7c727b9e597a029efc880686d"
                    ]
                },
                {
                    "command": [
                        "rewrite ax5; auto with *.",
                        "VernacExtend",
                        "ddd24d304e7168a4940f0bac04726e2fad3b900e"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (nat_of_P (pos_abs (ax3 (p - p0))))); auto with *.",
                        "VernacExtend",
                        "c530e118218a1af41f8e219e87b171886a2446a8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_minus_morphism; auto with *.",
                        "VernacExtend",
                        "1321ebb2c67c7ff1320d5cb9c7367061c50a173c"
                    ]
                },
                {
                    "command": [
                        "apply nat_to_group_minus.",
                        "VernacExtend",
                        "445d8b79ef03b42d40aeeadf2d9c65c9527898b3"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_morphism.",
                        "VernacExtend",
                        "e716769c334726ff2487d33c8ebd61394c613116"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec _ _ z); intros.",
                        "VernacExtend",
                        "afd77f8583369cd4fbc9fcc9aa1acf23154aa905"
                    ]
                },
                {
                    "command": [
                        "rewrite ax6; auto with *.",
                        "VernacExtend",
                        "7d7fa6ebca3e20690c3f67b1a5ad75261f8c5391"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 (p0 - p)))))); auto with *.",
                        "VernacExtend",
                        "7c6beaa93c8737eea6abd0f118063b599c48327c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_minus_morphism; auto with *.",
                        "VernacExtend",
                        "1321ebb2c67c7ff1320d5cb9c7367061c50a173c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (sgroup_law G (nat_to_group (nat_of_P p0)) (group_inverse G (nat_to_group (nat_of_P p))))); auto with *.",
                        "VernacExtend",
                        "9b58e78f2889519968295125b2041197f225a004"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_comp.",
                        "VernacExtend",
                        "304a0574b799b5cb609f7bb59a58b1b934bb8d8a"
                    ]
                },
                {
                    "command": [
                        "apply nat_to_group_minus.",
                        "VernacExtend",
                        "445d8b79ef03b42d40aeeadf2d9c65c9527898b3"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_morphism.",
                        "VernacExtend",
                        "e716769c334726ff2487d33c8ebd61394c613116"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G (group_inverse G (nat_to_group (nat_of_P p)))) (group_inverse G (nat_to_group (nat_of_P p0)))); auto with *.",
                        "VernacExtend",
                        "0a31d197432c74d82043ccffcc1cb712da1ef0ed"
                    ]
                },
                {
                    "command": [
                        "injection e.",
                        "VernacExtend",
                        "cf626cd0773aba2024ccc3777f2dc35cfa2cad6f"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'.",
                        "VernacExtend",
                        "6015ddb26a544f622429ee9ca3769cdf838b7d8a"
                    ]
                },
                {
                    "command": [
                        "rewrite ax7.",
                        "VernacExtend",
                        "7e7f28a4085d56e0202f52d9e3f0ed020b969ac0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit G); auto with *.",
                        "VernacExtend",
                        "167c011a08dd1589bbda37e8c203839d1bb63c09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_com3",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with *.",
                        "VernacExtend",
                        "bd419c525d61df867e1aab62045f978d9c53d280"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G r); auto with *.",
                        "VernacExtend",
                        "1f871e08eb8a066dfb568bb6f9ed923df550aa10"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'; try assumption.",
                        "VernacExtend",
                        "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group n0) (sgroup_law G r (group_inverse G r))); auto with *.",
                        "VernacExtend",
                        "89765514a7e08c9c8823a2bf0550ca19fcb5f033"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group n0) (monoid_unit G)); auto with *.",
                        "VernacExtend",
                        "99ff2489b9d4e344033c8e1f42994ddcf446c1eb"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group n0); auto with *.",
                        "VernacExtend",
                        "afdb89fa5aca13a2c7ceba5b60828b91eb230c0f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G r) (sgroup_law G r (nat_to_group n0))); auto with *.",
                        "VernacExtend",
                        "ce8c8cfa126def11e350aedde9850bfaf53d3d94"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (group_inverse G r) r) (nat_to_group n0)); auto with *.",
                        "VernacExtend",
                        "014087a582f86f4aaed473d8e7758b310ee0376a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (monoid_unit G) (nat_to_group n0)); auto with *.",
                        "VernacExtend",
                        "b26dc05186b35632defc6d8c44740e0b75457d8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zl5",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "unfold Z_to_group_nat_fun in |- *.",
                        "VernacExtend",
                        "34cfdb058fff77fca2b764664cea207d57f11d36"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec (ring_unit ZZ) 0).",
                        "VernacExtend",
                        "0758349303100566ebdf81df1f57124f20deaf40"
                    ]
                },
                {
                    "command": [
                        "intros z; try assumption.",
                        "VernacExtend",
                        "3d633f0170dfe964b100d9817e73d22d71b8d296"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "intros z; try assumption.",
                        "VernacExtend",
                        "3d633f0170dfe964b100d9817e73d22d71b8d296"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec (ring_unit ZZ) 0 z).",
                        "VernacExtend",
                        "66bbb7dc21d64d4cf30bc105bb03e982acc32e13"
                    ]
                },
                {
                    "command": [
                        "intros z0; try assumption.",
                        "VernacExtend",
                        "04331760c4798a612a90e72aab3ee8a0829749c5"
                    ]
                },
                {
                    "command": [
                        "absurd (ring_unit ZZ < 0)%Z; auto with *.",
                        "VernacExtend",
                        "038947923dd2c659d500ea698ab1dcc788073716"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_com4",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with *.",
                        "VernacExtend",
                        "bd419c525d61df867e1aab62045f978d9c53d280"
                    ]
                },
                {
                    "command": [
                        "intros m; try assumption.",
                        "VernacExtend",
                        "dfc0fa473d4106a0502316651151325f08b199c0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group m) (monoid_unit G)); auto with *.",
                        "VernacExtend",
                        "d9e31368ed7698d08565a2de30f3aef7effc2574"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group m); auto with *.",
                        "VernacExtend",
                        "980229b1626e4da9d31a9f226d65063a3b71ab70"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (monoid_unit G) (nat_to_group m)); auto with *.",
                        "VernacExtend",
                        "24b52d8535bf4e21c28a0ead33dbb473ca540b62"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m; try assumption.",
                        "VernacExtend",
                        "30cc54367c3f7e17feb7acf00f8a1d189b9fd778"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group m) (sgroup_law G (group_inverse G r) (group_inverse G (nat_to_group n0)))); auto with *.",
                        "VernacExtend",
                        "3b76dc8a67f92f5443ec43deca82f9e3a666a787"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group m) (group_inverse G r)) (group_inverse G (nat_to_group n0))); auto with *.",
                        "VernacExtend",
                        "960742d87e0e3c05f2431607cda7323f2bd3b341"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (group_inverse G r) (nat_to_group m)) (group_inverse G (nat_to_group n0))); auto with *.",
                        "VernacExtend",
                        "5a94d8cd75ee97171a2cd5e7b9bd2f7a1ceaf00a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G r) (sgroup_law G (nat_to_group m) (group_inverse G (nat_to_group n0)))); auto with *.",
                        "VernacExtend",
                        "ca02169eea02fa31e033363289e3fc133185d408"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G r) (sgroup_law G (group_inverse G (nat_to_group n0)) (nat_to_group m))); auto with *.",
                        "VernacExtend",
                        "21141a0c0fb9e2ced5c8766914a573dde9a66d83"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (group_inverse G r) (group_inverse G (nat_to_group n0))) (nat_to_group m)); auto with *.",
                        "VernacExtend",
                        "518cfc21b7ed5db6e1093373ef9f43378c1886dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_nat",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_HOM_GROUP (G:=ZZ:GROUP) (G':=G) (ff:=Z_to_group_nat_fun)).",
                        "VernacExtend",
                        "ea34148db34afab7807b90dadd8ca581f976e8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; auto with *.",
                        "VernacExtend",
                        "9d63211866f706c3c9f7dbe7ec9c7439538ee92f"
                    ]
                },
                {
                    "command": [
                        "simple induction x; simple induction y; simpl in |- *.",
                        "VernacExtend",
                        "69145a6cd9529172484f6057bd3f38490d4703cb"
                    ]
                },
                {
                    "command": [
                        "unfold sgroup_law at 1 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "639df56c26aedc32e199494d5ce40c27dd81da12"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (Z_to_group_nat_fun 0%Z) (monoid_unit G)); auto with *.",
                        "VernacExtend",
                        "5b1243381450222b2388fa66880f45a3dbed0244"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_0_l.",
                        "VernacExtend",
                        "a6f3b1fd68915bd2e903eafd4cc1e5ae6c27386a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (monoid_unit G) (Z_to_group_nat_fun (Zpos p))); auto with *.",
                        "VernacExtend",
                        "3738d23ce5187e726302a7e9b89cb9f87155dd3b"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_0_l.",
                        "VernacExtend",
                        "a6f3b1fd68915bd2e903eafd4cc1e5ae6c27386a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (monoid_unit G) (Z_to_group_nat_fun (Zneg p))); auto with *.",
                        "VernacExtend",
                        "688151509c965ecfdca4dd671e86da4b382de572"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_0_r.",
                        "VernacExtend",
                        "40685e5e9aecf0ea026e1a665e83d962ad02d467"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (Z_to_group_nat_fun (Zpos p)) (monoid_unit G)); auto with *.",
                        "VernacExtend",
                        "2875764df41837df9c8843b9e2bc70f82791dca1"
                    ]
                },
                {
                    "command": [
                        "unfold sgroup_law at 1 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "639df56c26aedc32e199494d5ce40c27dd81da12"
                    ]
                },
                {
                    "command": [
                        "intros p0; try assumption.",
                        "VernacExtend",
                        "a418f9edbaa835a10b3bf994d677ad27e07a8682"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (nat_of_P (pos_abs (ax3 (p + p0))))); auto with *.",
                        "VernacExtend",
                        "c1f02f9d956bc48a56f0dba42c18712f4509ae53"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group (nat_of_P (pos_abs (ax3 p)))) (nat_to_group (nat_of_P (pos_abs (ax3 p0))))); auto with *.",
                        "VernacExtend",
                        "dc30612d976dcb6ae05b5a544c93305a5d0a66c2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_plus_morphism.",
                        "VernacExtend",
                        "da63fa329e69a98f7f26a43e61590478c2110ce3"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "intros p0; try assumption.",
                        "VernacExtend",
                        "a418f9edbaa835a10b3bf994d677ad27e07a8682"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group (nat_of_P (pos_abs (ax3 p)))) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p0)))))); auto with *.",
                        "VernacExtend",
                        "d69f2dc89b4958c47c2f3376be9352fd0e47fa65"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (Z_to_group_nat_fun (Zneg p)) (monoid_unit G)); auto with *.",
                        "VernacExtend",
                        "3ef24d8b54df12c3f0ba6fa7ba203bd93271d3a3"
                    ]
                },
                {
                    "command": [
                        "intros p0; try assumption.",
                        "VernacExtend",
                        "a418f9edbaa835a10b3bf994d677ad27e07a8682"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_comm.",
                        "VernacExtend",
                        "2bb66f559ff90bf1a631140b359f483f39c79431"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p))))) (nat_to_group (nat_of_P (pos_abs (ax3 p0))))); auto with *.",
                        "VernacExtend",
                        "7d6ebd29a8de3211b960a84cf7a74f53542339ca"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group (nat_of_P (pos_abs (ax3 p0)))) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p)))))); auto with *.",
                        "VernacExtend",
                        "94dc101d333e23a12995114f65a8bcddda1e7ec6"
                    ]
                },
                {
                    "command": [
                        "unfold sgroup_law at 1 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "639df56c26aedc32e199494d5ce40c27dd81da12"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with *.",
                        "VernacExtend",
                        "5af17f2ebf672d577319bda3714d2b8901ccd0fb"
                    ]
                },
                {
                    "command": [
                        "intros p0; try assumption.",
                        "VernacExtend",
                        "a418f9edbaa835a10b3bf994d677ad27e07a8682"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 (p + p0)))))); auto with *.",
                        "VernacExtend",
                        "76c5cabfe0d6a886489069fae8ddd187546a9d38"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p))))) (group_inverse G (nat_to_group (nat_of_P (pos_abs (ax3 p0)))))); auto with *.",
                        "VernacExtend",
                        "b1cd2a61b5d833dcfe4c1681416c70749f64f4a4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_plus_morphism.",
                        "VernacExtend",
                        "da63fa329e69a98f7f26a43e61590478c2110ce3"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (sgroup_law G (nat_to_group (nat_of_P p)) (nat_to_group (nat_of_P p0)))); auto with *.",
                        "VernacExtend",
                        "ff76146bda05b79b9dce22d477300528098439ca"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (sgroup_law G (nat_to_group (nat_of_P p0)) (nat_to_group (nat_of_P p)))); auto with *.",
                        "VernacExtend",
                        "9a5582bb04ac7492050ec0dbe13161096d3d9a31"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "pos_nat_group",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "simple induction p; simpl in |- *.",
                        "VernacExtend",
                        "6d0e50365a6591395f7116f43b0a270be5006bda"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'; try assumption.",
                        "VernacExtend",
                        "d6cba7cd5e8454a4118c6175ff5507467df5e56c"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6.",
                        "VernacExtend",
                        "de7a610f888c22651fe638ebfde6e863c2bf13ce"
                    ]
                },
                {
                    "command": [
                        "unfold group_square in |- *.",
                        "VernacExtend",
                        "89f304699e1e17d0adb33aff8bd0ffae6ea593ba"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (sgroup_law G (nat_to_group r (nat_of_P p0)) (nat_to_group r (nat_of_P p0))) r); auto with *.",
                        "VernacExtend",
                        "14ca8d3ce75d288b98357b95883deba223d2b88a"
                    ]
                },
                {
                    "command": [
                        "unfold group_square in |- *.",
                        "VernacExtend",
                        "89f304699e1e17d0adb33aff8bd0ffae6ea593ba"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'; try assumption.",
                        "VernacExtend",
                        "d6cba7cd5e8454a4118c6175ff5507467df5e56c"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P in |- *.",
                        "VernacExtend",
                        "f68faededed4ef41de4764b5664a919d50c7132d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6.",
                        "VernacExtend",
                        "de7a610f888c22651fe638ebfde6e863c2bf13ce"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group r (nat_of_P p0)) (nat_to_group r (nat_of_P p0))); auto with *.",
                        "VernacExtend",
                        "68f56542f6cb652cbedc1c5e20429b3f1fb58ff6"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_fun",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec x 0); intros z.",
                        "VernacExtend",
                        "5418d97a5fb19c3728c56820dd84a7429c9bcb10"
                    ]
                },
                {
                    "command": [
                        "exact (pos_to_group r (pos_abs z)).",
                        "VernacExtend",
                        "c70572cb33f3178abec04c7c874c42008bca0d90"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec _ _ z); intros.",
                        "VernacExtend",
                        "afd77f8583369cd4fbc9fcc9aa1acf23154aa905"
                    ]
                },
                {
                    "command": [
                        "cut (- x > 0)%Z.",
                        "VernacExtend",
                        "9b6c3935be8a508f2dce05bdbd53d7bdcb8b6fa4"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "exact (pos_to_group (group_inverse G r) (pos_abs H')).",
                        "VernacExtend",
                        "01863f80a4ac9500ad9c9cad78a8c65ea3482161"
                    ]
                },
                {
                    "command": [
                        "apply Zlemma1.",
                        "VernacExtend",
                        "af25f746828559893ee4168049676bac57926c26"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "exact (monoid_unit G).",
                        "VernacExtend",
                        "7fe20f2ce84236ddd56a6ed1a1bd2eb9cf68d664"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_inverse",
            "line_nb": 360,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with *.",
                        "VernacExtend",
                        "bd419c525d61df867e1aab62045f978d9c53d280"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' r0; try assumption.",
                        "VernacExtend",
                        "eba03f168623d39dc0838f599395c13397f53d72"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G r0) (group_inverse G (nat_to_group r0 n0))); auto with *.",
                        "VernacExtend",
                        "cb4e4290c956506c2a9a1aed47c7f8295075c63a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (group_inverse G r0) (nat_to_group (group_inverse G r0) n0)); auto with *.",
                        "VernacExtend",
                        "b49f672c28b3cd8fcb3928db9c0195d669e07fbe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_fun_eq",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "intros z; simpl in |- *.",
                        "VernacExtend",
                        "189ce9347e7ebca81eb2245d3ea303ccada8db39"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_group_fun in |- *.",
                        "VernacExtend",
                        "2858a6fb11c7820bb7e5d12ace62c17975bc97bf"
                    ]
                },
                {
                    "command": [
                        "unfold Z_to_group_nat_fun in |- *.",
                        "VernacExtend",
                        "34cfdb058fff77fca2b764664cea207d57f11d36"
                    ]
                },
                {
                    "command": [
                        "case (Z_gt_le_dec z 0); intros z0.",
                        "VernacExtend",
                        "65855deb3e1436a60dfa8cd320487a7bb4cec3be"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "case (Z_le_lt_eq_dec z 0 z0); intros z1.",
                        "VernacExtend",
                        "8b1d6a4cfd08dda82182ee836d31091e40c84482"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (group_inverse G r) (nat_of_P (pos_abs (Zlemma1 z1)))); auto with *.",
                        "VernacExtend",
                        "48063423864b41eadd0c0b34abce3b8f1261b99b"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_HOM_GROUP (G:=ZZ:GROUP) (G':=G) (ff:=Z_to_group_fun)).",
                        "VernacExtend",
                        "3dcb36c2ec38e38c2243013b89bc9e5b5d1a9efc"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat r x); auto with *.",
                        "VernacExtend",
                        "6f5b022f3036d1e8461fb2a7b40b363f60729076"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat r y); auto with *.",
                        "VernacExtend",
                        "b6d891342b72404436021854d9b8f976a071c363"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat r (sgroup_law ZZ x y)); auto with *.",
                        "VernacExtend",
                        "7011a350bd9fc4bac739112c56357017f998651d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (Z_to_group_nat r x) (Z_to_group_nat r y)); auto with *.",
                        "VernacExtend",
                        "d16b2b1598192d3182f4519fb726c8cc3d074994"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat r (monoid_unit ZZ)); auto with *.",
                        "VernacExtend",
                        "ee02d76079663bb89983ab48c56ad85ddea59da3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "sgroup_powers_prop",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "intros G g x H'; try assumption.",
                        "VernacExtend",
                        "7276eba52ee62a358e7713538b13492f1c6896a9"
                    ]
                },
                {
                    "command": [
                        "elim H'.",
                        "VernacExtend",
                        "1cae423a267f3a1a6990051e754342f63add38fd"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; try assumption.",
                        "VernacExtend",
                        "a1fca524ae8ac7aceeac28ce713c7547de55485b"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
                        "VernacExtend",
                        "a04b97037e45e8b2f38a354c439106b450b90add"
                    ]
                },
                {
                    "command": [
                        "exists x0; try assumption.",
                        "VernacExtend",
                        "7a1f2e9655d25118997464c8f16515cc70a2e7f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgroup_powers_rev",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "intros G g n; try assumption.",
                        "VernacExtend",
                        "45011c3220ca1626208d6f42f753dbd0c06919d2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists n; split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "099675268a1b62b0318a7a1e138eab9072f0ae7b"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "unfold group_power in |- *; auto with *.",
                        "VernacExtend",
                        "4c94d5cf4cea922d581ad0b0e7a1c49e6704966a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}