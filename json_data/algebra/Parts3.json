{
    "filename": "Parts3.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Parts2.",
            "VernacRequire",
            "a83f2a70b5bd814cb1789cfdf7e823ee92ad387a"
        ],
        [
            "Section Restrictions1.",
            "VernacBeginSection",
            "dd2ed5008f19e46ab337579225c0cf9d90d8fdcb"
        ],
        [
            "Variable E F : Setoid.",
            "VernacAssumption",
            "755ec368a0a5e097d35a6ccfa11e3d9467037cc1"
        ],
        [
            "Variable f : MAP E F.",
            "VernacAssumption",
            "0ec81e8c49c9e3f9b380a4396344354dec499939"
        ],
        [
            "Definition restrict : forall A : part_set E, MAP A F.",
            "VernacDefinition",
            "65c7fd59781453b621b15e1e56effd1b01e3b99a"
        ],
        [
            "intros A; try assumption.",
            "VernacExtend",
            "bee08795c86464c42c0359ec8226a130c5f630d4"
        ],
        [
            "apply (Build_Map (Ap:=fun x : A => f (A x))).",
            "VernacExtend",
            "a533a40c32fc5f8fe1864a842ebcfe13e84250f8"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y; try assumption.",
            "VernacExtend",
            "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
        ],
        [
            "elim y.",
            "VernacExtend",
            "2e1340b20b979eff9f29f6f7a068bc217b31672c"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma restrict_prop : forall (A : part_set E) (x : E) (p : in_part x A), Equal (restrict A (Build_subtype (subtype_elt:=x) p)) (f x).",
            "VernacStartTheoremProof",
            "3bebca9f63c6664a1db8640f02e44332ff8ace5f"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_prop_in_part : forall (A : part_set E) (x : A), Equal (restrict A x) (f (A x)).",
            "VernacStartTheoremProof",
            "e2d57ae0529afc000d24cf8b0635a983ac4f9619"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Restrictions1.",
            "VernacEndSegment",
            "508184e88faa0f23c531ee1f4963cdfe3e6f3336"
        ],
        [
            "Hint Resolve restrict_prop: algebra.",
            "VernacHints",
            "9122a85c0b44d8238a67901d6fc06a8ab4cddd00"
        ],
        [
            "Section Inverse_image1.",
            "VernacBeginSection",
            "57f742fc0e46979f1c3da2989b79ef7d6ea6ff05"
        ],
        [
            "Variable E F : Setoid.",
            "VernacAssumption",
            "755ec368a0a5e097d35a6ccfa11e3d9467037cc1"
        ],
        [
            "Section Inverse_image1_1.",
            "VernacBeginSection",
            "ca76d9e18220e25f0a27c55e1e4459a4ac5cfb2b"
        ],
        [
            "Variable f : MAP E F.",
            "VernacAssumption",
            "0ec81e8c49c9e3f9b380a4396344354dec499939"
        ],
        [
            "Definition invimage : part_set F -> part_set E.",
            "VernacDefinition",
            "5bf6e4c74547a5cabecf72052e4d556e78d5b02c"
        ],
        [
            "intros A.",
            "VernacExtend",
            "1e674201f6164f095fcb9efa159981a648ffff11"
        ],
        [
            "apply (Build_Predicate (Pred_fun:=fun x : E => in_part (f x) A)).",
            "VernacExtend",
            "d21706ba61b7ab91cb2d3cc3c0f905198f8a7f9e"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "apply in_part_comp_l with (Ap f x); auto with algebra.",
            "VernacExtend",
            "730dfd232a7fb0140129aeed3c990482bcfbc6e2"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Inverse_image1_1.",
            "VernacEndSegment",
            "b8ea402bc453ae67af6b5645706720b5fc56a20e"
        ],
        [
            "Variable f : MAP E F.",
            "VernacAssumption",
            "0ec81e8c49c9e3f9b380a4396344354dec499939"
        ],
        [
            "Lemma invimage_in : forall (A : part_set F) (x : E), in_part x (invimage f A) -> in_part (f x) A.",
            "VernacStartTheoremProof",
            "491b12d4485dc26e016548324238650c426713bd"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_invimage : forall (A : part_set F) (x : E), in_part (f x) A -> in_part x (invimage f A).",
            "VernacStartTheoremProof",
            "a5cfdeaa211550e56fba3edb26d06b150b4d73ff"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve in_invimage: algebra.",
            "VernacHints",
            "4afb77a387697b24e4963dbc3118c3553b6054c2"
        ],
        [
            "Lemma invimage_included : forall A B : part_set F, included A B -> included (invimage f A) (invimage f B).",
            "VernacStartTheoremProof",
            "7e4064e351f01f4e0a6d138a8f1c9db63480d8a9"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve invimage_included: algebra.",
            "VernacHints",
            "4549002d93e986a13131c829ddded9a82c08666a"
        ],
        [
            "Lemma invimage_comp : forall A B : part_set F, Equal A B -> Equal (invimage f A) (invimage f B).",
            "VernacStartTheoremProof",
            "60480948ce0d5690f00cb808101b9d5f27cd6dbe"
        ],
        [
            "intros A B H'; try assumption.",
            "VernacExtend",
            "b0d24c04ee6ba3793e97e5957c9079ce89ebcf6b"
        ],
        [
            "apply included_antisym; auto with algebra.",
            "VernacExtend",
            "332d41666779aaecadae1e3e1de6838217bea7ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve invimage_comp: algebra.",
            "VernacHints",
            "509ae8c17ee3311a0394d902ca79d73e8447cafa"
        ],
        [
            "Lemma invimage_image : forall A : part_set F, included (image f (invimage f A)) A.",
            "VernacStartTheoremProof",
            "b00e7c685acdad783958bb7660c42b3521ec2278"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros A x H'; try assumption.",
            "VernacExtend",
            "7f7984dcbd939f98b5a9ac07676455be7a194352"
        ],
        [
            "elim H'; intros x0 E0; elim E0; intros H'0 H'1; try exact H'1; clear E0 H'.",
            "VernacExtend",
            "8d847bda4f7692b00e69233ffd9831a6b90bd1c4"
        ],
        [
            "apply in_part_comp_l with (Ap f x0); auto with algebra.",
            "VernacExtend",
            "f180cc8ba50266789b848009f9b19f9793c975cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_invimage : forall A : part_set E, included A (invimage f (image f A)).",
            "VernacStartTheoremProof",
            "6a3c7dd670c10e147e140094d44ced11271282ff"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros A x H'; exists x; split; [ try assumption | idtac ]; auto with algebra.",
            "VernacExtend",
            "fccced44b0202da87767c1e786a307b644326f1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve invimage_image image_invimage: algebra.",
            "VernacHints",
            "1883599a94b9e820223e200bd3a6414b95119d6b"
        ],
        [
            "Lemma invimage_image_invimage : forall A : part_set F, Equal (invimage f (image f (invimage f A))) (invimage f A).",
            "VernacStartTheoremProof",
            "0e43eaeca5d150e869612dbfa0d5d9de950cb1f3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold eq_part in |- *.",
            "VernacExtend",
            "12a6afb7785dfb45aaa81aeb59c8e41865d64879"
        ],
        [
            "intros A x; split; [ idtac | intros H'; try assumption ].",
            "VernacExtend",
            "c153bb0aa24daa845399dbefb19ea50500d26d8f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "elim H'; intros x0 E0; elim E0; intros H'0 H'1; try exact H'0; clear E0 H'.",
            "VernacExtend",
            "96a07420cca4bdac7dde447d3b112df3023dae74"
        ],
        [
            "apply in_part_comp_l with (Ap f x0); auto with algebra.",
            "VernacExtend",
            "f180cc8ba50266789b848009f9b19f9793c975cd"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_invimage_image : forall A : part_set E, Equal (image f (invimage f (image f A))) (image f A).",
            "VernacStartTheoremProof",
            "7b18c21741450be32c1e91d7c31b7bdf1ad91698"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold eq_part in |- *.",
            "VernacExtend",
            "12a6afb7785dfb45aaa81aeb59c8e41865d64879"
        ],
        [
            "intros A x; split; [ try assumption | idtac ].",
            "VernacExtend",
            "95b23690635774c7674c36a9e022f43e0b2258e1"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "elim H'; intros x0 E0; elim E0; intros H'0 H'1; elim H'0; intros x1 E1; elim E1; intros H'2 H'3; try exact H'2; clear E1 H'0 E0 H'.",
            "VernacExtend",
            "694aa7469ec2d8884ec2bdb3e5dedda94d4e5304"
        ],
        [
            "exists x1; split; [ try assumption | idtac ]; auto with algebra.",
            "VernacExtend",
            "bd357225d336a61a4af0fc69d73b2eff7deae8ed"
        ],
        [
            "apply Trans with (Ap f x0); auto with algebra.",
            "VernacExtend",
            "3f1c92493193fd0683c1422fe34008ebc5823bb6"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "elim H'; intros x0 E0; elim E0; intros H'0 H'1; try exact H'0; clear E0 H'.",
            "VernacExtend",
            "96a07420cca4bdac7dde447d3b112df3023dae74"
        ],
        [
            "exists x0; split; [ exists x0; split; [ try assumption | idtac ] | idtac ]; auto with algebra.",
            "VernacExtend",
            "08684bcc69327e27e8ad532a3c9267ca511896cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Inverse_image1.",
            "VernacEndSegment",
            "00d3af3c7ba4627b61c2699ccd468be129699484"
        ],
        [
            "Hint Resolve invimage_image_invimage image_invimage_image: algebra.",
            "VernacHints",
            "d296867cd7922ce8393ab97f2f3de79f69f37eb1"
        ],
        [
            "Hint Resolve in_invimage: algebra.",
            "VernacHints",
            "4afb77a387697b24e4963dbc3118c3553b6054c2"
        ],
        [
            "Hint Resolve invimage_included: algebra.",
            "VernacHints",
            "4549002d93e986a13131c829ddded9a82c08666a"
        ],
        [
            "Hint Resolve invimage_comp: algebra.",
            "VernacHints",
            "509ae8c17ee3311a0394d902ca79d73e8447cafa"
        ]
    ],
    "proofs": [
        {
            "name": "restrict",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros A; try assumption.",
                        "VernacExtend",
                        "bee08795c86464c42c0359ec8226a130c5f630d4"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Map (Ap:=fun x : A => f (A x))).",
                        "VernacExtend",
                        "a533a40c32fc5f8fe1864a842ebcfe13e84250f8"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y; try assumption.",
                        "VernacExtend",
                        "1ff52bbc0dce5b374ba3d7f58f1771e70e9228ff"
                    ]
                },
                {
                    "command": [
                        "elim y.",
                        "VernacExtend",
                        "2e1340b20b979eff9f29f6f7a068bc217b31672c"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "restrict_prop",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_prop_in_part",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invimage",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros A.",
                        "VernacExtend",
                        "1e674201f6164f095fcb9efa159981a648ffff11"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Predicate (Pred_fun:=fun x : E => in_part (f x) A)).",
                        "VernacExtend",
                        "d21706ba61b7ab91cb2d3cc3c0f905198f8a7f9e"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (Ap f x); auto with algebra.",
                        "VernacExtend",
                        "730dfd232a7fb0140129aeed3c990482bcfbc6e2"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "invimage_in",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_invimage",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invimage_included",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invimage_comp",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros A B H'; try assumption.",
                        "VernacExtend",
                        "b0d24c04ee6ba3793e97e5957c9079ce89ebcf6b"
                    ]
                },
                {
                    "command": [
                        "apply included_antisym; auto with algebra.",
                        "VernacExtend",
                        "332d41666779aaecadae1e3e1de6838217bea7ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invimage_image",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros A x H'; try assumption.",
                        "VernacExtend",
                        "7f7984dcbd939f98b5a9ac07676455be7a194352"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x0 E0; elim E0; intros H'0 H'1; try exact H'1; clear E0 H'.",
                        "VernacExtend",
                        "8d847bda4f7692b00e69233ffd9831a6b90bd1c4"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (Ap f x0); auto with algebra.",
                        "VernacExtend",
                        "f180cc8ba50266789b848009f9b19f9793c975cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_invimage",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros A x H'; exists x; split; [ try assumption | idtac ]; auto with algebra.",
                        "VernacExtend",
                        "fccced44b0202da87767c1e786a307b644326f1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invimage_image_invimage",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold eq_part in |- *.",
                        "VernacExtend",
                        "12a6afb7785dfb45aaa81aeb59c8e41865d64879"
                    ]
                },
                {
                    "command": [
                        "intros A x; split; [ idtac | intros H'; try assumption ].",
                        "VernacExtend",
                        "c153bb0aa24daa845399dbefb19ea50500d26d8f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x0 E0; elim E0; intros H'0 H'1; try exact H'0; clear E0 H'.",
                        "VernacExtend",
                        "96a07420cca4bdac7dde447d3b112df3023dae74"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (Ap f x0); auto with algebra.",
                        "VernacExtend",
                        "f180cc8ba50266789b848009f9b19f9793c975cd"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_invimage_image",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold eq_part in |- *.",
                        "VernacExtend",
                        "12a6afb7785dfb45aaa81aeb59c8e41865d64879"
                    ]
                },
                {
                    "command": [
                        "intros A x; split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "95b23690635774c7674c36a9e022f43e0b2258e1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x0 E0; elim E0; intros H'0 H'1; elim H'0; intros x1 E1; elim E1; intros H'2 H'3; try exact H'2; clear E1 H'0 E0 H'.",
                        "VernacExtend",
                        "694aa7469ec2d8884ec2bdb3e5dedda94d4e5304"
                    ]
                },
                {
                    "command": [
                        "exists x1; split; [ try assumption | idtac ]; auto with algebra.",
                        "VernacExtend",
                        "bd357225d336a61a4af0fc69d73b2eff7deae8ed"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap f x0); auto with algebra.",
                        "VernacExtend",
                        "3f1c92493193fd0683c1422fe34008ebc5823bb6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x0 E0; elim E0; intros H'0 H'1; try exact H'0; clear E0 H'.",
                        "VernacExtend",
                        "96a07420cca4bdac7dde447d3b112df3023dae74"
                    ]
                },
                {
                    "command": [
                        "exists x0; split; [ exists x0; split; [ try assumption | idtac ] | idtac ]; auto with algebra.",
                        "VernacExtend",
                        "08684bcc69327e27e8ad532a3c9267ca511896cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}