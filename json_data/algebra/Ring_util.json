{
    "filename": "Ring_util.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Group_util.",
            "VernacRequire",
            "f24aad8fbb275f0ceaac7b195333eb7b08e1abaf"
        ],
        [
            "Require Export Monoid_util.",
            "VernacRequire",
            "60abc3f2b1c5cee32a0073f23c845d231cca02b5"
        ],
        [
            "Require Export Ring_cat.",
            "VernacRequire",
            "976634a9c67b3f19624118610f37983f9885dce2"
        ],
        [
            "Section Ring.",
            "VernacBeginSection",
            "4d770a0e7a33287fd734255f173f9e9a26afb6de"
        ],
        [
            "Variable E : Setoid.",
            "VernacAssumption",
            "cafb1870f48a7785473ed62f8eb64582fbbe308d"
        ],
        [
            "Variable ringplus : E -> E -> E.",
            "VernacAssumption",
            "a7d70946fdf769153c4c946887f2a2017ba776ee"
        ],
        [
            "Variable ringmult : E -> E -> E.",
            "VernacAssumption",
            "b2be61d8f68ba5ca6161bef7668734c45ace9d40"
        ],
        [
            "Variable zero : E.",
            "VernacAssumption",
            "05a40c71301ea9e00daa485b3b7a90e94dea1a46"
        ],
        [
            "Variable un : E.",
            "VernacAssumption",
            "efcdf1aba8b626c5ac694d72666a1fbaf6610922"
        ],
        [
            "Variable ringopp : E -> E.",
            "VernacAssumption",
            "4fa202bf07334f324d7a24fa3571727f6205fb26"
        ],
        [
            "Hypothesis ringpluscomp : forall x x' y y' : E, Equal x x' -> Equal y y' -> Equal (ringplus x y) (ringplus x' y').",
            "VernacAssumption",
            "dc91f7a7e5986733744321d01b2da6abd96ccf15"
        ],
        [
            "Hypothesis ringplusassoc : forall x y z : E, Equal (ringplus (ringplus x y) z) (ringplus x (ringplus y z)).",
            "VernacAssumption",
            "45fd8798923289c3e50cd62b644cdf14d35fc8e1"
        ],
        [
            "Hypothesis zerounitringplusr : forall x : E, Equal (ringplus x zero) x.",
            "VernacAssumption",
            "4ba01200865e4111814e16e7d748224ec508b886"
        ],
        [
            "Hypothesis oppcomp : forall x y : E, Equal x y -> Equal (ringopp x) (ringopp y).",
            "VernacAssumption",
            "d0494d15d1ff5adc1709e25f0ec5ede26c201dbc"
        ],
        [
            "Hypothesis ringoppr : forall x : E, Equal (ringplus x (ringopp x)) zero.",
            "VernacAssumption",
            "b8708896ae047ba4c53a9ee23c0e75f36dbef170"
        ],
        [
            "Hypothesis ringpluscom : forall x y : E, Equal (ringplus x y) (ringplus y x).",
            "VernacAssumption",
            "c6cfede15c722eb20d3e48ba2faf904b24fca4ab"
        ],
        [
            "Hypothesis ringmultcomp : forall x x' y y' : E, Equal x x' -> Equal y y' -> Equal (ringmult x y) (ringmult x' y').",
            "VernacAssumption",
            "7857a4b93bfb691616e9fd065b49ff000d72dc06"
        ],
        [
            "Hypothesis ringmultassoc : forall x y z : E, Equal (ringmult (ringmult x y) z) (ringmult x (ringmult y z)).",
            "VernacAssumption",
            "993849f02806de7bc66de7e70a054b34142babf8"
        ],
        [
            "Hypothesis ununitringmultr : forall x : E, Equal (ringmult x un) x.",
            "VernacAssumption",
            "ece9b72f25cee1588d465c838a7a6be7870b284e"
        ],
        [
            "Hypothesis ununitlringmult : forall x : E, Equal (ringmult un x) x.",
            "VernacAssumption",
            "c610bbcc3bbedd0b5003e5a613f1247156f96d23"
        ],
        [
            "Hypothesis ringdistl : forall x y z : E, Equal (ringmult x (ringplus y z)) (ringplus (ringmult x y) (ringmult x z)).",
            "VernacAssumption",
            "d0f0ef7722c6d664d8c1d7802c6b32d8f7c46b48"
        ],
        [
            "Hypothesis ringdistr : forall x y z : E, Equal (ringmult (ringplus x y) z) (ringplus (ringmult x z) (ringmult y z)).",
            "VernacAssumption",
            "4e0592a68c419998e912c65a177ad73ea0403ad4"
        ],
        [
            "Definition G := BUILD_ABELIAN_GROUP ringpluscomp ringplusassoc zerounitringplusr oppcomp ringoppr ringpluscom.",
            "VernacDefinition",
            "98ab64f335bff60565625b22d7cf4542b9f17b81"
        ],
        [
            "Definition M := BUILD_MONOID ringmultcomp ringmultassoc ununitringmultr ununitlringmult.",
            "VernacDefinition",
            "12d322ca967ff02ad31d658fb06526d33dc6f420"
        ],
        [
            "Definition BUILD_RING : RING.",
            "VernacDefinition",
            "961b04dd1f633ee973bb220f9fa0d954a5ca13cb"
        ],
        [
            "apply (Build_ring (ring_group:=G)).",
            "VernacExtend",
            "e64ce0b56e1586c05a5294c23bdaa2dcf0843084"
        ],
        [
            "apply (Build_ring_on (R:=G) (ring_mult_sgroup:=M) (ring_mult_monoid:=M) M).",
            "VernacExtend",
            "cb71442bd01b087da1d6fcdd52a30b072d4973db"
        ],
        [
            "abstract (red in |- *; simpl in |- *; intros x y z; apply Trans with (ringmult (ringplus x y) z); auto with algebra).",
            "VernacExtend",
            "fd95e7d9cb421d9f1aab52a7bdcbcb5c7b4c0b3d"
        ],
        [
            "abstract (red in |- *; simpl in |- *; auto with algebra).",
            "VernacExtend",
            "4b637219bd6dfedc2747d6a96d81608a5041ab92"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Ring.",
            "VernacEndSegment",
            "7b7590f6c3a2b9e01af4b1d22710ae6db4d7afe7"
        ],
        [
            "Section Hom.",
            "VernacBeginSection",
            "a9f226bbfd2d74d779eb92c4ae4f70b35e08ec3f"
        ],
        [
            "Variable Ring1 Ring2 : ring.",
            "VernacAssumption",
            "5e93bd2ce9a882d44567672090d885a3aaef01b4"
        ],
        [
            "Variable ff : Ring1 -> Ring2.",
            "VernacAssumption",
            "dee6c73bd32ee2bf8a43c6eb7050a51cf3cc561e"
        ],
        [
            "Hypothesis ffcomp : forall x y : Ring1, Equal x y -> Equal (ff x) (ff y).",
            "VernacAssumption",
            "dbaf991b3952a6d5fc03b80a1a7960ef7808ffdf"
        ],
        [
            "Hypothesis ffplus : forall x y : Ring1, Equal (ff (sgroup_law Ring1 x y)) (sgroup_law Ring2 (ff x) (ff y)).",
            "VernacAssumption",
            "24881f12b47ddad98ff0b9e83dfec10d422eff6b"
        ],
        [
            "Hypothesis ffzero : Equal (ff (monoid_unit Ring1)) (monoid_unit Ring2).",
            "VernacAssumption",
            "dc70c65584cd1e52c538f2563fa8a13e0ebd3433"
        ],
        [
            "Hypothesis ffmult : forall x y : Ring1, Equal (ff (ring_mult x y)) (ring_mult (ff x) (ff y)).",
            "VernacAssumption",
            "77ac8b7b90cc5ee81595048973e164ae466e7715"
        ],
        [
            "Hypothesis ffone : Equal (ff (ring_unit Ring1)) (ring_unit Ring2).",
            "VernacAssumption",
            "1488738173293b06d982ba3502a78515aaacd4ec"
        ],
        [
            "Definition BUILD_HOM_RING : Hom (Ring1:RING) (Ring2:RING).",
            "VernacDefinition",
            "e42f56280725042ee34fb4e69c3ec7423be8cffa"
        ],
        [
            "apply (Build_ring_hom (E:=Ring1) (F:=Ring2) (ring_plus_hom:=BUILD_HOM_GROUP ffcomp ffplus ffzero)); abstract (red in |- *; simpl in |- *; auto with algebra).",
            "VernacExtend",
            "a4a39f9cb47f94fd314f902927a7ddfd38c56436"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Hom.",
            "VernacEndSegment",
            "416d5654c7f3e72b253a9e7625b8dfdbf6abb7e5"
        ]
    ],
    "proofs": [
        {
            "name": "BUILD_RING",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "apply (Build_ring (ring_group:=G)).",
                        "VernacExtend",
                        "e64ce0b56e1586c05a5294c23bdaa2dcf0843084"
                    ]
                },
                {
                    "command": [
                        "apply (Build_ring_on (R:=G) (ring_mult_sgroup:=M) (ring_mult_monoid:=M) M).",
                        "VernacExtend",
                        "cb71442bd01b087da1d6fcdd52a30b072d4973db"
                    ]
                },
                {
                    "command": [
                        "abstract (red in |- *; simpl in |- *; intros x y z; apply Trans with (ringmult (ringplus x y) z); auto with algebra).",
                        "VernacExtend",
                        "fd95e7d9cb421d9f1aab52a7bdcbcb5c7b4c0b3d"
                    ]
                },
                {
                    "command": [
                        "abstract (red in |- *; simpl in |- *; auto with algebra).",
                        "VernacExtend",
                        "4b637219bd6dfedc2747d6a96d81608a5041ab92"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "BUILD_HOM_RING",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "apply (Build_ring_hom (E:=Ring1) (F:=Ring2) (ring_plus_hom:=BUILD_HOM_GROUP ffcomp ffplus ffzero)); abstract (red in |- *; simpl in |- *; auto with algebra).",
                        "VernacExtend",
                        "a4a39f9cb47f94fd314f902927a7ddfd38c56436"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}