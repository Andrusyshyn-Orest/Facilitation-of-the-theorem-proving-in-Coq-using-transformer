{
    "filename": "Z_group_facts.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Automatic Coercions Import.",
            "VernacSetOption",
            "12f2b52fb77cee7f2419b939e5a1046afa341e27"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Z_group.",
            "VernacRequire",
            "1491f316e118b132ba355f2e61a5937385dcb51f"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Lemma Z_to_group_nat_eq_pos : forall (n : Z) (g : G), Equal (Z_to_group_nat_fun g n) (Z_to_group_fun g n).",
            "VernacStartTheoremProof",
            "a92db5abfc68d403c5ae48dc9b73519442552c65"
        ],
        [
            "intros n g; try assumption.",
            "VernacExtend",
            "b2b9038e5162f295bf51fbed4d5aaee6a2f2e72c"
        ],
        [
            "apply Trans with (Ap (sgroup_map (monoid_sgroup_hom (Z_to_group_nat g))) n); auto with algebra.",
            "VernacExtend",
            "fe3c8dbbaeec4fc6fe2a7158d7f04369af39a66f"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply Z_to_group_fun_eq.",
            "VernacExtend",
            "1230f0e2d337f2f7237165e284c6c6f8c60e01b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_to_group_nat_eq_pos: algebra.",
            "VernacHints",
            "f19984fe177ed391421ab47ed6c9092d43aa3c70"
        ],
        [
            "Lemma Zopp1 : forall n : Z, (n < 0)%Z -> (- n > 0)%Z.",
            "VernacStartTheoremProof",
            "8af124ca95bf654ffba8762c440ebf6203289fb3"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "intros p H'; try assumption.",
            "VernacExtend",
            "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
        ],
        [
            "replace 0%Z with (- (0))%Z.",
            "VernacExtend",
            "99ee569831451a4bf396d59150800cd29185d413"
        ],
        [
            "apply Zlt_gt; auto with algebra.",
            "VernacExtend",
            "37f4582fe8b36c486dfbfb341158a4a28f06d650"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros p H'; try assumption.",
            "VernacExtend",
            "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
        ],
        [
            "replace 0%Z with (- (0))%Z.",
            "VernacExtend",
            "99ee569831451a4bf396d59150800cd29185d413"
        ],
        [
            "apply Zlt_gt; auto with algebra.",
            "VernacExtend",
            "37f4582fe8b36c486dfbfb341158a4a28f06d650"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zopp1: algebra.",
            "VernacHints",
            "d1aa7b212b402d7a634728aac47625c6406a88db"
        ],
        [
            "Lemma Zopp2 : forall n : Z, (n > 0)%Z -> (- n < 0)%Z.",
            "VernacStartTheoremProof",
            "714744768aa5efe5cb366a28a10e0de3e70b2607"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros H'; try assumption.",
            "VernacExtend",
            "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "intros p H'; try assumption.",
            "VernacExtend",
            "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
        ],
        [
            "replace 0%Z with (- (0))%Z.",
            "VernacExtend",
            "99ee569831451a4bf396d59150800cd29185d413"
        ],
        [
            "apply Zgt_lt; auto with algebra.",
            "VernacExtend",
            "e86d7cf0e521768d521b36c7b9de2af3e82c67c7"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros p H'; try assumption.",
            "VernacExtend",
            "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
        ],
        [
            "replace 0%Z with (- (0))%Z.",
            "VernacExtend",
            "99ee569831451a4bf396d59150800cd29185d413"
        ],
        [
            "apply Zgt_lt; auto with algebra.",
            "VernacExtend",
            "e86d7cf0e521768d521b36c7b9de2af3e82c67c7"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zopp2: algebra.",
            "VernacHints",
            "28939f5fc8b3b9e7bf7a72f14716109ade03b983"
        ],
        [
            "Lemma pos_abs_comp : forall (x : Z) (p p' : (x > 0)%Z), pos_abs p = pos_abs p'.",
            "VernacStartTheoremProof",
            "897fa5287d8369477073b449797dcb7965af85cb"
        ],
        [
            "intros x; try assumption.",
            "VernacExtend",
            "c1d134cd0380c89f2221310d121a4057e0c22b21"
        ],
        [
            "elim x.",
            "VernacExtend",
            "4dae947360dc7d88bee6f5459fc6c026a56c9298"
        ],
        [
            "intros p p'; try assumption.",
            "VernacExtend",
            "b2da3cd601e79c29a2cd644c61f0ed82e7797ecd"
        ],
        [
            "red in p'.",
            "VernacExtend",
            "b8382fb50b72b57eb71f6c484273fa975006bdd1"
        ],
        [
            "inversion p.",
            "VernacExtend",
            "b2560bc224d7b306f198748a76f0b03f3e36cdcc"
        ],
        [
            "intros p p0 p'; simpl in |- *.",
            "VernacExtend",
            "ab0a7b7163f38a0317c400be04a4ea7316f2a362"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros p p0 p'; try assumption.",
            "VernacExtend",
            "964a0b397a491221c91bf2c58d7b074e9b6921e7"
        ],
        [
            "red in p'.",
            "VernacExtend",
            "b8382fb50b72b57eb71f6c484273fa975006bdd1"
        ],
        [
            "simpl in p'.",
            "VernacExtend",
            "8f13a1e28f081884009ab1aaef45275e8a56f221"
        ],
        [
            "inversion p'.",
            "VernacExtend",
            "5068f2f8ae52b1e6feddd9b43a3f6ee09168f8fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zl2 Zl1 Zl3 nat_to_group_inverse: algebra.",
            "VernacHints",
            "a872a21d7bb7847cc86bb10e08463cb90c41cf2c"
        ],
        [
            "Lemma nat_to_group_comp : forall (r r' : G) (n : nat), Equal r r' -> Equal (nat_to_group r n) (nat_to_group r' n).",
            "VernacStartTheoremProof",
            "32d01c7d518c646b9e1a84f8f4961fa3a6dc3dee"
        ],
        [
            "simple induction n; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "2ef459a518c5df9fb5eb70dd915801c1347121cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_comp: algebra.",
            "VernacHints",
            "4ca96c549daa89451b4b3b77f27c7a402604fca9"
        ],
        [
            "Lemma Z_to_group_nat_fun_comp : forall (r r' : G) (n : Z), Equal r r' -> Equal (Z_to_group_nat_fun r n) (Z_to_group_nat_fun r' n).",
            "VernacStartTheoremProof",
            "e25d8f66ec9cf5d7336674008f7df819745511ed"
        ],
        [
            "intros r r' n H'; try assumption.",
            "VernacExtend",
            "215d5178082932ae926bbae9567539423998eeee"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "apply Trans with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "77e312b20a8a70ec438ae0c952d68ee732b21d9b"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "apply Trans with (nat_to_group r (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
            "VernacExtend",
            "7164ff2d759bc708175b9d2dfa325ea3831a138d"
        ],
        [
            "apply Trans with (nat_to_group r' (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
            "VernacExtend",
            "e1065e0dfa5f015dee04cd4dcc902cd435b5b4e3"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "apply Trans with (group_inverse G (nat_to_group r (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
            "VernacExtend",
            "52e9b9ec662f6dede96957c8cb46ebc2c0c3b5cf"
        ],
        [
            "apply Trans with (group_inverse G (nat_to_group r' (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
            "VernacExtend",
            "1dc011b5cd86f20fa50e36943a20fe7df777c6fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_to_group_nat_fun_comp: algebra.",
            "VernacHints",
            "c2002836235df2efea1789423e5ab53987ea3ec2"
        ],
        [
            "Lemma Z_to_group_nat_neg : forall (p : positive) (r : G), Equal (Z_to_group_nat_fun r (Zneg p)) (Z_to_group_nat_fun (group_inverse G r) (Zpos p)).",
            "VernacStartTheoremProof",
            "2fda63bbfc48b087e603f8a1f6f1cfe7bb6ecb73"
        ],
        [
            "intros p r; try assumption.",
            "VernacExtend",
            "e79ae6ea2977c79b40f0dbac263491e5bb11b32f"
        ],
        [
            "apply Trans with (group_inverse G (nat_to_group r (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
            "VernacExtend",
            "52e9b9ec662f6dede96957c8cb46ebc2c0c3b5cf"
        ],
        [
            "apply Trans with (nat_to_group (group_inverse G r) (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
            "VernacExtend",
            "221624b1ef649a2a1abaffec63d79406942be502"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_to_group_nat_neg: algebra.",
            "VernacHints",
            "f17e77cac8c08901dc61f2fc55ab1450b3fbeda3"
        ],
        [
            "Lemma Z_to_group_nat_inv : forall (n : Z) (r : G), Equal (Z_to_group_nat_fun r (- n)%Z) (Z_to_group_nat_fun (group_inverse G r) n).",
            "VernacStartTheoremProof",
            "25b237a8206f2824bbfaa3691d356c35129968ab"
        ],
        [
            "simple induction n; simpl in |- *.",
            "VernacExtend",
            "b67a775f86f34dcfd676a405ed09e661896dfc35"
        ],
        [
            "intros r; try assumption.",
            "VernacExtend",
            "3d1c9630eba641479eb676ce299d12a7ae75663c"
        ],
        [
            "apply Trans with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "77e312b20a8a70ec438ae0c952d68ee732b21d9b"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros p r; try assumption.",
            "VernacExtend",
            "e79ae6ea2977c79b40f0dbac263491e5bb11b32f"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (group_inverse G (group_inverse G r)) (Zpos p)); auto with algebra.",
            "VernacExtend",
            "fc02b205cb275faf5e986c1512d3456676194f38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_to_group_nat_inv: algebra.",
            "VernacHints",
            "aa407622d796a0be6f20fc314a279082fc465640"
        ],
        [
            "Lemma nat_to_group_mult : forall (r : G) (n m : nat), Equal (nat_to_group r (n * m)) (nat_to_group (nat_to_group r n) m).",
            "VernacStartTheoremProof",
            "8deacfcb8c00b413ce410bd09116db0ad254ed0e"
        ],
        [
            "simple induction m; simpl in |- *.",
            "VernacExtend",
            "5645d4caa004b24ab7bc465eede9500b602469c7"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "0ff48808bf0cbf50945a6acf56d22bd70f4c65c4"
        ],
        [
            "intros n0 H'; try assumption.",
            "VernacExtend",
            "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "0ff48808bf0cbf50945a6acf56d22bd70f4c65c4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group r n) (nat_to_group r (n0 * n))); auto with algebra.",
            "VernacExtend",
            "6a81ade5c4e958ea1a01d6a16535910c651c94e6"
        ],
        [
            "apply Trans with (sgroup_law G (nat_to_group r (n0 * n)) (nat_to_group r n)); auto with algebra.",
            "VernacExtend",
            "cf80406425689c749d4422fe1624df9ebc5c095d"
        ],
        [
            "apply SGROUP_comp; auto with algebra.",
            "VernacExtend",
            "1228d5420c7112d12f13dd08022ffbf79385f944"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "0ff48808bf0cbf50945a6acf56d22bd70f4c65c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_mult: algebra.",
            "VernacHints",
            "af6a0b031ebc281ef86df648ed8a62ab7bf8985e"
        ],
        [
            "Lemma nat_to_group_unit : forall n : nat, Equal (nat_to_group (monoid_unit G) n) (monoid_unit G).",
            "VernacStartTheoremProof",
            "b189657eae4ab56996e72ed8a4464ee1a7ada605"
        ],
        [
            "simple induction n; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "2ef459a518c5df9fb5eb70dd915801c1347121cf"
        ],
        [
            "intros n0 H'; try assumption.",
            "VernacExtend",
            "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
        ],
        [
            "apply Trans with (sgroup_law G (monoid_unit G) (monoid_unit G)); auto with algebra.",
            "VernacExtend",
            "1c26d3546c32c78146c366e66a544370cfd5a12b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nat_to_group_unit: algebra.",
            "VernacHints",
            "62e538b09b5434f9adbf15807385e77db030da22"
        ],
        [
            "Lemma Z_to_group_nat_unit : forall n : Z, Equal (Z_to_group_nat_fun (monoid_unit G) n) (monoid_unit G).",
            "VernacStartTheoremProof",
            "3f4f76705efbb3c65a40a4af877ea31fa25a8876"
        ],
        [
            "simple induction n; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "2ef459a518c5df9fb5eb70dd915801c1347121cf"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "apply Trans with (nat_to_group (monoid_unit G) (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
            "VernacExtend",
            "3d4f539a068281cf5cb60f27c07d0b58f0173311"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "apply Trans with (group_inverse G (nat_to_group (monoid_unit G) (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
            "VernacExtend",
            "02b34addb22087a0dc0f39e6299ccb6e923a470e"
        ],
        [
            "apply Trans with (group_inverse G (monoid_unit G)); auto with algebra.",
            "VernacExtend",
            "2ffca7f1a64801e1a878901d80cd0d47a73ac518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_to_group_nat_unit: algebra.",
            "VernacHints",
            "da2e6c28a23d78278187f1a00a26627f4db5dadf"
        ],
        [
            "Lemma group_power_plus : forall (g : G) (n m : ZZ), Equal (group_power G g (sgroup_law ZZ n m)) (sgroup_law G (group_power G g n) (group_power G g m)).",
            "VernacStartTheoremProof",
            "e4da52cb0e999ffdf2767e9919956a43aa8c9f26"
        ],
        [
            "unfold group_power in |- *; auto with algebra.",
            "VernacExtend",
            "990369433dc4042195f7b5cbc9c11b35375952c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve group_power_plus: algebra.",
            "VernacHints",
            "2340ad42e274da76fad21d90bb5aef9bb20912d4"
        ],
        [
            "Lemma group_power_S : forall (g : G) (n : ZZ), Equal (group_power G g (sgroup_law ZZ n (ring_unit ZZ))) (sgroup_law G (group_power G g n) g).",
            "VernacStartTheoremProof",
            "689405731cb97330942f3cac779242dfa469f295"
        ],
        [
            "unfold group_power in |- *.",
            "VernacExtend",
            "cefc0c964c378ba2a44e2157ada907c9d390efe4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros g n; try assumption.",
            "VernacExtend",
            "d8cf6a390c943fa185e2431be4241febf7bedf5e"
        ],
        [
            "apply Trans with (sgroup_law G (Z_to_group_fun g n) (Z_to_group_fun g (ring_unit Zr))); auto with algebra.",
            "VernacExtend",
            "d964ef46f08228f6ebeeb7fb99250aad9496251f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve group_power_S: algebra.",
            "VernacHints",
            "2add0bfdf876665b3c531ba60bf4f62f1a1b03f2"
        ],
        [
            "Lemma group_power_0 : forall g : G, Equal (group_power G g (monoid_unit ZZ)) (monoid_unit G).",
            "VernacStartTheoremProof",
            "76f748287aed2cf32a0686bd70fba461d7982ac5"
        ],
        [
            "unfold group_power in |- *.",
            "VernacExtend",
            "cefc0c964c378ba2a44e2157ada907c9d390efe4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros g; try assumption.",
            "VernacExtend",
            "f26ccc964af6548938f100e9b7696979c49bb3d8"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun g 0%Z); auto with algebra.",
            "VernacExtend",
            "aedcd3889e71ba7e802af1253de1f719cbb0357e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve group_power_0: algebra.",
            "VernacHints",
            "dc83145fc91cac6cbe67aa57511f1e3bf922eeff"
        ],
        [
            "Lemma group_power_1 : forall g : G, Equal (group_power G g (ring_unit ZZ)) g.",
            "VernacStartTheoremProof",
            "14ed0723c9cf545bcd1d8684581b29621afbf379"
        ],
        [
            "intros g; try assumption.",
            "VernacExtend",
            "f26ccc964af6548938f100e9b7696979c49bb3d8"
        ],
        [
            "apply Trans with (group_power G g (sgroup_law ZZ (monoid_unit ZZ) (ring_unit ZZ))); auto with algebra.",
            "VernacExtend",
            "93dc4d7338db04c8f5f5e0527e4b1328cea6778c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve group_power_1: algebra.",
            "VernacHints",
            "2944d6754328d40eb3603db2181869a7cc2d6503"
        ],
        [
            "Lemma group_power_inv : forall (g : G) (n : ZZ), Equal (group_power G g (group_inverse ZZ n)) (group_power G (group_inverse G g) n).",
            "VernacStartTheoremProof",
            "de1f88e1bde7bf48f8f582622f465685a408f5d0"
        ],
        [
            "unfold group_power in |- *.",
            "VernacExtend",
            "cefc0c964c378ba2a44e2157ada907c9d390efe4"
        ],
        [
            "intros g n; try assumption.",
            "VernacExtend",
            "d8cf6a390c943fa185e2431be4241febf7bedf5e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun g (group_inverse ZZ n)); auto with algebra.",
            "VernacExtend",
            "ad5ed6c54fb7da91d4eac4017dad74ffcf3ca6ea"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (group_inverse G g) n); auto with algebra.",
            "VernacExtend",
            "9070a5f71e75b745ceafcb00e2d82568cbd21f4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve group_power_inv: algebra.",
            "VernacHints",
            "be38ee3c60b73a2b0a784928a25153b515290cde"
        ],
        [
            "Lemma Z_group_nat_fun_mult_pos : forall (p q : positive) (g : G), Equal (Z_to_group_nat_fun g (Zpos p * Zpos q)%Z) (Z_to_group_nat_fun (Z_to_group_nat_fun g (Zpos p)) (Zpos q)).",
            "VernacStartTheoremProof",
            "fce3e53fb3710128f66b0a1de29d092e9f605594"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros p q g; try assumption.",
            "VernacExtend",
            "6f162318d88633fb2b6aa7b2f5c1ac3858616478"
        ],
        [
            "apply Trans with (nat_to_group g (nat_of_P (pos_abs (ax3 ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) p (fun y : positive => y) q))))); auto with algebra.",
            "VernacExtend",
            "ed735c18b5a59145b0585e910e3c256d3bd0d629"
        ],
        [
            "apply Trans with (nat_to_group (Z_to_group_nat_fun g (Zpos p)) (nat_of_P (pos_abs (ax3 q)))); auto with algebra.",
            "VernacExtend",
            "2f2bd11e80092f77398e9c7c5c8ba16a1e61fe9e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y).",
            "VernacExtend",
            "cbdd618d104d6653da48960fbdd12b6a811412fc"
        ],
        [
            "apply Trans with (nat_to_group (nat_to_group g (nat_of_P p)) (nat_of_P q)); auto with algebra.",
            "VernacExtend",
            "71624612267bcc66d2f6e18ba80594507c2d16cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_group_nat_fun_mult_pos: algebra.",
            "VernacHints",
            "12ea8456eaabd0aee22c32d1af4ac217699f2279"
        ],
        [
            "Lemma group_power_mult : forall (g : G) (n m : ZZ), Equal (group_power G g (ring_mult n m)) (group_power G (group_power G g n) m).",
            "VernacStartTheoremProof",
            "fe037e3f9fb9a7d51309a02984e40a3f4eb8202e"
        ],
        [
            "unfold group_power in |- *.",
            "VernacExtend",
            "cefc0c964c378ba2a44e2157ada907c9d390efe4"
        ],
        [
            "intros g n m; try assumption.",
            "VernacExtend",
            "722755b3b525761069e9ce4c3ab502cc77e625bf"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun g (ring_mult n m)); auto with algebra.",
            "VernacExtend",
            "b1047604feb9595783005f38d0873f2fb13a49b9"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun g n) m); auto with algebra.",
            "VernacExtend",
            "654bcdd4b61a421934abc03606f3179eb8e0f307"
        ],
        [
            "unfold ring_mult in |- *; simpl in |- *.",
            "VernacExtend",
            "1a685d1ddd36c06c2e31c5f3e9faa7987191edde"
        ],
        [
            "elim m.",
            "VernacExtend",
            "e92658ad32662abbab57f38e77a230aa4048c69b"
        ],
        [
            "rewrite Zmult_0_r.",
            "VernacExtend",
            "575d294d90b6d6b748c0a769ff5569338a51878b"
        ],
        [
            "apply Trans with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "77e312b20a8a70ec438ae0c952d68ee732b21d9b"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "rewrite Zmult_0_l.",
            "VernacExtend",
            "6f37406e8d2c19afcfe8d916b30b3b79d01e2ea6"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (monoid_unit G) (Zpos p)); auto with algebra.",
            "VernacExtend",
            "5218af7a81ee60b0250308831a64d87b8b06768f"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros p p0; try assumption.",
            "VernacExtend",
            "9ac5d4da282ef526817ab7d1d924d199078b2485"
        ],
        [
            "replace (Zneg p * Zpos p0)%Z with (- (Zpos p * Zpos p0))%Z.",
            "VernacExtend",
            "97eb616b91329e4203255dd948eea8763b027df5"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (group_inverse G g) (Zpos p * Zpos p0)%Z); auto with algebra.",
            "VernacExtend",
            "fa535af23cb99bb2a99e0feb72d275eea8b6adce"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun (group_inverse G g) (Zpos p)) (Zpos p0)); auto with algebra.",
            "VernacExtend",
            "17b233544828f92c2fcc250e15c119b193d07092"
        ],
        [
            "rewrite <- Zopp_mult_distr_l_reverse.",
            "VernacExtend",
            "f6626063b501ea5e1e54a469e5312781da74a6cd"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "intros p; try assumption.",
            "VernacExtend",
            "1c28591b23acebc625944df4fd4b6709dac3e2b7"
        ],
        [
            "rewrite Zmult_0_l.",
            "VernacExtend",
            "6f37406e8d2c19afcfe8d916b30b3b79d01e2ea6"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (monoid_unit G) (Zneg p)); auto with algebra.",
            "VernacExtend",
            "3d947292e2c3f5b53f881091cca7ca70fa0230d3"
        ],
        [
            "intros p p0; try assumption.",
            "VernacExtend",
            "9ac5d4da282ef526817ab7d1d924d199078b2485"
        ],
        [
            "replace (Zpos p * Zneg p0)%Z with (- (Zpos p * Zpos p0))%Z.",
            "VernacExtend",
            "70632581435b2220f9dce64e5c2f627f7577c4b7"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (group_inverse G g) (Zpos p * Zpos p0)%Z); auto with algebra.",
            "VernacExtend",
            "fa535af23cb99bb2a99e0feb72d275eea8b6adce"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (group_inverse G (Z_to_group_nat_fun g (Zpos p))) (Zpos p0)); auto with algebra.",
            "VernacExtend",
            "af590551202de44e06f8145253a3ee0d97fe119f"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun (group_inverse G g) (Zpos p)) (Zpos p0)); auto with algebra.",
            "VernacExtend",
            "17b233544828f92c2fcc250e15c119b193d07092"
        ],
        [
            "apply Z_to_group_nat_fun_comp; auto with algebra.",
            "VernacExtend",
            "d639832df5ea4b17379ba01a3fdec3eda46d2a2c"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun g (Zneg p)); auto with algebra.",
            "VernacExtend",
            "c5d0bd92a21f4d42a79903b0ab3f0a9dd8f6fe55"
        ],
        [
            "replace (Zpos p) with (- Zneg p)%Z.",
            "VernacExtend",
            "71090f7eb4dea10f65c0d0fa9556bc8ed16f6aa0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros p p0; try assumption.",
            "VernacExtend",
            "9ac5d4da282ef526817ab7d1d924d199078b2485"
        ],
        [
            "replace (Zneg p * Zneg p0)%Z with (- (Zpos p * Zneg p0))%Z.",
            "VernacExtend",
            "0bcdffef3d3e244c393ee7c2d47e15c9e4364c0c"
        ],
        [
            "replace (Zpos p * Zneg p0)%Z with (- (Zpos p * Zpos p0))%Z.",
            "VernacExtend",
            "70632581435b2220f9dce64e5c2f627f7577c4b7"
        ],
        [
            "replace (- - (Zpos p * Zpos p0))%Z with (Zpos p * Zpos p0)%Z.",
            "VernacExtend",
            "7adf5b4f1797aa06eb0e91ebea11eeda30f4c717"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun g (Zpos p)) (Zpos p0)); auto with algebra.",
            "VernacExtend",
            "abe85896336cff23a06efd7e6b2323009cfc4c05"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (group_inverse G (Z_to_group_nat_fun g (Zneg p))) (Zpos p0)); auto with algebra.",
            "VernacExtend",
            "247d5c9481d750f000e83860df70b87b791762a2"
        ],
        [
            "apply Z_to_group_nat_fun_comp; auto with algebra.",
            "VernacExtend",
            "d639832df5ea4b17379ba01a3fdec3eda46d2a2c"
        ],
        [
            "apply Trans with (group_power G g (Zpos p)); auto with algebra.",
            "VernacExtend",
            "4a8a8290410c5c91d58210568f5da89cdd0f68ff"
        ],
        [
            "apply Trans with (group_inverse G (group_power G g (Zneg p))); auto with algebra.",
            "VernacExtend",
            "27e3de93e51e0514e4484d07d0d0cb844c253b05"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply GROUP_law_inverse.",
            "VernacExtend",
            "134c152cd545e90f7d717bfa7414488feca66322"
        ],
        [
            "apply Trans with (group_power G g (Zneg p + Zpos p)%Z); auto with algebra.",
            "VernacExtend",
            "7e0a8689cca3efcabcea8cd3dc5296038c09355b"
        ],
        [
            "replace (Zneg p) with (- Zpos p)%Z.",
            "VernacExtend",
            "b0ce4ed3c6a34043cb230a2162ed00f7f27888d0"
        ],
        [
            "rewrite Zplus_opp_l.",
            "VernacExtend",
            "31064cf3081e8f8d5594b4add2967b770df11eae"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "rewrite Zopp_involutive; auto with algebra.",
            "VernacExtend",
            "ad4a37a51cafedd0bc9c4b407902192fd8e48f44"
        ],
        [
            "replace (Zneg p0) with (- Zpos p0)%Z.",
            "VernacExtend",
            "5bb1ac5d7dc3620f9380feca2eb3ae2af51753a8"
        ],
        [
            "replace (Zpos p * - Zpos p0)%Z with (- Zpos p0 * Zpos p)%Z.",
            "VernacExtend",
            "adc606085e06dc9f8fe5ffffa54dc9ec5171cdd5"
        ],
        [
            "rewrite Zopp_mult_distr_l_reverse.",
            "VernacExtend",
            "1f0b9be4fa18bab508e40ac78d2944a3a3bf0e3c"
        ],
        [
            "rewrite Zmult_comm.",
            "VernacExtend",
            "2c1282bf165ec7c97fac66d6d60ae4f6ba65e66e"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "rewrite Zmult_comm.",
            "VernacExtend",
            "2c1282bf165ec7c97fac66d6d60ae4f6ba65e66e"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "replace (Zneg p) with (- Zpos p)%Z.",
            "VernacExtend",
            "b0ce4ed3c6a34043cb230a2162ed00f7f27888d0"
        ],
        [
            "rewrite Zopp_mult_distr_l_reverse.",
            "VernacExtend",
            "1f0b9be4fa18bab508e40ac78d2944a3a3bf0e3c"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (Z_to_group_nat_fun (Z_to_group_fun g n) m); auto with algebra.",
            "VernacExtend",
            "7a9beb95b19f4e09cff0683bd9801a4bf37e761d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve group_power_mult: algebra.",
            "VernacHints",
            "4b2536b4b1d7083f58dbf804e9a94f2b123b50d0"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "Hint Resolve group_power_plus group_power_S group_power_0 group_power_1 group_power_inv group_power_mult: algebra.",
            "VernacHints",
            "34e9c6ed21fe7d78ddb04504906176b8203bc525"
        ]
    ],
    "proofs": [
        {
            "name": "Z_to_group_nat_eq_pos",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros n g; try assumption.",
                        "VernacExtend",
                        "b2b9038e5162f295bf51fbed4d5aaee6a2f2e72c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Ap (sgroup_map (monoid_sgroup_hom (Z_to_group_nat g))) n); auto with algebra.",
                        "VernacExtend",
                        "fe3c8dbbaeec4fc6fe2a7158d7f04369af39a66f"
                    ]
                },
                {
                    "command": [
                        "apply Sym.",
                        "VernacExtend",
                        "b91ee1c3035127bafc790ce54633c93301d2dbb0"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_group_fun_eq.",
                        "VernacExtend",
                        "1230f0e2d337f2f7237165e284c6c6f8c60e01b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zopp1",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "intros p H'; try assumption.",
                        "VernacExtend",
                        "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
                    ]
                },
                {
                    "command": [
                        "replace 0%Z with (- (0))%Z.",
                        "VernacExtend",
                        "99ee569831451a4bf396d59150800cd29185d413"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt; auto with algebra.",
                        "VernacExtend",
                        "37f4582fe8b36c486dfbfb341158a4a28f06d650"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros p H'; try assumption.",
                        "VernacExtend",
                        "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
                    ]
                },
                {
                    "command": [
                        "replace 0%Z with (- (0))%Z.",
                        "VernacExtend",
                        "99ee569831451a4bf396d59150800cd29185d413"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt; auto with algebra.",
                        "VernacExtend",
                        "37f4582fe8b36c486dfbfb341158a4a28f06d650"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zopp2",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros H'; try assumption.",
                        "VernacExtend",
                        "f89dc0f02e76585c56cd90566484d3bd23bfeec6"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "intros p H'; try assumption.",
                        "VernacExtend",
                        "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
                    ]
                },
                {
                    "command": [
                        "replace 0%Z with (- (0))%Z.",
                        "VernacExtend",
                        "99ee569831451a4bf396d59150800cd29185d413"
                    ]
                },
                {
                    "command": [
                        "apply Zgt_lt; auto with algebra.",
                        "VernacExtend",
                        "e86d7cf0e521768d521b36c7b9de2af3e82c67c7"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros p H'; try assumption.",
                        "VernacExtend",
                        "c4f323eaacce398e1b9ecdc6a02349ea01cc0666"
                    ]
                },
                {
                    "command": [
                        "replace 0%Z with (- (0))%Z.",
                        "VernacExtend",
                        "99ee569831451a4bf396d59150800cd29185d413"
                    ]
                },
                {
                    "command": [
                        "apply Zgt_lt; auto with algebra.",
                        "VernacExtend",
                        "e86d7cf0e521768d521b36c7b9de2af3e82c67c7"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_abs_comp",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros x; try assumption.",
                        "VernacExtend",
                        "c1d134cd0380c89f2221310d121a4057e0c22b21"
                    ]
                },
                {
                    "command": [
                        "elim x.",
                        "VernacExtend",
                        "4dae947360dc7d88bee6f5459fc6c026a56c9298"
                    ]
                },
                {
                    "command": [
                        "intros p p'; try assumption.",
                        "VernacExtend",
                        "b2da3cd601e79c29a2cd644c61f0ed82e7797ecd"
                    ]
                },
                {
                    "command": [
                        "red in p'.",
                        "VernacExtend",
                        "b8382fb50b72b57eb71f6c484273fa975006bdd1"
                    ]
                },
                {
                    "command": [
                        "inversion p.",
                        "VernacExtend",
                        "b2560bc224d7b306f198748a76f0b03f3e36cdcc"
                    ]
                },
                {
                    "command": [
                        "intros p p0 p'; simpl in |- *.",
                        "VernacExtend",
                        "ab0a7b7163f38a0317c400be04a4ea7316f2a362"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros p p0 p'; try assumption.",
                        "VernacExtend",
                        "964a0b397a491221c91bf2c58d7b074e9b6921e7"
                    ]
                },
                {
                    "command": [
                        "red in p'.",
                        "VernacExtend",
                        "b8382fb50b72b57eb71f6c484273fa975006bdd1"
                    ]
                },
                {
                    "command": [
                        "simpl in p'.",
                        "VernacExtend",
                        "8f13a1e28f081884009ab1aaef45275e8a56f221"
                    ]
                },
                {
                    "command": [
                        "inversion p'.",
                        "VernacExtend",
                        "5068f2f8ae52b1e6feddd9b43a3f6ee09168f8fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_comp",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "2ef459a518c5df9fb5eb70dd915801c1347121cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_nat_fun_comp",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros r r' n H'; try assumption.",
                        "VernacExtend",
                        "215d5178082932ae926bbae9567539423998eeee"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "77e312b20a8a70ec438ae0c952d68ee732b21d9b"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group r (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
                        "VernacExtend",
                        "7164ff2d759bc708175b9d2dfa325ea3831a138d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group r' (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
                        "VernacExtend",
                        "e1065e0dfa5f015dee04cd4dcc902cd435b5b4e3"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (nat_to_group r (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
                        "VernacExtend",
                        "52e9b9ec662f6dede96957c8cb46ebc2c0c3b5cf"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (nat_to_group r' (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
                        "VernacExtend",
                        "1dc011b5cd86f20fa50e36943a20fe7df777c6fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_nat_neg",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros p r; try assumption.",
                        "VernacExtend",
                        "e79ae6ea2977c79b40f0dbac263491e5bb11b32f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (nat_to_group r (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
                        "VernacExtend",
                        "52e9b9ec662f6dede96957c8cb46ebc2c0c3b5cf"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (group_inverse G r) (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
                        "VernacExtend",
                        "221624b1ef649a2a1abaffec63d79406942be502"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_nat_inv",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *.",
                        "VernacExtend",
                        "b67a775f86f34dcfd676a405ed09e661896dfc35"
                    ]
                },
                {
                    "command": [
                        "intros r; try assumption.",
                        "VernacExtend",
                        "3d1c9630eba641479eb676ce299d12a7ae75663c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "77e312b20a8a70ec438ae0c952d68ee732b21d9b"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros p r; try assumption.",
                        "VernacExtend",
                        "e79ae6ea2977c79b40f0dbac263491e5bb11b32f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (group_inverse G (group_inverse G r)) (Zpos p)); auto with algebra.",
                        "VernacExtend",
                        "fc02b205cb275faf5e986c1512d3456676194f38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_mult",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "simple induction m; simpl in |- *.",
                        "VernacExtend",
                        "5645d4caa004b24ab7bc465eede9500b602469c7"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "0ff48808bf0cbf50945a6acf56d22bd70f4c65c4"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'; try assumption.",
                        "VernacExtend",
                        "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "0ff48808bf0cbf50945a6acf56d22bd70f4c65c4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group r n) (nat_to_group r (n0 * n))); auto with algebra.",
                        "VernacExtend",
                        "6a81ade5c4e958ea1a01d6a16535910c651c94e6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (nat_to_group r (n0 * n)) (nat_to_group r n)); auto with algebra.",
                        "VernacExtend",
                        "cf80406425689c749d4422fe1624df9ebc5c095d"
                    ]
                },
                {
                    "command": [
                        "apply SGROUP_comp; auto with algebra.",
                        "VernacExtend",
                        "1228d5420c7112d12f13dd08022ffbf79385f944"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "0ff48808bf0cbf50945a6acf56d22bd70f4c65c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_to_group_unit",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "2ef459a518c5df9fb5eb70dd915801c1347121cf"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'; try assumption.",
                        "VernacExtend",
                        "2ca2a41fa9fb3ca4013e39b9d1bd94c19e92e517"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (monoid_unit G) (monoid_unit G)); auto with algebra.",
                        "VernacExtend",
                        "1c26d3546c32c78146c366e66a544370cfd5a12b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_to_group_nat_unit",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "2ef459a518c5df9fb5eb70dd915801c1347121cf"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (monoid_unit G) (nat_of_P (pos_abs (ax3 p)))); auto with algebra.",
                        "VernacExtend",
                        "3d4f539a068281cf5cb60f27c07d0b58f0173311"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (nat_to_group (monoid_unit G) (nat_of_P (pos_abs (ax3 p))))); auto with algebra.",
                        "VernacExtend",
                        "02b34addb22087a0dc0f39e6299ccb6e923a470e"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (monoid_unit G)); auto with algebra.",
                        "VernacExtend",
                        "2ffca7f1a64801e1a878901d80cd0d47a73ac518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_power_plus",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "unfold group_power in |- *; auto with algebra.",
                        "VernacExtend",
                        "990369433dc4042195f7b5cbc9c11b35375952c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_power_S",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "unfold group_power in |- *.",
                        "VernacExtend",
                        "cefc0c964c378ba2a44e2157ada907c9d390efe4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros g n; try assumption.",
                        "VernacExtend",
                        "d8cf6a390c943fa185e2431be4241febf7bedf5e"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law G (Z_to_group_fun g n) (Z_to_group_fun g (ring_unit Zr))); auto with algebra.",
                        "VernacExtend",
                        "d964ef46f08228f6ebeeb7fb99250aad9496251f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_power_0",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "unfold group_power in |- *.",
                        "VernacExtend",
                        "cefc0c964c378ba2a44e2157ada907c9d390efe4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros g; try assumption.",
                        "VernacExtend",
                        "f26ccc964af6548938f100e9b7696979c49bb3d8"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun g 0%Z); auto with algebra.",
                        "VernacExtend",
                        "aedcd3889e71ba7e802af1253de1f719cbb0357e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_power_1",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros g; try assumption.",
                        "VernacExtend",
                        "f26ccc964af6548938f100e9b7696979c49bb3d8"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_power G g (sgroup_law ZZ (monoid_unit ZZ) (ring_unit ZZ))); auto with algebra.",
                        "VernacExtend",
                        "93dc4d7338db04c8f5f5e0527e4b1328cea6778c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_power_inv",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "unfold group_power in |- *.",
                        "VernacExtend",
                        "cefc0c964c378ba2a44e2157ada907c9d390efe4"
                    ]
                },
                {
                    "command": [
                        "intros g n; try assumption.",
                        "VernacExtend",
                        "d8cf6a390c943fa185e2431be4241febf7bedf5e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun g (group_inverse ZZ n)); auto with algebra.",
                        "VernacExtend",
                        "ad5ed6c54fb7da91d4eac4017dad74ffcf3ca6ea"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (group_inverse G g) n); auto with algebra.",
                        "VernacExtend",
                        "9070a5f71e75b745ceafcb00e2d82568cbd21f4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_group_nat_fun_mult_pos",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros p q g; try assumption.",
                        "VernacExtend",
                        "6f162318d88633fb2b6aa7b2f5c1ac3858616478"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group g (nat_of_P (pos_abs (ax3 ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) p (fun y : positive => y) q))))); auto with algebra.",
                        "VernacExtend",
                        "ed735c18b5a59145b0585e910e3c256d3bd0d629"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (Z_to_group_nat_fun g (Zpos p)) (nat_of_P (pos_abs (ax3 q)))); auto with algebra.",
                        "VernacExtend",
                        "2f2bd11e80092f77398e9c7c5c8ba16a1e61fe9e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y).",
                        "VernacExtend",
                        "cbdd618d104d6653da48960fbdd12b6a811412fc"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (nat_to_group (nat_to_group g (nat_of_P p)) (nat_of_P q)); auto with algebra.",
                        "VernacExtend",
                        "71624612267bcc66d2f6e18ba80594507c2d16cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "group_power_mult",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "unfold group_power in |- *.",
                        "VernacExtend",
                        "cefc0c964c378ba2a44e2157ada907c9d390efe4"
                    ]
                },
                {
                    "command": [
                        "intros g n m; try assumption.",
                        "VernacExtend",
                        "722755b3b525761069e9ce4c3ab502cc77e625bf"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun g (ring_mult n m)); auto with algebra.",
                        "VernacExtend",
                        "b1047604feb9595783005f38d0873f2fb13a49b9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun g n) m); auto with algebra.",
                        "VernacExtend",
                        "654bcdd4b61a421934abc03606f3179eb8e0f307"
                    ]
                },
                {
                    "command": [
                        "unfold ring_mult in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1a685d1ddd36c06c2e31c5f3e9faa7987191edde"
                    ]
                },
                {
                    "command": [
                        "elim m.",
                        "VernacExtend",
                        "e92658ad32662abbab57f38e77a230aa4048c69b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_0_r.",
                        "VernacExtend",
                        "575d294d90b6d6b748c0a769ff5569338a51878b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "77e312b20a8a70ec438ae0c952d68ee732b21d9b"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_0_l.",
                        "VernacExtend",
                        "6f37406e8d2c19afcfe8d916b30b3b79d01e2ea6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (monoid_unit G) (Zpos p)); auto with algebra.",
                        "VernacExtend",
                        "5218af7a81ee60b0250308831a64d87b8b06768f"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros p p0; try assumption.",
                        "VernacExtend",
                        "9ac5d4da282ef526817ab7d1d924d199078b2485"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p * Zpos p0)%Z with (- (Zpos p * Zpos p0))%Z.",
                        "VernacExtend",
                        "97eb616b91329e4203255dd948eea8763b027df5"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (group_inverse G g) (Zpos p * Zpos p0)%Z); auto with algebra.",
                        "VernacExtend",
                        "fa535af23cb99bb2a99e0feb72d275eea8b6adce"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun (group_inverse G g) (Zpos p)) (Zpos p0)); auto with algebra.",
                        "VernacExtend",
                        "17b233544828f92c2fcc250e15c119b193d07092"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "f6626063b501ea5e1e54a469e5312781da74a6cd"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "intros p; try assumption.",
                        "VernacExtend",
                        "1c28591b23acebc625944df4fd4b6709dac3e2b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_0_l.",
                        "VernacExtend",
                        "6f37406e8d2c19afcfe8d916b30b3b79d01e2ea6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (monoid_unit G) (Zneg p)); auto with algebra.",
                        "VernacExtend",
                        "3d947292e2c3f5b53f881091cca7ca70fa0230d3"
                    ]
                },
                {
                    "command": [
                        "intros p p0; try assumption.",
                        "VernacExtend",
                        "9ac5d4da282ef526817ab7d1d924d199078b2485"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p * Zneg p0)%Z with (- (Zpos p * Zpos p0))%Z.",
                        "VernacExtend",
                        "70632581435b2220f9dce64e5c2f627f7577c4b7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (group_inverse G g) (Zpos p * Zpos p0)%Z); auto with algebra.",
                        "VernacExtend",
                        "fa535af23cb99bb2a99e0feb72d275eea8b6adce"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (group_inverse G (Z_to_group_nat_fun g (Zpos p))) (Zpos p0)); auto with algebra.",
                        "VernacExtend",
                        "af590551202de44e06f8145253a3ee0d97fe119f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun (group_inverse G g) (Zpos p)) (Zpos p0)); auto with algebra.",
                        "VernacExtend",
                        "17b233544828f92c2fcc250e15c119b193d07092"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_group_nat_fun_comp; auto with algebra.",
                        "VernacExtend",
                        "d639832df5ea4b17379ba01a3fdec3eda46d2a2c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun g (Zneg p)); auto with algebra.",
                        "VernacExtend",
                        "c5d0bd92a21f4d42a79903b0ab3f0a9dd8f6fe55"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p) with (- Zneg p)%Z.",
                        "VernacExtend",
                        "71090f7eb4dea10f65c0d0fa9556bc8ed16f6aa0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros p p0; try assumption.",
                        "VernacExtend",
                        "9ac5d4da282ef526817ab7d1d924d199078b2485"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p * Zneg p0)%Z with (- (Zpos p * Zneg p0))%Z.",
                        "VernacExtend",
                        "0bcdffef3d3e244c393ee7c2d47e15c9e4364c0c"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p * Zneg p0)%Z with (- (Zpos p * Zpos p0))%Z.",
                        "VernacExtend",
                        "70632581435b2220f9dce64e5c2f627f7577c4b7"
                    ]
                },
                {
                    "command": [
                        "replace (- - (Zpos p * Zpos p0))%Z with (Zpos p * Zpos p0)%Z.",
                        "VernacExtend",
                        "7adf5b4f1797aa06eb0e91ebea11eeda30f4c717"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (Z_to_group_nat_fun g (Zpos p)) (Zpos p0)); auto with algebra.",
                        "VernacExtend",
                        "abe85896336cff23a06efd7e6b2323009cfc4c05"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (group_inverse G (Z_to_group_nat_fun g (Zneg p))) (Zpos p0)); auto with algebra.",
                        "VernacExtend",
                        "247d5c9481d750f000e83860df70b87b791762a2"
                    ]
                },
                {
                    "command": [
                        "apply Z_to_group_nat_fun_comp; auto with algebra.",
                        "VernacExtend",
                        "d639832df5ea4b17379ba01a3fdec3eda46d2a2c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_power G g (Zpos p)); auto with algebra.",
                        "VernacExtend",
                        "4a8a8290410c5c91d58210568f5da89cdd0f68ff"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_inverse G (group_power G g (Zneg p))); auto with algebra.",
                        "VernacExtend",
                        "27e3de93e51e0514e4484d07d0d0cb844c253b05"
                    ]
                },
                {
                    "command": [
                        "apply Sym.",
                        "VernacExtend",
                        "b91ee1c3035127bafc790ce54633c93301d2dbb0"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_law_inverse.",
                        "VernacExtend",
                        "134c152cd545e90f7d717bfa7414488feca66322"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (group_power G g (Zneg p + Zpos p)%Z); auto with algebra.",
                        "VernacExtend",
                        "7e0a8689cca3efcabcea8cd3dc5296038c09355b"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p) with (- Zpos p)%Z.",
                        "VernacExtend",
                        "b0ce4ed3c6a34043cb230a2162ed00f7f27888d0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_opp_l.",
                        "VernacExtend",
                        "31064cf3081e8f8d5594b4add2967b770df11eae"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zopp_involutive; auto with algebra.",
                        "VernacExtend",
                        "ad4a37a51cafedd0bc9c4b407902192fd8e48f44"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p0) with (- Zpos p0)%Z.",
                        "VernacExtend",
                        "5bb1ac5d7dc3620f9380feca2eb3ae2af51753a8"
                    ]
                },
                {
                    "command": [
                        "replace (Zpos p * - Zpos p0)%Z with (- Zpos p0 * Zpos p)%Z.",
                        "VernacExtend",
                        "adc606085e06dc9f8fe5ffffa54dc9ec5171cdd5"
                    ]
                },
                {
                    "command": [
                        "rewrite Zopp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "1f0b9be4fa18bab508e40ac78d2944a3a3bf0e3c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_comm.",
                        "VernacExtend",
                        "2c1282bf165ec7c97fac66d6d60ae4f6ba65e66e"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_comm.",
                        "VernacExtend",
                        "2c1282bf165ec7c97fac66d6d60ae4f6ba65e66e"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg p) with (- Zpos p)%Z.",
                        "VernacExtend",
                        "b0ce4ed3c6a34043cb230a2162ed00f7f27888d0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zopp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "1f0b9be4fa18bab508e40ac78d2944a3a3bf0e3c"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Z_to_group_nat_fun (Z_to_group_fun g n) m); auto with algebra.",
                        "VernacExtend",
                        "7a9beb95b19f4e09cff0683bd9801a4bf37e761d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}