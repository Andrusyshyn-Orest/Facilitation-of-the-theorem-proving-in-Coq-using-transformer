{
    "filename": "Integral_domain_facts.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Integral_domain_cat.",
            "VernacRequire",
            "9218ece9af0663a8cbceb4fe8e27b9a5f1f76a71"
        ],
        [
            "Require Export Ring_facts.",
            "VernacRequire",
            "11d16195a26d1409aa01e3d61b4284ff94ba72ea"
        ],
        [
            "Require Export Classical_Prop.",
            "VernacRequire",
            "6611664b7a3cccb612f3d55b3ec011d072dd6a54"
        ],
        [
            "Section Lemmas.",
            "VernacBeginSection",
            "bc0352a323bce6cad5770f6da0c5dc706036368a"
        ],
        [
            "Variable R : INTEGRAL_DOMAIN.",
            "VernacAssumption",
            "e920da5cd59041e8cbc221e64d87d2e5941d3ecf"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_prop_rev : forall x y : R, ~ Equal x (monoid_unit R) -> ~ Equal y (monoid_unit R) -> ~ Equal (ring_mult x y) (monoid_unit R).",
            "VernacStartTheoremProof",
            "7dd2881193346105e132ede583881e8572045457"
        ],
        [
            "exact (idomain_prf R).",
            "VernacExtend",
            "1e8724c547f857061b12e3ea3efd291ec44c4a5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_prop : forall x y : R, Equal (ring_mult x y) (monoid_unit R) -> Equal x (monoid_unit R) \\/ Equal y (monoid_unit R).",
            "VernacStartTheoremProof",
            "91fa7932848292d8006d173659758ec2d62dde3a"
        ],
        [
            "intros x y H'; try assumption.",
            "VernacExtend",
            "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
        ],
        [
            "generalize (INTEGRAL_DOMAIN_prop_rev (x:=x) (y:=y)).",
            "VernacExtend",
            "97383156f57b2ccd3bf4bd44d1318f80921203e0"
        ],
        [
            "apply NNPP; tauto.",
            "VernacExtend",
            "afab2b3b31850aa0ccf6591c47334e08680fa05f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_mult_l : forall x y : R, ~ Equal (ring_mult x y) (monoid_unit R) -> ~ Equal x (monoid_unit R).",
            "VernacStartTheoremProof",
            "48cf7eeb0e8ec008ee86e5dbfe499faf389dfae2"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "absurd (Equal (ring_mult x y) (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "1d8efc70fcab1644ef50f9b7e091c9c5fa6f558f"
        ],
        [
            "apply Trans with (ring_mult (monoid_unit R) y); auto with algebra.",
            "VernacExtend",
            "34c97f0cc8f131b2ceb074a1d22bd9cd0a61f871"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_mult_r : forall x y : R, ~ Equal (ring_mult x y) (monoid_unit R) -> ~ Equal y (monoid_unit R).",
            "VernacStartTheoremProof",
            "883f671525e507f5776b6b86e7e3a4091f01b82a"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "absurd (Equal (ring_mult x y) (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "1d8efc70fcab1644ef50f9b7e091c9c5fa6f558f"
        ],
        [
            "apply Trans with (ring_mult x (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "ff8583cb1994ff8ff61382d8acfcf2d2bb2cef53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_mult_n0_r : forall x y : R, Equal (ring_mult x y) (monoid_unit R) -> ~ Equal y (monoid_unit R) -> Equal x (monoid_unit R).",
            "VernacStartTheoremProof",
            "93cceb1b53cbe9029e0b7cc5e70036d6826900e5"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim (INTEGRAL_DOMAIN_prop (x:=x) (y:=y)); auto with algebra.",
            "VernacExtend",
            "2263a8008bd84be33aa550eb506075844cff749a"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "absurd (Equal y (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "9c23cb8f695a6a70e47afdc632378f78c7e4073d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_mult_n0_l : forall x y : R, Equal (ring_mult x y) (monoid_unit R) -> ~ Equal x (monoid_unit R) -> Equal y (monoid_unit R).",
            "VernacStartTheoremProof",
            "e97047bd263f984edb8c6a531f052325dba8eb07"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "elim (INTEGRAL_DOMAIN_prop (x:=x) (y:=y)); auto with algebra.",
            "VernacExtend",
            "2263a8008bd84be33aa550eb506075844cff749a"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "absurd (Equal x (monoid_unit R)); auto with algebra.",
            "VernacExtend",
            "e425e962d8688042d21fa862a422d5baf10ff569"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve INTEGRAL_DOMAIN_prop INTEGRAL_DOMAIN_prop_rev INTEGRAL_DOMAIN_mult_l INTEGRAL_DOMAIN_mult_r INTEGRAL_DOMAIN_mult_n0_l INTEGRAL_DOMAIN_mult_n0_r: algebra.",
            "VernacHints",
            "32f54a2339fd13287bcc9a0695cb47a84afed9e6"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_simpl_r : forall x y z : R, ~ Equal z (monoid_unit R) -> Equal (ring_mult x z) (ring_mult y z) -> Equal x y.",
            "VernacStartTheoremProof",
            "68c1aaafdbb3a36cca90b44bb90e328135739565"
        ],
        [
            "intros x y z H' H'0; try assumption.",
            "VernacExtend",
            "92486dfbaec6209765e08194fc2670eff8aef754"
        ],
        [
            "cut (Equal (ring_mult (sgroup_law R x (group_inverse R y)) z) (monoid_unit R)).",
            "VernacExtend",
            "ce9f63ffd99f8ca1b15123169cb79b07807cfa56"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "cut (Equal (sgroup_law R x (group_inverse R y)) (monoid_unit R)).",
            "VernacExtend",
            "67a75bd0484696f2f76eaf2f2041f6ecfd79407f"
        ],
        [
            "intros H'2; try assumption.",
            "VernacExtend",
            "3e0142f6e43fd4a8990399a81c16960a527db165"
        ],
        [
            "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
            "VernacExtend",
            "a3360d65322eeedf329f9b769504be23684b4bbc"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply INTEGRAL_DOMAIN_mult_n0_r with z; auto with algebra.",
            "VernacExtend",
            "1466466633e31f6fbc878b853c265108302490c9"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult x z) (ring_mult (group_inverse R y) z)); auto with algebra.",
            "VernacExtend",
            "ef07f540454c24104e692ad53d8d8f5a8b353032"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult y z))); auto with algebra.",
            "VernacExtend",
            "603cb7b76523178e16bd3a49416fcefc968812e5"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult x z))); auto with algebra.",
            "VernacExtend",
            "3b33e6b10ac647616828cf69aebf9292e88a0455"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_simpl_l : forall x y z : R, ~ Equal z (monoid_unit R) -> Equal (ring_mult z x) (ring_mult z y) -> Equal x y.",
            "VernacStartTheoremProof",
            "6f6688588ed7bd9ea23be26bc4db9fe96f483bb2"
        ],
        [
            "intros x y z H' H'0; try assumption.",
            "VernacExtend",
            "92486dfbaec6209765e08194fc2670eff8aef754"
        ],
        [
            "cut (Equal (ring_mult z (sgroup_law R x (group_inverse R y))) (monoid_unit R)).",
            "VernacExtend",
            "92428fe86236bf67b88abdcbee40c6ebccd2d64a"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "cut (Equal (sgroup_law R x (group_inverse R y)) (monoid_unit R)).",
            "VernacExtend",
            "67a75bd0484696f2f76eaf2f2041f6ecfd79407f"
        ],
        [
            "intros H'2; try assumption.",
            "VernacExtend",
            "3e0142f6e43fd4a8990399a81c16960a527db165"
        ],
        [
            "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
            "VernacExtend",
            "a3360d65322eeedf329f9b769504be23684b4bbc"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply INTEGRAL_DOMAIN_mult_n0_l with z; auto with algebra.",
            "VernacExtend",
            "4ce18de95bda8553a8c3603ca782ec370305f95f"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult z x) (ring_mult z (group_inverse R y))); auto with algebra.",
            "VernacExtend",
            "ed038e4d43fb8d6e8d905187f360d6dfb7df9989"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z y))); auto with algebra.",
            "VernacExtend",
            "b43bc22814e110df583115b67adbc4c2f6f55de0"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z x))); auto with algebra.",
            "VernacExtend",
            "8d90b326f3f646b52358435d7e5092654f443e4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_mult_eq_r : forall x y z : R, Equal (ring_mult x z) (ring_mult y z) -> Equal x y \\/ Equal z (monoid_unit R).",
            "VernacStartTheoremProof",
            "6ecd87e7d900631ef5ad0177a6e500b705cdd3f9"
        ],
        [
            "intros x y z H'; try assumption.",
            "VernacExtend",
            "18b8f1ccd96b2d79c57af566b73262d0ea189d61"
        ],
        [
            "cut (Equal (ring_mult (sgroup_law R x (group_inverse R y)) z) (monoid_unit R)).",
            "VernacExtend",
            "ce9f63ffd99f8ca1b15123169cb79b07807cfa56"
        ],
        [
            "intros H'0; try assumption.",
            "VernacExtend",
            "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
        ],
        [
            "elim (INTEGRAL_DOMAIN_prop (x:=sgroup_law R x (group_inverse R y)) (y:=z)); auto with algebra.",
            "VernacExtend",
            "59879f75f6cba84c651104080c368a57f0bbf6ad"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "left; try assumption.",
            "VernacExtend",
            "061f6989ab3496c741b90a65c34743f4f38e0b40"
        ],
        [
            "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
            "VernacExtend",
            "a3360d65322eeedf329f9b769504be23684b4bbc"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult x z) (ring_mult (group_inverse R y) z)); auto with algebra.",
            "VernacExtend",
            "ef07f540454c24104e692ad53d8d8f5a8b353032"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult y z))); auto with algebra.",
            "VernacExtend",
            "603cb7b76523178e16bd3a49416fcefc968812e5"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult x z))); auto with algebra.",
            "VernacExtend",
            "3b33e6b10ac647616828cf69aebf9292e88a0455"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma INTEGRAL_DOMAIN_mult_eq_l : forall x y z : R, Equal (ring_mult z x) (ring_mult z y) -> Equal x y \\/ Equal z (monoid_unit R).",
            "VernacStartTheoremProof",
            "87090dfc63a02f5a8d0519a42d3df7e56849dc39"
        ],
        [
            "intros x y z H'; try assumption.",
            "VernacExtend",
            "18b8f1ccd96b2d79c57af566b73262d0ea189d61"
        ],
        [
            "cut (Equal (ring_mult z (sgroup_law R x (group_inverse R y))) (monoid_unit R)).",
            "VernacExtend",
            "92428fe86236bf67b88abdcbee40c6ebccd2d64a"
        ],
        [
            "intros H'0; try assumption.",
            "VernacExtend",
            "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
        ],
        [
            "elim (INTEGRAL_DOMAIN_prop (x:=z) (y:=sgroup_law R x (group_inverse R y))); auto with algebra.",
            "VernacExtend",
            "06b3ae8c38d3f52d6eb3d2bb781246ce7a389662"
        ],
        [
            "intros H'1; try assumption.",
            "VernacExtend",
            "36f49af2627c9f2414e15c73ddeebdc5b206aded"
        ],
        [
            "left; try assumption.",
            "VernacExtend",
            "061f6989ab3496c741b90a65c34743f4f38e0b40"
        ],
        [
            "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
            "VernacExtend",
            "a3360d65322eeedf329f9b769504be23684b4bbc"
        ],
        [
            "apply Trans with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult z x) (ring_mult z (group_inverse R y))); auto with algebra.",
            "VernacExtend",
            "ed038e4d43fb8d6e8d905187f360d6dfb7df9989"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z y))); auto with algebra.",
            "VernacExtend",
            "b43bc22814e110df583115b67adbc4c2f6f55de0"
        ],
        [
            "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z x))); auto with algebra.",
            "VernacExtend",
            "8d90b326f3f646b52358435d7e5092654f443e4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Lemmas.",
            "VernacEndSegment",
            "85349701c463610f6190c3d153d6c22297511d32"
        ],
        [
            "Hint Resolve INTEGRAL_DOMAIN_prop INTEGRAL_DOMAIN_prop_rev INTEGRAL_DOMAIN_mult_l INTEGRAL_DOMAIN_mult_r INTEGRAL_DOMAIN_mult_n0_l INTEGRAL_DOMAIN_mult_n0_r: algebra.",
            "VernacHints",
            "32f54a2339fd13287bcc9a0695cb47a84afed9e6"
        ],
        [
            "Hint Resolve INTEGRAL_DOMAIN_simpl_r INTEGRAL_DOMAIN_simpl_l: algebra.",
            "VernacHints",
            "ae35c40e29d11761ff8c6bcdf9680effab393e63"
        ]
    ],
    "proofs": [
        {
            "name": "INTEGRAL_DOMAIN_prop_rev",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "exact (idomain_prf R).",
                        "VernacExtend",
                        "1e8724c547f857061b12e3ea3efd291ec44c4a5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_prop",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros x y H'; try assumption.",
                        "VernacExtend",
                        "fbcf20f9e721db2a6aa9129fd945d80367dbafda"
                    ]
                },
                {
                    "command": [
                        "generalize (INTEGRAL_DOMAIN_prop_rev (x:=x) (y:=y)).",
                        "VernacExtend",
                        "97383156f57b2ccd3bf4bd44d1318f80921203e0"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; tauto.",
                        "VernacExtend",
                        "afab2b3b31850aa0ccf6591c47334e08680fa05f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_mult_l",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal (ring_mult x y) (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "1d8efc70fcab1644ef50f9b7e091c9c5fa6f558f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult (monoid_unit R) y); auto with algebra.",
                        "VernacExtend",
                        "34c97f0cc8f131b2ceb074a1d22bd9cd0a61f871"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_mult_r",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal (ring_mult x y) (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "1d8efc70fcab1644ef50f9b7e091c9c5fa6f558f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (ring_mult x (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "ff8583cb1994ff8ff61382d8acfcf2d2bb2cef53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_mult_n0_r",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim (INTEGRAL_DOMAIN_prop (x:=x) (y:=y)); auto with algebra.",
                        "VernacExtend",
                        "2263a8008bd84be33aa550eb506075844cff749a"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal y (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "9c23cb8f695a6a70e47afdc632378f78c7e4073d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_mult_n0_l",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "elim (INTEGRAL_DOMAIN_prop (x:=x) (y:=y)); auto with algebra.",
                        "VernacExtend",
                        "2263a8008bd84be33aa550eb506075844cff749a"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "absurd (Equal x (monoid_unit R)); auto with algebra.",
                        "VernacExtend",
                        "e425e962d8688042d21fa862a422d5baf10ff569"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_simpl_r",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros x y z H' H'0; try assumption.",
                        "VernacExtend",
                        "92486dfbaec6209765e08194fc2670eff8aef754"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (ring_mult (sgroup_law R x (group_inverse R y)) z) (monoid_unit R)).",
                        "VernacExtend",
                        "ce9f63ffd99f8ca1b15123169cb79b07807cfa56"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (sgroup_law R x (group_inverse R y)) (monoid_unit R)).",
                        "VernacExtend",
                        "67a75bd0484696f2f76eaf2f2041f6ecfd79407f"
                    ]
                },
                {
                    "command": [
                        "intros H'2; try assumption.",
                        "VernacExtend",
                        "3e0142f6e43fd4a8990399a81c16960a527db165"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
                        "VernacExtend",
                        "a3360d65322eeedf329f9b769504be23684b4bbc"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply INTEGRAL_DOMAIN_mult_n0_r with z; auto with algebra.",
                        "VernacExtend",
                        "1466466633e31f6fbc878b853c265108302490c9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult x z) (ring_mult (group_inverse R y) z)); auto with algebra.",
                        "VernacExtend",
                        "ef07f540454c24104e692ad53d8d8f5a8b353032"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult y z))); auto with algebra.",
                        "VernacExtend",
                        "603cb7b76523178e16bd3a49416fcefc968812e5"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult x z))); auto with algebra.",
                        "VernacExtend",
                        "3b33e6b10ac647616828cf69aebf9292e88a0455"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_simpl_l",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros x y z H' H'0; try assumption.",
                        "VernacExtend",
                        "92486dfbaec6209765e08194fc2670eff8aef754"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (ring_mult z (sgroup_law R x (group_inverse R y))) (monoid_unit R)).",
                        "VernacExtend",
                        "92428fe86236bf67b88abdcbee40c6ebccd2d64a"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (sgroup_law R x (group_inverse R y)) (monoid_unit R)).",
                        "VernacExtend",
                        "67a75bd0484696f2f76eaf2f2041f6ecfd79407f"
                    ]
                },
                {
                    "command": [
                        "intros H'2; try assumption.",
                        "VernacExtend",
                        "3e0142f6e43fd4a8990399a81c16960a527db165"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
                        "VernacExtend",
                        "a3360d65322eeedf329f9b769504be23684b4bbc"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply INTEGRAL_DOMAIN_mult_n0_l with z; auto with algebra.",
                        "VernacExtend",
                        "4ce18de95bda8553a8c3603ca782ec370305f95f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult z x) (ring_mult z (group_inverse R y))); auto with algebra.",
                        "VernacExtend",
                        "ed038e4d43fb8d6e8d905187f360d6dfb7df9989"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z y))); auto with algebra.",
                        "VernacExtend",
                        "b43bc22814e110df583115b67adbc4c2f6f55de0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z x))); auto with algebra.",
                        "VernacExtend",
                        "8d90b326f3f646b52358435d7e5092654f443e4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_mult_eq_r",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros x y z H'; try assumption.",
                        "VernacExtend",
                        "18b8f1ccd96b2d79c57af566b73262d0ea189d61"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (ring_mult (sgroup_law R x (group_inverse R y)) z) (monoid_unit R)).",
                        "VernacExtend",
                        "ce9f63ffd99f8ca1b15123169cb79b07807cfa56"
                    ]
                },
                {
                    "command": [
                        "intros H'0; try assumption.",
                        "VernacExtend",
                        "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
                    ]
                },
                {
                    "command": [
                        "elim (INTEGRAL_DOMAIN_prop (x:=sgroup_law R x (group_inverse R y)) (y:=z)); auto with algebra.",
                        "VernacExtend",
                        "59879f75f6cba84c651104080c368a57f0bbf6ad"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "left; try assumption.",
                        "VernacExtend",
                        "061f6989ab3496c741b90a65c34743f4f38e0b40"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
                        "VernacExtend",
                        "a3360d65322eeedf329f9b769504be23684b4bbc"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult x z) (ring_mult (group_inverse R y) z)); auto with algebra.",
                        "VernacExtend",
                        "ef07f540454c24104e692ad53d8d8f5a8b353032"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult y z))); auto with algebra.",
                        "VernacExtend",
                        "603cb7b76523178e16bd3a49416fcefc968812e5"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult x z) (group_inverse R (ring_mult x z))); auto with algebra.",
                        "VernacExtend",
                        "3b33e6b10ac647616828cf69aebf9292e88a0455"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INTEGRAL_DOMAIN_mult_eq_l",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros x y z H'; try assumption.",
                        "VernacExtend",
                        "18b8f1ccd96b2d79c57af566b73262d0ea189d61"
                    ]
                },
                {
                    "command": [
                        "cut (Equal (ring_mult z (sgroup_law R x (group_inverse R y))) (monoid_unit R)).",
                        "VernacExtend",
                        "92428fe86236bf67b88abdcbee40c6ebccd2d64a"
                    ]
                },
                {
                    "command": [
                        "intros H'0; try assumption.",
                        "VernacExtend",
                        "4cdfb5ff555980b7fe10aad1aff23df9d3ecf363"
                    ]
                },
                {
                    "command": [
                        "elim (INTEGRAL_DOMAIN_prop (x:=z) (y:=sgroup_law R x (group_inverse R y))); auto with algebra.",
                        "VernacExtend",
                        "06b3ae8c38d3f52d6eb3d2bb781246ce7a389662"
                    ]
                },
                {
                    "command": [
                        "intros H'1; try assumption.",
                        "VernacExtend",
                        "36f49af2627c9f2414e15c73ddeebdc5b206aded"
                    ]
                },
                {
                    "command": [
                        "left; try assumption.",
                        "VernacExtend",
                        "061f6989ab3496c741b90a65c34743f4f38e0b40"
                    ]
                },
                {
                    "command": [
                        "apply GROUP_reg_right with (group_inverse R y); auto with algebra.",
                        "VernacExtend",
                        "a3360d65322eeedf329f9b769504be23684b4bbc"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "9a40b53f3db042c9963c5b03d321c642d3b9a6f7"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult z x) (ring_mult z (group_inverse R y))); auto with algebra.",
                        "VernacExtend",
                        "ed038e4d43fb8d6e8d905187f360d6dfb7df9989"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z y))); auto with algebra.",
                        "VernacExtend",
                        "b43bc22814e110df583115b67adbc4c2f6f55de0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sgroup_law R (ring_mult z x) (group_inverse R (ring_mult z x))); auto with algebra.",
                        "VernacExtend",
                        "8d90b326f3f646b52358435d7e5092654f443e4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}