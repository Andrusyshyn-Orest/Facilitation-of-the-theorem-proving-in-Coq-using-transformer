{
    "filename": "Ideal.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Automatic Coercions Import.",
            "VernacSetOption",
            "12f2b52fb77cee7f2419b939e5a1046afa341e27"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Ring_facts.",
            "VernacRequire",
            "11d16195a26d1409aa01e3d61b4284ff94ba72ea"
        ],
        [
            "Require Export Generated_module.",
            "VernacRequire",
            "0b789bc8c0fab04083a315727e51b67ec7f60ef6"
        ],
        [
            "Section ideals.",
            "VernacBeginSection",
            "74c82b4580419b5de5d01bb555a1a6ccccd44f9c"
        ],
        [
            "Variable R : RING.",
            "VernacAssumption",
            "d0eb88f51e93c9f8be4fd6395fc21fc15a70dea3"
        ],
        [
            "Definition is_ideal (I : subgroup R) := forall x : R, in_part x I -> forall a : R, in_part (ring_mult a x) I.",
            "VernacDefinition",
            "a9113ad2686205c908aed5753244cce8dddd4fb0"
        ],
        [
            "Record ideal : Type := {ideal_subgroup :> subgroup R; ideal_prf : is_ideal ideal_subgroup}.",
            "VernacInductive",
            "15ddd9cee8bceeeea9e8964af15515c78ebbe62f"
        ],
        [
            "Lemma ideal_prop : forall (I : ideal) (x : I) (a : R), in_part (ring_mult a (I x)) I.",
            "VernacStartTheoremProof",
            "cef198c8b19e88822f6adcf547499d3d76f573b0"
        ],
        [
            "intros I x a; try assumption.",
            "VernacExtend",
            "3208f8758938900ffb088f6493d1a82a6250376a"
        ],
        [
            "apply (ideal_prf (i:=I)).",
            "VernacExtend",
            "6bb83b2b7f76b9791eb71685cbd0cf54bcfd8768"
        ],
        [
            "case x; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "10364f40bd020854070865f7d5c6846e59ae6965"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ideal_prop2 : forall (I : ideal) (x a : R), in_part x I -> in_part (ring_mult a x) I.",
            "VernacStartTheoremProof",
            "958cbd07bfa0d81bf0bd4f096f4a7425bdd64754"
        ],
        [
            "intros I x a H'; try assumption.",
            "VernacExtend",
            "56afc5d496cb6fbb988d9bae5229ebae31d910b2"
        ],
        [
            "apply (ideal_prf (i:=I)); auto with algebra.",
            "VernacExtend",
            "290bc8620154cdddf2055cce995cbf1c0ed32482"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ideal_prop3 : forall (I : ideal) (x y : R), in_part x I -> in_part y I -> in_part (sgroup_law R x y) I.",
            "VernacStartTheoremProof",
            "13f156440eeb6dd680e067bb8d7f8a94cb9b8c34"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ideal_prop4 : forall (I : ideal) (x : R), in_part x I -> in_part (group_inverse R x) I.",
            "VernacStartTheoremProof",
            "0e7cfb68ad102e54f8bcc47c4060c92eb8273063"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ideals.",
            "VernacEndSegment",
            "40bf0c6fdc3843c83049df3b4340c9d469e974bd"
        ],
        [
            "Hint Resolve ideal_prop2: algebra.",
            "VernacHints",
            "02e28544b3bca89c8570ab7a9aa4f888d991c483"
        ],
        [
            "Section Ring_as_module.",
            "VernacBeginSection",
            "4e57888dcdfea07c49724aba93517b1a8327ddf8"
        ],
        [
            "Variable R : ring.",
            "VernacAssumption",
            "5eb491ad08d9cd007e4e2eec80e647272e7eb896"
        ],
        [
            "Definition ring_module : module R.",
            "VernacDefinition",
            "3b23edf4431d0d545844f2d2d4a1a903fc22d810"
        ],
        [
            "apply (BUILD_MODULE_GROUP (R:=R) (module_util_G:=R) (gen_module_op:=fun a x : R => ring_mult a x)); abstract auto with algebra.",
            "VernacExtend",
            "b73264b1998b3976e334baff554c8c8d8709b697"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Ring_as_module.",
            "VernacEndSegment",
            "5e98390cc46c92fb36330b4db0fa3348921b4596"
        ],
        [
            "Coercion ring_module : ring >-> module.",
            "VernacCoercion",
            "5da72147e29f16e06bff805214aeb9c384d270bf"
        ],
        [
            "Section Generated_ideal.",
            "VernacBeginSection",
            "6416c6fbaf9172985d45f641cc6f6f4d9aba6eaf"
        ],
        [
            "Variable R : RING.",
            "VernacAssumption",
            "d0eb88f51e93c9f8be4fd6395fc21fc15a70dea3"
        ],
        [
            "Variable A : part_set R.",
            "VernacAssumption",
            "3bce9e9cbc70651a1fc1f888b034e624d8211d3c"
        ],
        [
            "Definition generated_module_subgroup : subgroup R.",
            "VernacDefinition",
            "432dd1dd34a20b440d288b6ade5a9c4a76c15a19"
        ],
        [
            "apply (BUILD_SUB_GROUP (G:=R) (H:=generated_module (R:=R) (Mod:=R) A)); simpl in |- *; auto with algebra.",
            "VernacExtend",
            "284dc6c8e367f04e92bfac280cf3690c0e382b86"
        ],
        [
            "intros x y H' H'0; try assumption.",
            "VernacExtend",
            "80824be427f661dd57d0ea65f59a8a8dc948972f"
        ],
        [
            "elim H'0; intros x0 E; elim E; intros H'1 H'2; try exact H'2; clear E H'0.",
            "VernacExtend",
            "4c8789c11bd9aae3240415a972940da95177d4ad"
        ],
        [
            "elim H'; intros x1 E; elim E; intros H'0 H'3; try exact H'3; clear E H'.",
            "VernacExtend",
            "c180e604fb34a6b1d30636f9c789a71c3bd3e216"
        ],
        [
            "exists (Law x1 x0); split; [ try assumption | idtac ].",
            "VernacExtend",
            "82a832d69c38355a598038ac541871df4bf3de18"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact (SGROUP_comp (E:=R) H'3 H'2).",
            "VernacExtend",
            "91a832cf3eb8b07bfa258963a6dc0c2ab6c776a3"
        ],
        [
            "exists (Unit R A); split; [ idtac | try assumption ].",
            "VernacExtend",
            "413a9d39e0cb961c0780663c403deae893880bb8"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "intros x H'; try assumption.",
            "VernacExtend",
            "58e256260d8e1308b78670caf8fd802cbcefd3be"
        ],
        [
            "elim H'; intros x0 E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
            "VernacExtend",
            "3a45126c6fbdd5654ca708b1ffd338e02597a1e8"
        ],
        [
            "exists (Inv x0); split; [ idtac | try assumption ].",
            "VernacExtend",
            "4f8e2195b12a8412ea091a6438aa144efccd329a"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact (GROUP_comp (G:=R) H'1).",
            "VernacExtend",
            "24b5e43d83f756fb2a7fc67cbe377b5513547f15"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition generated_ideal : ideal R.",
            "VernacDefinition",
            "522bed42a89370515db50f82d8b031b2c76d3959"
        ],
        [
            "apply (Build_ideal (R:=R) (ideal_subgroup:=generated_module_subgroup)).",
            "VernacExtend",
            "8f7e459f3ed2c2ce09186c31e65e1741c7c56020"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x H' a; try assumption.",
            "VernacExtend",
            "18fe50d8fd9c722cf5a97d78284c6e0212030853"
        ],
        [
            "elim H'; intros x0 E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
            "VernacExtend",
            "3a45126c6fbdd5654ca708b1ffd338e02597a1e8"
        ],
        [
            "exists (Op a x0); split; [ idtac | try assumption ].",
            "VernacExtend",
            "466a2d61e3bc89e2a5e8bdec91de10860f0aebce"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exact (MODULE_comp (R:=R) (Mod:=R:MODULE R) (Refl a) H'1).",
            "VernacExtend",
            "b239753f33bd76e7cb694298213c0a00f57a5609"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma generated_ideal_included : included A generated_ideal.",
            "VernacStartTheoremProof",
            "862a5343c4b2a70d51d3362bc64b53bfe303c209"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x H'; exists (Var R (V:=A) (Build_subtype (E:=R) (P:=A) (subtype_elt:=x) H')); split; [ idtac | try assumption ].",
            "VernacExtend",
            "8ac31d9af3e93202d4f32472aedd8ef807496a95"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_ideal_minimal : forall I : ideal R, included A I -> included generated_ideal I.",
            "VernacStartTheoremProof",
            "cca619da97e8fa35d168fb552d8024495ac6fccd"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros I H' x H'0; try assumption.",
            "VernacExtend",
            "e1b441de44736d8714d9c8a0d96d6b81b3dc5ea2"
        ],
        [
            "elim H'0; intros x0 E; elim E; intros H'1 H'2; try exact H'2; clear E H'0.",
            "VernacExtend",
            "4c8789c11bd9aae3240415a972940da95177d4ad"
        ],
        [
            "generalize H'2; clear H'2; clear H'1.",
            "VernacExtend",
            "9f284728c88e090357cc37a4bd9573c67452a84e"
        ],
        [
            "generalize x; clear x.",
            "VernacExtend",
            "3a730666dcffe77922ab24fe4249a5512fcfd603"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros c x H'0; try assumption.",
            "VernacExtend",
            "6fddfd7803cf936203142cf29421c5e682626170"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "apply in_part_comp_l with (subtype_elt c); auto with algebra.",
            "VernacExtend",
            "5bc759beff04bc920028d011fa3399f8ebc16871"
        ],
        [
            "case c; auto with algebra.",
            "VernacExtend",
            "148daeb73a8d209846e174db16d49115b0da357a"
        ],
        [
            "intros f H'0 f0 H'1 x H'2; try assumption.",
            "VernacExtend",
            "b5255fb7880b46e45a6a3f38517bf87e73162f8e"
        ],
        [
            "simpl in H'2.",
            "VernacExtend",
            "33f09779049dde93728633faaf6f7967f5679026"
        ],
        [
            "apply in_part_comp_l with (sgroup_law R (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f) (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f0)); auto with algebra.",
            "VernacExtend",
            "81b79bcbb02433d6b86f4caf5f7eab9880a49170"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x H'0; try assumption.",
            "VernacExtend",
            "142ba9849fedfb8416225009a0c996a95166d453"
        ],
        [
            "apply in_part_comp_l with (monoid_unit R); auto with algebra.",
            "VernacExtend",
            "313ed9a5cda8851ff47804615c3fc2f5849ecdad"
        ],
        [
            "intros f H'0 x H'1; try assumption.",
            "VernacExtend",
            "a504495d3114b3abfbe33ceb44e5fe6208c66247"
        ],
        [
            "simpl in H'1.",
            "VernacExtend",
            "232c573971dc190fb80ec389c88642c1d6814a9a"
        ],
        [
            "apply in_part_comp_l with (group_inverse R (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f)); auto with algebra.",
            "VernacExtend",
            "01e524f8146541f46820001406362c784d0aa23f"
        ],
        [
            "intros c f H'0 x H'1; try assumption.",
            "VernacExtend",
            "70742737a6e751fbc7b10acbe419cd4f4536216b"
        ],
        [
            "simpl in H'1.",
            "VernacExtend",
            "232c573971dc190fb80ec389c88642c1d6814a9a"
        ],
        [
            "apply in_part_comp_l with (module_mult c (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f)); auto with algebra.",
            "VernacExtend",
            "d7a04e04bc302da227cdb2319677ad21e41a00f8"
        ],
        [
            "change (in_part (ring_mult c (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f)) (subsgroup_part (submonoid_subsgroup (subgroup_submonoid (ideal_subgroup I))))) in |- *.",
            "VernacExtend",
            "baa60c1abac13090a8e59492d22dc268124acd30"
        ],
        [
            "apply ideal_prop2; auto with algebra.",
            "VernacExtend",
            "794384519d9a5f60bc6a9c8dd80ed9d8cdb251bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Generated_ideal.",
            "VernacEndSegment",
            "e521c3aa3f6bab1fb68d49c61385f793e7142f3b"
        ],
        [
            "Hint Resolve generated_ideal_minimal generated_ideal_included: algebra.",
            "VernacHints",
            "9f882cd35a97455c3b155072fdcd2da3834b5cdb"
        ]
    ],
    "proofs": [
        {
            "name": "ideal_prop",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros I x a; try assumption.",
                        "VernacExtend",
                        "3208f8758938900ffb088f6493d1a82a6250376a"
                    ]
                },
                {
                    "command": [
                        "apply (ideal_prf (i:=I)).",
                        "VernacExtend",
                        "6bb83b2b7f76b9791eb71685cbd0cf54bcfd8768"
                    ]
                },
                {
                    "command": [
                        "case x; simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "10364f40bd020854070865f7d5c6846e59ae6965"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ideal_prop2",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros I x a H'; try assumption.",
                        "VernacExtend",
                        "56afc5d496cb6fbb988d9bae5229ebae31d910b2"
                    ]
                },
                {
                    "command": [
                        "apply (ideal_prf (i:=I)); auto with algebra.",
                        "VernacExtend",
                        "290bc8620154cdddf2055cce995cbf1c0ed32482"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ideal_prop3",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ideal_prop4",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ring_module",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_MODULE_GROUP (R:=R) (module_util_G:=R) (gen_module_op:=fun a x : R => ring_mult a x)); abstract auto with algebra.",
                        "VernacExtend",
                        "b73264b1998b3976e334baff554c8c8d8709b697"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "generated_module_subgroup",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "apply (BUILD_SUB_GROUP (G:=R) (H:=generated_module (R:=R) (Mod:=R) A)); simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "284dc6c8e367f04e92bfac280cf3690c0e382b86"
                    ]
                },
                {
                    "command": [
                        "intros x y H' H'0; try assumption.",
                        "VernacExtend",
                        "80824be427f661dd57d0ea65f59a8a8dc948972f"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros x0 E; elim E; intros H'1 H'2; try exact H'2; clear E H'0.",
                        "VernacExtend",
                        "4c8789c11bd9aae3240415a972940da95177d4ad"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x1 E; elim E; intros H'0 H'3; try exact H'3; clear E H'.",
                        "VernacExtend",
                        "c180e604fb34a6b1d30636f9c789a71c3bd3e216"
                    ]
                },
                {
                    "command": [
                        "exists (Law x1 x0); split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "82a832d69c38355a598038ac541871df4bf3de18"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact (SGROUP_comp (E:=R) H'3 H'2).",
                        "VernacExtend",
                        "91a832cf3eb8b07bfa258963a6dc0c2ab6c776a3"
                    ]
                },
                {
                    "command": [
                        "exists (Unit R A); split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "413a9d39e0cb961c0780663c403deae893880bb8"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "intros x H'; try assumption.",
                        "VernacExtend",
                        "58e256260d8e1308b78670caf8fd802cbcefd3be"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x0 E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
                        "VernacExtend",
                        "3a45126c6fbdd5654ca708b1ffd338e02597a1e8"
                    ]
                },
                {
                    "command": [
                        "exists (Inv x0); split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "4f8e2195b12a8412ea091a6438aa144efccd329a"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact (GROUP_comp (G:=R) H'1).",
                        "VernacExtend",
                        "24b5e43d83f756fb2a7fc67cbe377b5513547f15"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "generated_ideal",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "apply (Build_ideal (R:=R) (ideal_subgroup:=generated_module_subgroup)).",
                        "VernacExtend",
                        "8f7e459f3ed2c2ce09186c31e65e1741c7c56020"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x H' a; try assumption.",
                        "VernacExtend",
                        "18fe50d8fd9c722cf5a97d78284c6e0212030853"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x0 E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
                        "VernacExtend",
                        "3a45126c6fbdd5654ca708b1ffd338e02597a1e8"
                    ]
                },
                {
                    "command": [
                        "exists (Op a x0); split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "466a2d61e3bc89e2a5e8bdec91de10860f0aebce"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exact (MODULE_comp (R:=R) (Mod:=R:MODULE R) (Refl a) H'1).",
                        "VernacExtend",
                        "b239753f33bd76e7cb694298213c0a00f57a5609"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "generated_ideal_included",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x H'; exists (Var R (V:=A) (Build_subtype (E:=R) (P:=A) (subtype_elt:=x) H')); split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "8ac31d9af3e93202d4f32472aedd8ef807496a95"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_ideal_minimal",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros I H' x H'0; try assumption.",
                        "VernacExtend",
                        "e1b441de44736d8714d9c8a0d96d6b81b3dc5ea2"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros x0 E; elim E; intros H'1 H'2; try exact H'2; clear E H'0.",
                        "VernacExtend",
                        "4c8789c11bd9aae3240415a972940da95177d4ad"
                    ]
                },
                {
                    "command": [
                        "generalize H'2; clear H'2; clear H'1.",
                        "VernacExtend",
                        "9f284728c88e090357cc37a4bd9573c67452a84e"
                    ]
                },
                {
                    "command": [
                        "generalize x; clear x.",
                        "VernacExtend",
                        "3a730666dcffe77922ab24fe4249a5512fcfd603"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros c x H'0; try assumption.",
                        "VernacExtend",
                        "6fddfd7803cf936203142cf29421c5e682626170"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (subtype_elt c); auto with algebra.",
                        "VernacExtend",
                        "5bc759beff04bc920028d011fa3399f8ebc16871"
                    ]
                },
                {
                    "command": [
                        "case c; auto with algebra.",
                        "VernacExtend",
                        "148daeb73a8d209846e174db16d49115b0da357a"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 f0 H'1 x H'2; try assumption.",
                        "VernacExtend",
                        "b5255fb7880b46e45a6a3f38517bf87e73162f8e"
                    ]
                },
                {
                    "command": [
                        "simpl in H'2.",
                        "VernacExtend",
                        "33f09779049dde93728633faaf6f7967f5679026"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law R (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f) (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f0)); auto with algebra.",
                        "VernacExtend",
                        "81b79bcbb02433d6b86f4caf5f7eab9880a49170"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; try assumption.",
                        "VernacExtend",
                        "142ba9849fedfb8416225009a0c996a95166d453"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit R); auto with algebra.",
                        "VernacExtend",
                        "313ed9a5cda8851ff47804615c3fc2f5849ecdad"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 x H'1; try assumption.",
                        "VernacExtend",
                        "a504495d3114b3abfbe33ceb44e5fe6208c66247"
                    ]
                },
                {
                    "command": [
                        "simpl in H'1.",
                        "VernacExtend",
                        "232c573971dc190fb80ec389c88642c1d6814a9a"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (group_inverse R (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f)); auto with algebra.",
                        "VernacExtend",
                        "01e524f8146541f46820001406362c784d0aa23f"
                    ]
                },
                {
                    "command": [
                        "intros c f H'0 x H'1; try assumption.",
                        "VernacExtend",
                        "70742737a6e751fbc7b10acbe419cd4f4536216b"
                    ]
                },
                {
                    "command": [
                        "simpl in H'1.",
                        "VernacExtend",
                        "232c573971dc190fb80ec389c88642c1d6814a9a"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (module_mult c (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f)); auto with algebra.",
                        "VernacExtend",
                        "d7a04e04bc302da227cdb2319677ad21e41a00f8"
                    ]
                },
                {
                    "command": [
                        "change (in_part (ring_mult c (FMd_lift_fun (R:=R) (V:=A) (Mod:=R:MODULE R) (inj_part A) f)) (subsgroup_part (submonoid_subsgroup (subgroup_submonoid (ideal_subgroup I))))) in |- *.",
                        "VernacExtend",
                        "baa60c1abac13090a8e59492d22dc268124acd30"
                    ]
                },
                {
                    "command": [
                        "apply ideal_prop2; auto with algebra.",
                        "VernacExtend",
                        "794384519d9a5f60bc6a9c8dd80ed9d8cdb251bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}