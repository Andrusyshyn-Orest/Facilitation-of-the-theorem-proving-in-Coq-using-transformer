{
    "filename": "Generated_group.v",
    "coq_project": "algebra",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export Group_kernel.",
            "VernacRequire",
            "15f8d859978ac0ff4eccf3f62866a7a6cd603749"
        ],
        [
            "Require Export Free_group.",
            "VernacRequire",
            "6cca8a876cbcde47fd0f19565014455d6795a35c"
        ],
        [
            "Section Generated_group_def.",
            "VernacBeginSection",
            "8b9488833011f7c4911f3b6f3ab5e7657ae5ea44"
        ],
        [
            "Variable G : GROUP.",
            "VernacAssumption",
            "59d0769559b6c765f096de3ef966602dfe10ce7b"
        ],
        [
            "Variable A : part_set G.",
            "VernacAssumption",
            "8660852e766c082dd97e43a1a5cd867692234bb8"
        ],
        [
            "Definition generated_group : subgroup G := coKer (FG_lift (inj_part A)).",
            "VernacDefinition",
            "9419fd2796e12731b66573016f7361f04a6a1cc0"
        ],
        [
            "End Generated_group_def.",
            "VernacEndSegment",
            "f46df35805945cf84358c2a8598811b3c75a9afc"
        ],
        [
            "Lemma generated_group_minimal : forall (G : GROUP) (A : part_set G) (H : subgroup G), included A H -> included (generated_group A) H.",
            "VernacStartTheoremProof",
            "9d3c88d05b0edbded66d2cabbad85676a18cc0b9"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros G A H H' x H'0; try assumption.",
            "VernacExtend",
            "a6a15997a68e802dae3b278c81468f697ceed626"
        ],
        [
            "elim H'0; intros x0; clear H'0.",
            "VernacExtend",
            "a8c4c17923dd4f6d4b74b8bb29e490c53e497c7f"
        ],
        [
            "generalize x; clear x.",
            "VernacExtend",
            "3a730666dcffe77922ab24fe4249a5512fcfd603"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "intros c; try assumption.",
            "VernacExtend",
            "8b3d69310539aa4cc67e225e861c19a1822a8a1c"
        ],
        [
            "elim c.",
            "VernacExtend",
            "971990f3c17a330620f8173652263542ab376292"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros y subtype_prf x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
            "VernacExtend",
            "3247b513c70907b3b458971f1aa3d997c30fa9a9"
        ],
        [
            "apply in_part_comp_l with y; auto with algebra.",
            "VernacExtend",
            "a96ecfe6d4f87e02909cce250c1293c1a4089f55"
        ],
        [
            "intros f H'0 f0 H'1 x H'2; elim H'2; intros H'3 H'4; try exact H'4; clear H'2.",
            "VernacExtend",
            "ad5a972c86ee11baac1117beec383ff45bcce388"
        ],
        [
            "simpl in H'4.",
            "VernacExtend",
            "5cb40b109024d2f0cafeb9067e282f649f21f905"
        ],
        [
            "apply in_part_comp_l with (sgroup_law G (FG_lift_fun (inj_part A) f) (FG_lift_fun (inj_part A) f0)); auto with algebra.",
            "VernacExtend",
            "6b8549f1cd56745f90f180db15f2526471aec022"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
            "VernacExtend",
            "257fb14bfa84a809dca947228611ae53c2805d48"
        ],
        [
            "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
            "VernacExtend",
            "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
        ],
        [
            "intros f H'0 x H'1; try assumption.",
            "VernacExtend",
            "a504495d3114b3abfbe33ceb44e5fe6208c66247"
        ],
        [
            "elim H'1; intros H'2 H'3; simpl in H'3; clear H'1.",
            "VernacExtend",
            "16fe943e7c31ad34937c1624572d7710fdfdbc63"
        ],
        [
            "apply in_part_comp_l with (group_inverse G (FG_lift_fun (inj_part A) f)); auto with algebra.",
            "VernacExtend",
            "9fafc2d0c915a83ffb41c605ffb48fd56cd687e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_group_prop_included : forall (G : GROUP) (A : part_set G), included A (generated_group A).",
            "VernacStartTheoremProof",
            "10df879a7e67f5d53c3e20c16aa3b23eb239b28a"
        ],
        [
            "unfold included in |- *.",
            "VernacExtend",
            "49d47da082bc436033ab68582d7a85f3cb0b6b75"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros G A x H'; try assumption.",
            "VernacExtend",
            "ecc7cfa1891cf40b2425451ca6cbb7bf0ac0d011"
        ],
        [
            "exists (Var (V:=A) (Build_subtype (E:=G) (P:=A) (subtype_elt:=x) H')); split; [ idtac | try assumption ].",
            "VernacExtend",
            "87a4ee5a0a887174dd198092e173986106c70e24"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_group_prop : forall (G : GROUP) (A : part_set G) (y : G), in_part y (generated_group A) -> exists x : FG A, Equal y (FG_lift (inj_part A) x).",
            "VernacStartTheoremProof",
            "c6e9cb5a8887845ff98f2bdd3fc5b39d73fc5003"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "intros G A y H'; try assumption.",
            "VernacExtend",
            "d6286890b83a220fd4b06f3d9146ff51b57e6314"
        ],
        [
            "elim H'; intros x E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
            "VernacExtend",
            "78c6776f3c6ba50defdaa65b65099fc2c90f101d"
        ],
        [
            "exists x; try assumption.",
            "VernacExtend",
            "a251c410f0ab72130a5a312ded511c093841a93c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma generated_group_prop_rev : forall (G : GROUP) (A : part_set G) (y : G), (exists x : FG A, Equal y (FG_lift (inj_part A) x)) -> in_part y (generated_group A).",
            "VernacStartTheoremProof",
            "3727a18bb29861a957b3eb3e440574648957c6fa"
        ],
        [
            "intros G A y H'; try assumption.",
            "VernacExtend",
            "d6286890b83a220fd4b06f3d9146ff51b57e6314"
        ],
        [
            "elim H'; intros x E; try exact E; clear H'.",
            "VernacExtend",
            "8a1f4131612f73c2a8e90cc93567b552b04480d0"
        ],
        [
            "simpl in |- *; auto with algebra.",
            "VernacExtend",
            "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
        ],
        [
            "exists x; split; [ idtac | try assumption ].",
            "VernacExtend",
            "b2241ce412f87da77af163fc5b4c1b26840552cd"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve generated_group_minimal generated_group_prop_included generated_group_prop_rev: algebra.",
            "VernacHints",
            "047f281d67519a3a1e5e7d05fb406be460c8f98c"
        ]
    ],
    "proofs": [
        {
            "name": "generated_group_minimal",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros G A H H' x H'0; try assumption.",
                        "VernacExtend",
                        "a6a15997a68e802dae3b278c81468f697ceed626"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros x0; clear H'0.",
                        "VernacExtend",
                        "a8c4c17923dd4f6d4b74b8bb29e490c53e497c7f"
                    ]
                },
                {
                    "command": [
                        "generalize x; clear x.",
                        "VernacExtend",
                        "3a730666dcffe77922ab24fe4249a5512fcfd603"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "intros c; try assumption.",
                        "VernacExtend",
                        "8b3d69310539aa4cc67e225e861c19a1822a8a1c"
                    ]
                },
                {
                    "command": [
                        "elim c.",
                        "VernacExtend",
                        "971990f3c17a330620f8173652263542ab376292"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros y subtype_prf x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
                        "VernacExtend",
                        "3247b513c70907b3b458971f1aa3d997c30fa9a9"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with y; auto with algebra.",
                        "VernacExtend",
                        "a96ecfe6d4f87e02909cce250c1293c1a4089f55"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 f0 H'1 x H'2; elim H'2; intros H'3 H'4; try exact H'4; clear H'2.",
                        "VernacExtend",
                        "ad5a972c86ee11baac1117beec383ff45bcce388"
                    ]
                },
                {
                    "command": [
                        "simpl in H'4.",
                        "VernacExtend",
                        "5cb40b109024d2f0cafeb9067e282f649f21f905"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (sgroup_law G (FG_lift_fun (inj_part A) f) (FG_lift_fun (inj_part A) f0)); auto with algebra.",
                        "VernacExtend",
                        "6b8549f1cd56745f90f180db15f2526471aec022"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; elim H'0; intros H'1 H'2; try exact H'2; clear H'0.",
                        "VernacExtend",
                        "257fb14bfa84a809dca947228611ae53c2805d48"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (monoid_unit G); auto with algebra.",
                        "VernacExtend",
                        "fd4ebb7849d2018353bf9d9080b579b24bde36a1"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 x H'1; try assumption.",
                        "VernacExtend",
                        "a504495d3114b3abfbe33ceb44e5fe6208c66247"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros H'2 H'3; simpl in H'3; clear H'1.",
                        "VernacExtend",
                        "16fe943e7c31ad34937c1624572d7710fdfdbc63"
                    ]
                },
                {
                    "command": [
                        "apply in_part_comp_l with (group_inverse G (FG_lift_fun (inj_part A) f)); auto with algebra.",
                        "VernacExtend",
                        "9fafc2d0c915a83ffb41c605ffb48fd56cd687e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_group_prop_included",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold included in |- *.",
                        "VernacExtend",
                        "49d47da082bc436033ab68582d7a85f3cb0b6b75"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros G A x H'; try assumption.",
                        "VernacExtend",
                        "ecc7cfa1891cf40b2425451ca6cbb7bf0ac0d011"
                    ]
                },
                {
                    "command": [
                        "exists (Var (V:=A) (Build_subtype (E:=G) (P:=A) (subtype_elt:=x) H')); split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "87a4ee5a0a887174dd198092e173986106c70e24"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_group_prop",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "intros G A y H'; try assumption.",
                        "VernacExtend",
                        "d6286890b83a220fd4b06f3d9146ff51b57e6314"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x E; elim E; intros H'0 H'1; try exact H'1; clear E H'.",
                        "VernacExtend",
                        "78c6776f3c6ba50defdaa65b65099fc2c90f101d"
                    ]
                },
                {
                    "command": [
                        "exists x; try assumption.",
                        "VernacExtend",
                        "a251c410f0ab72130a5a312ded511c093841a93c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "generated_group_prop_rev",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros G A y H'; try assumption.",
                        "VernacExtend",
                        "d6286890b83a220fd4b06f3d9146ff51b57e6314"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros x E; try exact E; clear H'.",
                        "VernacExtend",
                        "8a1f4131612f73c2a8e90cc93567b552b04480d0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with algebra.",
                        "VernacExtend",
                        "d6b9b4fa1f9e16b197ca7f795deb2bc736dbeac5"
                    ]
                },
                {
                    "command": [
                        "exists x; split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "b2241ce412f87da77af163fc5b4c1b26840552cd"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}