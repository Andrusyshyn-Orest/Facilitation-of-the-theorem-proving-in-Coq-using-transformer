{
    "filename": "multiset.v",
    "coq_project": "finmap",
    "vernac_cmds": [
        [
            "From mathcomp Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "0e1e33a573bcf12fc2bd7da6fda77aa847cc29b7"
        ],
        [
            "From mathcomp Require Import choice path finset finfun fintype bigop.",
            "VernacRequire",
            "0aba4b35ec900794ae1db74ad226accd892fc402"
        ],
        [
            "Require Import finmap.",
            "VernacRequire",
            "9db6818c759a8debab7dc4aedb497370395cf831"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Lemma sumn_map I (f : I -> nat) s : sumn [seq f i | i <- s] = \\sum_(i <- s) f i.",
            "VernacStartTheoremProof",
            "08ff2fc1aef11f462e5bb9a1116a7de3bab3af37"
        ],
        [
            "by elim: s => [|i s IHs] in f *; rewrite ?(big_nil, big_cons) //= IHs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumn_filter s P : sumn [seq i <- s | P i] = \\sum_(i <- s | P i) i.",
            "VernacStartTheoremProof",
            "5c63b761fa53b6d017387df13aafd1b9ee949ff8"
        ],
        [
            "by rewrite -big_filter -sumn_map map_id.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumn_map_filter I s (f : I -> nat) P : sumn [seq f i | i <- s & P i] = \\sum_(i <- s | P i) f i.",
            "VernacStartTheoremProof",
            "38254bfc484b4cbe5f9de6855f11138c209b923e"
        ],
        [
            "by rewrite sumn_map big_filter.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Delimit Scope mset_scope with mset.",
            "VernacDelimiters",
            "4ce7f8871b08331fa96083a491742cb1c284685a"
        ],
        [
            "Local Open Scope fset_scope.",
            "VernacOpenCloseScope",
            "6bfb269b0288749b21ee3f415c31e0547d83a630"
        ],
        [
            "Local Open Scope fmap_scope.",
            "VernacOpenCloseScope",
            "6931f8da750d01452bc1d5b8d70d3b9bd5f8d313"
        ],
        [
            "Local Open Scope mset_scope.",
            "VernacOpenCloseScope",
            "ca43c82c8302d97ab45c727716780500ad6953e3"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Definition multiset (T : choiceType) := {fsfun T -> nat with 0}.",
            "VernacDefinition",
            "318d5e91336fcd467df47cf75c32f6a2c6e5b0d8"
        ],
        [
            "Definition multiset_of (T : choiceType) of phant T := @multiset T.",
            "VernacDefinition",
            "051849a9e78af4959718db43c1fe238ae5f5689b"
        ],
        [
            "Notation \"'{mset' T }\" := (@multiset_of _ (Phant T)) (format \"'{mset' T }\") : mset_scope.",
            "VernacNotation",
            "3452a8c4a07836c631da1a36ca74371cb48f69de"
        ],
        [
            "Notation \"[ 'mset[' key ] x 'in' aT => F ]\" := ([fsfun[key] x in aT => F] : {mset _}) (at level 0, x ident, only parsing) : mset_scope.",
            "VernacNotation",
            "96b2c166a7d8611316f6d6993e16ab5a497e201c"
        ],
        [
            "Notation \"[ 'mset' x 'in' aT => F ]\" := ([fsfun x in aT => F] : {mset _}) (at level 0, x ident, only parsing) : mset_scope.",
            "VernacNotation",
            "3d42be8159b27aba253a6c069e3a3bee69162436"
        ],
        [
            "Notation \"[ 'm' 'set' x 'in' aT => F ]\" := ([fsfun[_] x in aT => F] : {mset _}) (at level 0, x ident, format \"[ 'm' 'set' x 'in' aT => F ]\") : mset_scope.",
            "VernacNotation",
            "da660228eebad0d16b66266efee3f1a2944d8493"
        ],
        [
            "Identity Coercion multiset_multiset_of : multiset_of >-> multiset.",
            "VernacIdentityCoercion",
            "679e24b0c52b7b7f36dcfa06c9c666582b942216"
        ],
        [
            "Notation enum_mset_def A := (flatten [seq nseq (A%mset x) x | x <- finsupp A%mset]).",
            "VernacSyntacticDefinition",
            "fbd5d126343aeb614a806cfebca793e7124aaacc"
        ],
        [
            "Module Type EnumMsetSig.",
            "VernacDeclareModuleType",
            "a776b04ccb7203edd2dd0b4117cb022faf083c86"
        ],
        [
            "Axiom f : forall K, multiset K -> seq K.",
            "VernacAssumption",
            "db43de94463a58b1344f9fcf868d8f770465eaff"
        ],
        [
            "Axiom E : f = (fun K (A : multiset K) => enum_mset_def A).",
            "VernacAssumption",
            "b051f424f64a6cfc6a01b90a99e22e54c1967d3f"
        ],
        [
            "End EnumMsetSig.",
            "VernacEndSegment",
            "b5d171a880dc0e3736ecfb697c18a443a24ba9a1"
        ],
        [
            "Module EnumMset : EnumMsetSig.",
            "VernacDefineModule",
            "c8acd763e1c049d937edb6794279e1aaf0b4f451"
        ],
        [
            "Definition f K (A : multiset K) := enum_mset_def A.",
            "VernacDefinition",
            "83b8a0e1b879c9af56b124dcaff269d851a8963b"
        ],
        [
            "Definition E := (erefl f).",
            "VernacDefinition",
            "e8695176ab4e7a7608d95097f11ad54a0d3476c9"
        ],
        [
            "End EnumMset.",
            "VernacEndSegment",
            "0132254d7ed00da508503d294b99d94d7aed4b0b"
        ],
        [
            "Notation enum_mset := EnumMset.f.",
            "VernacSyntacticDefinition",
            "072fee264325731923c7f7715e13d5105b2f5ac0"
        ],
        [
            "Coercion enum_mset : multiset >-> seq.",
            "VernacCoercion",
            "ea3b4e8e0655896b714ab106339f1d32506c68fc"
        ],
        [
            "Canonical enum_mset_unlock := Unlockable EnumMset.E.",
            "VernacDefinition",
            "ecb947d9cc7f6ed65bc89229a78a78b543adb52f"
        ],
        [
            "Canonical multiset_predType (K : choiceType) := Eval hnf in mkPredType (fun (A : multiset K) a => a \\in enum_mset A).",
            "VernacDefinition",
            "d4a05d122d916f14c4bb09ec2e058b397d3f4829"
        ],
        [
            "Canonical mset_finpredType (T: choiceType) := mkFinPredType (multiset T) (fun A => undup (enum_mset A)) (fun _ => undup_uniq _) (fun _ _ => mem_undup _ _).",
            "VernacDefinition",
            "a821ffc711edc3586d3bbbe1ff70a3176add695e"
        ],
        [
            "Section MultisetOps.",
            "VernacBeginSection",
            "ebcc85367471d132b143a5cec9045170ec4e5671"
        ],
        [
            "Context {K : choiceType}.",
            "VernacContext",
            "aacffcea740d1a7511ed1b443c4daa942fbf97a9"
        ],
        [
            "Implicit Types (a b c : K) (A B C D : {mset K}) (s : seq K).",
            "VernacReserve",
            "f64c99bd8243b6b09dc75b57938ce6bdeec729b2"
        ],
        [
            "Definition mset0 : {mset K} := [fsfun].",
            "VernacDefinition",
            "16af71d22ae1c8c4ae7d0545724320fd3a10f738"
        ],
        [
            "Fact msetn_key : unit.",
            "VernacStartTheoremProof",
            "189da8a4862185244ca0e0c1b1165c167b6aa4c6"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition msetn n a := [mset[msetn_key] x in [fset a] => n].",
            "VernacDefinition",
            "916dfd475c8fc3ebe9a511efcf5b35362642076d"
        ],
        [
            "Fact seq_mset_key : unit.",
            "VernacStartTheoremProof",
            "1932e14124369035a88333c2f84a6a5c5f8cbf24"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition seq_mset (s : seq K) := [mset[seq_mset_key] x in [fset x in s] => count (pred1 x) s].",
            "VernacDefinition",
            "865f9253b25c3c93aeea7858e0e21ef7ad3417ad"
        ],
        [
            "Fact msetU_key : unit.",
            "VernacStartTheoremProof",
            "4b57541f28a3412954860875b55842ca94aa923e"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition msetU A B := [mset[msetU_key] x in finsupp A `|` finsupp B => maxn (A x) (B x)].",
            "VernacDefinition",
            "8b189987ce5c6fc306ee55da72185a94950464d9"
        ],
        [
            "Fact msetI_key : unit.",
            "VernacStartTheoremProof",
            "f7314c2db356853950445e506452fae14087187d"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition msetI A B := [mset[msetI_key] x in finsupp A `|` finsupp B => minn (A x) (B x)].",
            "VernacDefinition",
            "44cd5349661e3d334df206fd60cbc86a6679af3c"
        ],
        [
            "Fact msetD_key : unit.",
            "VernacStartTheoremProof",
            "085fe81d927d1906868e0eddd7268da8394240da"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition msetD A B := [mset[msetD_key] x in finsupp A `|` finsupp B => A x + B x].",
            "VernacDefinition",
            "293a9dfa47445c54c10dfd829c75138da71162e7"
        ],
        [
            "Fact msetB_key : unit.",
            "VernacStartTheoremProof",
            "172d50d4d7ff1e5e66238ede571aba110e3ba769"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition msetB A B := [mset[msetB_key] x in finsupp A `|` finsupp B => A x - B x].",
            "VernacDefinition",
            "e943e5b78163da2362ada14b83aa64fc4c7a761a"
        ],
        [
            "Fact msetM_key : unit.",
            "VernacStartTheoremProof",
            "613dd428816672705ef62c9ba22f55258edc81ed"
        ],
        [
            "exact: tt.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition msetM A B := [mset[msetM_key] x in finsupp A `*` finsupp B => A x.1 * B x.2].",
            "VernacDefinition",
            "f0b789f8d83d7d3f3000c9fdd2a104b889294abd"
        ],
        [
            "Definition msubset A B := [forall x : finsupp A, A (val x) <= B (val x)].",
            "VernacDefinition",
            "6ae3608583d1b7d09eda28176a182b5b694debb0"
        ],
        [
            "Definition mproper A B := msubset A B && ~~ msubset B A.",
            "VernacDefinition",
            "f577cd728e596777211991b4618f1b8ca2dfc9cf"
        ],
        [
            "Definition mdisjoint A B := (msetI A B == mset0).",
            "VernacDefinition",
            "db8bfb8732f39b1cbcd3c6c892659cbb52dd6d26"
        ],
        [
            "End MultisetOps.",
            "VernacEndSegment",
            "e1f611a26ab4b17b08cd197fd2d98c554d57db1b"
        ],
        [
            "Notation \"[ 'mset' a ]\" := (msetn 1 a) (at level 0, a at level 99, format \"[ 'mset' a ]\") : mset_scope.",
            "VernacNotation",
            "a724cabcabba06e54a5b675a7c7136a401213fc5"
        ],
        [
            "Notation \"[ 'mset' a : T ]\" := [mset (a : T)] (at level 0, a at level 99, format \"[ 'mset' a : T ]\") : mset_scope.",
            "VernacNotation",
            "6ca2618ac37963934dec763db3023563dc3e3527"
        ],
        [
            "Notation \"A `|` B\" := (msetU A B) : mset_scope.",
            "VernacNotation",
            "c964e47d0f2ce5905f2e8e7b10987dfd38dddad8"
        ],
        [
            "Notation \"A `+` B\" := (msetD A B) : mset_scope.",
            "VernacNotation",
            "f75e0bda3ca936012102240feee6cafeba3051ba"
        ],
        [
            "Notation \"A `\\` B\" := (msetB A B) : mset_scope.",
            "VernacNotation",
            "8ae16e42bb22030c07b5502921bbb2912b32aac3"
        ],
        [
            "Notation \"A `\\ a\" := (A `\\` [mset a]) : mset_scope.",
            "VernacNotation",
            "0463c101105fa25e33964040f6621ce5f798bf5b"
        ],
        [
            "Notation \"a |` A\" := ([mset (a)] `|` A) : mset_scope.",
            "VernacNotation",
            "9995b51c4df847ba281a701995dee60b0e68fef5"
        ],
        [
            "Notation \"a +` A\" := ([mset (a)] `+` A) : mset_scope.",
            "VernacNotation",
            "d4366b794aa40412fcc1a750cee9f7fb4ba8efee"
        ],
        [
            "Notation \"A `*` B\" := (msetM A B) : mset_scope.",
            "VernacNotation",
            "234aa6a86a9ee10eca331fa4e5be914823e7d862"
        ],
        [
            "Notation \"A `<=` B\" := (msubset A B) (at level 70, no associativity) : mset_scope.",
            "VernacNotation",
            "b536a65c7cc532a0c43619670755aabd0c602fa7"
        ],
        [
            "Notation \"A `<` B\" := (mproper A B) (at level 70, no associativity) : mset_scope.",
            "VernacNotation",
            "59b126a51bac4484abb9c4a8a5936c6632a13b35"
        ],
        [
            "Notation \"[ 'mset' a1 ; a2 ; .. ; an ]\" := (msetD .. (a1 +` (msetn 1 a2)) .. (msetn 1 an)) (at level 0, a1 at level 99, format \"[ 'mset' a1 ; a2 ; .. ; an ]\") : mset_scope.",
            "VernacNotation",
            "be290edab434288470df3e8037e0eb0df460138b"
        ],
        [
            "Notation \"A `&` B\" := (msetI A B) : mset_scope.",
            "VernacNotation",
            "1e1b9d66a067709dba4f5e9f77ef1e779e2b8858"
        ],
        [
            "Section MSupp.",
            "VernacBeginSection",
            "b54228341a3e2a9a1b032518e5b4198d7d265b22"
        ],
        [
            "Context {K : choiceType}.",
            "VernacContext",
            "aacffcea740d1a7511ed1b443c4daa942fbf97a9"
        ],
        [
            "Implicit Types (a b c : K) (A B C D : {mset K}) (s : seq K).",
            "VernacReserve",
            "f64c99bd8243b6b09dc75b57938ce6bdeec729b2"
        ],
        [
            "Lemma enum_msetE a A : (a \\in A) = (a \\in flatten [seq nseq (A x) x | x <- finsupp A]).",
            "VernacStartTheoremProof",
            "ed6d93a31576dd3960723482bdb1751f4014f40d"
        ],
        [
            "by transitivity (a \\in enum_mset A); rewrite // unlock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msuppE a A : (a \\in finsupp A) = (a \\in A).",
            "VernacStartTheoremProof",
            "33c33b176de41ca340a48002f1117ddcc7044233"
        ],
        [
            "rewrite enum_msetE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply/idP/flattenP => [aA|/=[_ /mapP[x xA -> /nseqP[->//]]]].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "exists (nseq (A a) a); first by apply/mapP; exists a.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/nseqP; split=> //; rewrite lt0n -mem_finsupp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MSupp.",
            "VernacEndSegment",
            "51ed4b0bb3df6b52e058fa8262b54a789709f78b"
        ],
        [
            "Section MSetTheory.",
            "VernacBeginSection",
            "66b5111fec47a8ab4ba707285aa3dbe341c1532e"
        ],
        [
            "Context {K : choiceType}.",
            "VernacContext",
            "aacffcea740d1a7511ed1b443c4daa942fbf97a9"
        ],
        [
            "Implicit Types (a b c : K) (A B C D : {mset K}) (s : seq K).",
            "VernacReserve",
            "f64c99bd8243b6b09dc75b57938ce6bdeec729b2"
        ],
        [
            "Lemma msetP {A B} : A =1 B <-> A = B.",
            "VernacStartTheoremProof",
            "fc9d3695b7be27b8d6c1f8b8847d34d3ba8c2a82"
        ],
        [
            "exact: fsfunP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_neq0 a A : (A a != 0) = (a \\in A).",
            "VernacStartTheoremProof",
            "8c5c1f4a48a01b275e7dde95a7dc02aa54873c30"
        ],
        [
            "by rewrite -msuppE mem_finsupp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_mset a A : (a \\in A) = (A a > 0).",
            "VernacStartTheoremProof",
            "d930859ba93f302d2f76260e40df0848dce7c7d8"
        ],
        [
            "by rewrite -mset_neq0 lt0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_eq0 a A : (A a == 0) = (a \\notin A).",
            "VernacStartTheoremProof",
            "7b955ee89af87ea0bcb8a90dda6128f0b44da318"
        ],
        [
            "by rewrite -mset_neq0 negbK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_eq0P {a A} : reflect (A a = 0) (a \\notin A).",
            "VernacStartTheoremProof",
            "1e1ad1ef407b92c804624aa0149141aafa96257d"
        ],
        [
            "by rewrite -mset_eq0; apply: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_gt0 a A : (A a > 0) = (a \\in A).",
            "VernacStartTheoremProof",
            "9a239c9915e726ecced7361c14158baf5ffef0a0"
        ],
        [
            "by rewrite -in_mset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_eqP {A B} : reflect (A =1 B) (A == B).",
            "VernacStartTheoremProof",
            "f3664c83649edaba20f06621d5aaf280b7634be6"
        ],
        [
            "exact: (equivP eqP (iff_sym msetP)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset0E a : mset0 a = 0.",
            "VernacStartTheoremProof",
            "b35e56215633916302afb3f719cc3498c91b2da5"
        ],
        [
            "by rewrite /mset0 fsfunE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetnE n a b : (msetn n a) b = if b == a then n else 0.",
            "VernacStartTheoremProof",
            "e9cababaf3c9ac134b8b31faf996c6b99920f525"
        ],
        [
            "by rewrite fsfunE inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetnxx n a : (msetn n a) a = n.",
            "VernacStartTheoremProof",
            "bfb2fd0f6fd367eb902be44548d156d293c9b851"
        ],
        [
            "by rewrite msetnE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetE2 A B a : ((A `+` B) a = A a + B a) * ((A `|` B) a = maxn (A a) (B a)) * ((A `&` B) a = minn (A a) (B a)) * ((A `\\` B) a = (A a) - (B a)).",
            "VernacStartTheoremProof",
            "f18b2cbb981d3c7445d6fe77a673377f7ee47741"
        ],
        [
            "rewrite !fsfunE !inE !msuppE -!mset_neq0; case: ifPn => //.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite negb_or !negbK => /andP [/eqP-> /eqP->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma count_mem_mset a A : count_mem a A = A a.",
            "VernacStartTheoremProof",
            "b612dcacc4ac3efa085cf2bec9bcf4758665c3ca"
        ],
        [
            "rewrite unlock count_flatten sumn_map big_map.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (eq_bigr _ (fun _ _ => esym (sum1_count _ _))) /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (eq_bigr _ (fun _ _ => big_nseq_cond _ _ _ _ _ _)) /= -big_mkcond /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have [aNA|aA] := finsuppP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite big1_fset // => i iA /eqP eq_ia; rewrite -eq_ia iA in aNA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite big_fset_condE/= (big_fsetD1 a) ?inE ?eqxx ?andbT //= iter_addn mul1n.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (_ : (_ `\\ _)%fset = fset0) ?big_seq_fset0 ?addn0//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/fsetP=> i; rewrite !inE; case: (i == a); rewrite ?(andbF, andbT).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_undup_mset A : perm_eq (undup A) (finsupp A).",
            "VernacStartTheoremProof",
            "1ebe047f9b24a7679f95a235199f8d4a97bf8a59"
        ],
        [
            "apply: uniq_perm_eq; rewrite ?undup_uniq // => a.",
            "VernacExtend",
            "5fce7e5361004176d6b434b36b4623c7387f70bb"
        ],
        [
            "by rewrite mem_undup msuppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section big_com.",
            "VernacBeginSection",
            "aaff66ad7d55bfcda2e248bbcf9f14914c0441b3"
        ],
        [
            "Variables (R : Type) (idx : R) (op : Monoid.com_law idx).",
            "VernacAssumption",
            "96cda60bdf0f3b3e90a3cfd20acc0f3b3ec771cc"
        ],
        [
            "Implicit Types (X : {mset K}) (P : pred K) (F : K -> R).",
            "VernacReserve",
            "013536ce40131ea9120ece0f71cd26fc414e0b7d"
        ],
        [
            "Lemma big_mset X P F : \\big[op/idx]_(i <- X | P i) F i = \\big[op/idx]_(i <- finsupp X | P i) iterop (X i) op (F i) idx.",
            "VernacStartTheoremProof",
            "0bbd28ca86e7262db97406c4e7e5e64abd47b64d"
        ],
        [
            "rewrite [in RHS](eq_big_perm (undup X)) 1?perm_eq_sym ?perm_undup_mset//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -[in LHS]big_undup_iterop_count; apply: eq_bigr => i _.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite count_mem_mset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End big_com.",
            "VernacEndSegment",
            "4d37e00e48e2830bca1c29c202faa158e4235a16"
        ],
        [
            "Lemma sum_mset (X : {mset K}) (P : pred K) (F : K -> nat) : \\sum_(i <- X | P i) F i = \\sum_(i <- finsupp X | P i) X i * F i.",
            "VernacStartTheoremProof",
            "2eff101039e3f1601696a17f18447c7424370b0b"
        ],
        [
            "rewrite big_mset; apply: eq_bigr => i _ //.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by rewrite Monoid.iteropE iter_addn addn0 mulnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prod_mset (X : {mset K}) (P : pred K) (F : K -> nat) : \\prod_(i <- X | P i) F i = \\prod_(i <- finsupp X | P i) F i ^ X i.",
            "VernacStartTheoremProof",
            "2100803475350f140daa0c3239d1d378f6d35b93"
        ],
        [
            "by rewrite big_mset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_seqE s a : (seq_mset s) a = count_mem a s.",
            "VernacStartTheoremProof",
            "1979beb4f013ff72c9007ce762c8d64e75ccaeb3"
        ],
        [
            "by rewrite fsfunE inE/=; case: ifPn => // /count_memPn ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perm_eq_seq_mset s : perm_eq (seq_mset s) s.",
            "VernacStartTheoremProof",
            "5ccfd9850f71135105c382909db5c52739b81da7"
        ],
        [
            "by apply/allP => a _ /=; rewrite count_mem_mset mset_seqE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma seq_mset_id A : seq_mset A = A.",
            "VernacStartTheoremProof",
            "baae32579ae8e2ac09f369f299502997c8c5ac6e"
        ],
        [
            "by apply/msetP=> a; rewrite mset_seqE count_mem_mset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_seq_msetP s s' : reflect (seq_mset s = seq_mset s') (perm_eq s s').",
            "VernacStartTheoremProof",
            "a110644d62e0a490b7db3d195a05cc0f6c64caf0"
        ],
        [
            "apply: (iffP idP) => [/perm_eqP perm_ss'|eq_ss'].",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by apply/msetP => a; rewrite !mset_seqE perm_ss'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply/allP => a _ /=; rewrite -!mset_seqE eq_ss'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetME A B (u : K * K) : (A `*` B) u = A u.1 * B u.2.",
            "VernacStartTheoremProof",
            "323279b04c100604c30cab6cc92f87f1a39c9595"
        ],
        [
            "rewrite !fsfunE inE; case: ifPn => //=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite negb_and !memNfinsupp => /orP [] /eqP->; rewrite ?muln0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1DE a A b : (a +` A) b = (b == a) + A b.",
            "VernacStartTheoremProof",
            "17399549fa865d883fcac9c9752e066cdd6aaadb"
        ],
        [
            "by rewrite msetE2 msetnE; case: (b == a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1UE a A b : (a |` A) b = maxn (b == a) (A b).",
            "VernacStartTheoremProof",
            "b3928e50faf0b217e359a50e6f6e98ccf7844555"
        ],
        [
            "by rewrite msetE2 msetnE; case: (b == a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetB1E a A b : (A `\\ a) b = (A b) - (b == a).",
            "VernacStartTheoremProof",
            "f7d2dc7d63f3f003aec215ee0a48ded55dd83f54"
        ],
        [
            "by rewrite msetE2 msetnE; case: (b == a).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let msetE := (mset0E, msetE2, msetnE, msetnxx, mset1DE, mset1UE, msetB1E, mset_seqE, msetME).",
            "VernacDefinition",
            "6dd403362ad2d121ae2bf29377ca524ba2625530"
        ],
        [
            "Lemma in_mset0 a : a \\in mset0 = false.",
            "VernacStartTheoremProof",
            "bed836a989d037297208f1fd7b5dcf1280e206d9"
        ],
        [
            "by rewrite in_mset !msetE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetn n a' a : a \\in msetn n a' = (n > 0) && (a == a').",
            "VernacStartTheoremProof",
            "642c686f3606072bc21d3c01cfb2bfd8702fbbed"
        ],
        [
            "by rewrite in_mset msetE; case: (a == a'); rewrite ?andbT ?andbF.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_mset1 a' a : a \\in [mset a'] = (a == a').",
            "VernacStartTheoremProof",
            "fda22e6d119ec399702cdc604231afff6d2c6969"
        ],
        [
            "by rewrite in_msetn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetD A B a : (a \\in A `+` B) = (a \\in A) || (a \\in B).",
            "VernacStartTheoremProof",
            "e4aaadffd27a49b43eb1f95f6d8846de32db5d9d"
        ],
        [
            "by rewrite !in_mset !msetE addn_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetU A B a : (a \\in A `|` B) = (a \\in A) || (a \\in B).",
            "VernacStartTheoremProof",
            "75fd9af59cc96cb74a43a04bea4b2d45c33c68d3"
        ],
        [
            "by rewrite !in_mset !msetE leq_max.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetDU A B a : (a \\in A `+` B) = (a \\in A `|` B).",
            "VernacStartTheoremProof",
            "5372d7b537874207a30ba862d5c9e52cca81f373"
        ],
        [
            "by rewrite in_msetU in_msetD.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetI A B a : (a \\in A `&` B) = (a \\in A) && (a \\in B).",
            "VernacStartTheoremProof",
            "9da5166c89039105449614e5e7037e0f0de09487"
        ],
        [
            "by rewrite !in_mset msetE leq_min.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetB A B a : (a \\in A `\\` B) = (B a < A a).",
            "VernacStartTheoremProof",
            "c0d2ae2cdce181fc3c6c8064ea21479c0b6ad8ad"
        ],
        [
            "by rewrite -mset_neq0 msetE subn_eq0 ltnNge.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_mset1U a' A a : (a \\in a' |` A) = (a == a') || (a \\in A).",
            "VernacStartTheoremProof",
            "818e005db124abf725545861a6758cb05ac0514c"
        ],
        [
            "by rewrite in_msetU in_mset msetE; case: (_ == _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_mset1D a' A a : (a \\in a' +` A) = (a == a') || (a \\in A).",
            "VernacStartTheoremProof",
            "c99a16be773b081f07221b7022c514abd10682ae"
        ],
        [
            "by rewrite in_msetDU in_mset1U.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetB1 A b a : (a \\in A `\\ b) = ((a == b) ==> (A a > 1)) && (a \\in A).",
            "VernacStartTheoremProof",
            "f3d2aa555653c2bc214a10f3476ab79948406f0a"
        ],
        [
            "by rewrite in_msetB msetE in_mset; case: (_ == _); rewrite -?geq_max.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_msetM A B (u : K * K) : (u \\in A `*` B) = (u.1 \\in A) && (u.2 \\in B).",
            "VernacStartTheoremProof",
            "4e766aa151475d692867f5ff9fb807806adc25b6"
        ],
        [
            "by rewrite -!msuppE !mem_finsupp msetE muln_eq0 negb_or.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition in_msetE := (in_mset0, in_msetn, in_msetB1, in_msetU, in_msetI, in_msetD, in_msetM).",
            "VernacDefinition",
            "3601cc4adaa33545c5738eb7b53415f29b9f5499"
        ],
        [
            "Let inE := (inE, in_msetE, (@msuppE K)).",
            "VernacDefinition",
            "150226283f4d7e2d71f82d6fe276ceded07275a6"
        ],
        [
            "Lemma enum_mset0 : mset0 = [::] :> seq K.",
            "VernacStartTheoremProof",
            "6da65661f50d131a6f31eeedb916e91704543d42"
        ],
        [
            "by rewrite unlock finsupp0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetn0 (a : K) : msetn 0 a = mset0.",
            "VernacStartTheoremProof",
            "90c53b2baabcc83525a3f6aab1c8d2d1a14e547f"
        ],
        [
            "by apply/msetP=> i; rewrite !msetE if_same.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finsupp_msetn n a : finsupp (msetn n a) = if n > 0 then [fset a] else fset0.",
            "VernacStartTheoremProof",
            "1d714350aa39b1228c4f8fb8c3fce47841c9d1e0"
        ],
        [
            "by apply/fsetP => i; rewrite !inE; case: ifP => //=; rewrite inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma enum_msetn n a : msetn n a = nseq n a :> seq K.",
            "VernacStartTheoremProof",
            "7a34ff7529efb411e300022d3f7049444ae68c19"
        ],
        [
            "case: n => [|n]; first by rewrite msetn0 /= enum_mset0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite unlock finsupp_msetn /= enum_fsetE /= enum_fset1 /= cats0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite msetE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section big.",
            "VernacBeginSection",
            "8c8ddc5deba6250699908389db069f0fd2f409ea"
        ],
        [
            "Variables (R : Type) (idx : R) (op : Monoid.law idx).",
            "VernacAssumption",
            "8e9c97dba8a47da80a9ec3763d739835393ce0d9"
        ],
        [
            "Implicit Types (X : {mset K}) (P : pred K) (F : K -> R).",
            "VernacReserve",
            "013536ce40131ea9120ece0f71cd26fc414e0b7d"
        ],
        [
            "Lemma big_mset0 P F : \\big[op/idx]_(i <- mset0 | P i) F i = idx.",
            "VernacStartTheoremProof",
            "6e74b6eb0f49fe372bddff88096753ae907a255e"
        ],
        [
            "by rewrite enum_mset0 big_nil.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma big_msetn n a P F : \\big[op/idx]_(i <- msetn n a | P i) F i = if P a then iterop n op (F a) idx else idx.",
            "VernacStartTheoremProof",
            "b8a4050475a0f987ab72dbd27bd54c630ed77847"
        ],
        [
            "by rewrite enum_msetn big_nseq_cond Monoid.iteropE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End big.",
            "VernacEndSegment",
            "d6c702a34d326eb91f68ebb6e562be445c6ee88d"
        ],
        [
            "Lemma msetDC (A B : {mset K}) : A `+` B = B `+` A.",
            "VernacStartTheoremProof",
            "e088843c67556f84ff7cb6d94b6ea976506619fd"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE addnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIC (A B : {mset K}) : A `&` B = B `&` A.",
            "VernacStartTheoremProof",
            "b075b226f4d572215fca4ad4d48f6b43eb83be70"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE minnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUC (A B : {mset K}) : A `|` B = B `|` A.",
            "VernacStartTheoremProof",
            "18de326274fccf6bf3b8d24b1541af2810fb1c4b"
        ],
        [
            "by apply/msetP => a; rewrite !msetE maxnC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset0I A : mset0 `&` A = mset0.",
            "VernacStartTheoremProof",
            "eda280144ada19f562f018ccc2c8079f61e788bd"
        ],
        [
            "by apply/msetP => x; rewrite !msetE min0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetI0 A : A `&` mset0 = mset0.",
            "VernacStartTheoremProof",
            "4ccfa84344e82abcfe7161f1db88ce15fefa4fdd"
        ],
        [
            "by rewrite msetIC mset0I.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIA A B C : A `&` (B `&` C) = A `&` B `&` C.",
            "VernacStartTheoremProof",
            "0ed0290bc006cc9f04009bd615c1b76a33fdc885"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE minnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetICA A B C : A `&` (B `&` C) = B `&` (A `&` C).",
            "VernacStartTheoremProof",
            "7f4311f5889bb5593c47411fd2956e24991f6a9f"
        ],
        [
            "by rewrite !msetIA (msetIC A).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIAC A B C : A `&` B `&` C = A `&` C `&` B.",
            "VernacStartTheoremProof",
            "bec22824f2d1ab7745c36fa9e733702f3c085158"
        ],
        [
            "by rewrite -!msetIA (msetIC B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIACA A B C D : (A `&` B) `&` (C `&` D) = (A `&` C) `&` (B `&` D).",
            "VernacStartTheoremProof",
            "a13f2e71a54fae3db2e45dc556b5096823fa2bf3"
        ],
        [
            "by rewrite -!msetIA (msetICA B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIid A : A `&` A = A.",
            "VernacStartTheoremProof",
            "9759bd1079448284024c40a4a80a89b8bc381278"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE minnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIIl A B C : A `&` B `&` C = (A `&` C) `&` (B `&` C).",
            "VernacStartTheoremProof",
            "b2f28c84f79579c11739cafe185a5600900a056b"
        ],
        [
            "by rewrite msetIA !(msetIAC _ C) -(msetIA _ C) msetIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIIr A B C : A `&` (B `&` C) = (A `&` B) `&` (A `&` C).",
            "VernacStartTheoremProof",
            "1e1697b6dee4f8d0002daceb954656877399af85"
        ],
        [
            "by rewrite !(msetIC A) msetIIl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset0U A : mset0 `|` A = A.",
            "VernacStartTheoremProof",
            "00dc87eecd8fed31589bced6c6fbe940f63fa1ff"
        ],
        [
            "by apply/msetP => x; rewrite !msetE max0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetU0 A : A `|` mset0 = A.",
            "VernacStartTheoremProof",
            "f579ecf4f9de8414e5e31cc1bd3fb116ddb9ae62"
        ],
        [
            "by rewrite msetUC mset0U.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUA A B C : A `|` (B `|` C) = A `|` B `|` C.",
            "VernacStartTheoremProof",
            "26f1aebbeca5739d6e9bdecb0665ac82458127bb"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE maxnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUCA A B C : A `|` (B `|` C) = B `|` (A `|` C).",
            "VernacStartTheoremProof",
            "b805c5faa848b63be083eb18d4ce8b284adb9265"
        ],
        [
            "by rewrite !msetUA (msetUC B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUAC A B C : A `|` B `|` C = A `|` C `|` B.",
            "VernacStartTheoremProof",
            "264df720a3274daa354c2e367a9e84bebb895a2e"
        ],
        [
            "by rewrite -!msetUA (msetUC B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUACA A B C D : (A `|` B) `|` (C `|` D) = (A `|` C) `|` (B `|` D).",
            "VernacStartTheoremProof",
            "cc6dc73290645755d844997dcbe63018f0530431"
        ],
        [
            "by rewrite -!msetUA (msetUCA B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUid A : A `|` A = A.",
            "VernacStartTheoremProof",
            "13674630df0fffb578da34284ea84b45dd90fc6d"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE maxnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUUl A B C : A `|` B `|` C = (A `|` C) `|` (B `|` C).",
            "VernacStartTheoremProof",
            "9a4b68595fd194824954467e4b9a5bbb44941f86"
        ],
        [
            "by rewrite msetUA !(msetUAC _ C) -(msetUA _ C) msetUid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUUr A B C : A `|` (B `|` C) = (A `|` B) `|` (A `|` C).",
            "VernacStartTheoremProof",
            "e551e78f1269b39f1b74fbcd04f68415f17a3a7b"
        ],
        [
            "by rewrite !(msetUC A) msetUUl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset0D A : mset0 `+` A = A.",
            "VernacStartTheoremProof",
            "ff00ff0ecc174fd9000a0f66bced134aa41076a6"
        ],
        [
            "by apply/msetP => x; rewrite !msetE add0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetD0 A : A `+` mset0 = A.",
            "VernacStartTheoremProof",
            "f8b82c7462bdc5cd98fed0920a789713e55db4ad"
        ],
        [
            "by rewrite msetDC mset0D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDA A B C : A `+` (B `+` C) = A `+` B `+` C.",
            "VernacStartTheoremProof",
            "56a25afc4f9c040efbd50c320fffef926b151530"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE addnA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDCA A B C : A `+` (B `+` C) = B `+` (A `+` C).",
            "VernacStartTheoremProof",
            "fee2b96a990d9ffc735e256bc0a2933d88f5ca97"
        ],
        [
            "by rewrite !msetDA (msetDC B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDAC A B C : A `+` B `+` C = A `+` C `+` B.",
            "VernacStartTheoremProof",
            "bf80b20e4285af484bfc5fd355e1f49b224d37a3"
        ],
        [
            "by rewrite -!msetDA (msetDC B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDACA A B C D : (A `+` B) `+` (C `+` D) = (A `+` C) `+` (B `+` D).",
            "VernacStartTheoremProof",
            "de40d2fdc8a12cd746f4eb4b509c7e7379ebbad6"
        ],
        [
            "by rewrite -!msetDA (msetDCA B).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetU1l x A B : x \\in A -> x \\in A `|` B.",
            "VernacStartTheoremProof",
            "3c5defd0dad877d2540f68b35cb9c850519f0315"
        ],
        [
            "by move=> Ax /=; rewrite inE Ax.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetU1r A b : b \\in A `|` [mset b].",
            "VernacStartTheoremProof",
            "50998ca0d4e7f0e2ba1dd1a760b7eb97065cad1e"
        ],
        [
            "by rewrite !inE eqxx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetB1P x A b : reflect ((x = b -> A x > 1) /\\ x \\in A) (x \\in A `\\ b).",
            "VernacStartTheoremProof",
            "617a336e44931f849e9de72b4843b1a2236f463e"
        ],
        [
            "rewrite !inE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: (iffP andP); first by move=> [/implyP Ax ->]; split => // /eqP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> [Ax ->]; split => //; apply/implyP => /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetB11 b A : (b \\in A `\\ b) = (A b > 1).",
            "VernacStartTheoremProof",
            "eb8636933b7912122e4d6110bef12f1c5c9e6bd3"
        ],
        [
            "by rewrite inE eqxx /= in_mset -geq_max.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetB1K a A : a \\in A -> a +` (A `\\ a) = A.",
            "VernacStartTheoremProof",
            "8757ea50d679645a378c4f6513324afee23accb9"
        ],
        [
            "move=> aA; apply/msetP=> x; rewrite !msetE subnKC //=.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by have [->|//] := altP eqP; rewrite mset_gt0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetD1K a B : (a +` B) `\\ a = B.",
            "VernacStartTheoremProof",
            "5b82f4f731b692504229f74a038849e003e9801d"
        ],
        [
            "by apply/msetP => x; rewrite !msetE addKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetU1K a B : a \\notin B -> (a |` B) `\\ a = B.",
            "VernacStartTheoremProof",
            "7b7d22b2980bfb0ca58188757f5b85acf9f29057"
        ],
        [
            "move=> aB; apply/msetP=> x; rewrite !msetE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "have [->|] := altP eqP; first by rewrite (mset_eq0P _).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite max0n subn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1U1 x B : x \\in x |` B.",
            "VernacStartTheoremProof",
            "fbc88d918fcea87d846f23ab6acb13c8e28dccfe"
        ],
        [
            "by rewrite !inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1D1 x B : x \\in x +` B.",
            "VernacStartTheoremProof",
            "2720d26116414804ab5ab2a4544f2899a8fd5d0d"
        ],
        [
            "by rewrite !inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1Ur x a B : x \\in B -> x \\in a |` B.",
            "VernacStartTheoremProof",
            "49a4b5706de1976729622adc86d0135dba8e1297"
        ],
        [
            "by move=> Bx; rewrite !inE predU1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1Dr x a B : x \\in B -> x \\in a +` B.",
            "VernacStartTheoremProof",
            "8e3ceb1e71421ff7c465d90802238ec6526e4af9"
        ],
        [
            "by move=> Bx; rewrite !inE predU1r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset2P x a b : reflect (x = a \\/ x = b) (x \\in [mset a; b]).",
            "VernacStartTheoremProof",
            "8c8b84d10e781918d39e70a76857a97c3860bc04"
        ],
        [
            "by rewrite !inE; apply: (iffP orP) => [] [] /eqP; intuition.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_mset2 x a b : (x \\in [mset a; b]) = (x == a) || (x == b).",
            "VernacStartTheoremProof",
            "8bd72e024e724751b3b689c029e2dd664b5b43bc"
        ],
        [
            "by rewrite !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset21 a b : a \\in [mset a; b].",
            "VernacStartTheoremProof",
            "e0bb559773040a23af2790fcd273615f929a1bc6"
        ],
        [
            "by rewrite mset1D1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset22 a b : b \\in [mset a; b].",
            "VernacStartTheoremProof",
            "132492f619bc50fc7241658708631e0790ab9ef7"
        ],
        [
            "by rewrite in_mset2 eqxx orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUP x A B : reflect (x \\in A \\/ x \\in B) (x \\in A `|` B).",
            "VernacStartTheoremProof",
            "ea77da12590f22bb4942fa4b72b20a04aa40fe79"
        ],
        [
            "by rewrite !inE; exact: orP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDP x A B : reflect (x \\in A \\/ x \\in B) (x \\in A `+` B).",
            "VernacStartTheoremProof",
            "22b4a55bc18f97cda8ae6ad337da31aa52864c83"
        ],
        [
            "by rewrite !inE; exact: orP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetULVR x A B : x \\in A `|` B -> (x \\in A) + (x \\in B).",
            "VernacStartTheoremProof",
            "4e9eb6baca1bdb30c26d4d76ad238842234acb3e"
        ],
        [
            "by rewrite inE; case: (x \\in A); [left|right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDLVR x A B : x \\in A `+` B -> (x \\in A) + (x \\in B).",
            "VernacStartTheoremProof",
            "2369c49756699ec5afa02f0efd19482900de9442"
        ],
        [
            "by rewrite inE; case: (x \\in A); [left|right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIUr A B C : A `&` (B `|` C) = (A `&` B) `|` (A `&` C).",
            "VernacStartTheoremProof",
            "7e064c19e9953a263e3506267721c20e0325a4d4"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE minn_maxr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIUl A B C : (A `|` B) `&` C = (A `&` C) `|` (B `&` C).",
            "VernacStartTheoremProof",
            "133d86a57b85a8e5e4bd1f5ec33ac755a727d2c4"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE minn_maxl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUIr A B C : A `|` (B `&` C) = (A `|` B) `&` (A `|` C).",
            "VernacStartTheoremProof",
            "3b569dd5f41a0c5a6c0b8de7eb5ec5b4f909abb3"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE maxn_minr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUIl A B C : (A `&` B) `|` C = (A `|` C) `&` (B `|` C).",
            "VernacStartTheoremProof",
            "a6686ea9a0c8f2368b64b554fddb45cee02f428e"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE maxn_minl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUKC A B : (A `|` B) `&` A = A.",
            "VernacStartTheoremProof",
            "4ddfeb6cbc31c85ae906c1177430db827fff475c"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE maxnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUK A B : (B `|` A) `&` A = A.",
            "VernacStartTheoremProof",
            "61ed561e540b506f579602241525108fbd8ef89e"
        ],
        [
            "by rewrite msetUC msetUKC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKUC A B : A `&` (B `|` A) = A.",
            "VernacStartTheoremProof",
            "dccae0065ff0a9fa5660bac760cf1c5764cdaa56"
        ],
        [
            "by rewrite msetIC msetUK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKU A B : A `&` (A `|` B) = A.",
            "VernacStartTheoremProof",
            "b472cb5bb4ecf81d72d6502738a7e64470c33f99"
        ],
        [
            "by rewrite msetIC msetUKC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIKC A B : (A `&` B) `|` A = A.",
            "VernacStartTheoremProof",
            "5b03539905aef00e83e5d90df431afaf5424e79b"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE minnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIK A B : (B `&` A) `|` A = A.",
            "VernacStartTheoremProof",
            "3c3d7ea9164b6e27c3801aad46873856d2808995"
        ],
        [
            "by rewrite msetIC msetIKC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKIC A B : A `|` (B `&` A) = A.",
            "VernacStartTheoremProof",
            "c50218ae0764d9f57025321133c9594075e0329c"
        ],
        [
            "by rewrite msetUC msetIK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKI A B : A `|` (A `&` B) = A.",
            "VernacStartTheoremProof",
            "214bb774ef6b28072e757cb86302dd3635443682"
        ],
        [
            "by rewrite msetIC msetKIC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUKid A B : B `|` A `|` A = B `|` A.",
            "VernacStartTheoremProof",
            "e703dee76bf88a93f7bf5be6aee4728a5fb3a69f"
        ],
        [
            "by rewrite -msetUA msetUid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUKidC A B : A `|` B `|` A = A `|` B.",
            "VernacStartTheoremProof",
            "78d506876eedf1973b61ab55bd425d7ba4a25c29"
        ],
        [
            "by rewrite msetUAC msetUid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKUid A B : A `|` (A `|` B) = A `|` B.",
            "VernacStartTheoremProof",
            "c6860c656b370a981cdbb8c11977e2b239e0159b"
        ],
        [
            "by rewrite msetUA msetUid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKUidC A B : A `|` (B `|` A) = B `|` A.",
            "VernacStartTheoremProof",
            "d119cbe476fdd124bdc2d7d104059f9e2c8b5403"
        ],
        [
            "by rewrite msetUCA msetUid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIKid A B : B `&` A `&` A = B `&` A.",
            "VernacStartTheoremProof",
            "10d08abe8993c67b3cf9a2318a013d943c6aada8"
        ],
        [
            "by rewrite -msetIA msetIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIKidC A B : A `&` B `&` A = A `&` B.",
            "VernacStartTheoremProof",
            "7b6acf8f2e7a8ea82d40817a921c83d17d8918af"
        ],
        [
            "by rewrite msetIAC msetIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKIid A B : A `&` (A `&` B) = A `&` B.",
            "VernacStartTheoremProof",
            "64d79835bb50b6d278a75ed3b3c526be287b3ac8"
        ],
        [
            "by rewrite msetIA msetIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKIidC A B : A `&` (B `&` A) = B `&` A.",
            "VernacStartTheoremProof",
            "c7d8f411a629c27dc3af7359a092283e5b4ae77a"
        ],
        [
            "by rewrite msetICA msetIid.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDIr A B C : A `+` (B `&` C) = (A `+` B) `&` (A `+` C).",
            "VernacStartTheoremProof",
            "712fd4bfaaeaa5caa601d701b4ec804fb1efac19"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE addn_minr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDIl A B C : (A `&` B) `+` C = (A `+` C) `&` (B `+` C).",
            "VernacStartTheoremProof",
            "d54b37190c05ebc6713ef66ffb4873bfb655ed22"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE addn_minl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDKIC A B : (A `+` B) `&` A = A.",
            "VernacStartTheoremProof",
            "99754eddd001ccfeaf2134f668c05222f9cff49c"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE (minn_idPr _) // leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDKI A B : (B `+` A) `&` A = A.",
            "VernacStartTheoremProof",
            "6e52b19da5443f82b3965b6648fdba0d29f99f19"
        ],
        [
            "by rewrite msetDC msetDKIC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKDIC A B : A `&` (B `+` A) = A.",
            "VernacStartTheoremProof",
            "f0dd861cba704c06a1d490a791f81cd4b4bf357e"
        ],
        [
            "by rewrite msetIC msetDKI.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetKDI A B : A `&` (A `+` B) = A.",
            "VernacStartTheoremProof",
            "1e4b32c682e2fcd481da519962359945214b29e1"
        ],
        [
            "by rewrite msetDC msetKDIC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDKB A : cancel (msetD A) (msetB^~ A).",
            "VernacStartTheoremProof",
            "d28044758ffdaa93d853c7115462a42f6c3f1d7c"
        ],
        [
            "by move=> B; apply/msetP => a; rewrite !msetE addKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDKBC A : cancel (msetD^~ A) (msetB^~ A).",
            "VernacStartTheoremProof",
            "9aa9d3a5d77d82d386ea9315fd3e9d10939296e8"
        ],
        [
            "by move=> B; rewrite msetDC msetDKB.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBSKl A B a : ((a +` A) `\\` B) `\\ a = A `\\` B.",
            "VernacStartTheoremProof",
            "77fa9df9bccef7dc21d85efa37fb9a8dbca8bb4b"
        ],
        [
            "apply/msetP=> b; rewrite !msetE; case: ifPn; rewrite ?add0n ?subn0 //.",
            "VernacExtend",
            "b534ea82ca07ffa4e4ca8089ea195fe217157a1c"
        ],
        [
            "by rewrite add1n subn1 subSKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBDl C A B : (C `+` A) `\\` (C `+` B) = A `\\` B.",
            "VernacStartTheoremProof",
            "cb4a124886bec660c558509e03c2b25bb063a4f8"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE subnDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBDr C A B : (A `+` C) `\\` (B `+` C) = A `\\` B.",
            "VernacStartTheoremProof",
            "461e59b84ecfddac5ccd5cdeb8d9ce9921aef251"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE subnDr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBDA A B C : B `\\` (A `+` C) = B `\\` A `\\` C.",
            "VernacStartTheoremProof",
            "7ddfd5b2c6d43633e9d59ee078d31e5e10c311cb"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE subnDA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUE A B C : msetU A B = A `+` (B `\\` A).",
            "VernacStartTheoremProof",
            "8ccd37a4b43f42275663456e5117947d55dbf25f"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE maxnE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetP {A B} : reflect (forall x, A x <= B x) (A `<=` B).",
            "VernacStartTheoremProof",
            "8ffa15aa201f05ed404074f141a1f641536c5dd0"
        ],
        [
            "apply: (iffP forallP)=> // ? x; case: (in_fsetP (finsupp A) x) => //.",
            "VernacExtend",
            "20ec428e50c31e1399aee62c5a532bc8417a4b29"
        ],
        [
            "by rewrite msuppE => /mset_eq0P->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubset_subset {A B} : A `<=` B -> {subset A <= B}.",
            "VernacStartTheoremProof",
            "30b11c8c5472d92b3be19cb8fa064cd9dbf5b332"
        ],
        [
            "by move=> /msubsetP AB x; rewrite !in_mset => ?; exact: (leq_trans _ (AB _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetB_eq0 (A B : {mset K}) : (A `\\` B == mset0) = (A `<=` B).",
            "VernacStartTheoremProof",
            "504d853e4da1cca80a713d090b6aa2443cff5766"
        ],
        [
            "apply/mset_eqP/msubsetP => AB a; by have := AB a; rewrite !msetE -subn_eq0 => /eqP.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubset_refl A : A `<=` A.",
            "VernacStartTheoremProof",
            "0b90cc79f671b28c5054c4bb6e7edcceb75277e0"
        ],
        [
            "exact/msubsetP.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve msubset_refl.",
            "VernacHints",
            "351e41828bfeac1dee301b2a944e933afced1bb4"
        ],
        [
            "Lemma msubset_trans : transitive (@msubset K).",
            "VernacStartTheoremProof",
            "cb1391a8d2da4c7522cf46300099878d4c921db0"
        ],
        [
            "move=> y x z /msubsetP xy /msubsetP yz ; apply/msubsetP => a.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: (leq_trans (xy _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments msubset_trans {C A B} _ _ : rename.",
            "VernacArguments",
            "27ccaec28e5dce1a8e994527521d19a56bb268b8"
        ],
        [
            "Lemma msetUS C A B : A `<=` B -> C `|` A `<=` C `|` B.",
            "VernacStartTheoremProof",
            "181b06ff44eb4bdcd1eb88ee766bc23452c89c9e"
        ],
        [
            "move=> sAB; apply/msubsetP=> x; rewrite !msetE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite geq_max !leq_max leqnn (msubsetP sAB) orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDS C A B : A `<=` B -> C `+` A `<=` C `+` B.",
            "VernacStartTheoremProof",
            "3c10f259a4700a8b38c6bd13b06a80d67ad42c63"
        ],
        [
            "by move=> /msubsetP sAB; apply/msubsetP=> x; rewrite !msetE leq_add2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetSU C A B : A `<=` B -> A `|` C `<=` B `|` C.",
            "VernacStartTheoremProof",
            "8432cebaed738071f412d3a70022be1372355834"
        ],
        [
            "by move=> sAB; rewrite -!(msetUC C) msetUS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetSD C A B : A `<=` B -> A `+` C `<=` B `+` C.",
            "VernacStartTheoremProof",
            "bc344c79c9a87e63fcea51a718d6aae4cccb5a3d"
        ],
        [
            "by move=> sAB; rewrite -!(msetDC C) msetDS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUSS A B C D : A `<=` C -> B `<=` D -> A `|` B `<=` C `|` D.",
            "VernacStartTheoremProof",
            "8f85c4d811bf400d53f0121fd96db1e9b0d1de95"
        ],
        [
            "by move=> /(msetSU B) /msubset_trans sAC /(msetUS C)/sAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDSS A B C D : A `<=` C -> B `<=` D -> A `+` B `<=` C `+` D.",
            "VernacStartTheoremProof",
            "983ba1a0a0ebb4c029ee8c45191cd9f79a5cf851"
        ],
        [
            "by move=> /(msetSD B) /msubset_trans sAC /(msetDS C)/sAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIidPl {A B} : reflect (A `&` B = A) (A `<=` B).",
            "VernacStartTheoremProof",
            "cb928ed6443a3f37ec3d7cff3dc40338bb7bde9d"
        ],
        [
            "apply: (iffP msubsetP) => [?|<- a]; last by rewrite !msetE geq_min leqnn orbT.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/msetP => a; rewrite !msetE (minn_idPl _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIidPr {A B} : reflect (A `&` B = B) (B `<=` A).",
            "VernacStartTheoremProof",
            "19b8366b7a88de5eb36f8791d9aad49d1cf8433a"
        ],
        [
            "by rewrite msetIC; apply: msetIidPl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetIidl A B : (A `<=` A `&` B) = (A `<=` B).",
            "VernacStartTheoremProof",
            "ab4a96448fef46a4f356e421f6760684434d778d"
        ],
        [
            "apply/msubsetP/msubsetP=> sAB a; have := sAB a; rewrite !msetE.",
            "VernacExtend",
            "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
        ],
        [
            "by rewrite leq_min leqnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move/minn_idPl->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetIidr A B : (B `<=` A `&` B) = (B `<=` A).",
            "VernacStartTheoremProof",
            "af08cc2b42c98b14700a0ddbe11f1323e416dace"
        ],
        [
            "by rewrite msetIC msubsetIidl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUidPr A B : reflect (A `|` B = B) (A `<=` B).",
            "VernacStartTheoremProof",
            "5d0c15b93eea7c885a728559ab5d8847fced54f8"
        ],
        [
            "apply: (iffP msubsetP) => [AB|<- a]; last by rewrite !msetE leq_max leqnn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/msetP=> a; rewrite !msetE (maxn_idPr _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetUidPl A B : reflect (A `|` B = A) (B `<=` A).",
            "VernacStartTheoremProof",
            "a78f0ef2d8e572fa8a341b82db5efbadd95f002b"
        ],
        [
            "by rewrite msetUC; apply/msetUidPr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetUl A B : A `<=` A `|` B.",
            "VernacStartTheoremProof",
            "9f906c682d8cd000828478894542c4e1a3ad0917"
        ],
        [
            "by apply/msubsetP=> a; rewrite !msetE leq_maxl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve msubsetUl.",
            "VernacHints",
            "a08cbe952e7f639ecd3101844e49b3ea30e1b9f6"
        ],
        [
            "Lemma msubsetUr A B : B `<=` (A `|` B).",
            "VernacStartTheoremProof",
            "0392d05ca1e303e7e7788a3371f3fc7fc4e0e32c"
        ],
        [
            "by rewrite msetUC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve msubsetUr.",
            "VernacHints",
            "e5375b035f51592029c8fd999ddfa4fef19f0958"
        ],
        [
            "Lemma msubsetU1 x A : A `<=` (x |` A).",
            "VernacStartTheoremProof",
            "488cd319ebf49c1d25a52c8cf8ba652284059fcc"
        ],
        [
            "by rewrite msubsetUr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve msubsetU1.",
            "VernacHints",
            "e27f8f32aefc7dd7407edb512917ae27ce0c98d3"
        ],
        [
            "Lemma msubsetU A B C : (A `<=` B) || (A `<=` C) -> A `<=` (B `|` C).",
            "VernacStartTheoremProof",
            "35996358283a854c6797c453e2df3185bda99267"
        ],
        [
            "by move=> /orP [] /msubset_trans ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqEmsubset A B : (A == B) = (A `<=` B) && (B `<=` A).",
            "VernacStartTheoremProof",
            "379d60f1b026f6ba63eb4563dc3342be4c538c4d"
        ],
        [
            "apply/eqP/andP => [<-|[/msubsetP AB /msubsetP BA]]; first by split.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply/msetP=> a; apply/eqP; rewrite eqn_leq AB BA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubEproper A B : A `<=` B = (A == B) || (A `<` B).",
            "VernacStartTheoremProof",
            "2b5935fa84128b282ac2e47c286928db2450fe8e"
        ],
        [
            "by rewrite eqEmsubset -andb_orr orbN andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mproper_sub A B : A `<` B -> A `<=` B.",
            "VernacStartTheoremProof",
            "296e80893e9d615b8542929a33e927bafefe81d2"
        ],
        [
            "by rewrite msubEproper orbC => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqVmproper A B : A `<=` B -> A = B \\/ A `<` B.",
            "VernacStartTheoremProof",
            "9b17c54f9e270f7c3c0e24bd1f0bdd019c80f0d3"
        ],
        [
            "by rewrite msubEproper => /predU1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mproperEneq A B : A `<` B = (A != B) && (A `<=` B).",
            "VernacStartTheoremProof",
            "e0ba3ce76e957322efb83be312e6ece93671b408"
        ],
        [
            "by rewrite andbC eqEmsubset negb_and andb_orr andbN.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mproper_neq A B : A `<` B -> A != B.",
            "VernacStartTheoremProof",
            "a2c75dfebd2ef719f3d3f9ea75ccd1260e7190e9"
        ],
        [
            "by rewrite mproperEneq; case/andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqEmproper A B : (A == B) = (A `<=` B) && ~~ (A `<` B).",
            "VernacStartTheoremProof",
            "1aaabd551d3d17675b21e89fab4b13321d88b62f"
        ],
        [
            "by rewrite negb_and negbK andb_orr andbN eqEmsubset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msub0set A : msubset mset0 A.",
            "VernacStartTheoremProof",
            "c9ab38d57305bf9584bb14ba40df1349ba61f12a"
        ],
        [
            "by apply/msubsetP=> x; rewrite msetE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve msub0set.",
            "VernacHints",
            "647f8e5b9484aa708c5e72f7a258801e49aef4ce"
        ],
        [
            "Lemma msubset0 A : (A `<=` mset0) = (A == mset0).",
            "VernacStartTheoremProof",
            "91c8b46967f64d994e3401563583de56d540916a"
        ],
        [
            "by rewrite eqEmsubset msub0set andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mproper0 A : (mproper mset0 A) = (A != mset0).",
            "VernacStartTheoremProof",
            "362d64699648ab052c9b9fbb69e4c95b44e5daae"
        ],
        [
            "by rewrite /mproper msub0set msubset0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mproperE A B : (A `<` B) = (A `<=` B) && ~~ (msubset B A).",
            "VernacStartTheoremProof",
            "7a9db213f77becfa49b404de991387b0c1a1d231"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mproper_sub_trans B A C : A `<` B -> B `<=` C -> A `<` C.",
            "VernacStartTheoremProof",
            "d53d3b6fa01b15386934dc4459d71ec1fc315a8d"
        ],
        [
            "move=> /andP [AB NBA] BC; rewrite /mproper (msubset_trans AB) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: contra NBA=> /(msubset_trans _)->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msub_proper_trans B A C : A `<=` B -> B `<` C -> A `<` C.",
            "VernacStartTheoremProof",
            "aeed40580a55abb8ef1ace3f2e3e164a7adcf47d"
        ],
        [
            "move=> AB /andP [CB NCB]; rewrite /mproper (msubset_trans AB) //=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by apply: contra NCB=> /msubset_trans->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubset_neq0 A B : A `<=` B -> A != mset0 -> B != mset0.",
            "VernacStartTheoremProof",
            "f2c1416c6ab57938c9418533b0d5f17919a03b0f"
        ],
        [
            "by rewrite -!mproper0 => sAB /mproper_sub_trans->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBDKC A B : A `<=` B -> A `+` (B `\\` A) = B.",
            "VernacStartTheoremProof",
            "078eef517366bd0867795d65e0d3f9089a5e7e7e"
        ],
        [
            "by move=> /msubsetP AB; apply/msetP=> a; rewrite !msetE subnKC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBDK A B : A `<=` B -> B `\\` A `+` A = B.",
            "VernacStartTheoremProof",
            "bdb173c7ba3f9d6bb91ec57986f8de2b3f5d02f0"
        ],
        [
            "by move=> /msubsetP AB; apply/msetP => a; rewrite !msetE subnK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBBK A B : A `<=` B -> B `\\` (B `\\` A) = A.",
            "VernacStartTheoremProof",
            "0ecdd37f04c37fa8e05a66d9c0e6a906e0ff846c"
        ],
        [
            "by move=> /msubsetP AB; apply/msetP => a; rewrite !msetE subKn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBD1K A B a : A `<=` B -> A a < B a -> a +` (B `\\` (a +` A)) = B `\\` A.",
            "VernacStartTheoremProof",
            "466ae5cfebea9e3f734db93e077cbe60caba41d5"
        ],
        [
            "move=> /msubsetP AB ABa; apply/msetP => b; rewrite !msetE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by case: ifP => //= /eqP->; rewrite !add1n subnSK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_msetBLR A B C : (msubset (A `\\` B) C) = (A `<=` B `+` C).",
            "VernacStartTheoremProof",
            "e648937ae5dbe845564e78fe7bcbc4be9252dbed"
        ],
        [
            "apply/msubsetP/msubsetP => [] sABC a; by have := sABC a; rewrite !msetE ?leq_subLR.",
            "VernacExtend",
            "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetnP n x a : reflect (0 < n /\\ x = a) (x \\in msetn n a).",
            "VernacStartTheoremProof",
            "0f921c17aa00bc1a96b4de97e4f0263a71a8737c"
        ],
        [
            "by do [apply: (iffP idP); rewrite !inE] => [/andP[]|[]] -> /eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt0_msetnP n x a : 0 < n -> reflect (x = a) (x \\in msetn n a).",
            "VernacStartTheoremProof",
            "6168918c477764cb8586d42b36538df0e87f91cc"
        ],
        [
            "by move=> n_gt0; rewrite inE n_gt0 /=; exact: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetn1 n a : a \\in msetn n a = (n > 0).",
            "VernacStartTheoremProof",
            "4a2b89ea7ed5b65afa8a7bf245bb193b6247a957"
        ],
        [
            "by rewrite inE eqxx andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1P x a : reflect (x = a) (x \\in [mset a]).",
            "VernacStartTheoremProof",
            "49ab7944e87a3dcf0c31749f320d0114ff287aaf"
        ],
        [
            "by rewrite inE; exact: eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset11 a : a \\in [mset a].",
            "VernacStartTheoremProof",
            "b7d49d22bb09b28c243609f7d2f9021f1d8e0066"
        ],
        [
            "by rewrite inE /=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetn_inj n : n > 0 -> injective (@msetn K n).",
            "VernacStartTheoremProof",
            "d12fa170a658ad382896c319be5bb3fdd1839b34"
        ],
        [
            "move=> n_gt0 a b eqsab; apply/(gt0_msetnP _ _ n_gt0).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by rewrite -eqsab inE n_gt0 eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset1UP x a B : reflect (x = a \\/ x \\in B) (x \\in a |` B).",
            "VernacStartTheoremProof",
            "d34d913794962b249d155274619495c5fc77424a"
        ],
        [
            "by rewrite !inE; exact: predU1P.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_cons a s : seq_mset (a :: s) = a +` (seq_mset s).",
            "VernacStartTheoremProof",
            "3b59a778ec36afd6abe9d7ddcee447de7c39dbb9"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE /= eq_sym.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIP x A B : reflect (x \\in A /\\ x \\in B) (x \\in A `&` B).",
            "VernacStartTheoremProof",
            "d6099ed2c59433fe3050248498359243becb34e8"
        ],
        [
            "by rewrite inE; apply: andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIS C A B : A `<=` B -> C `&` A `<=` C `&` B.",
            "VernacStartTheoremProof",
            "6715a230eb87c17f5a3092d5edd3a60f6642eb87"
        ],
        [
            "move=> sAB; apply/msubsetP=> x; rewrite !msetE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by rewrite leq_min !geq_min leqnn (msubsetP sAB) orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetSI C A B : A `<=` B -> A `&` C `<=` B `&` C.",
            "VernacStartTheoremProof",
            "2dc603c56583a1b74d771dc97150dfc91e5c9958"
        ],
        [
            "by move=> sAB; rewrite -!(msetIC C) msetIS.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetISS A B C D : A `<=` C -> B `<=` D -> A `&` B `<=` C `&` D.",
            "VernacStartTheoremProof",
            "d182b81cee9d487e67acf2ee6aca7ee2254a2f1f"
        ],
        [
            "by move=> /(msetSI B) /msubset_trans sAC /(msetIS C) /sAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetSB C A B : A `<=` B -> A `\\` C `<=` B `\\` C.",
            "VernacStartTheoremProof",
            "276a5cce5488d51edf1481f85a09fc8d587d0a8d"
        ],
        [
            "by move=> /msubsetP sAB; apply/msubsetP=> x; rewrite !msetE leq_sub2r.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBS C A B : A `<=` B -> C `\\` B `<=` C `\\` A.",
            "VernacStartTheoremProof",
            "f13a230e832142532b955544b18a5cd689380178"
        ],
        [
            "by move=> /msubsetP sAB; apply/msubsetP=> x; rewrite !msetE leq_sub2l.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBSS A B C D : A `<=` C -> D `<=` B -> A `\\` B `<=` C `\\` D.",
            "VernacStartTheoremProof",
            "c14a91e0b263ad6b9830801ef5da611fc3954b46"
        ],
        [
            "by move=> /(msetSB B) /msubset_trans sAC /(msetBS C) /sAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetB0 A : A `\\` mset0 = A.",
            "VernacStartTheoremProof",
            "ae222e29094b70bae7e50c39920721947cc8393c"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE subn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset0B A : mset0 `\\` A = mset0.",
            "VernacStartTheoremProof",
            "1cc417d45e0a692ac60b5a90c4c55f82555e4bed"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE sub0n.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetBxx A : A `\\` A = mset0.",
            "VernacStartTheoremProof",
            "5c8920917c09d75a91873ace79277bca5a9f4499"
        ],
        [
            "by apply/msetP=> x; rewrite !msetE subnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetIl A B : A `&` B `<=` A.",
            "VernacStartTheoremProof",
            "947c415aa6cda738748509476771094dcf5a54e3"
        ],
        [
            "by apply/msubsetP=> x; rewrite msetE geq_minl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetIr A B : A `&` B `<=` B.",
            "VernacStartTheoremProof",
            "e2f15981b03034d25a6c6fad5265ea1f26d8170b"
        ],
        [
            "by apply/msubsetP=> x; rewrite msetE geq_minr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetDl A B : A `\\` B `<=` A.",
            "VernacStartTheoremProof",
            "40a0b3a5ad20acc849005968b01f684ac5415976"
        ],
        [
            "by apply/msubsetP=> x; rewrite msetE leq_subLR leq_addl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubD1set A x : A `\\ x `<=` A.",
            "VernacStartTheoremProof",
            "3f72c802fa477508de519244da833b5a20da1340"
        ],
        [
            "by rewrite msubsetDl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve msubsetIl msubsetIr msubsetDl msubD1set.",
            "VernacHints",
            "b5380918e2db23c8645d226bd4ddeb40dc316c3e"
        ],
        [
            "Lemma mem_mset1U a A : a \\in A -> a |` A = A.",
            "VernacStartTheoremProof",
            "65175f66af2031f7425b39bc0e7eb05500084ebd"
        ],
        [
            "rewrite in_mset => aA; apply/msetP => x; rewrite !msetE (maxn_idPr _) //.",
            "VernacExtend",
            "01f04d3f5bba3b876eb4ec7b1c8f26d2e2cced77"
        ],
        [
            "by have [->|//] := altP eqP; rewrite (leq_trans _ aA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_msetD1 a A : a \\notin A -> A `\\ a = A.",
            "VernacStartTheoremProof",
            "cd4f7d8749427384f000abc06ab0dae86913f076"
        ],
        [
            "move=> /mset_eq0P aA; apply/msetP => x; rewrite !msetE.",
            "VernacExtend",
            "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
        ],
        [
            "by have [->|] := altP eqP; rewrite ?aA ?subn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetIn a A n : A `&` msetn n a = msetn (minn (A a) n) a.",
            "VernacStartTheoremProof",
            "7d691eb297d845bee36f022b56bedc3f077055c9"
        ],
        [
            "by apply/msetP => x; rewrite !msetE; have [->|] := altP eqP; rewrite ?minn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubIset A B C : (B `<=` A) || (C `<=` A) -> (B `&` C `<=` A).",
            "VernacStartTheoremProof",
            "29136b8058fe0404025b7cbd7129f932ec79eed0"
        ],
        [
            "by case/orP; apply: msubset_trans; rewrite (msubsetIl, msubsetIr).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetI A B C : (A `<=` B `&` C) = (A `<=` B) && (A `<=` C).",
            "VernacStartTheoremProof",
            "ad72c4c8a178eae0f1a05d68a7d29298f70f15af"
        ],
        [
            "rewrite !(sameP msetIidPl eqP) msetIA; have [-> //| ] := altP (A `&` B =P A).",
            "VernacExtend",
            "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
        ],
        [
            "by apply: contraNF => /eqP <-; rewrite -msetIA -msetIIl msetIAC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubsetIP A B C : reflect (A `<=` B /\\ A `<=` C) (A `<=` B `&` C).",
            "VernacStartTheoremProof",
            "b4be13ffdbec5c974d40672383263b7ed22872db"
        ],
        [
            "by rewrite msubsetI; exact: andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubUset A B C : (B `|` C `<=` A) = (B `<=` A) && (C `<=` A).",
            "VernacStartTheoremProof",
            "86de09a310f05df8a6a30c47ccbca7bec4e8b799"
        ],
        [
            "apply/idP/idP => [subA|/andP [AB CA]]; last by rewrite -[A]msetUid msetUSS.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite !(msubset_trans _ subA).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msubUsetP A B C : reflect (A `<=` C /\\ B `<=` C) (A `|` B `<=` C).",
            "VernacStartTheoremProof",
            "fe3a8c4ba23f31a397373086a2156f2d7052cf91"
        ],
        [
            "by rewrite msubUset; exact: andP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetU_eq0 A B : (A `|` B == mset0) = (A == mset0) && (B == mset0).",
            "VernacStartTheoremProof",
            "22f68fc643710647b97b9f07828e4c870bc9302f"
        ],
        [
            "by rewrite -!msubset0 msubUset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma setD_eq0 A B : (A `\\` B == mset0) = (A `<=` B).",
            "VernacStartTheoremProof",
            "92f8387c48de51066a2f095a8bf7e5d317f43be9"
        ],
        [
            "by rewrite -msubset0 subset_msetBLR msetD0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msub1set A a : ([mset a] `<=` A) = (a \\in A).",
            "VernacStartTheoremProof",
            "36ec8a0d3a4f2a0e1a08c96a369fd04f2fe283ad"
        ],
        [
            "apply/msubsetP/idP; first by move/(_ a); rewrite msetnxx in_mset.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=> ainA b; rewrite msetnE; case: eqP => // ->; rewrite -in_mset.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma msetDBA A B C : C `<=` B -> A `+` B `\\` C = (A `+` B) `\\` C.",
            "VernacStartTheoremProof",
            "db503a5d643de75d3047865ee1c17f9836fcace8"
        ],
        [
            "by move=> /msubsetP CB; apply/msetP=> a; rewrite !msetE2 addnBA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mset_0Vmem A : (A = mset0) + {x : K | x \\in A}.",
            "VernacStartTheoremProof",
            "e6ddb516a0c70c81a9c9019b5df7c36b74783c0a"
        ],
        [
            "have [/fsetP Aisfset0 | [a ainA]] := fset_0Vmem (finsupp A); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by right; exists a; rewrite -msuppE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "left; apply/msetP => a; rewrite mset0E; apply/mset_eq0P.",
            "VernacExtend",
            "6110606efec617c0b60f880282d234a0f8feea10"
        ],
        [
            "by rewrite -msuppE Aisfset0 inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition size_mset A : size A = \\sum_(a <- finsupp A) A a.",
            "VernacDefinition",
            "8d84fe0fb14c72635a33a9a7ae271ea6b3a946d5"
        ],
        [
            "by rewrite -sum1_size sum_mset; apply: eq_bigr => i; rewrite muln1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_mset0 : size (mset0 : {mset K}) = 0.",
            "VernacStartTheoremProof",
            "168927f78f3782860135199cb8f133243f0e74dd"
        ],
        [
            "by rewrite -sum1_size big_mset0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "From mathcomp Require Import tuple.",
            "VernacRequire",
            "a2007c42b3c522bb91772c2d1937ae8a2c107b18"
        ],
        [
            "Lemma sum_nat_seq_eq0 (I : eqType) r (P : pred I) (E : I -> nat) : (\\sum_(i <- r | P i) E i == 0) = all [pred i | P i ==> (E i == 0)] r.",
            "VernacStartTheoremProof",
            "b62a1a5dbf9495c7ac4de28c356395d7c14bf446"
        ],
        [
            "rewrite big_tnth sum_nat_eq0; apply/forallP/allP => /= HE x.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by move=> /seq_tnthP[i ->]; apply: HE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: HE; rewrite mem_tnth.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_mset_eq0 A : (size A == 0) = (A == mset0).",
            "VernacStartTheoremProof",
            "0bf407329e92b78008cd588dbc34d1820a8bde8d"
        ],
        [
            "apply/idP/eqP => [|->]; last by rewrite size_mset0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite size_mset sum_nat_seq_eq0 => /allP AP.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply/msetP => a /=; rewrite msetE.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "by have /= := AP a; case: finsuppP => // _ /(_ _)/eqP->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MSetTheory.",
            "VernacEndSegment",
            "e1b4e0c84f703b29cc285de68c209e0342eab48f"
        ]
    ],
    "proofs": [
        {
            "name": "sumn_map",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "by elim: s => [|i s IHs] in f *; rewrite ?(big_nil, big_cons) //= IHs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumn_filter",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "by rewrite -big_filter -sumn_map map_id.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumn_map_filter",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "by rewrite sumn_map big_filter.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetn_key",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seq_mset_key",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetU_key",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetI_key",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetD_key",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetB_key",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetM_key",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "exact: tt.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "enum_msetE",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "by transitivity (a \\in enum_mset A); rewrite // unlock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msuppE",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "rewrite enum_msetE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "apply/idP/flattenP => [aA|/=[_ /mapP[x xA -> /nseqP[->//]]]].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "exists (nseq (A a) a); first by apply/mapP; exists a.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/nseqP; split=> //; rewrite lt0n -mem_finsupp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetP",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "exact: fsfunP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_neq0",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "by rewrite -msuppE mem_finsupp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mset",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by rewrite -mset_neq0 lt0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_eq0",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "by rewrite -mset_neq0 negbK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_eq0P",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "by rewrite -mset_eq0; apply: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_gt0",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "by rewrite -in_mset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_eqP",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "exact: (equivP eqP (iff_sym msetP)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset0E",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "by rewrite /mset0 fsfunE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetnE",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "by rewrite fsfunE inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetnxx",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "by rewrite msetnE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetE2",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "rewrite !fsfunE !inE !msuppE -!mset_neq0; case: ifPn => //.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite negb_or !negbK => /andP [/eqP-> /eqP->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "count_mem_mset",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "rewrite unlock count_flatten sumn_map big_map.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_bigr _ (fun _ _ => esym (sum1_count _ _))) /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_bigr _ (fun _ _ => big_nseq_cond _ _ _ _ _ _)) /= -big_mkcond /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have [aNA|aA] := finsuppP.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite big1_fset // => i iA /eqP eq_ia; rewrite -eq_ia iA in aNA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite big_fset_condE/= (big_fsetD1 a) ?inE ?eqxx ?andbT //= iter_addn mul1n.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (_ : (_ `\\ _)%fset = fset0) ?big_seq_fset0 ?addn0//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply/fsetP=> i; rewrite !inE; case: (i == a); rewrite ?(andbF, andbT).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_undup_mset",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "apply: uniq_perm_eq; rewrite ?undup_uniq // => a.",
                        "VernacExtend",
                        "5fce7e5361004176d6b434b36b4623c7387f70bb"
                    ]
                },
                {
                    "command": [
                        "by rewrite mem_undup msuppE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "big_mset",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "rewrite [in RHS](eq_big_perm (undup X)) 1?perm_eq_sym ?perm_undup_mset//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite -[in LHS]big_undup_iterop_count; apply: eq_bigr => i _.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite count_mem_mset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_mset",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "rewrite big_mset; apply: eq_bigr => i _ //.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by rewrite Monoid.iteropE iter_addn addn0 mulnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod_mset",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by rewrite big_mset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_seqE",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "by rewrite fsfunE inE/=; case: ifPn => // /count_memPn ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perm_eq_seq_mset",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "by apply/allP => a _ /=; rewrite count_mem_mset mset_seqE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "seq_mset_id",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite mset_seqE count_mem_mset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_seq_msetP",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "apply: (iffP idP) => [/perm_eqP perm_ss'|eq_ss'].",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by apply/msetP => a; rewrite !mset_seqE perm_ss'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply/allP => a _ /=; rewrite -!mset_seqE eq_ss'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetME",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "rewrite !fsfunE inE; case: ifPn => //=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite negb_and !memNfinsupp => /orP [] /eqP->; rewrite ?muln0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1DE",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "by rewrite msetE2 msetnE; case: (b == a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1UE",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "by rewrite msetE2 msetnE; case: (b == a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetB1E",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "by rewrite msetE2 msetnE; case: (b == a).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mset0",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "by rewrite in_mset !msetE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetn",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "by rewrite in_mset msetE; case: (a == a'); rewrite ?andbT ?andbF.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mset1",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "by rewrite in_msetn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetD",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "by rewrite !in_mset !msetE addn_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetU",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "by rewrite !in_mset !msetE leq_max.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetDU",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "by rewrite in_msetU in_msetD.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetI",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "by rewrite !in_mset msetE leq_min.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetB",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by rewrite -mset_neq0 msetE subn_eq0 ltnNge.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mset1U",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by rewrite in_msetU in_mset msetE; case: (_ == _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mset1D",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "by rewrite in_msetDU in_mset1U.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetB1",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "by rewrite in_msetB msetE in_mset; case: (_ == _); rewrite -?geq_max.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_msetM",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msuppE !mem_finsupp msetE muln_eq0 negb_or.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "enum_mset0",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "by rewrite unlock finsupp0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetn0",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> i; rewrite !msetE if_same.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finsupp_msetn",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "by apply/fsetP => i; rewrite !inE; case: ifP => //=; rewrite inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "enum_msetn",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "case: n => [|n]; first by rewrite msetn0 /= enum_mset0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite unlock finsupp_msetn /= enum_fsetE /= enum_fset1 /= cats0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite msetE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "big_mset0",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "by rewrite enum_mset0 big_nil.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "big_msetn",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "by rewrite enum_msetn big_nseq_cond Monoid.iteropE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDC",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE addnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIC",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE minnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUC",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "by apply/msetP => a; rewrite !msetE maxnC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset0I",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "by apply/msetP => x; rewrite !msetE min0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetI0",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC mset0I.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIA",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE minnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetICA",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "by rewrite !msetIA (msetIC A).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIAC",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msetIA (msetIC B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIACA",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msetIA (msetICA B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIid",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE minnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIIl",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIA !(msetIAC _ C) -(msetIA _ C) msetIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIIr",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "by rewrite !(msetIC A) msetIIl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset0U",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "by apply/msetP => x; rewrite !msetE max0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetU0",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUC mset0U.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUA",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE maxnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUCA",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "by rewrite !msetUA (msetUC B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUAC",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msetUA (msetUC B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUACA",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msetUA (msetUCA B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUid",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE maxnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUUl",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUA !(msetUAC _ C) -(msetUA _ C) msetUid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUUr",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "by rewrite !(msetUC A) msetUUl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset0D",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "by apply/msetP => x; rewrite !msetE add0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetD0",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "by rewrite msetDC mset0D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDA",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE addnA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDCA",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "by rewrite !msetDA (msetDC B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDAC",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msetDA (msetDC B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDACA",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msetDA (msetDCA B).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetU1l",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "by move=> Ax /=; rewrite inE Ax.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetU1r",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE eqxx orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetB11",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "by rewrite inE eqxx /= in_mset -geq_max.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetB1K",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "move=> aA; apply/msetP=> x; rewrite !msetE subnKC //=.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by have [->|//] := altP eqP; rewrite mset_gt0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetD1K",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "by apply/msetP => x; rewrite !msetE addKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetU1K",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "move=> aB; apply/msetP=> x; rewrite !msetE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "have [->|] := altP eqP; first by rewrite (mset_eq0P _).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite max0n subn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1U1",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1D1",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1Ur",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "by move=> Bx; rewrite !inE predU1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1Dr",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "by move=> Bx; rewrite !inE predU1r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset2P",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE; apply: (iffP orP) => [] [] /eqP; intuition.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_mset2",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset21",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "by rewrite mset1D1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset22",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "by rewrite in_mset2 eqxx orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUP",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE; exact: orP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDP",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE; exact: orP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetULVR",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "by rewrite inE; case: (x \\in A); [left|right].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDLVR",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "by rewrite inE; case: (x \\in A); [left|right].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIUr",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE minn_maxr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIUl",
            "line_nb": 406,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE minn_maxl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUIr",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE maxn_minr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUIl",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE maxn_minl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUKC",
            "line_nb": 415,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE maxnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUK",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUC msetUKC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKUC",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC msetUK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKU",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC msetUKC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIKC",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE minnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIK",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC msetIKC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKIC",
            "line_nb": 433,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUC msetIK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKI",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC msetKIC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUKid",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "by rewrite -msetUA msetUid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUKidC",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUAC msetUid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKUid",
            "line_nb": 445,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUA msetUid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKUidC",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUCA msetUid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIKid",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "by rewrite -msetIA msetIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIKidC",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIAC msetIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKIid",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIA msetIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKIidC",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "by rewrite msetICA msetIid.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDIr",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE addn_minr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDIl",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE addn_minl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDKIC",
            "line_nb": 469,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE (minn_idPr _) // leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDKI",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "by rewrite msetDC msetDKIC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKDIC",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC msetDKI.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetKDI",
            "line_nb": 478,
            "steps": [
                {
                    "command": [
                        "by rewrite msetDC msetKDIC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDKB",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "by move=> B; apply/msetP => a; rewrite !msetE addKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDKBC",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "by move=> B; rewrite msetDC msetDKB.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBSKl",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "apply/msetP=> b; rewrite !msetE; case: ifPn; rewrite ?add0n ?subn0 //.",
                        "VernacExtend",
                        "b534ea82ca07ffa4e4ca8089ea195fe217157a1c"
                    ]
                },
                {
                    "command": [
                        "by rewrite add1n subn1 subSKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBDl",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE subnDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBDr",
            "line_nb": 494,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE subnDr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBDA",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE subnDA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUE",
            "line_nb": 500,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE maxnE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetP",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "apply: (iffP forallP)=> // ? x; case: (in_fsetP (finsupp A) x) => //.",
                        "VernacExtend",
                        "20ec428e50c31e1399aee62c5a532bc8417a4b29"
                    ]
                },
                {
                    "command": [
                        "by rewrite msuppE => /mset_eq0P->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubset_subset",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP AB x; rewrite !in_mset => ?; exact: (leq_trans _ (AB _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetB_eq0",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "apply/mset_eqP/msubsetP => AB a; by have := AB a; rewrite !msetE -subn_eq0 => /eqP.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubset_refl",
            "line_nb": 513,
            "steps": [
                {
                    "command": [
                        "exact/msubsetP.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubset_trans",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "move=> y x z /msubsetP xy /msubsetP yz ; apply/msubsetP => a.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply: (leq_trans (xy _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUS",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "move=> sAB; apply/msubsetP=> x; rewrite !msetE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite geq_max !leq_max leqnn (msubsetP sAB) orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDS",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP sAB; apply/msubsetP=> x; rewrite !msetE leq_add2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetSU",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; rewrite -!(msetUC C) msetUS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetSD",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; rewrite -!(msetDC C) msetDS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUSS",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "by move=> /(msetSU B) /msubset_trans sAC /(msetUS C)/sAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDSS",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "by move=> /(msetSD B) /msubset_trans sAC /(msetDS C)/sAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIidPl",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "apply: (iffP msubsetP) => [?|<- a]; last by rewrite !msetE geq_min leqnn orbT.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/msetP => a; rewrite !msetE (minn_idPl _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIidPr",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC; apply: msetIidPl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetIidl",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "apply/msubsetP/msubsetP=> sAB a; have := sAB a; rewrite !msetE.",
                        "VernacExtend",
                        "498dcf9c10fa6ece1d0d916281d2a6b32e23441c"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_min leqnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move/minn_idPl->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetIidr",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "by rewrite msetIC msubsetIidl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUidPr",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "apply: (iffP msubsetP) => [AB|<- a]; last by rewrite !msetE leq_max leqnn.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/msetP=> a; rewrite !msetE (maxn_idPr _).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetUidPl",
            "line_nb": 560,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUC; apply/msetUidPr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetUl",
            "line_nb": 563,
            "steps": [
                {
                    "command": [
                        "by apply/msubsetP=> a; rewrite !msetE leq_maxl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetUr",
            "line_nb": 567,
            "steps": [
                {
                    "command": [
                        "by rewrite msetUC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetU1",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "by rewrite msubsetUr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetU",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "by move=> /orP [] /msubset_trans ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqEmsubset",
            "line_nb": 578,
            "steps": [
                {
                    "command": [
                        "apply/eqP/andP => [<-|[/msubsetP AB /msubsetP BA]]; first by split.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply/msetP=> a; apply/eqP; rewrite eqn_leq AB BA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubEproper",
            "line_nb": 582,
            "steps": [
                {
                    "command": [
                        "by rewrite eqEmsubset -andb_orr orbN andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mproper_sub",
            "line_nb": 585,
            "steps": [
                {
                    "command": [
                        "by rewrite msubEproper orbC => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqVmproper",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "by rewrite msubEproper => /predU1P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mproperEneq",
            "line_nb": 591,
            "steps": [
                {
                    "command": [
                        "by rewrite andbC eqEmsubset negb_and andb_orr andbN.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mproper_neq",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "by rewrite mproperEneq; case/andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqEmproper",
            "line_nb": 597,
            "steps": [
                {
                    "command": [
                        "by rewrite negb_and negbK andb_orr andbN eqEmsubset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msub0set",
            "line_nb": 600,
            "steps": [
                {
                    "command": [
                        "by apply/msubsetP=> x; rewrite msetE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubset0",
            "line_nb": 604,
            "steps": [
                {
                    "command": [
                        "by rewrite eqEmsubset msub0set andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mproper0",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "by rewrite /mproper msub0set msubset0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mproperE",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mproper_sub_trans",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "move=> /andP [AB NBA] BC; rewrite /mproper (msubset_trans AB) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: contra NBA=> /(msubset_trans _)->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msub_proper_trans",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "move=> AB /andP [CB NCB]; rewrite /mproper (msubset_trans AB) //=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by apply: contra NCB=> /msubset_trans->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubset_neq0",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "by rewrite -!mproper0 => sAB /mproper_sub_trans->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBDKC",
            "line_nb": 624,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP AB; apply/msetP=> a; rewrite !msetE subnKC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBDK",
            "line_nb": 627,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP AB; apply/msetP => a; rewrite !msetE subnK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBBK",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP AB; apply/msetP => a; rewrite !msetE subKn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBD1K",
            "line_nb": 633,
            "steps": [
                {
                    "command": [
                        "move=> /msubsetP AB ABa; apply/msetP => b; rewrite !msetE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by case: ifP => //= /eqP->; rewrite !add1n subnSK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_msetBLR",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "apply/msubsetP/msubsetP => [] sABC a; by have := sABC a; rewrite !msetE ?leq_subLR.",
                        "VernacExtend",
                        "9ba8844f90da4a48c6c9ed986dcaebadc0623e9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetnP",
            "line_nb": 640,
            "steps": [
                {
                    "command": [
                        "by do [apply: (iffP idP); rewrite !inE] => [/andP[]|[]] -> /eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt0_msetnP",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "by move=> n_gt0; rewrite inE n_gt0 /=; exact: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetn1",
            "line_nb": 646,
            "steps": [
                {
                    "command": [
                        "by rewrite inE eqxx andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1P",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "by rewrite inE; exact: eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset11",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "by rewrite inE /=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset1UP",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "by rewrite !inE; exact: predU1P.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset_cons",
            "line_nb": 662,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE /= eq_sym.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIP",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "by rewrite inE; apply: andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIS",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "move=> sAB; apply/msubsetP=> x; rewrite !msetE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_min !geq_min leqnn (msubsetP sAB) orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetSI",
            "line_nb": 672,
            "steps": [
                {
                    "command": [
                        "by move=> sAB; rewrite -!(msetIC C) msetIS.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetISS",
            "line_nb": 675,
            "steps": [
                {
                    "command": [
                        "by move=> /(msetSI B) /msubset_trans sAC /(msetIS C) /sAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetSB",
            "line_nb": 678,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP sAB; apply/msubsetP=> x; rewrite !msetE leq_sub2r.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBS",
            "line_nb": 681,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP sAB; apply/msubsetP=> x; rewrite !msetE leq_sub2l.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBSS",
            "line_nb": 684,
            "steps": [
                {
                    "command": [
                        "by move=> /(msetSB B) /msubset_trans sAC /(msetBS C) /sAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetB0",
            "line_nb": 687,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE subn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mset0B",
            "line_nb": 690,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE sub0n.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetBxx",
            "line_nb": 693,
            "steps": [
                {
                    "command": [
                        "by apply/msetP=> x; rewrite !msetE subnn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetIl",
            "line_nb": 696,
            "steps": [
                {
                    "command": [
                        "by apply/msubsetP=> x; rewrite msetE geq_minl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetIr",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "by apply/msubsetP=> x; rewrite msetE geq_minr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetDl",
            "line_nb": 702,
            "steps": [
                {
                    "command": [
                        "by apply/msubsetP=> x; rewrite msetE leq_subLR leq_addl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubD1set",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "by rewrite msubsetDl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_mset1U",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "rewrite in_mset => aA; apply/msetP => x; rewrite !msetE (maxn_idPr _) //.",
                        "VernacExtend",
                        "01f04d3f5bba3b876eb4ec7b1c8f26d2e2cced77"
                    ]
                },
                {
                    "command": [
                        "by have [->|//] := altP eqP; rewrite (leq_trans _ aA).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_msetD1",
            "line_nb": 713,
            "steps": [
                {
                    "command": [
                        "move=> /mset_eq0P aA; apply/msetP => x; rewrite !msetE.",
                        "VernacExtend",
                        "f7feb259d6220ca40e8a86b90bd06f137aa140ac"
                    ]
                },
                {
                    "command": [
                        "by have [->|] := altP eqP; rewrite ?aA ?subn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetIn",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "by apply/msetP => x; rewrite !msetE; have [->|] := altP eqP; rewrite ?minn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubIset",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "by case/orP; apply: msubset_trans; rewrite (msubsetIl, msubsetIr).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetI",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "rewrite !(sameP msetIidPl eqP) msetIA; have [-> //| ] := altP (A `&` B =P A).",
                        "VernacExtend",
                        "7be6e3cf9ccbce33486c4b5c6fefdf7a9ad6e52b"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNF => /eqP <-; rewrite -msetIA -msetIIl msetIAC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubsetIP",
            "line_nb": 727,
            "steps": [
                {
                    "command": [
                        "by rewrite msubsetI; exact: andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubUset",
            "line_nb": 730,
            "steps": [
                {
                    "command": [
                        "apply/idP/idP => [subA|/andP [AB CA]]; last by rewrite -[A]msetUid msetUSS.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite !(msubset_trans _ subA).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msubUsetP",
            "line_nb": 734,
            "steps": [
                {
                    "command": [
                        "by rewrite msubUset; exact: andP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetU_eq0",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "by rewrite -!msubset0 msubUset.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setD_eq0",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "by rewrite -msubset0 subset_msetBLR msetD0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "msetDBA",
            "line_nb": 747,
            "steps": [
                {
                    "command": [
                        "by move=> /msubsetP CB; apply/msetP=> a; rewrite !msetE2 addnBA.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_mset",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "by rewrite -sum1_size sum_mset; apply: eq_bigr => i; rewrite muln1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_mset0",
            "line_nb": 759,
            "steps": [
                {
                    "command": [
                        "by rewrite -sum1_size big_mset0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_nat_seq_eq0",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "rewrite big_tnth sum_nat_eq0; apply/forallP/allP => /= HE x.",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "by move=> /seq_tnthP[i ->]; apply: HE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: HE; rewrite mem_tnth.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}