{
    "filename": "plugins/micromega/ZMicromega.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import OrderedRing.",
            "VernacRequire",
            "6320ce0c3dd8aea3a6a1bc4defdc09065fa432fe"
        ],
        [
            "Require Import RingMicromega.",
            "VernacRequire",
            "17ab0e01eade9304f5b2487decc0d169ee623f57"
        ],
        [
            "Require Import ZCoeff.",
            "VernacRequire",
            "c8f1809a81219df2b880696e38c629e5599bb9c2"
        ],
        [
            "Require Import Refl.",
            "VernacRequire",
            "75b1619a7ae3874ac3f2f96f81c8bfafe2c1da4a"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Ltac flatten_bool := repeat match goal with [ id : (_ && _)%bool = true |- _ ] => destruct (andb_prop _ _ id); clear id | [ id : (_ || _)%bool = true |- _ ] => destruct (orb_prop _ _ id); clear id end.",
            "VernacExtend",
            "b912619bddaf78f15138f469180b787354b5048e"
        ],
        [
            "Ltac inv H := inversion H ; try subst ; clear H.",
            "VernacExtend",
            "f245ad3920000e6655e6679053a31c0f659a6bad"
        ],
        [
            "Require Import EnvRing.",
            "VernacRequire",
            "4daa609eadc33269e6228ddb7c94991c1c42db65"
        ],
        [
            "Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5d5d2991d98cf1203a824951a099efb9d105702f"
        ],
        [
            "Lemma Zsor : SOR 0 1 Z.add Z.mul Z.sub Z.opp (@eq Z) Z.le Z.lt.",
            "VernacStartTheoremProof",
            "768a45bd544e50edc35c29a49776c59c1fcf3dd9"
        ],
        [
            "constructor ; intros ; subst ; try (intuition (auto with zarith)).",
            "VernacExtend",
            "bb14918e028124fd0cfce66eb95ca58e844e4958"
        ],
        [
            "apply Zsth.",
            "VernacExtend",
            "af95139ad2fafe14f279988abd788ceb081f0051"
        ],
        [
            "apply Zth.",
            "VernacExtend",
            "4625491a9eed1a4e0ad09445429e7207fe1532ed"
        ],
        [
            "destruct (Z.lt_trichotomy n m) ; intuition.",
            "VernacExtend",
            "056da982ea69db8b9b49e7819c172b703e9fe24a"
        ],
        [
            "apply Z.mul_pos_pos ; auto.",
            "VernacExtend",
            "02dc259c959c59cd6fe1dc04f23a9899c1c35dc2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZSORaddon : SORaddon 0 1 Z.add Z.mul Z.sub Z.opp (@eq Z) Z.le 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Zeq_bool Z.leb (fun x => x) (fun x => x) (pow_N 1 Z.mul).",
            "VernacStartTheoremProof",
            "8b0e69bd6b5c4510ffc9e35b7d35bb793b01f9c4"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor ; intros ; try reflexivity.",
            "VernacExtend",
            "3ae81ad63c059c8d5ac04af317f72ed83ce4481e"
        ],
        [
            "apply Zeq_bool_eq ; auto.",
            "VernacExtend",
            "583a0875ef8311014d6034b5e19d25c9c20ba5af"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "apply Zeq_bool_neq ; auto.",
            "VernacExtend",
            "131c82556a62f9b2ecc62fc428716cf80691a5b7"
        ],
        [
            "apply Zle_bool_imp_le.",
            "VernacExtend",
            "9fbe4aec09efdd724d40942f53da7cc22fdae5a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint Zeval_expr (env : PolEnv Z) (e: PExpr Z) : Z := match e with | PEc c => c | PEX _ x => env x | PEadd e1 e2 => Zeval_expr env e1 + Zeval_expr env e2 | PEmul e1 e2 => Zeval_expr env e1 * Zeval_expr env e2 | PEpow e1 n => Z.pow (Zeval_expr env e1) (Z.of_N n) | PEsub e1 e2 => (Zeval_expr env e1) - (Zeval_expr env e2) | PEopp e => Z.opp (Zeval_expr env e) end.",
            "VernacFixpoint",
            "de56269523a37c9882bddb4927060640773305f1"
        ],
        [
            "Definition eval_expr := eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x => x) (fun x => x) (pow_N 1 Z.mul).",
            "VernacDefinition",
            "27c87e30df59160c33cc418eb7fe51d8fcde1796"
        ],
        [
            "Lemma ZNpower : forall r n, r ^ Z.of_N n = pow_N 1 Z.mul r n.",
            "VernacStartTheoremProof",
            "4768869ba699c2b9ec23334d2d3da18fd2555a5a"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Z.pow_pos.",
            "VernacExtend",
            "13ec7dee336eefe7ccb951c670fc99547468032a"
        ],
        [
            "replace (pow_pos Z.mul r p) with (1 * (pow_pos Z.mul r p)) by ring.",
            "VernacExtend",
            "8c67a07958a964f8499fb9746178a9e8a6c5d55c"
        ],
        [
            "generalize 1.",
            "VernacExtend",
            "e8ae36184c02cd7f6e56df94d95ec9e99be783fb"
        ],
        [
            "induction p; simpl ; intros ; repeat rewrite IHp ; ring.",
            "VernacExtend",
            "02d9240d3842b430878e290acd0fdd6df561fc73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zeval_expr_compat : forall env e, Zeval_expr env e = eval_expr env e.",
            "VernacStartTheoremProof",
            "6cc3c4085d52ef2ad45dc3ec9266f73c02558748"
        ],
        [
            "induction e ; simpl ; try congruence.",
            "VernacExtend",
            "48e1a916ce65e6aea21f7e3f76805c5414b36a2a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite ZNpower.",
            "VernacExtend",
            "2a8641a8e53e220dcf64d5a31e7e7c6b8dcaa803"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zeval_op2 (o : Op2) : Z -> Z -> Prop := match o with | OpEq => @eq Z | OpNEq => fun x y => ~ x = y | OpLe => Z.le | OpGe => Z.ge | OpLt => Z.lt | OpGt => Z.gt end.",
            "VernacDefinition",
            "b92d0e21fde3fa0262f4d2c119fa6a767588098a"
        ],
        [
            "Definition Zeval_formula (env : PolEnv Z) (f : Formula Z):= let (lhs, op, rhs) := f in (Zeval_op2 op) (Zeval_expr env lhs) (Zeval_expr env rhs).",
            "VernacDefinition",
            "76c3f2ff83da5f02665c7d008717de5f7ce49498"
        ],
        [
            "Definition Zeval_formula' := eval_formula Z.add Z.mul Z.sub Z.opp (@eq Z) Z.le Z.lt (fun x => x) (fun x => x) (pow_N 1 Z.mul).",
            "VernacDefinition",
            "f0d4d99a1dfe6e011d0bbb8380a8b71d2f5e083d"
        ],
        [
            "Lemma Zeval_formula_compat : forall env f, Zeval_formula env f <-> Zeval_formula' env f.",
            "VernacStartTheoremProof",
            "46bf18f3de97e23acf664bcea5f7d2408ef25157"
        ],
        [
            "destruct f ; simpl.",
            "VernacExtend",
            "5ab77c865e5ffb10c040a3c8d321e06dea47ffb1"
        ],
        [
            "rewrite Zeval_expr_compat.",
            "VernacExtend",
            "c5629fc4ca3d41fc7fa15f3118d076e2a346a93b"
        ],
        [
            "rewrite Zeval_expr_compat.",
            "VernacExtend",
            "c5629fc4ca3d41fc7fa15f3118d076e2a346a93b"
        ],
        [
            "unfold eval_expr.",
            "VernacExtend",
            "88c0320ab37c10a0502a8d1ce9927e223f07ca66"
        ],
        [
            "generalize (eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env Flhs).",
            "VernacExtend",
            "3f7227d9f6b0b3695b0773e85f79ffbebb1ab074"
        ],
        [
            "generalize ((eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env Frhs)).",
            "VernacExtend",
            "688bf275ba3aa736be5cf88351b5a59dcac9b13e"
        ],
        [
            "destruct Fop ; simpl; intros ; intuition (auto with zarith).",
            "VernacExtend",
            "b8e8eea6765c75426db148fcad45b379be501ce4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eval_nformula := eval_nformula 0 Z.add Z.mul (@eq Z) Z.le Z.lt (fun x => x) .",
            "VernacDefinition",
            "6283004c787b15fd24cb4f0412577a4c32272b0f"
        ],
        [
            "Definition Zeval_op1 (o : Op1) : Z -> Prop := match o with | Equal => fun x : Z => x = 0 | NonEqual => fun x : Z => x <> 0 | Strict => fun x : Z => 0 < x | NonStrict => fun x : Z => 0 <= x end.",
            "VernacDefinition",
            "5b0c537cd0e659885a10f45aae8b22d3a64f7284"
        ],
        [
            "Lemma Zeval_nformula_dec : forall env d, (eval_nformula env d) \\/ ~ (eval_nformula env d).",
            "VernacStartTheoremProof",
            "ff66277184e8e1c990e7109e6537c83029d69f0c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (eval_nformula_dec Zsor).",
            "VernacExtend",
            "65b1e86bdfe4f9ac8876019c5a24f6cd0dd24d79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ZWitness := Psatz Z.",
            "VernacDefinition",
            "6a54cde85358078da43ec96dbabe9d4c76918dc4"
        ],
        [
            "Definition ZWeakChecker := check_normalised_formulas 0 1 Z.add Z.mul Zeq_bool Z.leb.",
            "VernacDefinition",
            "e039d5f2db2efddac7c400e3258d3c30bc66aba1"
        ],
        [
            "Lemma ZWeakChecker_sound : forall (l : list (NFormula Z)) (cm : ZWitness), ZWeakChecker l cm = true -> forall env, make_impl (eval_nformula env) l False.",
            "VernacStartTheoremProof",
            "66085076defb36f6123d99c0197435cea5542c5f"
        ],
        [
            "intros l cm H.",
            "VernacExtend",
            "dc8be6c80b36e23d8b630fca309875b5db7436e8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold eval_nformula.",
            "VernacExtend",
            "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
        ],
        [
            "apply (checker_nf_sound Zsor ZSORaddon l cm).",
            "VernacExtend",
            "be97568329d662743be29ccf1b48084720df9f69"
        ],
        [
            "unfold ZWeakChecker in H.",
            "VernacExtend",
            "fc149314d56e277c5075aa52bf5213a89f6e2a4c"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition psub := psub Z0 Z.add Z.sub Z.opp Zeq_bool.",
            "VernacDefinition",
            "73b9636109efa40c263ab9eceab301c7ecbd4d68"
        ],
        [
            "Declare Equivalent Keys psub RingMicromega.psub.",
            "VernacExtend",
            "704914c3b8ae9ea043699fe5c31656a7bad2811d"
        ],
        [
            "Definition padd := padd Z0 Z.add Zeq_bool.",
            "VernacDefinition",
            "11c1122a1ea63b936b7ed98771b2daaac67b3b5a"
        ],
        [
            "Declare Equivalent Keys padd RingMicromega.padd.",
            "VernacExtend",
            "7272969c6933be5e6d832c4262c2115858eb1674"
        ],
        [
            "Definition norm := norm 0 1 Z.add Z.mul Z.sub Z.opp Zeq_bool.",
            "VernacDefinition",
            "9aca3260e9b41aac69d4fd2b3d8eecc3fd4d7a56"
        ],
        [
            "Declare Equivalent Keys norm RingMicromega.norm.",
            "VernacExtend",
            "cf24d5eb8e03b01b316328c4c639e1d4706357fb"
        ],
        [
            "Definition eval_pol := eval_pol Z.add Z.mul (fun x => x).",
            "VernacDefinition",
            "6f61caea68dfbb5222c1effc5cf5657dc058c8dc"
        ],
        [
            "Declare Equivalent Keys eval_pol RingMicromega.eval_pol.",
            "VernacExtend",
            "b951d89543af254c308eed51157eae53b55b5cb7"
        ],
        [
            "Lemma eval_pol_sub : forall env lhs rhs, eval_pol env (psub lhs rhs) = eval_pol env lhs - eval_pol env rhs.",
            "VernacStartTheoremProof",
            "da18645c85b78e2a86a86e4424030e27911c959f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (eval_pol_sub Zsor ZSORaddon).",
            "VernacExtend",
            "caf621db75b428283bd59aa16f1a0447988962e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_pol_add : forall env lhs rhs, eval_pol env (padd lhs rhs) = eval_pol env lhs + eval_pol env rhs.",
            "VernacStartTheoremProof",
            "6c892292ffb982825d12c60982b2768f11e4d7e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (eval_pol_add Zsor ZSORaddon).",
            "VernacExtend",
            "8504870a0df4faa4315977f5950e0e184a215dd1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_pol_norm : forall env e, eval_expr env e = eval_pol env (norm e) .",
            "VernacStartTheoremProof",
            "ccb752a12fb69a6cdaa0fb626a06f0865f9272d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (eval_pol_norm Zsor ZSORaddon).",
            "VernacExtend",
            "c771cbb3786435f8bacedc07dac9742f18e46d85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition xnormalise (t:Formula Z) : list (NFormula Z) := let (lhs,o,rhs) := t in let lhs := norm lhs in let rhs := norm rhs in match o with | OpEq => ((psub lhs (padd rhs (Pc 1))),NonStrict)::((psub rhs (padd lhs (Pc 1))),NonStrict)::nil | OpNEq => (psub lhs rhs,Equal) :: nil | OpGt => (psub rhs lhs,NonStrict) :: nil | OpLt => (psub lhs rhs,NonStrict) :: nil | OpGe => (psub rhs (padd lhs (Pc 1)),NonStrict) :: nil | OpLe => (psub lhs (padd rhs (Pc 1)),NonStrict) :: nil end.",
            "VernacDefinition",
            "f599c024dd612769fa873040a8c226d3066bdd37"
        ],
        [
            "Require Import Coq.micromega.Tauto BinNums.",
            "VernacRequire",
            "71037e9dfa0f598ccf4d30fb2e6951e89c6b29e7"
        ],
        [
            "Definition normalise (t:Formula Z) : cnf (NFormula Z) := List.map (fun x => x::nil) (xnormalise t).",
            "VernacDefinition",
            "c3b454469c9687406d0ce9b2b12044dd20285440"
        ],
        [
            "Lemma normalise_correct : forall env t, eval_cnf eval_nformula env (normalise t) <-> Zeval_formula env t.",
            "VernacStartTheoremProof",
            "dfa8827510a0ac6edf898a2ceb677139a9d52ca0"
        ],
        [
            "unfold normalise, xnormalise; cbn -[padd]; intros env t.",
            "VernacExtend",
            "32be6807dfd28a5a46b710fbcada1be37e349d6d"
        ],
        [
            "rewrite Zeval_formula_compat.",
            "VernacExtend",
            "3549e2d3e69adad07e7d5bbc0becc29059fde117"
        ],
        [
            "unfold eval_cnf, eval_clause.",
            "VernacExtend",
            "7e73812c7a0b611834fda91cb3fcd7e43a1d627e"
        ],
        [
            "destruct t as [lhs o rhs]; case_eq o; cbn -[padd]; repeat rewrite eval_pol_sub; repeat rewrite eval_pol_add; repeat rewrite <- eval_pol_norm ; simpl in *; unfold eval_expr; generalize ( eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env lhs); generalize (eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env rhs) ; intros z1 z2 ; intros ; subst; intuition (auto with zarith).",
            "VernacExtend",
            "78ef00f359e9878b05fd7a216a20f9627734e4a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition xnegate (t:RingMicromega.Formula Z) : list (NFormula Z) := let (lhs,o,rhs) := t in let lhs := norm lhs in let rhs := norm rhs in match o with | OpEq => (psub lhs rhs,Equal) :: nil | OpNEq => ((psub lhs (padd rhs (Pc 1))),NonStrict)::((psub rhs (padd lhs (Pc 1))),NonStrict)::nil | OpGt => (psub lhs (padd rhs (Pc 1)),NonStrict) :: nil | OpLt => (psub rhs (padd lhs (Pc 1)),NonStrict) :: nil | OpGe => (psub lhs rhs,NonStrict) :: nil | OpLe => (psub rhs lhs,NonStrict) :: nil end.",
            "VernacDefinition",
            "5808ab36b3b6ea117b8dc7efc5e6a6878b298ca4"
        ],
        [
            "Definition negate (t:RingMicromega.Formula Z) : cnf (NFormula Z) := List.map (fun x => x::nil) (xnegate t).",
            "VernacDefinition",
            "a805b7a72b846c3a4e2b22155e64042c8d7c6792"
        ],
        [
            "Lemma negate_correct : forall env t, eval_cnf eval_nformula env (negate t) <-> ~ Zeval_formula env t.",
            "VernacStartTheoremProof",
            "9271f7d4265e0a71d97baec562c090b06f276cf8"
        ],
        [
            "Opaque padd.",
            "VernacSetOpacity",
            "db579a03e73fe7bc263abb7c447eaa8b68978bad"
        ],
        [
            "intros env t.",
            "VernacExtend",
            "1e7159321e078681320819d685fa405d4cb8da63"
        ],
        [
            "rewrite Zeval_formula_compat.",
            "VernacExtend",
            "3549e2d3e69adad07e7d5bbc0becc29059fde117"
        ],
        [
            "unfold negate, xnegate ; simpl.",
            "VernacExtend",
            "9097a94e8797822235b916be52be56422a2e172e"
        ],
        [
            "unfold eval_cnf,eval_clause.",
            "VernacExtend",
            "7e73812c7a0b611834fda91cb3fcd7e43a1d627e"
        ],
        [
            "destruct t as [lhs o rhs]; case_eq o; simpl; repeat rewrite eval_pol_sub; repeat rewrite eval_pol_add; repeat rewrite <- eval_pol_norm ; simpl in *; unfold eval_expr; generalize ( eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env lhs); generalize (eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env rhs) ; intros z1 z2 ; intros ; subst; intuition (auto with zarith).",
            "VernacExtend",
            "332733596704eb55cb60e2b48bcecb83b3fb2885"
        ],
        [
            "Transparent padd.",
            "VernacSetOpacity",
            "5151925f90cc2dbe452f229ee065e5e931949527"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zunsat := check_inconsistent 0 Zeq_bool Z.leb.",
            "VernacDefinition",
            "e78d44e5ec46ff9d82a81f48b12baa1a15ad3126"
        ],
        [
            "Definition Zdeduce := nformula_plus_nformula 0 Z.add Zeq_bool.",
            "VernacDefinition",
            "26853c7aca68641c7a6668358fa5cf51338e8c5b"
        ],
        [
            "Definition ZweakTautoChecker (w: list ZWitness) (f : BFormula (Formula Z)) : bool := @tauto_checker (Formula Z) (NFormula Z) Zunsat Zdeduce normalise negate ZWitness ZWeakChecker f w.",
            "VernacDefinition",
            "4b008768099cbc8c5c5719af377a9b2d1c3be840"
        ],
        [
            "Require Import Zdiv.",
            "VernacRequire",
            "48857015f605c04d86a1833489372f2ed560176a"
        ],
        [
            "Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5d5d2991d98cf1203a824951a099efb9d105702f"
        ],
        [
            "Definition ceiling (a b:Z) : Z := let (q,r) := Z.div_eucl a b in match r with | Z0 => q | _ => q + 1 end.",
            "VernacDefinition",
            "fad532e979dd1832498e17cc43e1a80164ad0527"
        ],
        [
            "Require Import Znumtheory.",
            "VernacRequire",
            "b0019a4f65c83089c27581d981ae8f6e0b66ab58"
        ],
        [
            "Lemma Zdivide_ceiling : forall a b, (b | a) -> ceiling a b = Z.div a b.",
            "VernacStartTheoremProof",
            "9462b1e37f336ca83646129a9827444f6d6e8cd9"
        ],
        [
            "unfold ceiling.",
            "VernacExtend",
            "6a1bf32bcb09c403b770acf50834318eb8ffd6ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Zdivide_mod in H.",
            "VernacExtend",
            "ddbf025ad1c2ac208f9c67dd1f27979ea82154ef"
        ],
        [
            "case_eq (Z.div_eucl a b).",
            "VernacExtend",
            "99993f1f7d2a9a4a43ca4fdbee81818f14d574f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change z with (fst (z,z0)).",
            "VernacExtend",
            "e7a1bac758a5fb3a42b1a30b1af95b912ac46332"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "change (fst (Z.div_eucl a b)) with (Z.div a b).",
            "VernacExtend",
            "c34a8038d5b7d33822b23a8079dc5cfc6cd947ca"
        ],
        [
            "change z0 with (snd (z,z0)).",
            "VernacExtend",
            "e1081c8a3dd3e208e38b8fad3ad8565e2b049357"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "change (snd (Z.div_eucl a b)) with (Z.modulo a b).",
            "VernacExtend",
            "badb360edd8c2d7d724e7b83743a99de48394ece"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma narrow_interval_lower_bound a b x : a > 0 -> a * x >= b -> x >= ceiling b a.",
            "VernacStartTheoremProof",
            "887a63f8a65b0b0a5d0f3c4ed5b138f313075f7c"
        ],
        [
            "rewrite !Z.ge_le_iff.",
            "VernacExtend",
            "56d0d65a44a6e4a65e99029aa7b9c67221640f7d"
        ],
        [
            "unfold ceiling.",
            "VernacExtend",
            "6a1bf32bcb09c403b770acf50834318eb8ffd6ba"
        ],
        [
            "intros Ha H.",
            "VernacExtend",
            "5bf146c32a53b249a44c08c854f997f3e3421699"
        ],
        [
            "generalize (Z_div_mod b a Ha).",
            "VernacExtend",
            "40e4b537aeff3313028f7dcbf6ba7004a62d9dee"
        ],
        [
            "destruct (Z.div_eucl b a) as (q,r).",
            "VernacExtend",
            "97c0acd8cf520f3cf8b3044ba01732e9df01aa14"
        ],
        [
            "intros (->,(H1,H2)).",
            "VernacExtend",
            "a68f0a4ec39bb7a3904494a4a81715995c7ca065"
        ],
        [
            "destruct r as [|r|r].",
            "VernacExtend",
            "c6f4dce8f41cb46ec1b4e8aaf76cb7ca1eb60127"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Z.add_0_r in H.",
            "VernacExtend",
            "80e12d5165512abc971f20571e636b1b9382adbc"
        ],
        [
            "apply Z.mul_le_mono_pos_l in H; auto with zarith.",
            "VernacExtend",
            "2030b5c45ec5b2202a8d5861dec177c4641bfaac"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (0 < Z.pos r) by easy.",
            "VernacExtend",
            "7ad6e5dbe6511c74e5a5b14e496d02a47b5a1a86"
        ],
        [
            "rewrite Z.add_1_r, Z.le_succ_l.",
            "VernacExtend",
            "fb9543264240edc4921b8009c962c166c7933644"
        ],
        [
            "apply Z.mul_lt_mono_pos_l with a; auto with zarith.",
            "VernacExtend",
            "c677c72fc0463439a6c70ff9c8d976ede0fbd8f0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now elim H1.",
            "VernacExtend",
            "2ab16c3197a197912c4c6d3937eb2a6256d6f3b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import QArith.",
            "VernacRequire",
            "7ecdd22bf23e2b094e459afc29d3249890e827fd"
        ],
        [
            "Inductive ZArithProof := | DoneProof | RatProof : ZWitness -> ZArithProof -> ZArithProof | CutProof : ZWitness -> ZArithProof -> ZArithProof | EnumProof : ZWitness -> ZWitness -> list ZArithProof -> ZArithProof .",
            "VernacInductive",
            "800a627e2d805ffcbb27620229350fe05eb606a1"
        ],
        [
            "Require Import Znumtheory.",
            "VernacRequire",
            "b0019a4f65c83089c27581d981ae8f6e0b66ab58"
        ],
        [
            "Definition isZ0 (x:Z) := match x with | Z0 => true | _ => false end.",
            "VernacDefinition",
            "53edfaff87ed722cf5bddcd1bc2a2aa32db5719d"
        ],
        [
            "Lemma isZ0_0 : forall x, isZ0 x = true <-> x = 0.",
            "VernacStartTheoremProof",
            "0cc446cdfe04005b452bca1ebdd22712ee5de098"
        ],
        [
            "destruct x ; simpl ; intuition congruence.",
            "VernacExtend",
            "064b11fdc7b71671d190c11b621b0a9d07b8fe9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isZ0_n0 : forall x, isZ0 x = false <-> x <> 0.",
            "VernacStartTheoremProof",
            "f4a702ea6fb81fbc1d59715ed81404e78adcba71"
        ],
        [
            "destruct x ; simpl ; intuition congruence.",
            "VernacExtend",
            "064b11fdc7b71671d190c11b621b0a9d07b8fe9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ZgcdM (x y : Z) := Z.max (Z.gcd x y) 1.",
            "VernacDefinition",
            "c18ea3ff51f6feda29d34af73c6218fb7d9a65f8"
        ],
        [
            "Fixpoint Zgcd_pol (p : PolC Z) : (Z * Z) := match p with | Pc c => (0,c) | Pinj _ p => Zgcd_pol p | PX p _ q => let (g1,c1) := Zgcd_pol p in let (g2,c2) := Zgcd_pol q in (ZgcdM (ZgcdM g1 c1) g2 , c2) end.",
            "VernacFixpoint",
            "571e50b1a23fc1014955ae9be4df6cb27d5b1ca1"
        ],
        [
            "Fixpoint Zdiv_pol (p:PolC Z) (x:Z) : PolC Z := match p with | Pc c => Pc (Z.div c x) | Pinj j p => Pinj j (Zdiv_pol p x) | PX p j q => PX (Zdiv_pol p x) j (Zdiv_pol q x) end.",
            "VernacFixpoint",
            "4765b71aca3543f54aa3ff73295816aea4b9f6a0"
        ],
        [
            "Inductive Zdivide_pol (x:Z): PolC Z -> Prop := | Zdiv_Pc : forall c, (x | c) -> Zdivide_pol x (Pc c) | Zdiv_Pinj : forall p, Zdivide_pol x p -> forall j, Zdivide_pol x (Pinj j p) | Zdiv_PX : forall p q, Zdivide_pol x p -> Zdivide_pol x q -> forall j, Zdivide_pol x (PX p j q).",
            "VernacInductive",
            "2146733e4049756b71571eaa812eade60ea5e698"
        ],
        [
            "Lemma Zdiv_pol_correct : forall a p, 0 < a -> Zdivide_pol a p -> forall env, eval_pol env p = a * eval_pol env (Zdiv_pol p a).",
            "VernacStartTheoremProof",
            "011f2913039fa2b4ebfc3f29742ef04ce6841ada"
        ],
        [
            "intros until 2.",
            "VernacExtend",
            "25d53df52aa689fd0ef563f083611f46b09e6366"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Zdivide_Zdiv_eq ; auto.",
            "VernacExtend",
            "b52de9b28d4aae9f7fbbad5deb87e39cbd191110"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply IHZdivide_pol.",
            "VernacExtend",
            "8e16ba492b598558614390e4b61a697926d75a69"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite IHZdivide_pol1.",
            "VernacExtend",
            "afe89a4844222275472cd0015c69e309083009c8"
        ],
        [
            "rewrite IHZdivide_pol2.",
            "VernacExtend",
            "67d9af54e61a3e00ac59ce6816a58566f8e2bd5e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgcd_pol_ge : forall p, fst (Zgcd_pol p) >= 0.",
            "VernacStartTheoremProof",
            "fc5394c5b4916d1b39aa7446c29c3894d5db2d98"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (Zgcd_pol p1).",
            "VernacExtend",
            "36df9b596e2b1e65e281a4f661c377effd1dfc0e"
        ],
        [
            "case_eq (Zgcd_pol p3).",
            "VernacExtend",
            "e7d72d2794526759628778e3201786989364a5d4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold ZgcdM.",
            "VernacExtend",
            "1daff5587b6de8bbf0caeba6cedeb36ca3691cdf"
        ],
        [
            "generalize (Z.gcd_nonneg z1 z2).",
            "VernacExtend",
            "485a92d73e81d43468232ba539fb1f5103bb6738"
        ],
        [
            "generalize (Zmax_spec (Z.gcd z1 z2) 1).",
            "VernacExtend",
            "a7a99ccda121377ffd13b6b18bf8495d79ab8f7f"
        ],
        [
            "generalize (Z.gcd_nonneg (Z.max (Z.gcd z1 z2) 1) z).",
            "VernacExtend",
            "8135df7f32c3032c590f6e4e3883c9502e8f58ab"
        ],
        [
            "generalize (Zmax_spec (Z.gcd (Z.max (Z.gcd z1 z2) 1) z) 1).",
            "VernacExtend",
            "8775594f56d5da631f67c43676d87b22da4f0ac4"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zdivide_pol_Zdivide : forall p x y, Zdivide_pol x p -> (y | x) -> Zdivide_pol y p.",
            "VernacStartTheoremProof",
            "6d612c4fc9553fdae2e5881e907e1cd04710ec81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Z.divide_trans with (1:= H0) ; assumption.",
            "VernacExtend",
            "5de9ab63ffae666fbf436150a756695f9965b5a1"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "constructor ; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zdivide_pol_one : forall p, Zdivide_pol 1 p.",
            "VernacStartTheoremProof",
            "2810a78424f7cf80722330d3be3e82519b814cfb"
        ],
        [
            "induction p ; constructor ; auto.",
            "VernacExtend",
            "1ab173416f512255cee0f5dbde14fab9a5973103"
        ],
        [
            "exists c.",
            "VernacExtend",
            "683d4593ad0b3c7125e420e0670d5a4b0d3c38bc"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgcd_minus : forall a b c, (a | c - b ) -> (Z.gcd a b | c).",
            "VernacStartTheoremProof",
            "b928b8ac834c7c97738780fac00e6b05adf8b278"
        ],
        [
            "intros a b c (q,Hq).",
            "VernacExtend",
            "93c939ecaa670f52ce0c685875d06975b5bc1a4a"
        ],
        [
            "destruct (Zgcd_is_gcd a b) as [(a',Ha) (b',Hb) _].",
            "VernacExtend",
            "10a0fc9c67f47228d474251685f872a77c3223ba"
        ],
        [
            "set (g:=Z.gcd a b) in *; clearbody g.",
            "VernacExtend",
            "b5f409ab4141c3daa1ee5375dc0a3621a3a5390f"
        ],
        [
            "exists (q * a' + b').",
            "VernacExtend",
            "400faf70aac7bed831aa8340d6689d87ce04654e"
        ],
        [
            "symmetry in Hq.",
            "VernacExtend",
            "815b074db3cbab0d8d50e880f146883a014e2900"
        ],
        [
            "rewrite <- Z.add_move_r in Hq.",
            "VernacExtend",
            "5e5061e36a5ef7dbf9d30fe9944e783f3d7220b0"
        ],
        [
            "rewrite <- Hq, Hb, Ha.",
            "VernacExtend",
            "6c5a8c9436254ba7bca3e420cfb005cefa55c9e5"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zdivide_pol_sub : forall p a b, 0 < Z.gcd a b -> Zdivide_pol a (PsubC Z.sub p b) -> Zdivide_pol (Z.gcd a b) p.",
            "VernacStartTheoremProof",
            "172fd241cb93dcd06a3c0b9a9735156deae7c090"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Zgcd_minus ; auto.",
            "VernacExtend",
            "4518a552c8de7a05f887c12294ada9c66aff274e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "inversion H0 ; subst; clear H0.",
            "VernacExtend",
            "67633bcad1f08913253223fb1d000a0f96a47e48"
        ],
        [
            "apply IHp ; auto.",
            "VernacExtend",
            "4f80890f42f601e04885342d407902fe63b6592c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Zdivide_pol_Zdivide with (1:= H3).",
            "VernacExtend",
            "3a4de41cbfb3364565cbd552cd1c0dc45d633ce3"
        ],
        [
            "destruct (Zgcd_is_gcd a b) ; assumption.",
            "VernacExtend",
            "d9dc70570d968ee5c6030599f81b940af6bffc15"
        ],
        [
            "apply IHp2 ; assumption.",
            "VernacExtend",
            "c88343c6ecc360ec08783f956591d373a19385b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zdivide_pol_sub_0 : forall p a, Zdivide_pol a (PsubC Z.sub p 0) -> Zdivide_pol a p.",
            "VernacStartTheoremProof",
            "eec3ff9c9071ab126028055715300e982590c59c"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "replace (c - 0) with c in H1 ; auto with zarith.",
            "VernacExtend",
            "02101b5a0649b603317d9d1b730f966130e1d50c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "inversion H ; subst; clear H.",
            "VernacExtend",
            "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
        ],
        [
            "apply IHp ; auto.",
            "VernacExtend",
            "4f80890f42f601e04885342d407902fe63b6592c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IHp2 ; assumption.",
            "VernacExtend",
            "c88343c6ecc360ec08783f956591d373a19385b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgcd_pol_div : forall p g c, Zgcd_pol p = (g, c) -> Zdivide_pol g (PsubC Z.sub p c).",
            "VernacStartTheoremProof",
            "8191cca674986001aa2e08837eedfba9ede774f1"
        ],
        [
            "induction p ; simpl.",
            "VernacExtend",
            "40f9f5e58be7659cb22903cfdc5400cb770ac71c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H.",
            "VernacExtend",
            "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now ring.",
            "VernacExtend",
            "dcf27cf728c57f4b3b20ceb183addbf498bb854c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply IHp ; auto.",
            "VernacExtend",
            "4f80890f42f601e04885342d407902fe63b6592c"
        ],
        [
            "intros g c.",
            "VernacExtend",
            "251309f59e76f93f9424a5f34e3f924f8f929f81"
        ],
        [
            "case_eq (Zgcd_pol p1) ; case_eq (Zgcd_pol p3) ; intros.",
            "VernacExtend",
            "007495c4de272d77641f8442d0511de628a81d90"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "unfold ZgcdM at 1.",
            "VernacExtend",
            "e05375f92ef1852bbc61e8383192864924c1a553"
        ],
        [
            "destruct (Zmax_spec (Z.gcd (ZgcdM z1 z2) z) 1) as [HH1 | HH1]; destruct HH1 as [HH1 HH1'] ; rewrite HH1'.",
            "VernacExtend",
            "1578f4d950d28ce6617d6420e9ca17c3c8296395"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Zdivide_pol_Zdivide with (x:= ZgcdM z1 z2).",
            "VernacExtend",
            "26bc69ad54b6f8ed2ec3e553eda1d849a6885c17"
        ],
        [
            "unfold ZgcdM.",
            "VernacExtend",
            "1daff5587b6de8bbf0caeba6cedeb36ca3691cdf"
        ],
        [
            "destruct (Zmax_spec (Z.gcd z1 z2) 1) as [HH2 | HH2].",
            "VernacExtend",
            "2dd572fc6beebebe3104d76a048fe956a97e55a5"
        ],
        [
            "destruct HH2.",
            "VernacExtend",
            "d55864666a2931ce781a8c707bb700457fd412d9"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply Zdivide_pol_sub ; auto.",
            "VernacExtend",
            "868a3b8f6e4f7f5eff25adddf6718590d45ff2b2"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "destruct HH2.",
            "VernacExtend",
            "d55864666a2931ce781a8c707bb700457fd412d9"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply Zdivide_pol_one.",
            "VernacExtend",
            "bb9e243bef016bc17a975f71028420eb085bf37d"
        ],
        [
            "unfold ZgcdM in HH1.",
            "VernacExtend",
            "508d1f026b66181c596658215e1113865fd34a52"
        ],
        [
            "unfold ZgcdM.",
            "VernacExtend",
            "1daff5587b6de8bbf0caeba6cedeb36ca3691cdf"
        ],
        [
            "destruct (Zmax_spec (Z.gcd z1 z2) 1) as [HH2 | HH2].",
            "VernacExtend",
            "2dd572fc6beebebe3104d76a048fe956a97e55a5"
        ],
        [
            "destruct HH2.",
            "VernacExtend",
            "d55864666a2931ce781a8c707bb700457fd412d9"
        ],
        [
            "rewrite H2 in *.",
            "VernacExtend",
            "9a6fbb53ffd706150eb2fe1581f6d5c2afebb472"
        ],
        [
            "destruct (Zgcd_is_gcd (Z.gcd z1 z2) z); auto.",
            "VernacExtend",
            "16e80154da0cb966b75c56c305abf2a5efb2eddf"
        ],
        [
            "destruct HH2.",
            "VernacExtend",
            "d55864666a2931ce781a8c707bb700457fd412d9"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "destruct (Zgcd_is_gcd 1 z); auto.",
            "VernacExtend",
            "684ff261f335a0f6bbc76eaa2c87ae99880aedf0"
        ],
        [
            "apply Zdivide_pol_Zdivide with (x:= z).",
            "VernacExtend",
            "a05e7e63e9d0294e6a48f69148976f4e85a8ff64"
        ],
        [
            "apply (IHp2 _ _ H); auto.",
            "VernacExtend",
            "9817e558efae9452add00653662af578da4ea708"
        ],
        [
            "destruct (Zgcd_is_gcd (ZgcdM z1 z2) z); auto.",
            "VernacExtend",
            "b0fa04d2ae4a42fc6ee2197384a6e0955315df92"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Zdivide_pol_one.",
            "VernacExtend",
            "bb9e243bef016bc17a975f71028420eb085bf37d"
        ],
        [
            "apply Zdivide_pol_one.",
            "VernacExtend",
            "bb9e243bef016bc17a975f71028420eb085bf37d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgcd_pol_correct_lt : forall p env g c, Zgcd_pol p = (g,c) -> 0 < g -> eval_pol env p = g * (eval_pol env (Zdiv_pol (PsubC Z.sub p c) g)) + c.",
            "VernacStartTheoremProof",
            "d38eb33d7ebc8db613bbdeb78df37ab31af61302"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- Zdiv_pol_correct ; auto.",
            "VernacExtend",
            "ec6dab631c1ac1818de426073f21f241b02fb03a"
        ],
        [
            "rewrite (RingMicromega.PsubC_ok Zsor ZSORaddon).",
            "VernacExtend",
            "3afdab659eaacc40732672fe3343cbd81dd3bedc"
        ],
        [
            "unfold eval_pol.",
            "VernacExtend",
            "97ef1823ff1bf4fc4a50bd96d25147f8ac32f014"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Zgcd_pol_div ; auto.",
            "VernacExtend",
            "00f2d7d0d7393a19db69702fb1438786f5c103ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition makeCuttingPlane (p : PolC Z) : PolC Z * Z := let (g,c) := Zgcd_pol p in if Z.gtb g Z0 then (Zdiv_pol (PsubC Z.sub p c) g , Z.opp (ceiling (Z.opp c) g)) else (p,Z0).",
            "VernacDefinition",
            "6497281c2988821e8a401426cbec0b91b49e920c"
        ],
        [
            "Definition genCuttingPlane (f : NFormula Z) : option (PolC Z * Z * Op1) := let (e,op) := f in match op with | Equal => let (g,c) := Zgcd_pol e in if andb (Z.gtb g Z0) (andb (negb (Zeq_bool c Z0)) (negb (Zeq_bool (Z.gcd g c) g))) then None else let (p,c) := makeCuttingPlane e in Some (p,c,Equal) | NonEqual => Some (e,Z0,op) | Strict => let (p,c) := makeCuttingPlane (PsubC Z.sub e 1) in Some (p,c,NonStrict) | NonStrict => let (p,c) := makeCuttingPlane e in Some (p,c,NonStrict) end.",
            "VernacDefinition",
            "75344282c4031aeba8935c1a39a98d7e6072d8dd"
        ],
        [
            "Definition nformula_of_cutting_plane (t : PolC Z * Z * Op1) : NFormula Z := let (e_z, o) := t in let (e,z) := e_z in (padd e (Pc z) , o).",
            "VernacDefinition",
            "1d01afd8b4bbaf510bdf4528da9d22483505efc3"
        ],
        [
            "Definition is_pol_Z0 (p : PolC Z) : bool := match p with | Pc Z0 => true | _ => false end.",
            "VernacDefinition",
            "e2fb2f2d0861fe20e153cdcc1a266ed4b7f3cca7"
        ],
        [
            "Lemma is_pol_Z0_eval_pol : forall p, is_pol_Z0 p = true -> forall env, eval_pol env p = 0.",
            "VernacStartTheoremProof",
            "364c82981b4fac95bac693b22789c0f819978a49"
        ],
        [
            "unfold is_pol_Z0.",
            "VernacExtend",
            "ab2ce3d9c8c9e2a0aab132651e081cc9bc745e55"
        ],
        [
            "destruct p ; try discriminate.",
            "VernacExtend",
            "8b4b087e66c76bb1fdb8f428c7d820bb8356a392"
        ],
        [
            "destruct z ; try discriminate.",
            "VernacExtend",
            "734184597e33bf1a8c2a4842e10c5ffd1d090678"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eval_Psatz : list (NFormula Z) -> ZWitness -> option (NFormula Z) := eval_Psatz 0 1 Z.add Z.mul Zeq_bool Z.leb.",
            "VernacDefinition",
            "c59521afacc5b38e5e9da40c324cd7bfa5ca8f2d"
        ],
        [
            "Definition valid_cut_sign (op:Op1) := match op with | Equal => true | NonStrict => true | _ => false end.",
            "VernacDefinition",
            "ec2b3493f81c74d09d83ef7e5d2ebc336e905a1b"
        ],
        [
            "Fixpoint ZChecker (l:list (NFormula Z)) (pf : ZArithProof) {struct pf} : bool := match pf with | DoneProof => false | RatProof w pf => match eval_Psatz l w with | None => false | Some f => if Zunsat f then true else ZChecker (f::l) pf end | CutProof w pf => match eval_Psatz l w with | None => false | Some f => match genCuttingPlane f with | None => true | Some cp => ZChecker (nformula_of_cutting_plane cp::l) pf end end | EnumProof w1 w2 pf => match eval_Psatz l w1 , eval_Psatz l w2 with | Some f1 , Some f2 => match genCuttingPlane f1 , genCuttingPlane f2 with |Some (e1,z1,op1) , Some (e2,z2,op2) => if (valid_cut_sign op1 && valid_cut_sign op2 && is_pol_Z0 (padd e1 e2)) then (fix label (pfs:list ZArithProof) := fun lb ub => match pfs with | nil => if Z.gtb lb ub then true else false | pf::rsr => andb (ZChecker ((psub e1 (Pc lb), Equal) :: l) pf) (label rsr (Z.add lb 1%Z) ub) end) pf (Z.opp z1) z2 else false | _ , _ => true end | _ , _ => false end end.",
            "VernacFixpoint",
            "2acf95505a2f8a8e43409c5f83ef74d9b3cfcaf0"
        ],
        [
            "Fixpoint bdepth (pf : ZArithProof) : nat := match pf with | DoneProof => O | RatProof _ p => S (bdepth p) | CutProof _ p => S (bdepth p) | EnumProof _ _ l => S (List.fold_right (fun pf x => Max.max (bdepth pf) x) O l) end.",
            "VernacFixpoint",
            "0c0fdde8740e21bc22a3f4166e2159202c913f00"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Lemma in_bdepth : forall l a b y, In y l -> ltof ZArithProof bdepth y (EnumProof a b l).",
            "VernacStartTheoremProof",
            "264f743f40a72d49227795a976862d8e4a923e35"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold ltof.",
            "VernacExtend",
            "94a16daf7f117e07e3e7447f31277b9102450ca9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize ( (fold_right (fun (pf : ZArithProof) (x : nat) => Max.max (bdepth pf) x) 0%nat l)).",
            "VernacExtend",
            "e95ce362de3cdb3ffcdadd889978a207ee6e702b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (bdepth y) ; intros.",
            "VernacExtend",
            "31331f46c5929f677a89f59ff7215be7e00119c8"
        ],
        [
            "generalize (Max.max_l n0 n) (Max.max_r n0 n).",
            "VernacExtend",
            "d99f24f6f6b5816861d996dc3fa8c4b02c459a8e"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "generalize (IHl a0 b y H).",
            "VernacExtend",
            "e59d5e79dceed33d4ee48eb5be9dc44abe361f9e"
        ],
        [
            "unfold ltof.",
            "VernacExtend",
            "94a16daf7f117e07e3e7447f31277b9102450ca9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize ( (fold_right (fun (pf : ZArithProof) (x : nat) => Max.max (bdepth pf) x) 0%nat l)).",
            "VernacExtend",
            "e95ce362de3cdb3ffcdadd889978a207ee6e702b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Max.max_l (bdepth a) n) (Max.max_r (bdepth a) n).",
            "VernacExtend",
            "11146e851d3816a3a7aadceef222eae0a378d35a"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_Psatz_sound : forall env w l f', make_conj (eval_nformula env) l -> eval_Psatz l w = Some f' -> eval_nformula env f'.",
            "VernacStartTheoremProof",
            "f1bd771d4ecae4460d482186b926ff29d4e18f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (eval_Psatz_Sound Zsor ZSORaddon) with (l:=l) (e:= w) ; auto.",
            "VernacExtend",
            "9b95e8cd8635e5b910b9a19368339481fc5d363d"
        ],
        [
            "apply make_conj_in ; auto.",
            "VernacExtend",
            "f099daeb4fcd6e8a8f70c778299597f3c48ef23b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma makeCuttingPlane_ns_sound : forall env e e' c, eval_nformula env (e, NonStrict) -> makeCuttingPlane e = (e',c) -> eval_nformula env (nformula_of_cutting_plane (e', c, NonStrict)).",
            "VernacStartTheoremProof",
            "b9f521c59f874c30f84cd0458bfa6caa6d3e0d9f"
        ],
        [
            "unfold nformula_of_cutting_plane.",
            "VernacExtend",
            "64ba2434601772938a6c09aa0314b611de0f29ac"
        ],
        [
            "unfold eval_nformula.",
            "VernacExtend",
            "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
        ],
        [
            "unfold RingMicromega.eval_nformula.",
            "VernacExtend",
            "b72468f3695ea5b5942c658542acff15eef07726"
        ],
        [
            "unfold eval_op1.",
            "VernacExtend",
            "68d09b8c2e3daf302dd5a3e15a7bedb0c53190bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (RingMicromega.eval_pol_add Zsor ZSORaddon).",
            "VernacExtend",
            "71dd69a9390a6410d95089d4c94d78fc997c491f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold makeCuttingPlane in H0.",
            "VernacExtend",
            "4c6ccffbaf1aadb0b093fb1f036a131ded4dfc54"
        ],
        [
            "revert H0.",
            "VernacExtend",
            "de3e4fca453928a41c450906d5d5626d573cfb55"
        ],
        [
            "case_eq (Zgcd_pol e) ; intros g c0.",
            "VernacExtend",
            "09cd2206bb752d0f56d4c5626881a05196335dfa"
        ],
        [
            "generalize (Zgt_cases g 0) ; destruct (Z.gtb g 0).",
            "VernacExtend",
            "83b79c2a9309bd6a8365c60b8471cc4e990e1398"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "change (RingMicromega.eval_pol Z.add Z.mul (fun x : Z => x)) with eval_pol in *.",
            "VernacExtend",
            "28a111027302905021225a91a88b43f8a4149c16"
        ],
        [
            "apply Zgcd_pol_correct_lt with (env:=env) in H1.",
            "VernacExtend",
            "7d334853f43c0483d0dee323f3545a71e088e8b1"
        ],
        [
            "generalize (narrow_interval_lower_bound g (- c0) (eval_pol env (Zdiv_pol (PsubC Z.sub e c0) g)) H0).",
            "VernacExtend",
            "a91704cb641fe722da1e7fe22ccc26159664a6de"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H2.",
            "VernacExtend",
            "6144021562e950304ba8e947fdc2423691182458"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cutting_plane_sound : forall env f p, eval_nformula env f -> genCuttingPlane f = Some p -> eval_nformula env (nformula_of_cutting_plane p).",
            "VernacStartTheoremProof",
            "d47b338b57d034e7efb75f1a3ee8142665a139f8"
        ],
        [
            "unfold genCuttingPlane.",
            "VernacExtend",
            "c59015cc04a5a1089b6824205943fa11670ebbdf"
        ],
        [
            "destruct f as [e op].",
            "VernacExtend",
            "6337d5bb390ac2af2b96798374216ec00d83dbf0"
        ],
        [
            "destruct op.",
            "VernacExtend",
            "8929c4e75c9a3bb140fea6bfec2f496ac7c48be2"
        ],
        [
            "destruct p as [[e' z] op].",
            "VernacExtend",
            "3c29f7f6b76ad5a026beba172be85a504e7f4670"
        ],
        [
            "case_eq (Zgcd_pol e) ; intros g c.",
            "VernacExtend",
            "c4ec9dd9ad24c6cccef982c46ab43dd9a208357a"
        ],
        [
            "case_eq (Z.gtb g 0 && (negb (Zeq_bool c 0) && negb (Zeq_bool (Z.gcd g c) g))) ; [discriminate|].",
            "VernacExtend",
            "fedde00e08bf6aedba618b4b6935abe52a9e741c"
        ],
        [
            "case_eq (makeCuttingPlane e).",
            "VernacExtend",
            "1d9294c811414db838a0a914a1987ecd33f6623e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "unfold makeCuttingPlane in H.",
            "VernacExtend",
            "c7711429b2bb42512f198ab5193d0a7c0951c941"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "change (eval_pol env e = 0) in H2.",
            "VernacExtend",
            "4837e9c710f6447c8b521d1d414424b2bbe11278"
        ],
        [
            "case_eq (Z.gtb g 0).",
            "VernacExtend",
            "7e969762c5e27a4e067eafd538461b5c00e530e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- Zgt_is_gt_bool in H.",
            "VernacExtend",
            "05fdb826e04694aef1d6d43550ca42a469728fe2"
        ],
        [
            "rewrite Zgcd_pol_correct_lt with (1:= H1) in H2; auto with zarith.",
            "VernacExtend",
            "27271da71adf158f5904597ac91d06b3a25c62a7"
        ],
        [
            "unfold nformula_of_cutting_plane.",
            "VernacExtend",
            "64ba2434601772938a6c09aa0314b611de0f29ac"
        ],
        [
            "change (eval_pol env (padd e' (Pc z)) = 0).",
            "VernacExtend",
            "bc84da7a061b0ce5f26423058b100abc2a3e8e63"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "rewrite eval_pol_add.",
            "VernacExtend",
            "63c89a8ffadf3367a8e103a2300971633fdd72aa"
        ],
        [
            "set (x:=eval_pol env (Zdiv_pol (PsubC Z.sub e c) g)) in *; clearbody x.",
            "VernacExtend",
            "d8bdbb6617db8a052773c642125eb25a827959be"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite andb_false_iff in H0.",
            "VernacExtend",
            "a5a5f06555a56f202a8459ddc80930c4e98bb777"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite Zgt_is_gt_bool in H ; congruence.",
            "VernacExtend",
            "30cc669f8e922d564b448ffcda56b937f2204460"
        ],
        [
            "rewrite andb_false_iff in H0.",
            "VernacExtend",
            "a5a5f06555a56f202a8459ddc80930c4e98bb777"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite negb_false_iff in H0.",
            "VernacExtend",
            "fde1d645bcf93aeda4dc7c0b6887f54eea3812cc"
        ],
        [
            "apply Zeq_bool_eq in H0.",
            "VernacExtend",
            "8899804d043f4e2fa0adabe5552c5ca88cf1f23e"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.add_0_r, Z.mul_eq_0 in H2.",
            "VernacExtend",
            "ed6b6130f4fc5910eed7b963ad80474c4feb4e3a"
        ],
        [
            "intuition auto with zarith.",
            "VernacExtend",
            "b1d1bb926ece80d6fb4cdf73aa24f941f1a0d567"
        ],
        [
            "rewrite negb_false_iff in H0.",
            "VernacExtend",
            "fde1d645bcf93aeda4dc7c0b6887f54eea3812cc"
        ],
        [
            "apply Zeq_bool_eq in H0.",
            "VernacExtend",
            "8899804d043f4e2fa0adabe5552c5ca88cf1f23e"
        ],
        [
            "assert (HH := Zgcd_is_gcd g c).",
            "VernacExtend",
            "fe1979ee5ec5209b24d39970b65309ee2956f541"
        ],
        [
            "rewrite H0 in HH.",
            "VernacExtend",
            "8e919d4c2c30d137a06954c5c8a22e48dea98eaa"
        ],
        [
            "inv HH.",
            "VernacExtend",
            "b24b9daf00496801c0fdc8aa789cfadfc124bfd1"
        ],
        [
            "apply Zdivide_opp_r in H4.",
            "VernacExtend",
            "90473cbead97da066dbfb2aaff43590f346adad7"
        ],
        [
            "rewrite Zdivide_ceiling ; auto.",
            "VernacExtend",
            "6d050cd0a5f99c61af2d6f5d42c1a9a5c0eda56c"
        ],
        [
            "apply Z.sub_move_0_r.",
            "VernacExtend",
            "dbf20f38853a6fe28f205d30c70bdf6c73bb825a"
        ],
        [
            "apply Z.div_unique_exact ; auto with zarith.",
            "VernacExtend",
            "c3dafb553c84505d4a76ab26a8751279f01911e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold nformula_of_cutting_plane.",
            "VernacExtend",
            "64ba2434601772938a6c09aa0314b611de0f29ac"
        ],
        [
            "inv H3.",
            "VernacExtend",
            "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
        ],
        [
            "change (eval_pol env (padd e' (Pc 0)) = 0).",
            "VernacExtend",
            "1bd51e1d06cc7268a42e90e06546623f58f0432b"
        ],
        [
            "rewrite eval_pol_add.",
            "VernacExtend",
            "63c89a8ffadf3367a8e103a2300971633fdd72aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H0.",
            "VernacExtend",
            "52c34ef20c88d5292e2350aff94f149a3968b772"
        ],
        [
            "unfold eval_nformula in *.",
            "VernacExtend",
            "10cf45073a92bb1ad6c990cec8b9fd674c90c48d"
        ],
        [
            "unfold RingMicromega.eval_nformula in *.",
            "VernacExtend",
            "a1178ef0ab5cb0c43676573a6e62a7297a550988"
        ],
        [
            "unfold nformula_of_cutting_plane.",
            "VernacExtend",
            "64ba2434601772938a6c09aa0314b611de0f29ac"
        ],
        [
            "unfold eval_op1 in *.",
            "VernacExtend",
            "201351c1cf829adb91f69473c221d0672e21fb8a"
        ],
        [
            "rewrite (RingMicromega.eval_pol_add Zsor ZSORaddon).",
            "VernacExtend",
            "71dd69a9390a6410d95089d4c94d78fc997c491f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "destruct p as [[e' z] op].",
            "VernacExtend",
            "3c29f7f6b76ad5a026beba172be85a504e7f4670"
        ],
        [
            "case_eq (makeCuttingPlane (PsubC Z.sub e 1)).",
            "VernacExtend",
            "341f88397829547000f626259cc7a08bd202f5c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "apply makeCuttingPlane_ns_sound with (env:=env) (2:= H).",
            "VernacExtend",
            "d61dc790dfc905e09b1b02f0e8781331b62b3c58"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite (RingMicromega.PsubC_ok Zsor ZSORaddon).",
            "VernacExtend",
            "3afdab659eaacc40732672fe3343cbd81dd3bedc"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "destruct p as [[e' z] op].",
            "VernacExtend",
            "3c29f7f6b76ad5a026beba172be85a504e7f4670"
        ],
        [
            "case_eq (makeCuttingPlane e).",
            "VernacExtend",
            "1d9294c811414db838a0a914a1987ecd33f6623e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv H1.",
            "VernacExtend",
            "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
        ],
        [
            "apply makeCuttingPlane_ns_sound with (env:=env) (2:= H).",
            "VernacExtend",
            "d61dc790dfc905e09b1b02f0e8781331b62b3c58"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma genCuttingPlaneNone : forall env f, genCuttingPlane f = None -> eval_nformula env f -> False.",
            "VernacStartTheoremProof",
            "eabaf346e01b2e20b12777e0cbe4aa26df017b13"
        ],
        [
            "unfold genCuttingPlane.",
            "VernacExtend",
            "c59015cc04a5a1089b6824205943fa11670ebbdf"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "destruct o.",
            "VernacExtend",
            "7e45d273082b90e03f5f97cde65b5f989324a175"
        ],
        [
            "case_eq (Zgcd_pol p) ; intros g c.",
            "VernacExtend",
            "690aeb041de592e5f37111557d17bf4dbae298c6"
        ],
        [
            "case_eq (Z.gtb g 0 && (negb (Zeq_bool c 0) && negb (Zeq_bool (Z.gcd g c) g))).",
            "VernacExtend",
            "a92088208bf2e10f4f431680fde349f5b87f280b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "flatten_bool.",
            "VernacExtend",
            "626c702785b3a6f5f8ef4b7c0894160cf44a002e"
        ],
        [
            "rewrite negb_true_iff in H5.",
            "VernacExtend",
            "875a7bfedcb9e567e5cf9c619d84aae2f364612b"
        ],
        [
            "apply Zeq_bool_neq in H5.",
            "VernacExtend",
            "c374ce13b22e03939286c53eb8bc9e4c0ae775eb"
        ],
        [
            "rewrite <- Zgt_is_gt_bool in H3.",
            "VernacExtend",
            "844ae09c59adb91a25d516edac20e5441f8fe89f"
        ],
        [
            "rewrite negb_true_iff in H.",
            "VernacExtend",
            "24fac8337821d0ffbce5aaf906e263bfd5955048"
        ],
        [
            "apply Zeq_bool_neq in H.",
            "VernacExtend",
            "d2a0f2d245a8cca63e3f1e884c8091f28cdcc78a"
        ],
        [
            "change (eval_pol env p = 0) in H2.",
            "VernacExtend",
            "ad9442ce1db6ecb63b32d0debb39f846b968541b"
        ],
        [
            "rewrite Zgcd_pol_correct_lt with (1:= H0) in H2; auto with zarith.",
            "VernacExtend",
            "84899b7269f22d3102825b7526f5d27c7ac7d47f"
        ],
        [
            "set (x:=eval_pol env (Zdiv_pol (PsubC Z.sub p c) g)) in *; clearbody x.",
            "VernacExtend",
            "f9ab03788f6c16e4ea75cead8ddeedb69521ff93"
        ],
        [
            "contradict H5.",
            "VernacExtend",
            "5e51357531345c0702b93856bde66ff6c3af9b96"
        ],
        [
            "apply Zis_gcd_gcd; auto with zarith.",
            "VernacExtend",
            "d6e75d0520f73e9141945281b6184002dc002979"
        ],
        [
            "constructor; auto with zarith.",
            "VernacExtend",
            "f33cb26b696b6d1a3cbfe5798b6a8d0352d19cd1"
        ],
        [
            "exists (-x).",
            "VernacExtend",
            "08defb1588400a64e2b32a242cb38df0df66eff8"
        ],
        [
            "rewrite Z.mul_opp_l, Z.mul_comm; auto with zarith.",
            "VernacExtend",
            "407b22691ee99786b35b9c013c07749aff182acb"
        ],
        [
            "destruct (makeCuttingPlane p); discriminate.",
            "VernacExtend",
            "0b6569c125e26789b5d08581afc8e1b38817af19"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "destruct (makeCuttingPlane (PsubC Z.sub p 1)) ; discriminate.",
            "VernacExtend",
            "5197011012b6fa91ed2ba90220b908fd6286a57e"
        ],
        [
            "destruct (makeCuttingPlane p) ; discriminate.",
            "VernacExtend",
            "0b6569c125e26789b5d08581afc8e1b38817af19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ZChecker_sound : forall w l, ZChecker l w = true -> forall env, make_impl (eval_nformula env) l False.",
            "VernacStartTheoremProof",
            "22caf07f5bb8e6558352a8fdfbbba07cbd3c585e"
        ],
        [
            "induction w using (well_founded_ind (well_founded_ltof _ bdepth)).",
            "VernacExtend",
            "f38af8af3a572fc0c8a2cd32effe76857724b8b5"
        ],
        [
            "destruct w as [ | w pf | w pf | w1 w2 pf].",
            "VernacExtend",
            "278412fe289b0e88ab3e01259e23f8fa0e69806e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro l.",
            "VernacExtend",
            "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
        ],
        [
            "case_eq (eval_Psatz l w) ; [| discriminate].",
            "VernacExtend",
            "c49f181b79283ec83289a2155154214c6e62e118"
        ],
        [
            "intros f Hf.",
            "VernacExtend",
            "c19df1812f5aac92c483b278685c4b2ecd58345f"
        ],
        [
            "case_eq (Zunsat f).",
            "VernacExtend",
            "4078843e37d45c230e54ba50cfc6675f561be546"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (checker_nf_sound Zsor ZSORaddon l w).",
            "VernacExtend",
            "43935eaee05c5443cc8aabb3910d10db2769e76f"
        ],
        [
            "unfold check_normalised_formulas.",
            "VernacExtend",
            "e696c9832df45959ae987edd8c2d2d3e052d1d64"
        ],
        [
            "unfold eval_Psatz in Hf.",
            "VernacExtend",
            "e64ef5ee0aba7bd8623706f7e624f70babe7894f"
        ],
        [
            "rewrite Hf.",
            "VernacExtend",
            "4b4ea75b42501c41b9cce49efd492d21013c9685"
        ],
        [
            "unfold Zunsat in H0.",
            "VernacExtend",
            "0560d553df5e6a32fce2ebd6af66f8a7d9311801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (make_impl (eval_nformula env) (f::l) False).",
            "VernacExtend",
            "fb9ecd2c5a6de9ccfce7becfd113c1352a8f7c69"
        ],
        [
            "apply H with (2:= H1).",
            "VernacExtend",
            "2dba38353014505677ba4ab5bad6b8781e4ebecf"
        ],
        [
            "unfold ltof.",
            "VernacExtend",
            "94a16daf7f117e07e3e7447f31277b9102450ca9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "rewrite <- make_conj_impl in H2.",
            "VernacExtend",
            "3efad45a2e5b16d0aa35bc3320f565547ca93d72"
        ],
        [
            "rewrite make_conj_cons in H2.",
            "VernacExtend",
            "0a3b53b8c3895425b257f436c91d23eec2a6f458"
        ],
        [
            "rewrite <- make_conj_impl.",
            "VernacExtend",
            "16058801ff6489ef973a9b5b9fe81dad7e531441"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "split ; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply eval_Psatz_sound with (2:= Hf) ; assumption.",
            "VernacExtend",
            "698a649c220ee6dec4c2d464df86bbd4c24fbbb0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro l.",
            "VernacExtend",
            "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
        ],
        [
            "case_eq (eval_Psatz l w) ; [ | discriminate].",
            "VernacExtend",
            "c49f181b79283ec83289a2155154214c6e62e118"
        ],
        [
            "intros f' Hlc.",
            "VernacExtend",
            "26826874f55e3ffb1158fc8950d7f5a899f68dd9"
        ],
        [
            "case_eq (genCuttingPlane f').",
            "VernacExtend",
            "abc3128d0fe2a690e5af1dbf5ed416e8d49f7a90"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (make_impl (eval_nformula env) (nformula_of_cutting_plane p::l) False).",
            "VernacExtend",
            "953bfcd5d340fb639b9c344016add5246e5fea1b"
        ],
        [
            "eapply (H pf) ; auto.",
            "VernacExtend",
            "2c888f3a6a0b4b5e0868312db1e18036848fce53"
        ],
        [
            "unfold ltof.",
            "VernacExtend",
            "94a16daf7f117e07e3e7447f31277b9102450ca9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite <- make_conj_impl in H2.",
            "VernacExtend",
            "3efad45a2e5b16d0aa35bc3320f565547ca93d72"
        ],
        [
            "rewrite make_conj_cons in H2.",
            "VernacExtend",
            "0a3b53b8c3895425b257f436c91d23eec2a6f458"
        ],
        [
            "rewrite <- make_conj_impl.",
            "VernacExtend",
            "16058801ff6489ef973a9b5b9fe81dad7e531441"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "split ; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply eval_Psatz_sound with (env:=env) in Hlc.",
            "VernacExtend",
            "0976b2c80fb62c899918eb91bf791050fdf69da1"
        ],
        [
            "apply cutting_plane_sound with (1:= Hlc) (2:= H0).",
            "VernacExtend",
            "ee179c91a6546cf16e7ace0f35f3b1ae1397d029"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- make_conj_impl.",
            "VernacExtend",
            "16058801ff6489ef973a9b5b9fe81dad7e531441"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eval_Psatz_sound with (2:= Hlc) in H2.",
            "VernacExtend",
            "109e570d8935d849340f26ccb53bc42e0ace5719"
        ],
        [
            "apply genCuttingPlaneNone with (2:= H2) ; auto.",
            "VernacExtend",
            "768de2ce1b37d9901e9996ecf2197d70f3f44fde"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (eval_Psatz l w1) ; [ | discriminate].",
            "VernacExtend",
            "1a378dbde699a9097a7011da8e9eb2757e105740"
        ],
        [
            "case_eq (eval_Psatz l w2) ; [ | discriminate].",
            "VernacExtend",
            "0f97a4209585332ca3cc8786b17c84a6036eec1f"
        ],
        [
            "intros f1 Hf1 f2 Hf2.",
            "VernacExtend",
            "4344a901aba8a128e1c145e0a27c0ea3840359aa"
        ],
        [
            "case_eq (genCuttingPlane f2).",
            "VernacExtend",
            "cf5523c11b55395916c541363313a80e6bc20b5f"
        ],
        [
            "destruct p as [ [p1 z1] op1].",
            "VernacExtend",
            "a748cf1eeb65f2b9d4f9131eae9aacb822b0d753"
        ],
        [
            "case_eq (genCuttingPlane f1).",
            "VernacExtend",
            "fabad23db7e6acbbf8a700b1dd5cb9cc560757c8"
        ],
        [
            "destruct p as [ [p2 z2] op2].",
            "VernacExtend",
            "70346f71ebe0b629771a71d71fabfeefd3b4f117"
        ],
        [
            "case_eq (valid_cut_sign op1 && valid_cut_sign op2 && is_pol_Z0 (padd p1 p2)).",
            "VernacExtend",
            "fd673d558182a3720439f55d5e4be6fc1d7a5a03"
        ],
        [
            "intros Hcond.",
            "VernacExtend",
            "27d23df072892e07e20ef7ad86097b1de42fd861"
        ],
        [
            "flatten_bool.",
            "VernacExtend",
            "626c702785b3a6f5f8ef4b7c0894160cf44a002e"
        ],
        [
            "rename H1 into HZ0.",
            "VernacExtend",
            "5a991061fe3f3c3134c2d140e258dd5310269b78"
        ],
        [
            "rename H2 into Hop1.",
            "VernacExtend",
            "a5c88f001b63bf054bed3a9e9b1d925df2be03da"
        ],
        [
            "rename H3 into Hop2.",
            "VernacExtend",
            "8d1338191c0071e15d2d2dc402547feecfcf05cd"
        ],
        [
            "intros HCutL HCutR Hfix env.",
            "VernacExtend",
            "1517349d13baf8b1f8ec31f11397ad453a992598"
        ],
        [
            "rewrite <- make_conj_impl.",
            "VernacExtend",
            "16058801ff6489ef973a9b5b9fe81dad7e531441"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (-z1 <= eval_pol env p1 <= z2).",
            "VernacExtend",
            "ef9eb591bff4ca11f1f206bb06ec490e451629eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply eval_Psatz_sound with (env:=env) in Hf2 ; auto.",
            "VernacExtend",
            "4c4e7d50f436df7933db3006dccf53d08326fd01"
        ],
        [
            "apply cutting_plane_sound with (1:= Hf2) in HCutR.",
            "VernacExtend",
            "dac37b8e8834c561407620e2ce0621444240a2f6"
        ],
        [
            "unfold nformula_of_cutting_plane in HCutR.",
            "VernacExtend",
            "8e0a05807f6568a05a95f44e0c2441c423e186f9"
        ],
        [
            "unfold eval_nformula in HCutR.",
            "VernacExtend",
            "e6d974720f473ab99ad33573904068a74829585b"
        ],
        [
            "unfold RingMicromega.eval_nformula in HCutR.",
            "VernacExtend",
            "9cb32032113e34bb8ad698d1172ada5011df4683"
        ],
        [
            "change (RingMicromega.eval_pol Z.add Z.mul (fun x : Z => x)) with eval_pol in HCutR.",
            "VernacExtend",
            "bc40f106d7f026d08e14de89c97478fffe4595d3"
        ],
        [
            "unfold eval_op1 in HCutR.",
            "VernacExtend",
            "1417c811343d47dd1534c86c64319bf8540d5650"
        ],
        [
            "destruct op1 ; simpl in Hop1 ; try discriminate; rewrite eval_pol_add in HCutR; simpl in HCutR; auto with zarith.",
            "VernacExtend",
            "4f81497809b7d894dd4a6a80b9b22f3af7842e0c"
        ],
        [
            "apply is_pol_Z0_eval_pol with (env := env) in HZ0.",
            "VernacExtend",
            "2c32118b71c3bf5a9220b056cab404271be17f8e"
        ],
        [
            "rewrite eval_pol_add in HZ0.",
            "VernacExtend",
            "146bcd501e04223dc4367a9482f1c225c87c2d65"
        ],
        [
            "replace (eval_pol env p1) with (- eval_pol env p2) by omega.",
            "VernacExtend",
            "cb95468a27759532c35b1802517c752c90f14112"
        ],
        [
            "apply eval_Psatz_sound with (env:=env) in Hf1 ; auto.",
            "VernacExtend",
            "7775d9f1346a1cb4ac26f1107ee11f276b588179"
        ],
        [
            "apply cutting_plane_sound with (1:= Hf1) in HCutL.",
            "VernacExtend",
            "ab1243fada303b26421030274201d9bec739ca1d"
        ],
        [
            "unfold nformula_of_cutting_plane in HCutL.",
            "VernacExtend",
            "1c371ff8de5133635d571357b28480d137012d91"
        ],
        [
            "unfold eval_nformula in HCutL.",
            "VernacExtend",
            "74095dba0871d4c637c98e4b2c7dae0a99c6095c"
        ],
        [
            "unfold RingMicromega.eval_nformula in HCutL.",
            "VernacExtend",
            "b72d8a0913d00263c319374697e1cf578d43c6f3"
        ],
        [
            "change (RingMicromega.eval_pol Z.add Z.mul (fun x : Z => x)) with eval_pol in HCutL.",
            "VernacExtend",
            "73c4267d7f8e276bebf1478c11fa2c42c6a06f0c"
        ],
        [
            "unfold eval_op1 in HCutL.",
            "VernacExtend",
            "44d192f4fd9de025146f34bd78b572c35f42c539"
        ],
        [
            "rewrite eval_pol_add in HCutL.",
            "VernacExtend",
            "1036172c7e4e20a96ae02a7a2ead4e658d20de0b"
        ],
        [
            "simpl in HCutL.",
            "VernacExtend",
            "666209282613ce3de60a000db1e3facae94d8f40"
        ],
        [
            "destruct op2 ; simpl in Hop2 ; try discriminate ; omega.",
            "VernacExtend",
            "703e8ea4febb86fe5ec6a2360c50176bc681c862"
        ],
        [
            "revert Hfix.",
            "VernacExtend",
            "32f9f2f00c4fa03c6b19faf287cace5405abe7ad"
        ],
        [
            "match goal with | |- context[?F pf (-z1) z2 = true] => set (FF := F) end.",
            "VernacExtend",
            "aef9426de25f4945e176725b01ffa50091025e10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HH :forall x, -z1 <= x <= z2 -> exists pr, (In pr pf /\\ ZChecker ((PsubC Z.sub p1 x,Equal) :: l) pr = true)%Z).",
            "VernacExtend",
            "dcb5dda6a0d225f8a14834f0ac2e39499fbcf300"
        ],
        [
            "clear HZ0 Hop1 Hop2 HCutL HCutR H0 H1.",
            "VernacExtend",
            "dc6eab6b34941891f67fce98a6c671e6aef63580"
        ],
        [
            "revert Hfix.",
            "VernacExtend",
            "32f9f2f00c4fa03c6b19faf287cace5405abe7ad"
        ],
        [
            "generalize (-z1).",
            "VernacExtend",
            "cf980c4bf0a97651c76585ddca94a38025b54094"
        ],
        [
            "clear z1.",
            "VernacExtend",
            "7bcac5d6beb0e0986e21f2397c3f6bc8ca4e60f4"
        ],
        [
            "intro z1.",
            "VernacExtend",
            "b49725816ea25231ec5fbad9cff78aebebf5e7e7"
        ],
        [
            "revert z1 z2.",
            "VernacExtend",
            "5de660f5f3d58123f75dc07d69652461db89d9a7"
        ],
        [
            "induction pf;simpl ;intros.",
            "VernacExtend",
            "e89f174d514810bab41498e99ffe7dffc1dd0699"
        ],
        [
            "generalize (Zgt_cases z1 z2).",
            "VernacExtend",
            "e4589a0d89bcdcb50f24c4e1c68cb95bc61de1bc"
        ],
        [
            "destruct (Z.gtb z1 z2).",
            "VernacExtend",
            "65da2b438c263283f505ab6df45428cda45aaa10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply False_ind ; omega.",
            "VernacExtend",
            "94a150be286c877cfb0a09d10a901237775943b9"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "flatten_bool.",
            "VernacExtend",
            "626c702785b3a6f5f8ef4b7c0894160cf44a002e"
        ],
        [
            "assert (HH:(x = z1 \\/ z1 +1 <=x)%Z) by omega.",
            "VernacExtend",
            "39eadd7639c865fc9f973ff43ce72a5215a1c0ae"
        ],
        [
            "destruct HH.",
            "VernacExtend",
            "2031b05f8edccf0626b2db5748c34d216d5f04cf"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exists a ; auto.",
            "VernacExtend",
            "dd5a786237df3984e1d2bb0f96b1da3befb55aac"
        ],
        [
            "assert (z1 + 1 <= x <= z2)%Z by omega.",
            "VernacExtend",
            "02616c9b37cfff775d1c77c92565221705d0a925"
        ],
        [
            "elim IHpf with (2:=H2) (3:= H4).",
            "VernacExtend",
            "51198a5e6fb1e9d14117949c841f3eacb0a630f1"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists x0 ; split;tauto.",
            "VernacExtend",
            "85ebb1d5a8573279a987e30b1dd948b142094266"
        ],
        [
            "intros until 1.",
            "VernacExtend",
            "02a88d708d00fec9315af96f54c66efbe80acead"
        ],
        [
            "apply H ; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "unfold ltof in *.",
            "VernacExtend",
            "430b9316bac61cb6e12266b8ac45ba88ba54871f"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "destruct (HH _ H1) as [pr [Hin Hcheker]].",
            "VernacExtend",
            "30f20054cef5abe60b13c5b762ebdde88a54fc2a"
        ],
        [
            "assert (make_impl (eval_nformula env) ((PsubC Z.sub p1 (eval_pol env p1),Equal) :: l) False).",
            "VernacExtend",
            "befb23785d2d301b0a8c72f5f49c47956ead58b5"
        ],
        [
            "apply (H pr);auto.",
            "VernacExtend",
            "67845e73d29e4945009c6c16f38fc3fa7eaeb4d3"
        ],
        [
            "apply in_bdepth ; auto.",
            "VernacExtend",
            "f31cbda071d302dc574718c72a62fed07dcccf0c"
        ],
        [
            "rewrite <- make_conj_impl in H2.",
            "VernacExtend",
            "3efad45a2e5b16d0aa35bc3320f565547ca93d72"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "rewrite make_conj_cons.",
            "VernacExtend",
            "caa83bc9bc3178c6d9eaa6a8025b66ef5eb539a6"
        ],
        [
            "split ;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "unfold eval_nformula.",
            "VernacExtend",
            "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
        ],
        [
            "unfold RingMicromega.eval_nformula.",
            "VernacExtend",
            "b72468f3695ea5b5942c658542acff15eef07726"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (RingMicromega.PsubC_ok Zsor ZSORaddon).",
            "VernacExtend",
            "3afdab659eaacc40732672fe3343cbd81dd3bedc"
        ],
        [
            "unfold eval_pol.",
            "VernacExtend",
            "97ef1823ff1bf4fc4a50bd96d25147f8ac32f014"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- make_conj_impl.",
            "VernacExtend",
            "16058801ff6489ef973a9b5b9fe81dad7e531441"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eval_Psatz_sound with (2:= Hf1) in H3.",
            "VernacExtend",
            "06143f2249b769ade52e5f2384edc3d578334475"
        ],
        [
            "apply genCuttingPlaneNone with (2:= H3) ; auto.",
            "VernacExtend",
            "921e439c762e52cc2a53abe4747f1795f5f2089d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- make_conj_impl.",
            "VernacExtend",
            "16058801ff6489ef973a9b5b9fe81dad7e531441"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eval_Psatz_sound with (2:= Hf2) in H2.",
            "VernacExtend",
            "41433649e03172778d739b8b9794c9d3e69f5005"
        ],
        [
            "apply genCuttingPlaneNone with (2:= H2) ; auto.",
            "VernacExtend",
            "768de2ce1b37d9901e9996ecf2197d70f3f44fde"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ZTautoChecker (f : BFormula (Formula Z)) (w: list ZArithProof): bool := @tauto_checker (Formula Z) (NFormula Z) Zunsat Zdeduce normalise negate ZArithProof ZChecker f w.",
            "VernacDefinition",
            "57f3cf3a6af4ea865e644b2e14c0201328fb75d2"
        ],
        [
            "Lemma ZTautoChecker_sound : forall f w, ZTautoChecker f w = true -> forall env, eval_f (Zeval_formula env) f.",
            "VernacStartTheoremProof",
            "54ab5f3d3f079344eb640eac1671be3e6b4ad87d"
        ],
        [
            "intros f w.",
            "VernacExtend",
            "093149563e1f16cc847b4fd17251f4213ff5258a"
        ],
        [
            "unfold ZTautoChecker.",
            "VernacExtend",
            "bb02dda66ebe6fbeff0b910e43e6ff5f05db486b"
        ],
        [
            "apply (tauto_checker_sound Zeval_formula eval_nformula).",
            "VernacExtend",
            "ca2ea0741bcd6fe8a557d11b2647e7c4c587d9c5"
        ],
        [
            "apply Zeval_nformula_dec.",
            "VernacExtend",
            "bb5f3c2bbc6c97fa527bc39c35ec6de8950f45b4"
        ],
        [
            "intros until env.",
            "VernacExtend",
            "7492f8507d556aa61d1c852593db279b09bffcf6"
        ],
        [
            "unfold eval_nformula.",
            "VernacExtend",
            "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
        ],
        [
            "unfold RingMicromega.eval_nformula.",
            "VernacExtend",
            "b72468f3695ea5b5942c658542acff15eef07726"
        ],
        [
            "destruct t.",
            "VernacExtend",
            "03d3fc39431171b40684d8dff6748881af772fc7"
        ],
        [
            "apply (check_inconsistent_sound Zsor ZSORaddon) ; auto.",
            "VernacExtend",
            "aec9acb86288df5d7394a24ff2233409de0e3f9a"
        ],
        [
            "unfold Zdeduce.",
            "VernacExtend",
            "1cdc7467da3dce59d19c351ebf3b6298e8a66390"
        ],
        [
            "apply (nformula_plus_nformula_correct Zsor ZSORaddon).",
            "VernacExtend",
            "3af56c4f7c63b0b8259708c161e0918c74592ffc"
        ],
        [
            "intros env t.",
            "VernacExtend",
            "1e7159321e078681320819d685fa405d4cb8da63"
        ],
        [
            "rewrite normalise_correct ; auto.",
            "VernacExtend",
            "9b0294fb876682d64434b7e0e6eaa8210ce21568"
        ],
        [
            "intros env t.",
            "VernacExtend",
            "1e7159321e078681320819d685fa405d4cb8da63"
        ],
        [
            "rewrite negate_correct ; auto.",
            "VernacExtend",
            "f127714f4b176f70ad030fb120ba4acdf71bdeb6"
        ],
        [
            "intros t w0.",
            "VernacExtend",
            "ec6f396d3dc75112d5253d6d5c8cddcceb7662ad"
        ],
        [
            "apply ZChecker_sound.",
            "VernacExtend",
            "c81315cec0cb7ba861279ce0541b1966ecd8a979"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint xhyps_of_pt (base:nat) (acc : list nat) (pt:ZArithProof) : list nat := match pt with | DoneProof => acc | RatProof c pt => xhyps_of_pt (S base ) (xhyps_of_psatz base acc c) pt | CutProof c pt => xhyps_of_pt (S base ) (xhyps_of_psatz base acc c) pt | EnumProof c1 c2 l => let acc := xhyps_of_psatz base (xhyps_of_psatz base acc c2) c1 in List.fold_left (xhyps_of_pt (S base)) l acc end.",
            "VernacFixpoint",
            "7917ef65448c16571a47af37adc0e167f1c5ecac"
        ],
        [
            "Definition hyps_of_pt (pt : ZArithProof) : list nat := xhyps_of_pt 0 nil pt.",
            "VernacDefinition",
            "00a7d91086a1f80ee61686148ac26816e1364399"
        ],
        [
            "Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5d5d2991d98cf1203a824951a099efb9d105702f"
        ],
        [
            "Definition make_impl := Refl.make_impl.",
            "VernacDefinition",
            "66f1c823d891f4643ce3edadb0e2252749f168d5"
        ],
        [
            "Definition make_conj := Refl.make_conj.",
            "VernacDefinition",
            "802cef8a3c40ec8de48860ecfa50cd44f079f726"
        ],
        [
            "Require VarMap.",
            "VernacRequire",
            "1b2cef541284b9d64eb3cf9e2b49b2a543071214"
        ],
        [
            "Definition env := PolEnv Z.",
            "VernacDefinition",
            "9f9c9a8e890d7febe234a98ee5591cacd7c0df3d"
        ],
        [
            "Definition node := @VarMap.Node Z.",
            "VernacDefinition",
            "e150463c3cf801e2c884255dfd3be126370cbe0d"
        ],
        [
            "Definition empty := @VarMap.Empty Z.",
            "VernacDefinition",
            "4a3946caf51874a2d2128dd0e8a849a32a9ca7b9"
        ],
        [
            "Definition leaf := @VarMap.Leaf Z.",
            "VernacDefinition",
            "cdcea066553964c69c17cdfd04bfdbfa032de3e5"
        ],
        [
            "Definition coneMember := ZWitness.",
            "VernacDefinition",
            "9d9541a1c7b702f410679179a55b835b20c08945"
        ],
        [
            "Definition eval := eval_formula.",
            "VernacDefinition",
            "1ea3e6ab68250b2e86b957b8fae545dc7437e6a1"
        ],
        [
            "Definition prod_pos_nat := prod positive nat.",
            "VernacDefinition",
            "997165a8e54ba0dc4b7ee76efdb36901a307c94f"
        ],
        [
            "Notation n_of_Z := Z.to_N (only parsing).",
            "VernacSyntacticDefinition",
            "d0c17ca9492b2f22ea711a3caa39a12c5f5773a2"
        ]
    ],
    "proofs": [
        {
            "name": "Zsor",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "constructor ; intros ; subst ; try (intuition (auto with zarith)).",
                        "VernacExtend",
                        "bb14918e028124fd0cfce66eb95ca58e844e4958"
                    ]
                },
                {
                    "command": [
                        "apply Zsth.",
                        "VernacExtend",
                        "af95139ad2fafe14f279988abd788ceb081f0051"
                    ]
                },
                {
                    "command": [
                        "apply Zth.",
                        "VernacExtend",
                        "4625491a9eed1a4e0ad09445429e7207fe1532ed"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.lt_trichotomy n m) ; intuition.",
                        "VernacExtend",
                        "056da982ea69db8b9b49e7819c172b703e9fe24a"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_pos_pos ; auto.",
                        "VernacExtend",
                        "02dc259c959c59cd6fe1dc04f23a9899c1c35dc2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZSORaddon",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor ; intros ; try reflexivity.",
                        "VernacExtend",
                        "3ae81ad63c059c8d5ac04af317f72ed83ce4481e"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_bool_eq ; auto.",
                        "VernacExtend",
                        "583a0875ef8311014d6034b5e19d25c9c20ba5af"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_bool_neq ; auto.",
                        "VernacExtend",
                        "131c82556a62f9b2ecc62fc428716cf80691a5b7"
                    ]
                },
                {
                    "command": [
                        "apply Zle_bool_imp_le.",
                        "VernacExtend",
                        "9fbe4aec09efdd724d40942f53da7cc22fdae5a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZNpower",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Z.pow_pos.",
                        "VernacExtend",
                        "13ec7dee336eefe7ccb951c670fc99547468032a"
                    ]
                },
                {
                    "command": [
                        "replace (pow_pos Z.mul r p) with (1 * (pow_pos Z.mul r p)) by ring.",
                        "VernacExtend",
                        "8c67a07958a964f8499fb9746178a9e8a6c5d55c"
                    ]
                },
                {
                    "command": [
                        "generalize 1.",
                        "VernacExtend",
                        "e8ae36184c02cd7f6e56df94d95ec9e99be783fb"
                    ]
                },
                {
                    "command": [
                        "induction p; simpl ; intros ; repeat rewrite IHp ; ring.",
                        "VernacExtend",
                        "02d9240d3842b430878e290acd0fdd6df561fc73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeval_expr_compat",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "induction e ; simpl ; try congruence.",
                        "VernacExtend",
                        "48e1a916ce65e6aea21f7e3f76805c5414b36a2a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite ZNpower.",
                        "VernacExtend",
                        "2a8641a8e53e220dcf64d5a31e7e7c6b8dcaa803"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeval_formula_compat",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "destruct f ; simpl.",
                        "VernacExtend",
                        "5ab77c865e5ffb10c040a3c8d321e06dea47ffb1"
                    ]
                },
                {
                    "command": [
                        "rewrite Zeval_expr_compat.",
                        "VernacExtend",
                        "c5629fc4ca3d41fc7fa15f3118d076e2a346a93b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zeval_expr_compat.",
                        "VernacExtend",
                        "c5629fc4ca3d41fc7fa15f3118d076e2a346a93b"
                    ]
                },
                {
                    "command": [
                        "unfold eval_expr.",
                        "VernacExtend",
                        "88c0320ab37c10a0502a8d1ce9927e223f07ca66"
                    ]
                },
                {
                    "command": [
                        "generalize (eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env Flhs).",
                        "VernacExtend",
                        "3f7227d9f6b0b3695b0773e85f79ffbebb1ab074"
                    ]
                },
                {
                    "command": [
                        "generalize ((eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env Frhs)).",
                        "VernacExtend",
                        "688bf275ba3aa736be5cf88351b5a59dcac9b13e"
                    ]
                },
                {
                    "command": [
                        "destruct Fop ; simpl; intros ; intuition (auto with zarith).",
                        "VernacExtend",
                        "b8e8eea6765c75426db148fcad45b379be501ce4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeval_nformula_dec",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (eval_nformula_dec Zsor).",
                        "VernacExtend",
                        "65b1e86bdfe4f9ac8876019c5a24f6cd0dd24d79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZWeakChecker_sound",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros l cm H.",
                        "VernacExtend",
                        "dc8be6c80b36e23d8b630fca309875b5db7436e8"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula.",
                        "VernacExtend",
                        "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
                    ]
                },
                {
                    "command": [
                        "apply (checker_nf_sound Zsor ZSORaddon l cm).",
                        "VernacExtend",
                        "be97568329d662743be29ccf1b48084720df9f69"
                    ]
                },
                {
                    "command": [
                        "unfold ZWeakChecker in H.",
                        "VernacExtend",
                        "fc149314d56e277c5075aa52bf5213a89f6e2a4c"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_pol_sub",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (eval_pol_sub Zsor ZSORaddon).",
                        "VernacExtend",
                        "caf621db75b428283bd59aa16f1a0447988962e2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_pol_add",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (eval_pol_add Zsor ZSORaddon).",
                        "VernacExtend",
                        "8504870a0df4faa4315977f5950e0e184a215dd1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_pol_norm",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (eval_pol_norm Zsor ZSORaddon).",
                        "VernacExtend",
                        "c771cbb3786435f8bacedc07dac9742f18e46d85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normalise_correct",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "unfold normalise, xnormalise; cbn -[padd]; intros env t.",
                        "VernacExtend",
                        "32be6807dfd28a5a46b710fbcada1be37e349d6d"
                    ]
                },
                {
                    "command": [
                        "rewrite Zeval_formula_compat.",
                        "VernacExtend",
                        "3549e2d3e69adad07e7d5bbc0becc29059fde117"
                    ]
                },
                {
                    "command": [
                        "unfold eval_cnf, eval_clause.",
                        "VernacExtend",
                        "7e73812c7a0b611834fda91cb3fcd7e43a1d627e"
                    ]
                },
                {
                    "command": [
                        "destruct t as [lhs o rhs]; case_eq o; cbn -[padd]; repeat rewrite eval_pol_sub; repeat rewrite eval_pol_add; repeat rewrite <- eval_pol_norm ; simpl in *; unfold eval_expr; generalize ( eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env lhs); generalize (eval_pexpr Z.add Z.mul Z.sub Z.opp (fun x : Z => x) (fun x : N => x) (pow_N 1 Z.mul) env rhs) ; intros z1 z2 ; intros ; subst; intuition (auto with zarith).",
                        "VernacExtend",
                        "78ef00f359e9878b05fd7a216a20f9627734e4a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdivide_ceiling",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "unfold ceiling.",
                        "VernacExtend",
                        "6a1bf32bcb09c403b770acf50834318eb8ffd6ba"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_mod in H.",
                        "VernacExtend",
                        "ddbf025ad1c2ac208f9c67dd1f27979ea82154ef"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z.div_eucl a b).",
                        "VernacExtend",
                        "99993f1f7d2a9a4a43ca4fdbee81818f14d574f2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change z with (fst (z,z0)).",
                        "VernacExtend",
                        "e7a1bac758a5fb3a42b1a30b1af95b912ac46332"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "change (fst (Z.div_eucl a b)) with (Z.div a b).",
                        "VernacExtend",
                        "c34a8038d5b7d33822b23a8079dc5cfc6cd947ca"
                    ]
                },
                {
                    "command": [
                        "change z0 with (snd (z,z0)).",
                        "VernacExtend",
                        "e1081c8a3dd3e208e38b8fad3ad8565e2b049357"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "change (snd (Z.div_eucl a b)) with (Z.modulo a b).",
                        "VernacExtend",
                        "badb360edd8c2d7d724e7b83743a99de48394ece"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "narrow_interval_lower_bound",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "rewrite !Z.ge_le_iff.",
                        "VernacExtend",
                        "56d0d65a44a6e4a65e99029aa7b9c67221640f7d"
                    ]
                },
                {
                    "command": [
                        "unfold ceiling.",
                        "VernacExtend",
                        "6a1bf32bcb09c403b770acf50834318eb8ffd6ba"
                    ]
                },
                {
                    "command": [
                        "intros Ha H.",
                        "VernacExtend",
                        "5bf146c32a53b249a44c08c854f997f3e3421699"
                    ]
                },
                {
                    "command": [
                        "generalize (Z_div_mod b a Ha).",
                        "VernacExtend",
                        "40e4b537aeff3313028f7dcbf6ba7004a62d9dee"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.div_eucl b a) as (q,r).",
                        "VernacExtend",
                        "97c0acd8cf520f3cf8b3044ba01732e9df01aa14"
                    ]
                },
                {
                    "command": [
                        "intros (->,(H1,H2)).",
                        "VernacExtend",
                        "a68f0a4ec39bb7a3904494a4a81715995c7ca065"
                    ]
                },
                {
                    "command": [
                        "destruct r as [|r|r].",
                        "VernacExtend",
                        "c6f4dce8f41cb46ec1b4e8aaf76cb7ca1eb60127"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r in H.",
                        "VernacExtend",
                        "80e12d5165512abc971f20571e636b1b9382adbc"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_le_mono_pos_l in H; auto with zarith.",
                        "VernacExtend",
                        "2030b5c45ec5b2202a8d5861dec177c4641bfaac"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (0 < Z.pos r) by easy.",
                        "VernacExtend",
                        "7ad6e5dbe6511c74e5a5b14e496d02a47b5a1a86"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_1_r, Z.le_succ_l.",
                        "VernacExtend",
                        "fb9543264240edc4921b8009c962c166c7933644"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_lt_mono_pos_l with a; auto with zarith.",
                        "VernacExtend",
                        "c677c72fc0463439a6c70ff9c8d976ede0fbd8f0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now elim H1.",
                        "VernacExtend",
                        "2ab16c3197a197912c4c6d3937eb2a6256d6f3b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isZ0_0",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "destruct x ; simpl ; intuition congruence.",
                        "VernacExtend",
                        "064b11fdc7b71671d190c11b621b0a9d07b8fe9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isZ0_n0",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "destruct x ; simpl ; intuition congruence.",
                        "VernacExtend",
                        "064b11fdc7b71671d190c11b621b0a9d07b8fe9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdiv_pol_correct",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros until 2.",
                        "VernacExtend",
                        "25d53df52aa689fd0ef563f083611f46b09e6366"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_Zdiv_eq ; auto.",
                        "VernacExtend",
                        "b52de9b28d4aae9f7fbbad5deb87e39cbd191110"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply IHZdivide_pol.",
                        "VernacExtend",
                        "8e16ba492b598558614390e4b61a697926d75a69"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite IHZdivide_pol1.",
                        "VernacExtend",
                        "afe89a4844222275472cd0015c69e309083009c8"
                    ]
                },
                {
                    "command": [
                        "rewrite IHZdivide_pol2.",
                        "VernacExtend",
                        "67d9af54e61a3e00ac59ce6816a58566f8e2bd5e"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgcd_pol_ge",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zgcd_pol p1).",
                        "VernacExtend",
                        "36df9b596e2b1e65e281a4f661c377effd1dfc0e"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zgcd_pol p3).",
                        "VernacExtend",
                        "e7d72d2794526759628778e3201786989364a5d4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold ZgcdM.",
                        "VernacExtend",
                        "1daff5587b6de8bbf0caeba6cedeb36ca3691cdf"
                    ]
                },
                {
                    "command": [
                        "generalize (Z.gcd_nonneg z1 z2).",
                        "VernacExtend",
                        "485a92d73e81d43468232ba539fb1f5103bb6738"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmax_spec (Z.gcd z1 z2) 1).",
                        "VernacExtend",
                        "a7a99ccda121377ffd13b6b18bf8495d79ab8f7f"
                    ]
                },
                {
                    "command": [
                        "generalize (Z.gcd_nonneg (Z.max (Z.gcd z1 z2) 1) z).",
                        "VernacExtend",
                        "8135df7f32c3032c590f6e4e3883c9502e8f58ab"
                    ]
                },
                {
                    "command": [
                        "generalize (Zmax_spec (Z.gcd (Z.max (Z.gcd z1 z2) 1) z) 1).",
                        "VernacExtend",
                        "8775594f56d5da631f67c43676d87b22da4f0ac4"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdivide_pol_Zdivide",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Z.divide_trans with (1:= H0) ; assumption.",
                        "VernacExtend",
                        "5de9ab63ffae666fbf436150a756695f9965b5a1"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "constructor ; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdivide_pol_one",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "induction p ; constructor ; auto.",
                        "VernacExtend",
                        "1ab173416f512255cee0f5dbde14fab9a5973103"
                    ]
                },
                {
                    "command": [
                        "exists c.",
                        "VernacExtend",
                        "683d4593ad0b3c7125e420e0670d5a4b0d3c38bc"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgcd_minus",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros a b c (q,Hq).",
                        "VernacExtend",
                        "93c939ecaa670f52ce0c685875d06975b5bc1a4a"
                    ]
                },
                {
                    "command": [
                        "destruct (Zgcd_is_gcd a b) as [(a',Ha) (b',Hb) _].",
                        "VernacExtend",
                        "10a0fc9c67f47228d474251685f872a77c3223ba"
                    ]
                },
                {
                    "command": [
                        "set (g:=Z.gcd a b) in *; clearbody g.",
                        "VernacExtend",
                        "b5f409ab4141c3daa1ee5375dc0a3621a3a5390f"
                    ]
                },
                {
                    "command": [
                        "exists (q * a' + b').",
                        "VernacExtend",
                        "400faf70aac7bed831aa8340d6689d87ce04654e"
                    ]
                },
                {
                    "command": [
                        "symmetry in Hq.",
                        "VernacExtend",
                        "815b074db3cbab0d8d50e880f146883a014e2900"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.add_move_r in Hq.",
                        "VernacExtend",
                        "5e5061e36a5ef7dbf9d30fe9944e783f3d7220b0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hq, Hb, Ha.",
                        "VernacExtend",
                        "6c5a8c9436254ba7bca3e420cfb005cefa55c9e5"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdivide_pol_sub",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Zgcd_minus ; auto.",
                        "VernacExtend",
                        "4518a552c8de7a05f887c12294ada9c66aff274e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "inversion H0 ; subst; clear H0.",
                        "VernacExtend",
                        "67633bcad1f08913253223fb1d000a0f96a47e48"
                    ]
                },
                {
                    "command": [
                        "apply IHp ; auto.",
                        "VernacExtend",
                        "4f80890f42f601e04885342d407902fe63b6592c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_Zdivide with (1:= H3).",
                        "VernacExtend",
                        "3a4de41cbfb3364565cbd552cd1c0dc45d633ce3"
                    ]
                },
                {
                    "command": [
                        "destruct (Zgcd_is_gcd a b) ; assumption.",
                        "VernacExtend",
                        "d9dc70570d968ee5c6030599f81b940af6bffc15"
                    ]
                },
                {
                    "command": [
                        "apply IHp2 ; assumption.",
                        "VernacExtend",
                        "c88343c6ecc360ec08783f956591d373a19385b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdivide_pol_sub_0",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "replace (c - 0) with c in H1 ; auto with zarith.",
                        "VernacExtend",
                        "02101b5a0649b603317d9d1b730f966130e1d50c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "inversion H ; subst; clear H.",
                        "VernacExtend",
                        "af91d9c91d2a2af0497b29ec223cb26a1faa1092"
                    ]
                },
                {
                    "command": [
                        "apply IHp ; auto.",
                        "VernacExtend",
                        "4f80890f42f601e04885342d407902fe63b6592c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IHp2 ; assumption.",
                        "VernacExtend",
                        "c88343c6ecc360ec08783f956591d373a19385b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgcd_pol_div",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "induction p ; simpl.",
                        "VernacExtend",
                        "40f9f5e58be7659cb22903cfdc5400cb770ac71c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H.",
                        "VernacExtend",
                        "711efba707a6a75ce2cd6ff4b80f031c0d63ab98"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now ring.",
                        "VernacExtend",
                        "dcf27cf728c57f4b3b20ceb183addbf498bb854c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply IHp ; auto.",
                        "VernacExtend",
                        "4f80890f42f601e04885342d407902fe63b6592c"
                    ]
                },
                {
                    "command": [
                        "intros g c.",
                        "VernacExtend",
                        "251309f59e76f93f9424a5f34e3f924f8f929f81"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zgcd_pol p1) ; case_eq (Zgcd_pol p3) ; intros.",
                        "VernacExtend",
                        "007495c4de272d77641f8442d0511de628a81d90"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
                    ]
                },
                {
                    "command": [
                        "unfold ZgcdM at 1.",
                        "VernacExtend",
                        "e05375f92ef1852bbc61e8383192864924c1a553"
                    ]
                },
                {
                    "command": [
                        "destruct (Zmax_spec (Z.gcd (ZgcdM z1 z2) z) 1) as [HH1 | HH1]; destruct HH1 as [HH1 HH1'] ; rewrite HH1'.",
                        "VernacExtend",
                        "1578f4d950d28ce6617d6420e9ca17c3c8296395"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_Zdivide with (x:= ZgcdM z1 z2).",
                        "VernacExtend",
                        "26bc69ad54b6f8ed2ec3e553eda1d849a6885c17"
                    ]
                },
                {
                    "command": [
                        "unfold ZgcdM.",
                        "VernacExtend",
                        "1daff5587b6de8bbf0caeba6cedeb36ca3691cdf"
                    ]
                },
                {
                    "command": [
                        "destruct (Zmax_spec (Z.gcd z1 z2) 1) as [HH2 | HH2].",
                        "VernacExtend",
                        "2dd572fc6beebebe3104d76a048fe956a97e55a5"
                    ]
                },
                {
                    "command": [
                        "destruct HH2.",
                        "VernacExtend",
                        "d55864666a2931ce781a8c707bb700457fd412d9"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_sub ; auto.",
                        "VernacExtend",
                        "868a3b8f6e4f7f5eff25adddf6718590d45ff2b2"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "destruct HH2.",
                        "VernacExtend",
                        "d55864666a2931ce781a8c707bb700457fd412d9"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_one.",
                        "VernacExtend",
                        "bb9e243bef016bc17a975f71028420eb085bf37d"
                    ]
                },
                {
                    "command": [
                        "unfold ZgcdM in HH1.",
                        "VernacExtend",
                        "508d1f026b66181c596658215e1113865fd34a52"
                    ]
                },
                {
                    "command": [
                        "unfold ZgcdM.",
                        "VernacExtend",
                        "1daff5587b6de8bbf0caeba6cedeb36ca3691cdf"
                    ]
                },
                {
                    "command": [
                        "destruct (Zmax_spec (Z.gcd z1 z2) 1) as [HH2 | HH2].",
                        "VernacExtend",
                        "2dd572fc6beebebe3104d76a048fe956a97e55a5"
                    ]
                },
                {
                    "command": [
                        "destruct HH2.",
                        "VernacExtend",
                        "d55864666a2931ce781a8c707bb700457fd412d9"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in *.",
                        "VernacExtend",
                        "9a6fbb53ffd706150eb2fe1581f6d5c2afebb472"
                    ]
                },
                {
                    "command": [
                        "destruct (Zgcd_is_gcd (Z.gcd z1 z2) z); auto.",
                        "VernacExtend",
                        "16e80154da0cb966b75c56c305abf2a5efb2eddf"
                    ]
                },
                {
                    "command": [
                        "destruct HH2.",
                        "VernacExtend",
                        "d55864666a2931ce781a8c707bb700457fd412d9"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "destruct (Zgcd_is_gcd 1 z); auto.",
                        "VernacExtend",
                        "684ff261f335a0f6bbc76eaa2c87ae99880aedf0"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_Zdivide with (x:= z).",
                        "VernacExtend",
                        "a05e7e63e9d0294e6a48f69148976f4e85a8ff64"
                    ]
                },
                {
                    "command": [
                        "apply (IHp2 _ _ H); auto.",
                        "VernacExtend",
                        "9817e558efae9452add00653662af578da4ea708"
                    ]
                },
                {
                    "command": [
                        "destruct (Zgcd_is_gcd (ZgcdM z1 z2) z); auto.",
                        "VernacExtend",
                        "b0fa04d2ae4a42fc6ee2197384a6e0955315df92"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_one.",
                        "VernacExtend",
                        "bb9e243bef016bc17a975f71028420eb085bf37d"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_pol_one.",
                        "VernacExtend",
                        "bb9e243bef016bc17a975f71028420eb085bf37d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgcd_pol_correct_lt",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zdiv_pol_correct ; auto.",
                        "VernacExtend",
                        "ec6dab631c1ac1818de426073f21f241b02fb03a"
                    ]
                },
                {
                    "command": [
                        "rewrite (RingMicromega.PsubC_ok Zsor ZSORaddon).",
                        "VernacExtend",
                        "3afdab659eaacc40732672fe3343cbd81dd3bedc"
                    ]
                },
                {
                    "command": [
                        "unfold eval_pol.",
                        "VernacExtend",
                        "97ef1823ff1bf4fc4a50bd96d25147f8ac32f014"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Zgcd_pol_div ; auto.",
                        "VernacExtend",
                        "00f2d7d0d7393a19db69702fb1438786f5c103ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pol_Z0_eval_pol",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "unfold is_pol_Z0.",
                        "VernacExtend",
                        "ab2ce3d9c8c9e2a0aab132651e081cc9bc745e55"
                    ]
                },
                {
                    "command": [
                        "destruct p ; try discriminate.",
                        "VernacExtend",
                        "8b4b087e66c76bb1fdb8f428c7d820bb8356a392"
                    ]
                },
                {
                    "command": [
                        "destruct z ; try discriminate.",
                        "VernacExtend",
                        "734184597e33bf1a8c2a4842e10c5ffd1d090678"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_bdepth",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold ltof.",
                        "VernacExtend",
                        "94a16daf7f117e07e3e7447f31277b9102450ca9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize ( (fold_right (fun (pf : ZArithProof) (x : nat) => Max.max (bdepth pf) x) 0%nat l)).",
                        "VernacExtend",
                        "e95ce362de3cdb3ffcdadd889978a207ee6e702b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (bdepth y) ; intros.",
                        "VernacExtend",
                        "31331f46c5929f677a89f59ff7215be7e00119c8"
                    ]
                },
                {
                    "command": [
                        "generalize (Max.max_l n0 n) (Max.max_r n0 n).",
                        "VernacExtend",
                        "d99f24f6f6b5816861d996dc3fa8c4b02c459a8e"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "generalize (IHl a0 b y H).",
                        "VernacExtend",
                        "e59d5e79dceed33d4ee48eb5be9dc44abe361f9e"
                    ]
                },
                {
                    "command": [
                        "unfold ltof.",
                        "VernacExtend",
                        "94a16daf7f117e07e3e7447f31277b9102450ca9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize ( (fold_right (fun (pf : ZArithProof) (x : nat) => Max.max (bdepth pf) x) 0%nat l)).",
                        "VernacExtend",
                        "e95ce362de3cdb3ffcdadd889978a207ee6e702b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Max.max_l (bdepth a) n) (Max.max_r (bdepth a) n).",
                        "VernacExtend",
                        "11146e851d3816a3a7aadceef222eae0a378d35a"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_Psatz_sound",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (eval_Psatz_Sound Zsor ZSORaddon) with (l:=l) (e:= w) ; auto.",
                        "VernacExtend",
                        "9b95e8cd8635e5b910b9a19368339481fc5d363d"
                    ]
                },
                {
                    "command": [
                        "apply make_conj_in ; auto.",
                        "VernacExtend",
                        "f099daeb4fcd6e8a8f70c778299597f3c48ef23b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makeCuttingPlane_ns_sound",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "unfold nformula_of_cutting_plane.",
                        "VernacExtend",
                        "64ba2434601772938a6c09aa0314b611de0f29ac"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula.",
                        "VernacExtend",
                        "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
                    ]
                },
                {
                    "command": [
                        "unfold RingMicromega.eval_nformula.",
                        "VernacExtend",
                        "b72468f3695ea5b5942c658542acff15eef07726"
                    ]
                },
                {
                    "command": [
                        "unfold eval_op1.",
                        "VernacExtend",
                        "68d09b8c2e3daf302dd5a3e15a7bedb0c53190bf"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (RingMicromega.eval_pol_add Zsor ZSORaddon).",
                        "VernacExtend",
                        "71dd69a9390a6410d95089d4c94d78fc997c491f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold makeCuttingPlane in H0.",
                        "VernacExtend",
                        "4c6ccffbaf1aadb0b093fb1f036a131ded4dfc54"
                    ]
                },
                {
                    "command": [
                        "revert H0.",
                        "VernacExtend",
                        "de3e4fca453928a41c450906d5d5626d573cfb55"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zgcd_pol e) ; intros g c0.",
                        "VernacExtend",
                        "09cd2206bb752d0f56d4c5626881a05196335dfa"
                    ]
                },
                {
                    "command": [
                        "generalize (Zgt_cases g 0) ; destruct (Z.gtb g 0).",
                        "VernacExtend",
                        "83b79c2a9309bd6a8365c60b8471cc4e990e1398"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "6144021562e950304ba8e947fdc2423691182458"
                    ]
                },
                {
                    "command": [
                        "change (RingMicromega.eval_pol Z.add Z.mul (fun x : Z => x)) with eval_pol in *.",
                        "VernacExtend",
                        "28a111027302905021225a91a88b43f8a4149c16"
                    ]
                },
                {
                    "command": [
                        "apply Zgcd_pol_correct_lt with (env:=env) in H1.",
                        "VernacExtend",
                        "7d334853f43c0483d0dee323f3545a71e088e8b1"
                    ]
                },
                {
                    "command": [
                        "generalize (narrow_interval_lower_bound g (- c0) (eval_pol env (Zdiv_pol (PsubC Z.sub e c0) g)) H0).",
                        "VernacExtend",
                        "a91704cb641fe722da1e7fe22ccc26159664a6de"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H2.",
                        "VernacExtend",
                        "6144021562e950304ba8e947fdc2423691182458"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cutting_plane_sound",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "unfold genCuttingPlane.",
                        "VernacExtend",
                        "c59015cc04a5a1089b6824205943fa11670ebbdf"
                    ]
                },
                {
                    "command": [
                        "destruct f as [e op].",
                        "VernacExtend",
                        "6337d5bb390ac2af2b96798374216ec00d83dbf0"
                    ]
                },
                {
                    "command": [
                        "destruct op.",
                        "VernacExtend",
                        "8929c4e75c9a3bb140fea6bfec2f496ac7c48be2"
                    ]
                },
                {
                    "command": [
                        "destruct p as [[e' z] op].",
                        "VernacExtend",
                        "3c29f7f6b76ad5a026beba172be85a504e7f4670"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zgcd_pol e) ; intros g c.",
                        "VernacExtend",
                        "c4ec9dd9ad24c6cccef982c46ab43dd9a208357a"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z.gtb g 0 && (negb (Zeq_bool c 0) && negb (Zeq_bool (Z.gcd g c) g))) ; [discriminate|].",
                        "VernacExtend",
                        "fedde00e08bf6aedba618b4b6935abe52a9e741c"
                    ]
                },
                {
                    "command": [
                        "case_eq (makeCuttingPlane e).",
                        "VernacExtend",
                        "1d9294c811414db838a0a914a1987ecd33f6623e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "unfold makeCuttingPlane in H.",
                        "VernacExtend",
                        "c7711429b2bb42512f198ab5193d0a7c0951c941"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "revert H.",
                        "VernacExtend",
                        "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
                    ]
                },
                {
                    "command": [
                        "change (eval_pol env e = 0) in H2.",
                        "VernacExtend",
                        "4837e9c710f6447c8b521d1d414424b2bbe11278"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z.gtb g 0).",
                        "VernacExtend",
                        "7e969762c5e27a4e067eafd538461b5c00e530e2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zgt_is_gt_bool in H.",
                        "VernacExtend",
                        "05fdb826e04694aef1d6d43550ca42a469728fe2"
                    ]
                },
                {
                    "command": [
                        "rewrite Zgcd_pol_correct_lt with (1:= H1) in H2; auto with zarith.",
                        "VernacExtend",
                        "27271da71adf158f5904597ac91d06b3a25c62a7"
                    ]
                },
                {
                    "command": [
                        "unfold nformula_of_cutting_plane.",
                        "VernacExtend",
                        "64ba2434601772938a6c09aa0314b611de0f29ac"
                    ]
                },
                {
                    "command": [
                        "change (eval_pol env (padd e' (Pc z)) = 0).",
                        "VernacExtend",
                        "bc84da7a061b0ce5f26423058b100abc2a3e8e63"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "rewrite eval_pol_add.",
                        "VernacExtend",
                        "63c89a8ffadf3367a8e103a2300971633fdd72aa"
                    ]
                },
                {
                    "command": [
                        "set (x:=eval_pol env (Zdiv_pol (PsubC Z.sub e c) g)) in *; clearbody x.",
                        "VernacExtend",
                        "d8bdbb6617db8a052773c642125eb25a827959be"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_iff in H0.",
                        "VernacExtend",
                        "a5a5f06555a56f202a8459ddc80930c4e98bb777"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite Zgt_is_gt_bool in H ; congruence.",
                        "VernacExtend",
                        "30cc669f8e922d564b448ffcda56b937f2204460"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_false_iff in H0.",
                        "VernacExtend",
                        "a5a5f06555a56f202a8459ddc80930c4e98bb777"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_false_iff in H0.",
                        "VernacExtend",
                        "fde1d645bcf93aeda4dc7c0b6887f54eea3812cc"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_bool_eq in H0.",
                        "VernacExtend",
                        "8899804d043f4e2fa0adabe5552c5ca88cf1f23e"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_r, Z.mul_eq_0 in H2.",
                        "VernacExtend",
                        "ed6b6130f4fc5910eed7b963ad80474c4feb4e3a"
                    ]
                },
                {
                    "command": [
                        "intuition auto with zarith.",
                        "VernacExtend",
                        "b1d1bb926ece80d6fb4cdf73aa24f941f1a0d567"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_false_iff in H0.",
                        "VernacExtend",
                        "fde1d645bcf93aeda4dc7c0b6887f54eea3812cc"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_bool_eq in H0.",
                        "VernacExtend",
                        "8899804d043f4e2fa0adabe5552c5ca88cf1f23e"
                    ]
                },
                {
                    "command": [
                        "assert (HH := Zgcd_is_gcd g c).",
                        "VernacExtend",
                        "fe1979ee5ec5209b24d39970b65309ee2956f541"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in HH.",
                        "VernacExtend",
                        "8e919d4c2c30d137a06954c5c8a22e48dea98eaa"
                    ]
                },
                {
                    "command": [
                        "inv HH.",
                        "VernacExtend",
                        "b24b9daf00496801c0fdc8aa789cfadfc124bfd1"
                    ]
                },
                {
                    "command": [
                        "apply Zdivide_opp_r in H4.",
                        "VernacExtend",
                        "90473cbead97da066dbfb2aaff43590f346adad7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zdivide_ceiling ; auto.",
                        "VernacExtend",
                        "6d050cd0a5f99c61af2d6f5d42c1a9a5c0eda56c"
                    ]
                },
                {
                    "command": [
                        "apply Z.sub_move_0_r.",
                        "VernacExtend",
                        "dbf20f38853a6fe28f205d30c70bdf6c73bb825a"
                    ]
                },
                {
                    "command": [
                        "apply Z.div_unique_exact ; auto with zarith.",
                        "VernacExtend",
                        "c3dafb553c84505d4a76ab26a8751279f01911e9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold nformula_of_cutting_plane.",
                        "VernacExtend",
                        "64ba2434601772938a6c09aa0314b611de0f29ac"
                    ]
                },
                {
                    "command": [
                        "inv H3.",
                        "VernacExtend",
                        "bf389b6bd23f97715c74ed9eca5a780ee9e91e3c"
                    ]
                },
                {
                    "command": [
                        "change (eval_pol env (padd e' (Pc 0)) = 0).",
                        "VernacExtend",
                        "1bd51e1d06cc7268a42e90e06546623f58f0432b"
                    ]
                },
                {
                    "command": [
                        "rewrite eval_pol_add.",
                        "VernacExtend",
                        "63c89a8ffadf3367a8e103a2300971633fdd72aa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H0.",
                        "VernacExtend",
                        "52c34ef20c88d5292e2350aff94f149a3968b772"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula in *.",
                        "VernacExtend",
                        "10cf45073a92bb1ad6c990cec8b9fd674c90c48d"
                    ]
                },
                {
                    "command": [
                        "unfold RingMicromega.eval_nformula in *.",
                        "VernacExtend",
                        "a1178ef0ab5cb0c43676573a6e62a7297a550988"
                    ]
                },
                {
                    "command": [
                        "unfold nformula_of_cutting_plane.",
                        "VernacExtend",
                        "64ba2434601772938a6c09aa0314b611de0f29ac"
                    ]
                },
                {
                    "command": [
                        "unfold eval_op1 in *.",
                        "VernacExtend",
                        "201351c1cf829adb91f69473c221d0672e21fb8a"
                    ]
                },
                {
                    "command": [
                        "rewrite (RingMicromega.eval_pol_add Zsor ZSORaddon).",
                        "VernacExtend",
                        "71dd69a9390a6410d95089d4c94d78fc997c491f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "destruct p as [[e' z] op].",
                        "VernacExtend",
                        "3c29f7f6b76ad5a026beba172be85a504e7f4670"
                    ]
                },
                {
                    "command": [
                        "case_eq (makeCuttingPlane (PsubC Z.sub e 1)).",
                        "VernacExtend",
                        "341f88397829547000f626259cc7a08bd202f5c9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
                    ]
                },
                {
                    "command": [
                        "apply makeCuttingPlane_ns_sound with (env:=env) (2:= H).",
                        "VernacExtend",
                        "d61dc790dfc905e09b1b02f0e8781331b62b3c58"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite (RingMicromega.PsubC_ok Zsor ZSORaddon).",
                        "VernacExtend",
                        "3afdab659eaacc40732672fe3343cbd81dd3bedc"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "destruct p as [[e' z] op].",
                        "VernacExtend",
                        "3c29f7f6b76ad5a026beba172be85a504e7f4670"
                    ]
                },
                {
                    "command": [
                        "case_eq (makeCuttingPlane e).",
                        "VernacExtend",
                        "1d9294c811414db838a0a914a1987ecd33f6623e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv H1.",
                        "VernacExtend",
                        "2c43d1971eb5aa98166f6ec686cc2a4f1886b0a4"
                    ]
                },
                {
                    "command": [
                        "apply makeCuttingPlane_ns_sound with (env:=env) (2:= H).",
                        "VernacExtend",
                        "d61dc790dfc905e09b1b02f0e8781331b62b3c58"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "genCuttingPlaneNone",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "unfold genCuttingPlane.",
                        "VernacExtend",
                        "c59015cc04a5a1089b6824205943fa11670ebbdf"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "destruct o.",
                        "VernacExtend",
                        "7e45d273082b90e03f5f97cde65b5f989324a175"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zgcd_pol p) ; intros g c.",
                        "VernacExtend",
                        "690aeb041de592e5f37111557d17bf4dbae298c6"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z.gtb g 0 && (negb (Zeq_bool c 0) && negb (Zeq_bool (Z.gcd g c) g))).",
                        "VernacExtend",
                        "a92088208bf2e10f4f431680fde349f5b87f280b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "flatten_bool.",
                        "VernacExtend",
                        "626c702785b3a6f5f8ef4b7c0894160cf44a002e"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in H5.",
                        "VernacExtend",
                        "875a7bfedcb9e567e5cf9c619d84aae2f364612b"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_bool_neq in H5.",
                        "VernacExtend",
                        "c374ce13b22e03939286c53eb8bc9e4c0ae775eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zgt_is_gt_bool in H3.",
                        "VernacExtend",
                        "844ae09c59adb91a25d516edac20e5441f8fe89f"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in H.",
                        "VernacExtend",
                        "24fac8337821d0ffbce5aaf906e263bfd5955048"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_bool_neq in H.",
                        "VernacExtend",
                        "d2a0f2d245a8cca63e3f1e884c8091f28cdcc78a"
                    ]
                },
                {
                    "command": [
                        "change (eval_pol env p = 0) in H2.",
                        "VernacExtend",
                        "ad9442ce1db6ecb63b32d0debb39f846b968541b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zgcd_pol_correct_lt with (1:= H0) in H2; auto with zarith.",
                        "VernacExtend",
                        "84899b7269f22d3102825b7526f5d27c7ac7d47f"
                    ]
                },
                {
                    "command": [
                        "set (x:=eval_pol env (Zdiv_pol (PsubC Z.sub p c) g)) in *; clearbody x.",
                        "VernacExtend",
                        "f9ab03788f6c16e4ea75cead8ddeedb69521ff93"
                    ]
                },
                {
                    "command": [
                        "contradict H5.",
                        "VernacExtend",
                        "5e51357531345c0702b93856bde66ff6c3af9b96"
                    ]
                },
                {
                    "command": [
                        "apply Zis_gcd_gcd; auto with zarith.",
                        "VernacExtend",
                        "d6e75d0520f73e9141945281b6184002dc002979"
                    ]
                },
                {
                    "command": [
                        "constructor; auto with zarith.",
                        "VernacExtend",
                        "f33cb26b696b6d1a3cbfe5798b6a8d0352d19cd1"
                    ]
                },
                {
                    "command": [
                        "exists (-x).",
                        "VernacExtend",
                        "08defb1588400a64e2b32a242cb38df0df66eff8"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_opp_l, Z.mul_comm; auto with zarith.",
                        "VernacExtend",
                        "407b22691ee99786b35b9c013c07749aff182acb"
                    ]
                },
                {
                    "command": [
                        "destruct (makeCuttingPlane p); discriminate.",
                        "VernacExtend",
                        "0b6569c125e26789b5d08581afc8e1b38817af19"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "destruct (makeCuttingPlane (PsubC Z.sub p 1)) ; discriminate.",
                        "VernacExtend",
                        "5197011012b6fa91ed2ba90220b908fd6286a57e"
                    ]
                },
                {
                    "command": [
                        "destruct (makeCuttingPlane p) ; discriminate.",
                        "VernacExtend",
                        "0b6569c125e26789b5d08581afc8e1b38817af19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZChecker_sound",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "induction w using (well_founded_ind (well_founded_ltof _ bdepth)).",
                        "VernacExtend",
                        "f38af8af3a572fc0c8a2cd32effe76857724b8b5"
                    ]
                },
                {
                    "command": [
                        "destruct w as [ | w pf | w pf | w1 w2 pf].",
                        "VernacExtend",
                        "278412fe289b0e88ab3e01259e23f8fa0e69806e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro l.",
                        "VernacExtend",
                        "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
                    ]
                },
                {
                    "command": [
                        "case_eq (eval_Psatz l w) ; [| discriminate].",
                        "VernacExtend",
                        "c49f181b79283ec83289a2155154214c6e62e118"
                    ]
                },
                {
                    "command": [
                        "intros f Hf.",
                        "VernacExtend",
                        "c19df1812f5aac92c483b278685c4b2ecd58345f"
                    ]
                },
                {
                    "command": [
                        "case_eq (Zunsat f).",
                        "VernacExtend",
                        "4078843e37d45c230e54ba50cfc6675f561be546"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (checker_nf_sound Zsor ZSORaddon l w).",
                        "VernacExtend",
                        "43935eaee05c5443cc8aabb3910d10db2769e76f"
                    ]
                },
                {
                    "command": [
                        "unfold check_normalised_formulas.",
                        "VernacExtend",
                        "e696c9832df45959ae987edd8c2d2d3e052d1d64"
                    ]
                },
                {
                    "command": [
                        "unfold eval_Psatz in Hf.",
                        "VernacExtend",
                        "e64ef5ee0aba7bd8623706f7e624f70babe7894f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf.",
                        "VernacExtend",
                        "4b4ea75b42501c41b9cce49efd492d21013c9685"
                    ]
                },
                {
                    "command": [
                        "unfold Zunsat in H0.",
                        "VernacExtend",
                        "0560d553df5e6a32fce2ebd6af66f8a7d9311801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (make_impl (eval_nformula env) (f::l) False).",
                        "VernacExtend",
                        "fb9ecd2c5a6de9ccfce7becfd113c1352a8f7c69"
                    ]
                },
                {
                    "command": [
                        "apply H with (2:= H1).",
                        "VernacExtend",
                        "2dba38353014505677ba4ab5bad6b8781e4ebecf"
                    ]
                },
                {
                    "command": [
                        "unfold ltof.",
                        "VernacExtend",
                        "94a16daf7f117e07e3e7447f31277b9102450ca9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl in H2.",
                        "VernacExtend",
                        "3efad45a2e5b16d0aa35bc3320f565547ca93d72"
                    ]
                },
                {
                    "command": [
                        "rewrite make_conj_cons in H2.",
                        "VernacExtend",
                        "0a3b53b8c3895425b257f436c91d23eec2a6f458"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl.",
                        "VernacExtend",
                        "16058801ff6489ef973a9b5b9fe81dad7e531441"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "split ; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (2:= Hf) ; assumption.",
                        "VernacExtend",
                        "698a649c220ee6dec4c2d464df86bbd4c24fbbb0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro l.",
                        "VernacExtend",
                        "c8139627914eb6a3cf51966a8a1d73a6c51f81e7"
                    ]
                },
                {
                    "command": [
                        "case_eq (eval_Psatz l w) ; [ | discriminate].",
                        "VernacExtend",
                        "c49f181b79283ec83289a2155154214c6e62e118"
                    ]
                },
                {
                    "command": [
                        "intros f' Hlc.",
                        "VernacExtend",
                        "26826874f55e3ffb1158fc8950d7f5a899f68dd9"
                    ]
                },
                {
                    "command": [
                        "case_eq (genCuttingPlane f').",
                        "VernacExtend",
                        "abc3128d0fe2a690e5af1dbf5ed416e8d49f7a90"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (make_impl (eval_nformula env) (nformula_of_cutting_plane p::l) False).",
                        "VernacExtend",
                        "953bfcd5d340fb639b9c344016add5246e5fea1b"
                    ]
                },
                {
                    "command": [
                        "eapply (H pf) ; auto.",
                        "VernacExtend",
                        "2c888f3a6a0b4b5e0868312db1e18036848fce53"
                    ]
                },
                {
                    "command": [
                        "unfold ltof.",
                        "VernacExtend",
                        "94a16daf7f117e07e3e7447f31277b9102450ca9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl in H2.",
                        "VernacExtend",
                        "3efad45a2e5b16d0aa35bc3320f565547ca93d72"
                    ]
                },
                {
                    "command": [
                        "rewrite make_conj_cons in H2.",
                        "VernacExtend",
                        "0a3b53b8c3895425b257f436c91d23eec2a6f458"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl.",
                        "VernacExtend",
                        "16058801ff6489ef973a9b5b9fe81dad7e531441"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "split ; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (env:=env) in Hlc.",
                        "VernacExtend",
                        "0976b2c80fb62c899918eb91bf791050fdf69da1"
                    ]
                },
                {
                    "command": [
                        "apply cutting_plane_sound with (1:= Hlc) (2:= H0).",
                        "VernacExtend",
                        "ee179c91a6546cf16e7ace0f35f3b1ae1397d029"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl.",
                        "VernacExtend",
                        "16058801ff6489ef973a9b5b9fe81dad7e531441"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (2:= Hlc) in H2.",
                        "VernacExtend",
                        "109e570d8935d849340f26ccb53bc42e0ace5719"
                    ]
                },
                {
                    "command": [
                        "apply genCuttingPlaneNone with (2:= H2) ; auto.",
                        "VernacExtend",
                        "768de2ce1b37d9901e9996ecf2197d70f3f44fde"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (eval_Psatz l w1) ; [ | discriminate].",
                        "VernacExtend",
                        "1a378dbde699a9097a7011da8e9eb2757e105740"
                    ]
                },
                {
                    "command": [
                        "case_eq (eval_Psatz l w2) ; [ | discriminate].",
                        "VernacExtend",
                        "0f97a4209585332ca3cc8786b17c84a6036eec1f"
                    ]
                },
                {
                    "command": [
                        "intros f1 Hf1 f2 Hf2.",
                        "VernacExtend",
                        "4344a901aba8a128e1c145e0a27c0ea3840359aa"
                    ]
                },
                {
                    "command": [
                        "case_eq (genCuttingPlane f2).",
                        "VernacExtend",
                        "cf5523c11b55395916c541363313a80e6bc20b5f"
                    ]
                },
                {
                    "command": [
                        "destruct p as [ [p1 z1] op1].",
                        "VernacExtend",
                        "a748cf1eeb65f2b9d4f9131eae9aacb822b0d753"
                    ]
                },
                {
                    "command": [
                        "case_eq (genCuttingPlane f1).",
                        "VernacExtend",
                        "fabad23db7e6acbbf8a700b1dd5cb9cc560757c8"
                    ]
                },
                {
                    "command": [
                        "destruct p as [ [p2 z2] op2].",
                        "VernacExtend",
                        "70346f71ebe0b629771a71d71fabfeefd3b4f117"
                    ]
                },
                {
                    "command": [
                        "case_eq (valid_cut_sign op1 && valid_cut_sign op2 && is_pol_Z0 (padd p1 p2)).",
                        "VernacExtend",
                        "fd673d558182a3720439f55d5e4be6fc1d7a5a03"
                    ]
                },
                {
                    "command": [
                        "intros Hcond.",
                        "VernacExtend",
                        "27d23df072892e07e20ef7ad86097b1de42fd861"
                    ]
                },
                {
                    "command": [
                        "flatten_bool.",
                        "VernacExtend",
                        "626c702785b3a6f5f8ef4b7c0894160cf44a002e"
                    ]
                },
                {
                    "command": [
                        "rename H1 into HZ0.",
                        "VernacExtend",
                        "5a991061fe3f3c3134c2d140e258dd5310269b78"
                    ]
                },
                {
                    "command": [
                        "rename H2 into Hop1.",
                        "VernacExtend",
                        "a5c88f001b63bf054bed3a9e9b1d925df2be03da"
                    ]
                },
                {
                    "command": [
                        "rename H3 into Hop2.",
                        "VernacExtend",
                        "8d1338191c0071e15d2d2dc402547feecfcf05cd"
                    ]
                },
                {
                    "command": [
                        "intros HCutL HCutR Hfix env.",
                        "VernacExtend",
                        "1517349d13baf8b1f8ec31f11397ad453a992598"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl.",
                        "VernacExtend",
                        "16058801ff6489ef973a9b5b9fe81dad7e531441"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (-z1 <= eval_pol env p1 <= z2).",
                        "VernacExtend",
                        "ef9eb591bff4ca11f1f206bb06ec490e451629eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (env:=env) in Hf2 ; auto.",
                        "VernacExtend",
                        "4c4e7d50f436df7933db3006dccf53d08326fd01"
                    ]
                },
                {
                    "command": [
                        "apply cutting_plane_sound with (1:= Hf2) in HCutR.",
                        "VernacExtend",
                        "dac37b8e8834c561407620e2ce0621444240a2f6"
                    ]
                },
                {
                    "command": [
                        "unfold nformula_of_cutting_plane in HCutR.",
                        "VernacExtend",
                        "8e0a05807f6568a05a95f44e0c2441c423e186f9"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula in HCutR.",
                        "VernacExtend",
                        "e6d974720f473ab99ad33573904068a74829585b"
                    ]
                },
                {
                    "command": [
                        "unfold RingMicromega.eval_nformula in HCutR.",
                        "VernacExtend",
                        "9cb32032113e34bb8ad698d1172ada5011df4683"
                    ]
                },
                {
                    "command": [
                        "change (RingMicromega.eval_pol Z.add Z.mul (fun x : Z => x)) with eval_pol in HCutR.",
                        "VernacExtend",
                        "bc40f106d7f026d08e14de89c97478fffe4595d3"
                    ]
                },
                {
                    "command": [
                        "unfold eval_op1 in HCutR.",
                        "VernacExtend",
                        "1417c811343d47dd1534c86c64319bf8540d5650"
                    ]
                },
                {
                    "command": [
                        "destruct op1 ; simpl in Hop1 ; try discriminate; rewrite eval_pol_add in HCutR; simpl in HCutR; auto with zarith.",
                        "VernacExtend",
                        "4f81497809b7d894dd4a6a80b9b22f3af7842e0c"
                    ]
                },
                {
                    "command": [
                        "apply is_pol_Z0_eval_pol with (env := env) in HZ0.",
                        "VernacExtend",
                        "2c32118b71c3bf5a9220b056cab404271be17f8e"
                    ]
                },
                {
                    "command": [
                        "rewrite eval_pol_add in HZ0.",
                        "VernacExtend",
                        "146bcd501e04223dc4367a9482f1c225c87c2d65"
                    ]
                },
                {
                    "command": [
                        "replace (eval_pol env p1) with (- eval_pol env p2) by omega.",
                        "VernacExtend",
                        "cb95468a27759532c35b1802517c752c90f14112"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (env:=env) in Hf1 ; auto.",
                        "VernacExtend",
                        "7775d9f1346a1cb4ac26f1107ee11f276b588179"
                    ]
                },
                {
                    "command": [
                        "apply cutting_plane_sound with (1:= Hf1) in HCutL.",
                        "VernacExtend",
                        "ab1243fada303b26421030274201d9bec739ca1d"
                    ]
                },
                {
                    "command": [
                        "unfold nformula_of_cutting_plane in HCutL.",
                        "VernacExtend",
                        "1c371ff8de5133635d571357b28480d137012d91"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula in HCutL.",
                        "VernacExtend",
                        "74095dba0871d4c637c98e4b2c7dae0a99c6095c"
                    ]
                },
                {
                    "command": [
                        "unfold RingMicromega.eval_nformula in HCutL.",
                        "VernacExtend",
                        "b72d8a0913d00263c319374697e1cf578d43c6f3"
                    ]
                },
                {
                    "command": [
                        "change (RingMicromega.eval_pol Z.add Z.mul (fun x : Z => x)) with eval_pol in HCutL.",
                        "VernacExtend",
                        "73c4267d7f8e276bebf1478c11fa2c42c6a06f0c"
                    ]
                },
                {
                    "command": [
                        "unfold eval_op1 in HCutL.",
                        "VernacExtend",
                        "44d192f4fd9de025146f34bd78b572c35f42c539"
                    ]
                },
                {
                    "command": [
                        "rewrite eval_pol_add in HCutL.",
                        "VernacExtend",
                        "1036172c7e4e20a96ae02a7a2ead4e658d20de0b"
                    ]
                },
                {
                    "command": [
                        "simpl in HCutL.",
                        "VernacExtend",
                        "666209282613ce3de60a000db1e3facae94d8f40"
                    ]
                },
                {
                    "command": [
                        "destruct op2 ; simpl in Hop2 ; try discriminate ; omega.",
                        "VernacExtend",
                        "703e8ea4febb86fe5ec6a2360c50176bc681c862"
                    ]
                },
                {
                    "command": [
                        "revert Hfix.",
                        "VernacExtend",
                        "32f9f2f00c4fa03c6b19faf287cace5405abe7ad"
                    ]
                },
                {
                    "command": [
                        "match goal with | |- context[?F pf (-z1) z2 = true] => set (FF := F) end.",
                        "VernacExtend",
                        "aef9426de25f4945e176725b01ffa50091025e10"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HH :forall x, -z1 <= x <= z2 -> exists pr, (In pr pf /\\ ZChecker ((PsubC Z.sub p1 x,Equal) :: l) pr = true)%Z).",
                        "VernacExtend",
                        "dcb5dda6a0d225f8a14834f0ac2e39499fbcf300"
                    ]
                },
                {
                    "command": [
                        "clear HZ0 Hop1 Hop2 HCutL HCutR H0 H1.",
                        "VernacExtend",
                        "dc6eab6b34941891f67fce98a6c671e6aef63580"
                    ]
                },
                {
                    "command": [
                        "revert Hfix.",
                        "VernacExtend",
                        "32f9f2f00c4fa03c6b19faf287cace5405abe7ad"
                    ]
                },
                {
                    "command": [
                        "generalize (-z1).",
                        "VernacExtend",
                        "cf980c4bf0a97651c76585ddca94a38025b54094"
                    ]
                },
                {
                    "command": [
                        "clear z1.",
                        "VernacExtend",
                        "7bcac5d6beb0e0986e21f2397c3f6bc8ca4e60f4"
                    ]
                },
                {
                    "command": [
                        "intro z1.",
                        "VernacExtend",
                        "b49725816ea25231ec5fbad9cff78aebebf5e7e7"
                    ]
                },
                {
                    "command": [
                        "revert z1 z2.",
                        "VernacExtend",
                        "5de660f5f3d58123f75dc07d69652461db89d9a7"
                    ]
                },
                {
                    "command": [
                        "induction pf;simpl ;intros.",
                        "VernacExtend",
                        "e89f174d514810bab41498e99ffe7dffc1dd0699"
                    ]
                },
                {
                    "command": [
                        "generalize (Zgt_cases z1 z2).",
                        "VernacExtend",
                        "e4589a0d89bcdcb50f24c4e1c68cb95bc61de1bc"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.gtb z1 z2).",
                        "VernacExtend",
                        "65da2b438c263283f505ab6df45428cda45aaa10"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply False_ind ; omega.",
                        "VernacExtend",
                        "94a150be286c877cfb0a09d10a901237775943b9"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "flatten_bool.",
                        "VernacExtend",
                        "626c702785b3a6f5f8ef4b7c0894160cf44a002e"
                    ]
                },
                {
                    "command": [
                        "assert (HH:(x = z1 \\/ z1 +1 <=x)%Z) by omega.",
                        "VernacExtend",
                        "39eadd7639c865fc9f973ff43ce72a5215a1c0ae"
                    ]
                },
                {
                    "command": [
                        "destruct HH.",
                        "VernacExtend",
                        "2031b05f8edccf0626b2db5748c34d216d5f04cf"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "exists a ; auto.",
                        "VernacExtend",
                        "dd5a786237df3984e1d2bb0f96b1da3befb55aac"
                    ]
                },
                {
                    "command": [
                        "assert (z1 + 1 <= x <= z2)%Z by omega.",
                        "VernacExtend",
                        "02616c9b37cfff775d1c77c92565221705d0a925"
                    ]
                },
                {
                    "command": [
                        "elim IHpf with (2:=H2) (3:= H4).",
                        "VernacExtend",
                        "51198a5e6fb1e9d14117949c841f3eacb0a630f1"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists x0 ; split;tauto.",
                        "VernacExtend",
                        "85ebb1d5a8573279a987e30b1dd948b142094266"
                    ]
                },
                {
                    "command": [
                        "intros until 1.",
                        "VernacExtend",
                        "02a88d708d00fec9315af96f54c66efbe80acead"
                    ]
                },
                {
                    "command": [
                        "apply H ; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "unfold ltof in *.",
                        "VernacExtend",
                        "430b9316bac61cb6e12266b8ac45ba88ba54871f"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "destruct (HH _ H1) as [pr [Hin Hcheker]].",
                        "VernacExtend",
                        "30f20054cef5abe60b13c5b762ebdde88a54fc2a"
                    ]
                },
                {
                    "command": [
                        "assert (make_impl (eval_nformula env) ((PsubC Z.sub p1 (eval_pol env p1),Equal) :: l) False).",
                        "VernacExtend",
                        "befb23785d2d301b0a8c72f5f49c47956ead58b5"
                    ]
                },
                {
                    "command": [
                        "apply (H pr);auto.",
                        "VernacExtend",
                        "67845e73d29e4945009c6c16f38fc3fa7eaeb4d3"
                    ]
                },
                {
                    "command": [
                        "apply in_bdepth ; auto.",
                        "VernacExtend",
                        "f31cbda071d302dc574718c72a62fed07dcccf0c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl in H2.",
                        "VernacExtend",
                        "3efad45a2e5b16d0aa35bc3320f565547ca93d72"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "rewrite make_conj_cons.",
                        "VernacExtend",
                        "caa83bc9bc3178c6d9eaa6a8025b66ef5eb539a6"
                    ]
                },
                {
                    "command": [
                        "split ;auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula.",
                        "VernacExtend",
                        "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
                    ]
                },
                {
                    "command": [
                        "unfold RingMicromega.eval_nformula.",
                        "VernacExtend",
                        "b72468f3695ea5b5942c658542acff15eef07726"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (RingMicromega.PsubC_ok Zsor ZSORaddon).",
                        "VernacExtend",
                        "3afdab659eaacc40732672fe3343cbd81dd3bedc"
                    ]
                },
                {
                    "command": [
                        "unfold eval_pol.",
                        "VernacExtend",
                        "97ef1823ff1bf4fc4a50bd96d25147f8ac32f014"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl.",
                        "VernacExtend",
                        "16058801ff6489ef973a9b5b9fe81dad7e531441"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (2:= Hf1) in H3.",
                        "VernacExtend",
                        "06143f2249b769ade52e5f2384edc3d578334475"
                    ]
                },
                {
                    "command": [
                        "apply genCuttingPlaneNone with (2:= H3) ; auto.",
                        "VernacExtend",
                        "921e439c762e52cc2a53abe4747f1795f5f2089d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- make_conj_impl.",
                        "VernacExtend",
                        "16058801ff6489ef973a9b5b9fe81dad7e531441"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eval_Psatz_sound with (2:= Hf2) in H2.",
                        "VernacExtend",
                        "41433649e03172778d739b8b9794c9d3e69f5005"
                    ]
                },
                {
                    "command": [
                        "apply genCuttingPlaneNone with (2:= H2) ; auto.",
                        "VernacExtend",
                        "768de2ce1b37d9901e9996ecf2197d70f3f44fde"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZTautoChecker_sound",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "intros f w.",
                        "VernacExtend",
                        "093149563e1f16cc847b4fd17251f4213ff5258a"
                    ]
                },
                {
                    "command": [
                        "unfold ZTautoChecker.",
                        "VernacExtend",
                        "bb02dda66ebe6fbeff0b910e43e6ff5f05db486b"
                    ]
                },
                {
                    "command": [
                        "apply (tauto_checker_sound Zeval_formula eval_nformula).",
                        "VernacExtend",
                        "ca2ea0741bcd6fe8a557d11b2647e7c4c587d9c5"
                    ]
                },
                {
                    "command": [
                        "apply Zeval_nformula_dec.",
                        "VernacExtend",
                        "bb5f3c2bbc6c97fa527bc39c35ec6de8950f45b4"
                    ]
                },
                {
                    "command": [
                        "intros until env.",
                        "VernacExtend",
                        "7492f8507d556aa61d1c852593db279b09bffcf6"
                    ]
                },
                {
                    "command": [
                        "unfold eval_nformula.",
                        "VernacExtend",
                        "f3b6ba0630651e7278c7cd3b3e7cd780780c1163"
                    ]
                },
                {
                    "command": [
                        "unfold RingMicromega.eval_nformula.",
                        "VernacExtend",
                        "b72468f3695ea5b5942c658542acff15eef07726"
                    ]
                },
                {
                    "command": [
                        "destruct t.",
                        "VernacExtend",
                        "03d3fc39431171b40684d8dff6748881af772fc7"
                    ]
                },
                {
                    "command": [
                        "apply (check_inconsistent_sound Zsor ZSORaddon) ; auto.",
                        "VernacExtend",
                        "aec9acb86288df5d7394a24ff2233409de0e3f9a"
                    ]
                },
                {
                    "command": [
                        "unfold Zdeduce.",
                        "VernacExtend",
                        "1cdc7467da3dce59d19c351ebf3b6298e8a66390"
                    ]
                },
                {
                    "command": [
                        "apply (nformula_plus_nformula_correct Zsor ZSORaddon).",
                        "VernacExtend",
                        "3af56c4f7c63b0b8259708c161e0918c74592ffc"
                    ]
                },
                {
                    "command": [
                        "intros env t.",
                        "VernacExtend",
                        "1e7159321e078681320819d685fa405d4cb8da63"
                    ]
                },
                {
                    "command": [
                        "rewrite normalise_correct ; auto.",
                        "VernacExtend",
                        "9b0294fb876682d64434b7e0e6eaa8210ce21568"
                    ]
                },
                {
                    "command": [
                        "intros env t.",
                        "VernacExtend",
                        "1e7159321e078681320819d685fa405d4cb8da63"
                    ]
                },
                {
                    "command": [
                        "rewrite negate_correct ; auto.",
                        "VernacExtend",
                        "f127714f4b176f70ad030fb120ba4acdf71bdeb6"
                    ]
                },
                {
                    "command": [
                        "intros t w0.",
                        "VernacExtend",
                        "ec6f396d3dc75112d5253d6d5c8cddcceb7662ad"
                    ]
                },
                {
                    "command": [
                        "apply ZChecker_sound.",
                        "VernacExtend",
                        "c81315cec0cb7ba861279ce0541b1966ecd8a979"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}