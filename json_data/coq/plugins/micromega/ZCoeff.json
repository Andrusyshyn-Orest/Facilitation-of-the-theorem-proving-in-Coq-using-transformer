{
    "filename": "plugins/micromega/ZCoeff.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import OrderedRing.",
            "VernacRequire",
            "6320ce0c3dd8aea3a6a1bc4defdc09065fa432fe"
        ],
        [
            "Require Import RingMicromega.",
            "VernacRequire",
            "17ab0e01eade9304f5b2487decc0d169ee623f57"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Require Import InitialRing.",
            "VernacRequire",
            "96c440199695574cff2db231ce3429e35a02f8a1"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Import OrderedRingSyntax.",
            "VernacImport",
            "cf00d791eae4f413bbe75f3568d406fac479ce19"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section InitialMorphism.",
            "VernacBeginSection",
            "a195778576f0bb71506cad486e8973bdcf55d18a"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variables rO rI : R.",
            "VernacAssumption",
            "5d10970b9481bb0ff6dfe392527532ae5b54e02d"
        ],
        [
            "Variables rplus rtimes rminus: R -> R -> R.",
            "VernacAssumption",
            "4deb21a0e1fde042e528d0bbbc98c2697532cfd1"
        ],
        [
            "Variable ropp : R -> R.",
            "VernacAssumption",
            "f1baf2983bc1c08a1ed6be28c644902e8c9c849e"
        ],
        [
            "Variables req rle rlt : R -> R -> Prop.",
            "VernacAssumption",
            "4c3122d5474499a1b571385048b339a615572c25"
        ],
        [
            "Variable sor : SOR rO rI rplus rtimes rminus ropp req rle rlt.",
            "VernacAssumption",
            "6a300037d02be18199ec1a7de029e692f9ad75fa"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Notation \"x + y\" := (rplus x y).",
            "VernacNotation",
            "0a6527018105b3ff8e9b29a66ab4d3d5ab102e04"
        ],
        [
            "Notation \"x * y \" := (rtimes x y).",
            "VernacNotation",
            "54aaba6d8d11dfe14a92c683c0193679e87c51aa"
        ],
        [
            "Notation \"x - y \" := (rminus x y).",
            "VernacNotation",
            "e5ea41601db90e42d132d5e79c6b3b70354fdf1f"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Notation \"x == y\" := (req x y).",
            "VernacNotation",
            "1367374c87f9bf84183973a2bb249fe42031446b"
        ],
        [
            "Notation \"x ~= y\" := (~ req x y).",
            "VernacNotation",
            "14d0c08d6b0f7fd4f12427b91d906e09cb67a71d"
        ],
        [
            "Notation \"x <= y\" := (rle x y).",
            "VernacNotation",
            "c50b448de77746b05b13f764da95df42568a3f7f"
        ],
        [
            "Notation \"x < y\" := (rlt x y).",
            "VernacNotation",
            "c194ca788f0aa87b6efa27e4cb000167c4b1df07"
        ],
        [
            "Lemma req_refl : forall x, req x x.",
            "VernacStartTheoremProof",
            "d776b2dd78b2098d117665b8830306e886d185a6"
        ],
        [
            "destruct sor.(SORsetoid) as (Equivalence_Reflexive,_,_).",
            "VernacExtend",
            "551eb777ed651ecac5148ae0e890d082ead710f5"
        ],
        [
            "apply Equivalence_Reflexive.",
            "VernacExtend",
            "f8d561eb0c2398b23cd3be04f43262a407c7bd13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma req_sym : forall x y, req x y -> req y x.",
            "VernacStartTheoremProof",
            "70e1567217e1e34d97cac9d87fbffa116cd3fdbb"
        ],
        [
            "destruct sor.(SORsetoid) as (_,Equivalence_Symmetric,_).",
            "VernacExtend",
            "4b467176f9289e412424184d630001de330bb185"
        ],
        [
            "apply Equivalence_Symmetric.",
            "VernacExtend",
            "da63e7e104ab836484776ac205a45b44859c1b60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma req_trans : forall x y z, req x y -> req y z -> req x z.",
            "VernacStartTheoremProof",
            "85d828e28aa015c7eee524fdf7ff59b67a63e393"
        ],
        [
            "destruct sor.(SORsetoid) as (_,_,Equivalence_Transitive).",
            "VernacExtend",
            "5d83b00d978d6f6672f84258afb08d333e940d52"
        ],
        [
            "apply Equivalence_Transitive.",
            "VernacExtend",
            "ed143e5902336bdfe2bbc1b5d8ab4d89c89d3b84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Relation R req reflexivity proved by sor.(SORsetoid).(@Equivalence_Reflexive _ _) symmetry proved by sor.(SORsetoid).(@Equivalence_Symmetric _ _) transitivity proved by sor.(SORsetoid).(@Equivalence_Transitive _ _) as sor_setoid.",
            "VernacExtend",
            "b2b7a6335dc263c17e76cd5169a6f678c26602a0"
        ],
        [
            "Add Morphism rplus with signature req ==> req ==> req as rplus_morph.",
            "VernacExtend",
            "46056d2e23ab04ad5188b33b0d7884bb5f9abb89"
        ],
        [
            "exact sor.(SORplus_wd).",
            "VernacExtend",
            "bb7b5904f5489d0522ca7e6657e02540fd14e6bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rtimes with signature req ==> req ==> req as rtimes_morph.",
            "VernacExtend",
            "d62eb775f23fa8418a42da9f0e470e8f59e85a3e"
        ],
        [
            "exact sor.(SORtimes_wd).",
            "VernacExtend",
            "b9f43637e995e7f0fb4dcc7f0d51c43fcd046b8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism ropp with signature req ==> req as ropp_morph.",
            "VernacExtend",
            "4ad9fecfac818c0af08c3cb31ab615e614db9353"
        ],
        [
            "exact sor.(SORopp_wd).",
            "VernacExtend",
            "65db7c8e673172516107dee3879e874cdb4c7128"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rle with signature req ==> req ==> iff as rle_morph.",
            "VernacExtend",
            "ef70b76f8a5815b6f46ad0f1f1467d1e02638eed"
        ],
        [
            "exact sor.(SORle_wd).",
            "VernacExtend",
            "cfff9814add4c0eed8d71b99587d249744cb4492"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rlt with signature req ==> req ==> iff as rlt_morph.",
            "VernacExtend",
            "68f6e3037eaba765f449814a10f8671e53e5ce3a"
        ],
        [
            "exact sor.(SORlt_wd).",
            "VernacExtend",
            "8034c270dc293051737e92febc5881027618c284"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rminus with signature req ==> req ==> req as rminus_morph.",
            "VernacExtend",
            "d6ddca18a5068d67064889cd47861614020cce7c"
        ],
        [
            "exact (rminus_morph sor).",
            "VernacExtend",
            "4d48e138a78f497d13349c569df01b4f101fac15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac le_less := rewrite (Rle_lt_eq sor); left; try assumption.",
            "VernacExtend",
            "3e4e848bec042d6bf4d325d44d9756ee4f895f76"
        ],
        [
            "Ltac le_equal := rewrite (Rle_lt_eq sor); right; try reflexivity; try assumption.",
            "VernacExtend",
            "58145de5a3a91223b3198d48178af763c7548aa1"
        ],
        [
            "Definition gen_order_phi_Z : Z -> R := gen_phiZ 0 1 rplus rtimes ropp.",
            "VernacDefinition",
            "9c0fc5b20f88bb592c4fbd2f78470517bd5468d2"
        ],
        [
            "Declare Equivalent Keys gen_order_phi_Z gen_phiZ.",
            "VernacExtend",
            "cdbf960a74dc70a04dbe9a8a1d4648f22060965d"
        ],
        [
            "Notation phi_pos := (gen_phiPOS 1 rplus rtimes).",
            "VernacSyntacticDefinition",
            "1acb7a3bd86e524f95cde2887a7cef76d0bea0e2"
        ],
        [
            "Notation phi_pos1 := (gen_phiPOS1 1 rplus rtimes).",
            "VernacSyntacticDefinition",
            "f6fb57d3d1629c91552ef99f4ea8259053ac12f1"
        ],
        [
            "Notation \"[ x ]\" := (gen_order_phi_Z x).",
            "VernacNotation",
            "8dcf4cb209aef27561fc85af345d9d53cb094a37"
        ],
        [
            "Lemma ring_ops_wd : ring_eq_ext rplus rtimes ropp req.",
            "VernacStartTheoremProof",
            "85a1447197ec77dc17001168d8b538d1eebb6f9b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact rplus_morph.",
            "VernacExtend",
            "81ae5c02df3c3917347edd47fff3d17da69d9490"
        ],
        [
            "exact rtimes_morph.",
            "VernacExtend",
            "848e0547b8e93d73f336902a9c67c32f9f6d1ed6"
        ],
        [
            "exact ropp_morph.",
            "VernacExtend",
            "2567e66cedb09248b43a607552b682e45dc5b31d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zring_morph : ring_morph 0 1 rplus rtimes rminus ropp req 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Zeq_bool gen_order_phi_Z.",
            "VernacStartTheoremProof",
            "4713604d154edb81facd554ce8d68f87e0df2fa1"
        ],
        [
            "exact (gen_phiZ_morph sor.(SORsetoid) ring_ops_wd sor.(SORrt)).",
            "VernacExtend",
            "77d54c3b0f0ed7f70af82c39fe6924fe66ed1375"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma phi_pos1_pos : forall x : positive, 0 < phi_pos1 x.",
            "VernacStartTheoremProof",
            "e3401cce6b55b9a5b91d96b514ff5b790949a158"
        ],
        [
            "induction x as [x IH | x IH |]; simpl; try apply (Rplus_pos_pos sor); try apply (Rtimes_pos_pos sor); try apply (Rplus_pos_pos sor); try apply (Rlt_0_1 sor); assumption.",
            "VernacExtend",
            "a01f59994173aa74616fc64946ff55e0b0f99de9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma phi_pos1_succ : forall x : positive, phi_pos1 (Pos.succ x) == 1 + phi_pos1 x.",
            "VernacStartTheoremProof",
            "bda40a3ea99d38fd2c18457742f06fc3f2ffab3d"
        ],
        [
            "exact (ARgen_phiPOS_Psucc sor.(SORsetoid) ring_ops_wd (Rth_ARth sor.(SORsetoid) ring_ops_wd sor.(SORrt))).",
            "VernacExtend",
            "8576a892f9e3afc890d330e837a3c21c4b889098"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma clt_pos_morph : forall x y : positive, (x < y)%positive -> phi_pos1 x < phi_pos1 y.",
            "VernacStartTheoremProof",
            "06cbd08176038d858a37bc4a40b21d5e1144bfe5"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "pattern y; apply Pos.lt_ind with x.",
            "VernacExtend",
            "2d494b3a8b44eaa286052e66b7050728f008fa6c"
        ],
        [
            "rewrite phi_pos1_succ; apply (Rlt_succ_r sor).",
            "VernacExtend",
            "d7fb9b34a2e3cafce98d97a51ed0e14f08dcb462"
        ],
        [
            "clear y H; intros y _ H.",
            "VernacExtend",
            "9e02fe0291801ada6ac61ce538fc1d86ff7b5925"
        ],
        [
            "rewrite phi_pos1_succ.",
            "VernacExtend",
            "489943efecdc9c528d09421fe9dac4bfe253351b"
        ],
        [
            "now apply (Rlt_lt_succ sor).",
            "VernacExtend",
            "6afd2c70428a11b51ef96ff5bceee5e5fdc386ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma clt_morph : forall x y : Z, (x < y)%Z -> [x] < [y].",
            "VernacStartTheoremProof",
            "e7fb78290d488d2f71eed474f258c5b0892ab3cf"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "do 2 rewrite (same_genZ sor.(SORsetoid) ring_ops_wd sor.(SORrt)); destruct x; destruct y; simpl in *; try discriminate.",
            "VernacExtend",
            "ffcb7d8d0ab472665fe64e54091fba0eb11331d7"
        ],
        [
            "apply phi_pos1_pos.",
            "VernacExtend",
            "c8b16e52fcc1759e7bc221145ba87cc6e1d2033c"
        ],
        [
            "now apply clt_pos_morph.",
            "VernacExtend",
            "0368260ab755182ee11da3996e56deb8c9f41289"
        ],
        [
            "apply <- (Ropp_neg_pos sor); apply phi_pos1_pos.",
            "VernacExtend",
            "dfb19bd23447a089ce4dd7e8e33dcb1476c9b3e5"
        ],
        [
            "apply (Rlt_trans sor) with 0.",
            "VernacExtend",
            "bca852bf2c79be57f7882dc7bef54420bf69e883"
        ],
        [
            "apply <- (Ropp_neg_pos sor); apply phi_pos1_pos.",
            "VernacExtend",
            "dfb19bd23447a089ce4dd7e8e33dcb1476c9b3e5"
        ],
        [
            "apply phi_pos1_pos.",
            "VernacExtend",
            "c8b16e52fcc1759e7bc221145ba87cc6e1d2033c"
        ],
        [
            "apply -> (Ropp_lt_mono sor); apply clt_pos_morph.",
            "VernacExtend",
            "fc11374c1b852a370869c8b48c4fc6013ac61009"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "now rewrite Pos.compare_antisym.",
            "VernacExtend",
            "2ee1cb78228104c402a327b71ecc7ad732ef1193"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zcleb_morph : forall x y : Z, Z.leb x y = true -> [x] <= [y].",
            "VernacStartTheoremProof",
            "bb7ba0bbe5e4b799608241386c98e6f3efb91708"
        ],
        [
            "unfold Z.leb; intros x y H.",
            "VernacExtend",
            "192ab46292a3da8ce1fe4710b1b0d74fe5be6960"
        ],
        [
            "case_eq (x ?= y)%Z; intro H1; rewrite H1 in H.",
            "VernacExtend",
            "3006c35af20b9286589cdcf9dc4d5b07421e99c3"
        ],
        [
            "le_equal.",
            "VernacExtend",
            "a3ad4e0bd78ee388de670b0fc04adb09c7fd250b"
        ],
        [
            "apply Zring_morph.(morph_eq).",
            "VernacExtend",
            "97bd91b65c3505099bd377b61848885e6df2a146"
        ],
        [
            "unfold Zeq_bool; now rewrite H1.",
            "VernacExtend",
            "98bc3d9273ec9f4c6f2cacaf7581445149c10ac1"
        ],
        [
            "le_less.",
            "VernacExtend",
            "cd9b341c41effe58f1ecc9de79a19c36c271be40"
        ],
        [
            "now apply clt_morph.",
            "VernacExtend",
            "49093682d1fd19dd337160c1d76b576155355c09"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zcneqb_morph : forall x y : Z, Zeq_bool x y = false -> [x] ~= [y].",
            "VernacStartTheoremProof",
            "e11772f583674aa287abd92d7f1e2560865289e8"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "unfold Zeq_bool in H.",
            "VernacExtend",
            "ace674e177b57b0a9fc803fb725857b6e65632d2"
        ],
        [
            "case_eq (Z.compare x y); intro H1; rewrite H1 in *; (discriminate || clear H).",
            "VernacExtend",
            "9f826214db646cf1e4964fd971602157532ce86e"
        ],
        [
            "apply (Rlt_neq sor).",
            "VernacExtend",
            "97c3d66e4d55203876baf9996a93062dbf4057c3"
        ],
        [
            "now apply clt_morph.",
            "VernacExtend",
            "49093682d1fd19dd337160c1d76b576155355c09"
        ],
        [
            "fold (x > y)%Z in H1.",
            "VernacExtend",
            "dab2f7b4132cd56aab149d67024c02be47c9f143"
        ],
        [
            "rewrite Z.gt_lt_iff in H1.",
            "VernacExtend",
            "3265af2c33f22cf17d076def194b005e628fa921"
        ],
        [
            "apply (Rneq_symm sor).",
            "VernacExtend",
            "890f013de678d557d7f8ebe909fb314840875930"
        ],
        [
            "apply (Rlt_neq sor).",
            "VernacExtend",
            "97c3d66e4d55203876baf9996a93062dbf4057c3"
        ],
        [
            "now apply clt_morph.",
            "VernacExtend",
            "49093682d1fd19dd337160c1d76b576155355c09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InitialMorphism.",
            "VernacEndSegment",
            "3bb52fccccec6757eee8c03f3323ed012b844a1f"
        ]
    ],
    "proofs": [
        {
            "name": "req_refl",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "destruct sor.(SORsetoid) as (Equivalence_Reflexive,_,_).",
                        "VernacExtend",
                        "551eb777ed651ecac5148ae0e890d082ead710f5"
                    ]
                },
                {
                    "command": [
                        "apply Equivalence_Reflexive.",
                        "VernacExtend",
                        "f8d561eb0c2398b23cd3be04f43262a407c7bd13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "req_sym",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "destruct sor.(SORsetoid) as (_,Equivalence_Symmetric,_).",
                        "VernacExtend",
                        "4b467176f9289e412424184d630001de330bb185"
                    ]
                },
                {
                    "command": [
                        "apply Equivalence_Symmetric.",
                        "VernacExtend",
                        "da63e7e104ab836484776ac205a45b44859c1b60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "req_trans",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "destruct sor.(SORsetoid) as (_,_,Equivalence_Transitive).",
                        "VernacExtend",
                        "5d83b00d978d6f6672f84258afb08d333e940d52"
                    ]
                },
                {
                    "command": [
                        "apply Equivalence_Transitive.",
                        "VernacExtend",
                        "ed143e5902336bdfe2bbc1b5d8ab4d89c89d3b84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rplus_morph_Proper",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "exact sor.(SORplus_wd).",
                        "VernacExtend",
                        "bb7b5904f5489d0522ca7e6657e02540fd14e6bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rtimes_morph_Proper",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "exact sor.(SORtimes_wd).",
                        "VernacExtend",
                        "b9f43637e995e7f0fb4dcc7f0d51c43fcd046b8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ropp_morph_Proper",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "exact sor.(SORopp_wd).",
                        "VernacExtend",
                        "65db7c8e673172516107dee3879e874cdb4c7128"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rle_morph_Proper",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "exact sor.(SORle_wd).",
                        "VernacExtend",
                        "cfff9814add4c0eed8d71b99587d249744cb4492"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rlt_morph_Proper",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "exact sor.(SORlt_wd).",
                        "VernacExtend",
                        "8034c270dc293051737e92febc5881027618c284"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rminus_morph_Proper",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "exact (rminus_morph sor).",
                        "VernacExtend",
                        "4d48e138a78f497d13349c569df01b4f101fac15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ring_ops_wd",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact rplus_morph.",
                        "VernacExtend",
                        "81ae5c02df3c3917347edd47fff3d17da69d9490"
                    ]
                },
                {
                    "command": [
                        "exact rtimes_morph.",
                        "VernacExtend",
                        "848e0547b8e93d73f336902a9c67c32f9f6d1ed6"
                    ]
                },
                {
                    "command": [
                        "exact ropp_morph.",
                        "VernacExtend",
                        "2567e66cedb09248b43a607552b682e45dc5b31d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zring_morph",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "exact (gen_phiZ_morph sor.(SORsetoid) ring_ops_wd sor.(SORrt)).",
                        "VernacExtend",
                        "77d54c3b0f0ed7f70af82c39fe6924fe66ed1375"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_pos1_pos",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "induction x as [x IH | x IH |]; simpl; try apply (Rplus_pos_pos sor); try apply (Rtimes_pos_pos sor); try apply (Rplus_pos_pos sor); try apply (Rlt_0_1 sor); assumption.",
                        "VernacExtend",
                        "a01f59994173aa74616fc64946ff55e0b0f99de9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_pos1_succ",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "exact (ARgen_phiPOS_Psucc sor.(SORsetoid) ring_ops_wd (Rth_ARth sor.(SORsetoid) ring_ops_wd sor.(SORrt))).",
                        "VernacExtend",
                        "8576a892f9e3afc890d330e837a3c21c4b889098"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "clt_pos_morph",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "pattern y; apply Pos.lt_ind with x.",
                        "VernacExtend",
                        "2d494b3a8b44eaa286052e66b7050728f008fa6c"
                    ]
                },
                {
                    "command": [
                        "rewrite phi_pos1_succ; apply (Rlt_succ_r sor).",
                        "VernacExtend",
                        "d7fb9b34a2e3cafce98d97a51ed0e14f08dcb462"
                    ]
                },
                {
                    "command": [
                        "clear y H; intros y _ H.",
                        "VernacExtend",
                        "9e02fe0291801ada6ac61ce538fc1d86ff7b5925"
                    ]
                },
                {
                    "command": [
                        "rewrite phi_pos1_succ.",
                        "VernacExtend",
                        "489943efecdc9c528d09421fe9dac4bfe253351b"
                    ]
                },
                {
                    "command": [
                        "now apply (Rlt_lt_succ sor).",
                        "VernacExtend",
                        "6afd2c70428a11b51ef96ff5bceee5e5fdc386ec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "clt_morph",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (same_genZ sor.(SORsetoid) ring_ops_wd sor.(SORrt)); destruct x; destruct y; simpl in *; try discriminate.",
                        "VernacExtend",
                        "ffcb7d8d0ab472665fe64e54091fba0eb11331d7"
                    ]
                },
                {
                    "command": [
                        "apply phi_pos1_pos.",
                        "VernacExtend",
                        "c8b16e52fcc1759e7bc221145ba87cc6e1d2033c"
                    ]
                },
                {
                    "command": [
                        "now apply clt_pos_morph.",
                        "VernacExtend",
                        "0368260ab755182ee11da3996e56deb8c9f41289"
                    ]
                },
                {
                    "command": [
                        "apply <- (Ropp_neg_pos sor); apply phi_pos1_pos.",
                        "VernacExtend",
                        "dfb19bd23447a089ce4dd7e8e33dcb1476c9b3e5"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_trans sor) with 0.",
                        "VernacExtend",
                        "bca852bf2c79be57f7882dc7bef54420bf69e883"
                    ]
                },
                {
                    "command": [
                        "apply <- (Ropp_neg_pos sor); apply phi_pos1_pos.",
                        "VernacExtend",
                        "dfb19bd23447a089ce4dd7e8e33dcb1476c9b3e5"
                    ]
                },
                {
                    "command": [
                        "apply phi_pos1_pos.",
                        "VernacExtend",
                        "c8b16e52fcc1759e7bc221145ba87cc6e1d2033c"
                    ]
                },
                {
                    "command": [
                        "apply -> (Ropp_lt_mono sor); apply clt_pos_morph.",
                        "VernacExtend",
                        "fc11374c1b852a370869c8b48c4fc6013ac61009"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.compare_antisym.",
                        "VernacExtend",
                        "2ee1cb78228104c402a327b71ecc7ad732ef1193"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zcleb_morph",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "unfold Z.leb; intros x y H.",
                        "VernacExtend",
                        "192ab46292a3da8ce1fe4710b1b0d74fe5be6960"
                    ]
                },
                {
                    "command": [
                        "case_eq (x ?= y)%Z; intro H1; rewrite H1 in H.",
                        "VernacExtend",
                        "3006c35af20b9286589cdcf9dc4d5b07421e99c3"
                    ]
                },
                {
                    "command": [
                        "le_equal.",
                        "VernacExtend",
                        "a3ad4e0bd78ee388de670b0fc04adb09c7fd250b"
                    ]
                },
                {
                    "command": [
                        "apply Zring_morph.(morph_eq).",
                        "VernacExtend",
                        "97bd91b65c3505099bd377b61848885e6df2a146"
                    ]
                },
                {
                    "command": [
                        "unfold Zeq_bool; now rewrite H1.",
                        "VernacExtend",
                        "98bc3d9273ec9f4c6f2cacaf7581445149c10ac1"
                    ]
                },
                {
                    "command": [
                        "le_less.",
                        "VernacExtend",
                        "cd9b341c41effe58f1ecc9de79a19c36c271be40"
                    ]
                },
                {
                    "command": [
                        "now apply clt_morph.",
                        "VernacExtend",
                        "49093682d1fd19dd337160c1d76b576155355c09"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zcneqb_morph",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "unfold Zeq_bool in H.",
                        "VernacExtend",
                        "ace674e177b57b0a9fc803fb725857b6e65632d2"
                    ]
                },
                {
                    "command": [
                        "case_eq (Z.compare x y); intro H1; rewrite H1 in *; (discriminate || clear H).",
                        "VernacExtend",
                        "9f826214db646cf1e4964fd971602157532ce86e"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_neq sor).",
                        "VernacExtend",
                        "97c3d66e4d55203876baf9996a93062dbf4057c3"
                    ]
                },
                {
                    "command": [
                        "now apply clt_morph.",
                        "VernacExtend",
                        "49093682d1fd19dd337160c1d76b576155355c09"
                    ]
                },
                {
                    "command": [
                        "fold (x > y)%Z in H1.",
                        "VernacExtend",
                        "dab2f7b4132cd56aab149d67024c02be47c9f143"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.gt_lt_iff in H1.",
                        "VernacExtend",
                        "3265af2c33f22cf17d076def194b005e628fa921"
                    ]
                },
                {
                    "command": [
                        "apply (Rneq_symm sor).",
                        "VernacExtend",
                        "890f013de678d557d7f8ebe909fb314840875930"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_neq sor).",
                        "VernacExtend",
                        "97c3d66e4d55203876baf9996a93062dbf4057c3"
                    ]
                },
                {
                    "command": [
                        "now apply clt_morph.",
                        "VernacExtend",
                        "49093682d1fd19dd337160c1d76b576155355c09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}