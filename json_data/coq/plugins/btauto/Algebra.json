{
    "filename": "plugins/btauto/Algebra.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Bool PArith DecidableClass Omega Lia.",
            "VernacRequire",
            "79ac99248bff82d85a904c29c6fd765e4224af49"
        ],
        [
            "Ltac bool := repeat match goal with | [ H : ?P && ?Q = true |- _ ] => apply andb_true_iff in H; destruct H | |- ?P && ?Q = true => apply <- andb_true_iff; split end.",
            "VernacExtend",
            "5b3f88fb5e77a42e1b03fb13d0c5a7dbc9759d94"
        ],
        [
            "Arguments decide P /H.",
            "VernacArguments",
            "529b9f92529d2830148973602ed5e917fac50b10"
        ],
        [
            "Hint Extern 5 => progress bool.",
            "VernacHints",
            "bb74ab4a6d209dbacfcdb18de6e7f64ee062b3d7"
        ],
        [
            "Ltac define t x H := set (x := t) in *; assert (H : t = x) by reflexivity; clearbody x.",
            "VernacExtend",
            "1128da4b67ce082eba093ae83e21535da17e14fc"
        ],
        [
            "Lemma Decidable_sound : forall P (H : Decidable P), decide P = true -> P.",
            "VernacStartTheoremProof",
            "7c064f849fd4c85b25bc165199867cf0378dbd39"
        ],
        [
            "intros P H Hp; apply -> Decidable_spec; assumption.",
            "VernacExtend",
            "992da2375d482c5905d4483e3c576b3c4adca464"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Decidable_complete : forall P (H : Decidable P), P -> decide P = true.",
            "VernacStartTheoremProof",
            "638592e0e660514ab65c5e0237e27e2b819379a7"
        ],
        [
            "intros P H Hp; apply <- Decidable_spec; assumption.",
            "VernacExtend",
            "3deef0e2421aadb0dfc959362b43c2dad6b34f4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Decidable_sound_alt : forall P (H : Decidable P), ~ P -> decide P = false.",
            "VernacStartTheoremProof",
            "3735e21198bf8c6c27e576955a35f54d4161c96f"
        ],
        [
            "intros P [wit spec] Hd; destruct wit; simpl; tauto.",
            "VernacExtend",
            "79c9848acec07026219be57c39aecb1d921b5faf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Decidable_complete_alt : forall P (H : Decidable P), decide P = false -> ~ P.",
            "VernacStartTheoremProof",
            "5de5fc34538aba8751ad15784815aa7184e2334e"
        ],
        [
            "intros P [wit spec] Hd Hc; simpl in *; intuition congruence.",
            "VernacExtend",
            "bb8b038403fe87289f7637a9aee382d12b413043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac try_rewrite := repeat match goal with | [ H : ?P |- _ ] => rewrite H end.",
            "VernacExtend",
            "670b46bb2e91d4160784442f97119e5ae2a91070"
        ],
        [
            "Global Opaque decide.",
            "VernacSetOpacity",
            "61596e23d83b0759b9596fc1117895d0de132238"
        ],
        [
            "Ltac tac_decide := match goal with | [ H : @decide ?P ?D = true |- _ ] => apply (@Decidable_sound P D) in H | [ H : @decide ?P ?D = false |- _ ] => apply (@Decidable_complete_alt P D) in H | [ |- @decide ?P ?D = true ] => apply (@Decidable_complete P D) | [ |- @decide ?P ?D = false ] => apply (@Decidable_sound_alt P D) | [ |- negb ?b = true ] => apply negb_true_iff | [ |- negb ?b = false ] => apply negb_false_iff | [ H : negb ?b = true |- _ ] => apply negb_true_iff in H | [ H : negb ?b = false |- _ ] => apply negb_false_iff in H end.",
            "VernacExtend",
            "320cfa7da451fd77ddb8210140257427724346f0"
        ],
        [
            "Ltac try_decide := repeat tac_decide.",
            "VernacExtend",
            "9410ec625e317cd1d02e4036067f37bd21f170f2"
        ],
        [
            "Ltac make_decide P := match goal with | [ |- context [@decide P ?D] ] => let b := fresh \"b\" in let H := fresh \"H\" in define (@decide P D) b H; destruct b; try_decide | [ X : context [@decide P ?D] |- _ ] => let b := fresh \"b\" in let H := fresh \"H\" in define (@decide P D) b H; destruct b; try_decide end.",
            "VernacExtend",
            "3723fac784bbf30ca42abd013a5f6d4c12fb9ba1"
        ],
        [
            "Ltac case_decide := match goal with | [ |- context [@decide ?P ?D] ] => let b := fresh \"b\" in let H := fresh \"H\" in define (@decide P D) b H; destruct b; try_decide | [ X : context [@decide ?P ?D] |- _ ] => let b := fresh \"b\" in let H := fresh \"H\" in define (@decide P D) b H; destruct b; try_decide | [ |- context [Pos.compare ?x ?y] ] => destruct (Pos.compare_spec x y); try lia | [ X : context [Pos.compare ?x ?y] |- _ ] => destruct (Pos.compare_spec x y); try lia end.",
            "VernacExtend",
            "87c59aded715b28b4e3e77fc39445a79d9ccc6ff"
        ],
        [
            "Section Definitions.",
            "VernacBeginSection",
            "44c8aeee6f7e234b1ae876a1cda441d352768d1b"
        ],
        [
            "Inductive poly := | Cst : bool -> poly | Poly : poly -> positive -> poly -> poly.",
            "VernacInductive",
            "f8bdb123a44fc87283aee8ac4e2d8355c12aba22"
        ],
        [
            "Inductive null : poly -> Prop := | null_intro : null (Cst false).",
            "VernacInductive",
            "3b55587f4b6ca61c0f1d9842abd7b785b8e56fbb"
        ],
        [
            "Inductive valid : positive -> poly -> Prop := | valid_cst : forall k c, valid k (Cst c) | valid_poly : forall k p i q, Pos.lt i k -> ~ null q -> valid i p -> valid (Pos.succ i) q -> valid k (Poly p i q).",
            "VernacInductive",
            "b99ef70aaef41d0da6720ea11903149d001b6f89"
        ],
        [
            "Inductive linear : positive -> poly -> Prop := | linear_cst : forall k c, linear k (Cst c) | linear_poly : forall k p i q, Pos.lt i k -> ~ null q -> linear i p -> linear i q -> linear k (Poly p i q).",
            "VernacInductive",
            "31faa6f65d486807686db05c5c76bfa8140501f5"
        ],
        [
            "End Definitions.",
            "VernacEndSegment",
            "a9ff902ce1bf921ade03bc4535b4de21f2fcc02c"
        ],
        [
            "Section Computational.",
            "VernacBeginSection",
            "087654821bc9184f0487c61d905c8d0f2eace768"
        ],
        [
            "Program Instance Decidable_PosEq : forall (p q : positive), Decidable (p = q) := { Decidable_witness := Pos.eqb p q }.",
            "VernacInstance",
            "06342cc9f14fada56dcc0654f3559bc1dd0f00bd"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply Pos.eqb_eq.",
            "VernacExtend",
            "095fe63dd7f87e8af9997ad5c294c9443cb412ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance Decidable_PosLt : forall p q, Decidable (Pos.lt p q) := { Decidable_witness := Pos.ltb p q }.",
            "VernacInstance",
            "e64efcfe6f135884cb0a9e215a0041aa17ae20b4"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply Pos.ltb_lt.",
            "VernacExtend",
            "04aedfb379545b547c7ea99497939abb3b7c7d50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance Decidable_PosLe : forall p q, Decidable (Pos.le p q) := { Decidable_witness := Pos.leb p q }.",
            "VernacInstance",
            "bdefbe989c54ab72774390055b09bfbb4a7c9bba"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply Pos.leb_le.",
            "VernacExtend",
            "5b45e61113aed75a6efd98f6ec3c4f3b55da1d36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Constructors valid.",
            "VernacHints",
            "7d0340ac5f9de7fa61e25c86de51a3f271068027"
        ],
        [
            "Fixpoint beq_poly pl pr := match pl with | Cst cl => match pr with | Cst cr => decide (cl = cr) | Poly _ _ _ => false end | Poly pl il ql => match pr with | Cst _ => false | Poly pr ir qr => decide (il = ir) && beq_poly pl pr && beq_poly ql qr end end.",
            "VernacFixpoint",
            "768e6fba52a7b7af00ca45c6e61923db9e78cc9e"
        ],
        [
            "Program Instance Decidable_eq_poly : forall (p q : poly), Decidable (eq p q) := { Decidable_witness := beq_poly p q }.",
            "VernacInstance",
            "f6efdebea05e4a0473f7b991c96ddd7a957841b4"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert q; induction p; intros [] ?; simpl in *; bool; try_decide; f_equal; first [intuition congruence|auto].",
            "VernacExtend",
            "ce9b42501259ec7c779f82f2337e370f0b5c2088"
        ],
        [
            "revert q; induction p; intros [] Heq; simpl in *; bool; try_decide; intuition; try injection Heq; first[congruence|intuition].",
            "VernacExtend",
            "a7a2c40ba901edc46629ae8b8a8819168cf7357a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance Decidable_null : forall p, Decidable (null p) := { Decidable_witness := match p with Cst false => true | _ => false end }.",
            "VernacInstance",
            "dd2aa019b191c4e367b1ea183ac49e8a5b9c9932"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct p as [[]|]; first [discriminate|constructor].",
            "VernacExtend",
            "75fac32f19daf88f8f1bbaf1456183a289604079"
        ],
        [
            "inversion 1; trivial.",
            "VernacExtend",
            "046d1c92257fa818a30aa6688eb824d8f7a8094b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition list_nth {A} p (l : list A) def := Pos.peano_rect (fun _ => list A -> A) (fun l => match l with nil => def | cons t l => t end) (fun _ F l => match l with nil => def | cons t l => F l end) p l.",
            "VernacDefinition",
            "8cbdda644fd475b01a21c678dfe192856e3e30b3"
        ],
        [
            "Fixpoint eval var (p : poly) := match p with | Cst c => c | Poly p i q => let vi := list_nth i var false in xorb (eval var p) (andb vi (eval var q)) end.",
            "VernacFixpoint",
            "403a03a823a5d065431dd44b5d9506281302bd6a"
        ],
        [
            "Fixpoint valid_dec k p := match p with | Cst c => true | Poly p i q => negb (decide (null q)) && decide (i < k)%positive && valid_dec i p && valid_dec (Pos.succ i) q end.",
            "VernacFixpoint",
            "e808b46c04bf38d29f5f3173a39238d0f6ebea13"
        ],
        [
            "Program Instance Decidable_valid : forall n p, Decidable (valid n p) := { Decidable_witness := valid_dec n p }.",
            "VernacInstance",
            "f5bb73563719b45a7075afc5605de079b743dc67"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert n; induction p; unfold valid_dec in *; intuition; bool; try_decide; auto.",
            "VernacExtend",
            "ef2cdd6e774c4bbbb14767e848b722ea1304c1b2"
        ],
        [
            "intros H; induction H; unfold valid_dec in *; bool; try_decide; auto.",
            "VernacExtend",
            "cc8cbd045a087a60c4c79fad9a8fd32dc75e4a64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint poly_add pl {struct pl} := match pl with | Cst cl => fix F pr := match pr with | Cst cr => Cst (xorb cl cr) | Poly pr ir qr => Poly (F pr) ir qr end | Poly pl il ql => fix F pr {struct pr} := match pr with | Cst cr => Poly (poly_add pl pr) il ql | Poly pr ir qr => match Pos.compare il ir with | Eq => let qs := poly_add ql qr in if decide (null qs) then poly_add pl pr else Poly (poly_add pl pr) il qs | Gt => Poly (poly_add pl (Poly pr ir qr)) il ql | Lt => Poly (F pr) ir qr end end end.",
            "VernacFixpoint",
            "dd03cb48fd5e2ae0dc644920d7d2800dddcbc0e5"
        ],
        [
            "Fixpoint poly_mul_cst v p := match p with | Cst c => Cst (andb c v) | Poly p i q => let r := poly_mul_cst v q in if decide (null r) then poly_mul_cst v p else Poly (poly_mul_cst v p) i r end.",
            "VernacFixpoint",
            "9078b5a33a2d88471284cc9ac59e065a185f2f7f"
        ],
        [
            "Fixpoint poly_mul_mon k p := match p with | Cst c => if decide (null p) then p else Poly (Cst false) k p | Poly p i q => if decide (i <= k)%positive then Poly (Cst false) k (Poly p i q) else Poly (poly_mul_mon k p) i (poly_mul_mon k q) end.",
            "VernacFixpoint",
            "b2a690d3041ff8ffcad87c6b1ba31b16d68cbb48"
        ],
        [
            "Fixpoint poly_mul pl {struct pl} := match pl with | Cst cl => poly_mul_cst cl | Poly pl il ql => fun pr => let qs := poly_mul ql pr in if decide (null qs) then poly_mul pl pr else poly_add (poly_mul pl pr) (poly_mul_mon il qs) end.",
            "VernacFixpoint",
            "d5a796b676cec9bcc165365262c4bcba90eaf0d5"
        ],
        [
            "Fixpoint reduce_aux k p := match p with | Cst c => Cst c | Poly p i q => if decide (i = k) then poly_add (reduce_aux k p) (reduce_aux k q) else let qs := reduce_aux i q in if decide (null qs) then (reduce_aux k p) else Poly (reduce_aux k p) i qs end.",
            "VernacFixpoint",
            "172f45de922404e36a97585b220b90f16aed14bb"
        ],
        [
            "Fixpoint reduce p := match p with | Cst c => Cst c | Poly p i q => let qs := reduce_aux i q in if decide (null qs) then reduce p else Poly (reduce p) i qs end.",
            "VernacFixpoint",
            "963b44c36b016a431e2e166c15049e7445b5ea4d"
        ],
        [
            "End Computational.",
            "VernacEndSegment",
            "b30d941cd8b26ff2cfe3cda4cdf47d63de872856"
        ],
        [
            "Section Validity.",
            "VernacBeginSection",
            "508d06c5446ba9433b3943cebd2d7d60004f2cc0"
        ],
        [
            "Hint Constructors valid linear.",
            "VernacHints",
            "3905fc4862c3934c79ed94cde793308ee2ab03df"
        ],
        [
            "Lemma valid_le_compat : forall k l p, valid k p -> (k <= l)%positive -> valid l p.",
            "VernacStartTheoremProof",
            "4f5437f3894f6796a8cc39ecd9d3a4eebdfb9c04"
        ],
        [
            "intros k l p H Hl; induction H; constructor; eauto.",
            "VernacExtend",
            "f76a67c0b4f6777aee2061d2554f0c5af5949b4e"
        ],
        [
            "now eapply Pos.lt_le_trans; eassumption.",
            "VernacExtend",
            "5156e97c4372b247e5c151ca57d9f6d7db050c0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_le_compat : forall k l p, linear k p -> (k <= l)%positive -> linear l p.",
            "VernacStartTheoremProof",
            "f8c222622d787124babe78db068f30ce0c1be3d3"
        ],
        [
            "intros k l p H; revert l; induction H; constructor; eauto; lia.",
            "VernacExtend",
            "94c910dbae42d095c4d0808bc835de1c54ca8683"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_valid_incl : forall k p, linear k p -> valid k p.",
            "VernacStartTheoremProof",
            "b99030ea2410e723a018cb22a7b3caaa37e0b8a4"
        ],
        [
            "intros k p H; induction H; constructor; auto.",
            "VernacExtend",
            "7b8a949a2ed6b41166c26eb3c43326a7f2071a9c"
        ],
        [
            "eapply valid_le_compat; eauto; lia.",
            "VernacExtend",
            "b817f8fef80b4f5c71680b2281d34ee32f5783a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Validity.",
            "VernacEndSegment",
            "0d35753821eec980163d67f53779ed9af3badfa1"
        ],
        [
            "Section Evaluation.",
            "VernacBeginSection",
            "82fcd17608570526599b3e6ddc15df4b5576a159"
        ],
        [
            "Lemma eval_null_zero : forall p var, null p -> eval var p = false.",
            "VernacStartTheoremProof",
            "bc56a1b65ca5793d5cacdda5bb919250f42ec145"
        ],
        [
            "intros p var []; reflexivity.",
            "VernacExtend",
            "f46713312456e0c13dc742c058f2fb0b2e80a6b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_extensional_eq_compat : forall p var1 var2, (forall x, list_nth x var1 false = list_nth x var2 false) -> eval var1 p = eval var2 p.",
            "VernacStartTheoremProof",
            "2a08d5d363676bf0012d9a69c5444c20990c4d16"
        ],
        [
            "intros p var1 var2 H; induction p; simpl; try_rewrite; auto.",
            "VernacExtend",
            "6566caf22fa5b91c60dd08d6352dca6fb6447dc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eval_suffix_compat : forall k p var1 var2, (forall i, (i < k)%positive -> list_nth i var1 false = list_nth i var2 false) -> valid k p -> eval var1 p = eval var2 p.",
            "VernacStartTheoremProof",
            "1d7f255ff0be3526ca0e7201622b8dab63a1af7b"
        ],
        [
            "intros k p var1 var2 Hvar Hv; revert var1 var2 Hvar.",
            "VernacExtend",
            "1a666c6434cd55d629f5ba1e48f22553c67566ed"
        ],
        [
            "induction Hv; intros var1 var2 Hvar; simpl; [now auto|].",
            "VernacExtend",
            "acfac333a3c1c4981c294e73974fbed82d521005"
        ],
        [
            "rewrite Hvar; [|now auto]; erewrite (IHHv1 var1 var2).",
            "VernacExtend",
            "c6a2b79addc00e69bc83cea38a078c4c6040e24c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "erewrite (IHHv2 var1 var2); [ring|].",
            "VernacExtend",
            "b5a4a36f63fd18c2ce4059ea6f3f052e4ac3109f"
        ],
        [
            "intros; apply Hvar; zify; omega.",
            "VernacExtend",
            "4a904e3600e3ab45330a4b7b1451c43011a10e0f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros; apply Hvar; zify; omega.",
            "VernacExtend",
            "4a904e3600e3ab45330a4b7b1451c43011a10e0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Evaluation.",
            "VernacEndSegment",
            "bd40a6cf89af57a524b67dd9d174c914beeef99e"
        ],
        [
            "Section Algebra.",
            "VernacBeginSection",
            "73c7b2cf6b30e6b8ed6b181ffc9b54f2359f9dd9"
        ],
        [
            "Lemma poly_add_compat : forall pl pr var, eval var (poly_add pl pr) = xorb (eval var pl) (eval var pr).",
            "VernacStartTheoremProof",
            "b240128eb959a0082d01de0a44e8d82ce96b8ec0"
        ],
        [
            "intros pl; induction pl; intros pr var; simpl.",
            "VernacExtend",
            "57a79b66cb9e1309dfb135b9aac55fd39b45b0a2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "induction pr; simpl; auto; solve [try_rewrite; ring].",
            "VernacExtend",
            "db75827560d7a29fa7c4bfc6bc41b2128ee44788"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "induction pr; simpl; auto; try solve [try_rewrite; simpl; ring].",
            "VernacExtend",
            "1da521a00aa0451945cd6a5cdba320967ca8e8c6"
        ],
        [
            "destruct (Pos.compare_spec p p0); repeat case_decide; simpl; first [try_rewrite; ring|idtac].",
            "VernacExtend",
            "424ddbf8387d6609988f15adc1f88dc0ad446a30"
        ],
        [
            "try_rewrite; ring_simplify; repeat rewrite xorb_assoc.",
            "VernacExtend",
            "877ecf5691f9ef252d2f67559f6ee5c1f7227aac"
        ],
        [
            "match goal with [ |- context [xorb (andb ?b1 ?b2) (andb ?b1 ?b3)] ] => replace (xorb (andb b1 b2) (andb b1 b3)) with (andb b1 (xorb b2 b3)) by ring end.",
            "VernacExtend",
            "50794e21105a90b9f1c77f8cf5cc7327bcee9a86"
        ],
        [
            "rewrite <- IHpl2.",
            "VernacExtend",
            "26e07b359a33c9305f6f1ce340cb364992bfb4ce"
        ],
        [
            "match goal with [ H : null ?p |- _ ] => rewrite (eval_null_zero _ _ H) end; ring.",
            "VernacExtend",
            "741bef113ca998d43c748a5b3ea2dd5bc37f44f9"
        ],
        [
            "simpl; rewrite IHpl1; simpl; ring.",
            "VernacExtend",
            "b4a346e16bbfa05c59a7356d82325f3da2548471"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_cst_compat : forall v p var, eval var (poly_mul_cst v p) = andb v (eval var p).",
            "VernacStartTheoremProof",
            "47121d429ea33836e4c66eb268d3f109b2440a62"
        ],
        [
            "intros v p; induction p; intros var; simpl; [ring|].",
            "VernacExtend",
            "f78acc23b0d8f5d998c1311806d86bb53c1a8dca"
        ],
        [
            "case_decide; simpl; try_rewrite; [ring_simplify|ring].",
            "VernacExtend",
            "b9eeadd9b80d8b33ef1e95f88932057d904302ae"
        ],
        [
            "replace (v && list_nth p2 var false && eval var p3) with (list_nth p2 var false && (v && eval var p3)) by ring.",
            "VernacExtend",
            "cb8d0a19bacf32c7964c0d54f4cc3e6e55989fa1"
        ],
        [
            "rewrite <- IHp2; inversion H; simpl; ring.",
            "VernacExtend",
            "27f284768b91a0e98c8aeae47286bed6cc221516"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_mon_compat : forall i p var, eval var (poly_mul_mon i p) = (list_nth i var false && eval var p).",
            "VernacStartTheoremProof",
            "fd1e49c5d239f5edec09eff0b2b1bb3fd2243463"
        ],
        [
            "intros i p var; induction p; simpl; case_decide; simpl; try_rewrite; try ring.",
            "VernacExtend",
            "7db932e8dad1c680d2021a9c961ebca8199d2e5d"
        ],
        [
            "inversion H; ring.",
            "VernacExtend",
            "dda4a0649c2d5c8e6f525f2dfdf04cb2406b1eb0"
        ],
        [
            "match goal with [ |- ?u = ?t ] => set (x := t); destruct x; reflexivity end.",
            "VernacExtend",
            "7dafee5569705b615dc5637621037f2e934408b0"
        ],
        [
            "match goal with [ |- ?u = ?t ] => set (x := t); destruct x; reflexivity end.",
            "VernacExtend",
            "7dafee5569705b615dc5637621037f2e934408b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_compat : forall pl pr var, eval var (poly_mul pl pr) = andb (eval var pl) (eval var pr).",
            "VernacStartTheoremProof",
            "1f3d935aa3e327c22268d320d8f928a103bbc361"
        ],
        [
            "intros pl; induction pl; intros pr var; simpl.",
            "VernacExtend",
            "57a79b66cb9e1309dfb135b9aac55fd39b45b0a2"
        ],
        [
            "apply poly_mul_cst_compat.",
            "VernacExtend",
            "4d40e76b714d5dc12a6410241674d40137337365"
        ],
        [
            "case_decide; simpl.",
            "VernacExtend",
            "3479496b6c003c3e9718917dc10bf60cfbd600a7"
        ],
        [
            "rewrite IHpl1; ring_simplify.",
            "VernacExtend",
            "e1253f19be91c24647087265882a4e3c29c95fc2"
        ],
        [
            "replace (eval var pr && list_nth p var false && eval var pl2) with (list_nth p var false && (eval var pl2 && eval var pr)) by ring.",
            "VernacExtend",
            "6b8507beee5812989343c771c918b99b95d5be89"
        ],
        [
            "now rewrite <- IHpl2; inversion H; simpl; ring.",
            "VernacExtend",
            "60f5d2e17ba3cd46ddf7f371590cd986fd8038bb"
        ],
        [
            "rewrite poly_add_compat, poly_mul_mon_compat, IHpl1, IHpl2; ring.",
            "VernacExtend",
            "ba4f3a9622ebc2d8111b9b7fb4a69adc2f4f47ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Extern 5 => match goal with | [ |- (Pos.max ?x ?y <= ?z)%positive ] => apply Pos.max_case_strong; intros; lia | [ |- (?z <= Pos.max ?x ?y)%positive ] => apply Pos.max_case_strong; intros; lia | [ |- (Pos.max ?x ?y < ?z)%positive ] => apply Pos.max_case_strong; intros; lia | [ |- (?z < Pos.max ?x ?y)%positive ] => apply Pos.max_case_strong; intros; lia | _ => zify; omega end.",
            "VernacHints",
            "4ac5b386b7029b2e3aa69a9b55b1a7cc5553c742"
        ],
        [
            "Hint Resolve Pos.le_max_r Pos.le_max_l.",
            "VernacHints",
            "d4ed108d97c8a189a0d4c49dcd321fab18e2f3e0"
        ],
        [
            "Hint Constructors valid linear.",
            "VernacHints",
            "3905fc4862c3934c79ed94cde793308ee2ab03df"
        ],
        [
            "Lemma poly_add_valid_compat : forall kl kr pl pr, valid kl pl -> valid kr pr -> valid (Pos.max kl kr) (poly_add pl pr).",
            "VernacStartTheoremProof",
            "41ea09d017525a33a5d8f4c3f669e85ac740843d"
        ],
        [
            "intros kl kr pl pr Hl Hr; revert kr pr Hr; induction Hl; intros kr pr Hr; simpl.",
            "VernacExtend",
            "716593225ca51269a5a127272f7cfbcef00c4ece"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply valid_le_compat; [clear k|apply Pos.le_max_r].",
            "VernacExtend",
            "bdcbd6570cc0a69f0f0faa0dc65bbddc33cb1a43"
        ],
        [
            "now induction Hr; auto.",
            "VernacExtend",
            "3503463a13c07e5f3dc240826a7bf547e277fb8a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Hle : (Pos.max (Pos.succ i) kr <= Pos.max k kr)%positive) by auto.",
            "VernacExtend",
            "77ea4d35befc6546daf008cd919d14549b1e1e2c"
        ],
        [
            "apply (valid_le_compat (Pos.max (Pos.succ i) kr)); [|assumption].",
            "VernacExtend",
            "e7d502ca5b3a402c563aa7ef93b6af68bc008756"
        ],
        [
            "clear - IHHl1 IHHl2 Hl2 Hr H0; induction Hr.",
            "VernacExtend",
            "f5355ac3ba0a2e38b5bd51c0b3760e2c440746c4"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "now rewrite <- (Pos.max_id i); intuition.",
            "VernacExtend",
            "b353ee1a6f51ab80d3cfc92f0a6f02bdbb9cba0d"
        ],
        [
            "destruct (Pos.compare_spec i i0); subst; try case_decide; repeat (constructor; intuition).",
            "VernacExtend",
            "766fbe5d1fa94e1bedbefe4d5159edc2604bff24"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; auto.",
            "VernacExtend",
            "b235418669e7232de5f3b6dc9e26024decb9aa84"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; lia.",
            "VernacExtend",
            "5ae91e842acb928c801a88fd98878a616cbefb88"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.max (Pos.succ i0) (Pos.succ i0))); [now auto|]; rewrite Pos.max_id; lia.",
            "VernacExtend",
            "b02bdee1eb11f89498668f3d6d6199719316786a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.max (Pos.succ i) i0)); intuition.",
            "VernacExtend",
            "6c845f24a78231ceffde3681a6fbbf167412a39a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.max i (Pos.succ i0))); intuition.",
            "VernacExtend",
            "e781161432e43a78dcbc8f18e9a7b78ef4db31c2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_cst_valid_compat : forall k v p, valid k p -> valid k (poly_mul_cst v p).",
            "VernacStartTheoremProof",
            "a4ac11157f8a2457bcce04b0f09be0fd6869705d"
        ],
        [
            "intros k v p H; induction H; simpl; [now auto|].",
            "VernacExtend",
            "8f8a116cfac592a339280b27860054de5e930dc8"
        ],
        [
            "case_decide; [|now auto].",
            "VernacExtend",
            "873fa074832df2c7b26acb1baddd448d0f2e1c39"
        ],
        [
            "eapply (valid_le_compat i); [now auto|lia].",
            "VernacExtend",
            "6d84e9500fe4ba664b703f5d667ce07fbb8339d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_mon_null_compat : forall i p, null (poly_mul_mon i p) -> null p.",
            "VernacStartTheoremProof",
            "c6b6fbbbe3c8cf924048dd0313406fab89599bb4"
        ],
        [
            "intros i p; induction p; simpl; case_decide; simpl; inversion 1; intuition.",
            "VernacExtend",
            "b31d82ac2a5142b4687d232697bed976d27ee490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_mon_valid_compat : forall k i p, valid k p -> valid (Pos.max (Pos.succ i) k) (poly_mul_mon i p).",
            "VernacStartTheoremProof",
            "982b3c600c9748aae977e29275bc105fb875c530"
        ],
        [
            "intros k i p H; induction H; simpl poly_mul_mon; case_decide; intuition.",
            "VernacExtend",
            "180eaea2bffd0ec64b5db99183c1f86ad9d75cbe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.succ i)); auto; constructor; intuition.",
            "VernacExtend",
            "f218ce3d39b5731c588a95763a03dddf84caf48d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "match goal with [ H : null ?p |- _ ] => solve[inversion H] end.",
            "VernacExtend",
            "bbef0983fb0f0dc5aa4827f99053f110a790e8ea"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat k); auto; constructor; intuition.",
            "VernacExtend",
            "25260417c5f5c4bf2f0101d1b617bea8c765e1a1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (X := poly_mul_mon_null_compat); intuition eauto.",
            "VernacExtend",
            "ec6332126854ae4bf698d3db9713d22ec49f7341"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cutrewrite <- (Pos.max (Pos.succ i) i0 = i0); intuition.",
            "VernacExtend",
            "a5dec8127f15034c4cc7fdd93d84b8e6202fabd3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "cutrewrite <- (Pos.max (Pos.succ i) (Pos.succ i0) = Pos.succ i0); intuition.",
            "VernacExtend",
            "eaf5801cd1d5ee988f361f79fde4939ca805250e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_mul_valid_compat : forall kl kr pl pr, valid kl pl -> valid kr pr -> valid (Pos.max kl kr) (poly_mul pl pr).",
            "VernacStartTheoremProof",
            "228a5e7e487bfe3e95e5b303eb1133633e53d5dc"
        ],
        [
            "intros kl kr pl pr Hl Hr; revert kr pr Hr.",
            "VernacExtend",
            "1d1aa1547fa446d792f9474e61d839b05cfdc52e"
        ],
        [
            "induction Hl; intros kr pr Hr; simpl.",
            "VernacExtend",
            "11f14af790b551ce248aad8ddcb07fed3e262881"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply poly_mul_cst_valid_compat; auto.",
            "VernacExtend",
            "42adb9860f37808e925bd1027cb50a15983208a6"
        ],
        [
            "apply (valid_le_compat kr); now auto.",
            "VernacExtend",
            "56cdeeecb71ff4d5054185d855b159f70affd7e0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (valid_le_compat (Pos.max (Pos.max i kr) (Pos.max (Pos.succ i) (Pos.max (Pos.succ i) kr)))).",
            "VernacExtend",
            "092b6d42810122648058c163b4ecea9bb563a8b0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case_decide.",
            "VernacExtend",
            "41510ca83247826f8151b3a019e6c5c7901aeb15"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (valid_le_compat (Pos.max i kr)); auto.",
            "VernacExtend",
            "ac7982f602f73dca78437b255f19694859526aaa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply poly_add_valid_compat; auto.",
            "VernacExtend",
            "878c30c26243cf772455953388600ff21189065b"
        ],
        [
            "now apply poly_mul_mon_valid_compat; intuition.",
            "VernacExtend",
            "4072ce9134d57f674bf26f59bfdcd980d4aec4b9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "repeat apply Pos.max_case_strong; zify; omega.",
            "VernacExtend",
            "d1d797f418e365acb223942d5ac4ba2bb5cd9d81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly_add_linear_compat : forall kl kr pl pr, linear kl pl -> linear kr pr -> linear (Pos.max kl kr) (poly_add pl pr).",
            "VernacStartTheoremProof",
            "d3f856af7ea6c6f77ed02b4313b43d3c540b23f7"
        ],
        [
            "intros kl kr pl pr Hl; revert kr pr; induction Hl; intros kr pr Hr; simpl.",
            "VernacExtend",
            "547cbd2c12acd18046b5990fd9d95df7fdccfbb7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (linear_le_compat kr); [|apply Pos.max_case_strong; zify; omega].",
            "VernacExtend",
            "538b1f79cf62346241338b9002b5ee24db762678"
        ],
        [
            "now induction Hr; constructor; auto.",
            "VernacExtend",
            "eb54ec2ae0ec03df250cf9a82f7156e3711ad052"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply (linear_le_compat (Pos.max kr (Pos.succ i))); [|now auto].",
            "VernacExtend",
            "9df1e8a0b74c13812acefe0a976cc3f567c4e432"
        ],
        [
            "induction Hr; simpl.",
            "VernacExtend",
            "0e5d848b4f1e64bc1d3b8cf5176eb36e908fce6a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "replace i with (Pos.max i i) by (apply Pos.max_id); intuition.",
            "VernacExtend",
            "21a53d981af53b17752e42f914a4278db22495cd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Pos.compare_spec i i0); subst; try case_decide; repeat (constructor; intuition).",
            "VernacExtend",
            "766fbe5d1fa94e1bedbefe4d5159edc2604bff24"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (linear_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; auto.",
            "VernacExtend",
            "1861af437fbc8dfae4e39db818ef6ad8d6537b53"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (linear_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; auto.",
            "VernacExtend",
            "1861af437fbc8dfae4e39db818ef6ad8d6537b53"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (linear_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; auto.",
            "VernacExtend",
            "1861af437fbc8dfae4e39db818ef6ad8d6537b53"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (linear_le_compat (Pos.max i0 (Pos.succ i))); intuition.",
            "VernacExtend",
            "e029f28bc6d40ea50714854f46c7f89eeaaa922a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (linear_le_compat (Pos.max i (Pos.succ i0))); intuition.",
            "VernacExtend",
            "03e70adf58c503c9f5174b25eae5cf50922f6e1d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Algebra.",
            "VernacEndSegment",
            "1373be42e3c84520d2b6f119ec42c3af6c674e67"
        ],
        [
            "Section Reduce.",
            "VernacBeginSection",
            "b813c527cb5c4f726aa353261c6d4800210d91e1"
        ],
        [
            "Lemma reduce_aux_eval_compat : forall k p var, valid (Pos.succ k) p -> (list_nth k var false && eval var (reduce_aux k p) = list_nth k var false && eval var p).",
            "VernacStartTheoremProof",
            "a79d88b30ba3ecfc6b57fa19b5ff9cf5d9c338f9"
        ],
        [
            "intros k p var; revert k; induction p; intros k Hv; simpl; auto.",
            "VernacExtend",
            "214e02187a0b4b62c440bbefc074944605b9a6dd"
        ],
        [
            "inversion Hv; case_decide; subst.",
            "VernacExtend",
            "9fb302295befa8bd4796502b49b89891b96aae41"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite poly_add_compat; ring_simplify.",
            "VernacExtend",
            "471e9d597d8ebd48c7af7ef01826a4b07698f381"
        ],
        [
            "specialize (IHp1 k); specialize (IHp2 k).",
            "VernacExtend",
            "55208db4f22d67d949f64d8bda99426d6e7df787"
        ],
        [
            "destruct (list_nth k var false); ring_simplify; [|now auto].",
            "VernacExtend",
            "5a9d52ef59d1ffa070819516f693098f4fee6648"
        ],
        [
            "rewrite <- (andb_true_l (eval var p1)), <- (andb_true_l (eval var p3)).",
            "VernacExtend",
            "9a4392931398171b070c5f572208c699aa34b1f7"
        ],
        [
            "rewrite <- IHp2; auto; rewrite <- IHp1; [ring|].",
            "VernacExtend",
            "8cd26ac9bb0edce509152857aa4b106808b9babd"
        ],
        [
            "apply (valid_le_compat k); [now auto|zify; omega].",
            "VernacExtend",
            "dd4de1403ffe9cec9e811c6cb4838712b1b07f2d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "remember (list_nth k var false) as b; destruct b; ring_simplify; [|now auto].",
            "VernacExtend",
            "ce08bd35fad86076ce7ec45fb71f5b9e2e39319b"
        ],
        [
            "case_decide; simpl.",
            "VernacExtend",
            "3479496b6c003c3e9718917dc10bf60cfbd600a7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (IHp2 p2); [inversion H|now auto]; simpl.",
            "VernacExtend",
            "025e947b72df6371602ca607b6c5c4c69f0a6d48"
        ],
        [
            "replace (eval var p1) with (list_nth k var false && eval var p1) by (rewrite <- Heqb; ring); rewrite <- (IHp1 k).",
            "VernacExtend",
            "47f3c88fee73110d3da71da5deca25a63e64f194"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- Heqb; ring.",
            "VernacExtend",
            "b99e2b051687aa5698e54a336ca43314423e7ea4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (valid_le_compat p2); [auto|zify; omega].",
            "VernacExtend",
            "f2c11727f464a73de50c230151bc49e9f3ce1a5e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (IHp2 p2); [|now auto].",
            "VernacExtend",
            "d9ee6ac15b16d388472b43241be65633ce806c3a"
        ],
        [
            "replace (eval var p1) with (list_nth k var false && eval var p1) by (rewrite <- Heqb; ring).",
            "VernacExtend",
            "504d41bd17a248faa83e489395973f888a5edab0"
        ],
        [
            "rewrite <- (IHp1 k); [rewrite <- Heqb; ring|].",
            "VernacExtend",
            "6cf5f529b5a4d7446b07a55e29e01084c44680c2"
        ],
        [
            "apply (valid_le_compat p2); [auto|zify; omega].",
            "VernacExtend",
            "f2c11727f464a73de50c230151bc49e9f3ce1a5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduce_eval_compat : forall k p var, valid k p -> eval var (reduce p) = eval var p.",
            "VernacStartTheoremProof",
            "32cb8d6412236a6a65f36a706e80893fd54fd129"
        ],
        [
            "intros k p var H; induction H; simpl; auto.",
            "VernacExtend",
            "fda8bdbb2b7526ea554f9427dac1dd1706017fdb"
        ],
        [
            "case_decide; try_rewrite; simpl.",
            "VernacExtend",
            "8ac89ec6452a1eaf7cdcea5ea7bc58a04e270c84"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- reduce_aux_eval_compat; auto; inversion H3; simpl; ring.",
            "VernacExtend",
            "998813a8975d5bd4cb28468b77dd027999cbcc71"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "repeat rewrite reduce_aux_eval_compat; try_rewrite; now auto.",
            "VernacExtend",
            "a7a17ea7f927c44fb36abf9c33add4b88ab9b945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduce_aux_le_compat : forall k l p, valid k p -> (k <= l)%positive -> reduce_aux l p = reduce_aux k p.",
            "VernacStartTheoremProof",
            "b8bbf32cdc93f53c4ded34de9076ea3d0b7d6680"
        ],
        [
            "intros k l p; revert k l; induction p; intros k l H Hle; simpl; auto.",
            "VernacExtend",
            "8acb759598114dad3815a83e08de79bceeae08f7"
        ],
        [
            "inversion H; subst; repeat case_decide; subst; try (exfalso; zify; omega).",
            "VernacExtend",
            "c5564b606b580e65c3c8c112eadf08f3accf9636"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IHp1; [|now auto]; eapply valid_le_compat; [eauto|zify; omega].",
            "VernacExtend",
            "7eefadf4c8a170edd61abc954216eec43aff7404"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equal; apply IHp1; auto.",
            "VernacExtend",
            "0b7e553bc648fe09e7ae0619cf2473300f5c96e9"
        ],
        [
            "now eapply valid_le_compat; [eauto|zify; omega].",
            "VernacExtend",
            "1e514f708211fd5a7cebe67b79ff912d56f923dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_reduce_aux : forall i p, valid (Pos.succ i) p -> linear i (reduce_aux i p).",
            "VernacStartTheoremProof",
            "794b8a8f8073b81395ecaa6599cd0bb1b0c8afaa"
        ],
        [
            "intros i p; revert i; induction p; intros i Hp; simpl.",
            "VernacExtend",
            "135e0b97fb5710a32571df7acb46b026ac99944f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion Hp; subst; case_decide; subst.",
            "VernacExtend",
            "5f54bf58af658d446a64aa18e44914a49551bcb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- (Pos.max_id i) at 1; apply poly_add_linear_compat.",
            "VernacExtend",
            "dd9c7c0be157c8823c1141dc657f65ab48375f63"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply IHp1; eapply valid_le_compat; [eassumption|zify; omega].",
            "VernacExtend",
            "e82044503f7b723c6eb4daf482e97237b4232889"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case_decide.",
            "VernacExtend",
            "41510ca83247826f8151b3a019e6c5c7901aeb15"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply IHp1; eapply valid_le_compat; [eauto|zify; omega].",
            "VernacExtend",
            "a1bb320fb8867adc6fdcacea8b8fab1fccb104e5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "constructor; try (zify; omega); auto.",
            "VernacExtend",
            "f6b86d13675c009d19c62d967c0e7473b8f028d9"
        ],
        [
            "erewrite (reduce_aux_le_compat p2); [|assumption|zify; omega].",
            "VernacExtend",
            "1a4b5bee284d17c84bf360dfb417f47ea686dd88"
        ],
        [
            "apply IHp1; eapply valid_le_compat; [eauto|]; zify; omega.",
            "VernacExtend",
            "14b7a1bf8c32fe44862121926c06ae868bf658ba"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma linear_reduce : forall k p, valid k p -> linear k (reduce p).",
            "VernacStartTheoremProof",
            "36951045dd5ca05a01a5ee6ba2fe5bbbee1b6538"
        ],
        [
            "intros k p H; induction H; simpl.",
            "VernacExtend",
            "faac3f7200ee422b57d3d88640b8782f5ab8a254"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now constructor.",
            "VernacExtend",
            "e001978ec065ef0fd63cb804e72fb73890e93711"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "case_decide.",
            "VernacExtend",
            "41510ca83247826f8151b3a019e6c5c7901aeb15"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply linear_le_compat; [eauto|zify; omega].",
            "VernacExtend",
            "fa11532fab4ca578bb84c8eaa256d375f59c8309"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply linear_reduce_aux; auto.",
            "VernacExtend",
            "29b96f0956e5273036df9e4d3be496eea4757a8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Reduce.",
            "VernacEndSegment",
            "6673e8613d00031d9942b1475901cbe85a0eb89d"
        ]
    ],
    "proofs": [
        {
            "name": "Decidable_sound",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros P H Hp; apply -> Decidable_spec; assumption.",
                        "VernacExtend",
                        "992da2375d482c5905d4483e3c576b3c4adca464"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_complete",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros P H Hp; apply <- Decidable_spec; assumption.",
                        "VernacExtend",
                        "3deef0e2421aadb0dfc959362b43c2dad6b34f4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_sound_alt",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros P [wit spec] Hd; destruct wit; simpl; tauto.",
                        "VernacExtend",
                        "79c9848acec07026219be57c39aecb1d921b5faf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_complete_alt",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros P [wit spec] Hd Hc; simpl in *; intuition congruence.",
                        "VernacExtend",
                        "bb8b038403fe87289f7637a9aee382d12b413043"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_PosEq_obligation_1",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "apply Pos.eqb_eq.",
                        "VernacExtend",
                        "095fe63dd7f87e8af9997ad5c294c9443cb412ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_PosLt_obligation_1",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "apply Pos.ltb_lt.",
                        "VernacExtend",
                        "04aedfb379545b547c7ea99497939abb3b7c7d50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_PosLe_obligation_1",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "apply Pos.leb_le.",
                        "VernacExtend",
                        "5b45e61113aed75a6efd98f6ec3c4f3b55da1d36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_eq_poly_obligation_1",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "revert q; induction p; intros [] ?; simpl in *; bool; try_decide; f_equal; first [intuition congruence|auto].",
                        "VernacExtend",
                        "ce9b42501259ec7c779f82f2337e370f0b5c2088"
                    ]
                },
                {
                    "command": [
                        "revert q; induction p; intros [] Heq; simpl in *; bool; try_decide; intuition; try injection Heq; first[congruence|intuition].",
                        "VernacExtend",
                        "a7a2c40ba901edc46629ae8b8a8819168cf7357a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_null_obligation_3",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "destruct p as [[]|]; first [discriminate|constructor].",
                        "VernacExtend",
                        "75fac32f19daf88f8f1bbaf1456183a289604079"
                    ]
                },
                {
                    "command": [
                        "inversion 1; trivial.",
                        "VernacExtend",
                        "046d1c92257fa818a30aa6688eb824d8f7a8094b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Decidable_valid_obligation_1",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "revert n; induction p; unfold valid_dec in *; intuition; bool; try_decide; auto.",
                        "VernacExtend",
                        "ef2cdd6e774c4bbbb14767e848b722ea1304c1b2"
                    ]
                },
                {
                    "command": [
                        "intros H; induction H; unfold valid_dec in *; bool; try_decide; auto.",
                        "VernacExtend",
                        "cc8cbd045a087a60c4c79fad9a8fd32dc75e4a64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_le_compat",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros k l p H Hl; induction H; constructor; eauto.",
                        "VernacExtend",
                        "f76a67c0b4f6777aee2061d2554f0c5af5949b4e"
                    ]
                },
                {
                    "command": [
                        "now eapply Pos.lt_le_trans; eassumption.",
                        "VernacExtend",
                        "5156e97c4372b247e5c151ca57d9f6d7db050c0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_le_compat",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros k l p H; revert l; induction H; constructor; eauto; lia.",
                        "VernacExtend",
                        "94c910dbae42d095c4d0808bc835de1c54ca8683"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_valid_incl",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros k p H; induction H; constructor; auto.",
                        "VernacExtend",
                        "7b8a949a2ed6b41166c26eb3c43326a7f2071a9c"
                    ]
                },
                {
                    "command": [
                        "eapply valid_le_compat; eauto; lia.",
                        "VernacExtend",
                        "b817f8fef80b4f5c71680b2281d34ee32f5783a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_null_zero",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros p var []; reflexivity.",
                        "VernacExtend",
                        "f46713312456e0c13dc742c058f2fb0b2e80a6b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_extensional_eq_compat",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros p var1 var2 H; induction p; simpl; try_rewrite; auto.",
                        "VernacExtend",
                        "6566caf22fa5b91c60dd08d6352dca6fb6447dc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eval_suffix_compat",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros k p var1 var2 Hvar Hv; revert var1 var2 Hvar.",
                        "VernacExtend",
                        "1a666c6434cd55d629f5ba1e48f22553c67566ed"
                    ]
                },
                {
                    "command": [
                        "induction Hv; intros var1 var2 Hvar; simpl; [now auto|].",
                        "VernacExtend",
                        "acfac333a3c1c4981c294e73974fbed82d521005"
                    ]
                },
                {
                    "command": [
                        "rewrite Hvar; [|now auto]; erewrite (IHHv1 var1 var2).",
                        "VernacExtend",
                        "c6a2b79addc00e69bc83cea38a078c4c6040e24c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "erewrite (IHHv2 var1 var2); [ring|].",
                        "VernacExtend",
                        "b5a4a36f63fd18c2ce4059ea6f3f052e4ac3109f"
                    ]
                },
                {
                    "command": [
                        "intros; apply Hvar; zify; omega.",
                        "VernacExtend",
                        "4a904e3600e3ab45330a4b7b1451c43011a10e0f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros; apply Hvar; zify; omega.",
                        "VernacExtend",
                        "4a904e3600e3ab45330a4b7b1451c43011a10e0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_add_compat",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros pl; induction pl; intros pr var; simpl.",
                        "VernacExtend",
                        "57a79b66cb9e1309dfb135b9aac55fd39b45b0a2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "induction pr; simpl; auto; solve [try_rewrite; ring].",
                        "VernacExtend",
                        "db75827560d7a29fa7c4bfc6bc41b2128ee44788"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "induction pr; simpl; auto; try solve [try_rewrite; simpl; ring].",
                        "VernacExtend",
                        "1da521a00aa0451945cd6a5cdba320967ca8e8c6"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare_spec p p0); repeat case_decide; simpl; first [try_rewrite; ring|idtac].",
                        "VernacExtend",
                        "424ddbf8387d6609988f15adc1f88dc0ad446a30"
                    ]
                },
                {
                    "command": [
                        "try_rewrite; ring_simplify; repeat rewrite xorb_assoc.",
                        "VernacExtend",
                        "877ecf5691f9ef252d2f67559f6ee5c1f7227aac"
                    ]
                },
                {
                    "command": [
                        "match goal with [ |- context [xorb (andb ?b1 ?b2) (andb ?b1 ?b3)] ] => replace (xorb (andb b1 b2) (andb b1 b3)) with (andb b1 (xorb b2 b3)) by ring end.",
                        "VernacExtend",
                        "50794e21105a90b9f1c77f8cf5cc7327bcee9a86"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHpl2.",
                        "VernacExtend",
                        "26e07b359a33c9305f6f1ce340cb364992bfb4ce"
                    ]
                },
                {
                    "command": [
                        "match goal with [ H : null ?p |- _ ] => rewrite (eval_null_zero _ _ H) end; ring.",
                        "VernacExtend",
                        "741bef113ca998d43c748a5b3ea2dd5bc37f44f9"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite IHpl1; simpl; ring.",
                        "VernacExtend",
                        "b4a346e16bbfa05c59a7356d82325f3da2548471"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_cst_compat",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros v p; induction p; intros var; simpl; [ring|].",
                        "VernacExtend",
                        "f78acc23b0d8f5d998c1311806d86bb53c1a8dca"
                    ]
                },
                {
                    "command": [
                        "case_decide; simpl; try_rewrite; [ring_simplify|ring].",
                        "VernacExtend",
                        "b9eeadd9b80d8b33ef1e95f88932057d904302ae"
                    ]
                },
                {
                    "command": [
                        "replace (v && list_nth p2 var false && eval var p3) with (list_nth p2 var false && (v && eval var p3)) by ring.",
                        "VernacExtend",
                        "cb8d0a19bacf32c7964c0d54f4cc3e6e55989fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHp2; inversion H; simpl; ring.",
                        "VernacExtend",
                        "27f284768b91a0e98c8aeae47286bed6cc221516"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_mon_compat",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros i p var; induction p; simpl; case_decide; simpl; try_rewrite; try ring.",
                        "VernacExtend",
                        "7db932e8dad1c680d2021a9c961ebca8199d2e5d"
                    ]
                },
                {
                    "command": [
                        "inversion H; ring.",
                        "VernacExtend",
                        "dda4a0649c2d5c8e6f525f2dfdf04cb2406b1eb0"
                    ]
                },
                {
                    "command": [
                        "match goal with [ |- ?u = ?t ] => set (x := t); destruct x; reflexivity end.",
                        "VernacExtend",
                        "7dafee5569705b615dc5637621037f2e934408b0"
                    ]
                },
                {
                    "command": [
                        "match goal with [ |- ?u = ?t ] => set (x := t); destruct x; reflexivity end.",
                        "VernacExtend",
                        "7dafee5569705b615dc5637621037f2e934408b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_compat",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros pl; induction pl; intros pr var; simpl.",
                        "VernacExtend",
                        "57a79b66cb9e1309dfb135b9aac55fd39b45b0a2"
                    ]
                },
                {
                    "command": [
                        "apply poly_mul_cst_compat.",
                        "VernacExtend",
                        "4d40e76b714d5dc12a6410241674d40137337365"
                    ]
                },
                {
                    "command": [
                        "case_decide; simpl.",
                        "VernacExtend",
                        "3479496b6c003c3e9718917dc10bf60cfbd600a7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHpl1; ring_simplify.",
                        "VernacExtend",
                        "e1253f19be91c24647087265882a4e3c29c95fc2"
                    ]
                },
                {
                    "command": [
                        "replace (eval var pr && list_nth p var false && eval var pl2) with (list_nth p var false && (eval var pl2 && eval var pr)) by ring.",
                        "VernacExtend",
                        "6b8507beee5812989343c771c918b99b95d5be89"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- IHpl2; inversion H; simpl; ring.",
                        "VernacExtend",
                        "60f5d2e17ba3cd46ddf7f371590cd986fd8038bb"
                    ]
                },
                {
                    "command": [
                        "rewrite poly_add_compat, poly_mul_mon_compat, IHpl1, IHpl2; ring.",
                        "VernacExtend",
                        "ba4f3a9622ebc2d8111b9b7fb4a69adc2f4f47ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_add_valid_compat",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros kl kr pl pr Hl Hr; revert kr pr Hr; induction Hl; intros kr pr Hr; simpl.",
                        "VernacExtend",
                        "716593225ca51269a5a127272f7cfbcef00c4ece"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "eapply valid_le_compat; [clear k|apply Pos.le_max_r].",
                        "VernacExtend",
                        "bdcbd6570cc0a69f0f0faa0dc65bbddc33cb1a43"
                    ]
                },
                {
                    "command": [
                        "now induction Hr; auto.",
                        "VernacExtend",
                        "3503463a13c07e5f3dc240826a7bf547e277fb8a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Hle : (Pos.max (Pos.succ i) kr <= Pos.max k kr)%positive) by auto.",
                        "VernacExtend",
                        "77ea4d35befc6546daf008cd919d14549b1e1e2c"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max (Pos.succ i) kr)); [|assumption].",
                        "VernacExtend",
                        "e7d502ca5b3a402c563aa7ef93b6af68bc008756"
                    ]
                },
                {
                    "command": [
                        "clear - IHHl1 IHHl2 Hl2 Hr H0; induction Hr.",
                        "VernacExtend",
                        "f5355ac3ba0a2e38b5bd51c0b3760e2c440746c4"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- (Pos.max_id i); intuition.",
                        "VernacExtend",
                        "b353ee1a6f51ab80d3cfc92f0a6f02bdbb9cba0d"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare_spec i i0); subst; try case_decide; repeat (constructor; intuition).",
                        "VernacExtend",
                        "766fbe5d1fa94e1bedbefe4d5159edc2604bff24"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; auto.",
                        "VernacExtend",
                        "b235418669e7232de5f3b6dc9e26024decb9aa84"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max i0 i0)); [now auto|]; rewrite Pos.max_id; lia.",
                        "VernacExtend",
                        "5ae91e842acb928c801a88fd98878a616cbefb88"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max (Pos.succ i0) (Pos.succ i0))); [now auto|]; rewrite Pos.max_id; lia.",
                        "VernacExtend",
                        "b02bdee1eb11f89498668f3d6d6199719316786a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max (Pos.succ i) i0)); intuition.",
                        "VernacExtend",
                        "6c845f24a78231ceffde3681a6fbbf167412a39a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max i (Pos.succ i0))); intuition.",
                        "VernacExtend",
                        "e781161432e43a78dcbc8f18e9a7b78ef4db31c2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_cst_valid_compat",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros k v p H; induction H; simpl; [now auto|].",
                        "VernacExtend",
                        "8f8a116cfac592a339280b27860054de5e930dc8"
                    ]
                },
                {
                    "command": [
                        "case_decide; [|now auto].",
                        "VernacExtend",
                        "873fa074832df2c7b26acb1baddd448d0f2e1c39"
                    ]
                },
                {
                    "command": [
                        "eapply (valid_le_compat i); [now auto|lia].",
                        "VernacExtend",
                        "6d84e9500fe4ba664b703f5d667ce07fbb8339d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_mon_null_compat",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros i p; induction p; simpl; case_decide; simpl; inversion 1; intuition.",
                        "VernacExtend",
                        "b31d82ac2a5142b4687d232697bed976d27ee490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_mon_valid_compat",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros k i p H; induction H; simpl poly_mul_mon; case_decide; intuition.",
                        "VernacExtend",
                        "180eaea2bffd0ec64b5db99183c1f86ad9d75cbe"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.succ i)); auto; constructor; intuition.",
                        "VernacExtend",
                        "f218ce3d39b5731c588a95763a03dddf84caf48d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "match goal with [ H : null ?p |- _ ] => solve[inversion H] end.",
                        "VernacExtend",
                        "bbef0983fb0f0dc5aa4827f99053f110a790e8ea"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat k); auto; constructor; intuition.",
                        "VernacExtend",
                        "25260417c5f5c4bf2f0101d1b617bea8c765e1a1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (X := poly_mul_mon_null_compat); intuition eauto.",
                        "VernacExtend",
                        "ec6332126854ae4bf698d3db9713d22ec49f7341"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "cutrewrite <- (Pos.max (Pos.succ i) i0 = i0); intuition.",
                        "VernacExtend",
                        "a5dec8127f15034c4cc7fdd93d84b8e6202fabd3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "cutrewrite <- (Pos.max (Pos.succ i) (Pos.succ i0) = Pos.succ i0); intuition.",
                        "VernacExtend",
                        "eaf5801cd1d5ee988f361f79fde4939ca805250e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly_mul_valid_compat",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "intros kl kr pl pr Hl Hr; revert kr pr Hr.",
                        "VernacExtend",
                        "1d1aa1547fa446d792f9474e61d839b05cfdc52e"
                    ]
                },
                {
                    "command": [
                        "induction Hl; intros kr pr Hr; simpl.",
                        "VernacExtend",
                        "11f14af790b551ce248aad8ddcb07fed3e262881"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply poly_mul_cst_valid_compat; auto.",
                        "VernacExtend",
                        "42adb9860f37808e925bd1027cb50a15983208a6"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat kr); now auto.",
                        "VernacExtend",
                        "56cdeeecb71ff4d5054185d855b159f70affd7e0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max (Pos.max i kr) (Pos.max (Pos.succ i) (Pos.max (Pos.succ i) kr)))).",
                        "VernacExtend",
                        "092b6d42810122648058c163b4ecea9bb563a8b0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case_decide.",
                        "VernacExtend",
                        "41510ca83247826f8151b3a019e6c5c7901aeb15"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat (Pos.max i kr)); auto.",
                        "VernacExtend",
                        "ac7982f602f73dca78437b255f19694859526aaa"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply poly_add_valid_compat; auto.",
                        "VernacExtend",
                        "878c30c26243cf772455953388600ff21189065b"
                    ]
                },
                {
                    "command": [
                        "now apply poly_mul_mon_valid_compat; intuition.",
                        "VernacExtend",
                        "4072ce9134d57f674bf26f59bfdcd980d4aec4b9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "repeat apply Pos.max_case_strong; zify; omega.",
                        "VernacExtend",
                        "d1d797f418e365acb223942d5ac4ba2bb5cd9d81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduce_aux_eval_compat",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros k p var; revert k; induction p; intros k Hv; simpl; auto.",
                        "VernacExtend",
                        "214e02187a0b4b62c440bbefc074944605b9a6dd"
                    ]
                },
                {
                    "command": [
                        "inversion Hv; case_decide; subst.",
                        "VernacExtend",
                        "9fb302295befa8bd4796502b49b89891b96aae41"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite poly_add_compat; ring_simplify.",
                        "VernacExtend",
                        "471e9d597d8ebd48c7af7ef01826a4b07698f381"
                    ]
                },
                {
                    "command": [
                        "specialize (IHp1 k); specialize (IHp2 k).",
                        "VernacExtend",
                        "55208db4f22d67d949f64d8bda99426d6e7df787"
                    ]
                },
                {
                    "command": [
                        "destruct (list_nth k var false); ring_simplify; [|now auto].",
                        "VernacExtend",
                        "5a9d52ef59d1ffa070819516f693098f4fee6648"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (andb_true_l (eval var p1)), <- (andb_true_l (eval var p3)).",
                        "VernacExtend",
                        "9a4392931398171b070c5f572208c699aa34b1f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHp2; auto; rewrite <- IHp1; [ring|].",
                        "VernacExtend",
                        "8cd26ac9bb0edce509152857aa4b106808b9babd"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat k); [now auto|zify; omega].",
                        "VernacExtend",
                        "dd4de1403ffe9cec9e811c6cb4838712b1b07f2d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "remember (list_nth k var false) as b; destruct b; ring_simplify; [|now auto].",
                        "VernacExtend",
                        "ce08bd35fad86076ce7ec45fb71f5b9e2e39319b"
                    ]
                },
                {
                    "command": [
                        "case_decide; simpl.",
                        "VernacExtend",
                        "3479496b6c003c3e9718917dc10bf60cfbd600a7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (IHp2 p2); [inversion H|now auto]; simpl.",
                        "VernacExtend",
                        "025e947b72df6371602ca607b6c5c4c69f0a6d48"
                    ]
                },
                {
                    "command": [
                        "replace (eval var p1) with (list_nth k var false && eval var p1) by (rewrite <- Heqb; ring); rewrite <- (IHp1 k).",
                        "VernacExtend",
                        "47f3c88fee73110d3da71da5deca25a63e64f194"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heqb; ring.",
                        "VernacExtend",
                        "b99e2b051687aa5698e54a336ca43314423e7ea4"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat p2); [auto|zify; omega].",
                        "VernacExtend",
                        "f2c11727f464a73de50c230151bc49e9f3ce1a5e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHp2 p2); [|now auto].",
                        "VernacExtend",
                        "d9ee6ac15b16d388472b43241be65633ce806c3a"
                    ]
                },
                {
                    "command": [
                        "replace (eval var p1) with (list_nth k var false && eval var p1) by (rewrite <- Heqb; ring).",
                        "VernacExtend",
                        "504d41bd17a248faa83e489395973f888a5edab0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (IHp1 k); [rewrite <- Heqb; ring|].",
                        "VernacExtend",
                        "6cf5f529b5a4d7446b07a55e29e01084c44680c2"
                    ]
                },
                {
                    "command": [
                        "apply (valid_le_compat p2); [auto|zify; omega].",
                        "VernacExtend",
                        "f2c11727f464a73de50c230151bc49e9f3ce1a5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduce_eval_compat",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "intros k p var H; induction H; simpl; auto.",
                        "VernacExtend",
                        "fda8bdbb2b7526ea554f9427dac1dd1706017fdb"
                    ]
                },
                {
                    "command": [
                        "case_decide; try_rewrite; simpl.",
                        "VernacExtend",
                        "8ac89ec6452a1eaf7cdcea5ea7bc58a04e270c84"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- reduce_aux_eval_compat; auto; inversion H3; simpl; ring.",
                        "VernacExtend",
                        "998813a8975d5bd4cb28468b77dd027999cbcc71"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite reduce_aux_eval_compat; try_rewrite; now auto.",
                        "VernacExtend",
                        "a7a17ea7f927c44fb36abf9c33add4b88ab9b945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduce_aux_le_compat",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros k l p; revert k l; induction p; intros k l H Hle; simpl; auto.",
                        "VernacExtend",
                        "8acb759598114dad3815a83e08de79bceeae08f7"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; repeat case_decide; subst; try (exfalso; zify; omega).",
                        "VernacExtend",
                        "c5564b606b580e65c3c8c112eadf08f3accf9636"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply IHp1; [|now auto]; eapply valid_le_compat; [eauto|zify; omega].",
                        "VernacExtend",
                        "7eefadf4c8a170edd61abc954216eec43aff7404"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equal; apply IHp1; auto.",
                        "VernacExtend",
                        "0b7e553bc648fe09e7ae0619cf2473300f5c96e9"
                    ]
                },
                {
                    "command": [
                        "now eapply valid_le_compat; [eauto|zify; omega].",
                        "VernacExtend",
                        "1e514f708211fd5a7cebe67b79ff912d56f923dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_reduce_aux",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "intros i p; revert i; induction p; intros i Hp; simpl.",
                        "VernacExtend",
                        "135e0b97fb5710a32571df7acb46b026ac99944f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion Hp; subst; case_decide; subst.",
                        "VernacExtend",
                        "5f54bf58af658d446a64aa18e44914a49551bcb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.max_id i) at 1; apply poly_add_linear_compat.",
                        "VernacExtend",
                        "dd9c7c0be157c8823c1141dc657f65ab48375f63"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply IHp1; eapply valid_le_compat; [eassumption|zify; omega].",
                        "VernacExtend",
                        "e82044503f7b723c6eb4daf482e97237b4232889"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case_decide.",
                        "VernacExtend",
                        "41510ca83247826f8151b3a019e6c5c7901aeb15"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply IHp1; eapply valid_le_compat; [eauto|zify; omega].",
                        "VernacExtend",
                        "a1bb320fb8867adc6fdcacea8b8fab1fccb104e5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "constructor; try (zify; omega); auto.",
                        "VernacExtend",
                        "f6b86d13675c009d19c62d967c0e7473b8f028d9"
                    ]
                },
                {
                    "command": [
                        "erewrite (reduce_aux_le_compat p2); [|assumption|zify; omega].",
                        "VernacExtend",
                        "1a4b5bee284d17c84bf360dfb417f47ea686dd88"
                    ]
                },
                {
                    "command": [
                        "apply IHp1; eapply valid_le_compat; [eauto|]; zify; omega.",
                        "VernacExtend",
                        "14b7a1bf8c32fe44862121926c06ae868bf658ba"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "linear_reduce",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "intros k p H; induction H; simpl.",
                        "VernacExtend",
                        "faac3f7200ee422b57d3d88640b8782f5ab8a254"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now constructor.",
                        "VernacExtend",
                        "e001978ec065ef0fd63cb804e72fb73890e93711"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "case_decide.",
                        "VernacExtend",
                        "41510ca83247826f8151b3a019e6c5c7901aeb15"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply linear_le_compat; [eauto|zify; omega].",
                        "VernacExtend",
                        "fa11532fab4ca578bb84c8eaa256d375f59c8309"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "apply linear_reduce_aux; auto.",
                        "VernacExtend",
                        "29b96f0956e5273036df9e4d3be496eea4757a8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}