{
    "filename": "plugins/setoid_ring/Ring_polynom.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import Setoid Morphisms.",
            "VernacRequire",
            "9dad866dd91d5f68c68f4cb329999ec6c270fa33"
        ],
        [
            "Require Import BinList BinPos BinNat BinInt.",
            "VernacRequire",
            "30695e752d3f5bc43bcbd217cd70d22eb1525a2f"
        ],
        [
            "Require Export Ring_theory.",
            "VernacRequire",
            "c69b29e90f3fd912e59f6460f594409f250f905f"
        ],
        [
            "Local Open Scope positive_scope.",
            "VernacOpenCloseScope",
            "373b6149b002bb2947d7edec759c86b4538856cb"
        ],
        [
            "Import RingSyntax.",
            "VernacImport",
            "7f261a6392aca26015067a3647e3f6338ae01946"
        ],
        [
            "Section MakeRingPol.",
            "VernacBeginSection",
            "68cc2c11002cfe0126b0c98b9195b23757521e28"
        ],
        [
            "Variable R:Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable (rO rI : R) (radd rmul rsub: R->R->R) (ropp : R->R).",
            "VernacAssumption",
            "50301ed65bb665fbf3206555d45afa28de31a677"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Variable Rsth : Equivalence req.",
            "VernacAssumption",
            "20ed60052394a47f0d325623f53a5a192ba34e99"
        ],
        [
            "Variable Reqe : ring_eq_ext radd rmul ropp req.",
            "VernacAssumption",
            "2490789f2fd55b52c058faf984f76ae57e3f5ca4"
        ],
        [
            "Variable ARth : almost_ring_theory rO rI radd rmul rsub ropp req.",
            "VernacAssumption",
            "db5fb1f29392ebc64c94bb3f8434a3a90cfa8c68"
        ],
        [
            "Variable C: Type.",
            "VernacAssumption",
            "20108330110ebb6b9192d426d25380e8d6116c8b"
        ],
        [
            "Variable (cO cI: C) (cadd cmul csub : C->C->C) (copp : C->C).",
            "VernacAssumption",
            "bfa62f3a9631380cb7efd09a44874a01c790d7ff"
        ],
        [
            "Variable ceqb : C->C->bool.",
            "VernacAssumption",
            "35a22dd496fc6b7fe19894000aee0239eb0f0bda"
        ],
        [
            "Variable phi : C -> R.",
            "VernacAssumption",
            "e58164e03041ba7f39504a5dad80f8da633ddfef"
        ],
        [
            "Variable CRmorph : ring_morph rO rI radd rmul rsub ropp req cO cI cadd cmul csub copp ceqb phi.",
            "VernacAssumption",
            "7de0eb49022a60440331cb859b741b64e8f9aef3"
        ],
        [
            "Variable Cpow : Type.",
            "VernacAssumption",
            "5fd9d8de545804dabbc08bc1dec757d9e3e7c2bb"
        ],
        [
            "Variable Cp_phi : N -> Cpow.",
            "VernacAssumption",
            "bea2e2988dc807fdffafaf2835667b12ed4e7397"
        ],
        [
            "Variable rpow : R -> Cpow -> R.",
            "VernacAssumption",
            "a43abdf13b67e4b90b48ab8ad717c69813dfbc76"
        ],
        [
            "Variable pow_th : power_theory rI rmul req Cp_phi rpow.",
            "VernacAssumption",
            "c2386d3cc65492c999fbadc5a18d4484e92f0125"
        ],
        [
            "Variable cdiv: C -> C -> C * C.",
            "VernacAssumption",
            "85ea4cf89205f28e2da5ea4324582aa1198ab573"
        ],
        [
            "Variable div_th: div_theory req cadd cmul phi cdiv.",
            "VernacAssumption",
            "27247232b4a0d49eb3cbeaab79e0f4a66cf10ebd"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Infix \"+\" := radd.",
            "VernacInfix",
            "733e797454fc5e8be56c95f6ba97dfe464843e19"
        ],
        [
            "Infix \"*\" := rmul.",
            "VernacInfix",
            "d40503ef057e2b599482389864cf8bd6b0fe4206"
        ],
        [
            "Infix \"-\" := rsub.",
            "VernacInfix",
            "aaeb2ffd0eb1159e58e13723bc14dcf32ee50d98"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Infix \"==\" := req.",
            "VernacInfix",
            "2b92d9dc3f08d6b9e8a5e2f78f2d0bb11480cea1"
        ],
        [
            "Infix \"^\" := (pow_pos rmul).",
            "VernacInfix",
            "8b1bb1372f88ea4dcc2cc179f7fbac7b0635893c"
        ],
        [
            "Infix \"+!\" := cadd.",
            "VernacInfix",
            "6dda017337f5eb51274096d5bf0bfccc55b7a5ec"
        ],
        [
            "Infix \"*!\" := cmul.",
            "VernacInfix",
            "8eb425f75079ffbe882ff21ef964da411c9f8de3"
        ],
        [
            "Infix \"-! \" := csub.",
            "VernacInfix",
            "a05335aa73bac3f4ea12df89b44d761498cb1e8c"
        ],
        [
            "Notation \"-! x\" := (copp x).",
            "VernacNotation",
            "13d70e8d6b543ba5509537e48337c4c8c4a3bf15"
        ],
        [
            "Infix \"?=!\" := ceqb.",
            "VernacInfix",
            "08eb2917aa9e612935fa198437c3d7a320fd7a97"
        ],
        [
            "Notation \"[ x ]\" := (phi x).",
            "VernacNotation",
            "91bc5a9755ba6e30832bd0e414486cfc7ca96b69"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext.",
            "VernacExtend",
            "afa1203d9df0105f85e320ead354fbac4f961b57"
        ],
        [
            "exact (Radd_ext Reqe).",
            "VernacExtend",
            "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext.",
            "VernacExtend",
            "9ac189bda5c441f2c1f9699cd760e4bd2b8450a2"
        ],
        [
            "exact (Rmul_ext Reqe).",
            "VernacExtend",
            "13b3093566a735d2e3348ba5dd18427edb19cc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism ropp with signature (req ==> req) as ropp_ext.",
            "VernacExtend",
            "5e9cfc220fb3a78992fc32c9a429637b459fffa1"
        ],
        [
            "exact (Ropp_ext Reqe).",
            "VernacExtend",
            "e013460b2ed7bdd11390b3f84aa58078462220c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rsub with signature (req ==> req ==> req) as rsub_ext.",
            "VernacExtend",
            "5bba83c2c4c166d838c91a064bd66e4d0c8d3257"
        ],
        [
            "exact (ARsub_ext Rsth Reqe ARth).",
            "VernacExtend",
            "598d7a4358fb924db1093bc250a8a51010ad7b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac rsimpl := gen_srewrite Rsth Reqe ARth.",
            "VernacExtend",
            "316a2bb443d0b018b8e39a076d455d3f980cee6d"
        ],
        [
            "Ltac add_push := gen_add_push radd Rsth Reqe ARth.",
            "VernacExtend",
            "807d29a516e79214f687cb386094990f68e2e17a"
        ],
        [
            "Ltac mul_push := gen_mul_push rmul Rsth Reqe ARth.",
            "VernacExtend",
            "fe7f51cd4955fda54c449dcbf6e04bc6d5fb0d2e"
        ],
        [
            "Ltac add_permut_rec t := match t with | ?x + ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Radd_ext Reqe); [|reflexivity] end.",
            "VernacExtend",
            "62c97f630826cecd405d5eb21f064cc35e15e687"
        ],
        [
            "Ltac add_permut := repeat (reflexivity || match goal with |- ?t == _ => add_permut_rec t end).",
            "VernacExtend",
            "9a6d8e41b7663a0a8d3d9f291f4e6f48048c753e"
        ],
        [
            "Ltac mul_permut_rec t := match t with | ?x * ?y => mul_permut_rec y || mul_permut_rec x | _ => mul_push t; apply (Rmul_ext Reqe); [|reflexivity] end.",
            "VernacExtend",
            "c59b1edd0084d9505f6d95a4d7f7a0ad2ba07f58"
        ],
        [
            "Ltac mul_permut := repeat (reflexivity || match goal with |- ?t == _ => mul_permut_rec t end).",
            "VernacExtend",
            "a7de04c511fd766a0d5156c9dc88e8063f7341b0"
        ],
        [
            "Inductive Pol : Type := | Pc : C -> Pol | Pinj : positive -> Pol -> Pol | PX : Pol -> positive -> Pol -> Pol.",
            "VernacInductive",
            "bcafd45fb612573360b8cb45b21b23f246cec895"
        ],
        [
            "Definition P0 := Pc cO.",
            "VernacDefinition",
            "89c3b703239479fca412f483408e478479ea2f64"
        ],
        [
            "Definition P1 := Pc cI.",
            "VernacDefinition",
            "227a3e00dc01d762a8c31e99a201f1045510f651"
        ],
        [
            "Fixpoint Peq (P P' : Pol) {struct P'} : bool := match P, P' with | Pc c, Pc c' => c ?=! c' | Pinj j Q, Pinj j' Q' => match j ?= j' with | Eq => Peq Q Q' | _ => false end | PX P i Q, PX P' i' Q' => match i ?= i' with | Eq => if Peq P P' then Peq Q Q' else false | _ => false end | _, _ => false end.",
            "VernacFixpoint",
            "e236bfe143f6aa3f7b5237ba1529c08cb5567565"
        ],
        [
            "Infix \"?==\" := Peq.",
            "VernacInfix",
            "e68dc987c7741998f277e4f2e0a0d4d6a99bebf0"
        ],
        [
            "Definition mkPinj j P := match P with | Pc _ => P | Pinj j' Q => Pinj (j + j') Q | _ => Pinj j P end.",
            "VernacDefinition",
            "fa04bd4024643a3cad0e29ff319fb59f98afd353"
        ],
        [
            "Definition mkPinj_pred j P:= match j with | xH => P | xO j => Pinj (Pos.pred_double j) P | xI j => Pinj (xO j) P end.",
            "VernacDefinition",
            "ab1c6edd43eda7a6865e910d7219a9a018caade6"
        ],
        [
            "Definition mkPX P i Q := match P with | Pc c => if c ?=! cO then mkPinj xH Q else PX P i Q | Pinj _ _ => PX P i Q | PX P' i' Q' => if Q' ?== P0 then PX P' (i' + i) Q else PX P i Q end.",
            "VernacDefinition",
            "8930d171a9891229fb2949bba83518e972e7ba49"
        ],
        [
            "Definition mkXi i := PX P1 i P0.",
            "VernacDefinition",
            "872e722b5d12791a025e534bbee36c70ee407817"
        ],
        [
            "Definition mkX := mkXi 1.",
            "VernacDefinition",
            "6c78fdf541c1450cb14cd4d73f7d8e041d97ee54"
        ],
        [
            "Fixpoint Popp (P:Pol) : Pol := match P with | Pc c => Pc (-! c) | Pinj j Q => Pinj j (Popp Q) | PX P i Q => PX (Popp P) i (Popp Q) end.",
            "VernacFixpoint",
            "1b1e4bf3dde9a8d472b737f1b102e3405200ebb2"
        ],
        [
            "Notation \"-- P\" := (Popp P).",
            "VernacNotation",
            "b16da3cbadd2ef6fdefe74a08b8a76b98812d4ae"
        ],
        [
            "Fixpoint PaddC (P:Pol) (c:C) : Pol := match P with | Pc c1 => Pc (c1 +! c) | Pinj j Q => Pinj j (PaddC Q c) | PX P i Q => PX P i (PaddC Q c) end.",
            "VernacFixpoint",
            "864954677df4f2e6af6a7e1ad584db5a9a721c29"
        ],
        [
            "Fixpoint PsubC (P:Pol) (c:C) : Pol := match P with | Pc c1 => Pc (c1 -! c) | Pinj j Q => Pinj j (PsubC Q c) | PX P i Q => PX P i (PsubC Q c) end.",
            "VernacFixpoint",
            "5b16b5e2711e46d1ea9b828cc43f213965c90e43"
        ],
        [
            "Section PopI.",
            "VernacBeginSection",
            "687ac5ed6c7f824672b40de2b8894ee1a2a61a17"
        ],
        [
            "Variable Pop : Pol -> Pol -> Pol.",
            "VernacAssumption",
            "954d5873b7153ebbaa68a3f4c716b17f88f14007"
        ],
        [
            "Variable Q : Pol.",
            "VernacAssumption",
            "1c4c0440519573901fc8306f4111d28b2b02b26c"
        ],
        [
            "Fixpoint PaddI (j:positive) (P:Pol) : Pol := match P with | Pc c => mkPinj j (PaddC Q c) | Pinj j' Q' => match Z.pos_sub j' j with | Zpos k => mkPinj j (Pop (Pinj k Q') Q) | Z0 => mkPinj j (Pop Q' Q) | Zneg k => mkPinj j' (PaddI k Q') end | PX P i Q' => match j with | xH => PX P i (Pop Q' Q) | xO j => PX P i (PaddI (Pos.pred_double j) Q') | xI j => PX P i (PaddI (xO j) Q') end end.",
            "VernacFixpoint",
            "a769ec8a5801c405a0ae49b6f569c54d08381e9b"
        ],
        [
            "Fixpoint PsubI (j:positive) (P:Pol) : Pol := match P with | Pc c => mkPinj j (PaddC (--Q) c) | Pinj j' Q' => match Z.pos_sub j' j with | Zpos k => mkPinj j (Pop (Pinj k Q') Q) | Z0 => mkPinj j (Pop Q' Q) | Zneg k => mkPinj j' (PsubI k Q') end | PX P i Q' => match j with | xH => PX P i (Pop Q' Q) | xO j => PX P i (PsubI (Pos.pred_double j) Q') | xI j => PX P i (PsubI (xO j) Q') end end.",
            "VernacFixpoint",
            "758d30c9647fcbb3d65a246d070a175e01101b18"
        ],
        [
            "Variable P' : Pol.",
            "VernacAssumption",
            "b043a5b95878e8530a3c768c20b6cd8a23d04866"
        ],
        [
            "Fixpoint PaddX (i':positive) (P:Pol) : Pol := match P with | Pc c => PX P' i' P | Pinj j Q' => match j with | xH => PX P' i' Q' | xO j => PX P' i' (Pinj (Pos.pred_double j) Q') | xI j => PX P' i' (Pinj (xO j) Q') end | PX P i Q' => match Z.pos_sub i i' with | Zpos k => mkPX (Pop (PX P k P0) P') i' Q' | Z0 => mkPX (Pop P P') i Q' | Zneg k => mkPX (PaddX k P) i Q' end end.",
            "VernacFixpoint",
            "47d2d3940d52086bc20ad3dbc137dc8b14a0d881"
        ],
        [
            "Fixpoint PsubX (i':positive) (P:Pol) : Pol := match P with | Pc c => PX (--P') i' P | Pinj j Q' => match j with | xH => PX (--P') i' Q' | xO j => PX (--P') i' (Pinj (Pos.pred_double j) Q') | xI j => PX (--P') i' (Pinj (xO j) Q') end | PX P i Q' => match Z.pos_sub i i' with | Zpos k => mkPX (Pop (PX P k P0) P') i' Q' | Z0 => mkPX (Pop P P') i Q' | Zneg k => mkPX (PsubX k P) i Q' end end.",
            "VernacFixpoint",
            "409fd7cc942bbf070715eff9eb492c4ab2dc2f99"
        ],
        [
            "End PopI.",
            "VernacEndSegment",
            "eb836367a9250e200a962e77df3c21df0c32ba5a"
        ],
        [
            "Fixpoint Padd (P P': Pol) {struct P'} : Pol := match P' with | Pc c' => PaddC P c' | Pinj j' Q' => PaddI Padd Q' j' P | PX P' i' Q' => match P with | Pc c => PX P' i' (PaddC Q' c) | Pinj j Q => match j with | xH => PX P' i' (Padd Q Q') | xO j => PX P' i' (Padd (Pinj (Pos.pred_double j) Q) Q') | xI j => PX P' i' (Padd (Pinj (xO j) Q) Q') end | PX P i Q => match Z.pos_sub i i' with | Zpos k => mkPX (Padd (PX P k P0) P') i' (Padd Q Q') | Z0 => mkPX (Padd P P') i (Padd Q Q') | Zneg k => mkPX (PaddX Padd P' k P) i (Padd Q Q') end end end.",
            "VernacFixpoint",
            "8bcd35ec05d7ecfcdaa5a2f4d4397e3d763a899a"
        ],
        [
            "Infix \"++\" := Padd.",
            "VernacInfix",
            "3f41192c1be69d6640da47eadd6abaf67dcd555f"
        ],
        [
            "Fixpoint Psub (P P': Pol) {struct P'} : Pol := match P' with | Pc c' => PsubC P c' | Pinj j' Q' => PsubI Psub Q' j' P | PX P' i' Q' => match P with | Pc c => PX (--P') i' (PaddC (--Q') c) | Pinj j Q => match j with | xH => PX (--P') i' (Psub Q Q') | xO j => PX (--P') i' (Psub (Pinj (Pos.pred_double j) Q) Q') | xI j => PX (--P') i' (Psub (Pinj (xO j) Q) Q') end | PX P i Q => match Z.pos_sub i i' with | Zpos k => mkPX (Psub (PX P k P0) P') i' (Psub Q Q') | Z0 => mkPX (Psub P P') i (Psub Q Q') | Zneg k => mkPX (PsubX Psub P' k P) i (Psub Q Q') end end end.",
            "VernacFixpoint",
            "1bd8963f4b1443c57287933635b07636e631843c"
        ],
        [
            "Infix \"--\" := Psub.",
            "VernacInfix",
            "70a5def6437f293760966cd1d1d6e367a1bd076b"
        ],
        [
            "Fixpoint PmulC_aux (P:Pol) (c:C) : Pol := match P with | Pc c' => Pc (c' *! c) | Pinj j Q => mkPinj j (PmulC_aux Q c) | PX P i Q => mkPX (PmulC_aux P c) i (PmulC_aux Q c) end.",
            "VernacFixpoint",
            "68c22f5329b861126b5f3061be7b20ecfef6cfc9"
        ],
        [
            "Definition PmulC P c := if c ?=! cO then P0 else if c ?=! cI then P else PmulC_aux P c.",
            "VernacDefinition",
            "68c5af9d1613a43a3ad498de01d2e27a3779f3d4"
        ],
        [
            "Section PmulI.",
            "VernacBeginSection",
            "e7b0bf787d591ebf28a2e67db2a53934ef54e210"
        ],
        [
            "Variable Pmul : Pol -> Pol -> Pol.",
            "VernacAssumption",
            "7c8fb0c8cdc86ad6c47102ffce223a6a59a15ae2"
        ],
        [
            "Variable Q : Pol.",
            "VernacAssumption",
            "1c4c0440519573901fc8306f4111d28b2b02b26c"
        ],
        [
            "Fixpoint PmulI (j:positive) (P:Pol) : Pol := match P with | Pc c => mkPinj j (PmulC Q c) | Pinj j' Q' => match Z.pos_sub j' j with | Zpos k => mkPinj j (Pmul (Pinj k Q') Q) | Z0 => mkPinj j (Pmul Q' Q) | Zneg k => mkPinj j' (PmulI k Q') end | PX P' i' Q' => match j with | xH => mkPX (PmulI xH P') i' (Pmul Q' Q) | xO j' => mkPX (PmulI j P') i' (PmulI (Pos.pred_double j') Q') | xI j' => mkPX (PmulI j P') i' (PmulI (xO j') Q') end end.",
            "VernacFixpoint",
            "cd6f072692f73f39e892ff0629dc5d2490c0610c"
        ],
        [
            "End PmulI.",
            "VernacEndSegment",
            "3b70dae730a56f75c5272d6bccd3ace4324b8e62"
        ],
        [
            "Fixpoint Pmul (P P'' : Pol) {struct P''} : Pol := match P'' with | Pc c => PmulC P c | Pinj j' Q' => PmulI Pmul Q' j' P | PX P' i' Q' => match P with | Pc c => PmulC P'' c | Pinj j Q => let QQ' := match j with | xH => Pmul Q Q' | xO j => Pmul (Pinj (Pos.pred_double j) Q) Q' | xI j => Pmul (Pinj (xO j) Q) Q' end in mkPX (Pmul P P') i' QQ' | PX P i Q=> let QQ' := Pmul Q Q' in let PQ' := PmulI Pmul Q' xH P in let QP' := Pmul (mkPinj xH Q) P' in let PP' := Pmul P P' in (mkPX (mkPX PP' i P0 ++ QP') i' P0) ++ mkPX PQ' i QQ' end end.",
            "VernacFixpoint",
            "1b1a4d5eda5d30905b743ee5f6ed9cbc3f553c91"
        ],
        [
            "Infix \"**\" := Pmul.",
            "VernacInfix",
            "6f738c6a0e68ba33d010025d73c67b51e43e3e80"
        ],
        [
            "Inductive Mon: Set := | mon0: Mon | zmon: positive -> Mon -> Mon | vmon: positive -> Mon -> Mon.",
            "VernacInductive",
            "3e506d4cc6ecd0817a01b079efccd86cdad35dc1"
        ],
        [
            "Definition mkZmon j M := match M with mon0 => mon0 | _ => zmon j M end.",
            "VernacDefinition",
            "7db45d3bf5322a8390f6447d598835c46145304a"
        ],
        [
            "Definition zmon_pred j M := match j with xH => M | _ => mkZmon (Pos.pred j) M end.",
            "VernacDefinition",
            "7db5aec0b41d5098b4424bdac4023307a00745a6"
        ],
        [
            "Definition mkVmon i M := match M with | mon0 => vmon i mon0 | zmon j m => vmon i (zmon_pred j m) | vmon i' m => vmon (i+i') m end.",
            "VernacDefinition",
            "1ecd25d6a2bc55e14cd69018f0c049939f07d028"
        ],
        [
            "Fixpoint CFactor (P: Pol) (c: C) {struct P}: Pol * Pol := match P with | Pc c1 => let (q,r) := cdiv c1 c in (Pc r, Pc q) | Pinj j1 P1 => let (R,S) := CFactor P1 c in (mkPinj j1 R, mkPinj j1 S) | PX P1 i Q1 => let (R1, S1) := CFactor P1 c in let (R2, S2) := CFactor Q1 c in (mkPX R1 i R2, mkPX S1 i S2) end.",
            "VernacFixpoint",
            "8c1e22fc572b2f0e2a337733a4008714ce7a8766"
        ],
        [
            "Fixpoint MFactor (P: Pol) (c: C) (M: Mon) {struct P}: Pol * Pol := match P, M with _, mon0 => if (ceqb c cI) then (Pc cO, P) else CFactor P c | Pc _, _ => (P, Pc cO) | Pinj j1 P1, zmon j2 M1 => match j1 ?= j2 with Eq => let (R,S) := MFactor P1 c M1 in (mkPinj j1 R, mkPinj j1 S) | Lt => let (R,S) := MFactor P1 c (zmon (j2 - j1) M1) in (mkPinj j1 R, mkPinj j1 S) | Gt => (P, Pc cO) end | Pinj _ _, vmon _ _ => (P, Pc cO) | PX P1 i Q1, zmon j M1 => let M2 := zmon_pred j M1 in let (R1, S1) := MFactor P1 c M in let (R2, S2) := MFactor Q1 c M2 in (mkPX R1 i R2, mkPX S1 i S2) | PX P1 i Q1, vmon j M1 => match i ?= j with Eq => let (R1,S1) := MFactor P1 c (mkZmon xH M1) in (mkPX R1 i Q1, S1) | Lt => let (R1,S1) := MFactor P1 c (vmon (j - i) M1) in (mkPX R1 i Q1, S1) | Gt => let (R1,S1) := MFactor P1 c (mkZmon xH M1) in (mkPX R1 i Q1, mkPX S1 (i-j) (Pc cO)) end end.",
            "VernacFixpoint",
            "8cbb2aed173ac0c4e0fbf2440fcf1b9f3bdfdc3c"
        ],
        [
            "Definition POneSubst (P1: Pol) (cM1: C * Mon) (P2: Pol): option Pol := let (c,M1) := cM1 in let (Q1,R1) := MFactor P1 c M1 in match R1 with (Pc c) => if c ?=! cO then None else Some (Padd Q1 (Pmul P2 R1)) | _ => Some (Padd Q1 (Pmul P2 R1)) end.",
            "VernacDefinition",
            "1ab6c59557335684bc196d9087df7e0dc4c4e84e"
        ],
        [
            "Fixpoint PNSubst1 (P1: Pol) (cM1: C * Mon) (P2: Pol) (n: nat) : Pol := match POneSubst P1 cM1 P2 with Some P3 => match n with S n1 => PNSubst1 P3 cM1 P2 n1 | _ => P3 end | _ => P1 end.",
            "VernacFixpoint",
            "b7117775cb61a2a0a7c4aa372628bcc6a3aa2977"
        ],
        [
            "Definition PNSubst (P1: Pol) (cM1: C * Mon) (P2: Pol) (n: nat): option Pol := match POneSubst P1 cM1 P2 with Some P3 => match n with S n1 => Some (PNSubst1 P3 cM1 P2 n1) | _ => None end | _ => None end.",
            "VernacDefinition",
            "4d879da46279238a0248bbf89123165388420cd7"
        ],
        [
            "Fixpoint PSubstL1 (P1: Pol) (LM1: list ((C * Mon) * Pol)) (n: nat) : Pol := match LM1 with cons (M1,P2) LM2 => PSubstL1 (PNSubst1 P1 M1 P2 n) LM2 n | _ => P1 end.",
            "VernacFixpoint",
            "a87cc51d30f3b6fa802abb8e2773b5f137bb3ad1"
        ],
        [
            "Fixpoint PSubstL (P1: Pol) (LM1: list ((C * Mon) * Pol)) (n: nat) : option Pol := match LM1 with cons (M1,P2) LM2 => match PNSubst P1 M1 P2 n with Some P3 => Some (PSubstL1 P3 LM2 n) | None => PSubstL P1 LM2 n end | _ => None end.",
            "VernacFixpoint",
            "d20f4c69bb27866f6bc237c489eee958e5151b84"
        ],
        [
            "Fixpoint PNSubstL (P1: Pol) (LM1: list ((C * Mon) * Pol)) (m n: nat) : Pol := match PSubstL P1 LM1 n with Some P3 => match m with S m1 => PNSubstL P3 LM1 m1 n | _ => P3 end | _ => P1 end.",
            "VernacFixpoint",
            "4b0610b8eb42d92f27b69162b64fe73d73b16306"
        ],
        [
            "Local Notation hd := (List.hd 0).",
            "VernacSyntacticDefinition",
            "61f9e1d97fc33bd6d82b5f96ef1e00f61aea3f69"
        ],
        [
            "Fixpoint Pphi(l:list R) (P:Pol) : R := match P with | Pc c => [c] | Pinj j Q => Pphi (jump j l) Q | PX P i Q => Pphi l P * (hd l) ^ i + Pphi (tail l) Q end.",
            "VernacFixpoint",
            "8c1a16396bea34180a17aa37baee89050e430f16"
        ],
        [
            "Reserved Notation \"P @ l \" (at level 10, no associativity).",
            "VernacSyntaxExtension",
            "3180af85e2588a2d00705481916fa6d21c057549"
        ],
        [
            "Notation \"P @ l \" := (Pphi l P).",
            "VernacNotation",
            "40744ce52d2d6b0a77b2f615a89ca2100843c62d"
        ],
        [
            "Definition Pequiv (P Q : Pol) := forall l, P@l == Q@l.",
            "VernacDefinition",
            "304dc0235b3e2628625775ace152d35adc9908e0"
        ],
        [
            "Infix \"===\" := Pequiv (at level 70, no associativity).",
            "VernacInfix",
            "cec70fc6bfc28457bc31574c148f91cdfe763c9c"
        ],
        [
            "Instance Pequiv_eq : Equivalence Pequiv.",
            "VernacInstance",
            "702ef23af4794afe3669f6756fe8200dcaeabf25"
        ],
        [
            "unfold Pequiv; split; red; intros; [reflexivity|now symmetry|now etransitivity].",
            "VernacExtend",
            "995147b9f82aaa9ce358def84af575b9fb9a97d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Pphi_ext : Proper (eq ==> Pequiv ==> req) Pphi.",
            "VernacInstance",
            "317e02251524bf0997032aa59775037d4ce5e94d"
        ],
        [
            "now intros l l' <- P Q H.",
            "VernacExtend",
            "ca3a5debbaa8039239fb6a5e913e9b3ebc3f8164"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Pinj_ext : Proper (eq ==> Pequiv ==> Pequiv) Pinj.",
            "VernacInstance",
            "97a0a6e1e83631cb98062acecc7b8c687366f84f"
        ],
        [
            "intros i j <- P P' HP l.",
            "VernacExtend",
            "67fd3589d91993bf9095a87f882c9b1adaf63169"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite HP.",
            "VernacExtend",
            "53715b3510b4dea49596931652bfdaf83332e566"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance PX_ext : Proper (Pequiv ==> eq ==> Pequiv ==> Pequiv) PX.",
            "VernacInstance",
            "8ac79210fc94ee22c0592d6d406756d4b2d1bd5d"
        ],
        [
            "intros P P' HP p p' <- Q Q' HQ l.",
            "VernacExtend",
            "f11f148df143dfe519bdd86086a733a4fbc4f855"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite HP, HQ.",
            "VernacExtend",
            "7a01d9441cf22253971559ea33d3744b4f2f7b27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint Mphi(l:list R) (M: Mon) : R := match M with | mon0 => rI | zmon j M1 => Mphi (jump j l) M1 | vmon i M1 => Mphi (tail l) M1 * (hd l) ^ i end.",
            "VernacFixpoint",
            "e1b51178c0386dd75e5cfb414060499ed82f10b2"
        ],
        [
            "Notation \"M @@ l\" := (Mphi l M) (at level 10, no associativity).",
            "VernacNotation",
            "ea828d297bdf0ddbb3cd94c8fe3dc4c7b5705374"
        ],
        [
            "Ltac destr_pos_sub := match goal with |- context [Z.pos_sub ?x ?y] => generalize (Z.pos_sub_discr x y); destruct (Z.pos_sub x y) end.",
            "VernacExtend",
            "d4270b6a1382481fef45480156cef04b288b8446"
        ],
        [
            "Lemma jump_add' i j (l:list R) : jump (i + j) l = jump j (jump i l).",
            "VernacStartTheoremProof",
            "e331b5d89af244cacda6b0eb79014dbcb99263b1"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "apply jump_add.",
            "VernacExtend",
            "e6c7f11585359ff20873da840f7fdfe8330ce786"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Peq_ok P P' : (P ?== P') = true -> P === P'.",
            "VernacStartTheoremProof",
            "5375b55af1329113f2cad3f5a0426c1aa1a4b74b"
        ],
        [
            "unfold Pequiv.",
            "VernacExtend",
            "34151d48193bcb1ecacc467874ae9811b1036b79"
        ],
        [
            "revert P';induction P;destruct P';simpl; intros H l; try easy.",
            "VernacExtend",
            "1d17b2e0269deb3df33a48508df2497189e4e22e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply (morph_eq CRmorph).",
            "VernacExtend",
            "20bf7ff4be8748d9507ab9033852df5e13505008"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Pos.compare_spec p p0); [ subst | easy | easy ].",
            "VernacExtend",
            "50218825d3db4c1e39554a662b4a51ccc77bb88c"
        ],
        [
            "now rewrite IHP.",
            "VernacExtend",
            "ce21b69c9379c8bb9858da85ebfb29abf202fb42"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (IHP1 P'1); specialize (IHP2 P'2).",
            "VernacExtend",
            "2aee4d87def2e12972b9fedde82229b4dd03f4d7"
        ],
        [
            "destruct (Pos.compare_spec p p0); [ subst | easy | easy ].",
            "VernacExtend",
            "50218825d3db4c1e39554a662b4a51ccc77bb88c"
        ],
        [
            "destruct (P2 ?== P'1); [|easy].",
            "VernacExtend",
            "f2ab905fef3b3db976d09107c91fd6b354f3741f"
        ],
        [
            "rewrite H in *.",
            "VernacExtend",
            "288b227b15ae46c36597274ad2b93384514b82ec"
        ],
        [
            "now rewrite IHP1, IHP2.",
            "VernacExtend",
            "6bba97dafbd15290691705e33ba6585ece8d6df2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Peq_spec P P' : BoolSpec (P === P') True (P ?== P').",
            "VernacStartTheoremProof",
            "f78f085b28f6b45b5b3f4494f30a896c1ba83bbc"
        ],
        [
            "generalize (Peq_ok P P').",
            "VernacExtend",
            "191308d84d0be93d7af8dccffaf3a36287900a00"
        ],
        [
            "destruct (P ?== P'); auto.",
            "VernacExtend",
            "efa31a54816b0d91802fdc9984f8ae6ddf94547f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pphi0 l : P0@l == 0.",
            "VernacStartTheoremProof",
            "51cb894393b73f32f9ad9a4cffa2d7e426733619"
        ],
        [
            "simpl;apply (morph0 CRmorph).",
            "VernacExtend",
            "7be9d38d06497ac95ad270ec155587e70804a973"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pphi1 l : P1@l == 1.",
            "VernacStartTheoremProof",
            "0ff74baece8d9b29bebcd617961e83b19e9bd49f"
        ],
        [
            "simpl;apply (morph1 CRmorph).",
            "VernacExtend",
            "246b60ff2077b0d8136fef9cf93e2d6e5ac92cc2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkPinj_ok j l P : (mkPinj j P)@l == P@(jump j l).",
            "VernacStartTheoremProof",
            "3f42f7b3c5d6579e0dea4fab8dcc8c59093a5e19"
        ],
        [
            "destruct P;simpl;rsimpl.",
            "VernacExtend",
            "b8beb72d741496e63076fe3a57c05b06d948046c"
        ],
        [
            "now rewrite jump_add'.",
            "VernacExtend",
            "d5a2e3b02f0b9dfc17297786109d5400bf3a1bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance mkPinj_ext : Proper (eq ==> Pequiv ==> Pequiv) mkPinj.",
            "VernacInstance",
            "c2b7c959934fac0a445b16f7fcce831eaa9187bb"
        ],
        [
            "intros i j <- P Q H l.",
            "VernacExtend",
            "f1ace3409381349de71a4cf79e878267050fea81"
        ],
        [
            "now rewrite !mkPinj_ok.",
            "VernacExtend",
            "a036cca1c0a2bd4d9c81957f942bd989639254ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_pos_add x i j : x^(j + i) == x^i * x^j.",
            "VernacStartTheoremProof",
            "fb5ffd8581c0ebaa9f64ea03d0948888595c4e68"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "apply (pow_pos_add Rsth Reqe.(Rmul_ext) ARth.(ARmul_assoc)).",
            "VernacExtend",
            "fa19e2ff7abfac0e9205f86af9464abac9bf1d10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ceqb_spec c c' : BoolSpec ([c] == [c']) True (c ?=! c').",
            "VernacStartTheoremProof",
            "91bb03ba3cf00ffe512a34f35008f0250bc186d3"
        ],
        [
            "generalize (morph_eq CRmorph c c').",
            "VernacExtend",
            "4c6f3f0bd54fc5909b0904c2cc1413ecf001eb3a"
        ],
        [
            "destruct (c ?=! c'); auto.",
            "VernacExtend",
            "7a1494cbfc29a808b2b74ee2ecf00a15a50fbaf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkPX_ok l P i Q : (mkPX P i Q)@l == P@l * (hd l)^i + Q@(tail l).",
            "VernacStartTheoremProof",
            "51b1753c00871067e40ade7d4649dd36d7943a7c"
        ],
        [
            "unfold mkPX.",
            "VernacExtend",
            "91cbd059eae9cac32ddaff33e10a87e5a55a33bc"
        ],
        [
            "destruct P.",
            "VernacExtend",
            "5b49412def545f38f2c7c88619b02391bea0772f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case ceqb_spec; intros H; simpl; try reflexivity.",
            "VernacExtend",
            "e114beef15afc3b20bd902b6b09092df6ba74bf6"
        ],
        [
            "rewrite H, (morph0 CRmorph), mkPinj_ok; rsimpl.",
            "VernacExtend",
            "6f48bfe190102a5889f323375d4a1899331d7f6e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case Peq_spec; intros H; simpl; try reflexivity.",
            "VernacExtend",
            "03a9cc3df2d129fbb74e3355aba0dd1081f53a57"
        ],
        [
            "rewrite H, Pphi0, Pos.add_comm, pow_pos_add; rsimpl.",
            "VernacExtend",
            "70be964b4b1ce0005a38375ba02e3506014eff7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance mkPX_ext : Proper (Pequiv ==> eq ==> Pequiv ==> Pequiv) mkPX.",
            "VernacInstance",
            "c7cfc9b647b6dab1595ed3978e444c5ce481287e"
        ],
        [
            "intros P P' HP i i' <- Q Q' HQ l.",
            "VernacExtend",
            "f3426c0dfdcddc7099f4b6aa9e490f4b30551b08"
        ],
        [
            "now rewrite !mkPX_ok, HP, HQ.",
            "VernacExtend",
            "9188577444203be73d53b10afdb448bfbad8eb89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite Pphi0 Pphi1 mkPinj_ok mkPX_ok (morph0 CRmorph) (morph1 CRmorph) (morph0 CRmorph) (morph_add CRmorph) (morph_mul CRmorph) (morph_sub CRmorph) (morph_opp CRmorph) : Esimpl.",
            "VernacExtend",
            "f35ccd4cc9d220b32186eb0c558952d698b857ce"
        ],
        [
            "Ltac Esimpl := try rewrite_db Esimpl; rsimpl; simpl.",
            "VernacExtend",
            "09486b43e08c48a37c3da87e1d1bc97af6d5f0d8"
        ],
        [
            "Lemma PaddC_ok c P l : (PaddC P c)@l == P@l + [c].",
            "VernacStartTheoremProof",
            "3af74ba70e4a1e19734d9947b5ab6846b87fcf42"
        ],
        [
            "revert l;induction P;simpl;intros;Esimpl;trivial.",
            "VernacExtend",
            "7510d3234b2344ab1b62a2140ddef11d99e39c57"
        ],
        [
            "rewrite IHP2;rsimpl.",
            "VernacExtend",
            "96e8b0027de49fbe48b227683b95f8f7ff61b884"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PsubC_ok c P l : (PsubC P c)@l == P@l - [c].",
            "VernacStartTheoremProof",
            "23d7917bb5ae66dd6ebfe9dad86c1341fddffb1f"
        ],
        [
            "revert l;induction P;simpl;intros.",
            "VernacExtend",
            "5043154fed5ae0562e7636b9ca51eed0bc213a58"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHP;rsimpl.",
            "VernacExtend",
            "f979c39c87082db901a0fe9795b728520400807e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHP2;rsimpl.",
            "VernacExtend",
            "96e8b0027de49fbe48b227683b95f8f7ff61b884"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PmulC_aux_ok c P l : (PmulC_aux P c)@l == P@l * [c].",
            "VernacStartTheoremProof",
            "4b5e7de4ad0e92237b0630b63a9967ecca4b5c2e"
        ],
        [
            "revert l;induction P;simpl;intros;Esimpl;trivial.",
            "VernacExtend",
            "7510d3234b2344ab1b62a2140ddef11d99e39c57"
        ],
        [
            "rewrite IHP1, IHP2;rsimpl.",
            "VernacExtend",
            "a584cf30598b6bcef96afb3b1b5d90f71a6a5227"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PmulC_ok c P l : (PmulC P c)@l == P@l * [c].",
            "VernacStartTheoremProof",
            "c9adc2f2ac8260c8476224c6f03483367fc6ce44"
        ],
        [
            "unfold PmulC.",
            "VernacExtend",
            "ff5eafebc837b6563a3354b1ab6c8337dab6f43e"
        ],
        [
            "case ceqb_spec; intros H.",
            "VernacExtend",
            "828aea6e3091741efd87af4036ed2c6a866d0d7f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite H; Esimpl.",
            "VernacExtend",
            "7d4a2219a3779c92ed47794bf6271ca10c654853"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case ceqb_spec; intros H'.",
            "VernacExtend",
            "bdf67a3bc7393da1bda09acbbf3640692b460344"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H'; Esimpl.",
            "VernacExtend",
            "01bfac97295362f94895a651d884e4125af79cf0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply PmulC_aux_ok.",
            "VernacExtend",
            "857c4ab7409d7fbf49734719b889e1cb427cf4a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Popp_ok P l : (--P)@l == - P@l.",
            "VernacStartTheoremProof",
            "8e0887a9c390ad70e7412cdf42e20a44d84e2a97"
        ],
        [
            "revert l;induction P;simpl;intros.",
            "VernacExtend",
            "5043154fed5ae0562e7636b9ca51eed0bc213a58"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHP.",
            "VernacExtend",
            "d72420f9a61e1e30d255fde06413f3a9c3a6e58c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHP1, IHP2;rsimpl.",
            "VernacExtend",
            "a584cf30598b6bcef96afb3b1b5d90f71a6a5227"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite PaddC_ok PsubC_ok PmulC_ok Popp_ok : Esimpl.",
            "VernacExtend",
            "c3cc49bd956315d60b81338633767ada330968a5"
        ],
        [
            "Lemma PaddX_ok P' P k l : (forall P l, (P++P')@l == P@l + P'@l) -> (PaddX Padd P' k P) @ l == P@l + P'@l * (hd l)^k.",
            "VernacStartTheoremProof",
            "2628fda0dba0df4980cad29bbfadd6b3b7d3d9b5"
        ],
        [
            "intros IHP'.",
            "VernacExtend",
            "ebd21ab20d5df307780d5717218174725a90a6bb"
        ],
        [
            "revert k l.",
            "VernacExtend",
            "48a0932ce73e37b3ec4361d043879eb1a4463822"
        ],
        [
            "induction P;simpl;intros.",
            "VernacExtend",
            "eb3d96e671bc8a541b25cb683cfe18f303d022e3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct p; simpl; rewrite ?jump_pred_double; add_permut.",
            "VernacExtend",
            "94a647e0f16936c6bb5f3617b57df27eff5e757d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destr_pos_sub; intros ->; Esimpl.",
            "VernacExtend",
            "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite IHP';rsimpl.",
            "VernacExtend",
            "3fc1ca5b648784c1f5e9fe87160d1a611eb999db"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite IHP', pow_pos_add;simpl;Esimpl.",
            "VernacExtend",
            "c809df42624232f1847052c8b187839391091562"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite IHP1, pow_pos_add;rsimpl.",
            "VernacExtend",
            "72315497ae4904f444871c83753e5daa8c51e718"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Padd_ok P' P l : (P ++ P')@l == P@l + P'@l.",
            "VernacStartTheoremProof",
            "3b0b991d5a77e967e932c031534a52dde53a2942"
        ],
        [
            "revert P l; induction P';simpl;intros;Esimpl.",
            "VernacExtend",
            "ce3bbacbadd01e981a47efe63086a44987d5684d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "revert p l; induction P;simpl;intros.",
            "VernacExtend",
            "7ad6744f347c9e163c7f93396a9a4a9e251a2c47"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Esimpl; add_permut.",
            "VernacExtend",
            "00e40368915b9a7c491e6790dee8a406e2002f87"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destr_pos_sub; intros ->;Esimpl.",
            "VernacExtend",
            "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now rewrite IHP'.",
            "VernacExtend",
            "79049383e5a19af5b7d8941dd62fb12adeb52376"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP';Esimpl.",
            "VernacExtend",
            "deb6819f5e4f1923eba73e47e86ff966498df641"
        ],
        [
            "now rewrite jump_add'.",
            "VernacExtend",
            "d5a2e3b02f0b9dfc17297786109d5400bf3a1bb1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP.",
            "VernacExtend",
            "1638cf3a6249603db5f8acb07499d51856feef03"
        ],
        [
            "now rewrite jump_add'.",
            "VernacExtend",
            "d5a2e3b02f0b9dfc17297786109d5400bf3a1bb1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct p0;simpl.",
            "VernacExtend",
            "86995208b22cae25dbf379ce28a9e1eee58088b7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP2;simpl.",
            "VernacExtend",
            "2c5b9179677b11d2966b7266377c0e8ded91ac5f"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP2;simpl.",
            "VernacExtend",
            "2c5b9179677b11d2966b7266377c0e8ded91ac5f"
        ],
        [
            "rewrite jump_pred_double.",
            "VernacExtend",
            "b0a6cb05a718bc75c0534866a7cae56ec05208ee"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP'.",
            "VernacExtend",
            "ae7a573fe60d29bb345d1011a92dde9024267168"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct P;simpl.",
            "VernacExtend",
            "e3eaf0037ba4a07648c39ea1cdba9dd756f20677"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct p0;simpl;Esimpl; rewrite IHP'2; simpl.",
            "VernacExtend",
            "9e2436e23a00134d714686f051e545bc0f7d4139"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite jump_pred_double.",
            "VernacExtend",
            "b0a6cb05a718bc75c0534866a7cae56ec05208ee"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destr_pos_sub; intros ->; Esimpl.",
            "VernacExtend",
            "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP'1, IHP'2;rsimpl.",
            "VernacExtend",
            "3fdbed8e497b6623ddf134c92df9d84eef0ffa97"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite IHP'1, IHP'2;simpl;Esimpl.",
            "VernacExtend",
            "e736138e4d9506a570513443c8395b32ba417680"
        ],
        [
            "rewrite pow_pos_add;rsimpl.",
            "VernacExtend",
            "8311a7851edb6d88e59fe69988f2a065364e9c53"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite PaddX_ok by trivial; rsimpl.",
            "VernacExtend",
            "c4cb1586260ae379e95ef94eaf42748ace4229c1"
        ],
        [
            "rewrite IHP'2, pow_pos_add; rsimpl.",
            "VernacExtend",
            "06e3fd67a43bd9252fade8a01a2f195b4e40fdf0"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Psub_opp P' P : P -- P' === P ++ (--P').",
            "VernacStartTheoremProof",
            "96d576a8ff491be6c71a66bb960b334ad5466c1a"
        ],
        [
            "revert P; induction P'; simpl; intros.",
            "VernacExtend",
            "69c0e495413cc1fee819dfc2c4cafac420dab7f4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro l; Esimpl.",
            "VernacExtend",
            "94f7e98592a4c18ca19e5e2a3d8022eec17e3d41"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "revert p; induction P; simpl; intros; try reflexivity.",
            "VernacExtend",
            "6275f51c82198658e8603ed6857e9523c8a05c00"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destr_pos_sub; intros ->; now apply mkPinj_ext.",
            "VernacExtend",
            "18fe930e35de809c8ae21ac2a3a2529442f62837"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct p0; now apply PX_ext.",
            "VernacExtend",
            "e2ed19646af643aaf09b9279e3d4013e74e64dd2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct P; simpl; try reflexivity.",
            "VernacExtend",
            "6bec9674937f18890f284e2e530c2f8be25949f2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct p0; now apply PX_ext.",
            "VernacExtend",
            "e2ed19646af643aaf09b9279e3d4013e74e64dd2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destr_pos_sub; intros ->; apply mkPX_ext; auto.",
            "VernacExtend",
            "863b7c5b50b27632cc97efdcda76d37bd2452fcb"
        ],
        [
            "revert p1.",
            "VernacExtend",
            "71b14467193e60b4322308ce7d1aa5e56daf1690"
        ],
        [
            "induction P2; simpl; intros; try reflexivity.",
            "VernacExtend",
            "6e17a04f463ca48357f6b97f8ab4875c2d0313f1"
        ],
        [
            "destr_pos_sub; intros ->; now apply mkPX_ext.",
            "VernacExtend",
            "ff1d649325a6ea5b5503e01b023b14713453aaf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Psub_ok P' P l : (P -- P')@l == P@l - P'@l.",
            "VernacStartTheoremProof",
            "5bc16179bf348bfbe2c30163eda2b9dce8bb8fb2"
        ],
        [
            "rewrite Psub_opp, Padd_ok, Popp_ok.",
            "VernacExtend",
            "6435e2c46d49dc9846dbed06358e4dc930e0d0a4"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PmulI_ok P' : (forall P l, (Pmul P P') @ l == P @ l * P' @ l) -> forall P p l, (PmulI Pmul P' p P) @ l == P @ l * P' @ (jump p l).",
            "VernacStartTheoremProof",
            "67d2f36fb86147dd97b92b01211d7de14ca035b3"
        ],
        [
            "intros IHP'.",
            "VernacExtend",
            "ebd21ab20d5df307780d5717218174725a90a6bb"
        ],
        [
            "induction P;simpl;intros.",
            "VernacExtend",
            "eb3d96e671bc8a541b25cb683cfe18f303d022e3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "Esimpl; mul_permut.",
            "VernacExtend",
            "8dc5f2e5e8174b9b98939c27a3c899b90b0f3789"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destr_pos_sub; intros ->;Esimpl.",
            "VernacExtend",
            "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite IHP'.",
            "VernacExtend",
            "79049383e5a19af5b7d8941dd62fb12adeb52376"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite IHP', jump_add'.",
            "VernacExtend",
            "9df0b743a6041b40a2cfe809558a5f44c5c4fba1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite IHP, jump_add'.",
            "VernacExtend",
            "f310844a47dc6670433d8d2d7565894d687e1488"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct p0;Esimpl; rewrite ?IHP1, ?IHP2; rsimpl.",
            "VernacExtend",
            "df216b8cd140ac38ef184538dacbd50463a72366"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite jump_pred_double.",
            "VernacExtend",
            "b0a6cb05a718bc75c0534866a7cae56ec05208ee"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite IHP'.",
            "VernacExtend",
            "ae7a573fe60d29bb345d1011a92dde9024267168"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pmul_ok P P' l : (P**P')@l == P@l * P'@l.",
            "VernacStartTheoremProof",
            "34afc764251a20cc6dc4f2c5c25d7967ee6a97d1"
        ],
        [
            "revert P l;induction P';simpl;intros.",
            "VernacExtend",
            "08e294d2f35e70d349a512433adeac7b47663ac1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply PmulC_ok.",
            "VernacExtend",
            "1e4671d5fed021af34e5de50871f6dc3f9a2e26a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply PmulI_ok;trivial.",
            "VernacExtend",
            "2926f07da3621565ad20c085b8082908e94c33c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct P.",
            "VernacExtend",
            "5b49412def545f38f2c7c88619b02391bea0772f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (ARmul_comm ARth).",
            "VernacExtend",
            "e8b133f8f7873c85ffefb0eb4bfd48ce138a4c06"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "rewrite IHP'1; Esimpl.",
            "VernacExtend",
            "dd11c71d896aa46c2d71da049216f38de5149488"
        ],
        [
            "destruct p0;rewrite IHP'2;Esimpl.",
            "VernacExtend",
            "bd82c0d90392d7299d9828fb4cedf456b4e08663"
        ],
        [
            "rewrite jump_pred_double; Esimpl.",
            "VernacExtend",
            "ca67da862c0070fde8164818be8129340c0ebedb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Padd_ok, !mkPX_ok, Padd_ok, !mkPX_ok, !IHP'1, !IHP'2, PmulI_ok; trivial.",
            "VernacExtend",
            "b8e51362eea36ae46afcba296fdc7cfc2f58b628"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "add_permut; f_equiv; mul_permut.",
            "VernacExtend",
            "1807b2aae8239d7380436ee5c74bd6efc7a4179d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkZmon_ok M j l : (mkZmon j M) @@ l == (zmon j M) @@ l.",
            "VernacStartTheoremProof",
            "ec7491b5cef7f529a0fcec77d13dc5b06d783346"
        ],
        [
            "destruct M; simpl; rsimpl.",
            "VernacExtend",
            "f0af218641015a05e4a145651b40998f91adf19f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zmon_pred_ok M j l : (zmon_pred j M) @@ (tail l) == (zmon j M) @@ l.",
            "VernacStartTheoremProof",
            "eeda44634452814facee7fca157761faf4c17f85"
        ],
        [
            "destruct j; simpl; rewrite ?mkZmon_ok; simpl; rsimpl.",
            "VernacExtend",
            "c7c20adb5f870778fedfffb5bee49573545fe904"
        ],
        [
            "rewrite jump_pred_double; rsimpl.",
            "VernacExtend",
            "3781712bd135e20a2497343ba9360d72faac7533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkVmon_ok M i l : (mkVmon i M)@@l == M@@l * (hd l)^i.",
            "VernacStartTheoremProof",
            "4675d3821b69db5d860ac473a0cb17abc6f98d2d"
        ],
        [
            "destruct M;simpl;intros;rsimpl.",
            "VernacExtend",
            "848c18b5af650196ec93b1ce491950a4d266020e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite zmon_pred_ok;simpl;rsimpl.",
            "VernacExtend",
            "62eac9d327653a5e6c8c47f7f5e27678ef698f68"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite pow_pos_add;rsimpl.",
            "VernacExtend",
            "8311a7851edb6d88e59fe69988f2a065364e9c53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac destr_factor := match goal with | H : context [CFactor ?P _] |- context [CFactor ?P ?c] => destruct (CFactor P c); destr_factor; rewrite H; clear H | H : context [MFactor ?P _ _] |- context [MFactor ?P ?c ?M] => specialize (H M); destruct (MFactor P c M); destr_factor; rewrite H; clear H | _ => idtac end.",
            "VernacExtend",
            "8cc14af4d8e67e4f1a42dfe7c0671090a7564638"
        ],
        [
            "Lemma Mcphi_ok P c l : let (Q,R) := CFactor P c in P@l == Q@l + [c] * R@l.",
            "VernacStartTheoremProof",
            "7246351c8bfe45a51bd995c05908a208bfd99ffd"
        ],
        [
            "revert l.",
            "VernacExtend",
            "11a722880df1bc386870f9ce37f36e8be2871e9c"
        ],
        [
            "induction P as [c0 | j P IH | P1 IH1 i P2 IH2]; intros l; Esimpl.",
            "VernacExtend",
            "20ba0a633ea676d24f53c55f714bf04c0f678681"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H := div_th.(div_eucl_th) c0 c).",
            "VernacExtend",
            "f7af10d64efbb0d21411ca4dad5380ccc40355a1"
        ],
        [
            "destruct cdiv as (q,r).",
            "VernacExtend",
            "80ae667c7de231a8a8198fd6ed5834492b50c5cd"
        ],
        [
            "rewrite H; Esimpl.",
            "VernacExtend",
            "7d4a2219a3779c92ed47794bf6271ca10c654853"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destr_factor.",
            "VernacExtend",
            "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destr_factor.",
            "VernacExtend",
            "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Mphi_ok P (cM: C * Mon) l : let (c,M) := cM in let (Q,R) := MFactor P c M in P@l == Q@l + [c] * M@@l * R@l.",
            "VernacStartTheoremProof",
            "105229d396e0a700214025e73296aaca8cd189f2"
        ],
        [
            "destruct cM as (c,M).",
            "VernacExtend",
            "16d19c35aa367bacdf347640c3ecee1cac96b9dd"
        ],
        [
            "revert M l.",
            "VernacExtend",
            "724a6304c9f017fdf733c65b23dba15e6098c1d5"
        ],
        [
            "induction P; destruct M; intros l; simpl; auto; try (case ceqb_spec; intro He); try (case Pos.compare_spec; intros He); rewrite ?He; destr_factor; simpl; Esimpl.",
            "VernacExtend",
            "ada56228cacfcfab5b1e9d5ebd71bd3004432158"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H := div_th.(div_eucl_th) c0 c).",
            "VernacExtend",
            "f7af10d64efbb0d21411ca4dad5380ccc40355a1"
        ],
        [
            "destruct cdiv as (q,r).",
            "VernacExtend",
            "80ae667c7de231a8a8198fd6ed5834492b50c5cd"
        ],
        [
            "rewrite H; Esimpl.",
            "VernacExtend",
            "7d4a2219a3779c92ed47794bf6271ca10c654853"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H := Mcphi_ok P c).",
            "VernacExtend",
            "f05ee34aab2b2d150f5801dd9f0bc988872e358c"
        ],
        [
            "destr_factor.",
            "VernacExtend",
            "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <- jump_add, Pos.sub_add.",
            "VernacExtend",
            "ec57af91cc7aae53a4f6e7b9fc8c72743b7c61dc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H2 := Mcphi_ok P2 c).",
            "VernacExtend",
            "ff67f6f84d06420f272e3667624ab761938a03f0"
        ],
        [
            "assert (H3 := Mcphi_ok P3 c).",
            "VernacExtend",
            "39c23ebac1ffc04f363bbea4f945262f1c3f59cc"
        ],
        [
            "destr_factor.",
            "VernacExtend",
            "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite zmon_pred_ok.",
            "VernacExtend",
            "e4e3b202372bb14748b83ba65038f6406aca6c1f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite mkZmon_ok.",
            "VernacExtend",
            "de569533ba2752e1f1ea83b285a56d411583ac5c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "rewrite <- pow_pos_add, Pos.add_comm, Pos.sub_add by trivial; rsimpl.",
            "VernacExtend",
            "1d21098364f37a2eb86f18a4e519458c19a0584c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite mkZmon_ok.",
            "VernacExtend",
            "de569533ba2752e1f1ea83b285a56d411583ac5c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "rewrite <- pow_pos_add, Pos.sub_add by trivial; rsimpl.",
            "VernacExtend",
            "fe48a2170f9ea79567d3806263892248cc04b9bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma POneSubst_ok P1 cM1 P2 P3 l : POneSubst P1 cM1 P2 = Some P3 -> [fst cM1] * (snd cM1)@@l == P2@l -> P1@l == P3@l.",
            "VernacStartTheoremProof",
            "d650317c9dbb1d8cc16d1ee5d6c05d219a82454c"
        ],
        [
            "destruct cM1 as (cc,M1).",
            "VernacExtend",
            "5999322a1501fa3c9ff2a1e7f352bebeef743540"
        ],
        [
            "unfold POneSubst.",
            "VernacExtend",
            "da3586ee9469b77b5a4ac362d00abd0673fb378e"
        ],
        [
            "assert (H := Mphi_ok P1 (cc, M1) l).",
            "VernacExtend",
            "f82b6ba60b309a84c5e1b814e48e46d94c7ff504"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct MFactor as (R1,S1); simpl.",
            "VernacExtend",
            "77cefe04f33ab4c12db3d6858e37c89fc6a6503d"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "intros EQ EQ'.",
            "VernacExtend",
            "9c122b5efd06b21719e1fe1f7a09d2200d16212b"
        ],
        [
            "replace P3 with (R1 ++ P2 ** S1).",
            "VernacExtend",
            "bafae2ba2d5952312fea6f8ae6a9d5575c968f97"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite EQ', Padd_ok, Pmul_ok; rsimpl.",
            "VernacExtend",
            "b2ce594ea520f60803f204a40553768e71d60fee"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "revert EQ.",
            "VernacExtend",
            "b85dcdb451d344a659d52ee540f2be6a51ec991b"
        ],
        [
            "destruct S1; try now injection 1.",
            "VernacExtend",
            "216159c2c7a6c867ba09182139e6c9a5e94fd0f7"
        ],
        [
            "case ceqb_spec; now inversion 2.",
            "VernacExtend",
            "925541b80b22a436ddf25a634175ddce37becbc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PNSubst1_ok n P1 cM1 P2 l : [fst cM1] * (snd cM1)@@l == P2@l -> P1@l == (PNSubst1 P1 cM1 P2 n)@l.",
            "VernacStartTheoremProof",
            "fa3c3b3c624e04cd8f8496717161cc562ecc5a42"
        ],
        [
            "revert P1.",
            "VernacExtend",
            "a10707f1b21f9df573579fdac4f0742c51267e39"
        ],
        [
            "induction n; simpl; intros P1; generalize (POneSubst_ok P1 cM1 P2); destruct POneSubst; intros; rewrite <- ?IHn; auto; reflexivity.",
            "VernacExtend",
            "293972a1b719ac73993d939e0ffb214323182f1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PNSubst_ok n P1 cM1 P2 l P3 : PNSubst P1 cM1 P2 n = Some P3 -> [fst cM1] * (snd cM1)@@l == P2@l -> P1@l == P3@l.",
            "VernacStartTheoremProof",
            "babcb67efe62f45cba1ef1c891670a2d6f7c4589"
        ],
        [
            "unfold PNSubst.",
            "VernacExtend",
            "7273e0d26d4956e0f9392107de32f3884b39e055"
        ],
        [
            "assert (H := POneSubst_ok P1 cM1 P2); destruct POneSubst; try discriminate.",
            "VernacExtend",
            "8de2d04c515427fa7ec2657d4db2f0badeb17a9d"
        ],
        [
            "destruct n; inversion_clear 1.",
            "VernacExtend",
            "a8b11eae1544832bcbb4a3a58c0717d6c7b0bbb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- PNSubst1_ok; auto.",
            "VernacExtend",
            "a066205431cd26f8fbf886671d759239814fc83e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint MPcond (LM1: list (C * Mon * Pol)) (l: list R) : Prop := match LM1 with | (M1,P2) :: LM2 => ([fst M1] * (snd M1)@@l == P2@l) /\\ MPcond LM2 l | _ => True end.",
            "VernacFixpoint",
            "2460868933b5173ce9d0a9360651969d59901263"
        ],
        [
            "Lemma PSubstL1_ok n LM1 P1 l : MPcond LM1 l -> P1@l == (PSubstL1 P1 LM1 n)@l.",
            "VernacStartTheoremProof",
            "c66a807524353ef02e41103d155b40a9b05719a6"
        ],
        [
            "revert P1; induction LM1 as [|(M2,P2) LM2 IH]; simpl; intros.",
            "VernacExtend",
            "e57ac9de29d554bcab45e7ee7a2a6406ce90ceaa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- IH by intuition; now apply PNSubst1_ok.",
            "VernacExtend",
            "41a3cc95d94574b79c732e66c9859e022da3c631"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PSubstL_ok n LM1 P1 P2 l : PSubstL P1 LM1 n = Some P2 -> MPcond LM1 l -> P1@l == P2@l.",
            "VernacStartTheoremProof",
            "1e6d6d9b395e6addec00e5e113296ccbddf80434"
        ],
        [
            "revert P1.",
            "VernacExtend",
            "a10707f1b21f9df573579fdac4f0742c51267e39"
        ],
        [
            "induction LM1 as [|(M2,P2') LM2 IH]; simpl; intros.",
            "VernacExtend",
            "4f941a928c15fffa7b01507e82db21bde88d8d87"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H':=PNSubst_ok n P3 M2 P2').",
            "VernacExtend",
            "334cd2f9243bd09bab350d732e3d73814eb0a082"
        ],
        [
            "destruct PNSubst.",
            "VernacExtend",
            "1f19425586fa5c9e29d628986f9a28d277215f37"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "injection H as <-.",
            "VernacExtend",
            "ac20f3cdc891cd244c7fffa81bee3c656b4fe3e7"
        ],
        [
            "rewrite <- PSubstL1_ok; intuition.",
            "VernacExtend",
            "1438fec2c79ebb4b7e1bdddf6757649c1ce313bd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now apply IH.",
            "VernacExtend",
            "f55d33d07a7d04fb33e00d25db71d556dde4e829"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PNSubstL_ok m n LM1 P1 l : MPcond LM1 l -> P1@l == (PNSubstL P1 LM1 m n)@l.",
            "VernacStartTheoremProof",
            "628e435b7fc381775e0d2bb25d7cee22c511b8da"
        ],
        [
            "revert LM1 P1.",
            "VernacExtend",
            "5cef46722c3fd5ac7867b8d663fa7ed8f285478d"
        ],
        [
            "induction m; simpl; intros; assert (H' := PSubstL_ok n LM1 P2); destruct PSubstL; auto; try reflexivity.",
            "VernacExtend",
            "02d9931eb789c666b111a71ec64c6dda61a2cc65"
        ],
        [
            "rewrite <- IHm; auto.",
            "VernacExtend",
            "bcff403cbbb1866e30e71246f4652aeededd85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive PExpr : Type := | PEO : PExpr | PEI : PExpr | PEc : C -> PExpr | PEX : positive -> PExpr | PEadd : PExpr -> PExpr -> PExpr | PEsub : PExpr -> PExpr -> PExpr | PEmul : PExpr -> PExpr -> PExpr | PEopp : PExpr -> PExpr | PEpow : PExpr -> N -> PExpr.",
            "VernacInductive",
            "2f1c0e031738d64bd23d8845145b3ede26629150"
        ],
        [
            "Definition mk_X j := mkPinj_pred j mkX.",
            "VernacDefinition",
            "a7ee153ea9bd83e8c69c6af77eede921b099b22e"
        ],
        [
            "Fixpoint PEeval (l:list R) (pe:PExpr) {struct pe} : R := match pe with | PEO => rO | PEI => rI | PEc c => phi c | PEX j => nth 0 j l | PEadd pe1 pe2 => (PEeval l pe1) + (PEeval l pe2) | PEsub pe1 pe2 => (PEeval l pe1) - (PEeval l pe2) | PEmul pe1 pe2 => (PEeval l pe1) * (PEeval l pe2) | PEopp pe1 => - (PEeval l pe1) | PEpow pe1 n => rpow (PEeval l pe1) (Cp_phi n) end.",
            "VernacFixpoint",
            "93fc4265a87b22989cfd8502b1544e13beb0acaa"
        ],
        [
            "Strategy expand [PEeval].",
            "VernacSetStrategy",
            "3cce58f3440708318abf6bdd34046f306ea1403c"
        ],
        [
            "Lemma mkX_ok p l : nth 0 p l == (mk_X p) @ l.",
            "VernacStartTheoremProof",
            "5cf6f6973eedbee1a6fcb1aab5a02656e17594ef"
        ],
        [
            "destruct p;simpl;intros;Esimpl;trivial.",
            "VernacExtend",
            "e43ec3f82059885e1d40fc4d8333f58cb62401ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <-jump_tl, nth_jump.",
            "VernacExtend",
            "fed1ea08048ca45c3880f51b1f71a6cf8959d3e0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <- nth_jump, nth_pred_double.",
            "VernacExtend",
            "2e03df39497efd467e93aa4ba983afc7dadc7b50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite Padd_ok Psub_ok : Esimpl.",
            "VernacExtend",
            "50cc92d64057e94fc2ebf76923d6da1d12fa7c2e"
        ],
        [
            "Section POWER.",
            "VernacBeginSection",
            "4cbff9f31bc6c48f94b2b047e6336188b9621dbd"
        ],
        [
            "Variable subst_l : Pol -> Pol.",
            "VernacAssumption",
            "f3d66cd50470424c4356ca265173e0b867d7e349"
        ],
        [
            "Fixpoint Ppow_pos (res P:Pol) (p:positive) : Pol := match p with | xH => subst_l (res ** P) | xO p => Ppow_pos (Ppow_pos res P p) P p | xI p => subst_l ((Ppow_pos (Ppow_pos res P p) P p) ** P) end.",
            "VernacFixpoint",
            "b11a651061994c9e8117dba25b9b8732cac6ed57"
        ],
        [
            "Definition Ppow_N P n := match n with | N0 => P1 | Npos p => Ppow_pos P1 P p end.",
            "VernacDefinition",
            "dba3ff707bbccc23f0d024b56ed9da7347e4979e"
        ],
        [
            "Lemma Ppow_pos_ok l : (forall P, subst_l P@l == P@l) -> forall res P p, (Ppow_pos res P p)@l == res@l * (pow_pos Pmul P p)@l.",
            "VernacStartTheoremProof",
            "aeaba6a4c0e5bba6953d6c876312966c7992c6cf"
        ],
        [
            "intros subst_l_ok res P p.",
            "VernacExtend",
            "3544258929d012a40f99c7eb8b706b7bd7bfa547"
        ],
        [
            "revert res.",
            "VernacExtend",
            "c5e81dc16af60090b2800458f03b1611b33e4aff"
        ],
        [
            "induction p;simpl;intros; rewrite ?subst_l_ok, ?Pmul_ok, ?IHp; mul_permut.",
            "VernacExtend",
            "a5d12a751ec72a6a0454e3fa5fc57c2a403f7653"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ppow_N_ok l : (forall P, subst_l P@l == P@l) -> forall P n, (Ppow_N P n)@l == (pow_N P1 Pmul P n)@l.",
            "VernacStartTheoremProof",
            "e7730832cc7b6b939d836a624e70ac94b55278d5"
        ],
        [
            "destruct n;simpl.",
            "VernacExtend",
            "6554f156164019d92e1907ce49ab9159d733a0bb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Ppow_pos_ok by trivial.",
            "VernacExtend",
            "71343fc4a414dfaceb5ff31e38981adcc9a23dfb"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End POWER.",
            "VernacEndSegment",
            "c38c78c82b185eb23b32ef8f88c91de8dc389e4e"
        ],
        [
            "Section NORM_SUBST_REC.",
            "VernacBeginSection",
            "fddd3e76104c686cbd533b43e466995b4c193d93"
        ],
        [
            "Variable n : nat.",
            "VernacAssumption",
            "07bef83858f70772f30ae2a622ca53ce45548b68"
        ],
        [
            "Variable lmp:list (C*Mon*Pol).",
            "VernacAssumption",
            "eb7b5fdb6c80019f5e9751f61256eca4d64827ca"
        ],
        [
            "Let subst_l P := PNSubstL P lmp n n.",
            "VernacDefinition",
            "7058591ece3966945cc2d54159af281566762aa1"
        ],
        [
            "Let Pmul_subst P1 P2 := subst_l (P1 ** P2).",
            "VernacDefinition",
            "3545ffca4e05f26133903fecef16239ae7ef1489"
        ],
        [
            "Let Ppow_subst := Ppow_N subst_l.",
            "VernacDefinition",
            "55794c88450855155a49a343d4c710efb0b93134"
        ],
        [
            "Fixpoint norm_aux (pe:PExpr) : Pol := match pe with | PEO => Pc cO | PEI => Pc cI | PEc c => Pc c | PEX j => mk_X j | PEadd (PEopp pe1) pe2 => (norm_aux pe2) -- (norm_aux pe1) | PEadd pe1 (PEopp pe2) => (norm_aux pe1) -- (norm_aux pe2) | PEadd pe1 pe2 => (norm_aux pe1) ++ (norm_aux pe2) | PEsub pe1 pe2 => (norm_aux pe1) -- (norm_aux pe2) | PEmul pe1 pe2 => (norm_aux pe1) ** (norm_aux pe2) | PEopp pe1 => -- (norm_aux pe1) | PEpow pe1 n => Ppow_N (fun p => p) (norm_aux pe1) n end.",
            "VernacFixpoint",
            "84fe2b724f794e7e297b21fe0f8ec87f21ddfd23"
        ],
        [
            "Definition norm_subst pe := subst_l (norm_aux pe).",
            "VernacDefinition",
            "c9d4e29acad546f5a598773d725e172dde822fba"
        ],
        [
            "Definition get_PEopp pe := match pe with | PEopp pe' => Some pe' | _ => None end.",
            "VernacDefinition",
            "e74fde158958da11e2de2c79f0b43dbbbf7e10c2"
        ],
        [
            "Lemma norm_aux_PEadd pe1 pe2 : norm_aux (PEadd pe1 pe2) = match get_PEopp pe1, get_PEopp pe2 with | Some pe1', _ => (norm_aux pe2) -- (norm_aux pe1') | None, Some pe2' => (norm_aux pe1) -- (norm_aux pe2') | None, None => (norm_aux pe1) ++ (norm_aux pe2) end.",
            "VernacStartTheoremProof",
            "8c7f55f9804359206f286c27c76f2b90029dfe0a"
        ],
        [
            "simpl (norm_aux (PEadd _ _)).",
            "VernacExtend",
            "a5b0348b53d536b8f2a3727aab6da2cade81672b"
        ],
        [
            "destruct pe1; [ | | | | | | | reflexivity | ]; destruct pe2; simpl get_PEopp; reflexivity.",
            "VernacExtend",
            "93d752b97025a6046cb4a7afd8f411e25d5d035f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_aux_PEopp pe : match get_PEopp pe with | Some pe' => norm_aux pe = -- (norm_aux pe') | None => True end.",
            "VernacStartTheoremProof",
            "3d85d7133d1379be9b3c83bf5b1480ed4474da93"
        ],
        [
            "now destruct pe.",
            "VernacExtend",
            "fef8a23471b3422941136693c0299f7abef56069"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments norm_aux !pe : simpl nomatch.",
            "VernacArguments",
            "8505cf744fb52be27300277345dbf27deea65de0"
        ],
        [
            "Lemma norm_aux_spec l pe : PEeval l pe == (norm_aux pe)@l.",
            "VernacStartTheoremProof",
            "bbf38e57592cbecab4d47ccc12362e037017acfb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction pe; cbn.",
            "VernacExtend",
            "4e53a7ad7a431193693b2dd0bb38641556aca768"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite (morph0 CRmorph).",
            "VernacExtend",
            "b10870fbf6c7e98c8af151d60691c029a41c507b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite (morph1 CRmorph).",
            "VernacExtend",
            "581d2c930f3162a66bf04b97f415d7a5afdaef0a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply mkX_ok.",
            "VernacExtend",
            "2e8ccdd2bc92d6f160f3d50dddafc2af099f293c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHpe1, IHpe2.",
            "VernacExtend",
            "66a00c80f532d74234ca10cf083e8fc85cb1e728"
        ],
        [
            "assert (H1 := norm_aux_PEopp pe1).",
            "VernacExtend",
            "3169053f6bfb11ad9ddd96e54a90b51fbd14ce9a"
        ],
        [
            "assert (H2 := norm_aux_PEopp pe2).",
            "VernacExtend",
            "d896e250a2e9a550b53009ca455cd13b8e7f4dbe"
        ],
        [
            "rewrite norm_aux_PEadd.",
            "VernacExtend",
            "5f0f6fd4fefe711906b52a546848d36dafaa7ee5"
        ],
        [
            "do 2 destruct get_PEopp; rewrite ?H1, ?H2; Esimpl; add_permut.",
            "VernacExtend",
            "3c9347b9f87859351f62740ace20e98e805758c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHpe1, IHpe2.",
            "VernacExtend",
            "66a00c80f532d74234ca10cf083e8fc85cb1e728"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHpe1, IHpe2.",
            "VernacExtend",
            "66a00c80f532d74234ca10cf083e8fc85cb1e728"
        ],
        [
            "now rewrite Pmul_ok.",
            "VernacExtend",
            "cf88e3b2f16253e0b942f90954910eed288bbad8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite IHpe.",
            "VernacExtend",
            "c6f48d4a049048dce2514f3b8fc2c886ee54fc3b"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Ppow_N_ok by reflexivity.",
            "VernacExtend",
            "5f5ff3ecac2ba03a3f0628c8931fa37d9c53d283"
        ],
        [
            "rewrite pow_th.(rpow_pow_N).",
            "VernacExtend",
            "bc3728236de400abbcf6f2d10595d7eeb912fa54"
        ],
        [
            "destruct n0; simpl; Esimpl.",
            "VernacExtend",
            "6234200a1dda96c2de1de00d1d4367d38ae0b4e0"
        ],
        [
            "induction p;simpl; now rewrite ?IHp, ?IHpe, ?Pms_ok, ?Pmul_ok.",
            "VernacExtend",
            "e9801f29e9c65befe1332aaba4a47a86e6c8839c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_subst_spec : forall l pe, MPcond lmp l -> PEeval l pe == (norm_subst pe)@l.",
            "VernacStartTheoremProof",
            "4ff934e96043c6348608c8ac167228012b1642e7"
        ],
        [
            "intros;unfold norm_subst.",
            "VernacExtend",
            "2615b06124cd473442df55084260997e43f8f6a9"
        ],
        [
            "unfold subst_l;rewrite <- PNSubstL_ok;trivial.",
            "VernacExtend",
            "39c5385aa3b0992af53efa2161fe01652a25e0fb"
        ],
        [
            "apply norm_aux_spec.",
            "VernacExtend",
            "0172bf20e66c4e62e4b1bc01249f7f4b9ebaebe3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NORM_SUBST_REC.",
            "VernacEndSegment",
            "49a3213fd5ad1fe4bce951607d244ea2c4051810"
        ],
        [
            "Fixpoint interp_PElist (l:list R) (lpe:list (PExpr*PExpr)) {struct lpe} : Prop := match lpe with | nil => True | (me,pe)::lpe => match lpe with | nil => PEeval l me == PEeval l pe | _ => PEeval l me == PEeval l pe /\\ interp_PElist l lpe end end.",
            "VernacFixpoint",
            "3a3e115f7f6b6c549334b91493424dfd576186dc"
        ],
        [
            "Fixpoint mon_of_pol (P:Pol) : option (C * Mon) := match P with | Pc c => if (c ?=! cO) then None else Some (c, mon0) | Pinj j P => match mon_of_pol P with | None => None | Some (c,m) => Some (c, mkZmon j m) end | PX P i Q => if Peq Q P0 then match mon_of_pol P with | None => None | Some (c,m) => Some (c, mkVmon i m) end else None end.",
            "VernacFixpoint",
            "a048d1024d733b72cfaa60e76e619c169dea5466"
        ],
        [
            "Fixpoint mk_monpol_list (lpe:list (PExpr * PExpr)) : list (C*Mon*Pol) := match lpe with | nil => nil | (me,pe)::lpe => match mon_of_pol (norm_subst 0 nil me) with | None => mk_monpol_list lpe | Some m => (m,norm_subst 0 nil pe):: mk_monpol_list lpe end end.",
            "VernacFixpoint",
            "202138d8fbc98ab800472427c9e6f4d44ad16935"
        ],
        [
            "Lemma mon_of_pol_ok : forall P m, mon_of_pol P = Some m -> forall l, [fst m] * Mphi l (snd m) == P@l.",
            "VernacStartTheoremProof",
            "644d79440c825f36970487c9d424160732ba4894"
        ],
        [
            "induction P;simpl;intros;Esimpl.",
            "VernacExtend",
            "fe9a7792518e627c07e124c3834d8ae8302ac6a8"
        ],
        [
            "assert (H1 := (morph_eq CRmorph) c cO).",
            "VernacExtend",
            "9d8f399ddde2cd501cb066d5093f205d6a8b8fc2"
        ],
        [
            "destruct (c ?=! cO).",
            "VernacExtend",
            "f26061527178e2e1b864bd1f4b5998bdbfeab14b"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "inversion H;trivial;Esimpl.",
            "VernacExtend",
            "1a5c51debf55cbd52a838179051a674f25057fb0"
        ],
        [
            "generalize H;clear H;case_eq (mon_of_pol P).",
            "VernacExtend",
            "8cfbf0625e6edefb8f2db133718759e8f1c38952"
        ],
        [
            "intros (c1,P2) H0 H1; inversion H1; Esimpl.",
            "VernacExtend",
            "da3aadb2068c9aafdaf8aba85ec3b3a50505f386"
        ],
        [
            "generalize (IHP (c1, P2) H0 (jump p l)).",
            "VernacExtend",
            "f0919e8235491db7ded54b8410aed47dd058c6ba"
        ],
        [
            "rewrite mkZmon_ok;simpl;auto.",
            "VernacExtend",
            "38484eedc77bf918952554a9173d88528e256129"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "generalize H;clear H;change match P3 with | Pc c => c ?=! cO | Pinj _ _ => false | PX _ _ _ => false end with (P3 ?== P0).",
            "VernacExtend",
            "eefb4830d840b9d2617ce2e4c7ed10003e8c85a9"
        ],
        [
            "assert (H := Peq_ok P3 P0).",
            "VernacExtend",
            "455602ccedcea3584b2d2164097b018b9a86ce53"
        ],
        [
            "destruct (P3 ?== P0).",
            "VernacExtend",
            "c8295a6d680d8c0723c4e338363ce803a50e795b"
        ],
        [
            "case_eq (mon_of_pol P2);try intros (cc, pp); intros.",
            "VernacExtend",
            "6e2ce76eb8175aa0fd0d27efa6bb95f5db683099"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite mkVmon_ok;simpl.",
            "VernacExtend",
            "c5f998538889ebea025c300fe25cc8e66a71a5fd"
        ],
        [
            "rewrite H;trivial;Esimpl.",
            "VernacExtend",
            "42fe9986535b2b06374c8c1343d428fe5aa12e12"
        ],
        [
            "generalize (IHP1 _ H0); simpl; intros HH; rewrite HH; rsimpl.",
            "VernacExtend",
            "b3781091ffe430ef36a284c241e3ed9a557b9db9"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros;discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma interp_PElist_ok : forall l lpe, interp_PElist l lpe -> MPcond (mk_monpol_list lpe) l.",
            "VernacStartTheoremProof",
            "d0d27324448b4ccb2a86d9efe442d5651bf9cf54"
        ],
        [
            "induction lpe;simpl.",
            "VernacExtend",
            "b51ccc6609413b18e1c19460a4f28041b6c693ab"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct a;simpl;intros.",
            "VernacExtend",
            "4e49b6b3b5abaf277bf3b6da7299270661478196"
        ],
        [
            "assert (HH:=mon_of_pol_ok (norm_subst 0 nil p)); destruct (mon_of_pol (norm_subst 0 nil p)).",
            "VernacExtend",
            "8a4e1868b7fdb884f1873ad55e3190f02188241a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- norm_subst_spec by exact I.",
            "VernacExtend",
            "f9be5d51c83f671dea6f7cc791d1419f46f63d33"
        ],
        [
            "destruct lpe;try destruct H;rewrite <- H; rewrite (norm_subst_spec 0 nil); try exact I;apply HH;trivial.",
            "VernacExtend",
            "92382385db6301a8dbb682ac95b04b94dd143e11"
        ],
        [
            "apply IHlpe.",
            "VernacExtend",
            "e2b6058656b0df0987dd417cab275a351cbea08f"
        ],
        [
            "destruct lpe;simpl;trivial.",
            "VernacExtend",
            "af7bbb813942a2751021544979d22e28cd643e78"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "apply IHlpe.",
            "VernacExtend",
            "e2b6058656b0df0987dd417cab275a351cbea08f"
        ],
        [
            "destruct lpe;simpl;trivial.",
            "VernacExtend",
            "af7bbb813942a2751021544979d22e28cd643e78"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_subst_ok : forall n l lpe pe, interp_PElist l lpe -> PEeval l pe == (norm_subst n (mk_monpol_list lpe) pe)@l.",
            "VernacStartTheoremProof",
            "d1bcf43363afc81cc93c79b43e421e3e04d31bd5"
        ],
        [
            "intros;apply norm_subst_spec.",
            "VernacExtend",
            "d921c807cf7061ff864fffd19ea0cd8346384c46"
        ],
        [
            "apply interp_PElist_ok;trivial.",
            "VernacExtend",
            "38d753b0bb871e31b99eb56fb98a446036335f54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ring_correct : forall n l lpe pe1 pe2, interp_PElist l lpe -> (let lmp := mk_monpol_list lpe in norm_subst n lmp pe1 ?== norm_subst n lmp pe2) = true -> PEeval l pe1 == PEeval l pe2.",
            "VernacStartTheoremProof",
            "0b2da975620e85469cd50d7b3146c5602bdd5be4"
        ],
        [
            "simpl;intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "do 2 (rewrite (norm_subst_ok n l lpe);trivial).",
            "VernacExtend",
            "7788ff5ab3a3f44fad134dc832e7d0315188b498"
        ],
        [
            "apply Peq_ok;trivial.",
            "VernacExtend",
            "b066f815bd1293607c34d3434c2b4c5b6e636856"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable get_sign : C -> option C.",
            "VernacAssumption",
            "7585f1ec166275a1d7cc2b4ebe2f6179eb9375a9"
        ],
        [
            "Variable get_sign_spec : sign_theory copp ceqb get_sign.",
            "VernacAssumption",
            "65c4f01367a9709480905f5fc1e72fa1b1d62b71"
        ],
        [
            "Section EVALUATION.",
            "VernacBeginSection",
            "b35ee41d4849ab5c06850bdeed47743a4883f8e5"
        ],
        [
            "Variable mkpow : R -> positive -> R.",
            "VernacAssumption",
            "9369dfb56ccbdfe9908b7f3e80be8099d794c93c"
        ],
        [
            "Variable mkopp_pow : R -> positive -> R.",
            "VernacAssumption",
            "3a8c5400c2f65284a8f972467905631ef0b23d54"
        ],
        [
            "Variable mkmult_pow : R -> R -> positive -> R.",
            "VernacAssumption",
            "0867ca5f96d1f36b04c8a7695d0f2b4a7238d58b"
        ],
        [
            "Fixpoint mkmult_rec (r:R) (lm:list (R*positive)) {struct lm}: R := match lm with | nil => r | cons (x,p) t => mkmult_rec (mkmult_pow r x p) t end.",
            "VernacFixpoint",
            "209dd82e3bfeeb39bfd1fa85fe85d767ca838904"
        ],
        [
            "Definition mkmult1 lm := match lm with | nil => 1 | cons (x,p) t => mkmult_rec (mkpow x p) t end.",
            "VernacDefinition",
            "19cfd556f37152de6043018767516ee88b081cc7"
        ],
        [
            "Definition mkmultm1 lm := match lm with | nil => ropp rI | cons (x,p) t => mkmult_rec (mkopp_pow x p) t end.",
            "VernacDefinition",
            "0fa90642eb8593d4362c342c46c8e07ec99f1b76"
        ],
        [
            "Definition mkmult_c_pos c lm := if c ?=! cI then mkmult1 (rev' lm) else mkmult_rec [c] (rev' lm).",
            "VernacDefinition",
            "c47e05e2e4eb9741905266a2794b2d87449fd100"
        ],
        [
            "Definition mkmult_c c lm := match get_sign c with | None => mkmult_c_pos c lm | Some c' => if c' ?=! cI then mkmultm1 (rev' lm) else mkmult_rec [c] (rev' lm) end.",
            "VernacDefinition",
            "ac611f760b106b11a7dbf942fe4a0a92f20fd39a"
        ],
        [
            "Definition mkadd_mult rP c lm := match get_sign c with | None => rP + mkmult_c_pos c lm | Some c' => rP - mkmult_c_pos c' lm end.",
            "VernacDefinition",
            "996f3f073f3587045b88ec00926b45b0ac67399a"
        ],
        [
            "Definition add_pow_list (r:R) n l := match n with | N0 => l | Npos p => (r,p)::l end.",
            "VernacDefinition",
            "01b4116cb0a8ca16e20f807f710fb55d13019fd8"
        ],
        [
            "Fixpoint add_mult_dev (rP:R) (P:Pol) (fv:list R) (n:N) (lm:list (R*positive)) {struct P} : R := match P with | Pc c => let lm := add_pow_list (hd fv) n lm in mkadd_mult rP c lm | Pinj j Q => add_mult_dev rP Q (jump j fv) N0 (add_pow_list (hd fv) n lm) | PX P i Q => let rP := add_mult_dev rP P fv (N.add (Npos i) n) lm in if Q ?== P0 then rP else add_mult_dev rP Q (tail fv) N0 (add_pow_list (hd fv) n lm) end.",
            "VernacFixpoint",
            "4a0212b891215660f7cc49614fe48a7a91a632cc"
        ],
        [
            "Fixpoint mult_dev (P:Pol) (fv : list R) (n:N) (lm:list (R*positive)) {struct P} : R := match P with | Pc c => mkmult_c c (add_pow_list (hd fv) n lm) | Pinj j Q => mult_dev Q (jump j fv) N0 (add_pow_list (hd fv) n lm) | PX P i Q => let rP := mult_dev P fv (N.add (Npos i) n) lm in if Q ?== P0 then rP else let lmq := add_pow_list (hd fv) n lm in add_mult_dev rP Q (tail fv) N0 lmq end.",
            "VernacFixpoint",
            "c5c28bbda9276d1400b75008d6ef1c41f613d060"
        ],
        [
            "Definition Pphi_avoid fv P := mult_dev P fv N0 nil.",
            "VernacDefinition",
            "82bbe53e1b27dd56665a7e5ef98bcb37f4f8cbe9"
        ],
        [
            "Fixpoint r_list_pow (l:list (R*positive)) : R := match l with | nil => rI | cons (r,p) l => pow_pos rmul r p * r_list_pow l end.",
            "VernacFixpoint",
            "8f90733b6136fe86e39d0568178fce4079e6b97d"
        ],
        [
            "Hypothesis mkpow_spec : forall r p, mkpow r p == pow_pos rmul r p.",
            "VernacAssumption",
            "38b8d238ef967880f3c45f9c85445a1c0d85af7c"
        ],
        [
            "Hypothesis mkopp_pow_spec : forall r p, mkopp_pow r p == - (pow_pos rmul r p).",
            "VernacAssumption",
            "561e0b53e197415f6e4bd805ee26b7442bc80b18"
        ],
        [
            "Hypothesis mkmult_pow_spec : forall r x p, mkmult_pow r x p == r * pow_pos rmul x p.",
            "VernacAssumption",
            "2cb85b2ac116c1886d7fb126e3616a79023de8a5"
        ],
        [
            "Lemma mkmult_rec_ok : forall lm r, mkmult_rec r lm == r * r_list_pow lm.",
            "VernacStartTheoremProof",
            "5975e907ceab326401492ee2924208e6a5ae1157"
        ],
        [
            "induction lm;intros;simpl;Esimpl.",
            "VernacExtend",
            "dd8a182e99e0e667e6e7c27482f833d914d7f087"
        ],
        [
            "destruct a as (x,p);Esimpl.",
            "VernacExtend",
            "2b8db76015fd5d6a79d4d4007bd5626b3c4068b3"
        ],
        [
            "rewrite IHlm.",
            "VernacExtend",
            "de26c48a1ad4c4580932f9331b6edd1c6c0a18e8"
        ],
        [
            "rewrite mkmult_pow_spec.",
            "VernacExtend",
            "7342ca9edd3eaad9a43a7d705c2ea60cd7218a15"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkmult1_ok : forall lm, mkmult1 lm == r_list_pow lm.",
            "VernacStartTheoremProof",
            "6146e3d059f8591043166fd827f4ac971443c1ed"
        ],
        [
            "destruct lm;simpl;Esimpl.",
            "VernacExtend",
            "3cba48eb4630c447fe5ed55eba65eea7c9d7fd54"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "rewrite mkmult_rec_ok;rewrite mkpow_spec;Esimpl.",
            "VernacExtend",
            "9dccb8846b94d6c92a2c4a797ce95edcf24a765c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkmultm1_ok : forall lm, mkmultm1 lm == - r_list_pow lm.",
            "VernacStartTheoremProof",
            "b936fd0ab9bebf63f80578f56c8e8d6c99c7fd98"
        ],
        [
            "destruct lm;simpl;Esimpl.",
            "VernacExtend",
            "3cba48eb4630c447fe5ed55eba65eea7c9d7fd54"
        ],
        [
            "destruct p;rewrite mkmult_rec_ok.",
            "VernacExtend",
            "c952d99cdc8d20af055137b23d01726c758ae3d6"
        ],
        [
            "rewrite mkopp_pow_spec;Esimpl.",
            "VernacExtend",
            "ee97daf528c516a1ebf2fb0f82331b9b901fafaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r_list_pow_rev : forall l, r_list_pow (rev' l) == r_list_pow l.",
            "VernacStartTheoremProof",
            "d6d1c1afd2cb963d6a3876a2f4581539dfbf38e3"
        ],
        [
            "assert (forall l lr : list (R * positive), r_list_pow (rev_append l lr) == r_list_pow lr * r_list_pow l).",
            "VernacExtend",
            "458f8b46ac59b9493310601c7dbb6f80ad239726"
        ],
        [
            "induction l;intros;simpl;Esimpl.",
            "VernacExtend",
            "ba203a62946836c431ce007f50b18217e081f44e"
        ],
        [
            "destruct a;rewrite IHl;Esimpl.",
            "VernacExtend",
            "c3c011fe4a4f2c0abbadd9474b35199eeef0aac8"
        ],
        [
            "rewrite (ARmul_comm ARth (pow_pos rmul r p)).",
            "VernacExtend",
            "f5e46e0018d9f14b4e328b48e568b3f649d642e4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros;unfold rev'.",
            "VernacExtend",
            "153d45535a34a0dbad8d62953777fdb7742ed597"
        ],
        [
            "rewrite H;simpl;Esimpl.",
            "VernacExtend",
            "4b04cf9b15f7f1c024eedc177ee274ef8ab1ecfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkmult_c_pos_ok : forall c lm, mkmult_c_pos c lm == [c]* r_list_pow lm.",
            "VernacStartTheoremProof",
            "62737d271fc95f1ff9f44166f7d4692b57854e94"
        ],
        [
            "intros;unfold mkmult_c_pos;simpl.",
            "VernacExtend",
            "6add449f93aa11433a8c4ac4aa1923b3233da59c"
        ],
        [
            "assert (H := (morph_eq CRmorph) c cI).",
            "VernacExtend",
            "30d997e0774d0012b0b2de2402dcca232b3a551e"
        ],
        [
            "rewrite <- r_list_pow_rev; destruct (c ?=! cI).",
            "VernacExtend",
            "7b2f9e87000d24a959b88a504d03c2d0ce141594"
        ],
        [
            "rewrite H;trivial;Esimpl.",
            "VernacExtend",
            "42fe9986535b2b06374c8c1343d428fe5aa12e12"
        ],
        [
            "apply mkmult1_ok.",
            "VernacExtend",
            "4c189ed58fe8350962c2f26198db1d1986174944"
        ],
        [
            "apply mkmult_rec_ok.",
            "VernacExtend",
            "343c78decaf3e710cf76a6fa6d827775f6b6f111"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkmult_c_ok : forall c lm, mkmult_c c lm == [c] * r_list_pow lm.",
            "VernacStartTheoremProof",
            "d95c15f59a422741026f81c5341c4df4eead858c"
        ],
        [
            "intros;unfold mkmult_c;simpl.",
            "VernacExtend",
            "6aaa98a4129ac451ec038ffa82e30158ada8d486"
        ],
        [
            "case_eq (get_sign c);intros.",
            "VernacExtend",
            "0efdbfb9369f6f63c70aaef3cdcd46c62c7ac332"
        ],
        [
            "assert (H1 := (morph_eq CRmorph) c0 cI).",
            "VernacExtend",
            "1ab4ccad24e8f271db6e14550caf7ea0c59e57b4"
        ],
        [
            "destruct (c0 ?=! cI).",
            "VernacExtend",
            "eca6c3c50419a69a547e78a7715b643289657322"
        ],
        [
            "rewrite (CRmorph.(morph_eq) _ _ (get_sign_spec.(sign_spec) _ H)).",
            "VernacExtend",
            "073939041aa596d180479251e4391c29c513243c"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "rewrite H1;trivial.",
            "VernacExtend",
            "898e530e8e03fcfe5f774f6e2b5b2f67998e5e5a"
        ],
        [
            "rewrite <- r_list_pow_rev;trivial;Esimpl.",
            "VernacExtend",
            "b7a1b62e28953e528952ab2c354ae27a98dc2f68"
        ],
        [
            "apply mkmultm1_ok.",
            "VernacExtend",
            "03c1414b7f059e5544d2ef8ed8d0dbdbcbddd9af"
        ],
        [
            "rewrite <- r_list_pow_rev; apply mkmult_rec_ok.",
            "VernacExtend",
            "a682963bc79c1aaec6d0ac324939a0260551a65d"
        ],
        [
            "apply mkmult_c_pos_ok.",
            "VernacExtend",
            "73ac87a3be632968401c74f5de6f83a9b4a84874"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkadd_mult_ok : forall rP c lm, mkadd_mult rP c lm == rP + [c]*r_list_pow lm.",
            "VernacStartTheoremProof",
            "d5558008c7d00a9c215ec2500e41c04364b6fe8b"
        ],
        [
            "intros;unfold mkadd_mult.",
            "VernacExtend",
            "fadd0cb873c570c2e4fdb2b975b6654e2432dff3"
        ],
        [
            "case_eq (get_sign c);intros.",
            "VernacExtend",
            "0efdbfb9369f6f63c70aaef3cdcd46c62c7ac332"
        ],
        [
            "rewrite (CRmorph.(morph_eq) _ _ (get_sign_spec.(sign_spec) _ H));Esimpl.",
            "VernacExtend",
            "fc6c4c85893c6b07df41dc6794c6e3ac0a2fe98e"
        ],
        [
            "rewrite mkmult_c_pos_ok;Esimpl.",
            "VernacExtend",
            "1f5f3c308128e3e094d1d109fb2df4dd4f68368b"
        ],
        [
            "rewrite mkmult_c_pos_ok;Esimpl.",
            "VernacExtend",
            "1f5f3c308128e3e094d1d109fb2df4dd4f68368b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_pow_list_ok : forall r n l, r_list_pow (add_pow_list r n l) == pow_N rI rmul r n * r_list_pow l.",
            "VernacStartTheoremProof",
            "995616d90b6310287393f7a801fb82f9fb1f8a9d"
        ],
        [
            "destruct n;simpl;intros;Esimpl.",
            "VernacExtend",
            "92bd37291ad81c47746f98bac5b516a40fb306b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_mult_dev_ok : forall P rP fv n lm, add_mult_dev rP P fv n lm == rP + P@fv*pow_N rI rmul (hd fv) n * r_list_pow lm.",
            "VernacStartTheoremProof",
            "bb483fed9cda1e4e749f8e0aaf773c8a61fdb487"
        ],
        [
            "induction P;simpl;intros.",
            "VernacExtend",
            "eb3d96e671bc8a541b25cb683cfe18f303d022e3"
        ],
        [
            "rewrite mkadd_mult_ok.",
            "VernacExtend",
            "cd9318e733d07790029204b0df6cd2a0cfe0888e"
        ],
        [
            "rewrite add_pow_list_ok; Esimpl.",
            "VernacExtend",
            "a8aa2fc6dd1653bbe3e8bb422a6cfadde8153400"
        ],
        [
            "rewrite IHP.",
            "VernacExtend",
            "1638cf3a6249603db5f8acb07499d51856feef03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite add_pow_list_ok; Esimpl.",
            "VernacExtend",
            "a8aa2fc6dd1653bbe3e8bb422a6cfadde8153400"
        ],
        [
            "change (match P3 with | Pc c => c ?=! cO | Pinj _ _ => false | PX _ _ _ => false end) with (Peq P3 P0).",
            "VernacExtend",
            "d6ab542926d78a385182f7260a90fd6c7aad47dd"
        ],
        [
            "change match n with | N0 => Npos p | Npos q => Npos (p + q) end with (N.add (Npos p) n);trivial.",
            "VernacExtend",
            "28dfb2431891f4b0199916a36423a41dfb0567fd"
        ],
        [
            "assert (H := Peq_ok P3 P0).",
            "VernacExtend",
            "455602ccedcea3584b2d2164097b018b9a86ce53"
        ],
        [
            "destruct (P3 ?== P0).",
            "VernacExtend",
            "c8295a6d680d8c0723c4e338363ce803a50e795b"
        ],
        [
            "rewrite (H eq_refl).",
            "VernacExtend",
            "4e9fced0168a5a42b6a43e75684b3b1b14e510a7"
        ],
        [
            "rewrite IHP1.",
            "VernacExtend",
            "81eb48fc49e054dd2eb540895edf465850341b68"
        ],
        [
            "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
            "VernacExtend",
            "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "rewrite IHP2.",
            "VernacExtend",
            "04c2159f41eb438f3a7d02bb0ca8fccd14f284c2"
        ],
        [
            "rewrite IHP1.",
            "VernacExtend",
            "81eb48fc49e054dd2eb540895edf465850341b68"
        ],
        [
            "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
            "VernacExtend",
            "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
        ],
        [
            "add_permut.",
            "VernacExtend",
            "b1559625a96bb16d778bca64777f03ffc568eb3b"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_dev_ok : forall P fv n lm, mult_dev P fv n lm == P@fv * pow_N rI rmul (hd fv) n * r_list_pow lm.",
            "VernacStartTheoremProof",
            "c70119629cbb2d7f865919bec85c8cab112898b5"
        ],
        [
            "induction P;simpl;intros;Esimpl.",
            "VernacExtend",
            "fe9a7792518e627c07e124c3834d8ae8302ac6a8"
        ],
        [
            "rewrite mkmult_c_ok;rewrite add_pow_list_ok;Esimpl.",
            "VernacExtend",
            "2d2d37ff341ce831e1013db226910b04e63ea414"
        ],
        [
            "rewrite IHP.",
            "VernacExtend",
            "1638cf3a6249603db5f8acb07499d51856feef03"
        ],
        [
            "simpl;rewrite add_pow_list_ok;Esimpl.",
            "VernacExtend",
            "c5c9dc195d918e254f1270e4eff8aed528c03878"
        ],
        [
            "change (match P3 with | Pc c => c ?=! cO | Pinj _ _ => false | PX _ _ _ => false end) with (Peq P3 P0).",
            "VernacExtend",
            "d6ab542926d78a385182f7260a90fd6c7aad47dd"
        ],
        [
            "change match n with | N0 => Npos p | Npos q => Npos (p + q) end with (N.add (Npos p) n);trivial.",
            "VernacExtend",
            "28dfb2431891f4b0199916a36423a41dfb0567fd"
        ],
        [
            "assert (H := Peq_ok P3 P0).",
            "VernacExtend",
            "455602ccedcea3584b2d2164097b018b9a86ce53"
        ],
        [
            "destruct (P3 ?== P0).",
            "VernacExtend",
            "c8295a6d680d8c0723c4e338363ce803a50e795b"
        ],
        [
            "rewrite (H eq_refl).",
            "VernacExtend",
            "4e9fced0168a5a42b6a43e75684b3b1b14e510a7"
        ],
        [
            "rewrite IHP1.",
            "VernacExtend",
            "81eb48fc49e054dd2eb540895edf465850341b68"
        ],
        [
            "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
            "VernacExtend",
            "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
        ],
        [
            "mul_permut.",
            "VernacExtend",
            "9bbb27319030cca7a413e039a95634f318d8512a"
        ],
        [
            "rewrite add_mult_dev_ok.",
            "VernacExtend",
            "ac670fba3386e1717426ae9e753cd1b000acb138"
        ],
        [
            "rewrite IHP1; rewrite add_pow_list_ok.",
            "VernacExtend",
            "098bbdd90446d252f6dbea98d1e42b9c6d7ae65a"
        ],
        [
            "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
            "VernacExtend",
            "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
        ],
        [
            "add_permut; mul_permut.",
            "VernacExtend",
            "6dd978d982ae62474c75f69102c93be642c09474"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pphi_avoid_ok : forall P fv, Pphi_avoid fv P == P@fv.",
            "VernacStartTheoremProof",
            "0e0cd3ff891a9ac787e9347d2f9d9b7d5594307b"
        ],
        [
            "unfold Pphi_avoid;intros;rewrite mult_dev_ok;simpl;Esimpl.",
            "VernacExtend",
            "b57d3d0c97ca3f0b6150ce3e297eefcc76db252f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EVALUATION.",
            "VernacEndSegment",
            "fadb10ea5669091bfb2d251c77cd26777925fa4f"
        ],
        [
            "Definition Pphi_pow := let mkpow x p := match p with xH => x | _ => rpow x (Cp_phi (Npos p)) end in let mkopp_pow x p := ropp (mkpow x p) in let mkmult_pow r x p := rmul r (mkpow x p) in Pphi_avoid mkpow mkopp_pow mkmult_pow.",
            "VernacDefinition",
            "1ded2e6a478da4e7914245f601ad2d793b009f20"
        ],
        [
            "Lemma local_mkpow_ok r p : match p with | xI _ => rpow r (Cp_phi (Npos p)) | xO _ => rpow r (Cp_phi (Npos p)) | 1 => r end == pow_pos rmul r p.",
            "VernacStartTheoremProof",
            "ed101ef2fb6fe536e1d21de39eb825704dd26f73"
        ],
        [
            "destruct p; now rewrite ?pow_th.(rpow_pow_N).",
            "VernacExtend",
            "3d0e60eada15dbad3c69ee06086b22bdd3f197fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pphi_pow_ok : forall P fv, Pphi_pow fv P == P@fv.",
            "VernacStartTheoremProof",
            "bc77d1228783374850e50bcf4196b449927d97e4"
        ],
        [
            "unfold Pphi_pow;intros;apply Pphi_avoid_ok;intros; now rewrite ?local_mkpow_ok.",
            "VernacExtend",
            "477ef578a73c77dfcb63bb6bf80a5d12e09dd277"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ring_rw_pow_correct : forall n lH l, interp_PElist l lH -> forall lmp, mk_monpol_list lH = lmp -> forall pe npe, norm_subst n lmp pe = npe -> PEeval l pe == Pphi_pow l npe.",
            "VernacStartTheoremProof",
            "de8993b228a08fd3df2f4c65a58b917946bf1816"
        ],
        [
            "intros n lH l H1 lmp Heq1 pe npe Heq2.",
            "VernacExtend",
            "175c1de964262d223b3b1f0f7fbe5a8ef70a9cf1"
        ],
        [
            "rewrite Pphi_pow_ok, <- Heq2, <- Heq1.",
            "VernacExtend",
            "51395b10c6d805ea2f15375e9228f41186140058"
        ],
        [
            "apply norm_subst_ok.",
            "VernacExtend",
            "b1d53ccbb116be7215062e4394555bc7f36c1268"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint mkmult_pow (r x:R) (p: positive) {struct p} : R := match p with | xH => r*x | xO p => mkmult_pow (mkmult_pow r x p) x p | xI p => mkmult_pow (mkmult_pow (r*x) x p) x p end.",
            "VernacFixpoint",
            "80206f629c9867096ba7bd1e3d9d5d8b50c8801b"
        ],
        [
            "Definition mkpow x p := match p with | xH => x | xO p => mkmult_pow x x (Pos.pred_double p) | xI p => mkmult_pow x x (xO p) end.",
            "VernacDefinition",
            "174a31c163281b14dfa8b0356412bb1db6932814"
        ],
        [
            "Definition mkopp_pow x p := match p with | xH => -x | xO p => mkmult_pow (-x) x (Pos.pred_double p) | xI p => mkmult_pow (-x) x (xO p) end.",
            "VernacDefinition",
            "619eb1793afda7c1c6d15318a60f1f3ac4e2003d"
        ],
        [
            "Definition Pphi_dev := Pphi_avoid mkpow mkopp_pow mkmult_pow.",
            "VernacDefinition",
            "ee91a18ace6b50c5f75539e267ae21ad1e434cbf"
        ],
        [
            "Lemma mkmult_pow_ok p r x : mkmult_pow r x p == r * x^p.",
            "VernacStartTheoremProof",
            "1bbb07f7e38cfc140a76027ad33370207d1ff5c7"
        ],
        [
            "revert r; induction p;intros;simpl;Esimpl;rewrite !IHp;Esimpl.",
            "VernacExtend",
            "da99a6a9b9d4870269a413e326e8012ec8080afb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkpow_ok p x : mkpow x p == x^p.",
            "VernacStartTheoremProof",
            "2e3d2666dc3a8914e7eebbae44beb5f0dce03e33"
        ],
        [
            "destruct p;simpl;intros;Esimpl.",
            "VernacExtend",
            "731736a06eaecf4d2ee0196b8d1464e584b93e57"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !mkmult_pow_ok;Esimpl.",
            "VernacExtend",
            "768f7c66f1022770de47c4d02b6250eae239ff8d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite mkmult_pow_ok;Esimpl.",
            "VernacExtend",
            "6e9578474fbbcb016c9da285a0ef00201a48c3e4"
        ],
        [
            "change x with (x^1) at 1.",
            "VernacExtend",
            "ca7ae09174d4b57b31eeb1dda3e429b19098c46b"
        ],
        [
            "now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double.",
            "VernacExtend",
            "5adc68bdf47f8cc9b29698a4e2e1bdb053445d89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mkopp_pow_ok p x : mkopp_pow x p == - x^p.",
            "VernacStartTheoremProof",
            "d2f37344715bec4ccb139a2ee27322404b768d14"
        ],
        [
            "destruct p;simpl;intros;Esimpl.",
            "VernacExtend",
            "731736a06eaecf4d2ee0196b8d1464e584b93e57"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite !mkmult_pow_ok;Esimpl.",
            "VernacExtend",
            "768f7c66f1022770de47c4d02b6250eae239ff8d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite mkmult_pow_ok;Esimpl.",
            "VernacExtend",
            "6e9578474fbbcb016c9da285a0ef00201a48c3e4"
        ],
        [
            "change x with (x^1) at 1.",
            "VernacExtend",
            "ca7ae09174d4b57b31eeb1dda3e429b19098c46b"
        ],
        [
            "now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double.",
            "VernacExtend",
            "5adc68bdf47f8cc9b29698a4e2e1bdb053445d89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pphi_dev_ok : forall P fv, Pphi_dev fv P == P@fv.",
            "VernacStartTheoremProof",
            "51a8d866a33920d2852b089c1b5fd1c4855873f3"
        ],
        [
            "unfold Pphi_dev;intros;apply Pphi_avoid_ok.",
            "VernacExtend",
            "8174586140a29b78ec14c76d3fd5367225291ac5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros;apply mkpow_ok.",
            "VernacExtend",
            "27bd88cdbb95dcdb897b43869fefd43f132b47f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros;apply mkopp_pow_ok.",
            "VernacExtend",
            "8b68c69035f0bb244fd80779f65b5e92fe5eea8b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros;apply mkmult_pow_ok.",
            "VernacExtend",
            "f300c7ef753e6b0e081f16cba44a4f995427d5c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ring_rw_correct : forall n lH l, interp_PElist l lH -> forall lmp, mk_monpol_list lH = lmp -> forall pe npe, norm_subst n lmp pe = npe -> PEeval l pe == Pphi_dev l npe.",
            "VernacStartTheoremProof",
            "26d8e002cb63c9333566572f663a69b7014c9ab6"
        ],
        [
            "intros n lH l H1 lmp Heq1 pe npe Heq2.",
            "VernacExtend",
            "175c1de964262d223b3b1f0f7fbe5a8ef70a9cf1"
        ],
        [
            "rewrite Pphi_dev_ok.",
            "VernacExtend",
            "a294afc3a94b5d5e2a4580885e1cc11fc90d74db"
        ],
        [
            "rewrite <- Heq2;rewrite <- Heq1.",
            "VernacExtend",
            "63709ed4b9704b246ec27d76eb83f222ebc95ed0"
        ],
        [
            "apply norm_subst_ok.",
            "VernacExtend",
            "b1d53ccbb116be7215062e4394555bc7f36c1268"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MakeRingPol.",
            "VernacEndSegment",
            "30583c5e1a05edce00cede4d349cb6660b7c1473"
        ],
        [
            "Arguments PEO [C].",
            "VernacArguments",
            "7ffbf6fe38ed60f80880f40860d48b8d06ef6b2b"
        ],
        [
            "Arguments PEI [C].",
            "VernacArguments",
            "9970617cfd145a8eff61932a8f1781e1fbcbe68e"
        ]
    ],
    "proofs": [
        {
            "name": "radd_ext_Proper",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Reqe).",
                        "VernacExtend",
                        "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext_Proper",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Reqe).",
                        "VernacExtend",
                        "13b3093566a735d2e3348ba5dd18427edb19cc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ropp_ext_Proper",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "exact (Ropp_ext Reqe).",
                        "VernacExtend",
                        "e013460b2ed7bdd11390b3f84aa58078462220c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsub_ext_Proper",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "exact (ARsub_ext Rsth Reqe ARth).",
                        "VernacExtend",
                        "598d7a4358fb924db1093bc250a8a51010ad7b94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pequiv_eq",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "unfold Pequiv; split; red; intros; [reflexivity|now symmetry|now etransitivity].",
                        "VernacExtend",
                        "995147b9f82aaa9ce358def84af575b9fb9a97d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pphi_ext",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "now intros l l' <- P Q H.",
                        "VernacExtend",
                        "ca3a5debbaa8039239fb6a5e913e9b3ebc3f8164"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pinj_ext",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros i j <- P P' HP l.",
                        "VernacExtend",
                        "67fd3589d91993bf9095a87f882c9b1adaf63169"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite HP.",
                        "VernacExtend",
                        "53715b3510b4dea49596931652bfdaf83332e566"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PX_ext",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros P P' HP p p' <- Q Q' HQ l.",
                        "VernacExtend",
                        "f11f148df143dfe519bdd86086a733a4fbc4f855"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite HP, HQ.",
                        "VernacExtend",
                        "7a01d9441cf22253971559ea33d3744b4f2f7b27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "jump_add'",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "apply jump_add.",
                        "VernacExtend",
                        "e6c7f11585359ff20873da840f7fdfe8330ce786"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Peq_ok",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "unfold Pequiv.",
                        "VernacExtend",
                        "34151d48193bcb1ecacc467874ae9811b1036b79"
                    ]
                },
                {
                    "command": [
                        "revert P';induction P;destruct P';simpl; intros H l; try easy.",
                        "VernacExtend",
                        "1d17b2e0269deb3df33a48508df2497189e4e22e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply (morph_eq CRmorph).",
                        "VernacExtend",
                        "20bf7ff4be8748d9507ab9033852df5e13505008"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare_spec p p0); [ subst | easy | easy ].",
                        "VernacExtend",
                        "50218825d3db4c1e39554a662b4a51ccc77bb88c"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHP.",
                        "VernacExtend",
                        "ce21b69c9379c8bb9858da85ebfb29abf202fb42"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (IHP1 P'1); specialize (IHP2 P'2).",
                        "VernacExtend",
                        "2aee4d87def2e12972b9fedde82229b4dd03f4d7"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare_spec p p0); [ subst | easy | easy ].",
                        "VernacExtend",
                        "50218825d3db4c1e39554a662b4a51ccc77bb88c"
                    ]
                },
                {
                    "command": [
                        "destruct (P2 ?== P'1); [|easy].",
                        "VernacExtend",
                        "f2ab905fef3b3db976d09107c91fd6b354f3741f"
                    ]
                },
                {
                    "command": [
                        "rewrite H in *.",
                        "VernacExtend",
                        "288b227b15ae46c36597274ad2b93384514b82ec"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHP1, IHP2.",
                        "VernacExtend",
                        "6bba97dafbd15290691705e33ba6585ece8d6df2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Peq_spec",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "generalize (Peq_ok P P').",
                        "VernacExtend",
                        "191308d84d0be93d7af8dccffaf3a36287900a00"
                    ]
                },
                {
                    "command": [
                        "destruct (P ?== P'); auto.",
                        "VernacExtend",
                        "efa31a54816b0d91802fdc9984f8ae6ddf94547f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pphi0",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "simpl;apply (morph0 CRmorph).",
                        "VernacExtend",
                        "7be9d38d06497ac95ad270ec155587e70804a973"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pphi1",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "simpl;apply (morph1 CRmorph).",
                        "VernacExtend",
                        "246b60ff2077b0d8136fef9cf93e2d6e5ac92cc2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkPinj_ok",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "destruct P;simpl;rsimpl.",
                        "VernacExtend",
                        "b8beb72d741496e63076fe3a57c05b06d948046c"
                    ]
                },
                {
                    "command": [
                        "now rewrite jump_add'.",
                        "VernacExtend",
                        "d5a2e3b02f0b9dfc17297786109d5400bf3a1bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkPinj_ext",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros i j <- P Q H l.",
                        "VernacExtend",
                        "f1ace3409381349de71a4cf79e878267050fea81"
                    ]
                },
                {
                    "command": [
                        "now rewrite !mkPinj_ok.",
                        "VernacExtend",
                        "a036cca1c0a2bd4d9c81957f942bd989639254ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_pos_add",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "apply (pow_pos_add Rsth Reqe.(Rmul_ext) ARth.(ARmul_assoc)).",
                        "VernacExtend",
                        "fa19e2ff7abfac0e9205f86af9464abac9bf1d10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ceqb_spec",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "generalize (morph_eq CRmorph c c').",
                        "VernacExtend",
                        "4c6f3f0bd54fc5909b0904c2cc1413ecf001eb3a"
                    ]
                },
                {
                    "command": [
                        "destruct (c ?=! c'); auto.",
                        "VernacExtend",
                        "7a1494cbfc29a808b2b74ee2ecf00a15a50fbaf1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkPX_ok",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "unfold mkPX.",
                        "VernacExtend",
                        "91cbd059eae9cac32ddaff33e10a87e5a55a33bc"
                    ]
                },
                {
                    "command": [
                        "destruct P.",
                        "VernacExtend",
                        "5b49412def545f38f2c7c88619b02391bea0772f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case ceqb_spec; intros H; simpl; try reflexivity.",
                        "VernacExtend",
                        "e114beef15afc3b20bd902b6b09092df6ba74bf6"
                    ]
                },
                {
                    "command": [
                        "rewrite H, (morph0 CRmorph), mkPinj_ok; rsimpl.",
                        "VernacExtend",
                        "6f48bfe190102a5889f323375d4a1899331d7f6e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case Peq_spec; intros H; simpl; try reflexivity.",
                        "VernacExtend",
                        "03a9cc3df2d129fbb74e3355aba0dd1081f53a57"
                    ]
                },
                {
                    "command": [
                        "rewrite H, Pphi0, Pos.add_comm, pow_pos_add; rsimpl.",
                        "VernacExtend",
                        "70be964b4b1ce0005a38375ba02e3506014eff7e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkPX_ext",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros P P' HP i i' <- Q Q' HQ l.",
                        "VernacExtend",
                        "f3426c0dfdcddc7099f4b6aa9e490f4b30551b08"
                    ]
                },
                {
                    "command": [
                        "now rewrite !mkPX_ok, HP, HQ.",
                        "VernacExtend",
                        "9188577444203be73d53b10afdb448bfbad8eb89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PaddC_ok",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "revert l;induction P;simpl;intros;Esimpl;trivial.",
                        "VernacExtend",
                        "7510d3234b2344ab1b62a2140ddef11d99e39c57"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP2;rsimpl.",
                        "VernacExtend",
                        "96e8b0027de49fbe48b227683b95f8f7ff61b884"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PsubC_ok",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "revert l;induction P;simpl;intros.",
                        "VernacExtend",
                        "5043154fed5ae0562e7636b9ca51eed0bc213a58"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP;rsimpl.",
                        "VernacExtend",
                        "f979c39c87082db901a0fe9795b728520400807e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP2;rsimpl.",
                        "VernacExtend",
                        "96e8b0027de49fbe48b227683b95f8f7ff61b884"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PmulC_aux_ok",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "revert l;induction P;simpl;intros;Esimpl;trivial.",
                        "VernacExtend",
                        "7510d3234b2344ab1b62a2140ddef11d99e39c57"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1, IHP2;rsimpl.",
                        "VernacExtend",
                        "a584cf30598b6bcef96afb3b1b5d90f71a6a5227"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PmulC_ok",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "unfold PmulC.",
                        "VernacExtend",
                        "ff5eafebc837b6563a3354b1ab6c8337dab6f43e"
                    ]
                },
                {
                    "command": [
                        "case ceqb_spec; intros H.",
                        "VernacExtend",
                        "828aea6e3091741efd87af4036ed2c6a866d0d7f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite H; Esimpl.",
                        "VernacExtend",
                        "7d4a2219a3779c92ed47794bf6271ca10c654853"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case ceqb_spec; intros H'.",
                        "VernacExtend",
                        "bdf67a3bc7393da1bda09acbbf3640692b460344"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; Esimpl.",
                        "VernacExtend",
                        "01bfac97295362f94895a651d884e4125af79cf0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply PmulC_aux_ok.",
                        "VernacExtend",
                        "857c4ab7409d7fbf49734719b889e1cb427cf4a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Popp_ok",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "revert l;induction P;simpl;intros.",
                        "VernacExtend",
                        "5043154fed5ae0562e7636b9ca51eed0bc213a58"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHP.",
                        "VernacExtend",
                        "d72420f9a61e1e30d255fde06413f3a9c3a6e58c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1, IHP2;rsimpl.",
                        "VernacExtend",
                        "a584cf30598b6bcef96afb3b1b5d90f71a6a5227"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PaddX_ok",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros IHP'.",
                        "VernacExtend",
                        "ebd21ab20d5df307780d5717218174725a90a6bb"
                    ]
                },
                {
                    "command": [
                        "revert k l.",
                        "VernacExtend",
                        "48a0932ce73e37b3ec4361d043879eb1a4463822"
                    ]
                },
                {
                    "command": [
                        "induction P;simpl;intros.",
                        "VernacExtend",
                        "eb3d96e671bc8a541b25cb683cfe18f303d022e3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl; rewrite ?jump_pred_double; add_permut.",
                        "VernacExtend",
                        "94a647e0f16936c6bb5f3617b57df27eff5e757d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->; Esimpl.",
                        "VernacExtend",
                        "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP';rsimpl.",
                        "VernacExtend",
                        "3fc1ca5b648784c1f5e9fe87160d1a611eb999db"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP', pow_pos_add;simpl;Esimpl.",
                        "VernacExtend",
                        "c809df42624232f1847052c8b187839391091562"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1, pow_pos_add;rsimpl.",
                        "VernacExtend",
                        "72315497ae4904f444871c83753e5daa8c51e718"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Padd_ok",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "revert P l; induction P';simpl;intros;Esimpl.",
                        "VernacExtend",
                        "ce3bbacbadd01e981a47efe63086a44987d5684d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "revert p l; induction P;simpl;intros.",
                        "VernacExtend",
                        "7ad6744f347c9e163c7f93396a9a4a9e251a2c47"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "Esimpl; add_permut.",
                        "VernacExtend",
                        "00e40368915b9a7c491e6790dee8a406e2002f87"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->;Esimpl.",
                        "VernacExtend",
                        "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHP'.",
                        "VernacExtend",
                        "79049383e5a19af5b7d8941dd62fb12adeb52376"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP';Esimpl.",
                        "VernacExtend",
                        "deb6819f5e4f1923eba73e47e86ff966498df641"
                    ]
                },
                {
                    "command": [
                        "now rewrite jump_add'.",
                        "VernacExtend",
                        "d5a2e3b02f0b9dfc17297786109d5400bf3a1bb1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP.",
                        "VernacExtend",
                        "1638cf3a6249603db5f8acb07499d51856feef03"
                    ]
                },
                {
                    "command": [
                        "now rewrite jump_add'.",
                        "VernacExtend",
                        "d5a2e3b02f0b9dfc17297786109d5400bf3a1bb1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct p0;simpl.",
                        "VernacExtend",
                        "86995208b22cae25dbf379ce28a9e1eee58088b7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP2;simpl.",
                        "VernacExtend",
                        "2c5b9179677b11d2966b7266377c0e8ded91ac5f"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP2;simpl.",
                        "VernacExtend",
                        "2c5b9179677b11d2966b7266377c0e8ded91ac5f"
                    ]
                },
                {
                    "command": [
                        "rewrite jump_pred_double.",
                        "VernacExtend",
                        "b0a6cb05a718bc75c0534866a7cae56ec05208ee"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP'.",
                        "VernacExtend",
                        "ae7a573fe60d29bb345d1011a92dde9024267168"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct P;simpl.",
                        "VernacExtend",
                        "e3eaf0037ba4a07648c39ea1cdba9dd756f20677"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct p0;simpl;Esimpl; rewrite IHP'2; simpl.",
                        "VernacExtend",
                        "9e2436e23a00134d714686f051e545bc0f7d4139"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite jump_pred_double.",
                        "VernacExtend",
                        "b0a6cb05a718bc75c0534866a7cae56ec05208ee"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->; Esimpl.",
                        "VernacExtend",
                        "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP'1, IHP'2;rsimpl.",
                        "VernacExtend",
                        "3fdbed8e497b6623ddf134c92df9d84eef0ffa97"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP'1, IHP'2;simpl;Esimpl.",
                        "VernacExtend",
                        "e736138e4d9506a570513443c8395b32ba417680"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_pos_add;rsimpl.",
                        "VernacExtend",
                        "8311a7851edb6d88e59fe69988f2a065364e9c53"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite PaddX_ok by trivial; rsimpl.",
                        "VernacExtend",
                        "c4cb1586260ae379e95ef94eaf42748ace4229c1"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP'2, pow_pos_add; rsimpl.",
                        "VernacExtend",
                        "06e3fd67a43bd9252fade8a01a2f195b4e40fdf0"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Psub_opp",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "revert P; induction P'; simpl; intros.",
                        "VernacExtend",
                        "69c0e495413cc1fee819dfc2c4cafac420dab7f4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro l; Esimpl.",
                        "VernacExtend",
                        "94f7e98592a4c18ca19e5e2a3d8022eec17e3d41"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "revert p; induction P; simpl; intros; try reflexivity.",
                        "VernacExtend",
                        "6275f51c82198658e8603ed6857e9523c8a05c00"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->; now apply mkPinj_ext.",
                        "VernacExtend",
                        "18fe930e35de809c8ae21ac2a3a2529442f62837"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct p0; now apply PX_ext.",
                        "VernacExtend",
                        "e2ed19646af643aaf09b9279e3d4013e74e64dd2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct P; simpl; try reflexivity.",
                        "VernacExtend",
                        "6bec9674937f18890f284e2e530c2f8be25949f2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct p0; now apply PX_ext.",
                        "VernacExtend",
                        "e2ed19646af643aaf09b9279e3d4013e74e64dd2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->; apply mkPX_ext; auto.",
                        "VernacExtend",
                        "863b7c5b50b27632cc97efdcda76d37bd2452fcb"
                    ]
                },
                {
                    "command": [
                        "revert p1.",
                        "VernacExtend",
                        "71b14467193e60b4322308ce7d1aa5e56daf1690"
                    ]
                },
                {
                    "command": [
                        "induction P2; simpl; intros; try reflexivity.",
                        "VernacExtend",
                        "6e17a04f463ca48357f6b97f8ab4875c2d0313f1"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->; now apply mkPX_ext.",
                        "VernacExtend",
                        "ff1d649325a6ea5b5503e01b023b14713453aaf1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Psub_ok",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "rewrite Psub_opp, Padd_ok, Popp_ok.",
                        "VernacExtend",
                        "6435e2c46d49dc9846dbed06358e4dc930e0d0a4"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PmulI_ok",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros IHP'.",
                        "VernacExtend",
                        "ebd21ab20d5df307780d5717218174725a90a6bb"
                    ]
                },
                {
                    "command": [
                        "induction P;simpl;intros.",
                        "VernacExtend",
                        "eb3d96e671bc8a541b25cb683cfe18f303d022e3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "Esimpl; mul_permut.",
                        "VernacExtend",
                        "8dc5f2e5e8174b9b98939c27a3c899b90b0f3789"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destr_pos_sub; intros ->;Esimpl.",
                        "VernacExtend",
                        "c28b03d2962da93b5e2edc6fa86838c04bde4a6c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHP'.",
                        "VernacExtend",
                        "79049383e5a19af5b7d8941dd62fb12adeb52376"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHP', jump_add'.",
                        "VernacExtend",
                        "9df0b743a6041b40a2cfe809558a5f44c5c4fba1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHP, jump_add'.",
                        "VernacExtend",
                        "f310844a47dc6670433d8d2d7565894d687e1488"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct p0;Esimpl; rewrite ?IHP1, ?IHP2; rsimpl.",
                        "VernacExtend",
                        "df216b8cd140ac38ef184538dacbd50463a72366"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite jump_pred_double.",
                        "VernacExtend",
                        "b0a6cb05a718bc75c0534866a7cae56ec05208ee"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP'.",
                        "VernacExtend",
                        "ae7a573fe60d29bb345d1011a92dde9024267168"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pmul_ok",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "revert P l;induction P';simpl;intros.",
                        "VernacExtend",
                        "08e294d2f35e70d349a512433adeac7b47663ac1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply PmulC_ok.",
                        "VernacExtend",
                        "1e4671d5fed021af34e5de50871f6dc3f9a2e26a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply PmulI_ok;trivial.",
                        "VernacExtend",
                        "2926f07da3621565ad20c085b8082908e94c33c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct P.",
                        "VernacExtend",
                        "5b49412def545f38f2c7c88619b02391bea0772f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (ARmul_comm ARth).",
                        "VernacExtend",
                        "e8b133f8f7873c85ffefb0eb4bfd48ce138a4c06"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP'1; Esimpl.",
                        "VernacExtend",
                        "dd11c71d896aa46c2d71da049216f38de5149488"
                    ]
                },
                {
                    "command": [
                        "destruct p0;rewrite IHP'2;Esimpl.",
                        "VernacExtend",
                        "bd82c0d90392d7299d9828fb4cedf456b4e08663"
                    ]
                },
                {
                    "command": [
                        "rewrite jump_pred_double; Esimpl.",
                        "VernacExtend",
                        "ca67da862c0070fde8164818be8129340c0ebedb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite Padd_ok, !mkPX_ok, Padd_ok, !mkPX_ok, !IHP'1, !IHP'2, PmulI_ok; trivial.",
                        "VernacExtend",
                        "b8e51362eea36ae46afcba296fdc7cfc2f58b628"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "add_permut; f_equiv; mul_permut.",
                        "VernacExtend",
                        "1807b2aae8239d7380436ee5c74bd6efc7a4179d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkZmon_ok",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "destruct M; simpl; rsimpl.",
                        "VernacExtend",
                        "f0af218641015a05e4a145651b40998f91adf19f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zmon_pred_ok",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "destruct j; simpl; rewrite ?mkZmon_ok; simpl; rsimpl.",
                        "VernacExtend",
                        "c7c20adb5f870778fedfffb5bee49573545fe904"
                    ]
                },
                {
                    "command": [
                        "rewrite jump_pred_double; rsimpl.",
                        "VernacExtend",
                        "3781712bd135e20a2497343ba9360d72faac7533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkVmon_ok",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "destruct M;simpl;intros;rsimpl.",
                        "VernacExtend",
                        "848c18b5af650196ec93b1ce491950a4d266020e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite zmon_pred_ok;simpl;rsimpl.",
                        "VernacExtend",
                        "62eac9d327653a5e6c8c47f7f5e27678ef698f68"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_pos_add;rsimpl.",
                        "VernacExtend",
                        "8311a7851edb6d88e59fe69988f2a065364e9c53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Mcphi_ok",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "revert l.",
                        "VernacExtend",
                        "11a722880df1bc386870f9ce37f36e8be2871e9c"
                    ]
                },
                {
                    "command": [
                        "induction P as [c0 | j P IH | P1 IH1 i P2 IH2]; intros l; Esimpl.",
                        "VernacExtend",
                        "20ba0a633ea676d24f53c55f714bf04c0f678681"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H := div_th.(div_eucl_th) c0 c).",
                        "VernacExtend",
                        "f7af10d64efbb0d21411ca4dad5380ccc40355a1"
                    ]
                },
                {
                    "command": [
                        "destruct cdiv as (q,r).",
                        "VernacExtend",
                        "80ae667c7de231a8a8198fd6ed5834492b50c5cd"
                    ]
                },
                {
                    "command": [
                        "rewrite H; Esimpl.",
                        "VernacExtend",
                        "7d4a2219a3779c92ed47794bf6271ca10c654853"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destr_factor.",
                        "VernacExtend",
                        "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destr_factor.",
                        "VernacExtend",
                        "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Mphi_ok",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "destruct cM as (c,M).",
                        "VernacExtend",
                        "16d19c35aa367bacdf347640c3ecee1cac96b9dd"
                    ]
                },
                {
                    "command": [
                        "revert M l.",
                        "VernacExtend",
                        "724a6304c9f017fdf733c65b23dba15e6098c1d5"
                    ]
                },
                {
                    "command": [
                        "induction P; destruct M; intros l; simpl; auto; try (case ceqb_spec; intro He); try (case Pos.compare_spec; intros He); rewrite ?He; destr_factor; simpl; Esimpl.",
                        "VernacExtend",
                        "ada56228cacfcfab5b1e9d5ebd71bd3004432158"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H := div_th.(div_eucl_th) c0 c).",
                        "VernacExtend",
                        "f7af10d64efbb0d21411ca4dad5380ccc40355a1"
                    ]
                },
                {
                    "command": [
                        "destruct cdiv as (q,r).",
                        "VernacExtend",
                        "80ae667c7de231a8a8198fd6ed5834492b50c5cd"
                    ]
                },
                {
                    "command": [
                        "rewrite H; Esimpl.",
                        "VernacExtend",
                        "7d4a2219a3779c92ed47794bf6271ca10c654853"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H := Mcphi_ok P c).",
                        "VernacExtend",
                        "f05ee34aab2b2d150f5801dd9f0bc988872e358c"
                    ]
                },
                {
                    "command": [
                        "destr_factor.",
                        "VernacExtend",
                        "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- jump_add, Pos.sub_add.",
                        "VernacExtend",
                        "ec57af91cc7aae53a4f6e7b9fc8c72743b7c61dc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := Mcphi_ok P2 c).",
                        "VernacExtend",
                        "ff67f6f84d06420f272e3667624ab761938a03f0"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := Mcphi_ok P3 c).",
                        "VernacExtend",
                        "39c23ebac1ffc04f363bbea4f945262f1c3f59cc"
                    ]
                },
                {
                    "command": [
                        "destr_factor.",
                        "VernacExtend",
                        "3b4b245b52f9b09f482b14e019c27b01b8dcc7d9"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite zmon_pred_ok.",
                        "VernacExtend",
                        "e4e3b202372bb14748b83ba65038f6406aca6c1f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite mkZmon_ok.",
                        "VernacExtend",
                        "de569533ba2752e1f1ea83b285a56d411583ac5c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pow_pos_add, Pos.add_comm, Pos.sub_add by trivial; rsimpl.",
                        "VernacExtend",
                        "1d21098364f37a2eb86f18a4e519458c19a0584c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite mkZmon_ok.",
                        "VernacExtend",
                        "de569533ba2752e1f1ea83b285a56d411583ac5c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pow_pos_add, Pos.sub_add by trivial; rsimpl.",
                        "VernacExtend",
                        "fe48a2170f9ea79567d3806263892248cc04b9bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "POneSubst_ok",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "destruct cM1 as (cc,M1).",
                        "VernacExtend",
                        "5999322a1501fa3c9ff2a1e7f352bebeef743540"
                    ]
                },
                {
                    "command": [
                        "unfold POneSubst.",
                        "VernacExtend",
                        "da3586ee9469b77b5a4ac362d00abd0673fb378e"
                    ]
                },
                {
                    "command": [
                        "assert (H := Mphi_ok P1 (cc, M1) l).",
                        "VernacExtend",
                        "f82b6ba60b309a84c5e1b814e48e46d94c7ff504"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct MFactor as (R1,S1); simpl.",
                        "VernacExtend",
                        "77cefe04f33ab4c12db3d6858e37c89fc6a6503d"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "intros EQ EQ'.",
                        "VernacExtend",
                        "9c122b5efd06b21719e1fe1f7a09d2200d16212b"
                    ]
                },
                {
                    "command": [
                        "replace P3 with (R1 ++ P2 ** S1).",
                        "VernacExtend",
                        "bafae2ba2d5952312fea6f8ae6a9d5575c968f97"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ', Padd_ok, Pmul_ok; rsimpl.",
                        "VernacExtend",
                        "b2ce594ea520f60803f204a40553768e71d60fee"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "revert EQ.",
                        "VernacExtend",
                        "b85dcdb451d344a659d52ee540f2be6a51ec991b"
                    ]
                },
                {
                    "command": [
                        "destruct S1; try now injection 1.",
                        "VernacExtend",
                        "216159c2c7a6c867ba09182139e6c9a5e94fd0f7"
                    ]
                },
                {
                    "command": [
                        "case ceqb_spec; now inversion 2.",
                        "VernacExtend",
                        "925541b80b22a436ddf25a634175ddce37becbc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PNSubst1_ok",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "revert P1.",
                        "VernacExtend",
                        "a10707f1b21f9df573579fdac4f0742c51267e39"
                    ]
                },
                {
                    "command": [
                        "induction n; simpl; intros P1; generalize (POneSubst_ok P1 cM1 P2); destruct POneSubst; intros; rewrite <- ?IHn; auto; reflexivity.",
                        "VernacExtend",
                        "293972a1b719ac73993d939e0ffb214323182f1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PNSubst_ok",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "unfold PNSubst.",
                        "VernacExtend",
                        "7273e0d26d4956e0f9392107de32f3884b39e055"
                    ]
                },
                {
                    "command": [
                        "assert (H := POneSubst_ok P1 cM1 P2); destruct POneSubst; try discriminate.",
                        "VernacExtend",
                        "8de2d04c515427fa7ec2657d4db2f0badeb17a9d"
                    ]
                },
                {
                    "command": [
                        "destruct n; inversion_clear 1.",
                        "VernacExtend",
                        "a8b11eae1544832bcbb4a3a58c0717d6c7b0bbb2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- PNSubst1_ok; auto.",
                        "VernacExtend",
                        "a066205431cd26f8fbf886671d759239814fc83e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSubstL1_ok",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "revert P1; induction LM1 as [|(M2,P2) LM2 IH]; simpl; intros.",
                        "VernacExtend",
                        "e57ac9de29d554bcab45e7ee7a2a6406ce90ceaa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IH by intuition; now apply PNSubst1_ok.",
                        "VernacExtend",
                        "41a3cc95d94574b79c732e66c9859e022da3c631"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PSubstL_ok",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "revert P1.",
                        "VernacExtend",
                        "a10707f1b21f9df573579fdac4f0742c51267e39"
                    ]
                },
                {
                    "command": [
                        "induction LM1 as [|(M2,P2') LM2 IH]; simpl; intros.",
                        "VernacExtend",
                        "4f941a928c15fffa7b01507e82db21bde88d8d87"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H':=PNSubst_ok n P3 M2 P2').",
                        "VernacExtend",
                        "334cd2f9243bd09bab350d732e3d73814eb0a082"
                    ]
                },
                {
                    "command": [
                        "destruct PNSubst.",
                        "VernacExtend",
                        "1f19425586fa5c9e29d628986f9a28d277215f37"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "injection H as <-.",
                        "VernacExtend",
                        "ac20f3cdc891cd244c7fffa81bee3c656b4fe3e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- PSubstL1_ok; intuition.",
                        "VernacExtend",
                        "1438fec2c79ebb4b7e1bdddf6757649c1ce313bd"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now apply IH.",
                        "VernacExtend",
                        "f55d33d07a7d04fb33e00d25db71d556dde4e829"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PNSubstL_ok",
            "line_nb": 510,
            "steps": [
                {
                    "command": [
                        "revert LM1 P1.",
                        "VernacExtend",
                        "5cef46722c3fd5ac7867b8d663fa7ed8f285478d"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl; intros; assert (H' := PSubstL_ok n LM1 P2); destruct PSubstL; auto; try reflexivity.",
                        "VernacExtend",
                        "02d9931eb789c666b111a71ec64c6dda61a2cc65"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHm; auto.",
                        "VernacExtend",
                        "bcff403cbbb1866e30e71246f4652aeededd85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkX_ok",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "destruct p;simpl;intros;Esimpl;trivial.",
                        "VernacExtend",
                        "e43ec3f82059885e1d40fc4d8333f58cb62401ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <-jump_tl, nth_jump.",
                        "VernacExtend",
                        "fed1ea08048ca45c3880f51b1f71a6cf8959d3e0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- nth_jump, nth_pred_double.",
                        "VernacExtend",
                        "2e03df39497efd467e93aa4ba983afc7dadc7b50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ppow_pos_ok",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "intros subst_l_ok res P p.",
                        "VernacExtend",
                        "3544258929d012a40f99c7eb8b706b7bd7bfa547"
                    ]
                },
                {
                    "command": [
                        "revert res.",
                        "VernacExtend",
                        "c5e81dc16af60090b2800458f03b1611b33e4aff"
                    ]
                },
                {
                    "command": [
                        "induction p;simpl;intros; rewrite ?subst_l_ok, ?Pmul_ok, ?IHp; mul_permut.",
                        "VernacExtend",
                        "a5d12a751ec72a6a0454e3fa5fc57c2a403f7653"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ppow_N_ok",
            "line_nb": 536,
            "steps": [
                {
                    "command": [
                        "destruct n;simpl.",
                        "VernacExtend",
                        "6554f156164019d92e1907ce49ab9159d733a0bb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Ppow_pos_ok by trivial.",
                        "VernacExtend",
                        "71343fc4a414dfaceb5ff31e38981adcc9a23dfb"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_aux_PEadd",
            "line_nb": 554,
            "steps": [
                {
                    "command": [
                        "simpl (norm_aux (PEadd _ _)).",
                        "VernacExtend",
                        "a5b0348b53d536b8f2a3727aab6da2cade81672b"
                    ]
                },
                {
                    "command": [
                        "destruct pe1; [ | | | | | | | reflexivity | ]; destruct pe2; simpl get_PEopp; reflexivity.",
                        "VernacExtend",
                        "93d752b97025a6046cb4a7afd8f411e25d5d035f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_aux_PEopp",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "now destruct pe.",
                        "VernacExtend",
                        "fef8a23471b3422941136693c0299f7abef56069"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_aux_spec",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction pe; cbn.",
                        "VernacExtend",
                        "4e53a7ad7a431193693b2dd0bb38641556aca768"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite (morph0 CRmorph).",
                        "VernacExtend",
                        "b10870fbf6c7e98c8af151d60691c029a41c507b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite (morph1 CRmorph).",
                        "VernacExtend",
                        "581d2c930f3162a66bf04b97f415d7a5afdaef0a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply mkX_ok.",
                        "VernacExtend",
                        "2e8ccdd2bc92d6f160f3d50dddafc2af099f293c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHpe1, IHpe2.",
                        "VernacExtend",
                        "66a00c80f532d74234ca10cf083e8fc85cb1e728"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := norm_aux_PEopp pe1).",
                        "VernacExtend",
                        "3169053f6bfb11ad9ddd96e54a90b51fbd14ce9a"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := norm_aux_PEopp pe2).",
                        "VernacExtend",
                        "d896e250a2e9a550b53009ca455cd13b8e7f4dbe"
                    ]
                },
                {
                    "command": [
                        "rewrite norm_aux_PEadd.",
                        "VernacExtend",
                        "5f0f6fd4fefe711906b52a546848d36dafaa7ee5"
                    ]
                },
                {
                    "command": [
                        "do 2 destruct get_PEopp; rewrite ?H1, ?H2; Esimpl; add_permut.",
                        "VernacExtend",
                        "3c9347b9f87859351f62740ace20e98e805758c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHpe1, IHpe2.",
                        "VernacExtend",
                        "66a00c80f532d74234ca10cf083e8fc85cb1e728"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHpe1, IHpe2.",
                        "VernacExtend",
                        "66a00c80f532d74234ca10cf083e8fc85cb1e728"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pmul_ok.",
                        "VernacExtend",
                        "cf88e3b2f16253e0b942f90954910eed288bbad8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHpe.",
                        "VernacExtend",
                        "c6f48d4a049048dce2514f3b8fc2c886ee54fc3b"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Ppow_N_ok by reflexivity.",
                        "VernacExtend",
                        "5f5ff3ecac2ba03a3f0628c8931fa37d9c53d283"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_th.(rpow_pow_N).",
                        "VernacExtend",
                        "bc3728236de400abbcf6f2d10595d7eeb912fa54"
                    ]
                },
                {
                    "command": [
                        "destruct n0; simpl; Esimpl.",
                        "VernacExtend",
                        "6234200a1dda96c2de1de00d1d4367d38ae0b4e0"
                    ]
                },
                {
                    "command": [
                        "induction p;simpl; now rewrite ?IHp, ?IHpe, ?Pms_ok, ?Pmul_ok.",
                        "VernacExtend",
                        "e9801f29e9c65befe1332aaba4a47a86e6c8839c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_subst_spec",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "intros;unfold norm_subst.",
                        "VernacExtend",
                        "2615b06124cd473442df55084260997e43f8f6a9"
                    ]
                },
                {
                    "command": [
                        "unfold subst_l;rewrite <- PNSubstL_ok;trivial.",
                        "VernacExtend",
                        "39c5385aa3b0992af53efa2161fe01652a25e0fb"
                    ]
                },
                {
                    "command": [
                        "apply norm_aux_spec.",
                        "VernacExtend",
                        "0172bf20e66c4e62e4b1bc01249f7f4b9ebaebe3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mon_of_pol_ok",
            "line_nb": 603,
            "steps": [
                {
                    "command": [
                        "induction P;simpl;intros;Esimpl.",
                        "VernacExtend",
                        "fe9a7792518e627c07e124c3834d8ae8302ac6a8"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := (morph_eq CRmorph) c cO).",
                        "VernacExtend",
                        "9d8f399ddde2cd501cb066d5093f205d6a8b8fc2"
                    ]
                },
                {
                    "command": [
                        "destruct (c ?=! cO).",
                        "VernacExtend",
                        "f26061527178e2e1b864bd1f4b5998bdbfeab14b"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "inversion H;trivial;Esimpl.",
                        "VernacExtend",
                        "1a5c51debf55cbd52a838179051a674f25057fb0"
                    ]
                },
                {
                    "command": [
                        "generalize H;clear H;case_eq (mon_of_pol P).",
                        "VernacExtend",
                        "8cfbf0625e6edefb8f2db133718759e8f1c38952"
                    ]
                },
                {
                    "command": [
                        "intros (c1,P2) H0 H1; inversion H1; Esimpl.",
                        "VernacExtend",
                        "da3aadb2068c9aafdaf8aba85ec3b3a50505f386"
                    ]
                },
                {
                    "command": [
                        "generalize (IHP (c1, P2) H0 (jump p l)).",
                        "VernacExtend",
                        "f0919e8235491db7ded54b8410aed47dd058c6ba"
                    ]
                },
                {
                    "command": [
                        "rewrite mkZmon_ok;simpl;auto.",
                        "VernacExtend",
                        "38484eedc77bf918952554a9173d88528e256129"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "generalize H;clear H;change match P3 with | Pc c => c ?=! cO | Pinj _ _ => false | PX _ _ _ => false end with (P3 ?== P0).",
                        "VernacExtend",
                        "eefb4830d840b9d2617ce2e4c7ed10003e8c85a9"
                    ]
                },
                {
                    "command": [
                        "assert (H := Peq_ok P3 P0).",
                        "VernacExtend",
                        "455602ccedcea3584b2d2164097b018b9a86ce53"
                    ]
                },
                {
                    "command": [
                        "destruct (P3 ?== P0).",
                        "VernacExtend",
                        "c8295a6d680d8c0723c4e338363ce803a50e795b"
                    ]
                },
                {
                    "command": [
                        "case_eq (mon_of_pol P2);try intros (cc, pp); intros.",
                        "VernacExtend",
                        "6e2ce76eb8175aa0fd0d27efa6bb95f5db683099"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite mkVmon_ok;simpl.",
                        "VernacExtend",
                        "c5f998538889ebea025c300fe25cc8e66a71a5fd"
                    ]
                },
                {
                    "command": [
                        "rewrite H;trivial;Esimpl.",
                        "VernacExtend",
                        "42fe9986535b2b06374c8c1343d428fe5aa12e12"
                    ]
                },
                {
                    "command": [
                        "generalize (IHP1 _ H0); simpl; intros HH; rewrite HH; rsimpl.",
                        "VernacExtend",
                        "b3781091ffe430ef36a284c241e3ed9a557b9db9"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros;discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "interp_PElist_ok",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "induction lpe;simpl.",
                        "VernacExtend",
                        "b51ccc6609413b18e1c19460a4f28041b6c693ab"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct a;simpl;intros.",
                        "VernacExtend",
                        "4e49b6b3b5abaf277bf3b6da7299270661478196"
                    ]
                },
                {
                    "command": [
                        "assert (HH:=mon_of_pol_ok (norm_subst 0 nil p)); destruct (mon_of_pol (norm_subst 0 nil p)).",
                        "VernacExtend",
                        "8a4e1868b7fdb884f1873ad55e3190f02188241a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- norm_subst_spec by exact I.",
                        "VernacExtend",
                        "f9be5d51c83f671dea6f7cc791d1419f46f63d33"
                    ]
                },
                {
                    "command": [
                        "destruct lpe;try destruct H;rewrite <- H; rewrite (norm_subst_spec 0 nil); try exact I;apply HH;trivial.",
                        "VernacExtend",
                        "92382385db6301a8dbb682ac95b04b94dd143e11"
                    ]
                },
                {
                    "command": [
                        "apply IHlpe.",
                        "VernacExtend",
                        "e2b6058656b0df0987dd417cab275a351cbea08f"
                    ]
                },
                {
                    "command": [
                        "destruct lpe;simpl;trivial.",
                        "VernacExtend",
                        "af7bbb813942a2751021544979d22e28cd643e78"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "apply IHlpe.",
                        "VernacExtend",
                        "e2b6058656b0df0987dd417cab275a351cbea08f"
                    ]
                },
                {
                    "command": [
                        "destruct lpe;simpl;trivial.",
                        "VernacExtend",
                        "af7bbb813942a2751021544979d22e28cd643e78"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_subst_ok",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "intros;apply norm_subst_spec.",
                        "VernacExtend",
                        "d921c807cf7061ff864fffd19ea0cd8346384c46"
                    ]
                },
                {
                    "command": [
                        "apply interp_PElist_ok;trivial.",
                        "VernacExtend",
                        "38d753b0bb871e31b99eb56fb98a446036335f54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ring_correct",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "simpl;intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite (norm_subst_ok n l lpe);trivial).",
                        "VernacExtend",
                        "7788ff5ab3a3f44fad134dc832e7d0315188b498"
                    ]
                },
                {
                    "command": [
                        "apply Peq_ok;trivial.",
                        "VernacExtend",
                        "b066f815bd1293607c34d3434c2b4c5b6e636856"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkmult_rec_ok",
            "line_nb": 672,
            "steps": [
                {
                    "command": [
                        "induction lm;intros;simpl;Esimpl.",
                        "VernacExtend",
                        "dd8a182e99e0e667e6e7c27482f833d914d7f087"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x,p);Esimpl.",
                        "VernacExtend",
                        "2b8db76015fd5d6a79d4d4007bd5626b3c4068b3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHlm.",
                        "VernacExtend",
                        "de26c48a1ad4c4580932f9331b6edd1c6c0a18e8"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_pow_spec.",
                        "VernacExtend",
                        "7342ca9edd3eaad9a43a7d705c2ea60cd7218a15"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkmult1_ok",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "destruct lm;simpl;Esimpl.",
                        "VernacExtend",
                        "3cba48eb4630c447fe5ed55eba65eea7c9d7fd54"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_rec_ok;rewrite mkpow_spec;Esimpl.",
                        "VernacExtend",
                        "9dccb8846b94d6c92a2c4a797ce95edcf24a765c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkmultm1_ok",
            "line_nb": 684,
            "steps": [
                {
                    "command": [
                        "destruct lm;simpl;Esimpl.",
                        "VernacExtend",
                        "3cba48eb4630c447fe5ed55eba65eea7c9d7fd54"
                    ]
                },
                {
                    "command": [
                        "destruct p;rewrite mkmult_rec_ok.",
                        "VernacExtend",
                        "c952d99cdc8d20af055137b23d01726c758ae3d6"
                    ]
                },
                {
                    "command": [
                        "rewrite mkopp_pow_spec;Esimpl.",
                        "VernacExtend",
                        "ee97daf528c516a1ebf2fb0f82331b9b901fafaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r_list_pow_rev",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "assert (forall l lr : list (R * positive), r_list_pow (rev_append l lr) == r_list_pow lr * r_list_pow l).",
                        "VernacExtend",
                        "458f8b46ac59b9493310601c7dbb6f80ad239726"
                    ]
                },
                {
                    "command": [
                        "induction l;intros;simpl;Esimpl.",
                        "VernacExtend",
                        "ba203a62946836c431ce007f50b18217e081f44e"
                    ]
                },
                {
                    "command": [
                        "destruct a;rewrite IHl;Esimpl.",
                        "VernacExtend",
                        "c3c011fe4a4f2c0abbadd9474b35199eeef0aac8"
                    ]
                },
                {
                    "command": [
                        "rewrite (ARmul_comm ARth (pow_pos rmul r p)).",
                        "VernacExtend",
                        "f5e46e0018d9f14b4e328b48e568b3f649d642e4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros;unfold rev'.",
                        "VernacExtend",
                        "153d45535a34a0dbad8d62953777fdb7742ed597"
                    ]
                },
                {
                    "command": [
                        "rewrite H;simpl;Esimpl.",
                        "VernacExtend",
                        "4b04cf9b15f7f1c024eedc177ee274ef8ab1ecfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkmult_c_pos_ok",
            "line_nb": 698,
            "steps": [
                {
                    "command": [
                        "intros;unfold mkmult_c_pos;simpl.",
                        "VernacExtend",
                        "6add449f93aa11433a8c4ac4aa1923b3233da59c"
                    ]
                },
                {
                    "command": [
                        "assert (H := (morph_eq CRmorph) c cI).",
                        "VernacExtend",
                        "30d997e0774d0012b0b2de2402dcca232b3a551e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- r_list_pow_rev; destruct (c ?=! cI).",
                        "VernacExtend",
                        "7b2f9e87000d24a959b88a504d03c2d0ce141594"
                    ]
                },
                {
                    "command": [
                        "rewrite H;trivial;Esimpl.",
                        "VernacExtend",
                        "42fe9986535b2b06374c8c1343d428fe5aa12e12"
                    ]
                },
                {
                    "command": [
                        "apply mkmult1_ok.",
                        "VernacExtend",
                        "4c189ed58fe8350962c2f26198db1d1986174944"
                    ]
                },
                {
                    "command": [
                        "apply mkmult_rec_ok.",
                        "VernacExtend",
                        "343c78decaf3e710cf76a6fa6d827775f6b6f111"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkmult_c_ok",
            "line_nb": 706,
            "steps": [
                {
                    "command": [
                        "intros;unfold mkmult_c;simpl.",
                        "VernacExtend",
                        "6aaa98a4129ac451ec038ffa82e30158ada8d486"
                    ]
                },
                {
                    "command": [
                        "case_eq (get_sign c);intros.",
                        "VernacExtend",
                        "0efdbfb9369f6f63c70aaef3cdcd46c62c7ac332"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := (morph_eq CRmorph) c0 cI).",
                        "VernacExtend",
                        "1ab4ccad24e8f271db6e14550caf7ea0c59e57b4"
                    ]
                },
                {
                    "command": [
                        "destruct (c0 ?=! cI).",
                        "VernacExtend",
                        "eca6c3c50419a69a547e78a7715b643289657322"
                    ]
                },
                {
                    "command": [
                        "rewrite (CRmorph.(morph_eq) _ _ (get_sign_spec.(sign_spec) _ H)).",
                        "VernacExtend",
                        "073939041aa596d180479251e4391c29c513243c"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "rewrite H1;trivial.",
                        "VernacExtend",
                        "898e530e8e03fcfe5f774f6e2b5b2f67998e5e5a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- r_list_pow_rev;trivial;Esimpl.",
                        "VernacExtend",
                        "b7a1b62e28953e528952ab2c354ae27a98dc2f68"
                    ]
                },
                {
                    "command": [
                        "apply mkmultm1_ok.",
                        "VernacExtend",
                        "03c1414b7f059e5544d2ef8ed8d0dbdbcbddd9af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- r_list_pow_rev; apply mkmult_rec_ok.",
                        "VernacExtend",
                        "a682963bc79c1aaec6d0ac324939a0260551a65d"
                    ]
                },
                {
                    "command": [
                        "apply mkmult_c_pos_ok.",
                        "VernacExtend",
                        "73ac87a3be632968401c74f5de6f83a9b4a84874"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkadd_mult_ok",
            "line_nb": 719,
            "steps": [
                {
                    "command": [
                        "intros;unfold mkadd_mult.",
                        "VernacExtend",
                        "fadd0cb873c570c2e4fdb2b975b6654e2432dff3"
                    ]
                },
                {
                    "command": [
                        "case_eq (get_sign c);intros.",
                        "VernacExtend",
                        "0efdbfb9369f6f63c70aaef3cdcd46c62c7ac332"
                    ]
                },
                {
                    "command": [
                        "rewrite (CRmorph.(morph_eq) _ _ (get_sign_spec.(sign_spec) _ H));Esimpl.",
                        "VernacExtend",
                        "fc6c4c85893c6b07df41dc6794c6e3ac0a2fe98e"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_c_pos_ok;Esimpl.",
                        "VernacExtend",
                        "1f5f3c308128e3e094d1d109fb2df4dd4f68368b"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_c_pos_ok;Esimpl.",
                        "VernacExtend",
                        "1f5f3c308128e3e094d1d109fb2df4dd4f68368b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_pow_list_ok",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "destruct n;simpl;intros;Esimpl.",
                        "VernacExtend",
                        "92bd37291ad81c47746f98bac5b516a40fb306b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mult_dev_ok",
            "line_nb": 729,
            "steps": [
                {
                    "command": [
                        "induction P;simpl;intros.",
                        "VernacExtend",
                        "eb3d96e671bc8a541b25cb683cfe18f303d022e3"
                    ]
                },
                {
                    "command": [
                        "rewrite mkadd_mult_ok.",
                        "VernacExtend",
                        "cd9318e733d07790029204b0df6cd2a0cfe0888e"
                    ]
                },
                {
                    "command": [
                        "rewrite add_pow_list_ok; Esimpl.",
                        "VernacExtend",
                        "a8aa2fc6dd1653bbe3e8bb422a6cfadde8153400"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP.",
                        "VernacExtend",
                        "1638cf3a6249603db5f8acb07499d51856feef03"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite add_pow_list_ok; Esimpl.",
                        "VernacExtend",
                        "a8aa2fc6dd1653bbe3e8bb422a6cfadde8153400"
                    ]
                },
                {
                    "command": [
                        "change (match P3 with | Pc c => c ?=! cO | Pinj _ _ => false | PX _ _ _ => false end) with (Peq P3 P0).",
                        "VernacExtend",
                        "d6ab542926d78a385182f7260a90fd6c7aad47dd"
                    ]
                },
                {
                    "command": [
                        "change match n with | N0 => Npos p | Npos q => Npos (p + q) end with (N.add (Npos p) n);trivial.",
                        "VernacExtend",
                        "28dfb2431891f4b0199916a36423a41dfb0567fd"
                    ]
                },
                {
                    "command": [
                        "assert (H := Peq_ok P3 P0).",
                        "VernacExtend",
                        "455602ccedcea3584b2d2164097b018b9a86ce53"
                    ]
                },
                {
                    "command": [
                        "destruct (P3 ?== P0).",
                        "VernacExtend",
                        "c8295a6d680d8c0723c4e338363ce803a50e795b"
                    ]
                },
                {
                    "command": [
                        "rewrite (H eq_refl).",
                        "VernacExtend",
                        "4e9fced0168a5a42b6a43e75684b3b1b14e510a7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1.",
                        "VernacExtend",
                        "81eb48fc49e054dd2eb540895edf465850341b68"
                    ]
                },
                {
                    "command": [
                        "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
                        "VernacExtend",
                        "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP2.",
                        "VernacExtend",
                        "04c2159f41eb438f3a7d02bb0ca8fccd14f284c2"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1.",
                        "VernacExtend",
                        "81eb48fc49e054dd2eb540895edf465850341b68"
                    ]
                },
                {
                    "command": [
                        "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
                        "VernacExtend",
                        "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
                    ]
                },
                {
                    "command": [
                        "add_permut.",
                        "VernacExtend",
                        "b1559625a96bb16d778bca64777f03ffc568eb3b"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_dev_ok",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "induction P;simpl;intros;Esimpl.",
                        "VernacExtend",
                        "fe9a7792518e627c07e124c3834d8ae8302ac6a8"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_c_ok;rewrite add_pow_list_ok;Esimpl.",
                        "VernacExtend",
                        "2d2d37ff341ce831e1013db226910b04e63ea414"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP.",
                        "VernacExtend",
                        "1638cf3a6249603db5f8acb07499d51856feef03"
                    ]
                },
                {
                    "command": [
                        "simpl;rewrite add_pow_list_ok;Esimpl.",
                        "VernacExtend",
                        "c5c9dc195d918e254f1270e4eff8aed528c03878"
                    ]
                },
                {
                    "command": [
                        "change (match P3 with | Pc c => c ?=! cO | Pinj _ _ => false | PX _ _ _ => false end) with (Peq P3 P0).",
                        "VernacExtend",
                        "d6ab542926d78a385182f7260a90fd6c7aad47dd"
                    ]
                },
                {
                    "command": [
                        "change match n with | N0 => Npos p | Npos q => Npos (p + q) end with (N.add (Npos p) n);trivial.",
                        "VernacExtend",
                        "28dfb2431891f4b0199916a36423a41dfb0567fd"
                    ]
                },
                {
                    "command": [
                        "assert (H := Peq_ok P3 P0).",
                        "VernacExtend",
                        "455602ccedcea3584b2d2164097b018b9a86ce53"
                    ]
                },
                {
                    "command": [
                        "destruct (P3 ?== P0).",
                        "VernacExtend",
                        "c8295a6d680d8c0723c4e338363ce803a50e795b"
                    ]
                },
                {
                    "command": [
                        "rewrite (H eq_refl).",
                        "VernacExtend",
                        "4e9fced0168a5a42b6a43e75684b3b1b14e510a7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1.",
                        "VernacExtend",
                        "81eb48fc49e054dd2eb540895edf465850341b68"
                    ]
                },
                {
                    "command": [
                        "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
                        "VernacExtend",
                        "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
                    ]
                },
                {
                    "command": [
                        "mul_permut.",
                        "VernacExtend",
                        "9bbb27319030cca7a413e039a95634f318d8512a"
                    ]
                },
                {
                    "command": [
                        "rewrite add_mult_dev_ok.",
                        "VernacExtend",
                        "ac670fba3386e1717426ae9e753cd1b000acb138"
                    ]
                },
                {
                    "command": [
                        "rewrite IHP1; rewrite add_pow_list_ok.",
                        "VernacExtend",
                        "098bbdd90446d252f6dbea98d1e42b9c6d7ae65a"
                    ]
                },
                {
                    "command": [
                        "destruct n;simpl;Esimpl;rewrite pow_pos_add;Esimpl.",
                        "VernacExtend",
                        "532b26eb9c3e75b7d765e02e84ad3973dfc6803f"
                    ]
                },
                {
                    "command": [
                        "add_permut; mul_permut.",
                        "VernacExtend",
                        "6dd978d982ae62474c75f69102c93be642c09474"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pphi_avoid_ok",
            "line_nb": 769,
            "steps": [
                {
                    "command": [
                        "unfold Pphi_avoid;intros;rewrite mult_dev_ok;simpl;Esimpl.",
                        "VernacExtend",
                        "b57d3d0c97ca3f0b6150ce3e297eefcc76db252f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "local_mkpow_ok",
            "line_nb": 774,
            "steps": [
                {
                    "command": [
                        "destruct p; now rewrite ?pow_th.(rpow_pow_N).",
                        "VernacExtend",
                        "3d0e60eada15dbad3c69ee06086b22bdd3f197fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pphi_pow_ok",
            "line_nb": 777,
            "steps": [
                {
                    "command": [
                        "unfold Pphi_pow;intros;apply Pphi_avoid_ok;intros; now rewrite ?local_mkpow_ok.",
                        "VernacExtend",
                        "477ef578a73c77dfcb63bb6bf80a5d12e09dd277"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ring_rw_pow_correct",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "intros n lH l H1 lmp Heq1 pe npe Heq2.",
                        "VernacExtend",
                        "175c1de964262d223b3b1f0f7fbe5a8ef70a9cf1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pphi_pow_ok, <- Heq2, <- Heq1.",
                        "VernacExtend",
                        "51395b10c6d805ea2f15375e9228f41186140058"
                    ]
                },
                {
                    "command": [
                        "apply norm_subst_ok.",
                        "VernacExtend",
                        "b1d53ccbb116be7215062e4394555bc7f36c1268"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkmult_pow_ok",
            "line_nb": 790,
            "steps": [
                {
                    "command": [
                        "revert r; induction p;intros;simpl;Esimpl;rewrite !IHp;Esimpl.",
                        "VernacExtend",
                        "da99a6a9b9d4870269a413e326e8012ec8080afb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkpow_ok",
            "line_nb": 793,
            "steps": [
                {
                    "command": [
                        "destruct p;simpl;intros;Esimpl.",
                        "VernacExtend",
                        "731736a06eaecf4d2ee0196b8d1464e584b93e57"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !mkmult_pow_ok;Esimpl.",
                        "VernacExtend",
                        "768f7c66f1022770de47c4d02b6250eae239ff8d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_pow_ok;Esimpl.",
                        "VernacExtend",
                        "6e9578474fbbcb016c9da285a0ef00201a48c3e4"
                    ]
                },
                {
                    "command": [
                        "change x with (x^1) at 1.",
                        "VernacExtend",
                        "ca7ae09174d4b57b31eeb1dda3e429b19098c46b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double.",
                        "VernacExtend",
                        "5adc68bdf47f8cc9b29698a4e2e1bdb053445d89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mkopp_pow_ok",
            "line_nb": 802,
            "steps": [
                {
                    "command": [
                        "destruct p;simpl;intros;Esimpl.",
                        "VernacExtend",
                        "731736a06eaecf4d2ee0196b8d1464e584b93e57"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite !mkmult_pow_ok;Esimpl.",
                        "VernacExtend",
                        "768f7c66f1022770de47c4d02b6250eae239ff8d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite mkmult_pow_ok;Esimpl.",
                        "VernacExtend",
                        "6e9578474fbbcb016c9da285a0ef00201a48c3e4"
                    ]
                },
                {
                    "command": [
                        "change x with (x^1) at 1.",
                        "VernacExtend",
                        "ca7ae09174d4b57b31eeb1dda3e429b19098c46b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double.",
                        "VernacExtend",
                        "5adc68bdf47f8cc9b29698a4e2e1bdb053445d89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pphi_dev_ok",
            "line_nb": 811,
            "steps": [
                {
                    "command": [
                        "unfold Pphi_dev;intros;apply Pphi_avoid_ok.",
                        "VernacExtend",
                        "8174586140a29b78ec14c76d3fd5367225291ac5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros;apply mkpow_ok.",
                        "VernacExtend",
                        "27bd88cdbb95dcdb897b43869fefd43f132b47f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros;apply mkopp_pow_ok.",
                        "VernacExtend",
                        "8b68c69035f0bb244fd80779f65b5e92fe5eea8b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros;apply mkmult_pow_ok.",
                        "VernacExtend",
                        "f300c7ef753e6b0e081f16cba44a4f995427d5c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ring_rw_correct",
            "line_nb": 820,
            "steps": [
                {
                    "command": [
                        "intros n lH l H1 lmp Heq1 pe npe Heq2.",
                        "VernacExtend",
                        "175c1de964262d223b3b1f0f7fbe5a8ef70a9cf1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pphi_dev_ok.",
                        "VernacExtend",
                        "a294afc3a94b5d5e2a4580885e1cc11fc90d74db"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq2;rewrite <- Heq1.",
                        "VernacExtend",
                        "63709ed4b9704b246ec27d76eb83f222ebc95ed0"
                    ]
                },
                {
                    "command": [
                        "apply norm_subst_ok.",
                        "VernacExtend",
                        "b1d53ccbb116be7215062e4394555bc7f36c1268"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}