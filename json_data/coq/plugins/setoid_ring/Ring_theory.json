{
    "filename": "plugins/setoid_ring/Ring_theory.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Setoid Morphisms BinPos BinNat.",
            "VernacRequire",
            "a35ef9be19515d9f7525b8a7939517928219b9cc"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Module RingSyntax.",
            "VernacDefineModule",
            "f9d8601964b1efb00e8f5252d3fc500c43ffa850"
        ],
        [
            "Reserved Notation \"x ?=! y\" (at level 70, no associativity).",
            "VernacSyntaxExtension",
            "f1ad7d5888e83d4de094c418ce163c96ed939e36"
        ],
        [
            "Reserved Notation \"x +! y \" (at level 50, left associativity).",
            "VernacSyntaxExtension",
            "aa42582763c68174b8455f3c66030e78899bac9d"
        ],
        [
            "Reserved Notation \"x -! y\" (at level 50, left associativity).",
            "VernacSyntaxExtension",
            "1299ce03c538930a1c84549b830ec6754bb8b2ab"
        ],
        [
            "Reserved Notation \"x *! y\" (at level 40, left associativity).",
            "VernacSyntaxExtension",
            "c3832ff2a006faa64419af21a3d318ad796b8a3e"
        ],
        [
            "Reserved Notation \"-! x\" (at level 35, right associativity).",
            "VernacSyntaxExtension",
            "f207425b3f4053396c20a8901b26d19a9934614d"
        ],
        [
            "Reserved Notation \"[ x ]\" (at level 0).",
            "VernacSyntaxExtension",
            "8b9a90c272eb83b57e4fac653555a0ba2afb914d"
        ],
        [
            "Reserved Notation \"x ?== y\" (at level 70, no associativity).",
            "VernacSyntaxExtension",
            "d90fd8da88c53fb757bac013a498937c5ac62e48"
        ],
        [
            "Reserved Notation \"x -- y\" (at level 50, left associativity).",
            "VernacSyntaxExtension",
            "b6d76718fb0a1bcd1f833ff0134d1bf351a36149"
        ],
        [
            "Reserved Notation \"x ** y\" (at level 40, left associativity).",
            "VernacSyntaxExtension",
            "e8a39aa3c847e9084d10fac14722e09ffce34aba"
        ],
        [
            "Reserved Notation \"-- x\" (at level 35, right associativity).",
            "VernacSyntaxExtension",
            "fb02270792a85fe561dc87135fe6bd5296065020"
        ],
        [
            "Reserved Notation \"x == y\" (at level 70, no associativity).",
            "VernacSyntaxExtension",
            "ca330818a7f68d6763b588ece4e670a52f2ef8e7"
        ],
        [
            "End RingSyntax.",
            "VernacEndSegment",
            "505651640a89933984f2f034e1b6dfe08c88f963"
        ],
        [
            "Import RingSyntax.",
            "VernacImport",
            "7f261a6392aca26015067a3647e3f6338ae01946"
        ],
        [
            "Section Power.",
            "VernacBeginSection",
            "1648acf7fc38adcf8e3509008f4bba453baa80bc"
        ],
        [
            "Variable R:Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable rI : R.",
            "VernacAssumption",
            "29c6a30abdc80bb52e1b6d21b8ce4eadd53aec65"
        ],
        [
            "Variable rmul : R -> R -> R.",
            "VernacAssumption",
            "c9ba605f57a830ed6db43b793f625e519c710ad8"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Variable Rsth : Equivalence req.",
            "VernacAssumption",
            "20ed60052394a47f0d325623f53a5a192ba34e99"
        ],
        [
            "Infix \"*\" := rmul.",
            "VernacInfix",
            "d40503ef057e2b599482389864cf8bd6b0fe4206"
        ],
        [
            "Infix \"==\" := req.",
            "VernacInfix",
            "2b92d9dc3f08d6b9e8a5e2f78f2d0bb11480cea1"
        ],
        [
            "Hypothesis mul_ext : Proper (req ==> req ==> req) rmul.",
            "VernacAssumption",
            "a79bfc990f2ef7f5fe17bd3ee77bb9d551d28eb2"
        ],
        [
            "Hypothesis mul_assoc : forall x y z, x * (y * z) == (x * y) * z.",
            "VernacAssumption",
            "751aa553b7aa6e3e78135176ab6d8da1682a43ca"
        ],
        [
            "Fixpoint pow_pos (x:R) (i:positive) : R := match i with | xH => x | xO i => let p := pow_pos x i in p * p | xI i => let p := pow_pos x i in x * (p * p) end.",
            "VernacFixpoint",
            "a68bbd673c974df8bd1f9d7bb5c3133b7a414542"
        ],
        [
            "Lemma pow_pos_swap x j : pow_pos x j * x == x * pow_pos x j.",
            "VernacStartTheoremProof",
            "accfb15f59b9d505c310074b481ba6151c71596c"
        ],
        [
            "induction j; simpl; rewrite <- ?mul_assoc.",
            "VernacExtend",
            "ea731203390162944c2bb0e3a18939f70aa5b471"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "now do 2 (rewrite IHj, mul_assoc).",
            "VernacExtend",
            "89043e3e71d52f950eb43f29f1d42131f391da4b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now do 2 (rewrite IHj, mul_assoc).",
            "VernacExtend",
            "89043e3e71d52f950eb43f29f1d42131f391da4b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_pos_succ x j : pow_pos x (Pos.succ j) == x * pow_pos x j.",
            "VernacStartTheoremProof",
            "0aedbb2b90e72fe82444c6e851cf6702b3b65d8c"
        ],
        [
            "induction j; simpl; try reflexivity.",
            "VernacExtend",
            "15ad98982f8b003282588b897fcac1ddf73aa0da"
        ],
        [
            "rewrite IHj, <- mul_assoc; f_equiv.",
            "VernacExtend",
            "7f56a0df15783aa1201ca61d93fbb3d22ff74cdb"
        ],
        [
            "now rewrite mul_assoc, pow_pos_swap, mul_assoc.",
            "VernacExtend",
            "0439165dce1309c2d00b9761da09c499270f0a10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_pos_add x i j : pow_pos x (i + j) == pow_pos x i * pow_pos x j.",
            "VernacStartTheoremProof",
            "e619f59f21cb5dccf9dd18df5427dfe1d71b8f5e"
        ],
        [
            "induction i using Pos.peano_ind.",
            "VernacExtend",
            "2332b75eabb41aea189bb6526b7ac633425f888a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Pos.add_1_l, pow_pos_succ.",
            "VernacExtend",
            "f586cc17502a1173cfd88c50a511e69b3d71a186"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Pos.add_succ_l, !pow_pos_succ, IHi, mul_assoc.",
            "VernacExtend",
            "6559d7b9c0d8e0c7ad69169d69b62e6bc4c26f10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pow_N (x:R) (p:N) := match p with | N0 => rI | Npos p => pow_pos x p end.",
            "VernacDefinition",
            "99a0a9b5b305f5957e0b14fe2c08633bcdf5432a"
        ],
        [
            "Definition id_phi_N (x:N) : N := x.",
            "VernacDefinition",
            "c4f2873425bc287b2954c2a616ae027e2f244059"
        ],
        [
            "Lemma pow_N_pow_N x n : pow_N x (id_phi_N n) == pow_N x n.",
            "VernacStartTheoremProof",
            "49537c3568e70cae83886176a9aea7ce5423e33d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Power.",
            "VernacEndSegment",
            "c00f2e5263c816548d3cb0b411cdc24b9696b4f2"
        ],
        [
            "Section DEFINITIONS.",
            "VernacBeginSection",
            "d3ae4e29a0be180d0d0a36636bb0d92702c3fad5"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable (rO rI : R) (radd rmul rsub: R->R->R) (ropp : R -> R).",
            "VernacAssumption",
            "50301ed65bb665fbf3206555d45afa28de31a677"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Infix \"==\" := req.",
            "VernacInfix",
            "2b92d9dc3f08d6b9e8a5e2f78f2d0bb11480cea1"
        ],
        [
            "Infix \"+\" := radd.",
            "VernacInfix",
            "733e797454fc5e8be56c95f6ba97dfe464843e19"
        ],
        [
            "Infix \"*\" := rmul.",
            "VernacInfix",
            "d40503ef057e2b599482389864cf8bd6b0fe4206"
        ],
        [
            "Infix \"-\" := rsub.",
            "VernacInfix",
            "aaeb2ffd0eb1159e58e13723bc14dcf32ee50d98"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Record semi_ring_theory : Prop := mk_srt { SRadd_0_l : forall n, 0 + n == n; SRadd_comm : forall n m, n + m == m + n ; SRadd_assoc : forall n m p, n + (m + p) == (n + m) + p; SRmul_1_l : forall n, 1*n == n; SRmul_0_l : forall n, 0*n == 0; SRmul_comm : forall n m, n*m == m*n; SRmul_assoc : forall n m p, n*(m*p) == (n*m)*p; SRdistr_l : forall n m p, (n + m)*p == n*p + m*p }.",
            "VernacInductive",
            "b392fdee699c14778df3c2e7a737c7645e38dc76"
        ],
        [
            "Record almost_ring_theory : Prop := mk_art { ARadd_0_l : forall x, 0 + x == x; ARadd_comm : forall x y, x + y == y + x; ARadd_assoc : forall x y z, x + (y + z) == (x + y) + z; ARmul_1_l : forall x, 1 * x == x; ARmul_0_l : forall x, 0 * x == 0; ARmul_comm : forall x y, x * y == y * x; ARmul_assoc : forall x y z, x * (y * z) == (x * y) * z; ARdistr_l : forall x y z, (x + y) * z == (x * z) + (y * z); ARopp_mul_l : forall x y, -(x * y) == -x * y; ARopp_add : forall x y, -(x + y) == -x + -y; ARsub_def : forall x y, x - y == x + -y }.",
            "VernacInductive",
            "35af81654da0362610272533437f5d63d20c5201"
        ],
        [
            "Record ring_theory : Prop := mk_rt { Radd_0_l : forall x, 0 + x == x; Radd_comm : forall x y, x + y == y + x; Radd_assoc : forall x y z, x + (y + z) == (x + y) + z; Rmul_1_l : forall x, 1 * x == x; Rmul_comm : forall x y, x * y == y * x; Rmul_assoc : forall x y z, x * (y * z) == (x * y) * z; Rdistr_l : forall x y z, (x + y) * z == (x * z) + (y * z); Rsub_def : forall x y, x - y == x + -y; Ropp_def : forall x, x + (- x) == 0 }.",
            "VernacInductive",
            "2577ff59715857964d11ebc51280766dbe711244"
        ],
        [
            "Record sring_eq_ext : Prop := mk_seqe { SRadd_ext : Proper (req ==> req ==> req) radd; SRmul_ext : Proper (req ==> req ==> req) rmul }.",
            "VernacInductive",
            "f693984a7407ffee6ff8f7bda4fbc265e926ce4c"
        ],
        [
            "Record ring_eq_ext : Prop := mk_reqe { Radd_ext : Proper (req ==> req ==> req) radd; Rmul_ext : Proper (req ==> req ==> req) rmul; Ropp_ext : Proper (req ==> req) ropp }.",
            "VernacInductive",
            "db7d75f54c915092f9588cb179674c8d13452100"
        ],
        [
            "Section MORPHISM.",
            "VernacBeginSection",
            "e00c20bda0634b48c3489d6842e5793730fbdd1b"
        ],
        [
            "Variable C:Type.",
            "VernacAssumption",
            "20108330110ebb6b9192d426d25380e8d6116c8b"
        ],
        [
            "Variable (cO cI : C) (cadd cmul csub : C->C->C) (copp : C->C).",
            "VernacAssumption",
            "bfa62f3a9631380cb7efd09a44874a01c790d7ff"
        ],
        [
            "Variable ceqb : C->C->bool.",
            "VernacAssumption",
            "35a22dd496fc6b7fe19894000aee0239eb0f0bda"
        ],
        [
            "Variable phi : C -> R.",
            "VernacAssumption",
            "e58164e03041ba7f39504a5dad80f8da633ddfef"
        ],
        [
            "Infix \"+!\" := cadd.",
            "VernacInfix",
            "6dda017337f5eb51274096d5bf0bfccc55b7a5ec"
        ],
        [
            "Infix \"-!\" := csub.",
            "VernacInfix",
            "813125188308e3a36dc3acf8ae854ba61689ce2e"
        ],
        [
            "Infix \"*!\" := cmul.",
            "VernacInfix",
            "8eb425f75079ffbe882ff21ef964da411c9f8de3"
        ],
        [
            "Notation \"-! x\" := (copp x).",
            "VernacNotation",
            "13d70e8d6b543ba5509537e48337c4c8c4a3bf15"
        ],
        [
            "Infix \"?=!\" := ceqb.",
            "VernacInfix",
            "08eb2917aa9e612935fa198437c3d7a320fd7a97"
        ],
        [
            "Notation \"[ x ]\" := (phi x).",
            "VernacNotation",
            "91bc5a9755ba6e30832bd0e414486cfc7ca96b69"
        ],
        [
            "Record semi_morph : Prop := mkRmorph { Smorph0 : [cO] == 0; Smorph1 : [cI] == 1; Smorph_add : forall x y, [x +! y] == [x]+[y]; Smorph_mul : forall x y, [x *! y] == [x]*[y]; Smorph_eq : forall x y, x?=!y = true -> [x] == [y] }.",
            "VernacInductive",
            "2fb88551e001c02576e69ee7de6f6635fcf84bc4"
        ],
        [
            "Record ring_morph : Prop := mkmorph { morph0 : [cO] == 0; morph1 : [cI] == 1; morph_add : forall x y, [x +! y] == [x]+[y]; morph_sub : forall x y, [x -! y] == [x]-[y]; morph_mul : forall x y, [x *! y] == [x]*[y]; morph_opp : forall x, [-!x] == -[x]; morph_eq : forall x y, x?=!y = true -> [x] == [y] }.",
            "VernacInductive",
            "63f8d34dbece71ab1ca81d033147bcec85e017d6"
        ],
        [
            "Section SIGN.",
            "VernacBeginSection",
            "a83a2191f175855d0d3acc1a445363d5f3768677"
        ],
        [
            "Variable get_sign : C -> option C.",
            "VernacAssumption",
            "7585f1ec166275a1d7cc2b4ebe2f6179eb9375a9"
        ],
        [
            "Record sign_theory : Prop := mksign_th { sign_spec : forall c c', get_sign c = Some c' -> c ?=! -! c' = true }.",
            "VernacInductive",
            "3c17a7430b86c035fd9604e629b2b9cb36b1698e"
        ],
        [
            "End SIGN.",
            "VernacEndSegment",
            "a2d2268164b13ec4101df04eeca6df8a31f777a6"
        ],
        [
            "Definition get_sign_None (c:C) := @None C.",
            "VernacDefinition",
            "fe2ef232147de52bca5b75eb229c302d105e8e30"
        ],
        [
            "Lemma get_sign_None_th : sign_theory get_sign_None.",
            "VernacStartTheoremProof",
            "478d82a965c545aca0b04c0351f460986f641f6b"
        ],
        [
            "constructor;intros;discriminate.",
            "VernacExtend",
            "3983aff25e360d630a1d7da31403d9cc5a6947d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section DIV.",
            "VernacBeginSection",
            "fd1de618eb0f256cc59d1d75c8b117f9ec245b1f"
        ],
        [
            "Variable cdiv: C -> C -> C*C.",
            "VernacAssumption",
            "85ea4cf89205f28e2da5ea4324582aa1198ab573"
        ],
        [
            "Record div_theory : Prop := mkdiv_th { div_eucl_th : forall a b, let (q,r) := cdiv a b in [a] == [b *! q +! r] }.",
            "VernacInductive",
            "766dd82d6ea345a323cc14e1ddf0e85997c1f208"
        ],
        [
            "End DIV.",
            "VernacEndSegment",
            "679b498972fb28578bbab8d6318bb5dc4802847e"
        ],
        [
            "End MORPHISM.",
            "VernacEndSegment",
            "3e61d6ddf1dc799134568c08d66adcaccc0817a3"
        ],
        [
            "Variable Rsth : Equivalence req.",
            "VernacAssumption",
            "20ed60052394a47f0d325623f53a5a192ba34e99"
        ],
        [
            "Variable reqb : R->R->bool.",
            "VernacAssumption",
            "bb96d8f916d3ecdcbfb2e0f3722638444bdfa17e"
        ],
        [
            "Hypothesis morph_req : forall x y, (reqb x y) = true -> x == y.",
            "VernacAssumption",
            "a5f102eefd44c4594dd978455408b5f303d32970"
        ],
        [
            "Definition IDphi (x:R) := x.",
            "VernacDefinition",
            "fefb56f70bc6066f6f8312c07e32a34ad24ac9ae"
        ],
        [
            "Lemma IDmorph : ring_morph rO rI radd rmul rsub ropp reqb IDphi.",
            "VernacStartTheoremProof",
            "4f589b1fcdbaf16ee15a7b7225d35bed7eaf1190"
        ],
        [
            "now apply (mkmorph rO rI radd rmul rsub ropp reqb IDphi).",
            "VernacExtend",
            "31ccaaf6592e785366447dabe82dda275d33fb5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section POWER.",
            "VernacBeginSection",
            "4cbff9f31bc6c48f94b2b047e6336188b9621dbd"
        ],
        [
            "Variable Cpow : Type.",
            "VernacAssumption",
            "5fd9d8de545804dabbc08bc1dec757d9e3e7c2bb"
        ],
        [
            "Variable Cp_phi : N -> Cpow.",
            "VernacAssumption",
            "bea2e2988dc807fdffafaf2835667b12ed4e7397"
        ],
        [
            "Variable rpow : R -> Cpow -> R.",
            "VernacAssumption",
            "a43abdf13b67e4b90b48ab8ad717c69813dfbc76"
        ],
        [
            "Record power_theory : Prop := mkpow_th { rpow_pow_N : forall r n, req (rpow r (Cp_phi n)) (pow_N rI rmul r n) }.",
            "VernacInductive",
            "e90bbdd64577ebfb078b86724d3b987f694899e5"
        ],
        [
            "End POWER.",
            "VernacEndSegment",
            "c38c78c82b185eb23b32ef8f88c91de8dc389e4e"
        ],
        [
            "Definition pow_N_th := mkpow_th id_phi_N (pow_N rI rmul) (pow_N_pow_N rI rmul Rsth).",
            "VernacDefinition",
            "34445aa90dbc17ef2247a9f143a0f51e6ab479b6"
        ],
        [
            "End DEFINITIONS.",
            "VernacEndSegment",
            "5582cc4bb3144278e183f79581345bae5e252338"
        ],
        [
            "Section ALMOST_RING.",
            "VernacBeginSection",
            "cd3c4fac74a93c444f27019e3c7a4273918e66be"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable (rO rI : R) (radd rmul rsub: R->R->R) (ropp : R -> R).",
            "VernacAssumption",
            "50301ed65bb665fbf3206555d45afa28de31a677"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Infix \"==\" := req.",
            "VernacInfix",
            "2b92d9dc3f08d6b9e8a5e2f78f2d0bb11480cea1"
        ],
        [
            "Infix \"+\" := radd.",
            "VernacInfix",
            "733e797454fc5e8be56c95f6ba97dfe464843e19"
        ],
        [
            "Infix \"* \" := rmul.",
            "VernacInfix",
            "61a28ffcdd094f582d4b4c8772f3fc2d66c0df8b"
        ],
        [
            "Lemma Eqsth : Equivalence (@eq R).",
            "VernacStartTheoremProof",
            "43c22eaa40f1384b48313b73d41e461ecd47730d"
        ],
        [
            "exact eq_equivalence.",
            "VernacExtend",
            "0284bb84ffd1439d1cd57b680a9997aac8853828"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Eq_s_ext : sring_eq_ext radd rmul (@eq R).",
            "VernacStartTheoremProof",
            "57aec739fa00b2254dcb929fc0d48aa72605b824"
        ],
        [
            "constructor;solve_proper.",
            "VernacExtend",
            "c1e9c7590fcb36a8bd4d54ff3825ba103ba11747"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Eq_ext : ring_eq_ext radd rmul ropp (@eq R).",
            "VernacStartTheoremProof",
            "c72760eb19930c1c3755baf73f54074216c12c91"
        ],
        [
            "constructor;solve_proper.",
            "VernacExtend",
            "c1e9c7590fcb36a8bd4d54ff3825ba103ba11747"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable Rsth : Equivalence req.",
            "VernacAssumption",
            "20ed60052394a47f0d325623f53a5a192ba34e99"
        ],
        [
            "Section SEMI_RING.",
            "VernacBeginSection",
            "cc00ab40bf51ddee98a18c48db0ec10db8bbb7c2"
        ],
        [
            "Variable SReqe : sring_eq_ext radd rmul req.",
            "VernacAssumption",
            "c3e8828d7363c048ebf09ce8e55368dd9fa9fd6d"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext1.",
            "VernacExtend",
            "0faf8c06ea183f2d2934e2a8f9f980eec94daf55"
        ],
        [
            "exact (SRadd_ext SReqe).",
            "VernacExtend",
            "fa8fadeeb1582276f8768a9b88ee15fc02bb2b11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext1.",
            "VernacExtend",
            "0958260345d1235ae2a64dfb11458eba7f54725e"
        ],
        [
            "exact (SRmul_ext SReqe).",
            "VernacExtend",
            "ae96db69dd0cea4487652123df4f77db97c4760f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable SRth : semi_ring_theory 0 1 radd rmul req.",
            "VernacAssumption",
            "7412789093e082322b6cf126330f0e636886f09d"
        ],
        [
            "Definition SRopp (x:R) := x.",
            "VernacDefinition",
            "a6154c3799214b3a6fdaef098c1f74fab5f7040d"
        ],
        [
            "Notation \"- x\" := (SRopp x).",
            "VernacNotation",
            "1c72e8f08cc59f00b86d3da88ae6baae4a0c60c7"
        ],
        [
            "Definition SRsub x y := x + -y.",
            "VernacDefinition",
            "b2b6aba4c0ec8fd0175eeb606f0faf034084cbb1"
        ],
        [
            "Infix \"-\" := SRsub.",
            "VernacInfix",
            "e5bb8ace81b94ee0752142429db4f61138c5441e"
        ],
        [
            "Lemma SRopp_ext : forall x y, x == y -> -x == -y.",
            "VernacStartTheoremProof",
            "57550406659d2a3cd9bbd53df71cb69ef7fa4ace"
        ],
        [
            "intros x y H; exact H.",
            "VernacExtend",
            "ed81333b04c97f6280a82ff66253f299e9c1c8cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SReqe_Reqe : ring_eq_ext radd rmul SRopp req.",
            "VernacStartTheoremProof",
            "e1cd940614b73151d8ad5ec724b606455f223e2f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact (SRadd_ext SReqe).",
            "VernacExtend",
            "fa8fadeeb1582276f8768a9b88ee15fc02bb2b11"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact (SRmul_ext SReqe).",
            "VernacExtend",
            "ae96db69dd0cea4487652123df4f77db97c4760f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact SRopp_ext.",
            "VernacExtend",
            "9a620829892a5dd98da90e4be265a381440a9180"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SRopp_mul_l : forall x y, -(x * y) == -x * y.",
            "VernacStartTheoremProof",
            "d74b943dad021cddd80b7df04047ca9da39f49f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SRopp_add : forall x y, -(x + y) == -x + -y.",
            "VernacStartTheoremProof",
            "3d815a4e597fd5cbfc2fc1c6cb9335ab70c7d945"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SRsub_def : forall x y, x - y == x + -y.",
            "VernacStartTheoremProof",
            "fee019f1f834518007c9a5811c69f57e9e30088b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SRth_ARth : almost_ring_theory 0 1 radd rmul SRsub SRopp req.",
            "VernacStartTheoremProof",
            "89a7c4b2b9c6e21da97bfb15f128bb4687a19dc5"
        ],
        [
            "Proof (mk_art 0 1 radd rmul SRsub SRopp req (SRadd_0_l SRth) (SRadd_comm SRth) (SRadd_assoc SRth) (SRmul_1_l SRth) (SRmul_0_l SRth) (SRmul_comm SRth) (SRmul_assoc SRth) (SRdistr_l SRth) SRopp_mul_l SRopp_add SRsub_def).",
            "VernacExactProof",
            "e925df9f3eaeb4bd174adf0818cc324e05c27148"
        ],
        [
            "Variable reqb : R->R->bool.",
            "VernacAssumption",
            "bb96d8f916d3ecdcbfb2e0f3722638444bdfa17e"
        ],
        [
            "Hypothesis morph_req : forall x y, (reqb x y) = true -> x == y.",
            "VernacAssumption",
            "a5f102eefd44c4594dd978455408b5f303d32970"
        ],
        [
            "Definition SRIDmorph : ring_morph 0 1 radd rmul SRsub SRopp req 0 1 radd rmul SRsub SRopp reqb (@IDphi R).",
            "VernacDefinition",
            "514e12fc3b9574c4957992b2cf0eb05b56ef1613"
        ],
        [
            "now apply mkmorph.",
            "VernacExtend",
            "31b1fe9fe2503ff448e962e1b44fbb231c4f50fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable C : Type.",
            "VernacAssumption",
            "20108330110ebb6b9192d426d25380e8d6116c8b"
        ],
        [
            "Variable (cO cI : C) (cadd cmul: C->C->C).",
            "VernacAssumption",
            "48b8d72b0342c9e4fa58de718b62a706265777da"
        ],
        [
            "Variable (ceqb : C -> C -> bool).",
            "VernacAssumption",
            "35a22dd496fc6b7fe19894000aee0239eb0f0bda"
        ],
        [
            "Variable phi : C -> R.",
            "VernacAssumption",
            "e58164e03041ba7f39504a5dad80f8da633ddfef"
        ],
        [
            "Variable Smorph : semi_morph rO rI radd rmul req cO cI cadd cmul ceqb phi.",
            "VernacAssumption",
            "659f5e9becfee6b5542713b76c61b3e75ddcb3f6"
        ],
        [
            "Lemma SRmorph_Rmorph : ring_morph rO rI radd rmul SRsub SRopp req cO cI cadd cmul cadd (fun x => x) ceqb phi.",
            "VernacStartTheoremProof",
            "f9ad10b51f5f7a353bd5572940b3468fe66bcc8e"
        ],
        [
            "case Smorph; now constructor.",
            "VernacExtend",
            "537de55f5a27922fc4815a930927b1024d3a7822"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SEMI_RING.",
            "VernacEndSegment",
            "bb69e11568e7baf3329685bef9e0b6358dd58ccc"
        ],
        [
            "Infix \"-\" := rsub.",
            "VernacInfix",
            "aaeb2ffd0eb1159e58e13723bc14dcf32ee50d98"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Variable Reqe : ring_eq_ext radd rmul ropp req.",
            "VernacAssumption",
            "2490789f2fd55b52c058faf984f76ae57e3f5ca4"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext2.",
            "VernacExtend",
            "2deb7f27ad0bc54488ef5f517b49fca9bd776197"
        ],
        [
            "exact (Radd_ext Reqe).",
            "VernacExtend",
            "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext2.",
            "VernacExtend",
            "6b257aabf6d69398b51510a488af4cfbccffd8df"
        ],
        [
            "exact (Rmul_ext Reqe).",
            "VernacExtend",
            "13b3093566a735d2e3348ba5dd18427edb19cc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism ropp with signature (req ==> req) as ropp_ext2.",
            "VernacExtend",
            "2dd8390694b287a7dad0f83f317e353885fc5d88"
        ],
        [
            "exact (Ropp_ext Reqe).",
            "VernacExtend",
            "e013460b2ed7bdd11390b3f84aa58078462220c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section RING.",
            "VernacBeginSection",
            "d44dd20d8f3c5efe416c0ff1e0f1253ff522cf32"
        ],
        [
            "Variable Rth : ring_theory 0 1 radd rmul rsub ropp req.",
            "VernacAssumption",
            "637623b1ecbcc2a9a90b7577df75c7b58a014bc7"
        ],
        [
            "Lemma Rmul_0_l x : 0 * x == 0.",
            "VernacStartTheoremProof",
            "2c5214cb16a8b93fb0ccc739682880c6b58d3d10"
        ],
        [
            "setoid_replace (0*x) with ((0+1)*x + -x).",
            "VernacExtend",
            "a46756670478ca6186f4572762edebf8def2dc7d"
        ],
        [
            "now rewrite (Radd_0_l Rth), (Rmul_1_l Rth), (Ropp_def Rth).",
            "VernacExtend",
            "5a303ea8f929df99774cac8af135d86886c1fd01"
        ],
        [
            "rewrite (Rdistr_l Rth), (Rmul_1_l Rth).",
            "VernacExtend",
            "25e5d270a768a0733e2564f1e6b0a48eaf618cef"
        ],
        [
            "rewrite <- (Radd_assoc Rth), (Ropp_def Rth).",
            "VernacExtend",
            "9cec805b61bf0c098318cefed37fe86e4743d343"
        ],
        [
            "now rewrite (Radd_comm Rth), (Radd_0_l Rth).",
            "VernacExtend",
            "8546c6c66e22fcbaf20c0c04bed1ca7f2a84d321"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ropp_mul_l x y : -(x * y) == -x * y.",
            "VernacStartTheoremProof",
            "d4ec82759f83d05c865704f3dd1c50181f30900f"
        ],
        [
            "rewrite <-(Radd_0_l Rth (- x * y)).",
            "VernacExtend",
            "5db911c3999f42283bfc5154184a8b52d18b7f24"
        ],
        [
            "rewrite (Radd_comm Rth), <-(Ropp_def Rth (x*y)).",
            "VernacExtend",
            "35b5a7d525f2dbfe712fd5ace3aac660c395e9f9"
        ],
        [
            "rewrite (Radd_assoc Rth), <- (Rdistr_l Rth).",
            "VernacExtend",
            "0e9c4946921bb7a07010606fdf36460de7d5e92e"
        ],
        [
            "rewrite (Rth.(Radd_comm) (-x)), (Ropp_def Rth).",
            "VernacExtend",
            "ec15e8dfb82c217530e506e6d2367c13b2a2bf6e"
        ],
        [
            "now rewrite Rmul_0_l, (Radd_0_l Rth).",
            "VernacExtend",
            "df35124c0e2752f59a2e08abdd9caa489d9a2883"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ropp_add x y : -(x + y) == -x + -y.",
            "VernacStartTheoremProof",
            "a824ea2c19bccdad8b9dc1790a38630277677064"
        ],
        [
            "rewrite <- ((Radd_0_l Rth) (-(x+y))).",
            "VernacExtend",
            "abd6bf02acb7d9071e80822cf46097b471abc15f"
        ],
        [
            "rewrite <- ((Ropp_def Rth) x).",
            "VernacExtend",
            "54a088162e0c10dfff9693cd663cf614a67c2621"
        ],
        [
            "rewrite <- ((Radd_0_l Rth) (x + - x + - (x + y))).",
            "VernacExtend",
            "5da140b6556941f8f325fb291c6569408fbef2e4"
        ],
        [
            "rewrite <- ((Ropp_def Rth) y).",
            "VernacExtend",
            "f87ed69a6ddb6fb0ea4beeafbd542a3a01d272e6"
        ],
        [
            "rewrite ((Radd_comm Rth) x).",
            "VernacExtend",
            "116129ccaab7c193b219b81ce9e57e54d3820e85"
        ],
        [
            "rewrite ((Radd_comm Rth) y).",
            "VernacExtend",
            "95a5f783324298dcfd2c4b28e573162e99bf77e1"
        ],
        [
            "rewrite <- ((Radd_assoc Rth) (-y)).",
            "VernacExtend",
            "bcb661c74eed69919491cd5e0aeacb018da4364a"
        ],
        [
            "rewrite <- ((Radd_assoc Rth) (- x)).",
            "VernacExtend",
            "ff67bd8bec23190c1ac7b18b3e588b78a647d41d"
        ],
        [
            "rewrite ((Radd_assoc Rth) y).",
            "VernacExtend",
            "92ebb73f5dd10e01f0cfe917f6a66e78259c8917"
        ],
        [
            "rewrite ((Radd_comm Rth) y).",
            "VernacExtend",
            "95a5f783324298dcfd2c4b28e573162e99bf77e1"
        ],
        [
            "rewrite <- ((Radd_assoc Rth) (- x)).",
            "VernacExtend",
            "ff67bd8bec23190c1ac7b18b3e588b78a647d41d"
        ],
        [
            "rewrite ((Radd_assoc Rth) y).",
            "VernacExtend",
            "92ebb73f5dd10e01f0cfe917f6a66e78259c8917"
        ],
        [
            "rewrite ((Radd_comm Rth) y), (Ropp_def Rth).",
            "VernacExtend",
            "33dffda7699d8c4d783ca951ba05852b19064fb8"
        ],
        [
            "rewrite ((Radd_comm Rth) (-x) 0), (Radd_0_l Rth).",
            "VernacExtend",
            "1da1fee1eae029370ab6fec6303faeaa1fc370a6"
        ],
        [
            "now apply (Radd_comm Rth).",
            "VernacExtend",
            "439abbc047b74d050975923e7c14b11f38d41734"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ropp_opp x : - -x == x.",
            "VernacStartTheoremProof",
            "20c8db8e65f84f665a10b266c7c04cb815044f63"
        ],
        [
            "rewrite <- (Radd_0_l Rth (- -x)).",
            "VernacExtend",
            "ad92f8082c916dbe7a5cfdadbbca4196e7c842d9"
        ],
        [
            "rewrite <- (Ropp_def Rth x).",
            "VernacExtend",
            "972f5bcecbb575c2e39a8dee48356417e699570f"
        ],
        [
            "rewrite <- (Radd_assoc Rth), (Ropp_def Rth).",
            "VernacExtend",
            "9cec805b61bf0c098318cefed37fe86e4743d343"
        ],
        [
            "rewrite ((Radd_comm Rth) x); now apply (Radd_0_l Rth).",
            "VernacExtend",
            "27d7a4f30ff5edf2b994707338f79e38c5fac0e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rth_ARth : almost_ring_theory 0 1 radd rmul rsub ropp req.",
            "VernacStartTheoremProof",
            "8b2fe9bf616533c493643ffe4925eb03b3d8258b"
        ],
        [
            "Proof (mk_art 0 1 radd rmul rsub ropp req (Radd_0_l Rth) (Radd_comm Rth) (Radd_assoc Rth) (Rmul_1_l Rth) Rmul_0_l (Rmul_comm Rth) (Rmul_assoc Rth) (Rdistr_l Rth) Ropp_mul_l Ropp_add (Rsub_def Rth)).",
            "VernacExactProof",
            "953e4914fd1463feb3022490d4f6d7a38f125128"
        ],
        [
            "Variable C : Type.",
            "VernacAssumption",
            "20108330110ebb6b9192d426d25380e8d6116c8b"
        ],
        [
            "Variable (cO cI : C) (cadd cmul csub: C->C->C) (copp : C -> C).",
            "VernacAssumption",
            "bfa62f3a9631380cb7efd09a44874a01c790d7ff"
        ],
        [
            "Variable (ceq : C -> C -> Prop) (ceqb : C -> C -> bool).",
            "VernacAssumption",
            "e696ea4e37742258d494bb005e2878898eb9cea5"
        ],
        [
            "Variable phi : C -> R.",
            "VernacAssumption",
            "e58164e03041ba7f39504a5dad80f8da633ddfef"
        ],
        [
            "Infix \"+!\" := cadd.",
            "VernacInfix",
            "6dda017337f5eb51274096d5bf0bfccc55b7a5ec"
        ],
        [
            "Infix \"*!\" := cmul.",
            "VernacInfix",
            "8eb425f75079ffbe882ff21ef964da411c9f8de3"
        ],
        [
            "Infix \"-!\" := csub.",
            "VernacInfix",
            "813125188308e3a36dc3acf8ae854ba61689ce2e"
        ],
        [
            "Notation \"-! x\" := (copp x).",
            "VernacNotation",
            "13d70e8d6b543ba5509537e48337c4c8c4a3bf15"
        ],
        [
            "Notation \"?=!\" := ceqb.",
            "VernacNotation",
            "307860cc6d5df409bacbf259774cd2b60301e754"
        ],
        [
            "Notation \"[ x ]\" := (phi x).",
            "VernacNotation",
            "91bc5a9755ba6e30832bd0e414486cfc7ca96b69"
        ],
        [
            "Variable Csth : Equivalence ceq.",
            "VernacAssumption",
            "b58a408d437f88a72aae6b159aef6612d67ab9b5"
        ],
        [
            "Variable Ceqe : ring_eq_ext cadd cmul copp ceq.",
            "VernacAssumption",
            "e879788afac5b1cfb952e7cc9481a5276199db2e"
        ],
        [
            "Add Parametric Relation : C ceq reflexivity proved by Csth.(@Equivalence_Reflexive _ _) symmetry proved by Csth.(@Equivalence_Symmetric _ _) transitivity proved by Csth.(@Equivalence_Transitive _ _) as C_setoid.",
            "VernacExtend",
            "30b74d6bdfd0bfeed3a9f28acbea2fb0eb311e4b"
        ],
        [
            "Add Morphism cadd with signature (ceq ==> ceq ==> ceq) as cadd_ext.",
            "VernacExtend",
            "cea4b172edf0ce9c28cc42009b2f79501dfca9c5"
        ],
        [
            "exact (Radd_ext Ceqe).",
            "VernacExtend",
            "3ddaef81f745eacfbfac6edee5ca97d41ecd4a7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism cmul with signature (ceq ==> ceq ==> ceq) as cmul_ext.",
            "VernacExtend",
            "3b43a9ee5e0f28cb6516ecd3a2aebd9347e9e9bd"
        ],
        [
            "exact (Rmul_ext Ceqe).",
            "VernacExtend",
            "f6efe037a3d2a97309dd9f044f20d84f0b7d17fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism copp with signature (ceq ==> ceq) as copp_ext.",
            "VernacExtend",
            "c5b415722b39d49a65ab0499e02ed55416942b29"
        ],
        [
            "exact (Ropp_ext Ceqe).",
            "VernacExtend",
            "03b964330c18f1b1af912862af43776c28ceed7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable Cth : ring_theory cO cI cadd cmul csub copp ceq.",
            "VernacAssumption",
            "a4bac8968d83c5eec34d88f58914d04605fd43cd"
        ],
        [
            "Variable Smorph : semi_morph 0 1 radd rmul req cO cI cadd cmul ceqb phi.",
            "VernacAssumption",
            "6ba52fea8642c5d61c13df277c0268e52ec4d73d"
        ],
        [
            "Variable phi_ext : forall x y, ceq x y -> [x] == [y].",
            "VernacAssumption",
            "39c1fea49a8cbb90d693b4696280f14af03c81a3"
        ],
        [
            "Add Morphism phi with signature (ceq ==> req) as phi_ext1.",
            "VernacExtend",
            "e01d3b8830dabaae1e7d4dd91c03b4433cd4a33c"
        ],
        [
            "exact phi_ext.",
            "VernacExtend",
            "e21fb6ab27c96e0ee906fad62b86e2f25439fc76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Smorph_opp x : [-!x] == -[x].",
            "VernacStartTheoremProof",
            "6d05185b84b340a8f2efdf0aace5157e34767520"
        ],
        [
            "rewrite <- (Rth.(Radd_0_l) [-!x]).",
            "VernacExtend",
            "b9dc231b3a6e1e51f40cda2c1a63198ed645f5dd"
        ],
        [
            "rewrite <- ((Ropp_def Rth) [x]).",
            "VernacExtend",
            "194e472e0f0264e941bca59d7f425be0b6b70a20"
        ],
        [
            "rewrite ((Radd_comm Rth) [x]).",
            "VernacExtend",
            "3b96e579810ceadd3c65125c936c0570a544a5c3"
        ],
        [
            "rewrite <- (Radd_assoc Rth).",
            "VernacExtend",
            "d710dcdce231d519887f2e41dfbbeadf26a88e81"
        ],
        [
            "rewrite <- (Smorph_add Smorph).",
            "VernacExtend",
            "33f551203f0d3d2db01d8f9347f44839c07e1d86"
        ],
        [
            "rewrite (Ropp_def Cth).",
            "VernacExtend",
            "4da941f218be5b8e7d25716bd8722611778bcf70"
        ],
        [
            "rewrite (Smorph0 Smorph).",
            "VernacExtend",
            "9fc9078585d14645db61cc1673b2b28891bae314"
        ],
        [
            "rewrite (Radd_comm Rth (-[x])).",
            "VernacExtend",
            "78ffe547e62629c66695340f98c3c79e5a6ae392"
        ],
        [
            "now apply (Radd_0_l Rth).",
            "VernacExtend",
            "87c1f37ff59659486e8888a3dba828261e614790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Smorph_sub x y : [x -! y] == [x] - [y].",
            "VernacStartTheoremProof",
            "694702fb5a49a10633f93fd30fdbfea407765519"
        ],
        [
            "rewrite (Rsub_def Cth), (Rsub_def Rth).",
            "VernacExtend",
            "14acb87ac81464f6566b890e19c144f13b4f09e7"
        ],
        [
            "now rewrite (Smorph_add Smorph), Smorph_opp.",
            "VernacExtend",
            "35fcd77795e68d6a5971c0ceebc0efdacf52bde4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Smorph_morph : ring_morph 0 1 radd rmul rsub ropp req cO cI cadd cmul csub copp ceqb phi.",
            "VernacStartTheoremProof",
            "a17881854240f0c51edc4f03ab20d0489c8d5f1c"
        ],
        [
            "Proof (mkmorph 0 1 radd rmul rsub ropp req cO cI cadd cmul csub copp ceqb phi (Smorph0 Smorph) (Smorph1 Smorph) (Smorph_add Smorph) Smorph_sub (Smorph_mul Smorph) Smorph_opp (Smorph_eq Smorph)).",
            "VernacExactProof",
            "a34a222a163fd2c7f7120fbaf237cf5134716501"
        ],
        [
            "End RING.",
            "VernacEndSegment",
            "d304cb1ad387c1314c8dbbbd548bd0e69b2300a9"
        ],
        [
            "Variable ARth : almost_ring_theory 0 1 radd rmul rsub ropp req.",
            "VernacAssumption",
            "421152d5013c2ca15573273d19425258db41b4b5"
        ],
        [
            "Lemma ARth_SRth : semi_ring_theory 0 1 radd rmul req.",
            "VernacStartTheoremProof",
            "a540a7bb71442e250b6db30be5ce00a04631fa42"
        ],
        [
            "elim ARth; intros.",
            "VernacExtend",
            "e07702f29c838b0e92af9f06f6da59d9307365da"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance ARsub_ext : Proper (req ==> req ==> req) rsub.",
            "VernacInstance",
            "9f24ddb72adad306b8ba1c11684b755e0c2c4bba"
        ],
        [
            "intros x1 x2 Ex y1 y2 Ey.",
            "VernacExtend",
            "dce0377c442c5313a37fa426f559b96769ad0349"
        ],
        [
            "now rewrite !(ARsub_def ARth), Ex, Ey.",
            "VernacExtend",
            "3b4ac11dcf1867a52c20c813e3f176dbec32721c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac mrewrite := repeat first [ rewrite (ARadd_0_l ARth) | rewrite <- ((ARadd_comm ARth) 0) | rewrite (ARmul_1_l ARth) | rewrite <- ((ARmul_comm ARth) 1) | rewrite (ARmul_0_l ARth) | rewrite <- ((ARmul_comm ARth) 0) | rewrite (ARdistr_l ARth) | reflexivity | match goal with | |- context [?z * (?x + ?y)] => rewrite ((ARmul_comm ARth) z (x+y)) end].",
            "VernacExtend",
            "c7db601209c70e642777144498240a3955b84840"
        ],
        [
            "Lemma ARadd_0_r x : x + 0 == x.",
            "VernacStartTheoremProof",
            "68dd42d5073ef04e772387b134d3f662d20d368c"
        ],
        [
            "mrewrite.",
            "VernacExtend",
            "c633bf866db143a3adc9c9035771402ae3e734a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARmul_1_r x : x * 1 == x.",
            "VernacStartTheoremProof",
            "b5c7388c2740adc23acfe8fdadc4177964c73157"
        ],
        [
            "mrewrite.",
            "VernacExtend",
            "c633bf866db143a3adc9c9035771402ae3e734a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARmul_0_r x : x * 0 == 0.",
            "VernacStartTheoremProof",
            "efa4734b9c27860244a4f77500ebe2542dd1cd40"
        ],
        [
            "mrewrite.",
            "VernacExtend",
            "c633bf866db143a3adc9c9035771402ae3e734a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARdistr_r x y z : z * (x + y) == z*x + z*y.",
            "VernacStartTheoremProof",
            "0e7b019cb5cfc2d73277ac214d222ef61ed194af"
        ],
        [
            "mrewrite.",
            "VernacExtend",
            "c633bf866db143a3adc9c9035771402ae3e734a1"
        ],
        [
            "now rewrite !(ARth.(ARmul_comm) z).",
            "VernacExtend",
            "df3e3d260c21e8e8f820ce7544063d1227bc07bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARadd_assoc1 x y z : (x + y) + z == (y + z) + x.",
            "VernacStartTheoremProof",
            "0dd3d80798aef8376afdef2007a69704654c8338"
        ],
        [
            "now rewrite <-(ARth.(ARadd_assoc) x), (ARth.(ARadd_comm) x).",
            "VernacExtend",
            "29dd228eb507daac28613a3041725afa7636bc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARadd_assoc2 x y z : (y + x) + z == (y + z) + x.",
            "VernacStartTheoremProof",
            "3f55601f757ffe0635046bcf0b8aefc6822648f8"
        ],
        [
            "now rewrite <- !(ARadd_assoc ARth), ((ARadd_comm ARth) x).",
            "VernacExtend",
            "3340cfce9e344332875e55251bed1ea143460169"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARmul_assoc1 x y z : (x * y) * z == (y * z) * x.",
            "VernacStartTheoremProof",
            "fb450656ac3ab4e89c76f790ce19be9fcd44cb0e"
        ],
        [
            "now rewrite <- ((ARmul_assoc ARth) x), ((ARmul_comm ARth) x).",
            "VernacExtend",
            "38a3bdcb7edd58916065014713e5700418cd815c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARmul_assoc2 x y z : (y * x) * z == (y * z) * x.",
            "VernacStartTheoremProof",
            "7f7a862e7376cf55567fc93af12934f33666b6b0"
        ],
        [
            "now rewrite <- !(ARmul_assoc ARth), ((ARmul_comm ARth) x).",
            "VernacExtend",
            "e386fc4065be0c2d63c02a20507e507946149edf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARopp_mul_r x y : - (x * y) == x * -y.",
            "VernacStartTheoremProof",
            "d03ebb7cf9535204e90d9b8da9be139ee8b9532e"
        ],
        [
            "rewrite ((ARmul_comm ARth) x y), (ARopp_mul_l ARth).",
            "VernacExtend",
            "e22204423398797dae6efd392ebd929acc5ac631"
        ],
        [
            "now apply (ARmul_comm ARth).",
            "VernacExtend",
            "4c73c0403d0de74666304c0bba6c24c28f33df17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARopp_zero : -0 == 0.",
            "VernacStartTheoremProof",
            "a06eca5c195db423380900f122df53f097fbb9c9"
        ],
        [
            "now rewrite <- (ARmul_0_r 0), (ARopp_mul_l ARth), !ARmul_0_r.",
            "VernacExtend",
            "1ddb92806069a48199c61104fdb11b993a0ec16d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ALMOST_RING.",
            "VernacEndSegment",
            "198d56ae9077df3d8a7159d2c2e3538d35997725"
        ],
        [
            "Section AddRing.",
            "VernacBeginSection",
            "5088ffbc448e0406abfee7176159d45d08cf458e"
        ],
        [
            "Inductive ring_kind : Type := | Abstract | Computational (R:Type) (req : R -> R -> Prop) (reqb : R -> R -> bool) (_ : forall x y, (reqb x y) = true -> req x y) | Morphism (R : Type) (rO rI : R) (radd rmul rsub: R->R->R) (ropp : R -> R) (req : R -> R -> Prop) (C : Type) (cO cI : C) (cadd cmul csub : C->C->C) (copp : C->C) (ceqb : C->C->bool) phi (_ : ring_morph rO rI radd rmul rsub ropp req cO cI cadd cmul csub copp ceqb phi).",
            "VernacInductive",
            "d6aadfc0530565dc29b60ebebdb38d6254ac4d3a"
        ],
        [
            "End AddRing.",
            "VernacEndSegment",
            "d7dbb2901a97b92d0d8b7c965c72d266816201fa"
        ],
        [
            "Ltac gen_reflexivity Rsth := apply (Seq_refl _ _ Rsth).",
            "VernacExtend",
            "d468f67b8be3a4134e2fbc7751c3de87fa163c73"
        ],
        [
            "Ltac gen_srewrite Rsth Reqe ARth := repeat first [ gen_reflexivity Rsth | progress rewrite (ARopp_zero Rsth Reqe ARth) | rewrite (ARadd_0_l ARth) | rewrite (ARadd_0_r Rsth ARth) | rewrite (ARmul_1_l ARth) | rewrite (ARmul_1_r Rsth ARth) | rewrite (ARmul_0_l ARth) | rewrite (ARmul_0_r Rsth ARth) | rewrite (ARdistr_l ARth) | rewrite (ARdistr_r Rsth Reqe ARth) | rewrite (ARadd_assoc ARth) | rewrite (ARmul_assoc ARth) | progress rewrite (ARopp_add ARth) | progress rewrite (ARsub_def ARth) | progress rewrite <- (ARopp_mul_l ARth) | progress rewrite <- (ARopp_mul_r Rsth Reqe ARth) ].",
            "VernacExtend",
            "cf1306195eaff52d2f3e8cde539ea31567b18657"
        ],
        [
            "Ltac gen_srewrite_sr Rsth Reqe ARth := repeat first [ gen_reflexivity Rsth | progress rewrite (ARopp_zero Rsth Reqe ARth) | rewrite (ARadd_0_l ARth) | rewrite (ARadd_0_r Rsth ARth) | rewrite (ARmul_1_l ARth) | rewrite (ARmul_1_r Rsth ARth) | rewrite (ARmul_0_l ARth) | rewrite (ARmul_0_r Rsth ARth) | rewrite (ARdistr_l ARth) | rewrite (ARdistr_r Rsth Reqe ARth) | rewrite (ARadd_assoc ARth) | rewrite (ARmul_assoc ARth) ].",
            "VernacExtend",
            "255d8c337f9fb196ae02649002f12a75c9bc219a"
        ],
        [
            "Ltac gen_add_push add Rsth Reqe ARth x := repeat (match goal with | |- context [add (add ?y x) ?z] => progress rewrite (ARadd_assoc2 Rsth Reqe ARth x y z) | |- context [add (add x ?y) ?z] => progress rewrite (ARadd_assoc1 Rsth ARth x y z) | |- context [(add x ?y)] => progress rewrite (ARadd_comm ARth x y) end).",
            "VernacExtend",
            "b427bb0be50ac13b823c8a606ad0cfb44f6be893"
        ],
        [
            "Ltac gen_mul_push mul Rsth Reqe ARth x := repeat (match goal with | |- context [mul (mul ?y x) ?z] => progress rewrite (ARmul_assoc2 Rsth Reqe ARth x y z) | |- context [mul (mul x ?y) ?z] => progress rewrite (ARmul_assoc1 Rsth ARth x y z) | |- context [(mul x ?y)] => progress rewrite (ARmul_comm ARth x y) end).",
            "VernacExtend",
            "966b725ba7721f2eb2e481a7aed72fa0c835f41e"
        ]
    ],
    "proofs": [
        {
            "name": "pow_pos_swap",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "induction j; simpl; rewrite <- ?mul_assoc.",
                        "VernacExtend",
                        "ea731203390162944c2bb0e3a18939f70aa5b471"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "now do 2 (rewrite IHj, mul_assoc).",
                        "VernacExtend",
                        "89043e3e71d52f950eb43f29f1d42131f391da4b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now do 2 (rewrite IHj, mul_assoc).",
                        "VernacExtend",
                        "89043e3e71d52f950eb43f29f1d42131f391da4b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_pos_succ",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "induction j; simpl; try reflexivity.",
                        "VernacExtend",
                        "15ad98982f8b003282588b897fcac1ddf73aa0da"
                    ]
                },
                {
                    "command": [
                        "rewrite IHj, <- mul_assoc; f_equiv.",
                        "VernacExtend",
                        "7f56a0df15783aa1201ca61d93fbb3d22ff74cdb"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_assoc, pow_pos_swap, mul_assoc.",
                        "VernacExtend",
                        "0439165dce1309c2d00b9761da09c499270f0a10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_pos_add",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "induction i using Pos.peano_ind.",
                        "VernacExtend",
                        "2332b75eabb41aea189bb6526b7ac633425f888a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_1_l, pow_pos_succ.",
                        "VernacExtend",
                        "f586cc17502a1173cfd88c50a511e69b3d71a186"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_succ_l, !pow_pos_succ, IHi, mul_assoc.",
                        "VernacExtend",
                        "6559d7b9c0d8e0c7ad69169d69b62e6bc4c26f10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_N_pow_N",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_sign_None_th",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "constructor;intros;discriminate.",
                        "VernacExtend",
                        "3983aff25e360d630a1d7da31403d9cc5a6947d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IDmorph",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "now apply (mkmorph rO rI radd rmul rsub ropp reqb IDphi).",
                        "VernacExtend",
                        "31ccaaf6592e785366447dabe82dda275d33fb5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Eqsth",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "exact eq_equivalence.",
                        "VernacExtend",
                        "0284bb84ffd1439d1cd57b680a9997aac8853828"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Eq_s_ext",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "constructor;solve_proper.",
                        "VernacExtend",
                        "c1e9c7590fcb36a8bd4d54ff3825ba103ba11747"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Eq_ext",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "constructor;solve_proper.",
                        "VernacExtend",
                        "c1e9c7590fcb36a8bd4d54ff3825ba103ba11747"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radd_ext1_Proper",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "exact (SRadd_ext SReqe).",
                        "VernacExtend",
                        "fa8fadeeb1582276f8768a9b88ee15fc02bb2b11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext1_Proper",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "exact (SRmul_ext SReqe).",
                        "VernacExtend",
                        "ae96db69dd0cea4487652123df4f77db97c4760f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SRopp_ext",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros x y H; exact H.",
                        "VernacExtend",
                        "ed81333b04c97f6280a82ff66253f299e9c1c8cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SReqe_Reqe",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact (SRadd_ext SReqe).",
                        "VernacExtend",
                        "fa8fadeeb1582276f8768a9b88ee15fc02bb2b11"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact (SRmul_ext SReqe).",
                        "VernacExtend",
                        "ae96db69dd0cea4487652123df4f77db97c4760f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact SRopp_ext.",
                        "VernacExtend",
                        "9a620829892a5dd98da90e4be265a381440a9180"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SRopp_mul_l",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SRopp_add",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SRsub_def",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SRIDmorph",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "now apply mkmorph.",
                        "VernacExtend",
                        "31b1fe9fe2503ff448e962e1b44fbb231c4f50fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SRmorph_Rmorph",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "case Smorph; now constructor.",
                        "VernacExtend",
                        "537de55f5a27922fc4815a930927b1024d3a7822"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radd_ext2_Proper",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Reqe).",
                        "VernacExtend",
                        "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext2_Proper",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Reqe).",
                        "VernacExtend",
                        "13b3093566a735d2e3348ba5dd18427edb19cc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ropp_ext2_Proper",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "exact (Ropp_ext Reqe).",
                        "VernacExtend",
                        "e013460b2ed7bdd11390b3f84aa58078462220c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmul_0_l",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "setoid_replace (0*x) with ((0+1)*x + -x).",
                        "VernacExtend",
                        "a46756670478ca6186f4572762edebf8def2dc7d"
                    ]
                },
                {
                    "command": [
                        "now rewrite (Radd_0_l Rth), (Rmul_1_l Rth), (Ropp_def Rth).",
                        "VernacExtend",
                        "5a303ea8f929df99774cac8af135d86886c1fd01"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rdistr_l Rth), (Rmul_1_l Rth).",
                        "VernacExtend",
                        "25e5d270a768a0733e2564f1e6b0a48eaf618cef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Radd_assoc Rth), (Ropp_def Rth).",
                        "VernacExtend",
                        "9cec805b61bf0c098318cefed37fe86e4743d343"
                    ]
                },
                {
                    "command": [
                        "now rewrite (Radd_comm Rth), (Radd_0_l Rth).",
                        "VernacExtend",
                        "8546c6c66e22fcbaf20c0c04bed1ca7f2a84d321"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_mul_l",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "rewrite <-(Radd_0_l Rth (- x * y)).",
                        "VernacExtend",
                        "5db911c3999f42283bfc5154184a8b52d18b7f24"
                    ]
                },
                {
                    "command": [
                        "rewrite (Radd_comm Rth), <-(Ropp_def Rth (x*y)).",
                        "VernacExtend",
                        "35b5a7d525f2dbfe712fd5ace3aac660c395e9f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Radd_assoc Rth), <- (Rdistr_l Rth).",
                        "VernacExtend",
                        "0e9c4946921bb7a07010606fdf36460de7d5e92e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rth.(Radd_comm) (-x)), (Ropp_def Rth).",
                        "VernacExtend",
                        "ec15e8dfb82c217530e506e6d2367c13b2a2bf6e"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmul_0_l, (Radd_0_l Rth).",
                        "VernacExtend",
                        "df35124c0e2752f59a2e08abdd9caa489d9a2883"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_add",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "rewrite <- ((Radd_0_l Rth) (-(x+y))).",
                        "VernacExtend",
                        "abd6bf02acb7d9071e80822cf46097b471abc15f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Ropp_def Rth) x).",
                        "VernacExtend",
                        "54a088162e0c10dfff9693cd663cf614a67c2621"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Radd_0_l Rth) (x + - x + - (x + y))).",
                        "VernacExtend",
                        "5da140b6556941f8f325fb291c6569408fbef2e4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Ropp_def Rth) y).",
                        "VernacExtend",
                        "f87ed69a6ddb6fb0ea4beeafbd542a3a01d272e6"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) x).",
                        "VernacExtend",
                        "116129ccaab7c193b219b81ce9e57e54d3820e85"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) y).",
                        "VernacExtend",
                        "95a5f783324298dcfd2c4b28e573162e99bf77e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Radd_assoc Rth) (-y)).",
                        "VernacExtend",
                        "bcb661c74eed69919491cd5e0aeacb018da4364a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Radd_assoc Rth) (- x)).",
                        "VernacExtend",
                        "ff67bd8bec23190c1ac7b18b3e588b78a647d41d"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_assoc Rth) y).",
                        "VernacExtend",
                        "92ebb73f5dd10e01f0cfe917f6a66e78259c8917"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) y).",
                        "VernacExtend",
                        "95a5f783324298dcfd2c4b28e573162e99bf77e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Radd_assoc Rth) (- x)).",
                        "VernacExtend",
                        "ff67bd8bec23190c1ac7b18b3e588b78a647d41d"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_assoc Rth) y).",
                        "VernacExtend",
                        "92ebb73f5dd10e01f0cfe917f6a66e78259c8917"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) y), (Ropp_def Rth).",
                        "VernacExtend",
                        "33dffda7699d8c4d783ca951ba05852b19064fb8"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) (-x) 0), (Radd_0_l Rth).",
                        "VernacExtend",
                        "1da1fee1eae029370ab6fec6303faeaa1fc370a6"
                    ]
                },
                {
                    "command": [
                        "now apply (Radd_comm Rth).",
                        "VernacExtend",
                        "439abbc047b74d050975923e7c14b11f38d41734"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_opp",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "rewrite <- (Radd_0_l Rth (- -x)).",
                        "VernacExtend",
                        "ad92f8082c916dbe7a5cfdadbbca4196e7c842d9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_def Rth x).",
                        "VernacExtend",
                        "972f5bcecbb575c2e39a8dee48356417e699570f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Radd_assoc Rth), (Ropp_def Rth).",
                        "VernacExtend",
                        "9cec805b61bf0c098318cefed37fe86e4743d343"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) x); now apply (Radd_0_l Rth).",
                        "VernacExtend",
                        "27d7a4f30ff5edf2b994707338f79e38c5fac0e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cadd_ext_Proper",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Ceqe).",
                        "VernacExtend",
                        "3ddaef81f745eacfbfac6edee5ca97d41ecd4a7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cmul_ext_Proper",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Ceqe).",
                        "VernacExtend",
                        "f6efe037a3d2a97309dd9f044f20d84f0b7d17fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "copp_ext_Proper",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "exact (Ropp_ext Ceqe).",
                        "VernacExtend",
                        "03b964330c18f1b1af912862af43776c28ceed7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_ext1_Proper",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "exact phi_ext.",
                        "VernacExtend",
                        "e21fb6ab27c96e0ee906fad62b86e2f25439fc76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Smorph_opp",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "rewrite <- (Rth.(Radd_0_l) [-!x]).",
                        "VernacExtend",
                        "b9dc231b3a6e1e51f40cda2c1a63198ed645f5dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ((Ropp_def Rth) [x]).",
                        "VernacExtend",
                        "194e472e0f0264e941bca59d7f425be0b6b70a20"
                    ]
                },
                {
                    "command": [
                        "rewrite ((Radd_comm Rth) [x]).",
                        "VernacExtend",
                        "3b96e579810ceadd3c65125c936c0570a544a5c3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Radd_assoc Rth).",
                        "VernacExtend",
                        "d710dcdce231d519887f2e41dfbbeadf26a88e81"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Smorph_add Smorph).",
                        "VernacExtend",
                        "33f551203f0d3d2db01d8f9347f44839c07e1d86"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_def Cth).",
                        "VernacExtend",
                        "4da941f218be5b8e7d25716bd8722611778bcf70"
                    ]
                },
                {
                    "command": [
                        "rewrite (Smorph0 Smorph).",
                        "VernacExtend",
                        "9fc9078585d14645db61cc1673b2b28891bae314"
                    ]
                },
                {
                    "command": [
                        "rewrite (Radd_comm Rth (-[x])).",
                        "VernacExtend",
                        "78ffe547e62629c66695340f98c3c79e5a6ae392"
                    ]
                },
                {
                    "command": [
                        "now apply (Radd_0_l Rth).",
                        "VernacExtend",
                        "87c1f37ff59659486e8888a3dba828261e614790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Smorph_sub",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "rewrite (Rsub_def Cth), (Rsub_def Rth).",
                        "VernacExtend",
                        "14acb87ac81464f6566b890e19c144f13b4f09e7"
                    ]
                },
                {
                    "command": [
                        "now rewrite (Smorph_add Smorph), Smorph_opp.",
                        "VernacExtend",
                        "35fcd77795e68d6a5971c0ceebc0efdacf52bde4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARth_SRth",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "elim ARth; intros.",
                        "VernacExtend",
                        "e07702f29c838b0e92af9f06f6da59d9307365da"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARsub_ext",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros x1 x2 Ex y1 y2 Ey.",
                        "VernacExtend",
                        "dce0377c442c5313a37fa426f559b96769ad0349"
                    ]
                },
                {
                    "command": [
                        "now rewrite !(ARsub_def ARth), Ex, Ey.",
                        "VernacExtend",
                        "3b4ac11dcf1867a52c20c813e3f176dbec32721c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARadd_0_r",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "mrewrite.",
                        "VernacExtend",
                        "c633bf866db143a3adc9c9035771402ae3e734a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARmul_1_r",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "mrewrite.",
                        "VernacExtend",
                        "c633bf866db143a3adc9c9035771402ae3e734a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARmul_0_r",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "mrewrite.",
                        "VernacExtend",
                        "c633bf866db143a3adc9c9035771402ae3e734a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARdistr_r",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "mrewrite.",
                        "VernacExtend",
                        "c633bf866db143a3adc9c9035771402ae3e734a1"
                    ]
                },
                {
                    "command": [
                        "now rewrite !(ARth.(ARmul_comm) z).",
                        "VernacExtend",
                        "df3e3d260c21e8e8f820ce7544063d1227bc07bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARadd_assoc1",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "now rewrite <-(ARth.(ARadd_assoc) x), (ARth.(ARadd_comm) x).",
                        "VernacExtend",
                        "29dd228eb507daac28613a3041725afa7636bc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARadd_assoc2",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "now rewrite <- !(ARadd_assoc ARth), ((ARadd_comm ARth) x).",
                        "VernacExtend",
                        "3340cfce9e344332875e55251bed1ea143460169"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARmul_assoc1",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "now rewrite <- ((ARmul_assoc ARth) x), ((ARmul_comm ARth) x).",
                        "VernacExtend",
                        "38a3bdcb7edd58916065014713e5700418cd815c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARmul_assoc2",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "now rewrite <- !(ARmul_assoc ARth), ((ARmul_comm ARth) x).",
                        "VernacExtend",
                        "e386fc4065be0c2d63c02a20507e507946149edf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARopp_mul_r",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "rewrite ((ARmul_comm ARth) x y), (ARopp_mul_l ARth).",
                        "VernacExtend",
                        "e22204423398797dae6efd392ebd929acc5ac631"
                    ]
                },
                {
                    "command": [
                        "now apply (ARmul_comm ARth).",
                        "VernacExtend",
                        "4c73c0403d0de74666304c0bba6c24c28f33df17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARopp_zero",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "now rewrite <- (ARmul_0_r 0), (ARopp_mul_l ARth), !ARmul_0_r.",
                        "VernacExtend",
                        "1ddb92806069a48199c61104fdb11b993a0ec16d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}