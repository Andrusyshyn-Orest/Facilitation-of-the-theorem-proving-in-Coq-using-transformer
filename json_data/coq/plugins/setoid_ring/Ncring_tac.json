{
    "filename": "plugins/setoid_ring/Ncring_tac.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require Import BinPos.",
            "VernacRequire",
            "7c55565b460199c72b57cc90a030257b88ff5053"
        ],
        [
            "Require Import BinList.",
            "VernacRequire",
            "e751dc388c71f6800f28ecd650757ae18e0f642b"
        ],
        [
            "Require Import Znumtheory.",
            "VernacRequire",
            "b0019a4f65c83089c27581d981ae8f6e0b66ab58"
        ],
        [
            "Require Export Morphisms Setoid Bool.",
            "VernacRequire",
            "6309751f4495f15da5fdb2ec330b40341d5cda07"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Require Import Algebra_syntax.",
            "VernacRequire",
            "88512942f3778bef3af4b65f2022eb46011379c6"
        ],
        [
            "Require Export Ncring.",
            "VernacRequire",
            "57164a06389b17fb2b25c7ef3046050fb3322b5a"
        ],
        [
            "Require Import Ncring_polynom.",
            "VernacRequire",
            "90a0ca0f12453a3ec2abbef9425484d461443a4e"
        ],
        [
            "Require Import Ncring_initial.",
            "VernacRequire",
            "e29c2e8e2dbfaac676e945d291a385ee9746bd5d"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Class nth (R:Type) (t:R) (l:list R) (i:nat).",
            "VernacInductive",
            "08d6d4dfeae1a19540694d26f0f7e64d114a8d0e"
        ],
        [
            "Instance Ifind0 (R:Type) (t:R) l : nth t(t::l) 0.",
            "VernacInstance",
            "50a6b3c918f1f34c196e1f4ea87dd0910c481b7e"
        ],
        [
            "Instance IfindS (R:Type) (t2 t1:R) l i {_:nth t1 l i} : nth t1 (t2::l) (S i) | 1.",
            "VernacInstance",
            "ae733195f8a1b9616ee6ca61686a1a8501daa9e7"
        ],
        [
            "Class closed (T:Type) (l:list T).",
            "VernacInductive",
            "0f9082fd4392e8166011d1745feb82f71ee56fe5"
        ],
        [
            "Instance Iclosed_nil T : closed (T:=T) nil.",
            "VernacInstance",
            "d62263c7322ae14b2e4496843f589306bef58fc0"
        ],
        [
            "Instance Iclosed_cons T t (l:list T) {_:closed l} : closed (t::l).",
            "VernacInstance",
            "42086ccedb630f48a088ef63d223ea9b03e0cae5"
        ],
        [
            "Class reify (R:Type)`{Rr:Ring (T:=R)} (e:PExpr Z) (lvar:list R) (t:R).",
            "VernacInductive",
            "8286ff4136520522912633588b03c19a7cc3d852"
        ],
        [
            "Instance reify_zero (R:Type) lvar op `{Ring (T:=R)(ring0:=op)} : reify (ring0:=op)(PEc 0%Z) lvar op.",
            "VernacInstance",
            "b23c0c55932f5e5b29f56b9ee83a0bc26adac9f4"
        ],
        [
            "Instance reify_one (R:Type) lvar op `{Ring (T:=R)(ring1:=op)} : reify (ring1:=op) (PEc 1%Z) lvar op.",
            "VernacInstance",
            "e2567a7bd5a678691209c7de3bbfc5778486a6bf"
        ],
        [
            "Instance reifyZ0 (R:Type) lvar `{Ring (T:=R)} : reify (PEc Z0) lvar Z0|11.",
            "VernacInstance",
            "3dd1041fcf81f58b7e7f3da37e7adc390db506e2"
        ],
        [
            "Instance reifyZpos (R:Type) lvar (p:positive) `{Ring (T:=R)} : reify (PEc (Zpos p)) lvar (Zpos p)|11.",
            "VernacInstance",
            "1d23079c973f2873932297e2147cc1bc8809a82b"
        ],
        [
            "Instance reifyZneg (R:Type) lvar (p:positive) `{Ring (T:=R)} : reify (PEc (Zneg p)) lvar (Zneg p)|11.",
            "VernacInstance",
            "45cd6cc0dcfc06636b8878987a8262e572707a84"
        ],
        [
            "Instance reify_add (R:Type) e1 lvar t1 e2 t2 op `{Ring (T:=R)(add:=op)} {_:reify (add:=op) e1 lvar t1} {_:reify (add:=op) e2 lvar t2} : reify (add:=op) (PEadd e1 e2) lvar (op t1 t2).",
            "VernacInstance",
            "6554598a4cc553aeb4d0a65808cde3ee93d9c63c"
        ],
        [
            "Instance reify_mul (R:Type) e1 lvar t1 e2 t2 op `{Ring (T:=R)(mul:=op)} {_:reify (mul:=op) e1 lvar t1} {_:reify (mul:=op) e2 lvar t2} : reify (mul:=op) (PEmul e1 e2) lvar (op t1 t2)|10.",
            "VernacInstance",
            "97fcd939ef36c3dd174502824d461273c3f56fc2"
        ],
        [
            "Instance reify_mul_ext (R:Type) `{Ring R} lvar (z:Z) e2 t2 `{Ring (T:=R)} {_:reify e2 lvar t2} : reify (PEmul (PEc z) e2) lvar (@multiplication Z _ _ z t2)|9.",
            "VernacInstance",
            "d6c4f0d76f64919c00abf58d9f150adc66e5e44d"
        ],
        [
            "Instance reify_sub (R:Type) e1 lvar t1 e2 t2 op `{Ring (T:=R)(sub:=op)} {_:reify (sub:=op) e1 lvar t1} {_:reify (sub:=op) e2 lvar t2} : reify (sub:=op) (PEsub e1 e2) lvar (op t1 t2).",
            "VernacInstance",
            "f37d78e4e38f76ef86cb0c8160bae4f662477dad"
        ],
        [
            "Instance reify_opp (R:Type) e1 lvar t1 op `{Ring (T:=R)(opp:=op)} {_:reify (opp:=op) e1 lvar t1} : reify (opp:=op) (PEopp e1) lvar (op t1).",
            "VernacInstance",
            "ac68a3917764670262d8fa5c7d1e89864844471b"
        ],
        [
            "Instance reify_pow (R:Type) `{Ring R} e1 lvar t1 n `{Ring (T:=R)} {_:reify e1 lvar t1} : reify (PEpow e1 n) lvar (pow_N t1 n)|1.",
            "VernacInstance",
            "1f7e3879ffd4ba24cc21008b36e9fd04a68b9a2c"
        ],
        [
            "Instance reify_var (R:Type) t lvar i `{nth R t lvar i} `{Rr: Ring (T:=R)} : reify (Rr:= Rr) (PEX Z (Pos.of_succ_nat i))lvar t | 100.",
            "VernacInstance",
            "aa26153fc17b2655a416c63fa2b82cb4c3beca43"
        ],
        [
            "Class reifylist (R:Type)`{Rr:Ring (T:=R)} (lexpr:list (PExpr Z)) (lvar:list R) (lterm:list R).",
            "VernacInductive",
            "dad1a04aa76937576e4f95e182ad87f64c43091a"
        ],
        [
            "Instance reify_nil (R:Type) lvar `{Rr: Ring (T:=R)} : reifylist (Rr:= Rr) nil lvar (@nil R).",
            "VernacInstance",
            "50b6be6125e0e94911c6060773083f1e50cf4590"
        ],
        [
            "Instance reify_cons (R:Type) e1 lvar t1 lexpr2 lterm2 `{Rr: Ring (T:=R)} {_:reify (Rr:= Rr) e1 lvar t1} {_:reifylist (Rr:= Rr) lexpr2 lvar lterm2} : reifylist (Rr:= Rr) (e1::lexpr2) lvar (t1::lterm2).",
            "VernacInstance",
            "40391ed700fd665d1ca6f1e8bcc0d4a68829d06c"
        ],
        [
            "Definition list_reifyl (R:Type) lexpr lvar lterm `{Rr: Ring (T:=R)} {_:reifylist (Rr:= Rr) lexpr lvar lterm} `{closed (T:=R) lvar} := (lvar,lexpr).",
            "VernacDefinition",
            "b663b868be2c114672f87118011c628b25030fac"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Ltac lterm_goal g := match g with | ?t1 == ?t2 => constr:(t1::t2::nil) | ?t1 = ?t2 => constr:(t1::t2::nil) | (_ ?t1 ?t2) => constr:(t1::t2::nil) end.",
            "VernacExtend",
            "e81b7e303f3f6781c484214052f9b81de200929d"
        ],
        [
            "Lemma Zeqb_ok: forall x y : Z, Zeq_bool x y = true -> x == y.",
            "VernacStartTheoremProof",
            "f231092a7663328c3bc6276c78e26131fd4337c9"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "rewrite (Zeq_bool_eq x y H).",
            "VernacExtend",
            "235dedd23f8e0467b3c68d749f1d1e01dba61498"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac reify_goal lvar lexpr lterm:= match lexpr with nil => idtac | ?e1::?e2::_ => match goal with |- (?op ?u1 ?u2) => change (op (@PEeval Z _ _ _ _ _ _ _ _ _ (@gen_phiZ _ _ _ _ _ _ _ _ _) N (fun n:N => n) (@pow_N _ _ _ _ _ _ _ _ _) lvar e1) (@PEeval Z _ _ _ _ _ _ _ _ _ (@gen_phiZ _ _ _ _ _ _ _ _ _) N (fun n:N => n) (@pow_N _ _ _ _ _ _ _ _ _) lvar e2)) end end.",
            "VernacExtend",
            "60fd08cc5cb79593e5edcf9220f825a6f59a6e64"
        ],
        [
            "Lemma comm: forall (R:Type)`{Ring R}(c : Z) (x : R), x * (gen_phiZ c) == (gen_phiZ c) * x.",
            "VernacStartTheoremProof",
            "44afb4c1fae8fa0010a92107e5531d8506ca2559"
        ],
        [
            "induction c.",
            "VernacExtend",
            "94b2df4d14d26d656c8175bca38786f5f5f13d44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- same_gen.",
            "VernacExtend",
            "295a549c41e360afd2ce9449fdacddefaf75b46c"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- same_gen.",
            "VernacExtend",
            "295a549c41e360afd2ce9449fdacddefaf75b46c"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize IHp.",
            "VernacExtend",
            "74b3e92d2e1de1b4a3c104c8c040a18b8a169016"
        ],
        [
            "clear IHp.",
            "VernacExtend",
            "56c76e81812b5fe46a18c4f72fb2a664a6988ae3"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "intro IHp.",
            "VernacExtend",
            "06e9d7f1c591b17fa14f547e8b7fb627403ad409"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize IHp.",
            "VernacExtend",
            "74b3e92d2e1de1b4a3c104c8c040a18b8a169016"
        ],
        [
            "clear IHp.",
            "VernacExtend",
            "56c76e81812b5fe46a18c4f72fb2a664a6988ae3"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "intro IHp.",
            "VernacExtend",
            "06e9d7f1c591b17fa14f547e8b7fb627403ad409"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "gen_rewrite.",
            "VernacExtend",
            "976be5de998b899b4ac0ccaa839d300434f9a58f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac ring_gen := match goal with |- ?g => let lterm := lterm_goal g in match eval red in (list_reifyl (lterm:=lterm)) with | (?fv, ?lexpr) => reify_goal fv lexpr lterm; match goal with |- ?g => apply (@ring_correct Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ (@gen_phiZ _ _ _ _ _ _ _ _ _) _ (@comm _ _ _ _ _ _ _ _ _ _) Zeq_bool Zeqb_ok N (fun n:N => n) (@pow_N _ _ _ _ _ _ _ _ _)); [apply mkpow_th; reflexivity |vm_compute; reflexivity] end end end.",
            "VernacExtend",
            "cb7f789efb491768d2d84ed81021b788c0452b48"
        ],
        [
            "Ltac non_commutative_ring:= intros; ring_gen.",
            "VernacExtend",
            "d2242c3d902c71805af6548314109c1012b0635c"
        ],
        [
            "Ltac ring_simplify_aux lterm fv lexpr hyp := match lterm with | ?t0::?lterm => match lexpr with | ?e::?le => let t := constr:(@Ncring_polynom.norm_subst Z 0%Z 1%Z Z.add Z.mul Z.sub Z.opp (@eq Z) Zops Zeq_bool e) in let te := constr:(@Ncring_polynom.Pphi Z _ 0 1 _+_ _*_ _-_ -_ _==_ _ Ncring_initial.gen_phiZ fv t) in let eq1 := fresh \"ring\" in let nft := eval vm_compute in t in let t':= fresh \"t\" in pose (t' := nft); assert (eq1 : t = t'); [vm_cast_no_check (eq_refl t')| let eq2 := fresh \"ring\" in assert (eq2:(@Ncring_polynom.PEeval Z _ 0 1 _+_ _*_ _-_ -_ _==_ _ Ncring_initial.gen_phiZ N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication) fv e) == te); [apply (@Ncring_polynom.norm_subst_ok Z _ 0%Z 1%Z Z.add Z.mul Z.sub Z.opp (@eq Z) _ _ 0 1 _+_ _*_ _-_ -_ _==_ _ _ Ncring_initial.gen_phiZ _ (@comm _ 0 1 _+_ _*_ _-_ -_ _==_ _ _) _ Zeqb_ok); apply mkpow_th; reflexivity | match hyp with | 1%nat => rewrite eq2 | ?H => try rewrite eq2 in H end]; let P:= fresh \"P\" in match hyp with | 1%nat => idtac \"ok\"; rewrite eq1; pattern (@Ncring_polynom.Pphi Z _ 0 1 _+_ _*_ _-_ -_ _==_ _ Ncring_initial.gen_phiZ fv t'); match goal with |- (?p ?t) => set (P:=p) end; unfold t' in *; clear t' eq1 eq2; simpl | ?H => rewrite eq1 in H; pattern (@Ncring_polynom.Pphi Z _ 0 1 _+_ _*_ _-_ -_ _==_ _ Ncring_initial.gen_phiZ fv t') in H; match type of H with | (?p ?t) => set (P:=p) in H end; unfold t' in *; clear t' eq1 eq2; simpl in H end; unfold P in *; clear P ]; ring_simplify_aux lterm fv le hyp | nil => idtac end | nil => idtac end.",
            "VernacExtend",
            "05316f8beb169c69f2e5129673b0e59fb5e0cd95"
        ],
        [
            "Ltac set_variables fv := match fv with | nil => idtac | ?t::?fv => let v := fresh \"X\" in set (v:=t) in *; set_variables fv end.",
            "VernacExtend",
            "60f737143c6676f73f48e468d15576b7fd17d27b"
        ],
        [
            "Ltac deset n:= match n with | 0%nat => idtac | S ?n1 => match goal with | h:= ?v : ?t |- ?g => unfold h in *; clear h; deset n1 end end.",
            "VernacExtend",
            "8bed970940979778a11845b471799afa1b89ca5e"
        ],
        [
            "Ltac ring_simplify_gen a hyp := let lterm := match a with | _::_ => a | _ => constr:(a::nil) end in match eval red in (list_reifyl (lterm:=lterm)) with | (?fv, ?lexpr) => idtac lterm; idtac fv; idtac lexpr; let n := eval compute in (length fv) in idtac n; let lt:=fresh \"lt\" in set (lt:= lterm); let lv:=fresh \"fv\" in set (lv:= fv); set_variables fv; let lterm1 := eval unfold lt in lt in let lv1 := eval unfold lv in lv in idtac lterm1; idtac lv1; ring_simplify_aux lterm1 lv1 lexpr hyp; clear lt lv; deset n end.",
            "VernacExtend",
            "8e98fff22362824625b758b39952778e92916c24"
        ],
        [
            "Tactic Notation \"non_commutative_ring_simplify\" constr(lterm):= ring_simplify_gen lterm 1%nat.",
            "VernacExtend",
            "4a33600f4c5e7132ded301204a5d0b7c224811d7"
        ],
        [
            "Tactic Notation \"non_commutative_ring_simplify\" constr(lterm) \"in\" ident(H):= ring_simplify_gen lterm H.",
            "VernacExtend",
            "2de187952c4cf2a9e58c33d1116388ed38338eca"
        ]
    ],
    "proofs": [
        {
            "name": "Zeqb_ok",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zeq_bool_eq x y H).",
                        "VernacExtend",
                        "235dedd23f8e0467b3c68d749f1d1e01dba61498"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "comm",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "induction c.",
                        "VernacExtend",
                        "94b2df4d14d26d656c8175bca38786f5f5f13d44"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- same_gen.",
                        "VernacExtend",
                        "295a549c41e360afd2ce9449fdacddefaf75b46c"
                    ]
                },
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- same_gen.",
                        "VernacExtend",
                        "295a549c41e360afd2ce9449fdacddefaf75b46c"
                    ]
                },
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize IHp.",
                        "VernacExtend",
                        "74b3e92d2e1de1b4a3c104c8c040a18b8a169016"
                    ]
                },
                {
                    "command": [
                        "clear IHp.",
                        "VernacExtend",
                        "56c76e81812b5fe46a18c4f72fb2a664a6988ae3"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "intro IHp.",
                        "VernacExtend",
                        "06e9d7f1c591b17fa14f547e8b7fb627403ad409"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize IHp.",
                        "VernacExtend",
                        "74b3e92d2e1de1b4a3c104c8c040a18b8a169016"
                    ]
                },
                {
                    "command": [
                        "clear IHp.",
                        "VernacExtend",
                        "56c76e81812b5fe46a18c4f72fb2a664a6988ae3"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "intro IHp.",
                        "VernacExtend",
                        "06e9d7f1c591b17fa14f547e8b7fb627403ad409"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "gen_rewrite.",
                        "VernacExtend",
                        "976be5de998b899b4ac0ccaa839d300434f9a58f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}