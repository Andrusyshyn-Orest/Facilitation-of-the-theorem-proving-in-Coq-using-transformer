{
    "filename": "plugins/setoid_ring/Cring.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export List.",
            "VernacRequire",
            "d626cb98fe764077098989d26509c9f7407e0464"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require Import BinPos.",
            "VernacRequire",
            "7c55565b460199c72b57cc90a030257b88ff5053"
        ],
        [
            "Require Import BinList.",
            "VernacRequire",
            "e751dc388c71f6800f28ecd650757ae18e0f642b"
        ],
        [
            "Require Import Znumtheory.",
            "VernacRequire",
            "b0019a4f65c83089c27581d981ae8f6e0b66ab58"
        ],
        [
            "Require Export Morphisms Setoid Bool.",
            "VernacRequire",
            "6309751f4495f15da5fdb2ec330b40341d5cda07"
        ],
        [
            "Require Import ZArith_base.",
            "VernacRequire",
            "3869e2745ea23533899856ceac38bbbfdda9266e"
        ],
        [
            "Require Export Algebra_syntax.",
            "VernacRequire",
            "a3df5ec51b264ea2bf923f0ef0142d507144554c"
        ],
        [
            "Require Export Ncring.",
            "VernacRequire",
            "57164a06389b17fb2b25c7ef3046050fb3322b5a"
        ],
        [
            "Require Export Ncring_initial.",
            "VernacRequire",
            "61673bdc1a780599135fba82556b52adbc00fde0"
        ],
        [
            "Require Export Ncring_tac.",
            "VernacRequire",
            "e8e45d8a5813d57786b72ef1a9ec0f772b0263e2"
        ],
        [
            "Class Cring {R:Type}`{Rr:Ring R} := cring_mul_comm: forall x y:R, x * y == y * x.",
            "VernacInductive",
            "41fd34873747cf2011b18134bdac7ebf513f8d99"
        ],
        [
            "Ltac reify_goal lvar lexpr lterm:= match lexpr with nil => idtac | ?e1::?e2::_ => match goal with |- (?op ?u1 ?u2) => change (op (@Ring_polynom.PEeval _ zero one _+_ _*_ _-_ -_ Z Ncring_initial.gen_phiZ N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication) lvar e1) (@Ring_polynom.PEeval _ zero one _+_ _*_ _-_ -_ Z Ncring_initial.gen_phiZ N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication) lvar e2)) end end.",
            "VernacExtend",
            "217ab5a74f9af31dc4ea1392f0581ab7bd155011"
        ],
        [
            "Section cring.",
            "VernacBeginSection",
            "b63b8f00c72a86901206980b9965a527e48a8567"
        ],
        [
            "Context {R:Type}`{Rr:Cring R}.",
            "VernacContext",
            "5be770392077543d65b35e8300134c92280d2998"
        ],
        [
            "Lemma cring_eq_ext: ring_eq_ext _+_ _*_ -_ _==_.",
            "VernacStartTheoremProof",
            "0679771653f337e4a1173fc69142e3f1faf132b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply mk_reqe; solve_proper.",
            "VernacExtend",
            "c908e9db9b2110833302c15ce4d17438761fc710"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma cring_almost_ring_theory: almost_ring_theory (R:=R) zero one _+_ _*_ _-_ -_ _==_.",
            "VernacStartTheoremProof",
            "b0e199a0ebae78790cc154468cf19cd670a6d9fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply mk_art ;intros.",
            "VernacExtend",
            "55e4541d72b3ba3fa52d6e9dbf95d7acd36e4bbd"
        ],
        [
            "rewrite ring_add_0_l; reflexivity.",
            "VernacExtend",
            "8fab6fb5cf8622db50fdac7af77126b40e623c67"
        ],
        [
            "rewrite ring_add_comm; reflexivity.",
            "VernacExtend",
            "2ba5890f3e6bccea585205ffa942ab856eca091c"
        ],
        [
            "rewrite ring_add_assoc; reflexivity.",
            "VernacExtend",
            "d9a793600a1a1132c58e42320a8ab2a57c6c1d21"
        ],
        [
            "rewrite ring_mul_1_l; reflexivity.",
            "VernacExtend",
            "3d3d1b048f3a3ee738e8c0a6204b75cd5868f9a6"
        ],
        [
            "apply ring_mul_0_l.",
            "VernacExtend",
            "9fb445958f2315b11d9f467778a1e9ac472dc150"
        ],
        [
            "rewrite cring_mul_comm; reflexivity.",
            "VernacExtend",
            "3103bc5ab186f6c75ce680b3ce68478eecd1a68b"
        ],
        [
            "rewrite ring_mul_assoc; reflexivity.",
            "VernacExtend",
            "e97e70243cbe6ae3aeae82236cdbdc886e897f0c"
        ],
        [
            "rewrite ring_distr_l; reflexivity.",
            "VernacExtend",
            "a4bd48710d7fcd98854632c32d981b76e5340876"
        ],
        [
            "rewrite ring_opp_mul_l; reflexivity.",
            "VernacExtend",
            "ecd83c925da0eb7fa504d4e9e7d2d4a803f6315e"
        ],
        [
            "apply ring_opp_add.",
            "VernacExtend",
            "1a2ecdfe503b3f3d6dd4186a22bf72653756ac63"
        ],
        [
            "rewrite ring_sub_def ; reflexivity.",
            "VernacExtend",
            "a74b1a6bbd738d45c184b8adb70614fc9250b6dc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma cring_morph: ring_morph zero one _+_ _*_ _-_ -_ _==_ 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Zeq_bool Ncring_initial.gen_phiZ.",
            "VernacStartTheoremProof",
            "f80fdcf23d1507a77949191fd19829d0a0f29661"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply mkmorph ; intros; simpl; try reflexivity.",
            "VernacExtend",
            "4ec6ebdc73cc3b2adcff1a03c67316d5415be872"
        ],
        [
            "rewrite Ncring_initial.gen_phiZ_add; reflexivity.",
            "VernacExtend",
            "361218c71b00417147c5b7180b0710fe5e7fd117"
        ],
        [
            "rewrite ring_sub_def.",
            "VernacExtend",
            "dd68bdd2129e62384da788c410795f94e13bff03"
        ],
        [
            "unfold Z.sub.",
            "VernacExtend",
            "e1e2a089ec5b3f623e66fc9d6fa6fcec99904eb4"
        ],
        [
            "rewrite Ncring_initial.gen_phiZ_add.",
            "VernacExtend",
            "ce669b809f585f0c294314d2386ab530d45c717e"
        ],
        [
            "rewrite Ncring_initial.gen_phiZ_opp; reflexivity.",
            "VernacExtend",
            "e97adb653a5a9460c88b65ac3095cd21575dba3d"
        ],
        [
            "rewrite Ncring_initial.gen_phiZ_mul; reflexivity.",
            "VernacExtend",
            "8b3f977181ebf0f6b7df924d7538d71cd458f2b7"
        ],
        [
            "rewrite Ncring_initial.gen_phiZ_opp; reflexivity.",
            "VernacExtend",
            "e97adb653a5a9460c88b65ac3095cd21575dba3d"
        ],
        [
            "rewrite (Zeqb_ok x y H).",
            "VernacExtend",
            "75f3fc740a7a2cf73b7d059c6c8495ec2bafaf15"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma cring_power_theory : @Ring_theory.power_theory R one _*_ _==_ N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication).",
            "VernacStartTheoremProof",
            "5e43ef0c8451fc42abda5940519e90413e6e4586"
        ],
        [
            "intros; apply Ring_theory.mkpow_th.",
            "VernacExtend",
            "3acbcf71754cef841fcadae6bed1b3008e1e434a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma cring_div_theory: div_theory _==_ Z.add Z.mul Ncring_initial.gen_phiZ Z.quotrem.",
            "VernacStartTheoremProof",
            "101beeff148f556fb3a45d6b58e1bb8417a0c8e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply InitialRing.Ztriv_div_th.",
            "VernacExtend",
            "bd65a41f157c45c90a7ed6110f1da512c65c224f"
        ],
        [
            "unfold Setoid_Theory.",
            "VernacExtend",
            "5fcd2908628f9e53bdc49a8526dc2d3e4325b42f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply ring_setoid.",
            "VernacExtend",
            "2d9a719db5254de118a4d3af01a5d369dd4b2365"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End cring.",
            "VernacEndSegment",
            "020ee802a4d26253a2914622a34d9cffd61f1a95"
        ],
        [
            "Ltac cring_gen := match goal with |- ?g => let lterm := lterm_goal g in match eval red in (list_reifyl (lterm:=lterm)) with | (?fv, ?lexpr) => reify_goal fv lexpr lterm; match goal with |- ?g => generalize (@Ring_polynom.ring_correct _ 0 1 _+_ _*_ _-_ -_ _==_ ring_setoid cring_eq_ext cring_almost_ring_theory Z 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Zeq_bool Ncring_initial.gen_phiZ cring_morph N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication) cring_power_theory Z.quotrem cring_div_theory O fv nil); let rc := fresh \"rc\"in intro rc; apply rc end end end.",
            "VernacExtend",
            "b6e7a5643334d6bbad88e042a59aa3213133f106"
        ],
        [
            "Ltac cring_compute:= vm_compute; reflexivity.",
            "VernacExtend",
            "5d8688b0279acfe7684be54f0494e0ea88865299"
        ],
        [
            "Ltac cring:= intros; cring_gen; cring_compute.",
            "VernacExtend",
            "3dc0a85b6715e47aad5d308c267b8d7fbeb4e46d"
        ],
        [
            "Instance Zcri: (Cring (Rr:=Zr)).",
            "VernacInstance",
            "6c5a50bcafc94bbbeafec85203f19fd0d861253b"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "exact Z.mul_comm.",
            "VernacExtend",
            "ec3a0b9b1d085d6f7d4d8c22a8c0f86fe53f7501"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Ltac cring_simplify_aux lterm fv lexpr hyp := match lterm with | ?t0::?lterm => match lexpr with | ?e::?le => let t := constr:(@Ring_polynom.norm_subst Z 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Zeq_bool Z.quotrem O nil e) in let te := constr:(@Ring_polynom.Pphi_dev _ 0 1 _+_ _*_ _-_ -_ Z 0%Z 1%Z Zeq_bool Ncring_initial.gen_phiZ get_signZ fv t) in let eq1 := fresh \"ring\" in let nft := eval vm_compute in t in let t':= fresh \"t\" in pose (t' := nft); assert (eq1 : t = t'); [vm_cast_no_check (eq_refl t')| let eq2 := fresh \"ring\" in assert (eq2:(@Ring_polynom.PEeval _ zero _+_ _*_ _-_ -_ Z Ncring_initial.gen_phiZ N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication) fv e) == te); [let eq3 := fresh \"ring\" in generalize (@ring_rw_correct _ 0 1 _+_ _*_ _-_ -_ _==_ ring_setoid cring_eq_ext cring_almost_ring_theory Z 0%Z 1%Z Z.add Z.mul Z.sub Z.opp Zeq_bool Ncring_initial.gen_phiZ cring_morph N (fun n:N => n) (@Ring_theory.pow_N _ 1 multiplication) cring_power_theory Z.quotrem cring_div_theory get_signZ get_signZ_th O nil fv I nil (eq_refl nil) ); intro eq3; apply eq3; reflexivity| match hyp with | 1%nat => rewrite eq2 | ?H => try rewrite eq2 in H end]; let P:= fresh \"P\" in match hyp with | 1%nat => rewrite eq1; pattern (@Ring_polynom.Pphi_dev _ 0 1 _+_ _*_ _-_ -_ Z 0%Z 1%Z Zeq_bool Ncring_initial.gen_phiZ get_signZ fv t'); match goal with |- (?p ?t) => set (P:=p) end; unfold t' in *; clear t' eq1 eq2; unfold Pphi_dev, Pphi_avoid; simpl; repeat (unfold mkmult1, mkmultm1, mkmult_c_pos, mkmult_c, mkadd_mult, mkmult_c_pos, mkmult_pow, mkadd_mult, mkpow;simpl) | ?H => rewrite eq1 in H; pattern (@Ring_polynom.Pphi_dev _ 0 1 _+_ _*_ _-_ -_ Z 0%Z 1%Z Zeq_bool Ncring_initial.gen_phiZ get_signZ fv t') in H; match type of H with | (?p ?t) => set (P:=p) in H end; unfold t' in *; clear t' eq1 eq2; unfold Pphi_dev, Pphi_avoid in H; simpl in H; repeat (unfold mkmult1, mkmultm1, mkmult_c_pos, mkmult_c, mkadd_mult, mkmult_c_pos, mkmult_pow, mkadd_mult, mkpow in H;simpl in H) end; unfold P in *; clear P ]; cring_simplify_aux lterm fv le hyp | nil => idtac end | nil => idtac end.",
            "VernacExtend",
            "c88eae80b35a24c34e328423eba78d7eb4850140"
        ],
        [
            "Ltac set_variables fv := match fv with | nil => idtac | ?t::?fv => let v := fresh \"X\" in set (v:=t) in *; set_variables fv end.",
            "VernacExtend",
            "60f737143c6676f73f48e468d15576b7fd17d27b"
        ],
        [
            "Ltac deset n:= match n with | 0%nat => idtac | S ?n1 => match goal with | h:= ?v : ?t |- ?g => unfold h in *; clear h; deset n1 end end.",
            "VernacExtend",
            "8bed970940979778a11845b471799afa1b89ca5e"
        ],
        [
            "Ltac cring_simplify_gen a hyp := let lterm := match a with | _::_ => a | _ => constr:(a::nil) end in match eval red in (list_reifyl (lterm:=lterm)) with | (?fv, ?lexpr) => idtac lterm; idtac fv; idtac lexpr; let n := eval compute in (length fv) in idtac n; let lt:=fresh \"lt\" in set (lt:= lterm); let lv:=fresh \"fv\" in set (lv:= fv); set_variables fv; let lterm1 := eval unfold lt in lt in let lv1 := eval unfold lv in lv in idtac lterm1; idtac lv1; cring_simplify_aux lterm1 lv1 lexpr hyp; clear lt lv; deset n end.",
            "VernacExtend",
            "0395250086180664b10cd42a444e78ed2407940b"
        ],
        [
            "Tactic Notation \"cring_simplify\" constr(lterm):= cring_simplify_gen lterm 1%nat.",
            "VernacExtend",
            "08095d0dbcad3a4929d00fcd0c3946df50c35f2e"
        ],
        [
            "Tactic Notation \"cring_simplify\" constr(lterm) \"in\" ident(H):= cring_simplify_gen lterm H.",
            "VernacExtend",
            "bff2c73c8de1d48c85dd1ffe97b083b9578ac261"
        ]
    ],
    "proofs": [
        {
            "name": "cring_eq_ext",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply mk_reqe; solve_proper.",
                        "VernacExtend",
                        "c908e9db9b2110833302c15ce4d17438761fc710"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cring_almost_ring_theory",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply mk_art ;intros.",
                        "VernacExtend",
                        "55e4541d72b3ba3fa52d6e9dbf95d7acd36e4bbd"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_add_0_l; reflexivity.",
                        "VernacExtend",
                        "8fab6fb5cf8622db50fdac7af77126b40e623c67"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_add_comm; reflexivity.",
                        "VernacExtend",
                        "2ba5890f3e6bccea585205ffa942ab856eca091c"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_add_assoc; reflexivity.",
                        "VernacExtend",
                        "d9a793600a1a1132c58e42320a8ab2a57c6c1d21"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_mul_1_l; reflexivity.",
                        "VernacExtend",
                        "3d3d1b048f3a3ee738e8c0a6204b75cd5868f9a6"
                    ]
                },
                {
                    "command": [
                        "apply ring_mul_0_l.",
                        "VernacExtend",
                        "9fb445958f2315b11d9f467778a1e9ac472dc150"
                    ]
                },
                {
                    "command": [
                        "rewrite cring_mul_comm; reflexivity.",
                        "VernacExtend",
                        "3103bc5ab186f6c75ce680b3ce68478eecd1a68b"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_mul_assoc; reflexivity.",
                        "VernacExtend",
                        "e97e70243cbe6ae3aeae82236cdbdc886e897f0c"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_distr_l; reflexivity.",
                        "VernacExtend",
                        "a4bd48710d7fcd98854632c32d981b76e5340876"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_opp_mul_l; reflexivity.",
                        "VernacExtend",
                        "ecd83c925da0eb7fa504d4e9e7d2d4a803f6315e"
                    ]
                },
                {
                    "command": [
                        "apply ring_opp_add.",
                        "VernacExtend",
                        "1a2ecdfe503b3f3d6dd4186a22bf72653756ac63"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_sub_def ; reflexivity.",
                        "VernacExtend",
                        "a74b1a6bbd738d45c184b8adb70614fc9250b6dc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cring_morph",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply mkmorph ; intros; simpl; try reflexivity.",
                        "VernacExtend",
                        "4ec6ebdc73cc3b2adcff1a03c67316d5415be872"
                    ]
                },
                {
                    "command": [
                        "rewrite Ncring_initial.gen_phiZ_add; reflexivity.",
                        "VernacExtend",
                        "361218c71b00417147c5b7180b0710fe5e7fd117"
                    ]
                },
                {
                    "command": [
                        "rewrite ring_sub_def.",
                        "VernacExtend",
                        "dd68bdd2129e62384da788c410795f94e13bff03"
                    ]
                },
                {
                    "command": [
                        "unfold Z.sub.",
                        "VernacExtend",
                        "e1e2a089ec5b3f623e66fc9d6fa6fcec99904eb4"
                    ]
                },
                {
                    "command": [
                        "rewrite Ncring_initial.gen_phiZ_add.",
                        "VernacExtend",
                        "ce669b809f585f0c294314d2386ab530d45c717e"
                    ]
                },
                {
                    "command": [
                        "rewrite Ncring_initial.gen_phiZ_opp; reflexivity.",
                        "VernacExtend",
                        "e97adb653a5a9460c88b65ac3095cd21575dba3d"
                    ]
                },
                {
                    "command": [
                        "rewrite Ncring_initial.gen_phiZ_mul; reflexivity.",
                        "VernacExtend",
                        "8b3f977181ebf0f6b7df924d7538d71cd458f2b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Ncring_initial.gen_phiZ_opp; reflexivity.",
                        "VernacExtend",
                        "e97adb653a5a9460c88b65ac3095cd21575dba3d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zeqb_ok x y H).",
                        "VernacExtend",
                        "75f3fc740a7a2cf73b7d059c6c8495ec2bafaf15"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cring_power_theory",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros; apply Ring_theory.mkpow_th.",
                        "VernacExtend",
                        "3acbcf71754cef841fcadae6bed1b3008e1e434a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cring_div_theory",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply InitialRing.Ztriv_div_th.",
                        "VernacExtend",
                        "bd65a41f157c45c90a7ed6110f1da512c65c224f"
                    ]
                },
                {
                    "command": [
                        "unfold Setoid_Theory.",
                        "VernacExtend",
                        "5fcd2908628f9e53bdc49a8526dc2d3e4325b42f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply ring_setoid.",
                        "VernacExtend",
                        "2d9a719db5254de118a4d3af01a5d369dd4b2365"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zcri",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "exact Z.mul_comm.",
                        "VernacExtend",
                        "ec3a0b9b1d085d6f7d4d8c22a8c0f86fe53f7501"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}