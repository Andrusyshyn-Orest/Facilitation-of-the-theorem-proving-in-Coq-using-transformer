{
    "filename": "plugins/setoid_ring/InitialRing.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Zbool.",
            "VernacRequire",
            "b0c33fdaaeeb4e54495acaa32c7b39786b937ee3"
        ],
        [
            "Require Import BinInt.",
            "VernacRequire",
            "d922a191d1694566100a4f0ec574bf4dd034bf1f"
        ],
        [
            "Require Import BinNat.",
            "VernacRequire",
            "91bde618d030daea8709a28acc1d1bae01eaad47"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require Import Ring_theory.",
            "VernacRequire",
            "360b5ebfe6bc614bd668fa645bb39466c706eed4"
        ],
        [
            "Require Import Ring_polynom.",
            "VernacRequire",
            "ce30ad414330f041277a66bb84700857b20afe51"
        ],
        [
            "Import List.",
            "VernacImport",
            "714b0c1d5be3cea55743185aecdf9fb813bbb1fa"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Import RingSyntax.",
            "VernacImport",
            "7f261a6392aca26015067a3647e3f6338ae01946"
        ],
        [
            "Definition NotConstant := false.",
            "VernacDefinition",
            "3911b7820507952b6d673a6a986c3046d2c244df"
        ],
        [
            "Lemma Zsth : Setoid_Theory Z (@eq Z).",
            "VernacStartTheoremProof",
            "bba447cdcb42df49ca8145a49cb4a86b2ce7ac16"
        ],
        [
            "Proof (Eqsth Z).",
            "VernacExactProof",
            "91640a022b552844d23c4dbf6d65b2d740283d6a"
        ],
        [
            "Lemma Zeqe : ring_eq_ext Z.add Z.mul Z.opp (@eq Z).",
            "VernacStartTheoremProof",
            "0da8ff41e6aa77243313cb296fa0abd505d4a343"
        ],
        [
            "Proof (Eq_ext Z.add Z.mul Z.opp).",
            "VernacExactProof",
            "cf0517b120ed339210d1e5bf7f10c94f2896d308"
        ],
        [
            "Lemma Zth : ring_theory Z0 (Zpos xH) Z.add Z.mul Z.sub Z.opp (@eq Z).",
            "VernacStartTheoremProof",
            "798a82b421ab3a8ff95d6caa296c0ff43502731a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact Z.add_0_l.",
            "VernacExtend",
            "6da1f3beddc7b40db687de3e911c928b6e695c08"
        ],
        [
            "exact Z.add_comm.",
            "VernacExtend",
            "c8ba001a35645d7628b3483286a5ed76ecacf069"
        ],
        [
            "exact Z.add_assoc.",
            "VernacExtend",
            "2979bdb427e399e5d2d2fb93f47cf6f0575520b0"
        ],
        [
            "exact Z.mul_1_l.",
            "VernacExtend",
            "5388cd4bcfa02097e547e424e109842b42720fc5"
        ],
        [
            "exact Z.mul_comm.",
            "VernacExtend",
            "ec3a0b9b1d085d6f7d4d8c22a8c0f86fe53f7501"
        ],
        [
            "exact Z.mul_assoc.",
            "VernacExtend",
            "89610cd35c932d852ad0e88394744e13bc8f2064"
        ],
        [
            "exact Z.mul_add_distr_r.",
            "VernacExtend",
            "bb84b7801c657a92821afa4f2e2c81d593c679ba"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exact Z.sub_diag.",
            "VernacExtend",
            "22b3a4b338458ef9cefcca7c760ddde569d260de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ZMORPHISM.",
            "VernacBeginSection",
            "ef175caab65d3609919dde4b1f364d09ff13024f"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable (rO rI : R) (radd rmul rsub: R->R->R) (ropp : R -> R).",
            "VernacAssumption",
            "50301ed65bb665fbf3206555d45afa28de31a677"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Notation \"x + y\" := (radd x y).",
            "VernacNotation",
            "f9a1e48598a2a15fa2ad53ce0a86ee96899384bd"
        ],
        [
            "Notation \"x * y \" := (rmul x y).",
            "VernacNotation",
            "209e3909b7ad4feae3d80eafd53692de1d7247b3"
        ],
        [
            "Notation \"x - y \" := (rsub x y).",
            "VernacNotation",
            "522987606e5604415d2a3e69360f16a100bfbaf8"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Notation \"x == y\" := (req x y).",
            "VernacNotation",
            "1367374c87f9bf84183973a2bb249fe42031446b"
        ],
        [
            "Variable Rsth : Setoid_Theory R req.",
            "VernacAssumption",
            "67c9d4fe4c951815aa2bb7bc7f436ecc6294c479"
        ],
        [
            "Add Parametric Relation : R req reflexivity proved by Rsth.(@Equivalence_Reflexive _ _) symmetry proved by Rsth.(@Equivalence_Symmetric _ _) transitivity proved by Rsth.(@Equivalence_Transitive _ _) as R_setoid3.",
            "VernacExtend",
            "2009763aab4bb6a64bdfa7298794b4d9ab056213"
        ],
        [
            "Ltac rrefl := gen_reflexivity Rsth.",
            "VernacExtend",
            "5ea5eb8f3d94660b07009441ad3899bc6203c57d"
        ],
        [
            "Variable Reqe : ring_eq_ext radd rmul ropp req.",
            "VernacAssumption",
            "2490789f2fd55b52c058faf984f76ae57e3f5ca4"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext3.",
            "VernacExtend",
            "954b0a94e95660fdba32f15a5a00a23392ee4f7c"
        ],
        [
            "exact (Radd_ext Reqe).",
            "VernacExtend",
            "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext3.",
            "VernacExtend",
            "9253000dece85488fa2ccd67620c49ff9105fac1"
        ],
        [
            "exact (Rmul_ext Reqe).",
            "VernacExtend",
            "13b3093566a735d2e3348ba5dd18427edb19cc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism ropp with signature (req ==> req) as ropp_ext3.",
            "VernacExtend",
            "874b7090e7172270d1c98e8dd56dbde2512445a1"
        ],
        [
            "exact (Ropp_ext Reqe).",
            "VernacExtend",
            "e013460b2ed7bdd11390b3f84aa58078462220c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint gen_phiPOS1 (p:positive) : R := match p with | xH => 1 | xO p => (1 + 1) * (gen_phiPOS1 p) | xI p => 1 + ((1 + 1) * (gen_phiPOS1 p)) end.",
            "VernacFixpoint",
            "3afdccd378ef54f043442983bae3b8d358f57aa4"
        ],
        [
            "Fixpoint gen_phiPOS (p:positive) : R := match p with | xH => 1 | xO xH => (1 + 1) | xO p => (1 + 1) * (gen_phiPOS p) | xI xH => 1 + (1 +1) | xI p => 1 + ((1 + 1) * (gen_phiPOS p)) end.",
            "VernacFixpoint",
            "ec0a2e0940d5b2975ba875dfc8e7eda5c7e4b715"
        ],
        [
            "Definition gen_phiZ1 z := match z with | Zpos p => gen_phiPOS1 p | Z0 => 0 | Zneg p => -(gen_phiPOS1 p) end.",
            "VernacDefinition",
            "72316812bc7b65bf6b39406d328fd50a127c6dda"
        ],
        [
            "Definition gen_phiZ z := match z with | Zpos p => gen_phiPOS p | Z0 => 0 | Zneg p => -(gen_phiPOS p) end.",
            "VernacDefinition",
            "5c668696423b595c100179131a6f1c362ae2fc77"
        ],
        [
            "Notation \"[ x ]\" := (gen_phiZ x).",
            "VernacNotation",
            "62ab00e04b09267731f6e626e075bf5e4c6190d7"
        ],
        [
            "Definition get_signZ z := match z with | Zneg p => Some (Zpos p) | _ => None end.",
            "VernacDefinition",
            "c8d768bad21cf30ae921d3ff3b63fe40d3ea3561"
        ],
        [
            "Lemma get_signZ_th : sign_theory Z.opp Zeq_bool get_signZ.",
            "VernacStartTheoremProof",
            "b6fc47abc7f348797dd65ab99a8ba85e64d4f474"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct c;intros;try discriminate.",
            "VernacExtend",
            "2983df7acb9fe2f2679543c83d1cd28b6b212e55"
        ],
        [
            "injection H as <-.",
            "VernacExtend",
            "ac20f3cdc891cd244c7fffa81bee3c656b4fe3e7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Zeq_bool.",
            "VernacExtend",
            "40bef210a7fd69e0c5fe5aab4d0cc4a8d98b18bb"
        ],
        [
            "rewrite Z.compare_refl.",
            "VernacExtend",
            "322d5eaf4ebd26bb90f54cd680b69c97677fbd07"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ALMOST_RING.",
            "VernacBeginSection",
            "cd3c4fac74a93c444f27019e3c7a4273918e66be"
        ],
        [
            "Variable ARth : almost_ring_theory 0 1 radd rmul rsub ropp req.",
            "VernacAssumption",
            "421152d5013c2ca15573273d19425258db41b4b5"
        ],
        [
            "Add Morphism rsub with signature (req ==> req ==> req) as rsub_ext3.",
            "VernacExtend",
            "f20bda8378ae133a4fcf60963ca9770ce0462991"
        ],
        [
            "exact (ARsub_ext Rsth Reqe ARth).",
            "VernacExtend",
            "598d7a4358fb924db1093bc250a8a51010ad7b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac norm := gen_srewrite Rsth Reqe ARth.",
            "VernacExtend",
            "232ba897aaa3a3c2bf5adcab00dd29aba1fb9cb6"
        ],
        [
            "Ltac add_push := gen_add_push radd Rsth Reqe ARth.",
            "VernacExtend",
            "807d29a516e79214f687cb386094990f68e2e17a"
        ],
        [
            "Lemma same_gen : forall x, gen_phiPOS1 x == gen_phiPOS x.",
            "VernacStartTheoremProof",
            "e66fdc2decfafd8fd785d44fa9c665fde76081bc"
        ],
        [
            "induction x;simpl.",
            "VernacExtend",
            "032ca6881eec9f6ca6ad619919b16fb530146db9"
        ],
        [
            "rewrite IHx;destruct x;simpl;norm.",
            "VernacExtend",
            "b3f8707cfcab54e663b3ddcdd416b9f490381a10"
        ],
        [
            "rewrite IHx;destruct x;simpl;norm.",
            "VernacExtend",
            "b3f8707cfcab54e663b3ddcdd416b9f490381a10"
        ],
        [
            "rrefl.",
            "VernacExtend",
            "5debc907fd009a10e8fda4465de008675ca96a49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARgen_phiPOS_Psucc : forall x, gen_phiPOS1 (Pos.succ x) == 1 + (gen_phiPOS1 x).",
            "VernacStartTheoremProof",
            "c23982e199d2a2e57f94888d3591869c798bcad6"
        ],
        [
            "induction x;simpl;norm.",
            "VernacExtend",
            "6dfb2067df32dcf8133105ae5379be588de0bfd7"
        ],
        [
            "rewrite IHx;norm.",
            "VernacExtend",
            "250fc76d7c350c5c54e1d1d69ad5f47a7d910435"
        ],
        [
            "add_push 1;rrefl.",
            "VernacExtend",
            "2ed80b1387626fbfe17d6c398bb2a95af36a4fad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARgen_phiPOS_add : forall x y, gen_phiPOS1 (x + y) == (gen_phiPOS1 x) + (gen_phiPOS1 y).",
            "VernacStartTheoremProof",
            "b062f6af2e21821c8fb7176dc842bea7cad06a76"
        ],
        [
            "induction x;destruct y;simpl;norm.",
            "VernacExtend",
            "6c9883a2450fc1c574f6da43354218b724ae5bd0"
        ],
        [
            "rewrite Pos.add_carry_spec.",
            "VernacExtend",
            "33819fbb55ccf4ed171a44b989eac0d8b33d081e"
        ],
        [
            "rewrite ARgen_phiPOS_Psucc.",
            "VernacExtend",
            "8acb07d1444b10e34dda75858031a447bd76ae1e"
        ],
        [
            "rewrite IHx;norm.",
            "VernacExtend",
            "250fc76d7c350c5c54e1d1d69ad5f47a7d910435"
        ],
        [
            "add_push (gen_phiPOS1 y);add_push 1;rrefl.",
            "VernacExtend",
            "862788e3cf7a665d44281875828edac5815e177b"
        ],
        [
            "rewrite IHx;norm;add_push (gen_phiPOS1 y);rrefl.",
            "VernacExtend",
            "e8e53285e028880ac7ed3aa411b7b9342a65a2c8"
        ],
        [
            "rewrite ARgen_phiPOS_Psucc;norm;add_push 1;rrefl.",
            "VernacExtend",
            "3344fbba9e50850a808de5d3b9195bc533ddedd8"
        ],
        [
            "rewrite IHx;norm;add_push(gen_phiPOS1 y); add_push 1;rrefl.",
            "VernacExtend",
            "ec3bee074f04360fb579dd25618d76d22bba9e73"
        ],
        [
            "rewrite IHx;norm;add_push(gen_phiPOS1 y);rrefl.",
            "VernacExtend",
            "e8e53285e028880ac7ed3aa411b7b9342a65a2c8"
        ],
        [
            "add_push 1;rrefl.",
            "VernacExtend",
            "2ed80b1387626fbfe17d6c398bb2a95af36a4fad"
        ],
        [
            "rewrite ARgen_phiPOS_Psucc;norm;add_push 1;rrefl.",
            "VernacExtend",
            "3344fbba9e50850a808de5d3b9195bc533ddedd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ARgen_phiPOS_mult : forall x y, gen_phiPOS1 (x * y) == gen_phiPOS1 x * gen_phiPOS1 y.",
            "VernacStartTheoremProof",
            "a9f1f2d6aa17ed560c541aff7bb88ffc04a1320d"
        ],
        [
            "induction x;intros;simpl;norm.",
            "VernacExtend",
            "0398351e0ff91c2333523d6ad2d031c911d5b455"
        ],
        [
            "rewrite ARgen_phiPOS_add;simpl;rewrite IHx;norm.",
            "VernacExtend",
            "90c9a72b65c1fd2b1f9d83e09377ec09e3fa180e"
        ],
        [
            "rewrite IHx;rrefl.",
            "VernacExtend",
            "253c32a979ebf7ec07b58c34207b8d0fc58f41d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ALMOST_RING.",
            "VernacEndSegment",
            "198d56ae9077df3d8a7159d2c2e3538d35997725"
        ],
        [
            "Variable Rth : ring_theory 0 1 radd rmul rsub ropp req.",
            "VernacAssumption",
            "637623b1ecbcc2a9a90b7577df75c7b58a014bc7"
        ],
        [
            "Let ARth := Rth_ARth Rsth Reqe Rth.",
            "VernacDefinition",
            "608a241bdce14f4782d081c1410a6bc13151480a"
        ],
        [
            "Add Morphism rsub with signature (req ==> req ==> req) as rsub_ext4.",
            "VernacExtend",
            "4c43ec76b6af8b2461b14fe6798add3964df4d9a"
        ],
        [
            "exact (ARsub_ext Rsth Reqe ARth).",
            "VernacExtend",
            "598d7a4358fb924db1093bc250a8a51010ad7b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac norm := gen_srewrite Rsth Reqe ARth.",
            "VernacExtend",
            "232ba897aaa3a3c2bf5adcab00dd29aba1fb9cb6"
        ],
        [
            "Ltac add_push := gen_add_push radd Rsth Reqe ARth.",
            "VernacExtend",
            "807d29a516e79214f687cb386094990f68e2e17a"
        ],
        [
            "Lemma same_genZ : forall x, [x] == gen_phiZ1 x.",
            "VernacStartTheoremProof",
            "b33f6b3279fc2dd44b4332c79a1385e8f3d00eb2"
        ],
        [
            "destruct x;simpl; try rewrite (same_gen ARth);rrefl.",
            "VernacExtend",
            "3cac8b78102a8456fdbe06b7226319aa19ce88e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_Zeqb_ok : forall x y, Zeq_bool x y = true -> [x] == [y].",
            "VernacStartTheoremProof",
            "1222a01c6f854d4171bbbc70736af000d3de73b2"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "assert (H1 := Zeq_bool_eq x y H);unfold IDphi in H1.",
            "VernacExtend",
            "40a396892feea577ac984805116ba431d4b6872c"
        ],
        [
            "rewrite H1;rrefl.",
            "VernacExtend",
            "fd29ade89926cb918f22ea2871473e4c019b169e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiZ1_pos_sub : forall x y, gen_phiZ1 (Z.pos_sub x y) == gen_phiPOS1 x + -gen_phiPOS1 y.",
            "VernacStartTheoremProof",
            "0fec66ccd84013c8d4aac2a8bf3d81cbe9305cad"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "rewrite Z.pos_sub_spec.",
            "VernacExtend",
            "ad39ea5e69a6135dd31841448750ef09af08dff9"
        ],
        [
            "case Pos.compare_spec; intros H; simpl.",
            "VernacExtend",
            "0c37646b29bc41424feebed7642bb12054066163"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite (Ropp_def Rth);rrefl.",
            "VernacExtend",
            "251daee181bb422a8c8192af2524e9986f48a729"
        ],
        [
            "rewrite <- (Pos.sub_add y x H) at 2.",
            "VernacExtend",
            "74944d4926b8b4a611d0780b0c691aac5b0539e6"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "rewrite (ARgen_phiPOS_add ARth);simpl;norm.",
            "VernacExtend",
            "a7c8e3f3460a48b5d1291a248785c4a8b7a3b62f"
        ],
        [
            "rewrite (Ropp_def Rth);norm.",
            "VernacExtend",
            "db2ec553cbe2a7a9e38754a784917df61b13f02f"
        ],
        [
            "rewrite <- (Pos.sub_add x y H) at 2.",
            "VernacExtend",
            "60e0f9758c72e0cb725ebc48ca4738401b85d753"
        ],
        [
            "rewrite (ARgen_phiPOS_add ARth);simpl;norm.",
            "VernacExtend",
            "a7c8e3f3460a48b5d1291a248785c4a8b7a3b62f"
        ],
        [
            "add_push (gen_phiPOS1 (x-y));rewrite (Ropp_def Rth); norm.",
            "VernacExtend",
            "3e1efe317c614256f4d51a0ea397576251b57ea8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiZ_add : forall x y, [x + y] == [x] + [y].",
            "VernacStartTheoremProof",
            "61e3e4a584916092b34b244909e34555f73888d4"
        ],
        [
            "intros x y; repeat rewrite same_genZ; generalize x y;clear x y.",
            "VernacExtend",
            "6f58f3a6347deeb90151001595c16efbb1625c6c"
        ],
        [
            "destruct x, y; simpl; norm.",
            "VernacExtend",
            "72d4a37ef0d37854d983731edc9c0397825c3bbd"
        ],
        [
            "apply (ARgen_phiPOS_add ARth).",
            "VernacExtend",
            "0af3e96bf490242bbcfe807243f8afdf57e1df1c"
        ],
        [
            "apply gen_phiZ1_pos_sub.",
            "VernacExtend",
            "da56795c75b528cc9698631be757e1ddceccd7d0"
        ],
        [
            "rewrite gen_phiZ1_pos_sub.",
            "VernacExtend",
            "a8577c611a168af0e664827ec8379db9e4fda3eb"
        ],
        [
            "apply (Radd_comm Rth).",
            "VernacExtend",
            "f19f82d6828abd3ad9de6dcab79e25a60115951a"
        ],
        [
            "rewrite (ARgen_phiPOS_add ARth); norm.",
            "VernacExtend",
            "6131f7fe01a6aac2c4cf72e41cf5756dcb0b89f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiZ_mul : forall x y, [x * y] == [x] * [y].",
            "VernacStartTheoremProof",
            "41e8eba986e036ae11621fb82f77fcf4af874bd7"
        ],
        [
            "intros x y;repeat rewrite same_genZ.",
            "VernacExtend",
            "0ebdc358fc31bb6fb4900b2031534e3605ba3d5c"
        ],
        [
            "destruct x;destruct y;simpl;norm; rewrite (ARgen_phiPOS_mult ARth);try (norm;fail).",
            "VernacExtend",
            "aa4c2d30740aababd0b67aa70d35ef0600617068"
        ],
        [
            "rewrite (Ropp_opp Rsth Reqe Rth);rrefl.",
            "VernacExtend",
            "d270dfe8eaf5dd8fa90349dfb9c70631a6ae2b8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiZ_ext : forall x y : Z, x = y -> [x] == [y].",
            "VernacStartTheoremProof",
            "ad84d52eca44531540854edc6363c80c049ece57"
        ],
        [
            "intros;subst;rrefl.",
            "VernacExtend",
            "75221bd96ea7b8b79f3f9baf95d353e5ff6e1e78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiZ_morph : ring_morph 0 1 radd rmul rsub ropp req Z0 (Zpos xH) Z.add Z.mul Z.sub Z.opp Zeq_bool gen_phiZ.",
            "VernacStartTheoremProof",
            "7af7a95b92e6b809b16c3816d7d8c1886fb454ea"
        ],
        [
            "assert ( SRmorph : semi_morph 0 1 radd rmul req Z0 (Zpos xH) Z.add Z.mul Zeq_bool gen_phiZ).",
            "VernacExtend",
            "ae4cf7889696d26173fde972a3b7768ce5906517"
        ],
        [
            "apply mkRmorph;simpl;try rrefl.",
            "VernacExtend",
            "8b579223a8e4c72dd8a0623b65a071ea3b7c4666"
        ],
        [
            "apply gen_phiZ_add.",
            "VernacExtend",
            "afa1cb9dc298c424dd2ba754d58e1ef67a1680d9"
        ],
        [
            "apply gen_phiZ_mul.",
            "VernacExtend",
            "dd6ecd7b3d4675ede3f3abd267147c0f748732fa"
        ],
        [
            "apply gen_Zeqb_ok.",
            "VernacExtend",
            "67b1d0bc61f565e14fe048a33ea24f28b934b303"
        ],
        [
            "apply (Smorph_morph Rsth Reqe Rth Zth SRmorph gen_phiZ_ext).",
            "VernacExtend",
            "8b9ca23947bd53bd649bb6f43d7cd9ad2039db66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZMORPHISM.",
            "VernacEndSegment",
            "d6d0a7215e7ca4a8cf2bb2c682ae0ee0da5c5ed7"
        ],
        [
            "Lemma Nsth : Setoid_Theory N (@eq N).",
            "VernacStartTheoremProof",
            "a5c79a38a7af5573fd41aed473d0086f40573018"
        ],
        [
            "Proof (Eqsth N).",
            "VernacExactProof",
            "5d8449d47dd66a67c1d6adca7095f23c6fb22626"
        ],
        [
            "Lemma Nseqe : sring_eq_ext N.add N.mul (@eq N).",
            "VernacStartTheoremProof",
            "ad2bb79903cfc2a3e63902f9c99d97a51f6f0a99"
        ],
        [
            "Proof (Eq_s_ext N.add N.mul).",
            "VernacExactProof",
            "011644b93ceca661abcaf7acd0a9c846b0297eef"
        ],
        [
            "Lemma Nth : semi_ring_theory 0%N 1%N N.add N.mul (@eq N).",
            "VernacStartTheoremProof",
            "ab6175b570e74f84145593a6d782230f6cb81d2f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact N.add_0_l.",
            "VernacExtend",
            "31cf4fd22f1913bc6d26348bb9b7d66f5b1153ae"
        ],
        [
            "exact N.add_comm.",
            "VernacExtend",
            "e51411058cc253890ecac805729c5ae2219de4c9"
        ],
        [
            "exact N.add_assoc.",
            "VernacExtend",
            "658b0870d63cae76bee8c79b39007c341e0a5f18"
        ],
        [
            "exact N.mul_1_l.",
            "VernacExtend",
            "60f55265e27413ad76a30072f4d3e8259aadae62"
        ],
        [
            "exact N.mul_0_l.",
            "VernacExtend",
            "d85312e57aa64d478af050bcd8d8b2973498b686"
        ],
        [
            "exact N.mul_comm.",
            "VernacExtend",
            "54ce1b415f9e62f748b3de1c26d50e0421a47e5e"
        ],
        [
            "exact N.mul_assoc.",
            "VernacExtend",
            "02490376eeed81972fe4aeb83bfe8d842dd405d3"
        ],
        [
            "exact N.mul_add_distr_r.",
            "VernacExtend",
            "cd8513be387d08570cd64357e32d4035f0ffe937"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Nsub := SRsub N.add.",
            "VernacDefinition",
            "7881b780d9be1db2323ac429368099d6777c4460"
        ],
        [
            "Definition Nopp := (@SRopp N).",
            "VernacDefinition",
            "2ed01e16045b5bcb059eb6a4b544679025834982"
        ],
        [
            "Lemma Neqe : ring_eq_ext N.add N.mul Nopp (@eq N).",
            "VernacStartTheoremProof",
            "496847860c7cf45f0a1208504e83dd464ac77465"
        ],
        [
            "Proof (SReqe_Reqe Nseqe).",
            "VernacExactProof",
            "9c087cb8e4d8c620c58237b38b9944e5162fb821"
        ],
        [
            "Lemma Nath : almost_ring_theory 0%N 1%N N.add N.mul Nsub Nopp (@eq N).",
            "VernacStartTheoremProof",
            "489c820cb42bf5a9016ec5222329b6a4071819a8"
        ],
        [
            "Proof (SRth_ARth Nsth Nth).",
            "VernacExactProof",
            "81f406329cc9c38955c4dabe87bfeb23acd650aa"
        ],
        [
            "Lemma Neqb_ok : forall x y, N.eqb x y = true -> x = y.",
            "VernacStartTheoremProof",
            "44559961811449b81573d9ef98efdf7811fa480b"
        ],
        [
            "exact (fun x y => proj1 (N.eqb_eq x y)).",
            "VernacExtend",
            "eb7677635d3ee53b47233ff7dc9664b97d6c80b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section NMORPHISM.",
            "VernacBeginSection",
            "3642a2a860aeea0288c9df7dae39a986838cf870"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable (rO rI : R) (radd rmul: R->R->R).",
            "VernacAssumption",
            "2e5bc13ef71f0a9e661166ced38924b14affaef9"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Notation \"x + y\" := (radd x y).",
            "VernacNotation",
            "f9a1e48598a2a15fa2ad53ce0a86ee96899384bd"
        ],
        [
            "Notation \"x * y \" := (rmul x y).",
            "VernacNotation",
            "209e3909b7ad4feae3d80eafd53692de1d7247b3"
        ],
        [
            "Variable Rsth : Setoid_Theory R req.",
            "VernacAssumption",
            "67c9d4fe4c951815aa2bb7bc7f436ecc6294c479"
        ],
        [
            "Add Parametric Relation : R req reflexivity proved by Rsth.(@Equivalence_Reflexive _ _) symmetry proved by Rsth.(@Equivalence_Symmetric _ _) transitivity proved by Rsth.(@Equivalence_Transitive _ _) as R_setoid4.",
            "VernacExtend",
            "21666b8504c0e5a16c7c332bd21b629b8641c823"
        ],
        [
            "Ltac rrefl := gen_reflexivity Rsth.",
            "VernacExtend",
            "5ea5eb8f3d94660b07009441ad3899bc6203c57d"
        ],
        [
            "Variable SReqe : sring_eq_ext radd rmul req.",
            "VernacAssumption",
            "c3e8828d7363c048ebf09ce8e55368dd9fa9fd6d"
        ],
        [
            "Variable SRth : semi_ring_theory 0 1 radd rmul req.",
            "VernacAssumption",
            "7412789093e082322b6cf126330f0e636886f09d"
        ],
        [
            "Let ARth := SRth_ARth Rsth SRth.",
            "VernacDefinition",
            "738deb869d1485214932140f01a9b0bf11641f96"
        ],
        [
            "Let Reqe := SReqe_Reqe SReqe.",
            "VernacDefinition",
            "fda11a1dc894ef5af3c27310b6905e28136ee771"
        ],
        [
            "Let ropp := (@SRopp R).",
            "VernacDefinition",
            "253676f910ab119bbfac989367750110b693b5e4"
        ],
        [
            "Let rsub := (@SRsub R radd).",
            "VernacDefinition",
            "29961b184b8a1de18c09b0b3cdcca9e32f02ca8d"
        ],
        [
            "Notation \"x - y \" := (rsub x y).",
            "VernacNotation",
            "522987606e5604415d2a3e69360f16a100bfbaf8"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Notation \"x == y\" := (req x y).",
            "VernacNotation",
            "1367374c87f9bf84183973a2bb249fe42031446b"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext4.",
            "VernacExtend",
            "bbd4106c1499ec82444258e22cbf3790f69fc764"
        ],
        [
            "exact (Radd_ext Reqe).",
            "VernacExtend",
            "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext4.",
            "VernacExtend",
            "4537d033c66f5413b8c1e476e7cb2967f121e908"
        ],
        [
            "exact (Rmul_ext Reqe).",
            "VernacExtend",
            "13b3093566a735d2e3348ba5dd18427edb19cc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac norm := gen_srewrite_sr Rsth Reqe ARth.",
            "VernacExtend",
            "3d2024206d5e428abef956dabc95381ae63ec184"
        ],
        [
            "Definition gen_phiN1 x := match x with | N0 => 0 | Npos x => gen_phiPOS1 1 radd rmul x end.",
            "VernacDefinition",
            "08de5dc29f9294c5b7a45a5d8f81e3375c6020e2"
        ],
        [
            "Definition gen_phiN x := match x with | N0 => 0 | Npos x => gen_phiPOS 1 radd rmul x end.",
            "VernacDefinition",
            "8a23adc4a500582f426b954874b25a96ce54fa3b"
        ],
        [
            "Notation \"[ x ]\" := (gen_phiN x).",
            "VernacNotation",
            "49fb9f5681389a9bb5005cafbf2ef2a6cd4dc9e4"
        ],
        [
            "Lemma same_genN : forall x, [x] == gen_phiN1 x.",
            "VernacStartTheoremProof",
            "cc40f8df7cc4c8ef23ce68ba197fe84aa42bee3b"
        ],
        [
            "destruct x;simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "now rewrite (same_gen Rsth Reqe ARth).",
            "VernacExtend",
            "85291a15d94b71c1624baf54c2d733ede7ce5e77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiN_add : forall x y, [x + y] == [x] + [y].",
            "VernacStartTheoremProof",
            "307f1e4f9478aa5014654caabb4e44424c615d45"
        ],
        [
            "intros x y;repeat rewrite same_genN.",
            "VernacExtend",
            "a0956fe4efcf75c5586fa80f141435039c49aac9"
        ],
        [
            "destruct x;destruct y;simpl;norm.",
            "VernacExtend",
            "fbf4b92d89d422977aadbc78f2cee6654addd942"
        ],
        [
            "apply (ARgen_phiPOS_add Rsth Reqe ARth).",
            "VernacExtend",
            "b2c092bb3c6fa5961b760db01231df5c9182eafe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiN_mult : forall x y, [x * y] == [x] * [y].",
            "VernacStartTheoremProof",
            "1ec5b01b85fafb905d2b9093a0bb4c5cc05f6619"
        ],
        [
            "intros x y;repeat rewrite same_genN.",
            "VernacExtend",
            "a0956fe4efcf75c5586fa80f141435039c49aac9"
        ],
        [
            "destruct x;destruct y;simpl;norm.",
            "VernacExtend",
            "fbf4b92d89d422977aadbc78f2cee6654addd942"
        ],
        [
            "apply (ARgen_phiPOS_mult Rsth Reqe ARth).",
            "VernacExtend",
            "4d6c145df9580afaee9e708b65399c8b924a95ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiN_sub : forall x y, [Nsub x y] == [x] - [y].",
            "VernacStartTheoremProof",
            "3c959b6f03b06946560674ac728ce80f081eb711"
        ],
        [
            "exact gen_phiN_add.",
            "VernacExtend",
            "3e959991a58a7eeb21f9923c30a1bda088664c72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiN_morph : ring_morph 0 1 radd rmul rsub ropp req 0%N 1%N N.add N.mul Nsub Nopp N.eqb gen_phiN.",
            "VernacStartTheoremProof",
            "332182c25e40ea9f068b245f6f5dcaab526e8363"
        ],
        [
            "constructor; simpl; try reflexivity.",
            "VernacExtend",
            "479ce962fbcb991a0635ad5aaa13ec40fa0a173e"
        ],
        [
            "apply gen_phiN_add.",
            "VernacExtend",
            "b90b8500d22522d28d805d124540cb449aa10d34"
        ],
        [
            "apply gen_phiN_sub.",
            "VernacExtend",
            "b80822ef04b4288f384f4d3af9ccf5c0aafb7d16"
        ],
        [
            "apply gen_phiN_mult.",
            "VernacExtend",
            "ad052946b8c14d386184894aa22c0a5c06e8d45a"
        ],
        [
            "intros x y EQ.",
            "VernacExtend",
            "3a2928b54bbfe9cf5397bff81f125b7a35085f7d"
        ],
        [
            "apply N.eqb_eq in EQ.",
            "VernacExtend",
            "87b156131327f57df16b4503ad6836d35e8c9efb"
        ],
        [
            "now subst.",
            "VernacExtend",
            "89cc250d34dafb32c3653b2706abafd433151f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NMORPHISM.",
            "VernacEndSegment",
            "a741cdb267fdfbeed16cd608f6d689d461d45f22"
        ],
        [
            "Definition Nword := list N.",
            "VernacDefinition",
            "7f275a7c82feee2602a072e77c8deafb06ddb6a3"
        ],
        [
            "Definition NwO : Nword := nil.",
            "VernacDefinition",
            "313d97f3b5ddd3970fe214023c5be8314ea45ce3"
        ],
        [
            "Definition NwI : Nword := 1%N :: nil.",
            "VernacDefinition",
            "9288597aae39cc2907ebf3c8341a71bf67de713e"
        ],
        [
            "Definition Nwcons n (w : Nword) : Nword := match w, n with | nil, 0%N => nil | _, _ => n :: w end.",
            "VernacDefinition",
            "7ce0f2e995e940c9750401f146c724b87b23f29d"
        ],
        [
            "Fixpoint Nwadd (w1 w2 : Nword) {struct w1} : Nword := match w1, w2 with | n1::w1', n2:: w2' => (n1+n2)%N :: Nwadd w1' w2' | nil, _ => w2 | _, nil => w1 end.",
            "VernacFixpoint",
            "99fd8a83f85163014ff969dd837ba139cace8578"
        ],
        [
            "Definition Nwopp (w:Nword) : Nword := Nwcons 0%N w.",
            "VernacDefinition",
            "e12568591ff3b290c315b7a95bc98de7756af926"
        ],
        [
            "Definition Nwsub w1 w2 := Nwadd w1 (Nwopp w2).",
            "VernacDefinition",
            "f63d33d25e60f8e3edde4a79b8ce48d7a0b90d9d"
        ],
        [
            "Fixpoint Nwscal (n : N) (w : Nword) {struct w} : Nword := match w with | m :: w' => (n*m)%N :: Nwscal n w' | nil => nil end.",
            "VernacFixpoint",
            "b57fefe17a49882f72476900b2ac70809a65465e"
        ],
        [
            "Fixpoint Nwmul (w1 w2 : Nword) {struct w1} : Nword := match w1 with | 0%N::w1' => Nwopp (Nwmul w1' w2) | n1::w1' => Nwsub (Nwscal n1 w2) (Nwmul w1' w2) | nil => nil end.",
            "VernacFixpoint",
            "9669320357e615688ac1c4641b8a8a6ea7f335ea"
        ],
        [
            "Fixpoint Nw_is0 (w : Nword) : bool := match w with | nil => true | 0%N :: w' => Nw_is0 w' | _ => false end.",
            "VernacFixpoint",
            "2285e91fe650da47e975ef8f5ae3f47ce06ee8d2"
        ],
        [
            "Fixpoint Nweq_bool (w1 w2 : Nword) {struct w1} : bool := match w1, w2 with | n1::w1', n2::w2' => if N.eqb n1 n2 then Nweq_bool w1' w2' else false | nil, _ => Nw_is0 w2 | _, nil => Nw_is0 w1 end.",
            "VernacFixpoint",
            "4fdf80a1eed0c5f9822adb0dd3729cd29894d5de"
        ],
        [
            "Section NWORDMORPHISM.",
            "VernacBeginSection",
            "32f370cbe00cfc25c881208b389613ed45f6b988"
        ],
        [
            "Variable R : Type.",
            "VernacAssumption",
            "ab8b7c03c13a438d85be3477064b5f670ea3b2a7"
        ],
        [
            "Variable (rO rI : R) (radd rmul rsub: R->R->R) (ropp : R -> R).",
            "VernacAssumption",
            "50301ed65bb665fbf3206555d45afa28de31a677"
        ],
        [
            "Variable req : R -> R -> Prop.",
            "VernacAssumption",
            "c08c4dab4d113ae2ffb3423a9cac1a31f4d6a80f"
        ],
        [
            "Notation \"0\" := rO.",
            "VernacNotation",
            "39307f4744867b373c61e447b253d6fa2a10d3bc"
        ],
        [
            "Notation \"1\" := rI.",
            "VernacNotation",
            "17fe4fc9949d9835f722602f2c69debaa97982a0"
        ],
        [
            "Notation \"x + y\" := (radd x y).",
            "VernacNotation",
            "f9a1e48598a2a15fa2ad53ce0a86ee96899384bd"
        ],
        [
            "Notation \"x * y \" := (rmul x y).",
            "VernacNotation",
            "209e3909b7ad4feae3d80eafd53692de1d7247b3"
        ],
        [
            "Notation \"x - y \" := (rsub x y).",
            "VernacNotation",
            "522987606e5604415d2a3e69360f16a100bfbaf8"
        ],
        [
            "Notation \"- x\" := (ropp x).",
            "VernacNotation",
            "5d42be43841f56dd11f6c8776d97d3dd20c4f587"
        ],
        [
            "Notation \"x == y\" := (req x y).",
            "VernacNotation",
            "1367374c87f9bf84183973a2bb249fe42031446b"
        ],
        [
            "Variable Rsth : Setoid_Theory R req.",
            "VernacAssumption",
            "67c9d4fe4c951815aa2bb7bc7f436ecc6294c479"
        ],
        [
            "Add Parametric Relation : R req reflexivity proved by Rsth.(@Equivalence_Reflexive _ _) symmetry proved by Rsth.(@Equivalence_Symmetric _ _) transitivity proved by Rsth.(@Equivalence_Transitive _ _) as R_setoid5.",
            "VernacExtend",
            "5573dfaf8f429e798d6388c2aa1bf93d32686d4b"
        ],
        [
            "Ltac rrefl := gen_reflexivity Rsth.",
            "VernacExtend",
            "5ea5eb8f3d94660b07009441ad3899bc6203c57d"
        ],
        [
            "Variable Reqe : ring_eq_ext radd rmul ropp req.",
            "VernacAssumption",
            "2490789f2fd55b52c058faf984f76ae57e3f5ca4"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext5.",
            "VernacExtend",
            "452d89392f82e86a60ffe301b996d2b290426e9e"
        ],
        [
            "exact (Radd_ext Reqe).",
            "VernacExtend",
            "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext5.",
            "VernacExtend",
            "15dd25684d886e64d1dc604dc3a82274cfb240b1"
        ],
        [
            "exact (Rmul_ext Reqe).",
            "VernacExtend",
            "13b3093566a735d2e3348ba5dd18427edb19cc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism ropp with signature (req ==> req) as ropp_ext5.",
            "VernacExtend",
            "a06e8cf6023aabb3bbf2a79fc170774edcac6a6e"
        ],
        [
            "exact (Ropp_ext Reqe).",
            "VernacExtend",
            "e013460b2ed7bdd11390b3f84aa58078462220c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable ARth : almost_ring_theory 0 1 radd rmul rsub ropp req.",
            "VernacAssumption",
            "421152d5013c2ca15573273d19425258db41b4b5"
        ],
        [
            "Add Morphism rsub with signature (req ==> req ==> req) as rsub_ext7.",
            "VernacExtend",
            "17f25a0ee1e651529923d5de8645a881ea702d70"
        ],
        [
            "exact (ARsub_ext Rsth Reqe ARth).",
            "VernacExtend",
            "598d7a4358fb924db1093bc250a8a51010ad7b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac norm := gen_srewrite Rsth Reqe ARth.",
            "VernacExtend",
            "232ba897aaa3a3c2bf5adcab00dd29aba1fb9cb6"
        ],
        [
            "Ltac add_push := gen_add_push radd Rsth Reqe ARth.",
            "VernacExtend",
            "807d29a516e79214f687cb386094990f68e2e17a"
        ],
        [
            "Fixpoint gen_phiNword (w : Nword) : R := match w with | nil => 0 | n :: nil => gen_phiN rO rI radd rmul n | N0 :: w' => - gen_phiNword w' | n::w' => gen_phiN rO rI radd rmul n - gen_phiNword w' end.",
            "VernacFixpoint",
            "0f0f1e07dfacc7ac812f902d5207dfcb0ce8e66e"
        ],
        [
            "Lemma gen_phiNword0_ok : forall w, Nw_is0 w = true -> gen_phiNword w == 0.",
            "VernacStartTheoremProof",
            "10c87cc4e4772e9a34f692f9b818e103e38dd90e"
        ],
        [
            "induction w; simpl; intros; auto.",
            "VernacExtend",
            "fa2ad27589e1a986434b0d20d832c97aa3a423db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "destruct w.",
            "VernacExtend",
            "69afe3ff365f611d141c0e713eb6eeb981144a33"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite IHw; trivial.",
            "VernacExtend",
            "4053fb21a2f7b1db63eb4eafb83d712475af64da"
        ],
        [
            "apply (ARopp_zero Rsth Reqe ARth).",
            "VernacExtend",
            "3030751b08e60e4b48d7a3eedd96a2bd0056d73d"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiNword_cons : forall w n, gen_phiNword (n::w) == gen_phiN rO rI radd rmul n - gen_phiNword w.",
            "VernacStartTheoremProof",
            "a2a2abfaa2b2f673efd9e8a86e8db1c845137aa8"
        ],
        [
            "induction w.",
            "VernacExtend",
            "00a39f78c1958c5075f30e53ba2c016aabba0f9e"
        ],
        [
            "destruct n; simpl; norm.",
            "VernacExtend",
            "06cadeb250440a27cd1fcafc11a308b8f30f7ac8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n; norm.",
            "VernacExtend",
            "afc66d06713aa8281f2ef76cbd90331ce7fb3d50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiNword_Nwcons : forall w n, gen_phiNword (Nwcons n w) == gen_phiN rO rI radd rmul n - gen_phiNword w.",
            "VernacStartTheoremProof",
            "06f35af546bdf08093738e0ee69310387e68a138"
        ],
        [
            "destruct w; intros.",
            "VernacExtend",
            "0977d1bff7ec0c6434abfb4b20f2bb18c244ce67"
        ],
        [
            "destruct n; norm.",
            "VernacExtend",
            "afc66d06713aa8281f2ef76cbd90331ce7fb3d50"
        ],
        [
            "unfold Nwcons.",
            "VernacExtend",
            "d48243a9478c8035d21ca13085a1f27a029ba89e"
        ],
        [
            "rewrite gen_phiNword_cons.",
            "VernacExtend",
            "0af074a296b5f98a5345bc0592f765007393f37c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiNword_ok : forall w1 w2, Nweq_bool w1 w2 = true -> gen_phiNword w1 == gen_phiNword w2.",
            "VernacStartTheoremProof",
            "c1a0bb543800999bfe41151763450ae8def4ac8c"
        ],
        [
            "induction w1; intros.",
            "VernacExtend",
            "4921c5c2b831be275ad810e5b6190ac545c5aa5b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (gen_phiNword0_ok _ H).",
            "VernacExtend",
            "1de9592b08d52636e79fa7e78d6d7175c2084c6f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite gen_phiNword_cons.",
            "VernacExtend",
            "0af074a296b5f98a5345bc0592f765007393f37c"
        ],
        [
            "destruct w2.",
            "VernacExtend",
            "1e860dfd5a330130c73eb1a8633a66ff30ebf308"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct a; try discriminate.",
            "VernacExtend",
            "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
        ],
        [
            "rewrite (gen_phiNword0_ok _ H).",
            "VernacExtend",
            "1de9592b08d52636e79fa7e78d6d7175c2084c6f"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite gen_phiNword_cons.",
            "VernacExtend",
            "0af074a296b5f98a5345bc0592f765007393f37c"
        ],
        [
            "case_eq (N.eqb a n); intros H0.",
            "VernacExtend",
            "bb8c6bceb3290fa8ae5f32ef5a5fbfaa00595252"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "apply N.eqb_eq in H0.",
            "VernacExtend",
            "e7be6d1636b92dd351106b02bcdd3711fb8163a5"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite (IHw1 _ H).",
            "VernacExtend",
            "d9c2565f10bc40bb97e3c1ad5efecd1837e255e8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H0 in H; discriminate H.",
            "VernacExtend",
            "745b04536c318577f2186e845aaf628c22f47d42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nwadd_ok : forall x y, gen_phiNword (Nwadd x y) == gen_phiNword x + gen_phiNword y.",
            "VernacStartTheoremProof",
            "61c10a83dc36ec99aa3cb7f6beb63e32f038d48c"
        ],
        [
            "induction x; intros.",
            "VernacExtend",
            "967005fa252895ab470aa9876d40c37f363bf6d6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "simpl Nwadd; norm.",
            "VernacExtend",
            "fe7e12b75c2dd83c8adc69d32c796d5a43fed94a"
        ],
        [
            "simpl Nwadd.",
            "VernacExtend",
            "6fa1eef5c42b481e811fb33b680c3b3f7deb7920"
        ],
        [
            "repeat rewrite gen_phiNword_cons.",
            "VernacExtend",
            "debe1512efa74c318a13752b6ea06f4b87d329f1"
        ],
        [
            "rewrite (fun sreq => gen_phiN_add Rsth sreq (ARth_SRth ARth)) by (destruct Reqe; constructor; trivial).",
            "VernacExtend",
            "e82d4b36d5b2a3e2cfc62c264a42100c118dcf62"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "add_push (- gen_phiNword x); reflexivity.",
            "VernacExtend",
            "527b827c980b87b7b3dfbb6c06f403065c1ef5d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nwopp_ok : forall x, gen_phiNword (Nwopp x) == - gen_phiNword x.",
            "VernacStartTheoremProof",
            "268ce43c003301c8b2a5425c7461e9ff5332f19b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Nwopp; simpl.",
            "VernacExtend",
            "bf10e6b8ad3c3bab40f655a3ecf9a445f27428f9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite gen_phiNword_Nwcons; norm.",
            "VernacExtend",
            "e012c281fa0b1072722f4f8ba17cf03256bb825b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nwscal_ok : forall n x, gen_phiNword (Nwscal n x) == gen_phiN rO rI radd rmul n * gen_phiNword x.",
            "VernacStartTheoremProof",
            "5e78c10ba3991b813f5d75299b2a44b5361a8d10"
        ],
        [
            "induction x; intros.",
            "VernacExtend",
            "967005fa252895ab470aa9876d40c37f363bf6d6"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "simpl Nwscal.",
            "VernacExtend",
            "de98c1c39944eeba341ecc0ea28e6bb2e08bc44d"
        ],
        [
            "repeat rewrite gen_phiNword_cons.",
            "VernacExtend",
            "debe1512efa74c318a13752b6ea06f4b87d329f1"
        ],
        [
            "rewrite (fun sreq => gen_phiN_mult Rsth sreq (ARth_SRth ARth)) by (destruct Reqe; constructor; trivial).",
            "VernacExtend",
            "6d9a5e247ba321b9214a24c22f5c8799be4c6ae7"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Nwmul_ok : forall x y, gen_phiNword (Nwmul x y) == gen_phiNword x * gen_phiNword y.",
            "VernacStartTheoremProof",
            "0553e7b026035c29d24a29033b2b70b085d0cf4b"
        ],
        [
            "induction x; intros.",
            "VernacExtend",
            "967005fa252895ab470aa9876d40c37f363bf6d6"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "simpl Nwmul.",
            "VernacExtend",
            "8e0ad5f3f01887060bbc85920028ad5f444e8777"
        ],
        [
            "rewrite Nwopp_ok.",
            "VernacExtend",
            "f1ecb23aedfb2a8f36475725c7997659e8bc1950"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "rewrite gen_phiNword_cons.",
            "VernacExtend",
            "0af074a296b5f98a5345bc0592f765007393f37c"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "simpl Nwmul.",
            "VernacExtend",
            "8e0ad5f3f01887060bbc85920028ad5f444e8777"
        ],
        [
            "unfold Nwsub.",
            "VernacExtend",
            "4d39e6623f2e1f7d4ae66ca03cc28ab750cdad57"
        ],
        [
            "rewrite Nwadd_ok.",
            "VernacExtend",
            "574e536b3cbde407657bffe6fbf6519a7f0fc547"
        ],
        [
            "rewrite Nwscal_ok.",
            "VernacExtend",
            "0568d5824636172e2beff21b114b8f3453c90841"
        ],
        [
            "rewrite Nwopp_ok.",
            "VernacExtend",
            "f1ecb23aedfb2a8f36475725c7997659e8bc1950"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "rewrite gen_phiNword_cons.",
            "VernacExtend",
            "0af074a296b5f98a5345bc0592f765007393f37c"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gen_phiNword_morph : ring_morph 0 1 radd rmul rsub ropp req NwO NwI Nwadd Nwmul Nwsub Nwopp Nweq_bool gen_phiNword.",
            "VernacStartTheoremProof",
            "6dc010ebb729141027c21a0a572ad3c1c779146a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "exact Nwadd_ok.",
            "VernacExtend",
            "225471b6f504e47214dc96c9e8dc274b870f26d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Nwsub.",
            "VernacExtend",
            "4d39e6623f2e1f7d4ae66ca03cc28ab750cdad57"
        ],
        [
            "rewrite Nwadd_ok.",
            "VernacExtend",
            "574e536b3cbde407657bffe6fbf6519a7f0fc547"
        ],
        [
            "rewrite Nwopp_ok.",
            "VernacExtend",
            "f1ecb23aedfb2a8f36475725c7997659e8bc1950"
        ],
        [
            "norm.",
            "VernacExtend",
            "1334373f0d916948ad2b3da6a6a093436489f73d"
        ],
        [
            "exact Nwmul_ok.",
            "VernacExtend",
            "a25a02be5e653f7479dedb97d1d14ce5b285be09"
        ],
        [
            "exact Nwopp_ok.",
            "VernacExtend",
            "d48fc97b690ef9d7048989146481ba4320ef6ded"
        ],
        [
            "exact gen_phiNword_ok.",
            "VernacExtend",
            "90abed691e5e0c83acb1292beba92f232a7822d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NWORDMORPHISM.",
            "VernacEndSegment",
            "cd49c4a8f13b518d2f95d4c81a9e07fab7b4db80"
        ],
        [
            "Section GEN_DIV.",
            "VernacBeginSection",
            "9810ff3a3ff050fbe510cd2e7fae092e0b88b71c"
        ],
        [
            "Variables (R : Type) (rO : R) (rI : R) (radd : R -> R -> R) (rmul : R -> R -> R) (rsub : R -> R -> R) (ropp : R -> R) (req : R -> R -> Prop) (C : Type) (cO : C) (cI : C) (cadd : C -> C -> C) (cmul : C -> C -> C) (csub : C -> C -> C) (copp : C -> C) (ceqb : C -> C -> bool) (phi : C -> R).",
            "VernacAssumption",
            "b23f342df7671866f15297604b008203b9ab7619"
        ],
        [
            "Variable Rsth : Setoid_Theory R req.",
            "VernacAssumption",
            "67c9d4fe4c951815aa2bb7bc7f436ecc6294c479"
        ],
        [
            "Variable Reqe : ring_eq_ext radd rmul ropp req.",
            "VernacAssumption",
            "2490789f2fd55b52c058faf984f76ae57e3f5ca4"
        ],
        [
            "Variable ARth : almost_ring_theory rO rI radd rmul rsub ropp req.",
            "VernacAssumption",
            "db5fb1f29392ebc64c94bb3f8434a3a90cfa8c68"
        ],
        [
            "Variable morph : ring_morph rO rI radd rmul rsub ropp req cO cI cadd cmul csub copp ceqb phi.",
            "VernacAssumption",
            "4d0e93d273108a043179b284744e95ddb06fda3e"
        ],
        [
            "Add Parametric Relation : R req reflexivity proved by Rsth.(@Equivalence_Reflexive _ _) symmetry proved by Rsth.(@Equivalence_Symmetric _ _) transitivity proved by Rsth.(@Equivalence_Transitive _ _) as R_set1.",
            "VernacExtend",
            "ffaf9eee6d7ceb3ad59ed8d5edcf6b4a89109b8a"
        ],
        [
            "Ltac rrefl := gen_reflexivity Rsth.",
            "VernacExtend",
            "5ea5eb8f3d94660b07009441ad3899bc6203c57d"
        ],
        [
            "Add Morphism radd with signature (req ==> req ==> req) as radd_ext.",
            "VernacExtend",
            "afa1203d9df0105f85e320ead354fbac4f961b57"
        ],
        [
            "exact (Radd_ext Reqe).",
            "VernacExtend",
            "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rmul with signature (req ==> req ==> req) as rmul_ext.",
            "VernacExtend",
            "9ac189bda5c441f2c1f9699cd760e4bd2b8450a2"
        ],
        [
            "exact (Rmul_ext Reqe).",
            "VernacExtend",
            "13b3093566a735d2e3348ba5dd18427edb19cc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism ropp with signature (req ==> req) as ropp_ext.",
            "VernacExtend",
            "5e9cfc220fb3a78992fc32c9a429637b459fffa1"
        ],
        [
            "exact (Ropp_ext Reqe).",
            "VernacExtend",
            "e013460b2ed7bdd11390b3f84aa58078462220c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Morphism rsub with signature (req ==> req ==> req) as rsub_ext.",
            "VernacExtend",
            "5bba83c2c4c166d838c91a064bd66e4d0c8d3257"
        ],
        [
            "exact (ARsub_ext Rsth Reqe ARth).",
            "VernacExtend",
            "598d7a4358fb924db1093bc250a8a51010ad7b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac rsimpl := gen_srewrite Rsth Reqe ARth.",
            "VernacExtend",
            "316a2bb443d0b018b8e39a076d455d3f980cee6d"
        ],
        [
            "Definition triv_div x y := if ceqb x y then (cI, cO) else (cO, x).",
            "VernacDefinition",
            "259f779a3ffc2361d65648586671bbee5234eb94"
        ],
        [
            "Ltac Esimpl :=repeat (progress ( match goal with | |- context [phi cO] => rewrite (morph0 morph) | |- context [phi cI] => rewrite (morph1 morph) | |- context [phi (cadd ?x ?y)] => rewrite ((morph_add morph) x y) | |- context [phi (cmul ?x ?y)] => rewrite ((morph_mul morph) x y) | |- context [phi (csub ?x ?y)] => rewrite ((morph_sub morph) x y) | |- context [phi (copp ?x)] => rewrite ((morph_opp morph) x) end)).",
            "VernacExtend",
            "1424996bb28b7fdc330999cc877d469ecfc4b02e"
        ],
        [
            "Lemma triv_div_th : Ring_theory.div_theory req cadd cmul phi triv_div.",
            "VernacStartTheoremProof",
            "b731f8346f89aed039b1ce12ff9505c461607b4d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros a b;unfold triv_div.",
            "VernacExtend",
            "4e706e329ed43c461ac7302fc4d946393126d93e"
        ],
        [
            "assert (X:= morph.(morph_eq) a b);destruct (ceqb a b).",
            "VernacExtend",
            "05c71c815fd48bba2da1a4be6f0e31fbcf14cddc"
        ],
        [
            "Esimpl.",
            "VernacExtend",
            "3a252c15f70179de488ce1e48e727af833faeb30"
        ],
        [
            "rewrite X; trivial.",
            "VernacExtend",
            "7a8a6f5f4179eed6dfa089014c9bde6a4c61658b"
        ],
        [
            "rsimpl.",
            "VernacExtend",
            "33aaaa4fff13f2b6581505230c4ac0294a17d021"
        ],
        [
            "Esimpl; rsimpl.",
            "VernacExtend",
            "215cd5848fca325fe72e03bf99cbafd45cbc586b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable zphi : Z -> R.",
            "VernacAssumption",
            "0b23c22674dedcb5fdd19241cfab4a7f2807ed1d"
        ],
        [
            "Lemma Ztriv_div_th : div_theory req Z.add Z.mul zphi Z.quotrem.",
            "VernacStartTheoremProof",
            "5ea285d583b0fd7940cc418c7ca12b5531a53948"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros; generalize (Z.quotrem_eq a b); case Z.quotrem; intros; subst.",
            "VernacExtend",
            "f9264d3c48585792990c4a465612b61ec7170113"
        ],
        [
            "rewrite Z.mul_comm; rsimpl.",
            "VernacExtend",
            "f3d156a8e3b34701a2141bc477e803e21fb75da0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable nphi : N -> R.",
            "VernacAssumption",
            "8b424ab41af5719ca994231ffadc1974231d3439"
        ],
        [
            "Lemma Ntriv_div_th : div_theory req N.add N.mul nphi N.div_eucl.",
            "VernacStartTheoremProof",
            "b012b177256ed58b6a273457d9cd0c3e541220bb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros; generalize (N.div_eucl_spec a b); case N.div_eucl; intros; subst.",
            "VernacExtend",
            "ca23a0027881fac4f4a3464d4940d1bf09e893b9"
        ],
        [
            "rewrite N.mul_comm; rsimpl.",
            "VernacExtend",
            "31fed2c773627b6887983c9a6d2b74da8ea17d31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GEN_DIV.",
            "VernacEndSegment",
            "741822926b441af77a08858147e73a38ffa25333"
        ],
        [
            "Ltac inv_gen_phi_pos rI add mul t := let rec inv_cst t := match t with rI => constr:(1%positive) | (add rI rI) => constr:(2%positive) | (add rI (add rI rI)) => constr:(3%positive) | (mul (add rI rI) ?p) => match inv_cst p with NotConstant => constr:(NotConstant) | 1%positive => constr:(NotConstant) | ?p => constr:(xO p) end | (add rI (mul (add rI rI) ?p)) => match inv_cst p with NotConstant => constr:(NotConstant) | 1%positive => constr:(NotConstant) | ?p => constr:(xI p) end | _ => constr:(NotConstant) end in inv_cst t.",
            "VernacExtend",
            "0c358e4f9395f9c4179a0ef94f0c31590ab3ad2a"
        ],
        [
            "Ltac inv_gen_phiNword rO rI add mul opp t := match t with rO => constr:(NwO) | _ => match inv_gen_phi_pos rI add mul t with NotConstant => constr:(NotConstant) | ?p => constr:(Npos p::nil) end end.",
            "VernacExtend",
            "f925cb253eb1162dd3a1751555d3630a1fba6fa0"
        ],
        [
            "Ltac inv_gen_phiN rO rI add mul t := match t with rO => constr:(0%N) | _ => match inv_gen_phi_pos rI add mul t with NotConstant => constr:(NotConstant) | ?p => constr:(Npos p) end end.",
            "VernacExtend",
            "3a5b01d6bfe2b04a0a9993f0ef240bdac6a1cf87"
        ],
        [
            "Ltac inv_gen_phiZ rO rI add mul opp t := match t with rO => constr:(0%Z) | (opp ?p) => match inv_gen_phi_pos rI add mul p with NotConstant => constr:(NotConstant) | ?p => constr:(Zneg p) end | _ => match inv_gen_phi_pos rI add mul t with NotConstant => constr:(NotConstant) | ?p => constr:(Zpos p) end end.",
            "VernacExtend",
            "5b0f0e4f79e84622beb78ee6d7fa1843f5821022"
        ],
        [
            "Ltac inv_gen_phi rO rI cO cI t := match t with | rO => cO | rI => cI end.",
            "VernacExtend",
            "472b00b4ec8f5bd7dfa5c0a446b4f0c3bfb661d1"
        ],
        [
            "Ltac inv_morph_nothing t := constr:(NotConstant).",
            "VernacExtend",
            "26defb20d5dfb74df4c4847c32a639e8b33860a2"
        ],
        [
            "Ltac coerce_to_almost_ring set ext rspec := match type of rspec with | ring_theory _ _ _ _ _ _ _ => constr:(Rth_ARth set ext rspec) | semi_ring_theory _ _ _ _ _ => constr:(SRth_ARth set rspec) | almost_ring_theory _ _ _ _ _ _ _ => rspec | _ => fail 1 \"not a valid ring theory\" end.",
            "VernacExtend",
            "e9f25e673266906b2be8559512eb4bc0a3cfbc4b"
        ],
        [
            "Ltac coerce_to_ring_ext ext := match type of ext with | ring_eq_ext _ _ _ _ => ext | sring_eq_ext _ _ _ => constr:(SReqe_Reqe ext) | _ => fail 1 \"not a valid ring_eq_ext theory\" end.",
            "VernacExtend",
            "5b922a5d135bdfeebec87ececa618f9eff423bab"
        ],
        [
            "Ltac abstract_ring_morphism set ext rspec := match type of rspec with | ring_theory _ _ _ _ _ _ _ => constr:(gen_phiZ_morph set ext rspec) | semi_ring_theory _ _ _ _ _ => constr:(gen_phiN_morph set ext rspec) | almost_ring_theory _ _ _ _ _ _ _ => constr:(gen_phiNword_morph set ext rspec) | _ => fail 1 \"bad ring structure\" end.",
            "VernacExtend",
            "c9caa122e482c75c68e8e992a1f5fd694f22ab49"
        ],
        [
            "Record hypo : Type := mkhypo { hypo_type : Type; hypo_proof : hypo_type }.",
            "VernacInductive",
            "b383f8fed59aea0e015ec7611b633141165cad96"
        ],
        [
            "Ltac gen_ring_pow set arth pspec := match pspec with | None => match type of arth with | @almost_ring_theory ?R ?rO ?rI ?radd ?rmul ?rsub ?ropp ?req => constr:(mkhypo (@pow_N_th R rI rmul req set)) | _ => fail 1 \"gen_ring_pow\" end | Some ?t => constr:(t) end.",
            "VernacExtend",
            "73795abb764f96af1fd6d5c33ddd9406265095fa"
        ],
        [
            "Ltac gen_ring_sign morph sspec := match sspec with | None => match type of morph with | @ring_morph ?R ?r0 ?rI ?radd ?rmul ?rsub ?ropp ?req Z ?c0 ?c1 ?cadd ?cmul ?csub ?copp ?ceqb ?phi => constr:(@mkhypo (sign_theory copp ceqb get_signZ) get_signZ_th) | @ring_morph ?R ?r0 ?rI ?radd ?rmul ?rsub ?ropp ?req ?C ?c0 ?c1 ?cadd ?cmul ?csub ?copp ?ceqb ?phi => constr:(mkhypo (@get_sign_None_th C copp ceqb)) | _ => fail 2 \"ring anomaly : default_sign_spec\" end | Some ?t => constr:(t) end.",
            "VernacExtend",
            "5abc42b7b73f23c70b5c0287befbf718ef22ca62"
        ],
        [
            "Ltac default_div_spec set reqe arth morph := match type of morph with | @ring_morph ?R ?r0 ?rI ?radd ?rmul ?rsub ?ropp ?req Z ?c0 ?c1 Z.add Z.mul ?csub ?copp ?ceq_b ?phi => constr:(mkhypo (Ztriv_div_th set phi)) | @ring_morph ?R ?r0 ?rI ?radd ?rmul ?rsub ?ropp ?req N ?c0 ?c1 N.add N.mul ?csub ?copp ?ceq_b ?phi => constr:(mkhypo (Ntriv_div_th set phi)) | @ring_morph ?R ?r0 ?rI ?radd ?rmul ?rsub ?ropp ?req ?C ?c0 ?c1 ?cadd ?cmul ?csub ?copp ?ceq_b ?phi => constr:(mkhypo (triv_div_th set reqe arth morph)) | _ => fail 1 \"ring anomaly : default_sign_spec\" end.",
            "VernacExtend",
            "42cc4424a17b4c6eef88daf5d2d23a473fec7532"
        ],
        [
            "Ltac gen_ring_div set reqe arth morph dspec := match dspec with | None => default_div_spec set reqe arth morph | Some ?t => constr:(t) end.",
            "VernacExtend",
            "67c72d872207fb50fb48da78a6d7b73b0d401edc"
        ],
        [
            "Ltac ring_elements set ext rspec pspec sspec dspec rk := let arth := coerce_to_almost_ring set ext rspec in let ext_r := coerce_to_ring_ext ext in let morph := match rk with | Abstract => abstract_ring_morphism set ext rspec | @Computational ?reqb_ok => match type of arth with | almost_ring_theory ?rO ?rI ?add ?mul ?sub ?opp _ => constr:(IDmorph rO rI add mul sub opp set _ reqb_ok) | _ => fail 2 \"ring anomaly\" end | @Morphism ?m => match type of m with | ring_morph _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ => m | @semi_morph _ _ _ _ _ _ _ _ _ _ _ _ _ => constr:(SRmorph_Rmorph set m) | _ => fail 2 \"ring anomaly\" end | _ => fail 1 \"ill-formed ring kind\" end in let p_spec := gen_ring_pow set arth pspec in let s_spec := gen_ring_sign morph sspec in let d_spec := gen_ring_div set ext_r arth morph dspec in fun f => f arth ext_r morph p_spec s_spec d_spec.",
            "VernacExtend",
            "b57fdb4079988128dff8b5558aff692d968ce2bc"
        ],
        [
            "Ltac ring_lemmas set ext rspec pspec sspec dspec rk := let gen_lemma2 := match pspec with | None => constr:(ring_rw_correct) | Some _ => constr:(ring_rw_pow_correct) end in ring_elements set ext rspec pspec sspec dspec rk ltac:(fun arth ext_r morph p_spec s_spec d_spec => match type of morph with | @ring_morph ?R ?r0 ?rI ?radd ?rmul ?rsub ?ropp ?req ?C ?c0 ?c1 ?cadd ?cmul ?csub ?copp ?ceq_b ?phi => let gen_lemma2_0 := constr:(gen_lemma2 R r0 rI radd rmul rsub ropp req set ext_r arth C c0 c1 cadd cmul csub copp ceq_b phi morph) in match p_spec with | @mkhypo (power_theory _ _ _ ?Cp_phi ?rpow) ?pp_spec => let gen_lemma2_1 := constr:(gen_lemma2_0 _ Cp_phi rpow pp_spec) in match d_spec with | @mkhypo (div_theory _ _ _ _ ?cdiv) ?dd_spec => let gen_lemma2_2 := constr:(gen_lemma2_1 cdiv dd_spec) in match s_spec with | @mkhypo (sign_theory _ _ ?get_sign) ?ss_spec => let lemma2 := constr:(gen_lemma2_2 get_sign ss_spec) in let lemma1 := constr:(ring_correct set ext_r arth morph pp_spec dd_spec) in fun f => f arth ext_r morph lemma1 lemma2 | _ => fail 4 \"ring: bad sign specification\" end | _ => fail 3 \"ring: bad coefficient division specification\" end | _ => fail 2 \"ring: bad power specification\" end | _ => fail 1 \"ring internal error: ring_lemmas, please report\" end).",
            "VernacExtend",
            "b8b2711c8ae43374f89d305e62a512849963218d"
        ],
        [
            "Ltac isnatcst t := match t with O => constr:(true) | S ?p => isnatcst p | _ => constr:(false) end.",
            "VernacExtend",
            "b77e58fb98cb830fc69bba3f80608a652cb4c4ef"
        ],
        [
            "Ltac isPcst t := match t with | xI ?p => isPcst p | xO ?p => isPcst p | xH => constr:(true) | Pos.of_succ_nat ?n => isnatcst n | _ => constr:(false) end.",
            "VernacExtend",
            "3f36b58ceefb0209489e734d872c3b874066255d"
        ],
        [
            "Ltac isNcst t := match t with N0 => constr:(true) | Npos ?p => isPcst p | _ => constr:(false) end.",
            "VernacExtend",
            "4b8838510cfe5dba85343a95605ddd41fa2ec7ab"
        ],
        [
            "Ltac isZcst t := match t with Z0 => constr:(true) | Zpos ?p => isPcst p | Zneg ?p => isPcst p | Z.of_nat ?n => isnatcst n | Z.of_N ?n => isNcst n | _ => constr:(false) end.",
            "VernacExtend",
            "e1f5035a1cc5372c49453423854c1676a0b107c2"
        ]
    ],
    "proofs": [
        {
            "name": "Zth",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact Z.add_0_l.",
                        "VernacExtend",
                        "6da1f3beddc7b40db687de3e911c928b6e695c08"
                    ]
                },
                {
                    "command": [
                        "exact Z.add_comm.",
                        "VernacExtend",
                        "c8ba001a35645d7628b3483286a5ed76ecacf069"
                    ]
                },
                {
                    "command": [
                        "exact Z.add_assoc.",
                        "VernacExtend",
                        "2979bdb427e399e5d2d2fb93f47cf6f0575520b0"
                    ]
                },
                {
                    "command": [
                        "exact Z.mul_1_l.",
                        "VernacExtend",
                        "5388cd4bcfa02097e547e424e109842b42720fc5"
                    ]
                },
                {
                    "command": [
                        "exact Z.mul_comm.",
                        "VernacExtend",
                        "ec3a0b9b1d085d6f7d4d8c22a8c0f86fe53f7501"
                    ]
                },
                {
                    "command": [
                        "exact Z.mul_assoc.",
                        "VernacExtend",
                        "89610cd35c932d852ad0e88394744e13bc8f2064"
                    ]
                },
                {
                    "command": [
                        "exact Z.mul_add_distr_r.",
                        "VernacExtend",
                        "bb84b7801c657a92821afa4f2e2c81d593c679ba"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exact Z.sub_diag.",
                        "VernacExtend",
                        "22b3a4b338458ef9cefcca7c760ddde569d260de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radd_ext3_Proper",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Reqe).",
                        "VernacExtend",
                        "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext3_Proper",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Reqe).",
                        "VernacExtend",
                        "13b3093566a735d2e3348ba5dd18427edb19cc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ropp_ext3_Proper",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "exact (Ropp_ext Reqe).",
                        "VernacExtend",
                        "e013460b2ed7bdd11390b3f84aa58078462220c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_signZ_th",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct c;intros;try discriminate.",
                        "VernacExtend",
                        "2983df7acb9fe2f2679543c83d1cd28b6b212e55"
                    ]
                },
                {
                    "command": [
                        "injection H as <-.",
                        "VernacExtend",
                        "ac20f3cdc891cd244c7fffa81bee3c656b4fe3e7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Zeq_bool.",
                        "VernacExtend",
                        "40bef210a7fd69e0c5fe5aab4d0cc4a8d98b18bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.compare_refl.",
                        "VernacExtend",
                        "322d5eaf4ebd26bb90f54cd680b69c97677fbd07"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsub_ext3_Proper",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "exact (ARsub_ext Rsth Reqe ARth).",
                        "VernacExtend",
                        "598d7a4358fb924db1093bc250a8a51010ad7b94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_gen",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "induction x;simpl.",
                        "VernacExtend",
                        "032ca6881eec9f6ca6ad619919b16fb530146db9"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;destruct x;simpl;norm.",
                        "VernacExtend",
                        "b3f8707cfcab54e663b3ddcdd416b9f490381a10"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;destruct x;simpl;norm.",
                        "VernacExtend",
                        "b3f8707cfcab54e663b3ddcdd416b9f490381a10"
                    ]
                },
                {
                    "command": [
                        "rrefl.",
                        "VernacExtend",
                        "5debc907fd009a10e8fda4465de008675ca96a49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARgen_phiPOS_Psucc",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "induction x;simpl;norm.",
                        "VernacExtend",
                        "6dfb2067df32dcf8133105ae5379be588de0bfd7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;norm.",
                        "VernacExtend",
                        "250fc76d7c350c5c54e1d1d69ad5f47a7d910435"
                    ]
                },
                {
                    "command": [
                        "add_push 1;rrefl.",
                        "VernacExtend",
                        "2ed80b1387626fbfe17d6c398bb2a95af36a4fad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARgen_phiPOS_add",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "induction x;destruct y;simpl;norm.",
                        "VernacExtend",
                        "6c9883a2450fc1c574f6da43354218b724ae5bd0"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_carry_spec.",
                        "VernacExtend",
                        "33819fbb55ccf4ed171a44b989eac0d8b33d081e"
                    ]
                },
                {
                    "command": [
                        "rewrite ARgen_phiPOS_Psucc.",
                        "VernacExtend",
                        "8acb07d1444b10e34dda75858031a447bd76ae1e"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;norm.",
                        "VernacExtend",
                        "250fc76d7c350c5c54e1d1d69ad5f47a7d910435"
                    ]
                },
                {
                    "command": [
                        "add_push (gen_phiPOS1 y);add_push 1;rrefl.",
                        "VernacExtend",
                        "862788e3cf7a665d44281875828edac5815e177b"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;norm;add_push (gen_phiPOS1 y);rrefl.",
                        "VernacExtend",
                        "e8e53285e028880ac7ed3aa411b7b9342a65a2c8"
                    ]
                },
                {
                    "command": [
                        "rewrite ARgen_phiPOS_Psucc;norm;add_push 1;rrefl.",
                        "VernacExtend",
                        "3344fbba9e50850a808de5d3b9195bc533ddedd8"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;norm;add_push(gen_phiPOS1 y); add_push 1;rrefl.",
                        "VernacExtend",
                        "ec3bee074f04360fb579dd25618d76d22bba9e73"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;norm;add_push(gen_phiPOS1 y);rrefl.",
                        "VernacExtend",
                        "e8e53285e028880ac7ed3aa411b7b9342a65a2c8"
                    ]
                },
                {
                    "command": [
                        "add_push 1;rrefl.",
                        "VernacExtend",
                        "2ed80b1387626fbfe17d6c398bb2a95af36a4fad"
                    ]
                },
                {
                    "command": [
                        "rewrite ARgen_phiPOS_Psucc;norm;add_push 1;rrefl.",
                        "VernacExtend",
                        "3344fbba9e50850a808de5d3b9195bc533ddedd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ARgen_phiPOS_mult",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "induction x;intros;simpl;norm.",
                        "VernacExtend",
                        "0398351e0ff91c2333523d6ad2d031c911d5b455"
                    ]
                },
                {
                    "command": [
                        "rewrite ARgen_phiPOS_add;simpl;rewrite IHx;norm.",
                        "VernacExtend",
                        "90c9a72b65c1fd2b1f9d83e09377ec09e3fa180e"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx;rrefl.",
                        "VernacExtend",
                        "253c32a979ebf7ec07b58c34207b8d0fc58f41d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsub_ext4_Proper",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "exact (ARsub_ext Rsth Reqe ARth).",
                        "VernacExtend",
                        "598d7a4358fb924db1093bc250a8a51010ad7b94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_genZ",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "destruct x;simpl; try rewrite (same_gen ARth);rrefl.",
                        "VernacExtend",
                        "3cac8b78102a8456fdbe06b7226319aa19ce88e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_Zeqb_ok",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := Zeq_bool_eq x y H);unfold IDphi in H1.",
                        "VernacExtend",
                        "40a396892feea577ac984805116ba431d4b6872c"
                    ]
                },
                {
                    "command": [
                        "rewrite H1;rrefl.",
                        "VernacExtend",
                        "fd29ade89926cb918f22ea2871473e4c019b169e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiZ1_pos_sub",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pos_sub_spec.",
                        "VernacExtend",
                        "ad39ea5e69a6135dd31841448750ef09af08dff9"
                    ]
                },
                {
                    "command": [
                        "case Pos.compare_spec; intros H; simpl.",
                        "VernacExtend",
                        "0c37646b29bc41424feebed7642bb12054066163"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_def Rth);rrefl.",
                        "VernacExtend",
                        "251daee181bb422a8c8192af2524e9986f48a729"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.sub_add y x H) at 2.",
                        "VernacExtend",
                        "74944d4926b8b4a611d0780b0c691aac5b0539e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "rewrite (ARgen_phiPOS_add ARth);simpl;norm.",
                        "VernacExtend",
                        "a7c8e3f3460a48b5d1291a248785c4a8b7a3b62f"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_def Rth);norm.",
                        "VernacExtend",
                        "db2ec553cbe2a7a9e38754a784917df61b13f02f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.sub_add x y H) at 2.",
                        "VernacExtend",
                        "60e0f9758c72e0cb725ebc48ca4738401b85d753"
                    ]
                },
                {
                    "command": [
                        "rewrite (ARgen_phiPOS_add ARth);simpl;norm.",
                        "VernacExtend",
                        "a7c8e3f3460a48b5d1291a248785c4a8b7a3b62f"
                    ]
                },
                {
                    "command": [
                        "add_push (gen_phiPOS1 (x-y));rewrite (Ropp_def Rth); norm.",
                        "VernacExtend",
                        "3e1efe317c614256f4d51a0ea397576251b57ea8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiZ_add",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros x y; repeat rewrite same_genZ; generalize x y;clear x y.",
                        "VernacExtend",
                        "6f58f3a6347deeb90151001595c16efbb1625c6c"
                    ]
                },
                {
                    "command": [
                        "destruct x, y; simpl; norm.",
                        "VernacExtend",
                        "72d4a37ef0d37854d983731edc9c0397825c3bbd"
                    ]
                },
                {
                    "command": [
                        "apply (ARgen_phiPOS_add ARth).",
                        "VernacExtend",
                        "0af3e96bf490242bbcfe807243f8afdf57e1df1c"
                    ]
                },
                {
                    "command": [
                        "apply gen_phiZ1_pos_sub.",
                        "VernacExtend",
                        "da56795c75b528cc9698631be757e1ddceccd7d0"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiZ1_pos_sub.",
                        "VernacExtend",
                        "a8577c611a168af0e664827ec8379db9e4fda3eb"
                    ]
                },
                {
                    "command": [
                        "apply (Radd_comm Rth).",
                        "VernacExtend",
                        "f19f82d6828abd3ad9de6dcab79e25a60115951a"
                    ]
                },
                {
                    "command": [
                        "rewrite (ARgen_phiPOS_add ARth); norm.",
                        "VernacExtend",
                        "6131f7fe01a6aac2c4cf72e41cf5756dcb0b89f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiZ_mul",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros x y;repeat rewrite same_genZ.",
                        "VernacExtend",
                        "0ebdc358fc31bb6fb4900b2031534e3605ba3d5c"
                    ]
                },
                {
                    "command": [
                        "destruct x;destruct y;simpl;norm; rewrite (ARgen_phiPOS_mult ARth);try (norm;fail).",
                        "VernacExtend",
                        "aa4c2d30740aababd0b67aa70d35ef0600617068"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_opp Rsth Reqe Rth);rrefl.",
                        "VernacExtend",
                        "d270dfe8eaf5dd8fa90349dfb9c70631a6ae2b8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiZ_ext",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros;subst;rrefl.",
                        "VernacExtend",
                        "75221bd96ea7b8b79f3f9baf95d353e5ff6e1e78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiZ_morph",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "assert ( SRmorph : semi_morph 0 1 radd rmul req Z0 (Zpos xH) Z.add Z.mul Zeq_bool gen_phiZ).",
                        "VernacExtend",
                        "ae4cf7889696d26173fde972a3b7768ce5906517"
                    ]
                },
                {
                    "command": [
                        "apply mkRmorph;simpl;try rrefl.",
                        "VernacExtend",
                        "8b579223a8e4c72dd8a0623b65a071ea3b7c4666"
                    ]
                },
                {
                    "command": [
                        "apply gen_phiZ_add.",
                        "VernacExtend",
                        "afa1cb9dc298c424dd2ba754d58e1ef67a1680d9"
                    ]
                },
                {
                    "command": [
                        "apply gen_phiZ_mul.",
                        "VernacExtend",
                        "dd6ecd7b3d4675ede3f3abd267147c0f748732fa"
                    ]
                },
                {
                    "command": [
                        "apply gen_Zeqb_ok.",
                        "VernacExtend",
                        "67b1d0bc61f565e14fe048a33ea24f28b934b303"
                    ]
                },
                {
                    "command": [
                        "apply (Smorph_morph Rsth Reqe Rth Zth SRmorph gen_phiZ_ext).",
                        "VernacExtend",
                        "8b9ca23947bd53bd649bb6f43d7cd9ad2039db66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nth",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact N.add_0_l.",
                        "VernacExtend",
                        "31cf4fd22f1913bc6d26348bb9b7d66f5b1153ae"
                    ]
                },
                {
                    "command": [
                        "exact N.add_comm.",
                        "VernacExtend",
                        "e51411058cc253890ecac805729c5ae2219de4c9"
                    ]
                },
                {
                    "command": [
                        "exact N.add_assoc.",
                        "VernacExtend",
                        "658b0870d63cae76bee8c79b39007c341e0a5f18"
                    ]
                },
                {
                    "command": [
                        "exact N.mul_1_l.",
                        "VernacExtend",
                        "60f55265e27413ad76a30072f4d3e8259aadae62"
                    ]
                },
                {
                    "command": [
                        "exact N.mul_0_l.",
                        "VernacExtend",
                        "d85312e57aa64d478af050bcd8d8b2973498b686"
                    ]
                },
                {
                    "command": [
                        "exact N.mul_comm.",
                        "VernacExtend",
                        "54ce1b415f9e62f748b3de1c26d50e0421a47e5e"
                    ]
                },
                {
                    "command": [
                        "exact N.mul_assoc.",
                        "VernacExtend",
                        "02490376eeed81972fe4aeb83bfe8d842dd405d3"
                    ]
                },
                {
                    "command": [
                        "exact N.mul_add_distr_r.",
                        "VernacExtend",
                        "cd8513be387d08570cd64357e32d4035f0ffe937"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Neqb_ok",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "exact (fun x y => proj1 (N.eqb_eq x y)).",
                        "VernacExtend",
                        "eb7677635d3ee53b47233ff7dc9664b97d6c80b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radd_ext4_Proper",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Reqe).",
                        "VernacExtend",
                        "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext4_Proper",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Reqe).",
                        "VernacExtend",
                        "13b3093566a735d2e3348ba5dd18427edb19cc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_genN",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "destruct x;simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "now rewrite (same_gen Rsth Reqe ARth).",
                        "VernacExtend",
                        "85291a15d94b71c1624baf54c2d733ede7ce5e77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiN_add",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intros x y;repeat rewrite same_genN.",
                        "VernacExtend",
                        "a0956fe4efcf75c5586fa80f141435039c49aac9"
                    ]
                },
                {
                    "command": [
                        "destruct x;destruct y;simpl;norm.",
                        "VernacExtend",
                        "fbf4b92d89d422977aadbc78f2cee6654addd942"
                    ]
                },
                {
                    "command": [
                        "apply (ARgen_phiPOS_add Rsth Reqe ARth).",
                        "VernacExtend",
                        "b2c092bb3c6fa5961b760db01231df5c9182eafe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiN_mult",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros x y;repeat rewrite same_genN.",
                        "VernacExtend",
                        "a0956fe4efcf75c5586fa80f141435039c49aac9"
                    ]
                },
                {
                    "command": [
                        "destruct x;destruct y;simpl;norm.",
                        "VernacExtend",
                        "fbf4b92d89d422977aadbc78f2cee6654addd942"
                    ]
                },
                {
                    "command": [
                        "apply (ARgen_phiPOS_mult Rsth Reqe ARth).",
                        "VernacExtend",
                        "4d6c145df9580afaee9e708b65399c8b924a95ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiN_sub",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "exact gen_phiN_add.",
                        "VernacExtend",
                        "3e959991a58a7eeb21f9923c30a1bda088664c72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiN_morph",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "constructor; simpl; try reflexivity.",
                        "VernacExtend",
                        "479ce962fbcb991a0635ad5aaa13ec40fa0a173e"
                    ]
                },
                {
                    "command": [
                        "apply gen_phiN_add.",
                        "VernacExtend",
                        "b90b8500d22522d28d805d124540cb449aa10d34"
                    ]
                },
                {
                    "command": [
                        "apply gen_phiN_sub.",
                        "VernacExtend",
                        "b80822ef04b4288f384f4d3af9ccf5c0aafb7d16"
                    ]
                },
                {
                    "command": [
                        "apply gen_phiN_mult.",
                        "VernacExtend",
                        "ad052946b8c14d386184894aa22c0a5c06e8d45a"
                    ]
                },
                {
                    "command": [
                        "intros x y EQ.",
                        "VernacExtend",
                        "3a2928b54bbfe9cf5397bff81f125b7a35085f7d"
                    ]
                },
                {
                    "command": [
                        "apply N.eqb_eq in EQ.",
                        "VernacExtend",
                        "87b156131327f57df16b4503ad6836d35e8c9efb"
                    ]
                },
                {
                    "command": [
                        "now subst.",
                        "VernacExtend",
                        "89cc250d34dafb32c3653b2706abafd433151f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radd_ext5_Proper",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Reqe).",
                        "VernacExtend",
                        "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext5_Proper",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Reqe).",
                        "VernacExtend",
                        "13b3093566a735d2e3348ba5dd18427edb19cc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ropp_ext5_Proper",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "exact (Ropp_ext Reqe).",
                        "VernacExtend",
                        "e013460b2ed7bdd11390b3f84aa58078462220c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsub_ext7_Proper",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "exact (ARsub_ext Rsth Reqe ARth).",
                        "VernacExtend",
                        "598d7a4358fb924db1093bc250a8a51010ad7b94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiNword0_ok",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "induction w; simpl; intros; auto.",
                        "VernacExtend",
                        "fa2ad27589e1a986434b0d20d832c97aa3a423db"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "destruct w.",
                        "VernacExtend",
                        "69afe3ff365f611d141c0e713eb6eeb981144a33"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw; trivial.",
                        "VernacExtend",
                        "4053fb21a2f7b1db63eb4eafb83d712475af64da"
                    ]
                },
                {
                    "command": [
                        "apply (ARopp_zero Rsth Reqe ARth).",
                        "VernacExtend",
                        "3030751b08e60e4b48d7a3eedd96a2bd0056d73d"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiNword_cons",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "induction w.",
                        "VernacExtend",
                        "00a39f78c1958c5075f30e53ba2c016aabba0f9e"
                    ]
                },
                {
                    "command": [
                        "destruct n; simpl; norm.",
                        "VernacExtend",
                        "06cadeb250440a27cd1fcafc11a308b8f30f7ac8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n; norm.",
                        "VernacExtend",
                        "afc66d06713aa8281f2ef76cbd90331ce7fb3d50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiNword_Nwcons",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "destruct w; intros.",
                        "VernacExtend",
                        "0977d1bff7ec0c6434abfb4b20f2bb18c244ce67"
                    ]
                },
                {
                    "command": [
                        "destruct n; norm.",
                        "VernacExtend",
                        "afc66d06713aa8281f2ef76cbd90331ce7fb3d50"
                    ]
                },
                {
                    "command": [
                        "unfold Nwcons.",
                        "VernacExtend",
                        "d48243a9478c8035d21ca13085a1f27a029ba89e"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "0af074a296b5f98a5345bc0592f765007393f37c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiNword_ok",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "induction w1; intros.",
                        "VernacExtend",
                        "4921c5c2b831be275ad810e5b6190ac545c5aa5b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (gen_phiNword0_ok _ H).",
                        "VernacExtend",
                        "1de9592b08d52636e79fa7e78d6d7175c2084c6f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "0af074a296b5f98a5345bc0592f765007393f37c"
                    ]
                },
                {
                    "command": [
                        "destruct w2.",
                        "VernacExtend",
                        "1e860dfd5a330130c73eb1a8633a66ff30ebf308"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct a; try discriminate.",
                        "VernacExtend",
                        "fde6b0aa5849f5ce2cd41eb99544a829f1038d46"
                    ]
                },
                {
                    "command": [
                        "rewrite (gen_phiNword0_ok _ H).",
                        "VernacExtend",
                        "1de9592b08d52636e79fa7e78d6d7175c2084c6f"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "0af074a296b5f98a5345bc0592f765007393f37c"
                    ]
                },
                {
                    "command": [
                        "case_eq (N.eqb a n); intros H0.",
                        "VernacExtend",
                        "bb8c6bceb3290fa8ae5f32ef5a5fbfaa00595252"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "apply N.eqb_eq in H0.",
                        "VernacExtend",
                        "e7be6d1636b92dd351106b02bcdd3711fb8163a5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHw1 _ H).",
                        "VernacExtend",
                        "d9c2565f10bc40bb97e3c1ad5efecd1837e255e8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H; discriminate H.",
                        "VernacExtend",
                        "745b04536c318577f2186e845aaf628c22f47d42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nwadd_ok",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "induction x; intros.",
                        "VernacExtend",
                        "967005fa252895ab470aa9876d40c37f363bf6d6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "simpl Nwadd; norm.",
                        "VernacExtend",
                        "fe7e12b75c2dd83c8adc69d32c796d5a43fed94a"
                    ]
                },
                {
                    "command": [
                        "simpl Nwadd.",
                        "VernacExtend",
                        "6fa1eef5c42b481e811fb33b680c3b3f7deb7920"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "debe1512efa74c318a13752b6ea06f4b87d329f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun sreq => gen_phiN_add Rsth sreq (ARth_SRth ARth)) by (destruct Reqe; constructor; trivial).",
                        "VernacExtend",
                        "e82d4b36d5b2a3e2cfc62c264a42100c118dcf62"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "add_push (- gen_phiNword x); reflexivity.",
                        "VernacExtend",
                        "527b827c980b87b7b3dfbb6c06f403065c1ef5d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nwopp_ok",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold Nwopp; simpl.",
                        "VernacExtend",
                        "bf10e6b8ad3c3bab40f655a3ecf9a445f27428f9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiNword_Nwcons; norm.",
                        "VernacExtend",
                        "e012c281fa0b1072722f4f8ba17cf03256bb825b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nwscal_ok",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "induction x; intros.",
                        "VernacExtend",
                        "967005fa252895ab470aa9876d40c37f363bf6d6"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "simpl Nwscal.",
                        "VernacExtend",
                        "de98c1c39944eeba341ecc0ea28e6bb2e08bc44d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "debe1512efa74c318a13752b6ea06f4b87d329f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun sreq => gen_phiN_mult Rsth sreq (ARth_SRth ARth)) by (destruct Reqe; constructor; trivial).",
                        "VernacExtend",
                        "6d9a5e247ba321b9214a24c22f5c8799be4c6ae7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Nwmul_ok",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "induction x; intros.",
                        "VernacExtend",
                        "967005fa252895ab470aa9876d40c37f363bf6d6"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "simpl Nwmul.",
                        "VernacExtend",
                        "8e0ad5f3f01887060bbc85920028ad5f444e8777"
                    ]
                },
                {
                    "command": [
                        "rewrite Nwopp_ok.",
                        "VernacExtend",
                        "f1ecb23aedfb2a8f36475725c7997659e8bc1950"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "0af074a296b5f98a5345bc0592f765007393f37c"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "simpl Nwmul.",
                        "VernacExtend",
                        "8e0ad5f3f01887060bbc85920028ad5f444e8777"
                    ]
                },
                {
                    "command": [
                        "unfold Nwsub.",
                        "VernacExtend",
                        "4d39e6623f2e1f7d4ae66ca03cc28ab750cdad57"
                    ]
                },
                {
                    "command": [
                        "rewrite Nwadd_ok.",
                        "VernacExtend",
                        "574e536b3cbde407657bffe6fbf6519a7f0fc547"
                    ]
                },
                {
                    "command": [
                        "rewrite Nwscal_ok.",
                        "VernacExtend",
                        "0568d5824636172e2beff21b114b8f3453c90841"
                    ]
                },
                {
                    "command": [
                        "rewrite Nwopp_ok.",
                        "VernacExtend",
                        "f1ecb23aedfb2a8f36475725c7997659e8bc1950"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "rewrite gen_phiNword_cons.",
                        "VernacExtend",
                        "0af074a296b5f98a5345bc0592f765007393f37c"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_phiNword_morph",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "exact Nwadd_ok.",
                        "VernacExtend",
                        "225471b6f504e47214dc96c9e8dc274b870f26d3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Nwsub.",
                        "VernacExtend",
                        "4d39e6623f2e1f7d4ae66ca03cc28ab750cdad57"
                    ]
                },
                {
                    "command": [
                        "rewrite Nwadd_ok.",
                        "VernacExtend",
                        "574e536b3cbde407657bffe6fbf6519a7f0fc547"
                    ]
                },
                {
                    "command": [
                        "rewrite Nwopp_ok.",
                        "VernacExtend",
                        "f1ecb23aedfb2a8f36475725c7997659e8bc1950"
                    ]
                },
                {
                    "command": [
                        "norm.",
                        "VernacExtend",
                        "1334373f0d916948ad2b3da6a6a093436489f73d"
                    ]
                },
                {
                    "command": [
                        "exact Nwmul_ok.",
                        "VernacExtend",
                        "a25a02be5e653f7479dedb97d1d14ce5b285be09"
                    ]
                },
                {
                    "command": [
                        "exact Nwopp_ok.",
                        "VernacExtend",
                        "d48fc97b690ef9d7048989146481ba4320ef6ded"
                    ]
                },
                {
                    "command": [
                        "exact gen_phiNword_ok.",
                        "VernacExtend",
                        "90abed691e5e0c83acb1292beba92f232a7822d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "radd_ext_Proper",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "exact (Radd_ext Reqe).",
                        "VernacExtend",
                        "1fda4e22a236d9c35f03c6fb82736639692dd9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmul_ext_Proper",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "exact (Rmul_ext Reqe).",
                        "VernacExtend",
                        "13b3093566a735d2e3348ba5dd18427edb19cc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ropp_ext_Proper",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "exact (Ropp_ext Reqe).",
                        "VernacExtend",
                        "e013460b2ed7bdd11390b3f84aa58078462220c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rsub_ext_Proper",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "exact (ARsub_ext Rsth Reqe ARth).",
                        "VernacExtend",
                        "598d7a4358fb924db1093bc250a8a51010ad7b94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triv_div_th",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros a b;unfold triv_div.",
                        "VernacExtend",
                        "4e706e329ed43c461ac7302fc4d946393126d93e"
                    ]
                },
                {
                    "command": [
                        "assert (X:= morph.(morph_eq) a b);destruct (ceqb a b).",
                        "VernacExtend",
                        "05c71c815fd48bba2da1a4be6f0e31fbcf14cddc"
                    ]
                },
                {
                    "command": [
                        "Esimpl.",
                        "VernacExtend",
                        "3a252c15f70179de488ce1e48e727af833faeb30"
                    ]
                },
                {
                    "command": [
                        "rewrite X; trivial.",
                        "VernacExtend",
                        "7a8a6f5f4179eed6dfa089014c9bde6a4c61658b"
                    ]
                },
                {
                    "command": [
                        "rsimpl.",
                        "VernacExtend",
                        "33aaaa4fff13f2b6581505230c4ac0294a17d021"
                    ]
                },
                {
                    "command": [
                        "Esimpl; rsimpl.",
                        "VernacExtend",
                        "215cd5848fca325fe72e03bf99cbafd45cbc586b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ztriv_div_th",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros; generalize (Z.quotrem_eq a b); case Z.quotrem; intros; subst.",
                        "VernacExtend",
                        "f9264d3c48585792990c4a465612b61ec7170113"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_comm; rsimpl.",
                        "VernacExtend",
                        "f3d156a8e3b34701a2141bc477e803e21fb75da0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ntriv_div_th",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros; generalize (N.div_eucl_spec a b); case N.div_eucl; intros; subst.",
                        "VernacExtend",
                        "ca23a0027881fac4f4a3464d4940d1bf09e893b9"
                    ]
                },
                {
                    "command": [
                        "rewrite N.mul_comm; rsimpl.",
                        "VernacExtend",
                        "31fed2c773627b6887983c9a6d2b74da8ea17d31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}